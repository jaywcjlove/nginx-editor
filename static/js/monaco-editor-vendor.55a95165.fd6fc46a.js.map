{"version":3,"file":"static/js/monaco-editor-vendor.55a95165.fd6fc46a.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/editor/browser/view/renderingContext.js","../node_modules/monaco-editor/esm/vs/editor/browser/view/viewController.js","../node_modules/monaco-editor/esm/vs/editor/browser/view/viewLayer.js","../node_modules/monaco-editor/esm/vs/editor/browser/view/viewOverlays.js","../node_modules/monaco-editor/esm/vs/editor/browser/view/viewPart.js","../node_modules/monaco-editor/esm/vs/editor/browser/view/viewUserInputEvents.js","../node_modules/monaco-editor/esm/vs/editor/browser/widget/codeEditorContributions.js","../node_modules/monaco-editor/esm/vs/editor/browser/widget/codeEditorWidget.js","../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffReview.js","../node_modules/monaco-editor/esm/vs/editor/browser/widget/inlineDiffMargin.js","../node_modules/monaco-editor/esm/vs/editor/browser/widget/workerBasedDocumentDiffProvider.js","../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditorWidget.js","../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffNavigator.js","../node_modules/monaco-editor/esm/vs/editor/browser/widget/embeddedCodeEditorWidget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class RestrictedRenderingContext {\n    constructor(viewLayout, viewportData) {\n        this._restrictedRenderingContextBrand = undefined;\n        this._viewLayout = viewLayout;\n        this.viewportData = viewportData;\n        this.scrollWidth = this._viewLayout.getScrollWidth();\n        this.scrollHeight = this._viewLayout.getScrollHeight();\n        this.visibleRange = this.viewportData.visibleRange;\n        this.bigNumbersDelta = this.viewportData.bigNumbersDelta;\n        const vInfo = this._viewLayout.getCurrentViewport();\n        this.scrollTop = vInfo.top;\n        this.scrollLeft = vInfo.left;\n        this.viewportWidth = vInfo.width;\n        this.viewportHeight = vInfo.height;\n    }\n    getScrolledTopFromAbsoluteTop(absoluteTop) {\n        return absoluteTop - this.scrollTop;\n    }\n    getVerticalOffsetForLineNumber(lineNumber, includeViewZones) {\n        return this._viewLayout.getVerticalOffsetForLineNumber(lineNumber, includeViewZones);\n    }\n    getVerticalOffsetAfterLineNumber(lineNumber, includeViewZones) {\n        return this._viewLayout.getVerticalOffsetAfterLineNumber(lineNumber, includeViewZones);\n    }\n    getDecorationsInViewport() {\n        return this.viewportData.getDecorationsInViewport();\n    }\n}\nexport class RenderingContext extends RestrictedRenderingContext {\n    constructor(viewLayout, viewportData, viewLines) {\n        super(viewLayout, viewportData);\n        this._renderingContextBrand = undefined;\n        this._viewLines = viewLines;\n    }\n    linesVisibleRangesForRange(range, includeNewLines) {\n        return this._viewLines.linesVisibleRangesForRange(range, includeNewLines);\n    }\n    visibleRangeForPosition(position) {\n        return this._viewLines.visibleRangeForPosition(position);\n    }\n}\nexport class LineVisibleRanges {\n    constructor(outsideRenderedLine, lineNumber, ranges) {\n        this.outsideRenderedLine = outsideRenderedLine;\n        this.lineNumber = lineNumber;\n        this.ranges = ranges;\n    }\n}\nexport class HorizontalRange {\n    static from(ranges) {\n        const result = new Array(ranges.length);\n        for (let i = 0, len = ranges.length; i < len; i++) {\n            const range = ranges[i];\n            result[i] = new HorizontalRange(range.left, range.width);\n        }\n        return result;\n    }\n    constructor(left, width) {\n        this._horizontalRangeBrand = undefined;\n        this.left = Math.round(left);\n        this.width = Math.round(width);\n    }\n    toString() {\n        return `[${this.left},${this.width}]`;\n    }\n}\nexport class FloatHorizontalRange {\n    constructor(left, width) {\n        this._floatHorizontalRangeBrand = undefined;\n        this.left = left;\n        this.width = width;\n    }\n    toString() {\n        return `[${this.left},${this.width}]`;\n    }\n    static compare(a, b) {\n        return a.left - b.left;\n    }\n}\nexport class HorizontalPosition {\n    constructor(outsideRenderedLine, left) {\n        this.outsideRenderedLine = outsideRenderedLine;\n        this.originalLeft = left;\n        this.left = Math.round(this.originalLeft);\n    }\n}\nexport class VisibleRanges {\n    constructor(outsideRenderedLine, ranges) {\n        this.outsideRenderedLine = outsideRenderedLine;\n        this.ranges = ranges;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CoreNavigationCommands } from '../coreCommands.js';\nimport { Position } from '../../common/core/position.js';\nimport * as platform from '../../../base/common/platform.js';\nexport class ViewController {\n    constructor(configuration, viewModel, userInputEvents, commandDelegate) {\n        this.configuration = configuration;\n        this.viewModel = viewModel;\n        this.userInputEvents = userInputEvents;\n        this.commandDelegate = commandDelegate;\n    }\n    paste(text, pasteOnNewLine, multicursorText, mode) {\n        this.commandDelegate.paste(text, pasteOnNewLine, multicursorText, mode);\n    }\n    type(text) {\n        this.commandDelegate.type(text);\n    }\n    compositionType(text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) {\n        this.commandDelegate.compositionType(text, replacePrevCharCnt, replaceNextCharCnt, positionDelta);\n    }\n    compositionStart() {\n        this.commandDelegate.startComposition();\n    }\n    compositionEnd() {\n        this.commandDelegate.endComposition();\n    }\n    cut() {\n        this.commandDelegate.cut();\n    }\n    setSelection(modelSelection) {\n        CoreNavigationCommands.SetSelection.runCoreEditorCommand(this.viewModel, {\n            source: 'keyboard',\n            selection: modelSelection\n        });\n    }\n    _validateViewColumn(viewPosition) {\n        const minColumn = this.viewModel.getLineMinColumn(viewPosition.lineNumber);\n        if (viewPosition.column < minColumn) {\n            return new Position(viewPosition.lineNumber, minColumn);\n        }\n        return viewPosition;\n    }\n    _hasMulticursorModifier(data) {\n        switch (this.configuration.options.get(74 /* EditorOption.multiCursorModifier */)) {\n            case 'altKey':\n                return data.altKey;\n            case 'ctrlKey':\n                return data.ctrlKey;\n            case 'metaKey':\n                return data.metaKey;\n            default:\n                return false;\n        }\n    }\n    _hasNonMulticursorModifier(data) {\n        switch (this.configuration.options.get(74 /* EditorOption.multiCursorModifier */)) {\n            case 'altKey':\n                return data.ctrlKey || data.metaKey;\n            case 'ctrlKey':\n                return data.altKey || data.metaKey;\n            case 'metaKey':\n                return data.ctrlKey || data.altKey;\n            default:\n                return false;\n        }\n    }\n    dispatchMouse(data) {\n        const options = this.configuration.options;\n        const selectionClipboardIsOn = (platform.isLinux && options.get(101 /* EditorOption.selectionClipboard */));\n        const columnSelection = options.get(19 /* EditorOption.columnSelection */);\n        if (data.middleButton && !selectionClipboardIsOn) {\n            this._columnSelect(data.position, data.mouseColumn, data.inSelectionMode);\n        }\n        else if (data.startedOnLineNumbers) {\n            // If the dragging started on the gutter, then have operations work on the entire line\n            if (this._hasMulticursorModifier(data)) {\n                if (data.inSelectionMode) {\n                    this._lastCursorLineSelect(data.position, data.revealType);\n                }\n                else {\n                    this._createCursor(data.position, true);\n                }\n            }\n            else {\n                if (data.inSelectionMode) {\n                    this._lineSelectDrag(data.position, data.revealType);\n                }\n                else {\n                    this._lineSelect(data.position, data.revealType);\n                }\n            }\n        }\n        else if (data.mouseDownCount >= 4) {\n            this._selectAll();\n        }\n        else if (data.mouseDownCount === 3) {\n            if (this._hasMulticursorModifier(data)) {\n                if (data.inSelectionMode) {\n                    this._lastCursorLineSelectDrag(data.position, data.revealType);\n                }\n                else {\n                    this._lastCursorLineSelect(data.position, data.revealType);\n                }\n            }\n            else {\n                if (data.inSelectionMode) {\n                    this._lineSelectDrag(data.position, data.revealType);\n                }\n                else {\n                    this._lineSelect(data.position, data.revealType);\n                }\n            }\n        }\n        else if (data.mouseDownCount === 2) {\n            if (!data.onInjectedText) {\n                if (this._hasMulticursorModifier(data)) {\n                    this._lastCursorWordSelect(data.position, data.revealType);\n                }\n                else {\n                    if (data.inSelectionMode) {\n                        this._wordSelectDrag(data.position, data.revealType);\n                    }\n                    else {\n                        this._wordSelect(data.position, data.revealType);\n                    }\n                }\n            }\n        }\n        else {\n            if (this._hasMulticursorModifier(data)) {\n                if (!this._hasNonMulticursorModifier(data)) {\n                    if (data.shiftKey) {\n                        this._columnSelect(data.position, data.mouseColumn, true);\n                    }\n                    else {\n                        // Do multi-cursor operations only when purely alt is pressed\n                        if (data.inSelectionMode) {\n                            this._lastCursorMoveToSelect(data.position, data.revealType);\n                        }\n                        else {\n                            this._createCursor(data.position, false);\n                        }\n                    }\n                }\n            }\n            else {\n                if (data.inSelectionMode) {\n                    if (data.altKey) {\n                        this._columnSelect(data.position, data.mouseColumn, true);\n                    }\n                    else {\n                        if (columnSelection) {\n                            this._columnSelect(data.position, data.mouseColumn, true);\n                        }\n                        else {\n                            this._moveToSelect(data.position, data.revealType);\n                        }\n                    }\n                }\n                else {\n                    this.moveTo(data.position, data.revealType);\n                }\n            }\n        }\n    }\n    _usualArgs(viewPosition, revealType) {\n        viewPosition = this._validateViewColumn(viewPosition);\n        return {\n            source: 'mouse',\n            position: this._convertViewToModelPosition(viewPosition),\n            viewPosition,\n            revealType\n        };\n    }\n    moveTo(viewPosition, revealType) {\n        CoreNavigationCommands.MoveTo.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _moveToSelect(viewPosition, revealType) {\n        CoreNavigationCommands.MoveToSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _columnSelect(viewPosition, mouseColumn, doColumnSelect) {\n        viewPosition = this._validateViewColumn(viewPosition);\n        CoreNavigationCommands.ColumnSelect.runCoreEditorCommand(this.viewModel, {\n            source: 'mouse',\n            position: this._convertViewToModelPosition(viewPosition),\n            viewPosition: viewPosition,\n            mouseColumn: mouseColumn,\n            doColumnSelect: doColumnSelect\n        });\n    }\n    _createCursor(viewPosition, wholeLine) {\n        viewPosition = this._validateViewColumn(viewPosition);\n        CoreNavigationCommands.CreateCursor.runCoreEditorCommand(this.viewModel, {\n            source: 'mouse',\n            position: this._convertViewToModelPosition(viewPosition),\n            viewPosition: viewPosition,\n            wholeLine: wholeLine\n        });\n    }\n    _lastCursorMoveToSelect(viewPosition, revealType) {\n        CoreNavigationCommands.LastCursorMoveToSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _wordSelect(viewPosition, revealType) {\n        CoreNavigationCommands.WordSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _wordSelectDrag(viewPosition, revealType) {\n        CoreNavigationCommands.WordSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lastCursorWordSelect(viewPosition, revealType) {\n        CoreNavigationCommands.LastCursorWordSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lineSelect(viewPosition, revealType) {\n        CoreNavigationCommands.LineSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lineSelectDrag(viewPosition, revealType) {\n        CoreNavigationCommands.LineSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lastCursorLineSelect(viewPosition, revealType) {\n        CoreNavigationCommands.LastCursorLineSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lastCursorLineSelectDrag(viewPosition, revealType) {\n        CoreNavigationCommands.LastCursorLineSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _selectAll() {\n        CoreNavigationCommands.SelectAll.runCoreEditorCommand(this.viewModel, { source: 'mouse' });\n    }\n    // ----------------------\n    _convertViewToModelPosition(viewPosition) {\n        return this.viewModel.coordinatesConverter.convertViewPositionToModelPosition(viewPosition);\n    }\n    emitKeyDown(e) {\n        this.userInputEvents.emitKeyDown(e);\n    }\n    emitKeyUp(e) {\n        this.userInputEvents.emitKeyUp(e);\n    }\n    emitContextMenu(e) {\n        this.userInputEvents.emitContextMenu(e);\n    }\n    emitMouseMove(e) {\n        this.userInputEvents.emitMouseMove(e);\n    }\n    emitMouseLeave(e) {\n        this.userInputEvents.emitMouseLeave(e);\n    }\n    emitMouseUp(e) {\n        this.userInputEvents.emitMouseUp(e);\n    }\n    emitMouseDown(e) {\n        this.userInputEvents.emitMouseDown(e);\n    }\n    emitMouseDrag(e) {\n        this.userInputEvents.emitMouseDrag(e);\n    }\n    emitMouseDrop(e) {\n        this.userInputEvents.emitMouseDrop(e);\n    }\n    emitMouseDropCanceled() {\n        this.userInputEvents.emitMouseDropCanceled();\n    }\n    emitMouseWheel(e) {\n        this.userInputEvents.emitMouseWheel(e);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { StringBuilder } from '../../common/core/stringBuilder.js';\nexport class RenderedLinesCollection {\n    constructor(createLine) {\n        this._createLine = createLine;\n        this._set(1, []);\n    }\n    flush() {\n        this._set(1, []);\n    }\n    _set(rendLineNumberStart, lines) {\n        this._lines = lines;\n        this._rendLineNumberStart = rendLineNumberStart;\n    }\n    _get() {\n        return {\n            rendLineNumberStart: this._rendLineNumberStart,\n            lines: this._lines\n        };\n    }\n    /**\n     * @returns Inclusive line number that is inside this collection\n     */\n    getStartLineNumber() {\n        return this._rendLineNumberStart;\n    }\n    /**\n     * @returns Inclusive line number that is inside this collection\n     */\n    getEndLineNumber() {\n        return this._rendLineNumberStart + this._lines.length - 1;\n    }\n    getCount() {\n        return this._lines.length;\n    }\n    getLine(lineNumber) {\n        const lineIndex = lineNumber - this._rendLineNumberStart;\n        if (lineIndex < 0 || lineIndex >= this._lines.length) {\n            throw new Error('Illegal value for lineNumber');\n        }\n        return this._lines[lineIndex];\n    }\n    /**\n     * @returns Lines that were removed from this collection\n     */\n    onLinesDeleted(deleteFromLineNumber, deleteToLineNumber) {\n        if (this.getCount() === 0) {\n            // no lines\n            return null;\n        }\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        if (deleteToLineNumber < startLineNumber) {\n            // deleting above the viewport\n            const deleteCnt = deleteToLineNumber - deleteFromLineNumber + 1;\n            this._rendLineNumberStart -= deleteCnt;\n            return null;\n        }\n        if (deleteFromLineNumber > endLineNumber) {\n            // deleted below the viewport\n            return null;\n        }\n        // Record what needs to be deleted\n        let deleteStartIndex = 0;\n        let deleteCount = 0;\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - this._rendLineNumberStart;\n            if (deleteFromLineNumber <= lineNumber && lineNumber <= deleteToLineNumber) {\n                // this is a line to be deleted\n                if (deleteCount === 0) {\n                    // this is the first line to be deleted\n                    deleteStartIndex = lineIndex;\n                    deleteCount = 1;\n                }\n                else {\n                    deleteCount++;\n                }\n            }\n        }\n        // Adjust this._rendLineNumberStart for lines deleted above\n        if (deleteFromLineNumber < startLineNumber) {\n            // Something was deleted above\n            let deleteAboveCount = 0;\n            if (deleteToLineNumber < startLineNumber) {\n                // the entire deleted lines are above\n                deleteAboveCount = deleteToLineNumber - deleteFromLineNumber + 1;\n            }\n            else {\n                deleteAboveCount = startLineNumber - deleteFromLineNumber;\n            }\n            this._rendLineNumberStart -= deleteAboveCount;\n        }\n        const deleted = this._lines.splice(deleteStartIndex, deleteCount);\n        return deleted;\n    }\n    onLinesChanged(changeFromLineNumber, changeCount) {\n        const changeToLineNumber = changeFromLineNumber + changeCount - 1;\n        if (this.getCount() === 0) {\n            // no lines\n            return false;\n        }\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        let someoneNotified = false;\n        for (let changedLineNumber = changeFromLineNumber; changedLineNumber <= changeToLineNumber; changedLineNumber++) {\n            if (changedLineNumber >= startLineNumber && changedLineNumber <= endLineNumber) {\n                // Notify the line\n                this._lines[changedLineNumber - this._rendLineNumberStart].onContentChanged();\n                someoneNotified = true;\n            }\n        }\n        return someoneNotified;\n    }\n    onLinesInserted(insertFromLineNumber, insertToLineNumber) {\n        if (this.getCount() === 0) {\n            // no lines\n            return null;\n        }\n        const insertCnt = insertToLineNumber - insertFromLineNumber + 1;\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        if (insertFromLineNumber <= startLineNumber) {\n            // inserting above the viewport\n            this._rendLineNumberStart += insertCnt;\n            return null;\n        }\n        if (insertFromLineNumber > endLineNumber) {\n            // inserting below the viewport\n            return null;\n        }\n        if (insertCnt + insertFromLineNumber > endLineNumber) {\n            // insert inside the viewport in such a way that all remaining lines are pushed outside\n            const deleted = this._lines.splice(insertFromLineNumber - this._rendLineNumberStart, endLineNumber - insertFromLineNumber + 1);\n            return deleted;\n        }\n        // insert inside the viewport, push out some lines, but not all remaining lines\n        const newLines = [];\n        for (let i = 0; i < insertCnt; i++) {\n            newLines[i] = this._createLine();\n        }\n        const insertIndex = insertFromLineNumber - this._rendLineNumberStart;\n        const beforeLines = this._lines.slice(0, insertIndex);\n        const afterLines = this._lines.slice(insertIndex, this._lines.length - insertCnt);\n        const deletedLines = this._lines.slice(this._lines.length - insertCnt, this._lines.length);\n        this._lines = beforeLines.concat(newLines).concat(afterLines);\n        return deletedLines;\n    }\n    onTokensChanged(ranges) {\n        if (this.getCount() === 0) {\n            // no lines\n            return false;\n        }\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        let notifiedSomeone = false;\n        for (let i = 0, len = ranges.length; i < len; i++) {\n            const rng = ranges[i];\n            if (rng.toLineNumber < startLineNumber || rng.fromLineNumber > endLineNumber) {\n                // range outside viewport\n                continue;\n            }\n            const from = Math.max(startLineNumber, rng.fromLineNumber);\n            const to = Math.min(endLineNumber, rng.toLineNumber);\n            for (let lineNumber = from; lineNumber <= to; lineNumber++) {\n                const lineIndex = lineNumber - this._rendLineNumberStart;\n                this._lines[lineIndex].onTokensChanged();\n                notifiedSomeone = true;\n            }\n        }\n        return notifiedSomeone;\n    }\n}\nexport class VisibleLinesCollection {\n    constructor(host) {\n        this._host = host;\n        this.domNode = this._createDomNode();\n        this._linesCollection = new RenderedLinesCollection(() => this._host.createVisibleLine());\n    }\n    _createDomNode() {\n        const domNode = createFastDomNode(document.createElement('div'));\n        domNode.setClassName('view-layer');\n        domNode.setPosition('absolute');\n        domNode.domNode.setAttribute('role', 'presentation');\n        domNode.domNode.setAttribute('aria-hidden', 'true');\n        return domNode;\n    }\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        if (e.hasChanged(138 /* EditorOption.layoutInfo */)) {\n            return true;\n        }\n        return false;\n    }\n    onFlushed(e) {\n        this._linesCollection.flush();\n        // No need to clear the dom node because a full .innerHTML will occur in ViewLayerRenderer._render\n        return true;\n    }\n    onLinesChanged(e) {\n        return this._linesCollection.onLinesChanged(e.fromLineNumber, e.count);\n    }\n    onLinesDeleted(e) {\n        const deleted = this._linesCollection.onLinesDeleted(e.fromLineNumber, e.toLineNumber);\n        if (deleted) {\n            // Remove from DOM\n            for (let i = 0, len = deleted.length; i < len; i++) {\n                const lineDomNode = deleted[i].getDomNode();\n                if (lineDomNode) {\n                    this.domNode.domNode.removeChild(lineDomNode);\n                }\n            }\n        }\n        return true;\n    }\n    onLinesInserted(e) {\n        const deleted = this._linesCollection.onLinesInserted(e.fromLineNumber, e.toLineNumber);\n        if (deleted) {\n            // Remove from DOM\n            for (let i = 0, len = deleted.length; i < len; i++) {\n                const lineDomNode = deleted[i].getDomNode();\n                if (lineDomNode) {\n                    this.domNode.domNode.removeChild(lineDomNode);\n                }\n            }\n        }\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onTokensChanged(e) {\n        return this._linesCollection.onTokensChanged(e.ranges);\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // ---- end view event handlers\n    getStartLineNumber() {\n        return this._linesCollection.getStartLineNumber();\n    }\n    getEndLineNumber() {\n        return this._linesCollection.getEndLineNumber();\n    }\n    getVisibleLine(lineNumber) {\n        return this._linesCollection.getLine(lineNumber);\n    }\n    renderLines(viewportData) {\n        const inp = this._linesCollection._get();\n        const renderer = new ViewLayerRenderer(this.domNode.domNode, this._host, viewportData);\n        const ctx = {\n            rendLineNumberStart: inp.rendLineNumberStart,\n            lines: inp.lines,\n            linesLength: inp.lines.length\n        };\n        // Decide if this render will do a single update (single large .innerHTML) or many updates (inserting/removing dom nodes)\n        const resCtx = renderer.render(ctx, viewportData.startLineNumber, viewportData.endLineNumber, viewportData.relativeVerticalOffset);\n        this._linesCollection._set(resCtx.rendLineNumberStart, resCtx.lines);\n    }\n}\nclass ViewLayerRenderer {\n    constructor(domNode, host, viewportData) {\n        this.domNode = domNode;\n        this.host = host;\n        this.viewportData = viewportData;\n    }\n    render(inContext, startLineNumber, stopLineNumber, deltaTop) {\n        const ctx = {\n            rendLineNumberStart: inContext.rendLineNumberStart,\n            lines: inContext.lines.slice(0),\n            linesLength: inContext.linesLength\n        };\n        if ((ctx.rendLineNumberStart + ctx.linesLength - 1 < startLineNumber) || (stopLineNumber < ctx.rendLineNumberStart)) {\n            // There is no overlap whatsoever\n            ctx.rendLineNumberStart = startLineNumber;\n            ctx.linesLength = stopLineNumber - startLineNumber + 1;\n            ctx.lines = [];\n            for (let x = startLineNumber; x <= stopLineNumber; x++) {\n                ctx.lines[x - startLineNumber] = this.host.createVisibleLine();\n            }\n            this._finishRendering(ctx, true, deltaTop);\n            return ctx;\n        }\n        // Update lines which will remain untouched\n        this._renderUntouchedLines(ctx, Math.max(startLineNumber - ctx.rendLineNumberStart, 0), Math.min(stopLineNumber - ctx.rendLineNumberStart, ctx.linesLength - 1), deltaTop, startLineNumber);\n        if (ctx.rendLineNumberStart > startLineNumber) {\n            // Insert lines before\n            const fromLineNumber = startLineNumber;\n            const toLineNumber = Math.min(stopLineNumber, ctx.rendLineNumberStart - 1);\n            if (fromLineNumber <= toLineNumber) {\n                this._insertLinesBefore(ctx, fromLineNumber, toLineNumber, deltaTop, startLineNumber);\n                ctx.linesLength += toLineNumber - fromLineNumber + 1;\n            }\n        }\n        else if (ctx.rendLineNumberStart < startLineNumber) {\n            // Remove lines before\n            const removeCnt = Math.min(ctx.linesLength, startLineNumber - ctx.rendLineNumberStart);\n            if (removeCnt > 0) {\n                this._removeLinesBefore(ctx, removeCnt);\n                ctx.linesLength -= removeCnt;\n            }\n        }\n        ctx.rendLineNumberStart = startLineNumber;\n        if (ctx.rendLineNumberStart + ctx.linesLength - 1 < stopLineNumber) {\n            // Insert lines after\n            const fromLineNumber = ctx.rendLineNumberStart + ctx.linesLength;\n            const toLineNumber = stopLineNumber;\n            if (fromLineNumber <= toLineNumber) {\n                this._insertLinesAfter(ctx, fromLineNumber, toLineNumber, deltaTop, startLineNumber);\n                ctx.linesLength += toLineNumber - fromLineNumber + 1;\n            }\n        }\n        else if (ctx.rendLineNumberStart + ctx.linesLength - 1 > stopLineNumber) {\n            // Remove lines after\n            const fromLineNumber = Math.max(0, stopLineNumber - ctx.rendLineNumberStart + 1);\n            const toLineNumber = ctx.linesLength - 1;\n            const removeCnt = toLineNumber - fromLineNumber + 1;\n            if (removeCnt > 0) {\n                this._removeLinesAfter(ctx, removeCnt);\n                ctx.linesLength -= removeCnt;\n            }\n        }\n        this._finishRendering(ctx, false, deltaTop);\n        return ctx;\n    }\n    _renderUntouchedLines(ctx, startIndex, endIndex, deltaTop, deltaLN) {\n        const rendLineNumberStart = ctx.rendLineNumberStart;\n        const lines = ctx.lines;\n        for (let i = startIndex; i <= endIndex; i++) {\n            const lineNumber = rendLineNumberStart + i;\n            lines[i].layoutLine(lineNumber, deltaTop[lineNumber - deltaLN]);\n        }\n    }\n    _insertLinesBefore(ctx, fromLineNumber, toLineNumber, deltaTop, deltaLN) {\n        const newLines = [];\n        let newLinesLen = 0;\n        for (let lineNumber = fromLineNumber; lineNumber <= toLineNumber; lineNumber++) {\n            newLines[newLinesLen++] = this.host.createVisibleLine();\n        }\n        ctx.lines = newLines.concat(ctx.lines);\n    }\n    _removeLinesBefore(ctx, removeCount) {\n        for (let i = 0; i < removeCount; i++) {\n            const lineDomNode = ctx.lines[i].getDomNode();\n            if (lineDomNode) {\n                this.domNode.removeChild(lineDomNode);\n            }\n        }\n        ctx.lines.splice(0, removeCount);\n    }\n    _insertLinesAfter(ctx, fromLineNumber, toLineNumber, deltaTop, deltaLN) {\n        const newLines = [];\n        let newLinesLen = 0;\n        for (let lineNumber = fromLineNumber; lineNumber <= toLineNumber; lineNumber++) {\n            newLines[newLinesLen++] = this.host.createVisibleLine();\n        }\n        ctx.lines = ctx.lines.concat(newLines);\n    }\n    _removeLinesAfter(ctx, removeCount) {\n        const removeIndex = ctx.linesLength - removeCount;\n        for (let i = 0; i < removeCount; i++) {\n            const lineDomNode = ctx.lines[removeIndex + i].getDomNode();\n            if (lineDomNode) {\n                this.domNode.removeChild(lineDomNode);\n            }\n        }\n        ctx.lines.splice(removeIndex, removeCount);\n    }\n    _finishRenderingNewLines(ctx, domNodeIsEmpty, newLinesHTML, wasNew) {\n        if (ViewLayerRenderer._ttPolicy) {\n            newLinesHTML = ViewLayerRenderer._ttPolicy.createHTML(newLinesHTML);\n        }\n        const lastChild = this.domNode.lastChild;\n        if (domNodeIsEmpty || !lastChild) {\n            this.domNode.innerHTML = newLinesHTML; // explains the ugly casts -> https://github.com/microsoft/vscode/issues/106396#issuecomment-692625393;\n        }\n        else {\n            lastChild.insertAdjacentHTML('afterend', newLinesHTML);\n        }\n        let currChild = this.domNode.lastChild;\n        for (let i = ctx.linesLength - 1; i >= 0; i--) {\n            const line = ctx.lines[i];\n            if (wasNew[i]) {\n                line.setDomNode(currChild);\n                currChild = currChild.previousSibling;\n            }\n        }\n    }\n    _finishRenderingInvalidLines(ctx, invalidLinesHTML, wasInvalid) {\n        const hugeDomNode = document.createElement('div');\n        if (ViewLayerRenderer._ttPolicy) {\n            invalidLinesHTML = ViewLayerRenderer._ttPolicy.createHTML(invalidLinesHTML);\n        }\n        hugeDomNode.innerHTML = invalidLinesHTML;\n        for (let i = 0; i < ctx.linesLength; i++) {\n            const line = ctx.lines[i];\n            if (wasInvalid[i]) {\n                const source = hugeDomNode.firstChild;\n                const lineDomNode = line.getDomNode();\n                lineDomNode.parentNode.replaceChild(source, lineDomNode);\n                line.setDomNode(source);\n            }\n        }\n    }\n    _finishRendering(ctx, domNodeIsEmpty, deltaTop) {\n        const sb = ViewLayerRenderer._sb;\n        const linesLength = ctx.linesLength;\n        const lines = ctx.lines;\n        const rendLineNumberStart = ctx.rendLineNumberStart;\n        const wasNew = [];\n        {\n            sb.reset();\n            let hadNewLine = false;\n            for (let i = 0; i < linesLength; i++) {\n                const line = lines[i];\n                wasNew[i] = false;\n                const lineDomNode = line.getDomNode();\n                if (lineDomNode) {\n                    // line is not new\n                    continue;\n                }\n                const renderResult = line.renderLine(i + rendLineNumberStart, deltaTop[i], this.viewportData, sb);\n                if (!renderResult) {\n                    // line does not need rendering\n                    continue;\n                }\n                wasNew[i] = true;\n                hadNewLine = true;\n            }\n            if (hadNewLine) {\n                this._finishRenderingNewLines(ctx, domNodeIsEmpty, sb.build(), wasNew);\n            }\n        }\n        {\n            sb.reset();\n            let hadInvalidLine = false;\n            const wasInvalid = [];\n            for (let i = 0; i < linesLength; i++) {\n                const line = lines[i];\n                wasInvalid[i] = false;\n                if (wasNew[i]) {\n                    // line was new\n                    continue;\n                }\n                const renderResult = line.renderLine(i + rendLineNumberStart, deltaTop[i], this.viewportData, sb);\n                if (!renderResult) {\n                    // line does not need rendering\n                    continue;\n                }\n                wasInvalid[i] = true;\n                hadInvalidLine = true;\n            }\n            if (hadInvalidLine) {\n                this._finishRenderingInvalidLines(ctx, sb.build(), wasInvalid);\n            }\n        }\n    }\n}\nViewLayerRenderer._ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('editorViewLayer', { createHTML: value => value });\nViewLayerRenderer._sb = new StringBuilder(100000);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { VisibleLinesCollection } from './viewLayer.js';\nimport { ViewPart } from './viewPart.js';\nexport class ViewOverlays extends ViewPart {\n    constructor(context) {\n        super(context);\n        this._visibleLines = new VisibleLinesCollection(this);\n        this.domNode = this._visibleLines.domNode;\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(47 /* EditorOption.fontInfo */);\n        applyFontInfo(this.domNode, fontInfo);\n        this._dynamicOverlays = [];\n        this._isFocused = false;\n        this.domNode.setClassName('view-overlays');\n    }\n    shouldRender() {\n        if (super.shouldRender()) {\n            return true;\n        }\n        for (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n            const dynamicOverlay = this._dynamicOverlays[i];\n            if (dynamicOverlay.shouldRender()) {\n                return true;\n            }\n        }\n        return false;\n    }\n    dispose() {\n        super.dispose();\n        for (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n            const dynamicOverlay = this._dynamicOverlays[i];\n            dynamicOverlay.dispose();\n        }\n        this._dynamicOverlays = [];\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    // ---- begin IVisibleLinesHost\n    createVisibleLine() {\n        return new ViewOverlayLine(this._context.configuration, this._dynamicOverlays);\n    }\n    // ---- end IVisibleLinesHost\n    addDynamicOverlay(overlay) {\n        this._dynamicOverlays.push(overlay);\n    }\n    // ----- event handlers\n    onConfigurationChanged(e) {\n        this._visibleLines.onConfigurationChanged(e);\n        const startLineNumber = this._visibleLines.getStartLineNumber();\n        const endLineNumber = this._visibleLines.getEndLineNumber();\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const line = this._visibleLines.getVisibleLine(lineNumber);\n            line.onConfigurationChanged(e);\n        }\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(47 /* EditorOption.fontInfo */);\n        applyFontInfo(this.domNode, fontInfo);\n        return true;\n    }\n    onFlushed(e) {\n        return this._visibleLines.onFlushed(e);\n    }\n    onFocusChanged(e) {\n        this._isFocused = e.isFocused;\n        return true;\n    }\n    onLinesChanged(e) {\n        return this._visibleLines.onLinesChanged(e);\n    }\n    onLinesDeleted(e) {\n        return this._visibleLines.onLinesDeleted(e);\n    }\n    onLinesInserted(e) {\n        return this._visibleLines.onLinesInserted(e);\n    }\n    onScrollChanged(e) {\n        return this._visibleLines.onScrollChanged(e) || true;\n    }\n    onTokensChanged(e) {\n        return this._visibleLines.onTokensChanged(e);\n    }\n    onZonesChanged(e) {\n        return this._visibleLines.onZonesChanged(e);\n    }\n    // ----- end event handlers\n    prepareRender(ctx) {\n        const toRender = this._dynamicOverlays.filter(overlay => overlay.shouldRender());\n        for (let i = 0, len = toRender.length; i < len; i++) {\n            const dynamicOverlay = toRender[i];\n            dynamicOverlay.prepareRender(ctx);\n            dynamicOverlay.onDidRender();\n        }\n    }\n    render(ctx) {\n        // Overwriting to bypass `shouldRender` flag\n        this._viewOverlaysRender(ctx);\n        this.domNode.toggleClassName('focused', this._isFocused);\n    }\n    _viewOverlaysRender(ctx) {\n        this._visibleLines.renderLines(ctx.viewportData);\n    }\n}\nexport class ViewOverlayLine {\n    constructor(configuration, dynamicOverlays) {\n        this._configuration = configuration;\n        this._lineHeight = this._configuration.options.get(63 /* EditorOption.lineHeight */);\n        this._dynamicOverlays = dynamicOverlays;\n        this._domNode = null;\n        this._renderedContent = null;\n    }\n    getDomNode() {\n        if (!this._domNode) {\n            return null;\n        }\n        return this._domNode.domNode;\n    }\n    setDomNode(domNode) {\n        this._domNode = createFastDomNode(domNode);\n    }\n    onContentChanged() {\n        // Nothing\n    }\n    onTokensChanged() {\n        // Nothing\n    }\n    onConfigurationChanged(e) {\n        this._lineHeight = this._configuration.options.get(63 /* EditorOption.lineHeight */);\n    }\n    renderLine(lineNumber, deltaTop, viewportData, sb) {\n        let result = '';\n        for (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n            const dynamicOverlay = this._dynamicOverlays[i];\n            result += dynamicOverlay.render(viewportData.startLineNumber, lineNumber);\n        }\n        if (this._renderedContent === result) {\n            // No rendering needed\n            return false;\n        }\n        this._renderedContent = result;\n        sb.appendString('<div style=\"position:absolute;top:');\n        sb.appendString(String(deltaTop));\n        sb.appendString('px;width:100%;height:');\n        sb.appendString(String(this._lineHeight));\n        sb.appendString('px;\">');\n        sb.appendString(result);\n        sb.appendString('</div>');\n        return true;\n    }\n    layoutLine(lineNumber, deltaTop) {\n        if (this._domNode) {\n            this._domNode.setTop(deltaTop);\n            this._domNode.setHeight(this._lineHeight);\n        }\n    }\n}\nexport class ContentViewOverlays extends ViewOverlays {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(138 /* EditorOption.layoutInfo */);\n        this._contentWidth = layoutInfo.contentWidth;\n        this.domNode.setHeight(0);\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(138 /* EditorOption.layoutInfo */);\n        this._contentWidth = layoutInfo.contentWidth;\n        return super.onConfigurationChanged(e) || true;\n    }\n    onScrollChanged(e) {\n        return super.onScrollChanged(e) || e.scrollWidthChanged;\n    }\n    // --- end event handlers\n    _viewOverlaysRender(ctx) {\n        super._viewOverlaysRender(ctx);\n        this.domNode.setWidth(Math.max(ctx.scrollWidth, this._contentWidth));\n    }\n}\nexport class MarginViewOverlays extends ViewOverlays {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(138 /* EditorOption.layoutInfo */);\n        this._contentLeft = layoutInfo.contentLeft;\n        this.domNode.setClassName('margin-view-overlays');\n        this.domNode.setWidth(1);\n        applyFontInfo(this.domNode, options.get(47 /* EditorOption.fontInfo */));\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        applyFontInfo(this.domNode, options.get(47 /* EditorOption.fontInfo */));\n        const layoutInfo = options.get(138 /* EditorOption.layoutInfo */);\n        this._contentLeft = layoutInfo.contentLeft;\n        return super.onConfigurationChanged(e) || true;\n    }\n    onScrollChanged(e) {\n        return super.onScrollChanged(e) || e.scrollHeightChanged;\n    }\n    _viewOverlaysRender(ctx) {\n        super._viewOverlaysRender(ctx);\n        const height = Math.min(ctx.scrollHeight, 1000000);\n        this.domNode.setHeight(height);\n        this.domNode.setWidth(this._contentLeft);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ViewEventHandler } from '../../common/viewEventHandler.js';\nexport class ViewPart extends ViewEventHandler {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        super.dispose();\n    }\n}\nexport class PartFingerprints {\n    static write(target, partId) {\n        target.setAttribute('data-mprt', String(partId));\n    }\n    static read(target) {\n        const r = target.getAttribute('data-mprt');\n        if (r === null) {\n            return 0 /* PartFingerprint.None */;\n        }\n        return parseInt(r, 10);\n    }\n    static collect(child, stopAt) {\n        const result = [];\n        let resultLen = 0;\n        while (child && child !== document.body) {\n            if (child === stopAt) {\n                break;\n            }\n            if (child.nodeType === child.ELEMENT_NODE) {\n                result[resultLen++] = this.read(child);\n            }\n            child = child.parentElement;\n        }\n        const r = new Uint8Array(resultLen);\n        for (let i = 0; i < resultLen; i++) {\n            r[i] = result[resultLen - i - 1];\n        }\n        return r;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class ViewUserInputEvents {\n    constructor(coordinatesConverter) {\n        this.onKeyDown = null;\n        this.onKeyUp = null;\n        this.onContextMenu = null;\n        this.onMouseMove = null;\n        this.onMouseLeave = null;\n        this.onMouseDown = null;\n        this.onMouseUp = null;\n        this.onMouseDrag = null;\n        this.onMouseDrop = null;\n        this.onMouseDropCanceled = null;\n        this.onMouseWheel = null;\n        this._coordinatesConverter = coordinatesConverter;\n    }\n    emitKeyDown(e) {\n        var _a;\n        (_a = this.onKeyDown) === null || _a === void 0 ? void 0 : _a.call(this, e);\n    }\n    emitKeyUp(e) {\n        var _a;\n        (_a = this.onKeyUp) === null || _a === void 0 ? void 0 : _a.call(this, e);\n    }\n    emitContextMenu(e) {\n        var _a;\n        (_a = this.onContextMenu) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseMove(e) {\n        var _a;\n        (_a = this.onMouseMove) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseLeave(e) {\n        var _a;\n        (_a = this.onMouseLeave) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseDown(e) {\n        var _a;\n        (_a = this.onMouseDown) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseUp(e) {\n        var _a;\n        (_a = this.onMouseUp) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseDrag(e) {\n        var _a;\n        (_a = this.onMouseDrag) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseDrop(e) {\n        var _a;\n        (_a = this.onMouseDrop) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseDropCanceled() {\n        var _a;\n        (_a = this.onMouseDropCanceled) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n    emitMouseWheel(e) {\n        var _a;\n        (_a = this.onMouseWheel) === null || _a === void 0 ? void 0 : _a.call(this, e);\n    }\n    _convertViewToModelMouseEvent(e) {\n        if (e.target) {\n            return {\n                event: e.event,\n                target: this._convertViewToModelMouseTarget(e.target)\n            };\n        }\n        return e;\n    }\n    _convertViewToModelMouseTarget(target) {\n        return ViewUserInputEvents.convertViewToModelMouseTarget(target, this._coordinatesConverter);\n    }\n    static convertViewToModelMouseTarget(target, coordinatesConverter) {\n        const result = Object.assign({}, target);\n        if (result.position) {\n            result.position = coordinatesConverter.convertViewPositionToModelPosition(result.position);\n        }\n        if (result.range) {\n            result.range = coordinatesConverter.convertViewRangeToModelRange(result.range);\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { runWhenIdle } from '../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Disposable, DisposableMap } from '../../../base/common/lifecycle.js';\nexport class CodeEditorContributions extends Disposable {\n    constructor() {\n        super();\n        this._editor = null;\n        this._instantiationService = null;\n        /**\n         * Contains all instantiated contributions.\n         */\n        this._instances = this._register(new DisposableMap());\n        /**\n         * Contains contributions which are not yet instantiated.\n         */\n        this._pending = new Map();\n        /**\n         * Tracks which instantiation kinds are still left in `_pending`.\n         */\n        this._finishedInstantiation = [];\n        this._finishedInstantiation[0 /* EditorContributionInstantiation.Eager */] = false;\n        this._finishedInstantiation[1 /* EditorContributionInstantiation.AfterFirstRender */] = false;\n        this._finishedInstantiation[2 /* EditorContributionInstantiation.BeforeFirstInteraction */] = false;\n        this._finishedInstantiation[3 /* EditorContributionInstantiation.Eventually */] = false;\n    }\n    initialize(editor, contributions, instantiationService) {\n        this._editor = editor;\n        this._instantiationService = instantiationService;\n        for (const desc of contributions) {\n            if (this._pending.has(desc.id)) {\n                onUnexpectedError(new Error(`Cannot have two contributions with the same id ${desc.id}`));\n                continue;\n            }\n            this._pending.set(desc.id, desc);\n        }\n        this._instantiateSome(0 /* EditorContributionInstantiation.Eager */);\n        // AfterFirstRender\n        // - these extensions will be instantiated at the latest 50ms after the first render.\n        // - but if there is idle time, we will instantiate them sooner.\n        this._register(runWhenIdle(() => {\n            this._instantiateSome(1 /* EditorContributionInstantiation.AfterFirstRender */);\n        }));\n        // BeforeFirstInteraction\n        // - these extensions will be instantiated at the latest before a mouse or a keyboard event.\n        // - but if there is idle time, we will instantiate them sooner.\n        this._register(runWhenIdle(() => {\n            this._instantiateSome(2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\n        }));\n        // Eventually\n        // - these extensions will only be instantiated when there is idle time.\n        // - since there is no guarantee that there will ever be idle time, we set a timeout of 5s here.\n        this._register(runWhenIdle(() => {\n            this._instantiateSome(3 /* EditorContributionInstantiation.Eventually */);\n        }, 5000));\n    }\n    saveViewState() {\n        const contributionsState = {};\n        for (const [id, contribution] of this._instances) {\n            if (typeof contribution.saveViewState === 'function') {\n                contributionsState[id] = contribution.saveViewState();\n            }\n        }\n        return contributionsState;\n    }\n    restoreViewState(contributionsState) {\n        for (const [id, contribution] of this._instances) {\n            if (typeof contribution.restoreViewState === 'function') {\n                contribution.restoreViewState(contributionsState[id]);\n            }\n        }\n    }\n    get(id) {\n        this._instantiateById(id);\n        return this._instances.get(id) || null;\n    }\n    onBeforeInteractionEvent() {\n        // this method is called very often by the editor!\n        this._instantiateSome(2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\n    }\n    onAfterModelAttached() {\n        this._register(runWhenIdle(() => {\n            this._instantiateSome(1 /* EditorContributionInstantiation.AfterFirstRender */);\n        }, 50));\n    }\n    _instantiateSome(instantiation) {\n        if (this._finishedInstantiation[instantiation]) {\n            // already done with this instantiation!\n            return;\n        }\n        this._finishedInstantiation[instantiation] = true;\n        const contribs = this._findPendingContributionsByInstantiation(instantiation);\n        for (const contrib of contribs) {\n            this._instantiateById(contrib.id);\n        }\n    }\n    _findPendingContributionsByInstantiation(instantiation) {\n        const result = [];\n        for (const [, desc] of this._pending) {\n            if (desc.instantiation === instantiation) {\n                result.push(desc);\n            }\n        }\n        return result;\n    }\n    _instantiateById(id) {\n        const desc = this._pending.get(id);\n        if (!desc) {\n            return;\n        }\n        this._pending.delete(id);\n        if (!this._instantiationService || !this._editor) {\n            throw new Error(`Cannot instantiate contributions before being initialized!`);\n        }\n        try {\n            const instance = this._instantiationService.createInstance(desc.ctor, this._editor);\n            this._instances.set(desc.id, instance);\n            if (typeof instance.restoreViewState === 'function' && desc.instantiation !== 0 /* EditorContributionInstantiation.Eager */) {\n                console.warn(`Editor contribution '${desc.id}' should be eager instantiated because it uses saveViewState / restoreViewState.`);\n            }\n        }\n        catch (err) {\n            onUnexpectedError(err);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport '../services/markerDecorations.js';\nimport './media/editor.css';\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Emitter, EventDeliveryQueue } from '../../../base/common/event.js';\nimport { Disposable, dispose } from '../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { EditorConfiguration } from '../config/editorConfiguration.js';\nimport { EditorExtensionsRegistry } from '../editorExtensions.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { View } from '../view.js';\nimport { ViewUserInputEvents } from '../view/viewUserInputEvents.js';\nimport { filterValidationDecorations } from '../../common/config/editorOptions.js';\nimport { CursorColumns } from '../../common/core/cursorColumns.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { InternalEditorAction } from '../../common/editorAction.js';\nimport * as editorCommon from '../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\nimport { editorUnnecessaryCodeOpacity } from '../../common/core/editorColorRegistry.js';\nimport { editorErrorForeground, editorHintForeground, editorInfoForeground, editorWarningForeground } from '../../../platform/theme/common/colorRegistry.js';\nimport { ViewModel } from '../../common/viewModel/viewModelImpl.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { INotificationService, Severity } from '../../../platform/notification/common/notification.js';\nimport { IThemeService, registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { withNullAsUndefined } from '../../../base/common/types.js';\nimport { MonospaceLineBreaksComputerFactory } from '../../common/viewModel/monospaceLineBreaksComputer.js';\nimport { DOMLineBreaksComputerFactory } from '../view/domLineBreaksComputer.js';\nimport { WordOperations } from '../../common/cursor/cursorWordOperations.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\nimport { CodeEditorContributions } from './codeEditorContributions.js';\nimport { TabFocus } from '../config/tabFocus.js';\nlet EDITOR_ID = 0;\nclass ModelData {\n    constructor(model, viewModel, view, hasRealView, listenersToRemove) {\n        this.model = model;\n        this.viewModel = viewModel;\n        this.view = view;\n        this.hasRealView = hasRealView;\n        this.listenersToRemove = listenersToRemove;\n    }\n    dispose() {\n        dispose(this.listenersToRemove);\n        this.model.onBeforeDetached();\n        if (this.hasRealView) {\n            this.view.dispose();\n        }\n        this.viewModel.dispose();\n    }\n}\nlet CodeEditorWidget = class CodeEditorWidget extends Disposable {\n    //#endregion\n    get isSimpleWidget() {\n        return this._configuration.isSimpleWidget;\n    }\n    constructor(domElement, _options, codeEditorWidgetOptions, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService, languageConfigurationService, languageFeaturesService) {\n        super();\n        this.languageConfigurationService = languageConfigurationService;\n        //#region Eventing\n        this._deliveryQueue = new EventDeliveryQueue();\n        this._contributions = this._register(new CodeEditorContributions());\n        this._onDidDispose = this._register(new Emitter());\n        this.onDidDispose = this._onDidDispose.event;\n        this._onDidChangeModelContent = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelContent = this._onDidChangeModelContent.event;\n        this._onDidChangeModelLanguage = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelLanguage = this._onDidChangeModelLanguage.event;\n        this._onDidChangeModelLanguageConfiguration = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelLanguageConfiguration = this._onDidChangeModelLanguageConfiguration.event;\n        this._onDidChangeModelOptions = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelOptions = this._onDidChangeModelOptions.event;\n        this._onDidChangeModelDecorations = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelDecorations = this._onDidChangeModelDecorations.event;\n        this._onDidChangeModelTokens = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelTokens = this._onDidChangeModelTokens.event;\n        this._onDidChangeConfiguration = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeConfiguration = this._onDidChangeConfiguration.event;\n        this._onDidChangeModel = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModel = this._onDidChangeModel.event;\n        this._onDidChangeCursorPosition = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeCursorPosition = this._onDidChangeCursorPosition.event;\n        this._onDidChangeCursorSelection = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeCursorSelection = this._onDidChangeCursorSelection.event;\n        this._onDidAttemptReadOnlyEdit = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidAttemptReadOnlyEdit = this._onDidAttemptReadOnlyEdit.event;\n        this._onDidLayoutChange = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._editorTextFocus = this._register(new BooleanEventEmitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidFocusEditorText = this._editorTextFocus.onDidChangeToTrue;\n        this.onDidBlurEditorText = this._editorTextFocus.onDidChangeToFalse;\n        this._editorWidgetFocus = this._register(new BooleanEventEmitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidFocusEditorWidget = this._editorWidgetFocus.onDidChangeToTrue;\n        this.onDidBlurEditorWidget = this._editorWidgetFocus.onDidChangeToFalse;\n        this._onWillType = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onWillType = this._onWillType.event;\n        this._onDidType = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidType = this._onDidType.event;\n        this._onDidCompositionStart = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidCompositionStart = this._onDidCompositionStart.event;\n        this._onDidCompositionEnd = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidCompositionEnd = this._onDidCompositionEnd.event;\n        this._onDidPaste = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidPaste = this._onDidPaste.event;\n        this._onMouseUp = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseUp = this._onMouseUp.event;\n        this._onMouseDown = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseDown = this._onMouseDown.event;\n        this._onMouseDrag = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseDrag = this._onMouseDrag.event;\n        this._onMouseDrop = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseDrop = this._onMouseDrop.event;\n        this._onMouseDropCanceled = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseDropCanceled = this._onMouseDropCanceled.event;\n        this._onDropIntoEditor = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDropIntoEditor = this._onDropIntoEditor.event;\n        this._onContextMenu = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onContextMenu = this._onContextMenu.event;\n        this._onMouseMove = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseMove = this._onMouseMove.event;\n        this._onMouseLeave = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseLeave = this._onMouseLeave.event;\n        this._onMouseWheel = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseWheel = this._onMouseWheel.event;\n        this._onKeyUp = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onKeyUp = this._onKeyUp.event;\n        this._onKeyDown = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onKeyDown = this._onKeyDown.event;\n        this._onDidContentSizeChange = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidContentSizeChange = this._onDidContentSizeChange.event;\n        this._onDidScrollChange = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidScrollChange = this._onDidScrollChange.event;\n        this._onDidChangeViewZones = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeViewZones = this._onDidChangeViewZones.event;\n        this._onDidChangeHiddenAreas = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeHiddenAreas = this._onDidChangeHiddenAreas.event;\n        this._actions = new Map();\n        this._bannerDomNode = null;\n        this._dropIntoEditorDecorations = this.createDecorationsCollection();\n        codeEditorService.willCreateCodeEditor();\n        const options = Object.assign({}, _options);\n        this._domElement = domElement;\n        this._overflowWidgetsDomNode = options.overflowWidgetsDomNode;\n        delete options.overflowWidgetsDomNode;\n        this._id = (++EDITOR_ID);\n        this._decorationTypeKeysToIds = {};\n        this._decorationTypeSubtypes = {};\n        this._telemetryData = codeEditorWidgetOptions.telemetryData;\n        this._configuration = this._register(this._createConfiguration(codeEditorWidgetOptions.isSimpleWidget || false, options, accessibilityService));\n        this._register(this._configuration.onDidChange((e) => {\n            this._onDidChangeConfiguration.fire(e);\n            const options = this._configuration.options;\n            if (e.hasChanged(138 /* EditorOption.layoutInfo */)) {\n                const layoutInfo = options.get(138 /* EditorOption.layoutInfo */);\n                this._onDidLayoutChange.fire(layoutInfo);\n            }\n        }));\n        this._contextKeyService = this._register(contextKeyService.createScoped(this._domElement));\n        this._notificationService = notificationService;\n        this._codeEditorService = codeEditorService;\n        this._commandService = commandService;\n        this._themeService = themeService;\n        this._register(new EditorContextKeysManager(this, this._contextKeyService));\n        this._register(new EditorModeContext(this, this._contextKeyService, languageFeaturesService));\n        this._instantiationService = instantiationService.createChild(new ServiceCollection([IContextKeyService, this._contextKeyService]));\n        this._modelData = null;\n        this._focusTracker = new CodeEditorWidgetFocusTracker(domElement);\n        this._register(this._focusTracker.onChange(() => {\n            this._editorWidgetFocus.setValue(this._focusTracker.hasFocus());\n        }));\n        this._contentWidgets = {};\n        this._overlayWidgets = {};\n        let contributions;\n        if (Array.isArray(codeEditorWidgetOptions.contributions)) {\n            contributions = codeEditorWidgetOptions.contributions;\n        }\n        else {\n            contributions = EditorExtensionsRegistry.getEditorContributions();\n        }\n        this._contributions.initialize(this, contributions, this._instantiationService);\n        for (const action of EditorExtensionsRegistry.getEditorActions()) {\n            if (this._actions.has(action.id)) {\n                onUnexpectedError(new Error(`Cannot have two actions with the same id ${action.id}`));\n                continue;\n            }\n            const internalAction = new InternalEditorAction(action.id, action.label, action.alias, withNullAsUndefined(action.precondition), () => {\n                return this._instantiationService.invokeFunction((accessor) => {\n                    return Promise.resolve(action.runEditorCommand(accessor, this, null));\n                });\n            }, this._contextKeyService);\n            this._actions.set(internalAction.id, internalAction);\n        }\n        const isDropIntoEnabled = () => {\n            return !this._configuration.options.get(86 /* EditorOption.readOnly */)\n                && this._configuration.options.get(33 /* EditorOption.dropIntoEditor */).enabled;\n        };\n        this._register(new dom.DragAndDropObserver(this._domElement, {\n            onDragEnter: () => undefined,\n            onDragOver: e => {\n                if (!isDropIntoEnabled()) {\n                    return;\n                }\n                const target = this.getTargetAtClientPoint(e.clientX, e.clientY);\n                if (target === null || target === void 0 ? void 0 : target.position) {\n                    this.showDropIndicatorAt(target.position);\n                }\n            },\n            onDrop: (e) => __awaiter(this, void 0, void 0, function* () {\n                if (!isDropIntoEnabled()) {\n                    return;\n                }\n                this.removeDropIndicator();\n                if (!e.dataTransfer) {\n                    return;\n                }\n                const target = this.getTargetAtClientPoint(e.clientX, e.clientY);\n                if (target === null || target === void 0 ? void 0 : target.position) {\n                    this._onDropIntoEditor.fire({ position: target.position, event: e });\n                }\n            }),\n            onDragLeave: () => {\n                this.removeDropIndicator();\n            },\n            onDragEnd: () => {\n                this.removeDropIndicator();\n            },\n        }));\n        this._codeEditorService.addCodeEditor(this);\n    }\n    writeScreenReaderContent(reason) {\n        var _a;\n        (_a = this._modelData) === null || _a === void 0 ? void 0 : _a.view.writeScreenReaderContent(reason);\n    }\n    _createConfiguration(isSimpleWidget, options, accessibilityService) {\n        return new EditorConfiguration(isSimpleWidget, options, this._domElement, accessibilityService);\n    }\n    getId() {\n        return this.getEditorType() + ':' + this._id;\n    }\n    getEditorType() {\n        return editorCommon.EditorType.ICodeEditor;\n    }\n    dispose() {\n        this._codeEditorService.removeCodeEditor(this);\n        this._focusTracker.dispose();\n        this._actions.clear();\n        this._contentWidgets = {};\n        this._overlayWidgets = {};\n        this._removeDecorationTypes();\n        this._postDetachModelCleanup(this._detachModel());\n        this._onDidDispose.fire();\n        super.dispose();\n    }\n    invokeWithinContext(fn) {\n        return this._instantiationService.invokeFunction(fn);\n    }\n    updateOptions(newOptions) {\n        this._configuration.updateOptions(newOptions || {});\n    }\n    getOptions() {\n        return this._configuration.options;\n    }\n    getOption(id) {\n        return this._configuration.options.get(id);\n    }\n    getRawOptions() {\n        return this._configuration.getRawOptions();\n    }\n    getOverflowWidgetsDomNode() {\n        return this._overflowWidgetsDomNode;\n    }\n    getConfiguredWordAtPosition(position) {\n        if (!this._modelData) {\n            return null;\n        }\n        return WordOperations.getWordAtPosition(this._modelData.model, this._configuration.options.get(124 /* EditorOption.wordSeparators */), position);\n    }\n    getValue(options = null) {\n        if (!this._modelData) {\n            return '';\n        }\n        const preserveBOM = (options && options.preserveBOM) ? true : false;\n        let eolPreference = 0 /* EndOfLinePreference.TextDefined */;\n        if (options && options.lineEnding && options.lineEnding === '\\n') {\n            eolPreference = 1 /* EndOfLinePreference.LF */;\n        }\n        else if (options && options.lineEnding && options.lineEnding === '\\r\\n') {\n            eolPreference = 2 /* EndOfLinePreference.CRLF */;\n        }\n        return this._modelData.model.getValue(eolPreference, preserveBOM);\n    }\n    setValue(newValue) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.model.setValue(newValue);\n    }\n    getModel() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.model;\n    }\n    setModel(_model = null) {\n        const model = _model;\n        if (this._modelData === null && model === null) {\n            // Current model is the new model\n            return;\n        }\n        if (this._modelData && this._modelData.model === model) {\n            // Current model is the new model\n            return;\n        }\n        const hasTextFocus = this.hasTextFocus();\n        const detachedModel = this._detachModel();\n        this._attachModel(model);\n        if (hasTextFocus && this.hasModel()) {\n            this.focus();\n        }\n        const e = {\n            oldModelUrl: detachedModel ? detachedModel.uri : null,\n            newModelUrl: model ? model.uri : null\n        };\n        this._removeDecorationTypes();\n        this._onDidChangeModel.fire(e);\n        this._postDetachModelCleanup(detachedModel);\n        this._contributions.onAfterModelAttached();\n    }\n    _removeDecorationTypes() {\n        this._decorationTypeKeysToIds = {};\n        if (this._decorationTypeSubtypes) {\n            for (const decorationType in this._decorationTypeSubtypes) {\n                const subTypes = this._decorationTypeSubtypes[decorationType];\n                for (const subType in subTypes) {\n                    this._removeDecorationType(decorationType + '-' + subType);\n                }\n            }\n            this._decorationTypeSubtypes = {};\n        }\n    }\n    getVisibleRanges() {\n        if (!this._modelData) {\n            return [];\n        }\n        return this._modelData.viewModel.getVisibleRanges();\n    }\n    getVisibleRangesPlusViewportAboveBelow() {\n        if (!this._modelData) {\n            return [];\n        }\n        return this._modelData.viewModel.getVisibleRangesPlusViewportAboveBelow();\n    }\n    getWhitespaces() {\n        if (!this._modelData) {\n            return [];\n        }\n        return this._modelData.viewModel.viewLayout.getWhitespaces();\n    }\n    static _getVerticalOffsetAfterPosition(modelData, modelLineNumber, modelColumn, includeViewZones) {\n        const modelPosition = modelData.model.validatePosition({\n            lineNumber: modelLineNumber,\n            column: modelColumn\n        });\n        const viewPosition = modelData.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n        return modelData.viewModel.viewLayout.getVerticalOffsetAfterLineNumber(viewPosition.lineNumber, includeViewZones);\n    }\n    getTopForLineNumber(lineNumber, includeViewZones = false) {\n        if (!this._modelData) {\n            return -1;\n        }\n        return CodeEditorWidget._getVerticalOffsetForPosition(this._modelData, lineNumber, 1, includeViewZones);\n    }\n    getTopForPosition(lineNumber, column) {\n        if (!this._modelData) {\n            return -1;\n        }\n        return CodeEditorWidget._getVerticalOffsetForPosition(this._modelData, lineNumber, column, false);\n    }\n    static _getVerticalOffsetForPosition(modelData, modelLineNumber, modelColumn, includeViewZones = false) {\n        const modelPosition = modelData.model.validatePosition({\n            lineNumber: modelLineNumber,\n            column: modelColumn\n        });\n        const viewPosition = modelData.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n        return modelData.viewModel.viewLayout.getVerticalOffsetForLineNumber(viewPosition.lineNumber, includeViewZones);\n    }\n    getBottomForLineNumber(lineNumber, includeViewZones = false) {\n        if (!this._modelData) {\n            return -1;\n        }\n        return CodeEditorWidget._getVerticalOffsetAfterPosition(this._modelData, lineNumber, 1, includeViewZones);\n    }\n    setHiddenAreas(ranges, source) {\n        var _a;\n        (_a = this._modelData) === null || _a === void 0 ? void 0 : _a.viewModel.setHiddenAreas(ranges.map(r => Range.lift(r)), source);\n    }\n    getVisibleColumnFromPosition(rawPosition) {\n        if (!this._modelData) {\n            return rawPosition.column;\n        }\n        const position = this._modelData.model.validatePosition(rawPosition);\n        const tabSize = this._modelData.model.getOptions().tabSize;\n        return CursorColumns.visibleColumnFromColumn(this._modelData.model.getLineContent(position.lineNumber), position.column, tabSize) + 1;\n    }\n    getPosition() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel.getPosition();\n    }\n    setPosition(position, source = 'api') {\n        if (!this._modelData) {\n            return;\n        }\n        if (!Position.isIPosition(position)) {\n            throw new Error('Invalid arguments');\n        }\n        this._modelData.viewModel.setSelections(source, [{\n                selectionStartLineNumber: position.lineNumber,\n                selectionStartColumn: position.column,\n                positionLineNumber: position.lineNumber,\n                positionColumn: position.column\n            }]);\n    }\n    _sendRevealRange(modelRange, verticalType, revealHorizontal, scrollType) {\n        if (!this._modelData) {\n            return;\n        }\n        if (!Range.isIRange(modelRange)) {\n            throw new Error('Invalid arguments');\n        }\n        const validatedModelRange = this._modelData.model.validateRange(modelRange);\n        const viewRange = this._modelData.viewModel.coordinatesConverter.convertModelRangeToViewRange(validatedModelRange);\n        this._modelData.viewModel.revealRange('api', revealHorizontal, viewRange, verticalType, scrollType);\n    }\n    revealLine(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLine(lineNumber, 0 /* VerticalRevealType.Simple */, scrollType);\n    }\n    revealLineInCenter(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLine(lineNumber, 1 /* VerticalRevealType.Center */, scrollType);\n    }\n    revealLineInCenterIfOutsideViewport(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLine(lineNumber, 2 /* VerticalRevealType.CenterIfOutsideViewport */, scrollType);\n    }\n    revealLineNearTop(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLine(lineNumber, 5 /* VerticalRevealType.NearTop */, scrollType);\n    }\n    _revealLine(lineNumber, revealType, scrollType) {\n        if (typeof lineNumber !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(new Range(lineNumber, 1, lineNumber, 1), revealType, false, scrollType);\n    }\n    revealPosition(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealPosition(position, 0 /* VerticalRevealType.Simple */, true, scrollType);\n    }\n    revealPositionInCenter(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealPosition(position, 1 /* VerticalRevealType.Center */, true, scrollType);\n    }\n    revealPositionInCenterIfOutsideViewport(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealPosition(position, 2 /* VerticalRevealType.CenterIfOutsideViewport */, true, scrollType);\n    }\n    revealPositionNearTop(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealPosition(position, 5 /* VerticalRevealType.NearTop */, true, scrollType);\n    }\n    _revealPosition(position, verticalType, revealHorizontal, scrollType) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(new Range(position.lineNumber, position.column, position.lineNumber, position.column), verticalType, revealHorizontal, scrollType);\n    }\n    getSelection() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel.getSelection();\n    }\n    getSelections() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel.getSelections();\n    }\n    setSelection(something, source = 'api') {\n        const isSelection = Selection.isISelection(something);\n        const isRange = Range.isIRange(something);\n        if (!isSelection && !isRange) {\n            throw new Error('Invalid arguments');\n        }\n        if (isSelection) {\n            this._setSelectionImpl(something, source);\n        }\n        else if (isRange) {\n            // act as if it was an IRange\n            const selection = {\n                selectionStartLineNumber: something.startLineNumber,\n                selectionStartColumn: something.startColumn,\n                positionLineNumber: something.endLineNumber,\n                positionColumn: something.endColumn\n            };\n            this._setSelectionImpl(selection, source);\n        }\n    }\n    _setSelectionImpl(sel, source) {\n        if (!this._modelData) {\n            return;\n        }\n        const selection = new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n        this._modelData.viewModel.setSelections(source, [selection]);\n    }\n    revealLines(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 0 /* VerticalRevealType.Simple */, scrollType);\n    }\n    revealLinesInCenter(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 1 /* VerticalRevealType.Center */, scrollType);\n    }\n    revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 2 /* VerticalRevealType.CenterIfOutsideViewport */, scrollType);\n    }\n    revealLinesNearTop(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 5 /* VerticalRevealType.NearTop */, scrollType);\n    }\n    _revealLines(startLineNumber, endLineNumber, verticalType, scrollType) {\n        if (typeof startLineNumber !== 'number' || typeof endLineNumber !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(new Range(startLineNumber, 1, endLineNumber, 1), verticalType, false, scrollType);\n    }\n    revealRange(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */, revealVerticalInCenter = false, revealHorizontal = true) {\n        this._revealRange(range, revealVerticalInCenter ? 1 /* VerticalRevealType.Center */ : 0 /* VerticalRevealType.Simple */, revealHorizontal, scrollType);\n    }\n    revealRangeInCenter(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 1 /* VerticalRevealType.Center */, true, scrollType);\n    }\n    revealRangeInCenterIfOutsideViewport(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 2 /* VerticalRevealType.CenterIfOutsideViewport */, true, scrollType);\n    }\n    revealRangeNearTop(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 5 /* VerticalRevealType.NearTop */, true, scrollType);\n    }\n    revealRangeNearTopIfOutsideViewport(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 6 /* VerticalRevealType.NearTopIfOutsideViewport */, true, scrollType);\n    }\n    revealRangeAtTop(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 3 /* VerticalRevealType.Top */, true, scrollType);\n    }\n    _revealRange(range, verticalType, revealHorizontal, scrollType) {\n        if (!Range.isIRange(range)) {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(Range.lift(range), verticalType, revealHorizontal, scrollType);\n    }\n    setSelections(ranges, source = 'api', reason = 0 /* CursorChangeReason.NotSet */) {\n        if (!this._modelData) {\n            return;\n        }\n        if (!ranges || ranges.length === 0) {\n            throw new Error('Invalid arguments');\n        }\n        for (let i = 0, len = ranges.length; i < len; i++) {\n            if (!Selection.isISelection(ranges[i])) {\n                throw new Error('Invalid arguments');\n            }\n        }\n        this._modelData.viewModel.setSelections(source, ranges, reason);\n    }\n    getContentWidth() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getContentWidth();\n    }\n    getScrollWidth() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getScrollWidth();\n    }\n    getScrollLeft() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getCurrentScrollLeft();\n    }\n    getContentHeight() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getContentHeight();\n    }\n    getScrollHeight() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getScrollHeight();\n    }\n    getScrollTop() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getCurrentScrollTop();\n    }\n    setScrollLeft(newScrollLeft, scrollType = 1 /* editorCommon.ScrollType.Immediate */) {\n        if (!this._modelData) {\n            return;\n        }\n        if (typeof newScrollLeft !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._modelData.viewModel.viewLayout.setScrollPosition({\n            scrollLeft: newScrollLeft\n        }, scrollType);\n    }\n    setScrollTop(newScrollTop, scrollType = 1 /* editorCommon.ScrollType.Immediate */) {\n        if (!this._modelData) {\n            return;\n        }\n        if (typeof newScrollTop !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._modelData.viewModel.viewLayout.setScrollPosition({\n            scrollTop: newScrollTop\n        }, scrollType);\n    }\n    setScrollPosition(position, scrollType = 1 /* editorCommon.ScrollType.Immediate */) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.viewLayout.setScrollPosition(position, scrollType);\n    }\n    saveViewState() {\n        if (!this._modelData) {\n            return null;\n        }\n        const contributionsState = this._contributions.saveViewState();\n        const cursorState = this._modelData.viewModel.saveCursorState();\n        const viewState = this._modelData.viewModel.saveState();\n        return {\n            cursorState: cursorState,\n            viewState: viewState,\n            contributionsState: contributionsState\n        };\n    }\n    restoreViewState(s) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        const codeEditorState = s;\n        if (codeEditorState && codeEditorState.cursorState && codeEditorState.viewState) {\n            const cursorState = codeEditorState.cursorState;\n            if (Array.isArray(cursorState)) {\n                if (cursorState.length > 0) {\n                    this._modelData.viewModel.restoreCursorState(cursorState);\n                }\n            }\n            else {\n                // Backwards compatibility\n                this._modelData.viewModel.restoreCursorState([cursorState]);\n            }\n            this._contributions.restoreViewState(codeEditorState.contributionsState || {});\n            const reducedState = this._modelData.viewModel.reduceRestoreState(codeEditorState.viewState);\n            this._modelData.view.restoreState(reducedState);\n        }\n    }\n    getContribution(id) {\n        return this._contributions.get(id);\n    }\n    getActions() {\n        return Array.from(this._actions.values());\n    }\n    getSupportedActions() {\n        let result = this.getActions();\n        result = result.filter(action => action.isSupported());\n        return result;\n    }\n    getAction(id) {\n        return this._actions.get(id) || null;\n    }\n    trigger(source, handlerId, payload) {\n        payload = payload || {};\n        switch (handlerId) {\n            case \"compositionStart\" /* editorCommon.Handler.CompositionStart */:\n                this._startComposition();\n                return;\n            case \"compositionEnd\" /* editorCommon.Handler.CompositionEnd */:\n                this._endComposition(source);\n                return;\n            case \"type\" /* editorCommon.Handler.Type */: {\n                const args = payload;\n                this._type(source, args.text || '');\n                return;\n            }\n            case \"replacePreviousChar\" /* editorCommon.Handler.ReplacePreviousChar */: {\n                const args = payload;\n                this._compositionType(source, args.text || '', args.replaceCharCnt || 0, 0, 0);\n                return;\n            }\n            case \"compositionType\" /* editorCommon.Handler.CompositionType */: {\n                const args = payload;\n                this._compositionType(source, args.text || '', args.replacePrevCharCnt || 0, args.replaceNextCharCnt || 0, args.positionDelta || 0);\n                return;\n            }\n            case \"paste\" /* editorCommon.Handler.Paste */: {\n                const args = payload;\n                this._paste(source, args.text || '', args.pasteOnNewLine || false, args.multicursorText || null, args.mode || null);\n                return;\n            }\n            case \"cut\" /* editorCommon.Handler.Cut */:\n                this._cut(source);\n                return;\n        }\n        const action = this.getAction(handlerId);\n        if (action) {\n            Promise.resolve(action.run()).then(undefined, onUnexpectedError);\n            return;\n        }\n        if (!this._modelData) {\n            return;\n        }\n        if (this._triggerEditorCommand(source, handlerId, payload)) {\n            return;\n        }\n        this._triggerCommand(handlerId, payload);\n    }\n    _triggerCommand(handlerId, payload) {\n        this._commandService.executeCommand(handlerId, payload);\n    }\n    _startComposition() {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.startComposition();\n        this._onDidCompositionStart.fire();\n    }\n    _endComposition(source) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.endComposition(source);\n        this._onDidCompositionEnd.fire();\n    }\n    _type(source, text) {\n        if (!this._modelData || text.length === 0) {\n            return;\n        }\n        if (source === 'keyboard') {\n            this._onWillType.fire(text);\n        }\n        this._modelData.viewModel.type(text, source);\n        if (source === 'keyboard') {\n            this._onDidType.fire(text);\n        }\n    }\n    _compositionType(source, text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.compositionType(text, replacePrevCharCnt, replaceNextCharCnt, positionDelta, source);\n    }\n    _paste(source, text, pasteOnNewLine, multicursorText, mode) {\n        if (!this._modelData || text.length === 0) {\n            return;\n        }\n        const viewModel = this._modelData.viewModel;\n        const startPosition = viewModel.getSelection().getStartPosition();\n        viewModel.paste(text, pasteOnNewLine, multicursorText, source);\n        const endPosition = viewModel.getSelection().getStartPosition();\n        if (source === 'keyboard') {\n            this._onDidPaste.fire({\n                range: new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column),\n                languageId: mode\n            });\n        }\n    }\n    _cut(source) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.cut(source);\n    }\n    _triggerEditorCommand(source, handlerId, payload) {\n        const command = EditorExtensionsRegistry.getEditorCommand(handlerId);\n        if (command) {\n            payload = payload || {};\n            payload.source = source;\n            this._instantiationService.invokeFunction((accessor) => {\n                Promise.resolve(command.runEditorCommand(accessor, this, payload)).then(undefined, onUnexpectedError);\n            });\n            return true;\n        }\n        return false;\n    }\n    _getViewModel() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel;\n    }\n    pushUndoStop() {\n        if (!this._modelData) {\n            return false;\n        }\n        if (this._configuration.options.get(86 /* EditorOption.readOnly */)) {\n            // read only editor => sorry!\n            return false;\n        }\n        this._modelData.model.pushStackElement();\n        return true;\n    }\n    popUndoStop() {\n        if (!this._modelData) {\n            return false;\n        }\n        if (this._configuration.options.get(86 /* EditorOption.readOnly */)) {\n            // read only editor => sorry!\n            return false;\n        }\n        this._modelData.model.popStackElement();\n        return true;\n    }\n    executeEdits(source, edits, endCursorState) {\n        if (!this._modelData) {\n            return false;\n        }\n        if (this._configuration.options.get(86 /* EditorOption.readOnly */)) {\n            // read only editor => sorry!\n            return false;\n        }\n        let cursorStateComputer;\n        if (!endCursorState) {\n            cursorStateComputer = () => null;\n        }\n        else if (Array.isArray(endCursorState)) {\n            cursorStateComputer = () => endCursorState;\n        }\n        else {\n            cursorStateComputer = endCursorState;\n        }\n        this._modelData.viewModel.executeEdits(source, edits, cursorStateComputer);\n        return true;\n    }\n    executeCommand(source, command) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.executeCommand(command, source);\n    }\n    executeCommands(source, commands) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.executeCommands(commands, source);\n    }\n    createDecorationsCollection(decorations) {\n        return new EditorDecorationsCollection(this, decorations);\n    }\n    changeDecorations(callback) {\n        if (!this._modelData) {\n            // callback will not be called\n            return null;\n        }\n        return this._modelData.model.changeDecorations(callback, this._id);\n    }\n    getLineDecorations(lineNumber) {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.model.getLineDecorations(lineNumber, this._id, filterValidationDecorations(this._configuration.options));\n    }\n    getDecorationsInRange(range) {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.model.getDecorationsInRange(range, this._id, filterValidationDecorations(this._configuration.options));\n    }\n    /**\n     * @deprecated\n     */\n    deltaDecorations(oldDecorations, newDecorations) {\n        if (!this._modelData) {\n            return [];\n        }\n        if (oldDecorations.length === 0 && newDecorations.length === 0) {\n            return oldDecorations;\n        }\n        return this._modelData.model.deltaDecorations(oldDecorations, newDecorations, this._id);\n    }\n    removeDecorations(decorationIds) {\n        if (!this._modelData || decorationIds.length === 0) {\n            return;\n        }\n        this._modelData.model.changeDecorations((changeAccessor) => {\n            changeAccessor.deltaDecorations(decorationIds, []);\n        });\n    }\n    removeDecorationsByType(decorationTypeKey) {\n        // remove decorations for type and sub type\n        const oldDecorationsIds = this._decorationTypeKeysToIds[decorationTypeKey];\n        if (oldDecorationsIds) {\n            this.deltaDecorations(oldDecorationsIds, []);\n        }\n        if (this._decorationTypeKeysToIds.hasOwnProperty(decorationTypeKey)) {\n            delete this._decorationTypeKeysToIds[decorationTypeKey];\n        }\n        if (this._decorationTypeSubtypes.hasOwnProperty(decorationTypeKey)) {\n            delete this._decorationTypeSubtypes[decorationTypeKey];\n        }\n    }\n    getLayoutInfo() {\n        const options = this._configuration.options;\n        const layoutInfo = options.get(138 /* EditorOption.layoutInfo */);\n        return layoutInfo;\n    }\n    createOverviewRuler(cssClassName) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        return this._modelData.view.createOverviewRuler(cssClassName);\n    }\n    getContainerDomNode() {\n        return this._domElement;\n    }\n    getDomNode() {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        return this._modelData.view.domNode.domNode;\n    }\n    delegateVerticalScrollbarPointerDown(browserEvent) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.delegateVerticalScrollbarPointerDown(browserEvent);\n    }\n    delegateScrollFromMouseWheelEvent(browserEvent) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.delegateScrollFromMouseWheelEvent(browserEvent);\n    }\n    layout(dimension) {\n        this._configuration.observeContainer(dimension);\n        this.render();\n    }\n    focus() {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.focus();\n    }\n    hasTextFocus() {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return false;\n        }\n        return this._modelData.view.isFocused();\n    }\n    hasWidgetFocus() {\n        return this._focusTracker && this._focusTracker.hasFocus();\n    }\n    addContentWidget(widget) {\n        const widgetData = {\n            widget: widget,\n            position: widget.getPosition()\n        };\n        if (this._contentWidgets.hasOwnProperty(widget.getId())) {\n            console.warn('Overwriting a content widget with the same id.');\n        }\n        this._contentWidgets[widget.getId()] = widgetData;\n        if (this._modelData && this._modelData.hasRealView) {\n            this._modelData.view.addContentWidget(widgetData);\n        }\n    }\n    layoutContentWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._contentWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._contentWidgets[widgetId];\n            widgetData.position = widget.getPosition();\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.layoutContentWidget(widgetData);\n            }\n        }\n    }\n    removeContentWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._contentWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._contentWidgets[widgetId];\n            delete this._contentWidgets[widgetId];\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.removeContentWidget(widgetData);\n            }\n        }\n    }\n    addOverlayWidget(widget) {\n        const widgetData = {\n            widget: widget,\n            position: widget.getPosition()\n        };\n        if (this._overlayWidgets.hasOwnProperty(widget.getId())) {\n            console.warn('Overwriting an overlay widget with the same id.');\n        }\n        this._overlayWidgets[widget.getId()] = widgetData;\n        if (this._modelData && this._modelData.hasRealView) {\n            this._modelData.view.addOverlayWidget(widgetData);\n        }\n    }\n    layoutOverlayWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._overlayWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._overlayWidgets[widgetId];\n            widgetData.position = widget.getPosition();\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.layoutOverlayWidget(widgetData);\n            }\n        }\n    }\n    removeOverlayWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._overlayWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._overlayWidgets[widgetId];\n            delete this._overlayWidgets[widgetId];\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.removeOverlayWidget(widgetData);\n            }\n        }\n    }\n    changeViewZones(callback) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.change(callback);\n    }\n    getTargetAtClientPoint(clientX, clientY) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        return this._modelData.view.getTargetAtClientPoint(clientX, clientY);\n    }\n    getScrolledVisiblePosition(rawPosition) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        const position = this._modelData.model.validatePosition(rawPosition);\n        const options = this._configuration.options;\n        const layoutInfo = options.get(138 /* EditorOption.layoutInfo */);\n        const top = CodeEditorWidget._getVerticalOffsetForPosition(this._modelData, position.lineNumber, position.column) - this.getScrollTop();\n        const left = this._modelData.view.getOffsetForColumn(position.lineNumber, position.column) + layoutInfo.glyphMarginWidth + layoutInfo.lineNumbersWidth + layoutInfo.decorationsWidth - this.getScrollLeft();\n        return {\n            top: top,\n            left: left,\n            height: options.get(63 /* EditorOption.lineHeight */)\n        };\n    }\n    getOffsetForColumn(lineNumber, column) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return -1;\n        }\n        return this._modelData.view.getOffsetForColumn(lineNumber, column);\n    }\n    render(forceRedraw = false) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.render(true, forceRedraw);\n    }\n    setAriaOptions(options) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.setAriaOptions(options);\n    }\n    applyFontInfo(target) {\n        applyFontInfo(target, this._configuration.options.get(47 /* EditorOption.fontInfo */));\n    }\n    setBanner(domNode, domNodeHeight) {\n        if (this._bannerDomNode && this._domElement.contains(this._bannerDomNode)) {\n            this._domElement.removeChild(this._bannerDomNode);\n        }\n        this._bannerDomNode = domNode;\n        this._configuration.setReservedHeight(domNode ? domNodeHeight : 0);\n        if (this._bannerDomNode) {\n            this._domElement.prepend(this._bannerDomNode);\n        }\n    }\n    _attachModel(model) {\n        if (!model) {\n            this._modelData = null;\n            return;\n        }\n        const listenersToRemove = [];\n        this._domElement.setAttribute('data-mode-id', model.getLanguageId());\n        this._configuration.setIsDominatedByLongLines(model.isDominatedByLongLines());\n        this._configuration.setModelLineCount(model.getLineCount());\n        model.onBeforeAttached();\n        const viewModel = new ViewModel(this._id, this._configuration, model, DOMLineBreaksComputerFactory.create(), MonospaceLineBreaksComputerFactory.create(this._configuration.options), (callback) => dom.scheduleAtNextAnimationFrame(callback), this.languageConfigurationService, this._themeService);\n        // Someone might destroy the model from under the editor, so prevent any exceptions by setting a null model\n        listenersToRemove.push(model.onWillDispose(() => this.setModel(null)));\n        listenersToRemove.push(viewModel.onEvent((e) => {\n            switch (e.kind) {\n                case 0 /* OutgoingViewModelEventKind.ContentSizeChanged */:\n                    this._onDidContentSizeChange.fire(e);\n                    break;\n                case 1 /* OutgoingViewModelEventKind.FocusChanged */:\n                    this._editorTextFocus.setValue(e.hasFocus);\n                    break;\n                case 2 /* OutgoingViewModelEventKind.ScrollChanged */:\n                    this._onDidScrollChange.fire(e);\n                    break;\n                case 3 /* OutgoingViewModelEventKind.ViewZonesChanged */:\n                    this._onDidChangeViewZones.fire();\n                    break;\n                case 4 /* OutgoingViewModelEventKind.HiddenAreasChanged */:\n                    this._onDidChangeHiddenAreas.fire();\n                    break;\n                case 5 /* OutgoingViewModelEventKind.ReadOnlyEditAttempt */:\n                    this._onDidAttemptReadOnlyEdit.fire();\n                    break;\n                case 6 /* OutgoingViewModelEventKind.CursorStateChanged */: {\n                    if (e.reachedMaxCursorCount) {\n                        const multiCursorLimit = this.getOption(76 /* EditorOption.multiCursorLimit */);\n                        const message = nls.localize('cursors.maximum', \"The number of cursors has been limited to {0}. Consider using [find and replace](https://code.visualstudio.com/docs/editor/codebasics#_find-and-replace) for larger changes or increase the editor multi cursor limit setting.\", multiCursorLimit);\n                        this._notificationService.prompt(Severity.Warning, message, [\n                            {\n                                label: 'Find and Replace',\n                                run: () => {\n                                    this._commandService.executeCommand('editor.action.startFindReplaceAction');\n                                }\n                            },\n                            {\n                                label: nls.localize('goToSetting', 'Increase Multi Cursor Limit'),\n                                run: () => {\n                                    this._commandService.executeCommand('workbench.action.openSettings2', {\n                                        query: 'editor.multiCursorLimit'\n                                    });\n                                }\n                            }\n                        ]);\n                    }\n                    const positions = [];\n                    for (let i = 0, len = e.selections.length; i < len; i++) {\n                        positions[i] = e.selections[i].getPosition();\n                    }\n                    const e1 = {\n                        position: positions[0],\n                        secondaryPositions: positions.slice(1),\n                        reason: e.reason,\n                        source: e.source\n                    };\n                    this._onDidChangeCursorPosition.fire(e1);\n                    const e2 = {\n                        selection: e.selections[0],\n                        secondarySelections: e.selections.slice(1),\n                        modelVersionId: e.modelVersionId,\n                        oldSelections: e.oldSelections,\n                        oldModelVersionId: e.oldModelVersionId,\n                        source: e.source,\n                        reason: e.reason\n                    };\n                    this._onDidChangeCursorSelection.fire(e2);\n                    break;\n                }\n                case 7 /* OutgoingViewModelEventKind.ModelDecorationsChanged */:\n                    this._onDidChangeModelDecorations.fire(e.event);\n                    break;\n                case 8 /* OutgoingViewModelEventKind.ModelLanguageChanged */:\n                    this._domElement.setAttribute('data-mode-id', model.getLanguageId());\n                    this._onDidChangeModelLanguage.fire(e.event);\n                    break;\n                case 9 /* OutgoingViewModelEventKind.ModelLanguageConfigurationChanged */:\n                    this._onDidChangeModelLanguageConfiguration.fire(e.event);\n                    break;\n                case 10 /* OutgoingViewModelEventKind.ModelContentChanged */:\n                    this._onDidChangeModelContent.fire(e.event);\n                    break;\n                case 11 /* OutgoingViewModelEventKind.ModelOptionsChanged */:\n                    this._onDidChangeModelOptions.fire(e.event);\n                    break;\n                case 12 /* OutgoingViewModelEventKind.ModelTokensChanged */:\n                    this._onDidChangeModelTokens.fire(e.event);\n                    break;\n            }\n        }));\n        const [view, hasRealView] = this._createView(viewModel);\n        if (hasRealView) {\n            this._domElement.appendChild(view.domNode.domNode);\n            let keys = Object.keys(this._contentWidgets);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const widgetId = keys[i];\n                view.addContentWidget(this._contentWidgets[widgetId]);\n            }\n            keys = Object.keys(this._overlayWidgets);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const widgetId = keys[i];\n                view.addOverlayWidget(this._overlayWidgets[widgetId]);\n            }\n            view.render(false, true);\n            view.domNode.domNode.setAttribute('data-uri', model.uri.toString());\n        }\n        this._modelData = new ModelData(model, viewModel, view, hasRealView, listenersToRemove);\n    }\n    _createView(viewModel) {\n        let commandDelegate;\n        if (this.isSimpleWidget) {\n            commandDelegate = {\n                paste: (text, pasteOnNewLine, multicursorText, mode) => {\n                    this._paste('keyboard', text, pasteOnNewLine, multicursorText, mode);\n                },\n                type: (text) => {\n                    this._type('keyboard', text);\n                },\n                compositionType: (text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) => {\n                    this._compositionType('keyboard', text, replacePrevCharCnt, replaceNextCharCnt, positionDelta);\n                },\n                startComposition: () => {\n                    this._startComposition();\n                },\n                endComposition: () => {\n                    this._endComposition('keyboard');\n                },\n                cut: () => {\n                    this._cut('keyboard');\n                }\n            };\n        }\n        else {\n            commandDelegate = {\n                paste: (text, pasteOnNewLine, multicursorText, mode) => {\n                    const payload = { text, pasteOnNewLine, multicursorText, mode };\n                    this._commandService.executeCommand(\"paste\" /* editorCommon.Handler.Paste */, payload);\n                },\n                type: (text) => {\n                    const payload = { text };\n                    this._commandService.executeCommand(\"type\" /* editorCommon.Handler.Type */, payload);\n                },\n                compositionType: (text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) => {\n                    // Try if possible to go through the existing `replacePreviousChar` command\n                    if (replaceNextCharCnt || positionDelta) {\n                        // must be handled through the new command\n                        const payload = { text, replacePrevCharCnt, replaceNextCharCnt, positionDelta };\n                        this._commandService.executeCommand(\"compositionType\" /* editorCommon.Handler.CompositionType */, payload);\n                    }\n                    else {\n                        const payload = { text, replaceCharCnt: replacePrevCharCnt };\n                        this._commandService.executeCommand(\"replacePreviousChar\" /* editorCommon.Handler.ReplacePreviousChar */, payload);\n                    }\n                },\n                startComposition: () => {\n                    this._commandService.executeCommand(\"compositionStart\" /* editorCommon.Handler.CompositionStart */, {});\n                },\n                endComposition: () => {\n                    this._commandService.executeCommand(\"compositionEnd\" /* editorCommon.Handler.CompositionEnd */, {});\n                },\n                cut: () => {\n                    this._commandService.executeCommand(\"cut\" /* editorCommon.Handler.Cut */, {});\n                }\n            };\n        }\n        const viewUserInputEvents = new ViewUserInputEvents(viewModel.coordinatesConverter);\n        viewUserInputEvents.onKeyDown = (e) => this._onKeyDown.fire(e);\n        viewUserInputEvents.onKeyUp = (e) => this._onKeyUp.fire(e);\n        viewUserInputEvents.onContextMenu = (e) => this._onContextMenu.fire(e);\n        viewUserInputEvents.onMouseMove = (e) => this._onMouseMove.fire(e);\n        viewUserInputEvents.onMouseLeave = (e) => this._onMouseLeave.fire(e);\n        viewUserInputEvents.onMouseDown = (e) => this._onMouseDown.fire(e);\n        viewUserInputEvents.onMouseUp = (e) => this._onMouseUp.fire(e);\n        viewUserInputEvents.onMouseDrag = (e) => this._onMouseDrag.fire(e);\n        viewUserInputEvents.onMouseDrop = (e) => this._onMouseDrop.fire(e);\n        viewUserInputEvents.onMouseDropCanceled = (e) => this._onMouseDropCanceled.fire(e);\n        viewUserInputEvents.onMouseWheel = (e) => this._onMouseWheel.fire(e);\n        const view = new View(commandDelegate, this._configuration, this._themeService.getColorTheme(), viewModel, viewUserInputEvents, this._overflowWidgetsDomNode);\n        return [view, true];\n    }\n    _postDetachModelCleanup(detachedModel) {\n        detachedModel === null || detachedModel === void 0 ? void 0 : detachedModel.removeAllDecorationsWithOwnerId(this._id);\n    }\n    _detachModel() {\n        if (!this._modelData) {\n            return null;\n        }\n        const model = this._modelData.model;\n        const removeDomNode = this._modelData.hasRealView ? this._modelData.view.domNode.domNode : null;\n        this._modelData.dispose();\n        this._modelData = null;\n        this._domElement.removeAttribute('data-mode-id');\n        if (removeDomNode && this._domElement.contains(removeDomNode)) {\n            this._domElement.removeChild(removeDomNode);\n        }\n        if (this._bannerDomNode && this._domElement.contains(this._bannerDomNode)) {\n            this._domElement.removeChild(this._bannerDomNode);\n        }\n        return model;\n    }\n    _removeDecorationType(key) {\n        this._codeEditorService.removeDecorationType(key);\n    }\n    hasModel() {\n        return (this._modelData !== null);\n    }\n    showDropIndicatorAt(position) {\n        const newDecorations = [{\n                range: new Range(position.lineNumber, position.column, position.lineNumber, position.column),\n                options: CodeEditorWidget.dropIntoEditorDecorationOptions\n            }];\n        this._dropIntoEditorDecorations.set(newDecorations);\n        this.revealPosition(position, 1 /* editorCommon.ScrollType.Immediate */);\n    }\n    removeDropIndicator() {\n        this._dropIntoEditorDecorations.clear();\n    }\n};\nCodeEditorWidget.dropIntoEditorDecorationOptions = ModelDecorationOptions.register({\n    description: 'workbench-dnd-target',\n    className: 'dnd-target'\n});\nCodeEditorWidget = __decorate([\n    __param(3, IInstantiationService),\n    __param(4, ICodeEditorService),\n    __param(5, ICommandService),\n    __param(6, IContextKeyService),\n    __param(7, IThemeService),\n    __param(8, INotificationService),\n    __param(9, IAccessibilityService),\n    __param(10, ILanguageConfigurationService),\n    __param(11, ILanguageFeaturesService)\n], CodeEditorWidget);\nexport { CodeEditorWidget };\nexport class BooleanEventEmitter extends Disposable {\n    constructor(_emitterOptions) {\n        super();\n        this._emitterOptions = _emitterOptions;\n        this._onDidChangeToTrue = this._register(new Emitter(this._emitterOptions));\n        this.onDidChangeToTrue = this._onDidChangeToTrue.event;\n        this._onDidChangeToFalse = this._register(new Emitter(this._emitterOptions));\n        this.onDidChangeToFalse = this._onDidChangeToFalse.event;\n        this._value = 0 /* BooleanEventValue.NotSet */;\n    }\n    setValue(_value) {\n        const value = (_value ? 2 /* BooleanEventValue.True */ : 1 /* BooleanEventValue.False */);\n        if (this._value === value) {\n            return;\n        }\n        this._value = value;\n        if (this._value === 2 /* BooleanEventValue.True */) {\n            this._onDidChangeToTrue.fire();\n        }\n        else if (this._value === 1 /* BooleanEventValue.False */) {\n            this._onDidChangeToFalse.fire();\n        }\n    }\n}\n/**\n * A regular event emitter that also makes sure contributions are instantiated if necessary\n */\nclass InteractionEmitter extends Emitter {\n    constructor(_contributions, deliveryQueue) {\n        super({ deliveryQueue });\n        this._contributions = _contributions;\n    }\n    fire(event) {\n        this._contributions.onBeforeInteractionEvent();\n        super.fire(event);\n    }\n}\nclass EditorContextKeysManager extends Disposable {\n    constructor(editor, contextKeyService) {\n        super();\n        this._editor = editor;\n        contextKeyService.createKey('editorId', editor.getId());\n        this._editorSimpleInput = EditorContextKeys.editorSimpleInput.bindTo(contextKeyService);\n        this._editorFocus = EditorContextKeys.focus.bindTo(contextKeyService);\n        this._textInputFocus = EditorContextKeys.textInputFocus.bindTo(contextKeyService);\n        this._editorTextFocus = EditorContextKeys.editorTextFocus.bindTo(contextKeyService);\n        this._editorTabMovesFocus = EditorContextKeys.tabMovesFocus.bindTo(contextKeyService);\n        this._editorReadonly = EditorContextKeys.readOnly.bindTo(contextKeyService);\n        this._inDiffEditor = EditorContextKeys.inDiffEditor.bindTo(contextKeyService);\n        this._editorColumnSelection = EditorContextKeys.columnSelection.bindTo(contextKeyService);\n        this._hasMultipleSelections = EditorContextKeys.hasMultipleSelections.bindTo(contextKeyService);\n        this._hasNonEmptySelection = EditorContextKeys.hasNonEmptySelection.bindTo(contextKeyService);\n        this._canUndo = EditorContextKeys.canUndo.bindTo(contextKeyService);\n        this._canRedo = EditorContextKeys.canRedo.bindTo(contextKeyService);\n        this._register(this._editor.onDidChangeConfiguration(() => this._updateFromConfig()));\n        this._register(this._editor.onDidChangeCursorSelection(() => this._updateFromSelection()));\n        this._register(this._editor.onDidFocusEditorWidget(() => this._updateFromFocus()));\n        this._register(this._editor.onDidBlurEditorWidget(() => this._updateFromFocus()));\n        this._register(this._editor.onDidFocusEditorText(() => this._updateFromFocus()));\n        this._register(this._editor.onDidBlurEditorText(() => this._updateFromFocus()));\n        this._register(this._editor.onDidChangeModel(() => this._updateFromModel()));\n        this._register(this._editor.onDidChangeConfiguration(() => this._updateFromModel()));\n        this._register(TabFocus.onDidChangeTabFocus(() => this._editorTabMovesFocus.set(TabFocus.getTabFocusMode(\"editorFocus\" /* TabFocusContext.Editor */))));\n        this._updateFromConfig();\n        this._updateFromSelection();\n        this._updateFromFocus();\n        this._updateFromModel();\n        this._editorSimpleInput.set(this._editor.isSimpleWidget);\n    }\n    _updateFromConfig() {\n        const options = this._editor.getOptions();\n        this._editorTabMovesFocus.set(options.get(137 /* EditorOption.tabFocusMode */));\n        this._editorReadonly.set(options.get(86 /* EditorOption.readOnly */));\n        this._inDiffEditor.set(options.get(58 /* EditorOption.inDiffEditor */));\n        this._editorColumnSelection.set(options.get(19 /* EditorOption.columnSelection */));\n    }\n    _updateFromSelection() {\n        const selections = this._editor.getSelections();\n        if (!selections) {\n            this._hasMultipleSelections.reset();\n            this._hasNonEmptySelection.reset();\n        }\n        else {\n            this._hasMultipleSelections.set(selections.length > 1);\n            this._hasNonEmptySelection.set(selections.some(s => !s.isEmpty()));\n        }\n    }\n    _updateFromFocus() {\n        this._editorFocus.set(this._editor.hasWidgetFocus() && !this._editor.isSimpleWidget);\n        this._editorTextFocus.set(this._editor.hasTextFocus() && !this._editor.isSimpleWidget);\n        this._textInputFocus.set(this._editor.hasTextFocus());\n    }\n    _updateFromModel() {\n        const model = this._editor.getModel();\n        this._canUndo.set(Boolean(model && model.canUndo()));\n        this._canRedo.set(Boolean(model && model.canRedo()));\n    }\n}\nexport class EditorModeContext extends Disposable {\n    constructor(_editor, _contextKeyService, _languageFeaturesService) {\n        super();\n        this._editor = _editor;\n        this._contextKeyService = _contextKeyService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._langId = EditorContextKeys.languageId.bindTo(_contextKeyService);\n        this._hasCompletionItemProvider = EditorContextKeys.hasCompletionItemProvider.bindTo(_contextKeyService);\n        this._hasCodeActionsProvider = EditorContextKeys.hasCodeActionsProvider.bindTo(_contextKeyService);\n        this._hasCodeLensProvider = EditorContextKeys.hasCodeLensProvider.bindTo(_contextKeyService);\n        this._hasDefinitionProvider = EditorContextKeys.hasDefinitionProvider.bindTo(_contextKeyService);\n        this._hasDeclarationProvider = EditorContextKeys.hasDeclarationProvider.bindTo(_contextKeyService);\n        this._hasImplementationProvider = EditorContextKeys.hasImplementationProvider.bindTo(_contextKeyService);\n        this._hasTypeDefinitionProvider = EditorContextKeys.hasTypeDefinitionProvider.bindTo(_contextKeyService);\n        this._hasHoverProvider = EditorContextKeys.hasHoverProvider.bindTo(_contextKeyService);\n        this._hasDocumentHighlightProvider = EditorContextKeys.hasDocumentHighlightProvider.bindTo(_contextKeyService);\n        this._hasDocumentSymbolProvider = EditorContextKeys.hasDocumentSymbolProvider.bindTo(_contextKeyService);\n        this._hasReferenceProvider = EditorContextKeys.hasReferenceProvider.bindTo(_contextKeyService);\n        this._hasRenameProvider = EditorContextKeys.hasRenameProvider.bindTo(_contextKeyService);\n        this._hasSignatureHelpProvider = EditorContextKeys.hasSignatureHelpProvider.bindTo(_contextKeyService);\n        this._hasInlayHintsProvider = EditorContextKeys.hasInlayHintsProvider.bindTo(_contextKeyService);\n        this._hasDocumentFormattingProvider = EditorContextKeys.hasDocumentFormattingProvider.bindTo(_contextKeyService);\n        this._hasDocumentSelectionFormattingProvider = EditorContextKeys.hasDocumentSelectionFormattingProvider.bindTo(_contextKeyService);\n        this._hasMultipleDocumentFormattingProvider = EditorContextKeys.hasMultipleDocumentFormattingProvider.bindTo(_contextKeyService);\n        this._hasMultipleDocumentSelectionFormattingProvider = EditorContextKeys.hasMultipleDocumentSelectionFormattingProvider.bindTo(_contextKeyService);\n        this._isInWalkThrough = EditorContextKeys.isInWalkThroughSnippet.bindTo(_contextKeyService);\n        const update = () => this._update();\n        // update when model/mode changes\n        this._register(_editor.onDidChangeModel(update));\n        this._register(_editor.onDidChangeModelLanguage(update));\n        // update when registries change\n        this._register(_languageFeaturesService.completionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.codeActionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.codeLensProvider.onDidChange(update));\n        this._register(_languageFeaturesService.definitionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.declarationProvider.onDidChange(update));\n        this._register(_languageFeaturesService.implementationProvider.onDidChange(update));\n        this._register(_languageFeaturesService.typeDefinitionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.hoverProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentHighlightProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentSymbolProvider.onDidChange(update));\n        this._register(_languageFeaturesService.referenceProvider.onDidChange(update));\n        this._register(_languageFeaturesService.renameProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentFormattingEditProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentRangeFormattingEditProvider.onDidChange(update));\n        this._register(_languageFeaturesService.signatureHelpProvider.onDidChange(update));\n        this._register(_languageFeaturesService.inlayHintsProvider.onDidChange(update));\n        update();\n    }\n    dispose() {\n        super.dispose();\n    }\n    reset() {\n        this._contextKeyService.bufferChangeEvents(() => {\n            this._langId.reset();\n            this._hasCompletionItemProvider.reset();\n            this._hasCodeActionsProvider.reset();\n            this._hasCodeLensProvider.reset();\n            this._hasDefinitionProvider.reset();\n            this._hasDeclarationProvider.reset();\n            this._hasImplementationProvider.reset();\n            this._hasTypeDefinitionProvider.reset();\n            this._hasHoverProvider.reset();\n            this._hasDocumentHighlightProvider.reset();\n            this._hasDocumentSymbolProvider.reset();\n            this._hasReferenceProvider.reset();\n            this._hasRenameProvider.reset();\n            this._hasDocumentFormattingProvider.reset();\n            this._hasDocumentSelectionFormattingProvider.reset();\n            this._hasSignatureHelpProvider.reset();\n            this._isInWalkThrough.reset();\n        });\n    }\n    _update() {\n        const model = this._editor.getModel();\n        if (!model) {\n            this.reset();\n            return;\n        }\n        this._contextKeyService.bufferChangeEvents(() => {\n            this._langId.set(model.getLanguageId());\n            this._hasCompletionItemProvider.set(this._languageFeaturesService.completionProvider.has(model));\n            this._hasCodeActionsProvider.set(this._languageFeaturesService.codeActionProvider.has(model));\n            this._hasCodeLensProvider.set(this._languageFeaturesService.codeLensProvider.has(model));\n            this._hasDefinitionProvider.set(this._languageFeaturesService.definitionProvider.has(model));\n            this._hasDeclarationProvider.set(this._languageFeaturesService.declarationProvider.has(model));\n            this._hasImplementationProvider.set(this._languageFeaturesService.implementationProvider.has(model));\n            this._hasTypeDefinitionProvider.set(this._languageFeaturesService.typeDefinitionProvider.has(model));\n            this._hasHoverProvider.set(this._languageFeaturesService.hoverProvider.has(model));\n            this._hasDocumentHighlightProvider.set(this._languageFeaturesService.documentHighlightProvider.has(model));\n            this._hasDocumentSymbolProvider.set(this._languageFeaturesService.documentSymbolProvider.has(model));\n            this._hasReferenceProvider.set(this._languageFeaturesService.referenceProvider.has(model));\n            this._hasRenameProvider.set(this._languageFeaturesService.renameProvider.has(model));\n            this._hasSignatureHelpProvider.set(this._languageFeaturesService.signatureHelpProvider.has(model));\n            this._hasInlayHintsProvider.set(this._languageFeaturesService.inlayHintsProvider.has(model));\n            this._hasDocumentFormattingProvider.set(this._languageFeaturesService.documentFormattingEditProvider.has(model) || this._languageFeaturesService.documentRangeFormattingEditProvider.has(model));\n            this._hasDocumentSelectionFormattingProvider.set(this._languageFeaturesService.documentRangeFormattingEditProvider.has(model));\n            this._hasMultipleDocumentFormattingProvider.set(this._languageFeaturesService.documentFormattingEditProvider.all(model).length + this._languageFeaturesService.documentRangeFormattingEditProvider.all(model).length > 1);\n            this._hasMultipleDocumentSelectionFormattingProvider.set(this._languageFeaturesService.documentRangeFormattingEditProvider.all(model).length > 1);\n            this._isInWalkThrough.set(model.uri.scheme === Schemas.walkThroughSnippet);\n        });\n    }\n}\nclass CodeEditorWidgetFocusTracker extends Disposable {\n    constructor(domElement) {\n        super();\n        this._onChange = this._register(new Emitter());\n        this.onChange = this._onChange.event;\n        this._hasFocus = false;\n        this._domFocusTracker = this._register(dom.trackFocus(domElement));\n        this._register(this._domFocusTracker.onDidFocus(() => {\n            this._hasFocus = true;\n            this._onChange.fire(undefined);\n        }));\n        this._register(this._domFocusTracker.onDidBlur(() => {\n            this._hasFocus = false;\n            this._onChange.fire(undefined);\n        }));\n    }\n    hasFocus() {\n        return this._hasFocus;\n    }\n}\nclass EditorDecorationsCollection {\n    get length() {\n        return this._decorationIds.length;\n    }\n    constructor(_editor, decorations) {\n        this._editor = _editor;\n        this._decorationIds = [];\n        this._isChangingDecorations = false;\n        if (Array.isArray(decorations) && decorations.length > 0) {\n            this.set(decorations);\n        }\n    }\n    onDidChange(listener, thisArgs, disposables) {\n        return this._editor.onDidChangeModelDecorations((e) => {\n            if (this._isChangingDecorations) {\n                return;\n            }\n            listener.call(thisArgs, e);\n        }, disposables);\n    }\n    getRange(index) {\n        if (!this._editor.hasModel()) {\n            return null;\n        }\n        if (index >= this._decorationIds.length) {\n            return null;\n        }\n        return this._editor.getModel().getDecorationRange(this._decorationIds[index]);\n    }\n    getRanges() {\n        if (!this._editor.hasModel()) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const result = [];\n        for (const decorationId of this._decorationIds) {\n            const range = model.getDecorationRange(decorationId);\n            if (range) {\n                result.push(range);\n            }\n        }\n        return result;\n    }\n    has(decoration) {\n        return this._decorationIds.includes(decoration.id);\n    }\n    clear() {\n        if (this._decorationIds.length === 0) {\n            // nothing to do\n            return;\n        }\n        this.set([]);\n    }\n    set(newDecorations) {\n        try {\n            this._isChangingDecorations = true;\n            this._editor.changeDecorations((accessor) => {\n                this._decorationIds = accessor.deltaDecorations(this._decorationIds, newDecorations);\n            });\n        }\n        finally {\n            this._isChangingDecorations = false;\n        }\n    }\n}\nconst squigglyStart = encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 6 3' enable-background='new 0 0 6 3' height='3' width='6'><g fill='`);\nconst squigglyEnd = encodeURIComponent(`'><polygon points='5.5,0 2.5,3 1.1,3 4.1,0'/><polygon points='4,0 6,2 6,0.6 5.4,0'/><polygon points='0,2 1,3 2.4,3 0,0.6'/></g></svg>`);\nfunction getSquigglySVGData(color) {\n    return squigglyStart + encodeURIComponent(color.toString()) + squigglyEnd;\n}\nconst dotdotdotStart = encodeURIComponent(`<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"3\" width=\"12\"><g fill=\"`);\nconst dotdotdotEnd = encodeURIComponent(`\"><circle cx=\"1\" cy=\"1\" r=\"1\"/><circle cx=\"5\" cy=\"1\" r=\"1\"/><circle cx=\"9\" cy=\"1\" r=\"1\"/></g></svg>`);\nfunction getDotDotDotSVGData(color) {\n    return dotdotdotStart + encodeURIComponent(color.toString()) + dotdotdotEnd;\n}\nregisterThemingParticipant((theme, collector) => {\n    const errorForeground = theme.getColor(editorErrorForeground);\n    if (errorForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-error\" /* ClassName.EditorErrorDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(errorForeground)}\") repeat-x bottom left; }`);\n    }\n    const warningForeground = theme.getColor(editorWarningForeground);\n    if (warningForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-warning\" /* ClassName.EditorWarningDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(warningForeground)}\") repeat-x bottom left; }`);\n    }\n    const infoForeground = theme.getColor(editorInfoForeground);\n    if (infoForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-info\" /* ClassName.EditorInfoDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(infoForeground)}\") repeat-x bottom left; }`);\n    }\n    const hintForeground = theme.getColor(editorHintForeground);\n    if (hintForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-hint\" /* ClassName.EditorHintDecoration */} { background: url(\"data:image/svg+xml,${getDotDotDotSVGData(hintForeground)}\") no-repeat bottom left; }`);\n    }\n    const unnecessaryForeground = theme.getColor(editorUnnecessaryCodeOpacity);\n    if (unnecessaryForeground) {\n        collector.addRule(`.monaco-editor.showUnused .${\"squiggly-inline-unnecessary\" /* ClassName.EditorUnnecessaryInlineDecoration */} { opacity: ${unnecessaryForeground.rgba.a}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar _a;\nimport './media/diffReview.css';\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { DomScrollableElement } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { Action } from '../../../base/common/actions.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { EditorAction, registerEditorAction } from '../editorExtensions.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { EditorFontLigatures } from '../../common/config/editorOptions.js';\nimport { LineTokens } from '../../common/tokens/lineTokens.js';\nimport { Position } from '../../common/core/position.js';\nimport { RenderLineInput, renderViewLine2 as renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\nimport { ViewLineRenderingData } from '../../common/viewModel.js';\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\nimport { ILanguageService } from '../../common/languages/language.js';\nimport { AudioCue, IAudioCueService } from '../../../platform/audioCues/browser/audioCueService.js';\nconst DIFF_LINES_PADDING = 3;\nclass DiffEntry {\n    constructor(originalLineStart, originalLineEnd, modifiedLineStart, modifiedLineEnd) {\n        this.originalLineStart = originalLineStart;\n        this.originalLineEnd = originalLineEnd;\n        this.modifiedLineStart = modifiedLineStart;\n        this.modifiedLineEnd = modifiedLineEnd;\n    }\n    getType() {\n        if (this.originalLineStart === 0) {\n            return 1 /* DiffEntryType.Insert */;\n        }\n        if (this.modifiedLineStart === 0) {\n            return 2 /* DiffEntryType.Delete */;\n        }\n        return 0 /* DiffEntryType.Equal */;\n    }\n}\nclass Diff {\n    constructor(entries) {\n        this.entries = entries;\n    }\n}\nconst diffReviewInsertIcon = registerIcon('diff-review-insert', Codicon.add, nls.localize('diffReviewInsertIcon', 'Icon for \\'Insert\\' in diff review.'));\nconst diffReviewRemoveIcon = registerIcon('diff-review-remove', Codicon.remove, nls.localize('diffReviewRemoveIcon', 'Icon for \\'Remove\\' in diff review.'));\nconst diffReviewCloseIcon = registerIcon('diff-review-close', Codicon.close, nls.localize('diffReviewCloseIcon', 'Icon for \\'Close\\' in diff review.'));\nlet DiffReview = class DiffReview extends Disposable {\n    constructor(diffEditor, _languageService, _audioCueService) {\n        super();\n        this._languageService = _languageService;\n        this._audioCueService = _audioCueService;\n        this._width = 0;\n        this._diffEditor = diffEditor;\n        this._isVisible = false;\n        this.shadow = createFastDomNode(document.createElement('div'));\n        this.shadow.setClassName('diff-review-shadow');\n        this.actionBarContainer = createFastDomNode(document.createElement('div'));\n        this.actionBarContainer.setClassName('diff-review-actions');\n        this._actionBar = this._register(new ActionBar(this.actionBarContainer.domNode));\n        this._actionBar.push(new Action('diffreview.close', nls.localize('label.close', \"Close\"), 'close-diff-review ' + ThemeIcon.asClassName(diffReviewCloseIcon), true, () => __awaiter(this, void 0, void 0, function* () { return this.hide(); })), { label: false, icon: true });\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setClassName('diff-review monaco-editor-background');\n        this._content = createFastDomNode(document.createElement('div'));\n        this._content.setClassName('diff-review-content');\n        this._content.setAttribute('role', 'code');\n        this.scrollbar = this._register(new DomScrollableElement(this._content.domNode, {}));\n        this.domNode.domNode.appendChild(this.scrollbar.getDomNode());\n        this._register(diffEditor.onDidUpdateDiff(() => {\n            if (!this._isVisible) {\n                return;\n            }\n            this._diffs = this._compute();\n            this._render();\n        }));\n        this._register(diffEditor.getModifiedEditor().onDidChangeCursorPosition(() => {\n            if (!this._isVisible) {\n                return;\n            }\n            this._render();\n        }));\n        this._register(dom.addStandardDisposableListener(this.domNode.domNode, 'click', (e) => {\n            e.preventDefault();\n            const row = dom.findParentWithClass(e.target, 'diff-review-row');\n            if (row) {\n                this._goToRow(row);\n            }\n        }));\n        this._register(dom.addStandardDisposableListener(this.domNode.domNode, 'keydown', (e) => {\n            if (e.equals(18 /* KeyCode.DownArrow */)\n                || e.equals(2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */)\n                || e.equals(512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */)) {\n                e.preventDefault();\n                this._goToRow(this._getNextRow(), 'next');\n            }\n            if (e.equals(16 /* KeyCode.UpArrow */)\n                || e.equals(2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */)\n                || e.equals(512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */)) {\n                e.preventDefault();\n                this._goToRow(this._getPrevRow(), 'previous');\n            }\n            if (e.equals(9 /* KeyCode.Escape */)\n                || e.equals(2048 /* KeyMod.CtrlCmd */ | 9 /* KeyCode.Escape */)\n                || e.equals(512 /* KeyMod.Alt */ | 9 /* KeyCode.Escape */)\n                || e.equals(1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */)\n                || e.equals(10 /* KeyCode.Space */)\n                || e.equals(3 /* KeyCode.Enter */)) {\n                e.preventDefault();\n                this.accept();\n            }\n        }));\n        this._diffs = [];\n        this._currentDiff = null;\n    }\n    prev() {\n        let index = 0;\n        if (!this._isVisible) {\n            this._diffs = this._compute();\n        }\n        if (this._isVisible) {\n            let currentIndex = -1;\n            for (let i = 0, len = this._diffs.length; i < len; i++) {\n                if (this._diffs[i] === this._currentDiff) {\n                    currentIndex = i;\n                    break;\n                }\n            }\n            index = (this._diffs.length + currentIndex - 1);\n        }\n        else {\n            index = this._findDiffIndex(this._diffEditor.getPosition());\n        }\n        if (this._diffs.length === 0) {\n            // Nothing to do\n            return;\n        }\n        index = index % this._diffs.length;\n        const entries = this._diffs[index].entries;\n        this._diffEditor.setPosition(new Position(entries[0].modifiedLineStart, 1));\n        this._diffEditor.setSelection({ startColumn: 1, startLineNumber: entries[0].modifiedLineStart, endColumn: 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, endLineNumber: entries[entries.length - 1].modifiedLineEnd });\n        this._isVisible = true;\n        this._diffEditor.doLayout();\n        this._render();\n        this._goToRow(this._getPrevRow(), 'previous');\n    }\n    next() {\n        let index = 0;\n        if (!this._isVisible) {\n            this._diffs = this._compute();\n        }\n        if (this._isVisible) {\n            let currentIndex = -1;\n            for (let i = 0, len = this._diffs.length; i < len; i++) {\n                if (this._diffs[i] === this._currentDiff) {\n                    currentIndex = i;\n                    break;\n                }\n            }\n            index = (currentIndex + 1);\n        }\n        else {\n            index = this._findDiffIndex(this._diffEditor.getPosition());\n        }\n        if (this._diffs.length === 0) {\n            // Nothing to do\n            return;\n        }\n        index = index % this._diffs.length;\n        const entries = this._diffs[index].entries;\n        this._diffEditor.setPosition(new Position(entries[0].modifiedLineStart, 1));\n        this._diffEditor.setSelection({ startColumn: 1, startLineNumber: entries[0].modifiedLineStart, endColumn: 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, endLineNumber: entries[entries.length - 1].modifiedLineEnd });\n        this._isVisible = true;\n        this._diffEditor.doLayout();\n        this._render();\n        this._goToRow(this._getNextRow(), 'next');\n    }\n    accept() {\n        let jumpToLineNumber = -1;\n        const current = this._getCurrentFocusedRow();\n        if (current) {\n            const lineNumber = parseInt(current.getAttribute('data-line'), 10);\n            if (!isNaN(lineNumber)) {\n                jumpToLineNumber = lineNumber;\n            }\n        }\n        this.hide();\n        if (jumpToLineNumber !== -1) {\n            this._diffEditor.setPosition(new Position(jumpToLineNumber, 1));\n            this._diffEditor.revealPosition(new Position(jumpToLineNumber, 1), 1 /* ScrollType.Immediate */);\n        }\n    }\n    hide() {\n        this._isVisible = false;\n        this._diffEditor.updateOptions({ readOnly: false });\n        this._diffEditor.focus();\n        this._diffEditor.doLayout();\n        this._render();\n    }\n    _getPrevRow() {\n        const current = this._getCurrentFocusedRow();\n        if (!current) {\n            return this._getFirstRow();\n        }\n        if (current.previousElementSibling) {\n            return current.previousElementSibling;\n        }\n        return current;\n    }\n    _getNextRow() {\n        const current = this._getCurrentFocusedRow();\n        if (!current) {\n            return this._getFirstRow();\n        }\n        if (current.nextElementSibling) {\n            return current.nextElementSibling;\n        }\n        return current;\n    }\n    _getFirstRow() {\n        return this.domNode.domNode.querySelector('.diff-review-row');\n    }\n    _getCurrentFocusedRow() {\n        const result = document.activeElement;\n        if (result && /diff-review-row/.test(result.className)) {\n            return result;\n        }\n        return null;\n    }\n    _goToRow(row, type) {\n        const current = this._getCurrentFocusedRow();\n        row.tabIndex = 0;\n        row.focus();\n        if (current && current !== row) {\n            current.tabIndex = -1;\n        }\n        const element = !type ? current : type === 'next' ? current === null || current === void 0 ? void 0 : current.nextElementSibling : current === null || current === void 0 ? void 0 : current.previousElementSibling;\n        if (element === null || element === void 0 ? void 0 : element.classList.contains(\"line-insert\" /* DiffEditorLineClasses.Insert */)) {\n            this._audioCueService.playAudioCue(AudioCue.diffLineInserted, true);\n        }\n        else if (element === null || element === void 0 ? void 0 : element.classList.contains(\"line-delete\" /* DiffEditorLineClasses.Delete */)) {\n            this._audioCueService.playAudioCue(AudioCue.diffLineDeleted, true);\n        }\n        this.scrollbar.scanDomNode();\n    }\n    isVisible() {\n        return this._isVisible;\n    }\n    layout(top, width, height) {\n        this._width = width;\n        this.shadow.setTop(top - 6);\n        this.shadow.setWidth(width);\n        this.shadow.setHeight(this._isVisible ? 6 : 0);\n        this.domNode.setTop(top);\n        this.domNode.setWidth(width);\n        this.domNode.setHeight(height);\n        this._content.setHeight(height);\n        this._content.setWidth(width);\n        if (this._isVisible) {\n            this.actionBarContainer.setAttribute('aria-hidden', 'false');\n            this.actionBarContainer.setDisplay('block');\n        }\n        else {\n            this.actionBarContainer.setAttribute('aria-hidden', 'true');\n            this.actionBarContainer.setDisplay('none');\n        }\n    }\n    _compute() {\n        const lineChanges = this._diffEditor.getLineChanges();\n        if (!lineChanges || lineChanges.length === 0) {\n            return [];\n        }\n        const originalModel = this._diffEditor.getOriginalEditor().getModel();\n        const modifiedModel = this._diffEditor.getModifiedEditor().getModel();\n        if (!originalModel || !modifiedModel) {\n            return [];\n        }\n        return DiffReview._mergeAdjacent(lineChanges, originalModel.getLineCount(), modifiedModel.getLineCount());\n    }\n    static _mergeAdjacent(lineChanges, originalLineCount, modifiedLineCount) {\n        if (!lineChanges || lineChanges.length === 0) {\n            return [];\n        }\n        const diffs = [];\n        let diffsLength = 0;\n        for (let i = 0, len = lineChanges.length; i < len; i++) {\n            const lineChange = lineChanges[i];\n            const originalStart = lineChange.originalStartLineNumber;\n            const originalEnd = lineChange.originalEndLineNumber;\n            const modifiedStart = lineChange.modifiedStartLineNumber;\n            const modifiedEnd = lineChange.modifiedEndLineNumber;\n            const r = [];\n            let rLength = 0;\n            // Emit before anchors\n            {\n                const originalEqualAbove = (originalEnd === 0 ? originalStart : originalStart - 1);\n                const modifiedEqualAbove = (modifiedEnd === 0 ? modifiedStart : modifiedStart - 1);\n                // Make sure we don't step into the previous diff\n                let minOriginal = 1;\n                let minModified = 1;\n                if (i > 0) {\n                    const prevLineChange = lineChanges[i - 1];\n                    if (prevLineChange.originalEndLineNumber === 0) {\n                        minOriginal = prevLineChange.originalStartLineNumber + 1;\n                    }\n                    else {\n                        minOriginal = prevLineChange.originalEndLineNumber + 1;\n                    }\n                    if (prevLineChange.modifiedEndLineNumber === 0) {\n                        minModified = prevLineChange.modifiedStartLineNumber + 1;\n                    }\n                    else {\n                        minModified = prevLineChange.modifiedEndLineNumber + 1;\n                    }\n                }\n                let fromOriginal = originalEqualAbove - DIFF_LINES_PADDING + 1;\n                let fromModified = modifiedEqualAbove - DIFF_LINES_PADDING + 1;\n                if (fromOriginal < minOriginal) {\n                    const delta = minOriginal - fromOriginal;\n                    fromOriginal = fromOriginal + delta;\n                    fromModified = fromModified + delta;\n                }\n                if (fromModified < minModified) {\n                    const delta = minModified - fromModified;\n                    fromOriginal = fromOriginal + delta;\n                    fromModified = fromModified + delta;\n                }\n                r[rLength++] = new DiffEntry(fromOriginal, originalEqualAbove, fromModified, modifiedEqualAbove);\n            }\n            // Emit deleted lines\n            {\n                if (originalEnd !== 0) {\n                    r[rLength++] = new DiffEntry(originalStart, originalEnd, 0, 0);\n                }\n            }\n            // Emit inserted lines\n            {\n                if (modifiedEnd !== 0) {\n                    r[rLength++] = new DiffEntry(0, 0, modifiedStart, modifiedEnd);\n                }\n            }\n            // Emit after anchors\n            {\n                const originalEqualBelow = (originalEnd === 0 ? originalStart + 1 : originalEnd + 1);\n                const modifiedEqualBelow = (modifiedEnd === 0 ? modifiedStart + 1 : modifiedEnd + 1);\n                // Make sure we don't step into the next diff\n                let maxOriginal = originalLineCount;\n                let maxModified = modifiedLineCount;\n                if (i + 1 < len) {\n                    const nextLineChange = lineChanges[i + 1];\n                    if (nextLineChange.originalEndLineNumber === 0) {\n                        maxOriginal = nextLineChange.originalStartLineNumber;\n                    }\n                    else {\n                        maxOriginal = nextLineChange.originalStartLineNumber - 1;\n                    }\n                    if (nextLineChange.modifiedEndLineNumber === 0) {\n                        maxModified = nextLineChange.modifiedStartLineNumber;\n                    }\n                    else {\n                        maxModified = nextLineChange.modifiedStartLineNumber - 1;\n                    }\n                }\n                let toOriginal = originalEqualBelow + DIFF_LINES_PADDING - 1;\n                let toModified = modifiedEqualBelow + DIFF_LINES_PADDING - 1;\n                if (toOriginal > maxOriginal) {\n                    const delta = maxOriginal - toOriginal;\n                    toOriginal = toOriginal + delta;\n                    toModified = toModified + delta;\n                }\n                if (toModified > maxModified) {\n                    const delta = maxModified - toModified;\n                    toOriginal = toOriginal + delta;\n                    toModified = toModified + delta;\n                }\n                r[rLength++] = new DiffEntry(originalEqualBelow, toOriginal, modifiedEqualBelow, toModified);\n            }\n            diffs[diffsLength++] = new Diff(r);\n        }\n        // Merge adjacent diffs\n        let curr = diffs[0].entries;\n        const r = [];\n        let rLength = 0;\n        for (let i = 1, len = diffs.length; i < len; i++) {\n            const thisDiff = diffs[i].entries;\n            const currLast = curr[curr.length - 1];\n            const thisFirst = thisDiff[0];\n            if (currLast.getType() === 0 /* DiffEntryType.Equal */\n                && thisFirst.getType() === 0 /* DiffEntryType.Equal */\n                && thisFirst.originalLineStart <= currLast.originalLineEnd) {\n                // We are dealing with equal lines that overlap\n                curr[curr.length - 1] = new DiffEntry(currLast.originalLineStart, thisFirst.originalLineEnd, currLast.modifiedLineStart, thisFirst.modifiedLineEnd);\n                curr = curr.concat(thisDiff.slice(1));\n                continue;\n            }\n            r[rLength++] = new Diff(curr);\n            curr = thisDiff;\n        }\n        r[rLength++] = new Diff(curr);\n        return r;\n    }\n    _findDiffIndex(pos) {\n        const lineNumber = pos.lineNumber;\n        for (let i = 0, len = this._diffs.length; i < len; i++) {\n            const diff = this._diffs[i].entries;\n            const lastModifiedLine = diff[diff.length - 1].modifiedLineEnd;\n            if (lineNumber <= lastModifiedLine) {\n                return i;\n            }\n        }\n        return 0;\n    }\n    _render() {\n        const originalOptions = this._diffEditor.getOriginalEditor().getOptions();\n        const modifiedOptions = this._diffEditor.getModifiedEditor().getOptions();\n        const originalModel = this._diffEditor.getOriginalEditor().getModel();\n        const modifiedModel = this._diffEditor.getModifiedEditor().getModel();\n        const originalModelOpts = originalModel.getOptions();\n        const modifiedModelOpts = modifiedModel.getOptions();\n        if (!this._isVisible || !originalModel || !modifiedModel) {\n            dom.clearNode(this._content.domNode);\n            this._currentDiff = null;\n            this.scrollbar.scanDomNode();\n            return;\n        }\n        this._diffEditor.updateOptions({ readOnly: true });\n        const diffIndex = this._findDiffIndex(this._diffEditor.getPosition());\n        if (this._diffs[diffIndex] === this._currentDiff) {\n            return;\n        }\n        this._currentDiff = this._diffs[diffIndex];\n        const diffs = this._diffs[diffIndex].entries;\n        const container = document.createElement('div');\n        container.className = 'diff-review-table';\n        container.setAttribute('role', 'list');\n        container.setAttribute('aria-label', 'Difference review. Use \"Stage | Unstage | Revert Selected Ranges\" commands');\n        applyFontInfo(container, modifiedOptions.get(47 /* EditorOption.fontInfo */));\n        let minOriginalLine = 0;\n        let maxOriginalLine = 0;\n        let minModifiedLine = 0;\n        let maxModifiedLine = 0;\n        for (let i = 0, len = diffs.length; i < len; i++) {\n            const diffEntry = diffs[i];\n            const originalLineStart = diffEntry.originalLineStart;\n            const originalLineEnd = diffEntry.originalLineEnd;\n            const modifiedLineStart = diffEntry.modifiedLineStart;\n            const modifiedLineEnd = diffEntry.modifiedLineEnd;\n            if (originalLineStart !== 0 && ((minOriginalLine === 0 || originalLineStart < minOriginalLine))) {\n                minOriginalLine = originalLineStart;\n            }\n            if (originalLineEnd !== 0 && ((maxOriginalLine === 0 || originalLineEnd > maxOriginalLine))) {\n                maxOriginalLine = originalLineEnd;\n            }\n            if (modifiedLineStart !== 0 && ((minModifiedLine === 0 || modifiedLineStart < minModifiedLine))) {\n                minModifiedLine = modifiedLineStart;\n            }\n            if (modifiedLineEnd !== 0 && ((maxModifiedLine === 0 || modifiedLineEnd > maxModifiedLine))) {\n                maxModifiedLine = modifiedLineEnd;\n            }\n        }\n        const header = document.createElement('div');\n        header.className = 'diff-review-row';\n        const cell = document.createElement('div');\n        cell.className = 'diff-review-cell diff-review-summary';\n        const originalChangedLinesCnt = maxOriginalLine - minOriginalLine + 1;\n        const modifiedChangedLinesCnt = maxModifiedLine - minModifiedLine + 1;\n        cell.appendChild(document.createTextNode(`${diffIndex + 1}/${this._diffs.length}: @@ -${minOriginalLine},${originalChangedLinesCnt} +${minModifiedLine},${modifiedChangedLinesCnt} @@`));\n        header.setAttribute('data-line', String(minModifiedLine));\n        const getAriaLines = (lines) => {\n            if (lines === 0) {\n                return nls.localize('no_lines_changed', \"no lines changed\");\n            }\n            else if (lines === 1) {\n                return nls.localize('one_line_changed', \"1 line changed\");\n            }\n            else {\n                return nls.localize('more_lines_changed', \"{0} lines changed\", lines);\n            }\n        };\n        const originalChangedLinesCntAria = getAriaLines(originalChangedLinesCnt);\n        const modifiedChangedLinesCntAria = getAriaLines(modifiedChangedLinesCnt);\n        header.setAttribute('aria-label', nls.localize({\n            key: 'header',\n            comment: [\n                'This is the ARIA label for a git diff header.',\n                'A git diff header looks like this: @@ -154,12 +159,39 @@.',\n                'That encodes that at original line 154 (which is now line 159), 12 lines were removed/changed with 39 lines.',\n                'Variables 0 and 1 refer to the diff index out of total number of diffs.',\n                'Variables 2 and 4 will be numbers (a line number).',\n                'Variables 3 and 5 will be \"no lines changed\", \"1 line changed\" or \"X lines changed\", localized separately.'\n            ]\n        }, \"Difference {0} of {1}: original line {2}, {3}, modified line {4}, {5}\", (diffIndex + 1), this._diffs.length, minOriginalLine, originalChangedLinesCntAria, minModifiedLine, modifiedChangedLinesCntAria));\n        header.appendChild(cell);\n        // @@ -504,7 +517,7 @@\n        header.setAttribute('role', 'listitem');\n        container.appendChild(header);\n        const lineHeight = modifiedOptions.get(63 /* EditorOption.lineHeight */);\n        let modLine = minModifiedLine;\n        for (let i = 0, len = diffs.length; i < len; i++) {\n            const diffEntry = diffs[i];\n            DiffReview._renderSection(container, diffEntry, modLine, lineHeight, this._width, originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts, this._languageService.languageIdCodec);\n            if (diffEntry.modifiedLineStart !== 0) {\n                modLine = diffEntry.modifiedLineEnd;\n            }\n        }\n        dom.clearNode(this._content.domNode);\n        this._content.domNode.appendChild(container);\n        this.scrollbar.scanDomNode();\n    }\n    static _renderSection(dest, diffEntry, modLine, lineHeight, width, originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts, languageIdCodec) {\n        const type = diffEntry.getType();\n        let rowClassName = 'diff-review-row';\n        let lineNumbersExtraClassName = '';\n        const spacerClassName = 'diff-review-spacer';\n        let spacerIcon = null;\n        switch (type) {\n            case 1 /* DiffEntryType.Insert */:\n                rowClassName = 'diff-review-row line-insert';\n                lineNumbersExtraClassName = ' char-insert';\n                spacerIcon = diffReviewInsertIcon;\n                break;\n            case 2 /* DiffEntryType.Delete */:\n                rowClassName = 'diff-review-row line-delete';\n                lineNumbersExtraClassName = ' char-delete';\n                spacerIcon = diffReviewRemoveIcon;\n                break;\n        }\n        const originalLineStart = diffEntry.originalLineStart;\n        const originalLineEnd = diffEntry.originalLineEnd;\n        const modifiedLineStart = diffEntry.modifiedLineStart;\n        const modifiedLineEnd = diffEntry.modifiedLineEnd;\n        const cnt = Math.max(modifiedLineEnd - modifiedLineStart, originalLineEnd - originalLineStart);\n        const originalLayoutInfo = originalOptions.get(138 /* EditorOption.layoutInfo */);\n        const originalLineNumbersWidth = originalLayoutInfo.glyphMarginWidth + originalLayoutInfo.lineNumbersWidth;\n        const modifiedLayoutInfo = modifiedOptions.get(138 /* EditorOption.layoutInfo */);\n        const modifiedLineNumbersWidth = 10 + modifiedLayoutInfo.glyphMarginWidth + modifiedLayoutInfo.lineNumbersWidth;\n        for (let i = 0; i <= cnt; i++) {\n            const originalLine = (originalLineStart === 0 ? 0 : originalLineStart + i);\n            const modifiedLine = (modifiedLineStart === 0 ? 0 : modifiedLineStart + i);\n            const row = document.createElement('div');\n            row.style.minWidth = width + 'px';\n            row.className = rowClassName;\n            row.setAttribute('role', 'listitem');\n            if (modifiedLine !== 0) {\n                modLine = modifiedLine;\n            }\n            row.setAttribute('data-line', String(modLine));\n            const cell = document.createElement('div');\n            cell.className = 'diff-review-cell';\n            cell.style.height = `${lineHeight}px`;\n            row.appendChild(cell);\n            const originalLineNumber = document.createElement('span');\n            originalLineNumber.style.width = (originalLineNumbersWidth + 'px');\n            originalLineNumber.style.minWidth = (originalLineNumbersWidth + 'px');\n            originalLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n            if (originalLine !== 0) {\n                originalLineNumber.appendChild(document.createTextNode(String(originalLine)));\n            }\n            else {\n                originalLineNumber.innerText = '\\u00a0';\n            }\n            cell.appendChild(originalLineNumber);\n            const modifiedLineNumber = document.createElement('span');\n            modifiedLineNumber.style.width = (modifiedLineNumbersWidth + 'px');\n            modifiedLineNumber.style.minWidth = (modifiedLineNumbersWidth + 'px');\n            modifiedLineNumber.style.paddingRight = '10px';\n            modifiedLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n            if (modifiedLine !== 0) {\n                modifiedLineNumber.appendChild(document.createTextNode(String(modifiedLine)));\n            }\n            else {\n                modifiedLineNumber.innerText = '\\u00a0';\n            }\n            cell.appendChild(modifiedLineNumber);\n            const spacer = document.createElement('span');\n            spacer.className = spacerClassName;\n            if (spacerIcon) {\n                const spacerCodicon = document.createElement('span');\n                spacerCodicon.className = ThemeIcon.asClassName(spacerIcon);\n                spacerCodicon.innerText = '\\u00a0\\u00a0';\n                spacer.appendChild(spacerCodicon);\n            }\n            else {\n                spacer.innerText = '\\u00a0\\u00a0';\n            }\n            cell.appendChild(spacer);\n            let lineContent;\n            if (modifiedLine !== 0) {\n                let html = this._renderLine(modifiedModel, modifiedOptions, modifiedModelOpts.tabSize, modifiedLine, languageIdCodec);\n                if (DiffReview._ttPolicy) {\n                    html = DiffReview._ttPolicy.createHTML(html);\n                }\n                cell.insertAdjacentHTML('beforeend', html);\n                lineContent = modifiedModel.getLineContent(modifiedLine);\n            }\n            else {\n                let html = this._renderLine(originalModel, originalOptions, originalModelOpts.tabSize, originalLine, languageIdCodec);\n                if (DiffReview._ttPolicy) {\n                    html = DiffReview._ttPolicy.createHTML(html);\n                }\n                cell.insertAdjacentHTML('beforeend', html);\n                lineContent = originalModel.getLineContent(originalLine);\n            }\n            if (lineContent.length === 0) {\n                lineContent = nls.localize('blankLine', \"blank\");\n            }\n            let ariaLabel = '';\n            switch (type) {\n                case 0 /* DiffEntryType.Equal */:\n                    if (originalLine === modifiedLine) {\n                        ariaLabel = nls.localize({ key: 'unchangedLine', comment: ['The placeholders are contents of the line and should not be translated.'] }, \"{0} unchanged line {1}\", lineContent, originalLine);\n                    }\n                    else {\n                        ariaLabel = nls.localize('equalLine', \"{0} original line {1} modified line {2}\", lineContent, originalLine, modifiedLine);\n                    }\n                    break;\n                case 1 /* DiffEntryType.Insert */:\n                    ariaLabel = nls.localize('insertLine', \"+ {0} modified line {1}\", lineContent, modifiedLine);\n                    break;\n                case 2 /* DiffEntryType.Delete */:\n                    ariaLabel = nls.localize('deleteLine', \"- {0} original line {1}\", lineContent, originalLine);\n                    break;\n            }\n            row.setAttribute('aria-label', ariaLabel);\n            dest.appendChild(row);\n        }\n    }\n    static _renderLine(model, options, tabSize, lineNumber, languageIdCodec) {\n        const lineContent = model.getLineContent(lineNumber);\n        const fontInfo = options.get(47 /* EditorOption.fontInfo */);\n        const lineTokens = LineTokens.createEmpty(lineContent, languageIdCodec);\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, model.mightContainNonBasicASCII());\n        const containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, model.mightContainRTL());\n        const r = renderViewLine(new RenderLineInput((fontInfo.isMonospace && !options.get(30 /* EditorOption.disableMonospaceOptimizations */)), fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, [], tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, options.get(111 /* EditorOption.stopRenderingLineAfter */), options.get(93 /* EditorOption.renderWhitespace */), options.get(88 /* EditorOption.renderControlCharacters */), options.get(48 /* EditorOption.fontLigatures */) !== EditorFontLigatures.OFF, null));\n        return r.html;\n    }\n};\nDiffReview._ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('diffReview', { createHTML: value => value });\nDiffReview = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IAudioCueService)\n], DiffReview);\nexport { DiffReview };\n// theming\nclass DiffReviewNext extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.diffReview.next',\n            label: nls.localize('editor.action.diffReview.next', \"Go to Next Difference\"),\n            alias: 'Go to Next Difference',\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n            kbOpts: {\n                kbExpr: null,\n                primary: 65 /* KeyCode.F7 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const diffEditor = findFocusedDiffEditor(accessor);\n        diffEditor === null || diffEditor === void 0 ? void 0 : diffEditor.diffReviewNext();\n    }\n}\nclass DiffReviewPrev extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.diffReview.prev',\n            label: nls.localize('editor.action.diffReview.prev', \"Go to Previous Difference\"),\n            alias: 'Go to Previous Difference',\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n            kbOpts: {\n                kbExpr: null,\n                primary: 1024 /* KeyMod.Shift */ | 65 /* KeyCode.F7 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const diffEditor = findFocusedDiffEditor(accessor);\n        diffEditor === null || diffEditor === void 0 ? void 0 : diffEditor.diffReviewPrev();\n    }\n}\nfunction findFocusedDiffEditor(accessor) {\n    const codeEditorService = accessor.get(ICodeEditorService);\n    const diffEditors = codeEditorService.listDiffEditors();\n    const activeCodeEditor = codeEditorService.getActiveCodeEditor();\n    if (!activeCodeEditor) {\n        return null;\n    }\n    for (let i = 0, len = diffEditors.length; i < len; i++) {\n        const diffEditor = diffEditors[i];\n        if (diffEditor.getModifiedEditor().getId() === activeCodeEditor.getId() || diffEditor.getOriginalEditor().getId() === activeCodeEditor.getId()) {\n            return diffEditor;\n        }\n    }\n    return null;\n}\nregisterEditorAction(DiffReviewNext);\nregisterEditorAction(DiffReviewPrev);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { Action } from '../../../base/common/actions.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Range } from '../../common/core/range.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nexport class InlineDiffMargin extends Disposable {\n    get visibility() {\n        return this._visibility;\n    }\n    set visibility(_visibility) {\n        if (this._visibility !== _visibility) {\n            this._visibility = _visibility;\n            if (_visibility) {\n                this._diffActions.style.visibility = 'visible';\n            }\n            else {\n                this._diffActions.style.visibility = 'hidden';\n            }\n        }\n    }\n    constructor(_viewZoneId, _marginDomNode, editor, diff, _contextMenuService, _clipboardService) {\n        super();\n        this._viewZoneId = _viewZoneId;\n        this._marginDomNode = _marginDomNode;\n        this.editor = editor;\n        this.diff = diff;\n        this._contextMenuService = _contextMenuService;\n        this._clipboardService = _clipboardService;\n        this._visibility = false;\n        // make sure the diff margin shows above overlay.\n        this._marginDomNode.style.zIndex = '10';\n        this._diffActions = document.createElement('div');\n        this._diffActions.className = ThemeIcon.asClassName(Codicon.lightBulb) + ' lightbulb-glyph';\n        this._diffActions.style.position = 'absolute';\n        const lineHeight = editor.getOption(63 /* EditorOption.lineHeight */);\n        const lineFeed = editor.getModel().getEOL();\n        this._diffActions.style.right = '0px';\n        this._diffActions.style.visibility = 'hidden';\n        this._diffActions.style.height = `${lineHeight}px`;\n        this._diffActions.style.lineHeight = `${lineHeight}px`;\n        this._marginDomNode.appendChild(this._diffActions);\n        const actions = [];\n        const isDeletion = diff.modifiedEndLineNumber === 0;\n        // default action\n        actions.push(new Action('diff.clipboard.copyDeletedContent', isDeletion\n            ? (diff.originalEndLineNumber > diff.modifiedStartLineNumber\n                ? nls.localize('diff.clipboard.copyDeletedLinesContent.label', \"Copy deleted lines\")\n                : nls.localize('diff.clipboard.copyDeletedLinesContent.single.label', \"Copy deleted line\"))\n            : (diff.originalEndLineNumber > diff.modifiedStartLineNumber\n                ? nls.localize('diff.clipboard.copyChangedLinesContent.label', \"Copy changed lines\")\n                : nls.localize('diff.clipboard.copyChangedLinesContent.single.label', \"Copy changed line\")), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n            const range = new Range(diff.originalStartLineNumber, 1, diff.originalEndLineNumber + 1, 1);\n            const deletedText = diff.originalModel.getValueInRange(range);\n            yield this._clipboardService.writeText(deletedText);\n        })));\n        let currentLineNumberOffset = 0;\n        let copyLineAction = undefined;\n        if (diff.originalEndLineNumber > diff.modifiedStartLineNumber) {\n            copyLineAction = new Action('diff.clipboard.copyDeletedLineContent', isDeletion\n                ? nls.localize('diff.clipboard.copyDeletedLineContent.label', \"Copy deleted line ({0})\", diff.originalStartLineNumber)\n                : nls.localize('diff.clipboard.copyChangedLineContent.label', \"Copy changed line ({0})\", diff.originalStartLineNumber), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                const lineContent = diff.originalModel.getLineContent(diff.originalStartLineNumber + currentLineNumberOffset);\n                if (lineContent === '') {\n                    // empty line\n                    const eof = diff.originalModel.getEndOfLineSequence();\n                    yield this._clipboardService.writeText(eof === 0 /* EndOfLineSequence.LF */ ? '\\n' : '\\r\\n');\n                }\n                else {\n                    yield this._clipboardService.writeText(lineContent);\n                }\n            }));\n            actions.push(copyLineAction);\n        }\n        const readOnly = editor.getOption(86 /* EditorOption.readOnly */);\n        if (!readOnly) {\n            actions.push(new Action('diff.inline.revertChange', nls.localize('diff.inline.revertChange.label', \"Revert this change\"), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                const range = new Range(diff.originalStartLineNumber, 1, diff.originalEndLineNumber, diff.originalModel.getLineMaxColumn(diff.originalEndLineNumber));\n                const deletedText = diff.originalModel.getValueInRange(range);\n                if (diff.modifiedEndLineNumber === 0) {\n                    // deletion only\n                    const column = editor.getModel().getLineMaxColumn(diff.modifiedStartLineNumber);\n                    editor.executeEdits('diffEditor', [\n                        {\n                            range: new Range(diff.modifiedStartLineNumber, column, diff.modifiedStartLineNumber, column),\n                            text: lineFeed + deletedText\n                        }\n                    ]);\n                }\n                else {\n                    const column = editor.getModel().getLineMaxColumn(diff.modifiedEndLineNumber);\n                    editor.executeEdits('diffEditor', [\n                        {\n                            range: new Range(diff.modifiedStartLineNumber, 1, diff.modifiedEndLineNumber, column),\n                            text: deletedText\n                        }\n                    ]);\n                }\n            })));\n        }\n        const showContextMenu = (x, y) => {\n            this._contextMenuService.showContextMenu({\n                getAnchor: () => {\n                    return {\n                        x,\n                        y\n                    };\n                },\n                getActions: () => {\n                    if (copyLineAction) {\n                        copyLineAction.label =\n                            isDeletion\n                                ? nls.localize('diff.clipboard.copyDeletedLineContent.label', \"Copy deleted line ({0})\", diff.originalStartLineNumber + currentLineNumberOffset)\n                                : nls.localize('diff.clipboard.copyChangedLineContent.label', \"Copy changed line ({0})\", diff.originalStartLineNumber + currentLineNumberOffset);\n                    }\n                    return actions;\n                },\n                autoSelectFirstItem: true\n            });\n        };\n        this._register(dom.addStandardDisposableListener(this._diffActions, 'mousedown', e => {\n            const { top, height } = dom.getDomNodePagePosition(this._diffActions);\n            const pad = Math.floor(lineHeight / 3);\n            e.preventDefault();\n            showContextMenu(e.posx, top + height + pad);\n        }));\n        this._register(editor.onMouseMove((e) => {\n            if (e.target.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */ || e.target.type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */) {\n                const viewZoneId = e.target.detail.viewZoneId;\n                if (viewZoneId === this._viewZoneId) {\n                    this.visibility = true;\n                    currentLineNumberOffset = this._updateLightBulbPosition(this._marginDomNode, e.event.browserEvent.y, lineHeight);\n                }\n                else {\n                    this.visibility = false;\n                }\n            }\n            else {\n                this.visibility = false;\n            }\n        }));\n        this._register(editor.onMouseDown((e) => {\n            if (!e.event.rightButton) {\n                return;\n            }\n            if (e.target.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */ || e.target.type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */) {\n                const viewZoneId = e.target.detail.viewZoneId;\n                if (viewZoneId === this._viewZoneId) {\n                    e.event.preventDefault();\n                    currentLineNumberOffset = this._updateLightBulbPosition(this._marginDomNode, e.event.browserEvent.y, lineHeight);\n                    showContextMenu(e.event.posx, e.event.posy + lineHeight);\n                }\n            }\n        }));\n    }\n    _updateLightBulbPosition(marginDomNode, y, lineHeight) {\n        const { top } = dom.getDomNodePagePosition(marginDomNode);\n        const offset = y - top;\n        const lineNumberOffset = Math.floor(offset / lineHeight);\n        const newTop = lineNumberOffset * lineHeight;\n        this._diffActions.style.top = `${newTop}px`;\n        if (this.diff.viewLineCounts) {\n            let acc = 0;\n            for (let i = 0; i < this.diff.viewLineCounts.length; i++) {\n                acc += this.diff.viewLineCounts[i];\n                if (lineNumberOffset < acc) {\n                    return i;\n                }\n            }\n        }\n        return lineNumberOffset;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Emitter } from '../../../base/common/event.js';\nimport { IEditorWorkerService } from '../../common/services/editorWorker.js';\nlet WorkerBasedDocumentDiffProvider = class WorkerBasedDocumentDiffProvider {\n    constructor(options, editorWorkerService) {\n        this.editorWorkerService = editorWorkerService;\n        this.onDidChangeEventEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEventEmitter.event;\n        this.diffAlgorithm = 'smart';\n        this.diffAlgorithmOnDidChangeSubscription = undefined;\n        this.setOptions(options);\n    }\n    dispose() {\n        var _a;\n        (_a = this.diffAlgorithmOnDidChangeSubscription) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    computeDiff(original, modified, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.diffAlgorithm !== 'string') {\n                return this.diffAlgorithm.computeDiff(original, modified, options);\n            }\n            const result = yield this.editorWorkerService.computeDiff(original.uri, modified.uri, options, this.diffAlgorithm);\n            if (!result) {\n                throw new Error('no diff result available');\n            }\n            return result;\n        });\n    }\n    setOptions(newOptions) {\n        var _a;\n        let didChange = false;\n        if (newOptions.diffAlgorithm) {\n            if (this.diffAlgorithm !== newOptions.diffAlgorithm) {\n                (_a = this.diffAlgorithmOnDidChangeSubscription) === null || _a === void 0 ? void 0 : _a.dispose();\n                this.diffAlgorithmOnDidChangeSubscription = undefined;\n                this.diffAlgorithm = newOptions.diffAlgorithm;\n                if (typeof newOptions.diffAlgorithm !== 'string') {\n                    this.diffAlgorithmOnDidChangeSubscription = newOptions.diffAlgorithm.onDidChange(() => this.onDidChangeEventEmitter.fire());\n                }\n                didChange = true;\n            }\n        }\n        if (didChange) {\n            this.onDidChangeEventEmitter.fire();\n        }\n    }\n};\nWorkerBasedDocumentDiffProvider = __decorate([\n    __param(1, IEditorWorkerService)\n], WorkerBasedDocumentDiffProvider);\nexport { WorkerBasedDocumentDiffProvider };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar _a;\nimport * as dom from '../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../base/browser/ui/mouseCursor/mouseCursor.js';\nimport { Sash } from '../../../base/browser/ui/sash/sash.js';\nimport * as assert from '../../../base/common/assert.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport './media/diffEditor.css';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { ElementSizeObserver } from '../config/elementSizeObserver.js';\nimport { EditorExtensionsRegistry } from '../editorExtensions.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { StableEditorScrollState } from '../stableEditorScroll.js';\nimport { CodeEditorWidget } from './codeEditorWidget.js';\nimport { DiffReview } from './diffReview.js';\nimport { InlineDiffMargin } from './inlineDiffMargin.js';\nimport { WorkerBasedDocumentDiffProvider } from './workerBasedDocumentDiffProvider.js';\nimport { boolean as validateBooleanOption, clampedInt, EditorFontLigatures, EditorOptions, stringSet as validateStringSetOption } from '../../common/config/editorOptions.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { StringBuilder } from '../../common/core/stringBuilder.js';\nimport * as editorCommon from '../../common/editorCommon.js';\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\nimport { LineDecoration } from '../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\nimport { InlineDecoration, ViewLineRenderingData } from '../../common/viewModel.js';\nimport { OverviewRulerZone } from '../../common/viewModel/overviewZoneManager.js';\nimport * as nls from '../../../nls.js';\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\nimport { defaultInsertColor, defaultRemoveColor, diffDiagonalFill, diffInserted, diffOverviewRulerInserted, diffOverviewRulerRemoved, diffRemoved } from '../../../platform/theme/common/colorRegistry.js';\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\nimport { getThemeTypeSelector, IThemeService, registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nclass VisualEditorState {\n    constructor(_contextMenuService, _clipboardService) {\n        this._contextMenuService = _contextMenuService;\n        this._clipboardService = _clipboardService;\n        this._zones = [];\n        this._inlineDiffMargins = [];\n        this._zonesMap = {};\n        this._decorations = [];\n    }\n    getForeignViewZones(allViewZones) {\n        return allViewZones.filter((z) => !this._zonesMap[String(z.id)]);\n    }\n    clean(editor) {\n        // (1) View zones\n        if (this._zones.length > 0) {\n            editor.changeViewZones((viewChangeAccessor) => {\n                for (const zoneId of this._zones) {\n                    viewChangeAccessor.removeZone(zoneId);\n                }\n            });\n        }\n        this._zones = [];\n        this._zonesMap = {};\n        // (2) Model decorations\n        editor.changeDecorations((changeAccessor) => {\n            this._decorations = changeAccessor.deltaDecorations(this._decorations, []);\n        });\n    }\n    apply(editor, overviewRuler, newDecorations, restoreScrollState) {\n        const scrollState = restoreScrollState ? StableEditorScrollState.capture(editor) : null;\n        // view zones\n        editor.changeViewZones((viewChangeAccessor) => {\n            var _a;\n            for (const zoneId of this._zones) {\n                viewChangeAccessor.removeZone(zoneId);\n            }\n            for (const inlineDiffMargin of this._inlineDiffMargins) {\n                inlineDiffMargin.dispose();\n            }\n            this._zones = [];\n            this._zonesMap = {};\n            this._inlineDiffMargins = [];\n            for (let i = 0, length = newDecorations.zones.length; i < length; i++) {\n                const viewZone = newDecorations.zones[i];\n                viewZone.suppressMouseDown = true;\n                const zoneId = viewChangeAccessor.addZone(viewZone);\n                this._zones.push(zoneId);\n                this._zonesMap[String(zoneId)] = true;\n                if (newDecorations.zones[i].diff && viewZone.marginDomNode) {\n                    viewZone.suppressMouseDown = false;\n                    if (((_a = newDecorations.zones[i].diff) === null || _a === void 0 ? void 0 : _a.originalModel.getValueLength()) !== 0) {\n                        // do not contribute diff margin actions for newly created files\n                        this._inlineDiffMargins.push(new InlineDiffMargin(zoneId, viewZone.marginDomNode, editor, newDecorations.zones[i].diff, this._contextMenuService, this._clipboardService));\n                    }\n                }\n            }\n        });\n        scrollState === null || scrollState === void 0 ? void 0 : scrollState.restore(editor);\n        // decorations\n        editor.changeDecorations((changeAccessor) => {\n            this._decorations = changeAccessor.deltaDecorations(this._decorations, newDecorations.decorations);\n        });\n        // overview ruler\n        overviewRuler === null || overviewRuler === void 0 ? void 0 : overviewRuler.setZones(newDecorations.overviewZones);\n    }\n}\nlet DIFF_EDITOR_ID = 0;\nconst diffInsertIcon = registerIcon('diff-insert', Codicon.add, nls.localize('diffInsertIcon', 'Line decoration for inserts in the diff editor.'));\nconst diffRemoveIcon = registerIcon('diff-remove', Codicon.remove, nls.localize('diffRemoveIcon', 'Line decoration for removals in the diff editor.'));\nconst ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('diffEditorWidget', { createHTML: value => value });\nconst ariaNavigationTip = nls.localize('diff-aria-navigation-tip', ' use Shift + F7 to navigate changes');\nlet DiffEditorWidget = class DiffEditorWidget extends Disposable {\n    constructor(domElement, options, codeEditorWidgetOptions, clipboardService, contextKeyService, instantiationService, codeEditorService, themeService, notificationService, contextMenuService, _editorProgressService) {\n        super();\n        this._editorProgressService = _editorProgressService;\n        this._onDidDispose = this._register(new Emitter());\n        this.onDidDispose = this._onDidDispose.event;\n        this._onDidChangeModel = this._register(new Emitter());\n        this.onDidChangeModel = this._onDidChangeModel.event;\n        this._onDidUpdateDiff = this._register(new Emitter());\n        this.onDidUpdateDiff = this._onDidUpdateDiff.event;\n        this._onDidContentSizeChange = this._register(new Emitter());\n        this._lastOriginalWarning = null;\n        this._lastModifiedWarning = null;\n        codeEditorService.willCreateDiffEditor();\n        this._documentDiffProvider = this._register(instantiationService.createInstance(WorkerBasedDocumentDiffProvider, options));\n        this._register(this._documentDiffProvider.onDidChange(e => this._beginUpdateDecorationsSoon()));\n        this._codeEditorService = codeEditorService;\n        this._contextKeyService = this._register(contextKeyService.createScoped(domElement));\n        this._instantiationService = instantiationService.createChild(new ServiceCollection([IContextKeyService, this._contextKeyService]));\n        this._contextKeyService.createKey('isInDiffEditor', true);\n        this._themeService = themeService;\n        this._notificationService = notificationService;\n        this._id = (++DIFF_EDITOR_ID);\n        this._state = 0 /* editorBrowser.DiffEditorState.Idle */;\n        this._updatingDiffProgress = null;\n        this._domElement = domElement;\n        options = options || {};\n        this._options = validateDiffEditorOptions(options, {\n            enableSplitViewResizing: true,\n            renderSideBySide: true,\n            renderMarginRevertIcon: true,\n            maxComputationTime: 5000,\n            maxFileSize: 50,\n            ignoreTrimWhitespace: true,\n            renderIndicators: true,\n            originalEditable: false,\n            diffCodeLens: false,\n            renderOverviewRuler: true,\n            diffWordWrap: 'inherit',\n            diffAlgorithm: 'smart',\n        });\n        if (typeof options.isInEmbeddedEditor !== 'undefined') {\n            this._contextKeyService.createKey('isInEmbeddedDiffEditor', options.isInEmbeddedEditor);\n        }\n        else {\n            this._contextKeyService.createKey('isInEmbeddedDiffEditor', false);\n        }\n        this._updateDecorationsRunner = this._register(new RunOnceScheduler(() => this._updateDecorations(), 0));\n        this._containerDomElement = document.createElement('div');\n        this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._options.renderSideBySide);\n        this._containerDomElement.style.position = 'relative';\n        this._containerDomElement.style.height = '100%';\n        this._domElement.appendChild(this._containerDomElement);\n        this._overviewViewportDomElement = createFastDomNode(document.createElement('div'));\n        this._overviewViewportDomElement.setClassName('diffViewport');\n        this._overviewViewportDomElement.setPosition('absolute');\n        this._overviewDomElement = document.createElement('div');\n        this._overviewDomElement.className = 'diffOverview';\n        this._overviewDomElement.style.position = 'absolute';\n        this._overviewDomElement.appendChild(this._overviewViewportDomElement.domNode);\n        this._register(dom.addStandardDisposableListener(this._overviewDomElement, dom.EventType.POINTER_DOWN, (e) => {\n            this._modifiedEditor.delegateVerticalScrollbarPointerDown(e);\n        }));\n        this._register(dom.addDisposableListener(this._overviewDomElement, dom.EventType.MOUSE_WHEEL, (e) => {\n            this._modifiedEditor.delegateScrollFromMouseWheelEvent(e);\n        }, { passive: false }));\n        if (this._options.renderOverviewRuler) {\n            this._containerDomElement.appendChild(this._overviewDomElement);\n        }\n        // Create left side\n        this._originalDomNode = document.createElement('div');\n        this._originalDomNode.className = 'editor original';\n        this._originalDomNode.style.position = 'absolute';\n        this._originalDomNode.style.height = '100%';\n        this._containerDomElement.appendChild(this._originalDomNode);\n        // Create right side\n        this._modifiedDomNode = document.createElement('div');\n        this._modifiedDomNode.className = 'editor modified';\n        this._modifiedDomNode.style.position = 'absolute';\n        this._modifiedDomNode.style.height = '100%';\n        this._containerDomElement.appendChild(this._modifiedDomNode);\n        this._beginUpdateDecorationsTimeout = -1;\n        this._currentlyChangingViewZones = false;\n        this._diffComputationToken = 0;\n        this._originalEditorState = new VisualEditorState(contextMenuService, clipboardService);\n        this._modifiedEditorState = new VisualEditorState(contextMenuService, clipboardService);\n        this._isVisible = true;\n        this._isHandlingScrollEvent = false;\n        this._elementSizeObserver = this._register(new ElementSizeObserver(this._containerDomElement, options.dimension));\n        this._register(this._elementSizeObserver.onDidChange(() => this._onDidContainerSizeChanged()));\n        if (options.automaticLayout) {\n            this._elementSizeObserver.startObserving();\n        }\n        this._diffComputationResult = null;\n        this._originalEditor = this._createLeftHandSideEditor(options, codeEditorWidgetOptions.originalEditor || {});\n        this._modifiedEditor = this._createRightHandSideEditor(options, codeEditorWidgetOptions.modifiedEditor || {});\n        this._originalOverviewRuler = null;\n        this._modifiedOverviewRuler = null;\n        this._reviewPane = instantiationService.createInstance(DiffReview, this);\n        this._containerDomElement.appendChild(this._reviewPane.domNode.domNode);\n        this._containerDomElement.appendChild(this._reviewPane.shadow.domNode);\n        this._containerDomElement.appendChild(this._reviewPane.actionBarContainer.domNode);\n        if (this._options.renderSideBySide) {\n            this._setStrategy(new DiffEditorWidgetSideBySide(this._createDataSource(), this._options.enableSplitViewResizing));\n        }\n        else {\n            this._setStrategy(new DiffEditorWidgetInline(this._createDataSource(), this._options.enableSplitViewResizing));\n        }\n        this._register(themeService.onDidColorThemeChange(t => {\n            if (this._strategy && this._strategy.applyColors(t)) {\n                this._updateDecorationsRunner.schedule();\n            }\n            this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._options.renderSideBySide);\n        }));\n        const contributions = EditorExtensionsRegistry.getDiffEditorContributions();\n        for (const desc of contributions) {\n            try {\n                this._register(instantiationService.createInstance(desc.ctor, this));\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n        }\n        this._codeEditorService.addDiffEditor(this);\n    }\n    _setState(newState) {\n        if (this._state === newState) {\n            return;\n        }\n        this._state = newState;\n        if (this._updatingDiffProgress) {\n            this._updatingDiffProgress.done();\n            this._updatingDiffProgress = null;\n        }\n        if (this._state === 1 /* editorBrowser.DiffEditorState.ComputingDiff */) {\n            this._updatingDiffProgress = this._editorProgressService.show(true, 1000);\n        }\n    }\n    diffReviewNext() {\n        this._reviewPane.next();\n    }\n    diffReviewPrev() {\n        this._reviewPane.prev();\n    }\n    static _getClassName(theme, renderSideBySide) {\n        let result = 'monaco-diff-editor monaco-editor-background ';\n        if (renderSideBySide) {\n            result += 'side-by-side ';\n        }\n        result += getThemeTypeSelector(theme.type);\n        return result;\n    }\n    _disposeOverviewRulers() {\n        if (this._originalOverviewRuler) {\n            this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode());\n            this._originalOverviewRuler.dispose();\n            this._originalOverviewRuler = null;\n        }\n        if (this._modifiedOverviewRuler) {\n            this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode());\n            this._modifiedOverviewRuler.dispose();\n            this._modifiedOverviewRuler = null;\n        }\n    }\n    _createOverviewRulers() {\n        if (!this._options.renderOverviewRuler) {\n            return;\n        }\n        assert.ok(!this._originalOverviewRuler && !this._modifiedOverviewRuler);\n        if (this._originalEditor.hasModel()) {\n            this._originalOverviewRuler = this._originalEditor.createOverviewRuler('original diffOverviewRuler');\n            this._overviewDomElement.appendChild(this._originalOverviewRuler.getDomNode());\n        }\n        if (this._modifiedEditor.hasModel()) {\n            this._modifiedOverviewRuler = this._modifiedEditor.createOverviewRuler('modified diffOverviewRuler');\n            this._overviewDomElement.appendChild(this._modifiedOverviewRuler.getDomNode());\n        }\n        this._layoutOverviewRulers();\n    }\n    _createLeftHandSideEditor(options, codeEditorWidgetOptions) {\n        const editor = this._createInnerEditor(this._instantiationService, this._originalDomNode, this._adjustOptionsForLeftHandSide(options), codeEditorWidgetOptions);\n        this._register(editor.onDidScrollChange((e) => {\n            if (this._isHandlingScrollEvent) {\n                return;\n            }\n            if (!e.scrollTopChanged && !e.scrollLeftChanged && !e.scrollHeightChanged) {\n                return;\n            }\n            this._isHandlingScrollEvent = true;\n            this._modifiedEditor.setScrollPosition({\n                scrollLeft: e.scrollLeft,\n                scrollTop: e.scrollTop\n            });\n            this._isHandlingScrollEvent = false;\n            this._layoutOverviewViewport();\n        }));\n        this._register(editor.onDidChangeViewZones(() => {\n            this._onViewZonesChanged();\n        }));\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (!editor.getModel()) {\n                return;\n            }\n            if (e.hasChanged(47 /* EditorOption.fontInfo */)) {\n                this._updateDecorationsRunner.schedule();\n            }\n            if (e.hasChanged(139 /* EditorOption.wrappingInfo */)) {\n                this._updateDecorationsRunner.cancel();\n                this._updateDecorations();\n            }\n        }));\n        this._register(editor.onDidChangeHiddenAreas(() => {\n            this._updateDecorationsRunner.cancel();\n            this._updateDecorations();\n        }));\n        this._register(editor.onDidChangeModelContent(() => {\n            if (this._isVisible) {\n                this._beginUpdateDecorationsSoon();\n            }\n        }));\n        const isInDiffLeftEditorKey = this._contextKeyService.createKey('isInDiffLeftEditor', editor.hasWidgetFocus());\n        this._register(editor.onDidFocusEditorWidget(() => isInDiffLeftEditorKey.set(true)));\n        this._register(editor.onDidBlurEditorWidget(() => isInDiffLeftEditorKey.set(false)));\n        this._register(editor.onDidContentSizeChange(e => {\n            const width = this._originalEditor.getContentWidth() + this._modifiedEditor.getContentWidth() + DiffEditorWidget.ONE_OVERVIEW_WIDTH;\n            const height = Math.max(this._modifiedEditor.getContentHeight(), this._originalEditor.getContentHeight());\n            this._onDidContentSizeChange.fire({\n                contentHeight: height,\n                contentWidth: width,\n                contentHeightChanged: e.contentHeightChanged,\n                contentWidthChanged: e.contentWidthChanged\n            });\n        }));\n        return editor;\n    }\n    _createRightHandSideEditor(options, codeEditorWidgetOptions) {\n        const editor = this._createInnerEditor(this._instantiationService, this._modifiedDomNode, this._adjustOptionsForRightHandSide(options), codeEditorWidgetOptions);\n        this._register(editor.onDidScrollChange((e) => {\n            if (this._isHandlingScrollEvent) {\n                return;\n            }\n            if (!e.scrollTopChanged && !e.scrollLeftChanged && !e.scrollHeightChanged) {\n                return;\n            }\n            this._isHandlingScrollEvent = true;\n            this._originalEditor.setScrollPosition({\n                scrollLeft: e.scrollLeft,\n                scrollTop: e.scrollTop\n            });\n            this._isHandlingScrollEvent = false;\n            this._layoutOverviewViewport();\n        }));\n        this._register(editor.onDidChangeViewZones(() => {\n            this._onViewZonesChanged();\n        }));\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (!editor.getModel()) {\n                return;\n            }\n            if (e.hasChanged(47 /* EditorOption.fontInfo */)) {\n                this._updateDecorationsRunner.schedule();\n            }\n            if (e.hasChanged(139 /* EditorOption.wrappingInfo */)) {\n                this._updateDecorationsRunner.cancel();\n                this._updateDecorations();\n            }\n        }));\n        this._register(editor.onDidChangeHiddenAreas(() => {\n            this._updateDecorationsRunner.cancel();\n            this._updateDecorations();\n        }));\n        this._register(editor.onDidChangeModelContent(() => {\n            if (this._isVisible) {\n                this._beginUpdateDecorationsSoon();\n            }\n        }));\n        this._register(editor.onDidChangeModelOptions((e) => {\n            if (e.tabSize) {\n                this._updateDecorationsRunner.schedule();\n            }\n        }));\n        const isInDiffRightEditorKey = this._contextKeyService.createKey('isInDiffRightEditor', editor.hasWidgetFocus());\n        this._register(editor.onDidFocusEditorWidget(() => isInDiffRightEditorKey.set(true)));\n        this._register(editor.onDidBlurEditorWidget(() => isInDiffRightEditorKey.set(false)));\n        this._register(editor.onDidContentSizeChange(e => {\n            const width = this._originalEditor.getContentWidth() + this._modifiedEditor.getContentWidth() + DiffEditorWidget.ONE_OVERVIEW_WIDTH;\n            const height = Math.max(this._modifiedEditor.getContentHeight(), this._originalEditor.getContentHeight());\n            this._onDidContentSizeChange.fire({\n                contentHeight: height,\n                contentWidth: width,\n                contentHeightChanged: e.contentHeightChanged,\n                contentWidthChanged: e.contentWidthChanged\n            });\n        }));\n        // Revert change when an arrow is clicked.\n        this._register(editor.onMouseDown(event => {\n            var _a, _b;\n            if (!event.event.rightButton && event.target.position && ((_a = event.target.element) === null || _a === void 0 ? void 0 : _a.className.includes('arrow-revert-change'))) {\n                const lineNumber = event.target.position.lineNumber;\n                const viewZone = event.target;\n                const change = (_b = this._diffComputationResult) === null || _b === void 0 ? void 0 : _b.changes.find(c => \n                // delete change\n                (viewZone === null || viewZone === void 0 ? void 0 : viewZone.detail.afterLineNumber) === c.modifiedStartLineNumber ||\n                    // other changes\n                    (c.modifiedEndLineNumber > 0 && c.modifiedStartLineNumber === lineNumber));\n                if (change) {\n                    this.revertChange(change);\n                }\n                event.event.stopPropagation();\n                this._updateDecorations();\n                return;\n            }\n        }));\n        return editor;\n    }\n    /**\n     * Reverts a change in the modified editor.\n     */\n    revertChange(change) {\n        const editor = this._modifiedEditor;\n        const original = this._originalEditor.getModel();\n        const modified = this._modifiedEditor.getModel();\n        if (!original || !modified || !editor) {\n            return;\n        }\n        const originalRange = change.originalEndLineNumber > 0 ? new Range(change.originalStartLineNumber, 1, change.originalEndLineNumber, original.getLineMaxColumn(change.originalEndLineNumber)) : null;\n        const originalContent = originalRange ? original.getValueInRange(originalRange) : null;\n        const newRange = change.modifiedEndLineNumber > 0 ? new Range(change.modifiedStartLineNumber, 1, change.modifiedEndLineNumber, modified.getLineMaxColumn(change.modifiedEndLineNumber)) : null;\n        const eol = modified.getEOL();\n        if (change.originalEndLineNumber === 0 && newRange) {\n            // Insert change.\n            // To revert: delete the new content and a linebreak (if possible)\n            let range = newRange;\n            if (change.modifiedStartLineNumber > 1) {\n                // Try to include a linebreak from before.\n                range = newRange.setStartPosition(change.modifiedStartLineNumber - 1, modified.getLineMaxColumn(change.modifiedStartLineNumber - 1));\n            }\n            else if (change.modifiedEndLineNumber < modified.getLineCount()) {\n                // Try to include the linebreak from after.\n                range = newRange.setEndPosition(change.modifiedEndLineNumber + 1, 1);\n            }\n            editor.executeEdits('diffEditor', [{\n                    range,\n                    text: '',\n                }]);\n        }\n        else if (change.modifiedEndLineNumber === 0 && originalContent !== null) {\n            // Delete change.\n            // To revert: insert the old content and a linebreak.\n            const insertAt = change.modifiedStartLineNumber < modified.getLineCount() ? new Position(change.modifiedStartLineNumber + 1, 1) : new Position(change.modifiedStartLineNumber, modified.getLineMaxColumn(change.modifiedStartLineNumber));\n            editor.executeEdits('diffEditor', [{\n                    range: Range.fromPositions(insertAt, insertAt),\n                    text: change.modifiedStartLineNumber < modified.getLineCount() ? originalContent + eol : eol + originalContent,\n                }]);\n        }\n        else if (newRange && originalContent !== null) {\n            // Modified change.\n            editor.executeEdits('diffEditor', [{\n                    range: newRange,\n                    text: originalContent,\n                }]);\n        }\n    }\n    _createInnerEditor(instantiationService, container, options, editorWidgetOptions) {\n        return instantiationService.createInstance(CodeEditorWidget, container, options, editorWidgetOptions);\n    }\n    dispose() {\n        this._codeEditorService.removeDiffEditor(this);\n        if (this._beginUpdateDecorationsTimeout !== -1) {\n            window.clearTimeout(this._beginUpdateDecorationsTimeout);\n            this._beginUpdateDecorationsTimeout = -1;\n        }\n        this._cleanViewZonesAndDecorations();\n        if (this._originalOverviewRuler) {\n            this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode());\n            this._originalOverviewRuler.dispose();\n        }\n        if (this._modifiedOverviewRuler) {\n            this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode());\n            this._modifiedOverviewRuler.dispose();\n        }\n        this._overviewDomElement.removeChild(this._overviewViewportDomElement.domNode);\n        if (this._options.renderOverviewRuler) {\n            this._containerDomElement.removeChild(this._overviewDomElement);\n        }\n        this._containerDomElement.removeChild(this._originalDomNode);\n        this._originalEditor.dispose();\n        this._containerDomElement.removeChild(this._modifiedDomNode);\n        this._modifiedEditor.dispose();\n        this._strategy.dispose();\n        this._containerDomElement.removeChild(this._reviewPane.domNode.domNode);\n        this._containerDomElement.removeChild(this._reviewPane.shadow.domNode);\n        this._containerDomElement.removeChild(this._reviewPane.actionBarContainer.domNode);\n        this._reviewPane.dispose();\n        this._domElement.removeChild(this._containerDomElement);\n        this._onDidDispose.fire();\n        super.dispose();\n    }\n    //------------ begin IDiffEditor methods\n    getId() {\n        return this.getEditorType() + ':' + this._id;\n    }\n    getEditorType() {\n        return editorCommon.EditorType.IDiffEditor;\n    }\n    getLineChanges() {\n        if (!this._diffComputationResult) {\n            return null;\n        }\n        return this._diffComputationResult.changes;\n    }\n    getOriginalEditor() {\n        return this._originalEditor;\n    }\n    getModifiedEditor() {\n        return this._modifiedEditor;\n    }\n    updateOptions(_newOptions) {\n        const newOptions = validateDiffEditorOptions(_newOptions, this._options);\n        const changed = changedDiffEditorOptions(this._options, newOptions);\n        this._options = newOptions;\n        const beginUpdateDecorations = (changed.ignoreTrimWhitespace || changed.renderIndicators || changed.renderMarginRevertIcon);\n        const beginUpdateDecorationsSoon = (this._isVisible && (changed.maxComputationTime || changed.maxFileSize));\n        this._documentDiffProvider.setOptions(newOptions);\n        if (beginUpdateDecorations) {\n            this._beginUpdateDecorations();\n        }\n        else if (beginUpdateDecorationsSoon) {\n            this._beginUpdateDecorationsSoon();\n        }\n        this._modifiedEditor.updateOptions(this._adjustOptionsForRightHandSide(_newOptions));\n        this._originalEditor.updateOptions(this._adjustOptionsForLeftHandSide(_newOptions));\n        // enableSplitViewResizing\n        this._strategy.setEnableSplitViewResizing(this._options.enableSplitViewResizing);\n        // renderSideBySide\n        if (changed.renderSideBySide) {\n            if (this._options.renderSideBySide) {\n                this._setStrategy(new DiffEditorWidgetSideBySide(this._createDataSource(), this._options.enableSplitViewResizing));\n            }\n            else {\n                this._setStrategy(new DiffEditorWidgetInline(this._createDataSource(), this._options.enableSplitViewResizing));\n            }\n            // Update class name\n            this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._options.renderSideBySide);\n        }\n        // renderOverviewRuler\n        if (changed.renderOverviewRuler) {\n            if (this._options.renderOverviewRuler) {\n                this._containerDomElement.appendChild(this._overviewDomElement);\n            }\n            else {\n                this._containerDomElement.removeChild(this._overviewDomElement);\n            }\n        }\n    }\n    getModel() {\n        return {\n            original: this._originalEditor.getModel(),\n            modified: this._modifiedEditor.getModel()\n        };\n    }\n    setModel(model) {\n        // Guard us against partial null model\n        if (model && (!model.original || !model.modified)) {\n            throw new Error(!model.original ? 'DiffEditorWidget.setModel: Original model is null' : 'DiffEditorWidget.setModel: Modified model is null');\n        }\n        // Remove all view zones & decorations\n        this._cleanViewZonesAndDecorations();\n        this._disposeOverviewRulers();\n        // Update code editor models\n        this._originalEditor.setModel(model ? model.original : null);\n        this._modifiedEditor.setModel(model ? model.modified : null);\n        this._updateDecorationsRunner.cancel();\n        // this.originalEditor.onDidChangeModelOptions\n        if (model) {\n            this._originalEditor.setScrollTop(0);\n            this._modifiedEditor.setScrollTop(0);\n        }\n        // Disable any diff computations that will come in\n        this._diffComputationResult = null;\n        this._diffComputationToken++;\n        this._setState(0 /* editorBrowser.DiffEditorState.Idle */);\n        if (model) {\n            this._createOverviewRulers();\n            // Begin comparing\n            this._beginUpdateDecorations();\n        }\n        this._layoutOverviewViewport();\n        this._onDidChangeModel.fire();\n    }\n    getContainerDomNode() {\n        return this._domElement;\n    }\n    getVisibleColumnFromPosition(position) {\n        return this._modifiedEditor.getVisibleColumnFromPosition(position);\n    }\n    getPosition() {\n        return this._modifiedEditor.getPosition();\n    }\n    setPosition(position, source = 'api') {\n        this._modifiedEditor.setPosition(position, source);\n    }\n    revealLine(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLine(lineNumber, scrollType);\n    }\n    revealLineInCenter(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLineInCenter(lineNumber, scrollType);\n    }\n    revealLineInCenterIfOutsideViewport(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLineInCenterIfOutsideViewport(lineNumber, scrollType);\n    }\n    revealLineNearTop(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLineNearTop(lineNumber, scrollType);\n    }\n    revealPosition(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealPosition(position, scrollType);\n    }\n    revealPositionInCenter(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealPositionInCenter(position, scrollType);\n    }\n    revealPositionInCenterIfOutsideViewport(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealPositionInCenterIfOutsideViewport(position, scrollType);\n    }\n    revealPositionNearTop(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealPositionNearTop(position, scrollType);\n    }\n    getSelection() {\n        return this._modifiedEditor.getSelection();\n    }\n    getSelections() {\n        return this._modifiedEditor.getSelections();\n    }\n    setSelection(something, source = 'api') {\n        this._modifiedEditor.setSelection(something, source);\n    }\n    setSelections(ranges, source = 'api') {\n        this._modifiedEditor.setSelections(ranges, source);\n    }\n    revealLines(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLines(startLineNumber, endLineNumber, scrollType);\n    }\n    revealLinesInCenter(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLinesInCenter(startLineNumber, endLineNumber, scrollType);\n    }\n    revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType);\n    }\n    revealLinesNearTop(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLinesNearTop(startLineNumber, endLineNumber, scrollType);\n    }\n    revealRange(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */, revealVerticalInCenter = false, revealHorizontal = true) {\n        this._modifiedEditor.revealRange(range, scrollType, revealVerticalInCenter, revealHorizontal);\n    }\n    revealRangeInCenter(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealRangeInCenter(range, scrollType);\n    }\n    revealRangeInCenterIfOutsideViewport(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealRangeInCenterIfOutsideViewport(range, scrollType);\n    }\n    revealRangeNearTop(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealRangeNearTop(range, scrollType);\n    }\n    revealRangeNearTopIfOutsideViewport(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealRangeNearTopIfOutsideViewport(range, scrollType);\n    }\n    revealRangeAtTop(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealRangeAtTop(range, scrollType);\n    }\n    getSupportedActions() {\n        return this._modifiedEditor.getSupportedActions();\n    }\n    saveViewState() {\n        const originalViewState = this._originalEditor.saveViewState();\n        const modifiedViewState = this._modifiedEditor.saveViewState();\n        return {\n            original: originalViewState,\n            modified: modifiedViewState\n        };\n    }\n    restoreViewState(s) {\n        if (s && s.original && s.modified) {\n            const diffEditorState = s;\n            this._originalEditor.restoreViewState(diffEditorState.original);\n            this._modifiedEditor.restoreViewState(diffEditorState.modified);\n        }\n    }\n    layout(dimension) {\n        this._elementSizeObserver.observe(dimension);\n    }\n    focus() {\n        this._modifiedEditor.focus();\n    }\n    hasTextFocus() {\n        return this._originalEditor.hasTextFocus() || this._modifiedEditor.hasTextFocus();\n    }\n    trigger(source, handlerId, payload) {\n        this._modifiedEditor.trigger(source, handlerId, payload);\n    }\n    createDecorationsCollection(decorations) {\n        return this._modifiedEditor.createDecorationsCollection(decorations);\n    }\n    changeDecorations(callback) {\n        return this._modifiedEditor.changeDecorations(callback);\n    }\n    //------------ end IDiffEditor methods\n    //------------ begin layouting methods\n    _onDidContainerSizeChanged() {\n        this._doLayout();\n    }\n    _getReviewHeight() {\n        return this._reviewPane.isVisible() ? this._elementSizeObserver.getHeight() : 0;\n    }\n    _layoutOverviewRulers() {\n        if (!this._options.renderOverviewRuler) {\n            return;\n        }\n        if (!this._originalOverviewRuler || !this._modifiedOverviewRuler) {\n            return;\n        }\n        const height = this._elementSizeObserver.getHeight();\n        const reviewHeight = this._getReviewHeight();\n        const freeSpace = DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH - 2 * DiffEditorWidget.ONE_OVERVIEW_WIDTH;\n        const layoutInfo = this._modifiedEditor.getLayoutInfo();\n        if (layoutInfo) {\n            this._originalOverviewRuler.setLayout({\n                top: 0,\n                width: DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n                right: freeSpace + DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n                height: (height - reviewHeight)\n            });\n            this._modifiedOverviewRuler.setLayout({\n                top: 0,\n                right: 0,\n                width: DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n                height: (height - reviewHeight)\n            });\n        }\n    }\n    //------------ end layouting methods\n    _onViewZonesChanged() {\n        if (this._currentlyChangingViewZones) {\n            return;\n        }\n        this._updateDecorationsRunner.schedule();\n    }\n    _beginUpdateDecorationsSoon() {\n        // Clear previous timeout if necessary\n        if (this._beginUpdateDecorationsTimeout !== -1) {\n            window.clearTimeout(this._beginUpdateDecorationsTimeout);\n            this._beginUpdateDecorationsTimeout = -1;\n        }\n        this._beginUpdateDecorationsTimeout = window.setTimeout(() => this._beginUpdateDecorations(), DiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY);\n    }\n    static _equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        if (!a || !b) {\n            return false;\n        }\n        return (a.toString() === b.toString());\n    }\n    _beginUpdateDecorations() {\n        if (this._beginUpdateDecorationsTimeout !== -1) {\n            // Cancel any pending requests in case this method is called directly\n            window.clearTimeout(this._beginUpdateDecorationsTimeout);\n            this._beginUpdateDecorationsTimeout = -1;\n        }\n        const currentOriginalModel = this._originalEditor.getModel();\n        const currentModifiedModel = this._modifiedEditor.getModel();\n        if (!currentOriginalModel || !currentModifiedModel) {\n            return;\n        }\n        // Prevent old diff requests to come if a new request has been initiated\n        // The best method would be to call cancel on the Promise, but this is not\n        // yet supported, so using tokens for now.\n        this._diffComputationToken++;\n        const currentToken = this._diffComputationToken;\n        const diffLimit = this._options.maxFileSize * 1024 * 1024; // MB\n        const canSyncModelForDiff = (model) => {\n            const bufferTextLength = model.getValueLength();\n            return (diffLimit === 0 || bufferTextLength <= diffLimit);\n        };\n        if (!canSyncModelForDiff(currentOriginalModel) || !canSyncModelForDiff(currentModifiedModel)) {\n            if (!DiffEditorWidget._equals(currentOriginalModel.uri, this._lastOriginalWarning)\n                || !DiffEditorWidget._equals(currentModifiedModel.uri, this._lastModifiedWarning)) {\n                this._lastOriginalWarning = currentOriginalModel.uri;\n                this._lastModifiedWarning = currentModifiedModel.uri;\n                this._notificationService.warn(nls.localize(\"diff.tooLarge\", \"Cannot compare files because one file is too large.\"));\n            }\n            return;\n        }\n        this._setState(1 /* editorBrowser.DiffEditorState.ComputingDiff */);\n        this._documentDiffProvider.computeDiff(currentOriginalModel, currentModifiedModel, {\n            ignoreTrimWhitespace: this._options.ignoreTrimWhitespace,\n            maxComputationTimeMs: this._options.maxComputationTime,\n        }).then(result => {\n            if (currentToken === this._diffComputationToken\n                && currentOriginalModel === this._originalEditor.getModel()\n                && currentModifiedModel === this._modifiedEditor.getModel()) {\n                this._setState(2 /* editorBrowser.DiffEditorState.DiffComputed */);\n                this._diffComputationResult = {\n                    identical: result.identical,\n                    quitEarly: result.quitEarly,\n                    changes: result.changes.map(m => {\n                        // TODO don't do this translation, but use the diff result directly\n                        let originalStartLineNumber;\n                        let originalEndLineNumber;\n                        let modifiedStartLineNumber;\n                        let modifiedEndLineNumber;\n                        let innerChanges = m.innerChanges;\n                        if (m.originalRange.isEmpty) {\n                            // Insertion\n                            originalStartLineNumber = m.originalRange.startLineNumber - 1;\n                            originalEndLineNumber = 0;\n                            innerChanges = undefined;\n                        }\n                        else {\n                            originalStartLineNumber = m.originalRange.startLineNumber;\n                            originalEndLineNumber = m.originalRange.endLineNumberExclusive - 1;\n                        }\n                        if (m.modifiedRange.isEmpty) {\n                            // Deletion\n                            modifiedStartLineNumber = m.modifiedRange.startLineNumber - 1;\n                            modifiedEndLineNumber = 0;\n                            innerChanges = undefined;\n                        }\n                        else {\n                            modifiedStartLineNumber = m.modifiedRange.startLineNumber;\n                            modifiedEndLineNumber = m.modifiedRange.endLineNumberExclusive - 1;\n                        }\n                        return {\n                            originalStartLineNumber,\n                            originalEndLineNumber,\n                            modifiedStartLineNumber,\n                            modifiedEndLineNumber,\n                            charChanges: innerChanges === null || innerChanges === void 0 ? void 0 : innerChanges.map(m => ({\n                                originalStartLineNumber: m.originalRange.startLineNumber,\n                                originalStartColumn: m.originalRange.startColumn,\n                                originalEndLineNumber: m.originalRange.endLineNumber,\n                                originalEndColumn: m.originalRange.endColumn,\n                                modifiedStartLineNumber: m.modifiedRange.startLineNumber,\n                                modifiedStartColumn: m.modifiedRange.startColumn,\n                                modifiedEndLineNumber: m.modifiedRange.endLineNumber,\n                                modifiedEndColumn: m.modifiedRange.endColumn,\n                            }))\n                        };\n                    })\n                };\n                this._updateDecorationsRunner.schedule();\n                this._onDidUpdateDiff.fire();\n            }\n        }, (error) => {\n            if (currentToken === this._diffComputationToken\n                && currentOriginalModel === this._originalEditor.getModel()\n                && currentModifiedModel === this._modifiedEditor.getModel()) {\n                this._setState(2 /* editorBrowser.DiffEditorState.DiffComputed */);\n                this._diffComputationResult = null;\n                this._updateDecorationsRunner.schedule();\n            }\n        });\n    }\n    _cleanViewZonesAndDecorations() {\n        this._originalEditorState.clean(this._originalEditor);\n        this._modifiedEditorState.clean(this._modifiedEditor);\n    }\n    _updateDecorations() {\n        if (!this._originalEditor.getModel() || !this._modifiedEditor.getModel()) {\n            return;\n        }\n        const lineChanges = (this._diffComputationResult ? this._diffComputationResult.changes : []);\n        const foreignOriginal = this._originalEditorState.getForeignViewZones(this._originalEditor.getWhitespaces());\n        const foreignModified = this._modifiedEditorState.getForeignViewZones(this._modifiedEditor.getWhitespaces());\n        const renderMarginRevertIcon = this._options.renderMarginRevertIcon && !this._modifiedEditor.getOption(86 /* EditorOption.readOnly */);\n        const diffDecorations = this._strategy.getEditorsDiffDecorations(lineChanges, this._options.ignoreTrimWhitespace, this._options.renderIndicators, renderMarginRevertIcon, foreignOriginal, foreignModified);\n        try {\n            this._currentlyChangingViewZones = true;\n            this._originalEditorState.apply(this._originalEditor, this._originalOverviewRuler, diffDecorations.original, false);\n            this._modifiedEditorState.apply(this._modifiedEditor, this._modifiedOverviewRuler, diffDecorations.modified, true);\n        }\n        finally {\n            this._currentlyChangingViewZones = false;\n        }\n    }\n    _adjustOptionsForSubEditor(options) {\n        const clonedOptions = Object.assign({}, options);\n        clonedOptions.inDiffEditor = true;\n        clonedOptions.automaticLayout = false;\n        // Clone scrollbar options before changing them\n        clonedOptions.scrollbar = Object.assign({}, (clonedOptions.scrollbar || {}));\n        clonedOptions.scrollbar.vertical = 'visible';\n        clonedOptions.folding = false;\n        clonedOptions.codeLens = this._options.diffCodeLens;\n        clonedOptions.fixedOverflowWidgets = true;\n        // clonedOptions.lineDecorationsWidth = '2ch';\n        // Clone minimap options before changing them\n        clonedOptions.minimap = Object.assign({}, (clonedOptions.minimap || {}));\n        clonedOptions.minimap.enabled = false;\n        return clonedOptions;\n    }\n    _adjustOptionsForLeftHandSide(options) {\n        const result = this._adjustOptionsForSubEditor(options);\n        if (!this._options.renderSideBySide) {\n            // never wrap hidden editor\n            result.wordWrapOverride1 = 'off';\n            result.wordWrapOverride2 = 'off';\n        }\n        else {\n            result.wordWrapOverride1 = this._options.diffWordWrap;\n        }\n        if (options.originalAriaLabel) {\n            result.ariaLabel = options.originalAriaLabel;\n        }\n        result.ariaLabel += ariaNavigationTip;\n        result.readOnly = !this._options.originalEditable;\n        result.dropIntoEditor = { enabled: !result.readOnly };\n        result.extraEditorClassName = 'original-in-monaco-diff-editor';\n        return Object.assign(Object.assign({}, result), { dimension: {\n                height: 0,\n                width: 0\n            } });\n    }\n    _adjustOptionsForRightHandSide(options) {\n        const result = this._adjustOptionsForSubEditor(options);\n        if (options.modifiedAriaLabel) {\n            result.ariaLabel = options.modifiedAriaLabel;\n        }\n        result.ariaLabel += ariaNavigationTip;\n        result.wordWrapOverride1 = this._options.diffWordWrap;\n        result.revealHorizontalRightPadding = EditorOptions.revealHorizontalRightPadding.defaultValue + DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH;\n        result.scrollbar.verticalHasArrows = false;\n        result.extraEditorClassName = 'modified-in-monaco-diff-editor';\n        return Object.assign(Object.assign({}, result), { dimension: {\n                height: 0,\n                width: 0\n            } });\n    }\n    doLayout() {\n        this._elementSizeObserver.observe();\n        this._doLayout();\n    }\n    _doLayout() {\n        const width = this._elementSizeObserver.getWidth();\n        const height = this._elementSizeObserver.getHeight();\n        const reviewHeight = this._getReviewHeight();\n        const splitPoint = this._strategy.layout();\n        this._originalDomNode.style.width = splitPoint + 'px';\n        this._originalDomNode.style.left = '0px';\n        this._modifiedDomNode.style.width = (width - splitPoint) + 'px';\n        this._modifiedDomNode.style.left = splitPoint + 'px';\n        this._overviewDomElement.style.top = '0px';\n        this._overviewDomElement.style.height = (height - reviewHeight) + 'px';\n        this._overviewDomElement.style.width = DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH + 'px';\n        this._overviewDomElement.style.left = (width - DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH) + 'px';\n        this._overviewViewportDomElement.setWidth(DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH);\n        this._overviewViewportDomElement.setHeight(30);\n        this._originalEditor.layout({ width: splitPoint, height: (height - reviewHeight) });\n        this._modifiedEditor.layout({ width: width - splitPoint - (this._options.renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0), height: (height - reviewHeight) });\n        if (this._originalOverviewRuler || this._modifiedOverviewRuler) {\n            this._layoutOverviewRulers();\n        }\n        this._reviewPane.layout(height - reviewHeight, width, reviewHeight);\n        this._layoutOverviewViewport();\n    }\n    _layoutOverviewViewport() {\n        const layout = this._computeOverviewViewport();\n        if (!layout) {\n            this._overviewViewportDomElement.setTop(0);\n            this._overviewViewportDomElement.setHeight(0);\n        }\n        else {\n            this._overviewViewportDomElement.setTop(layout.top);\n            this._overviewViewportDomElement.setHeight(layout.height);\n        }\n    }\n    _computeOverviewViewport() {\n        const layoutInfo = this._modifiedEditor.getLayoutInfo();\n        if (!layoutInfo) {\n            return null;\n        }\n        const scrollTop = this._modifiedEditor.getScrollTop();\n        const scrollHeight = this._modifiedEditor.getScrollHeight();\n        const computedAvailableSize = Math.max(0, layoutInfo.height);\n        const computedRepresentableSize = Math.max(0, computedAvailableSize - 2 * 0);\n        const computedRatio = scrollHeight > 0 ? (computedRepresentableSize / scrollHeight) : 0;\n        const computedSliderSize = Math.max(0, Math.floor(layoutInfo.height * computedRatio));\n        const computedSliderPosition = Math.floor(scrollTop * computedRatio);\n        return {\n            height: computedSliderSize,\n            top: computedSliderPosition\n        };\n    }\n    _createDataSource() {\n        return {\n            getWidth: () => {\n                return this._elementSizeObserver.getWidth();\n            },\n            getHeight: () => {\n                return (this._elementSizeObserver.getHeight() - this._getReviewHeight());\n            },\n            getOptions: () => {\n                return {\n                    renderOverviewRuler: this._options.renderOverviewRuler\n                };\n            },\n            getContainerDomNode: () => {\n                return this._containerDomElement;\n            },\n            relayoutEditors: () => {\n                this._doLayout();\n            },\n            getOriginalEditor: () => {\n                return this._originalEditor;\n            },\n            getModifiedEditor: () => {\n                return this._modifiedEditor;\n            }\n        };\n    }\n    _setStrategy(newStrategy) {\n        var _a;\n        (_a = this._strategy) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._strategy = newStrategy;\n        if (this._boundarySashes) {\n            newStrategy.setBoundarySashes(this._boundarySashes);\n        }\n        newStrategy.applyColors(this._themeService.getColorTheme());\n        if (this._diffComputationResult) {\n            this._updateDecorations();\n        }\n        // Just do a layout, the strategy might need it\n        this._doLayout();\n    }\n    _getLineChangeAtOrBeforeLineNumber(lineNumber, startLineNumberExtractor) {\n        const lineChanges = (this._diffComputationResult ? this._diffComputationResult.changes : []);\n        if (lineChanges.length === 0 || lineNumber < startLineNumberExtractor(lineChanges[0])) {\n            // There are no changes or `lineNumber` is before the first change\n            return null;\n        }\n        let min = 0;\n        let max = lineChanges.length - 1;\n        while (min < max) {\n            const mid = Math.floor((min + max) / 2);\n            const midStart = startLineNumberExtractor(lineChanges[mid]);\n            const midEnd = (mid + 1 <= max ? startLineNumberExtractor(lineChanges[mid + 1]) : 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n            if (lineNumber < midStart) {\n                max = mid - 1;\n            }\n            else if (lineNumber >= midEnd) {\n                min = mid + 1;\n            }\n            else {\n                // HIT!\n                min = mid;\n                max = mid;\n            }\n        }\n        return lineChanges[min];\n    }\n    _getEquivalentLineForOriginalLineNumber(lineNumber) {\n        const lineChange = this._getLineChangeAtOrBeforeLineNumber(lineNumber, (lineChange) => lineChange.originalStartLineNumber);\n        if (!lineChange) {\n            return lineNumber;\n        }\n        const originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n        const modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n        const lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? (lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1) : 0);\n        const lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? (lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1) : 0);\n        const delta = lineNumber - originalEquivalentLineNumber;\n        if (delta <= lineChangeOriginalLength) {\n            return modifiedEquivalentLineNumber + Math.min(delta, lineChangeModifiedLength);\n        }\n        return modifiedEquivalentLineNumber + lineChangeModifiedLength - lineChangeOriginalLength + delta;\n    }\n    _getEquivalentLineForModifiedLineNumber(lineNumber) {\n        const lineChange = this._getLineChangeAtOrBeforeLineNumber(lineNumber, (lineChange) => lineChange.modifiedStartLineNumber);\n        if (!lineChange) {\n            return lineNumber;\n        }\n        const originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n        const modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n        const lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? (lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1) : 0);\n        const lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? (lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1) : 0);\n        const delta = lineNumber - modifiedEquivalentLineNumber;\n        if (delta <= lineChangeModifiedLength) {\n            return originalEquivalentLineNumber + Math.min(delta, lineChangeOriginalLength);\n        }\n        return originalEquivalentLineNumber + lineChangeOriginalLength - lineChangeModifiedLength + delta;\n    }\n    getDiffLineInformationForOriginal(lineNumber) {\n        if (!this._diffComputationResult) {\n            // Cannot answer that which I don't know\n            return null;\n        }\n        return {\n            equivalentLineNumber: this._getEquivalentLineForOriginalLineNumber(lineNumber)\n        };\n    }\n    getDiffLineInformationForModified(lineNumber) {\n        if (!this._diffComputationResult) {\n            // Cannot answer that which I don't know\n            return null;\n        }\n        return {\n            equivalentLineNumber: this._getEquivalentLineForModifiedLineNumber(lineNumber)\n        };\n    }\n};\nDiffEditorWidget.ONE_OVERVIEW_WIDTH = 15;\nDiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH = 30;\nDiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY = 200; // ms\nDiffEditorWidget = __decorate([\n    __param(3, IClipboardService),\n    __param(4, IContextKeyService),\n    __param(5, IInstantiationService),\n    __param(6, ICodeEditorService),\n    __param(7, IThemeService),\n    __param(8, INotificationService),\n    __param(9, IContextMenuService),\n    __param(10, IEditorProgressService)\n], DiffEditorWidget);\nexport { DiffEditorWidget };\nclass DiffEditorWidgetStyle extends Disposable {\n    constructor(dataSource) {\n        super();\n        this._dataSource = dataSource;\n        this._insertColor = null;\n        this._removeColor = null;\n    }\n    applyColors(theme) {\n        const newInsertColor = theme.getColor(diffOverviewRulerInserted) || (theme.getColor(diffInserted) || defaultInsertColor).transparent(2);\n        const newRemoveColor = theme.getColor(diffOverviewRulerRemoved) || (theme.getColor(diffRemoved) || defaultRemoveColor).transparent(2);\n        const hasChanges = !newInsertColor.equals(this._insertColor) || !newRemoveColor.equals(this._removeColor);\n        this._insertColor = newInsertColor;\n        this._removeColor = newRemoveColor;\n        return hasChanges;\n    }\n    getEditorsDiffDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators, renderMarginRevertIcon, originalWhitespaces, modifiedWhitespaces) {\n        // Get view zones\n        modifiedWhitespaces = modifiedWhitespaces.sort((a, b) => {\n            return a.afterLineNumber - b.afterLineNumber;\n        });\n        originalWhitespaces = originalWhitespaces.sort((a, b) => {\n            return a.afterLineNumber - b.afterLineNumber;\n        });\n        const zones = this._getViewZones(lineChanges, originalWhitespaces, modifiedWhitespaces, renderIndicators);\n        // Get decorations & overview ruler zones\n        const originalDecorations = this._getOriginalEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators);\n        const modifiedDecorations = this._getModifiedEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators, renderMarginRevertIcon);\n        return {\n            original: {\n                decorations: originalDecorations.decorations,\n                overviewZones: originalDecorations.overviewZones,\n                zones: zones.original\n            },\n            modified: {\n                decorations: modifiedDecorations.decorations,\n                overviewZones: modifiedDecorations.overviewZones,\n                zones: zones.modified\n            }\n        };\n    }\n    setBoundarySashes(_sashes) {\n        // To be implemented by subclasses\n    }\n}\nclass ForeignViewZonesIterator {\n    constructor(source) {\n        this._source = source;\n        this._index = -1;\n        this.current = null;\n        this.advance();\n    }\n    advance() {\n        this._index++;\n        if (this._index < this._source.length) {\n            this.current = this._source[this._index];\n        }\n        else {\n            this.current = null;\n        }\n    }\n}\nclass ViewZonesComputer {\n    constructor(_lineChanges, _originalForeignVZ, _modifiedForeignVZ, _originalEditor, _modifiedEditor) {\n        this._lineChanges = _lineChanges;\n        this._originalForeignVZ = _originalForeignVZ;\n        this._modifiedForeignVZ = _modifiedForeignVZ;\n        this._originalEditor = _originalEditor;\n        this._modifiedEditor = _modifiedEditor;\n    }\n    static _getViewLineCount(editor, startLineNumber, endLineNumber) {\n        const model = editor.getModel();\n        const viewModel = editor._getViewModel();\n        if (model && viewModel) {\n            const viewRange = getViewRange(model, viewModel, startLineNumber, endLineNumber);\n            return (viewRange.endLineNumber - viewRange.startLineNumber + 1);\n        }\n        return (endLineNumber - startLineNumber + 1);\n    }\n    getViewZones() {\n        const originalLineHeight = this._originalEditor.getOption(63 /* EditorOption.lineHeight */);\n        const modifiedLineHeight = this._modifiedEditor.getOption(63 /* EditorOption.lineHeight */);\n        const originalHasWrapping = (this._originalEditor.getOption(139 /* EditorOption.wrappingInfo */).wrappingColumn !== -1);\n        const modifiedHasWrapping = (this._modifiedEditor.getOption(139 /* EditorOption.wrappingInfo */).wrappingColumn !== -1);\n        const hasWrapping = (originalHasWrapping || modifiedHasWrapping);\n        const originalModel = this._originalEditor.getModel();\n        const originalCoordinatesConverter = this._originalEditor._getViewModel().coordinatesConverter;\n        const modifiedCoordinatesConverter = this._modifiedEditor._getViewModel().coordinatesConverter;\n        const result = {\n            original: [],\n            modified: []\n        };\n        let lineChangeModifiedLength = 0;\n        let lineChangeOriginalLength = 0;\n        let originalEquivalentLineNumber = 0;\n        let modifiedEquivalentLineNumber = 0;\n        let originalEndEquivalentLineNumber = 0;\n        let modifiedEndEquivalentLineNumber = 0;\n        const sortMyViewZones = (a, b) => {\n            return a.afterLineNumber - b.afterLineNumber;\n        };\n        const addAndCombineIfPossible = (destination, item) => {\n            if (item.domNode === null && destination.length > 0) {\n                const lastItem = destination[destination.length - 1];\n                if (lastItem.afterLineNumber === item.afterLineNumber && lastItem.domNode === null) {\n                    lastItem.heightInLines += item.heightInLines;\n                    return;\n                }\n            }\n            destination.push(item);\n        };\n        const modifiedForeignVZ = new ForeignViewZonesIterator(this._modifiedForeignVZ);\n        const originalForeignVZ = new ForeignViewZonesIterator(this._originalForeignVZ);\n        let lastOriginalLineNumber = 1;\n        let lastModifiedLineNumber = 1;\n        // In order to include foreign view zones after the last line change, the for loop will iterate once more after the end of the `lineChanges` array\n        for (let i = 0, length = this._lineChanges.length; i <= length; i++) {\n            const lineChange = (i < length ? this._lineChanges[i] : null);\n            if (lineChange !== null) {\n                originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n                modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n                lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? ViewZonesComputer._getViewLineCount(this._originalEditor, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber) : 0);\n                lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? ViewZonesComputer._getViewLineCount(this._modifiedEditor, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber) : 0);\n                originalEndEquivalentLineNumber = Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\n                modifiedEndEquivalentLineNumber = Math.max(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\n            }\n            else {\n                // Increase to very large value to get the producing tests of foreign view zones running\n                originalEquivalentLineNumber += 10000000 + lineChangeOriginalLength;\n                modifiedEquivalentLineNumber += 10000000 + lineChangeModifiedLength;\n                originalEndEquivalentLineNumber = originalEquivalentLineNumber;\n                modifiedEndEquivalentLineNumber = modifiedEquivalentLineNumber;\n            }\n            // Each step produces view zones, and after producing them, we try to cancel them out, to avoid empty-empty view zone cases\n            let stepOriginal = [];\n            let stepModified = [];\n            // ---------------------------- PRODUCE VIEW ZONES\n            // [PRODUCE] View zones due to line mapping differences (equal lines but wrapped differently)\n            if (hasWrapping) {\n                let count;\n                if (lineChange) {\n                    if (lineChange.originalEndLineNumber > 0) {\n                        count = lineChange.originalStartLineNumber - lastOriginalLineNumber;\n                    }\n                    else {\n                        count = lineChange.modifiedStartLineNumber - lastModifiedLineNumber;\n                    }\n                }\n                else {\n                    // `lastOriginalLineNumber` has not been looked at yet\n                    count = originalModel.getLineCount() - lastOriginalLineNumber + 1;\n                }\n                for (let i = 0; i < count; i++) {\n                    const originalLineNumber = lastOriginalLineNumber + i;\n                    const modifiedLineNumber = lastModifiedLineNumber + i;\n                    const originalViewLineCount = originalCoordinatesConverter.getModelLineViewLineCount(originalLineNumber);\n                    const modifiedViewLineCount = modifiedCoordinatesConverter.getModelLineViewLineCount(modifiedLineNumber);\n                    if (originalViewLineCount < modifiedViewLineCount) {\n                        stepOriginal.push({\n                            afterLineNumber: originalLineNumber,\n                            heightInLines: modifiedViewLineCount - originalViewLineCount,\n                            domNode: null,\n                            marginDomNode: null\n                        });\n                    }\n                    else if (originalViewLineCount > modifiedViewLineCount) {\n                        stepModified.push({\n                            afterLineNumber: modifiedLineNumber,\n                            heightInLines: originalViewLineCount - modifiedViewLineCount,\n                            domNode: null,\n                            marginDomNode: null\n                        });\n                    }\n                }\n                if (lineChange) {\n                    lastOriginalLineNumber = (lineChange.originalEndLineNumber > 0 ? lineChange.originalEndLineNumber : lineChange.originalStartLineNumber) + 1;\n                    lastModifiedLineNumber = (lineChange.modifiedEndLineNumber > 0 ? lineChange.modifiedEndLineNumber : lineChange.modifiedStartLineNumber) + 1;\n                }\n            }\n            // [PRODUCE] View zone(s) in original-side due to foreign view zone(s) in modified-side\n            while (modifiedForeignVZ.current && modifiedForeignVZ.current.afterLineNumber <= modifiedEndEquivalentLineNumber) {\n                let viewZoneLineNumber;\n                if (modifiedForeignVZ.current.afterLineNumber <= modifiedEquivalentLineNumber) {\n                    viewZoneLineNumber = originalEquivalentLineNumber - modifiedEquivalentLineNumber + modifiedForeignVZ.current.afterLineNumber;\n                }\n                else {\n                    viewZoneLineNumber = originalEndEquivalentLineNumber;\n                }\n                let marginDomNode = null;\n                if (lineChange && lineChange.modifiedStartLineNumber <= modifiedForeignVZ.current.afterLineNumber && modifiedForeignVZ.current.afterLineNumber <= lineChange.modifiedEndLineNumber) {\n                    marginDomNode = this._createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion();\n                }\n                stepOriginal.push({\n                    afterLineNumber: viewZoneLineNumber,\n                    heightInLines: modifiedForeignVZ.current.height / modifiedLineHeight,\n                    domNode: null,\n                    marginDomNode: marginDomNode\n                });\n                modifiedForeignVZ.advance();\n            }\n            // [PRODUCE] View zone(s) in modified-side due to foreign view zone(s) in original-side\n            while (originalForeignVZ.current && originalForeignVZ.current.afterLineNumber <= originalEndEquivalentLineNumber) {\n                let viewZoneLineNumber;\n                if (originalForeignVZ.current.afterLineNumber <= originalEquivalentLineNumber) {\n                    viewZoneLineNumber = modifiedEquivalentLineNumber - originalEquivalentLineNumber + originalForeignVZ.current.afterLineNumber;\n                }\n                else {\n                    viewZoneLineNumber = modifiedEndEquivalentLineNumber;\n                }\n                stepModified.push({\n                    afterLineNumber: viewZoneLineNumber,\n                    heightInLines: originalForeignVZ.current.height / originalLineHeight,\n                    domNode: null\n                });\n                originalForeignVZ.advance();\n            }\n            if (lineChange !== null && isChangeOrInsert(lineChange)) {\n                const r = this._produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength);\n                if (r) {\n                    stepOriginal.push(r);\n                }\n            }\n            if (lineChange !== null && isChangeOrDelete(lineChange)) {\n                const r = this._produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength);\n                if (r) {\n                    stepModified.push(r);\n                }\n            }\n            // ---------------------------- END PRODUCE VIEW ZONES\n            // ---------------------------- EMIT MINIMAL VIEW ZONES\n            // [CANCEL & EMIT] Try to cancel view zones out\n            let stepOriginalIndex = 0;\n            let stepModifiedIndex = 0;\n            stepOriginal = stepOriginal.sort(sortMyViewZones);\n            stepModified = stepModified.sort(sortMyViewZones);\n            while (stepOriginalIndex < stepOriginal.length && stepModifiedIndex < stepModified.length) {\n                const original = stepOriginal[stepOriginalIndex];\n                const modified = stepModified[stepModifiedIndex];\n                const originalDelta = original.afterLineNumber - originalEquivalentLineNumber;\n                const modifiedDelta = modified.afterLineNumber - modifiedEquivalentLineNumber;\n                if (originalDelta < modifiedDelta) {\n                    addAndCombineIfPossible(result.original, original);\n                    stepOriginalIndex++;\n                }\n                else if (modifiedDelta < originalDelta) {\n                    addAndCombineIfPossible(result.modified, modified);\n                    stepModifiedIndex++;\n                }\n                else if (original.shouldNotShrink) {\n                    addAndCombineIfPossible(result.original, original);\n                    stepOriginalIndex++;\n                }\n                else if (modified.shouldNotShrink) {\n                    addAndCombineIfPossible(result.modified, modified);\n                    stepModifiedIndex++;\n                }\n                else {\n                    if (original.heightInLines >= modified.heightInLines) {\n                        // modified view zone gets removed\n                        original.heightInLines -= modified.heightInLines;\n                        stepModifiedIndex++;\n                    }\n                    else {\n                        // original view zone gets removed\n                        modified.heightInLines -= original.heightInLines;\n                        stepOriginalIndex++;\n                    }\n                }\n            }\n            // [EMIT] Remaining original view zones\n            while (stepOriginalIndex < stepOriginal.length) {\n                addAndCombineIfPossible(result.original, stepOriginal[stepOriginalIndex]);\n                stepOriginalIndex++;\n            }\n            // [EMIT] Remaining modified view zones\n            while (stepModifiedIndex < stepModified.length) {\n                addAndCombineIfPossible(result.modified, stepModified[stepModifiedIndex]);\n                stepModifiedIndex++;\n            }\n            // ---------------------------- END EMIT MINIMAL VIEW ZONES\n        }\n        return {\n            original: ViewZonesComputer._ensureDomNodes(result.original),\n            modified: ViewZonesComputer._ensureDomNodes(result.modified),\n        };\n    }\n    static _ensureDomNodes(zones) {\n        return zones.map((z) => {\n            if (!z.domNode) {\n                z.domNode = createFakeLinesDiv();\n            }\n            return z;\n        });\n    }\n}\nfunction createDecoration(startLineNumber, startColumn, endLineNumber, endColumn, options) {\n    return {\n        range: new Range(startLineNumber, startColumn, endLineNumber, endColumn),\n        options: options\n    };\n}\nconst DECORATIONS = {\n    arrowRevertChange: ModelDecorationOptions.register({\n        description: 'diff-editor-arrow-revert-change',\n        glyphMarginClassName: 'arrow-revert-change ' + ThemeIcon.asClassName(Codicon.arrowRight),\n    }),\n    charDelete: ModelDecorationOptions.register({\n        description: 'diff-editor-char-delete',\n        className: 'char-delete'\n    }),\n    charDeleteWholeLine: ModelDecorationOptions.register({\n        description: 'diff-editor-char-delete-whole-line',\n        className: 'char-delete',\n        isWholeLine: true\n    }),\n    charInsert: ModelDecorationOptions.register({\n        description: 'diff-editor-char-insert',\n        className: 'char-insert'\n    }),\n    charInsertWholeLine: ModelDecorationOptions.register({\n        description: 'diff-editor-char-insert-whole-line',\n        className: 'char-insert',\n        isWholeLine: true\n    }),\n    lineInsert: ModelDecorationOptions.register({\n        description: 'diff-editor-line-insert',\n        className: \"line-insert\" /* DiffEditorLineClasses.Insert */,\n        marginClassName: 'gutter-insert',\n        isWholeLine: true\n    }),\n    lineInsertWithSign: ModelDecorationOptions.register({\n        description: 'diff-editor-line-insert-with-sign',\n        className: \"line-insert\" /* DiffEditorLineClasses.Insert */,\n        linesDecorationsClassName: 'insert-sign ' + ThemeIcon.asClassName(diffInsertIcon),\n        marginClassName: 'gutter-insert',\n        isWholeLine: true\n    }),\n    lineDelete: ModelDecorationOptions.register({\n        description: 'diff-editor-line-delete',\n        className: \"line-delete\" /* DiffEditorLineClasses.Delete */,\n        marginClassName: 'gutter-delete',\n        isWholeLine: true\n    }),\n    lineDeleteWithSign: ModelDecorationOptions.register({\n        description: 'diff-editor-line-delete-with-sign',\n        className: \"line-delete\" /* DiffEditorLineClasses.Delete */,\n        linesDecorationsClassName: 'delete-sign ' + ThemeIcon.asClassName(diffRemoveIcon),\n        marginClassName: 'gutter-delete',\n        isWholeLine: true\n    }),\n    lineDeleteMargin: ModelDecorationOptions.register({\n        description: 'diff-editor-line-delete-margin',\n        marginClassName: 'gutter-delete',\n    })\n};\nclass DiffEditorWidgetSideBySide extends DiffEditorWidgetStyle {\n    constructor(dataSource, enableSplitViewResizing) {\n        super(dataSource);\n        this._disableSash = (enableSplitViewResizing === false);\n        this._sashRatio = null;\n        this._sashPosition = null;\n        this._startSashPosition = null;\n        this._sash = this._register(new Sash(this._dataSource.getContainerDomNode(), this, { orientation: 0 /* Orientation.VERTICAL */ }));\n        if (this._disableSash) {\n            this._sash.state = 0 /* SashState.Disabled */;\n        }\n        this._sash.onDidStart(() => this._onSashDragStart());\n        this._sash.onDidChange((e) => this._onSashDrag(e));\n        this._sash.onDidEnd(() => this._onSashDragEnd());\n        this._sash.onDidReset(() => this._onSashReset());\n    }\n    setEnableSplitViewResizing(enableSplitViewResizing) {\n        const newDisableSash = (enableSplitViewResizing === false);\n        if (this._disableSash !== newDisableSash) {\n            this._disableSash = newDisableSash;\n            this._sash.state = this._disableSash ? 0 /* SashState.Disabled */ : 3 /* SashState.Enabled */;\n        }\n    }\n    layout(sashRatio = this._sashRatio) {\n        const w = this._dataSource.getWidth();\n        const contentWidth = w - (this._dataSource.getOptions().renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0);\n        let sashPosition = Math.floor((sashRatio || 0.5) * contentWidth);\n        const midPoint = Math.floor(0.5 * contentWidth);\n        sashPosition = this._disableSash ? midPoint : sashPosition || midPoint;\n        if (contentWidth > DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH * 2) {\n            if (sashPosition < DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH) {\n                sashPosition = DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH;\n            }\n            if (sashPosition > contentWidth - DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH) {\n                sashPosition = contentWidth - DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH;\n            }\n        }\n        else {\n            sashPosition = midPoint;\n        }\n        if (this._sashPosition !== sashPosition) {\n            this._sashPosition = sashPosition;\n        }\n        this._sash.layout();\n        return this._sashPosition;\n    }\n    _onSashDragStart() {\n        this._startSashPosition = this._sashPosition;\n    }\n    _onSashDrag(e) {\n        const w = this._dataSource.getWidth();\n        const contentWidth = w - (this._dataSource.getOptions().renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0);\n        const sashPosition = this.layout((this._startSashPosition + (e.currentX - e.startX)) / contentWidth);\n        this._sashRatio = sashPosition / contentWidth;\n        this._dataSource.relayoutEditors();\n    }\n    _onSashDragEnd() {\n        this._sash.layout();\n    }\n    _onSashReset() {\n        this._sashRatio = 0.5;\n        this._dataSource.relayoutEditors();\n        this._sash.layout();\n    }\n    getVerticalSashTop(sash) {\n        return 0;\n    }\n    getVerticalSashLeft(sash) {\n        return this._sashPosition;\n    }\n    getVerticalSashHeight(sash) {\n        return this._dataSource.getHeight();\n    }\n    setBoundarySashes(sashes) {\n        this._sash.orthogonalEndSash = sashes.bottom;\n    }\n    _getViewZones(lineChanges, originalForeignVZ, modifiedForeignVZ) {\n        const originalEditor = this._dataSource.getOriginalEditor();\n        const modifiedEditor = this._dataSource.getModifiedEditor();\n        const c = new SideBySideViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\n        return c.getViewZones();\n    }\n    _getOriginalEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators) {\n        const originalEditor = this._dataSource.getOriginalEditor();\n        const overviewZoneColor = String(this._removeColor);\n        const result = {\n            decorations: [],\n            overviewZones: []\n        };\n        const originalModel = originalEditor.getModel();\n        const originalViewModel = originalEditor._getViewModel();\n        for (const lineChange of lineChanges) {\n            if (isChangeOrDelete(lineChange)) {\n                result.decorations.push({\n                    range: new Range(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n                    options: (renderIndicators ? DECORATIONS.lineDeleteWithSign : DECORATIONS.lineDelete)\n                });\n                if (!isChangeOrInsert(lineChange) || !lineChange.charChanges) {\n                    result.decorations.push(createDecoration(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charDeleteWholeLine));\n                }\n                const viewRange = getViewRange(originalModel, originalViewModel, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, /*use endLineNumber*/ 0, overviewZoneColor));\n                if (lineChange.charChanges) {\n                    for (const charChange of lineChange.charChanges) {\n                        if (isCharChangeOrDelete(charChange)) {\n                            if (ignoreTrimWhitespace) {\n                                for (let lineNumber = charChange.originalStartLineNumber; lineNumber <= charChange.originalEndLineNumber; lineNumber++) {\n                                    let startColumn;\n                                    let endColumn;\n                                    if (lineNumber === charChange.originalStartLineNumber) {\n                                        startColumn = charChange.originalStartColumn;\n                                    }\n                                    else {\n                                        startColumn = originalModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                                    }\n                                    if (lineNumber === charChange.originalEndLineNumber) {\n                                        endColumn = charChange.originalEndColumn;\n                                    }\n                                    else {\n                                        endColumn = originalModel.getLineLastNonWhitespaceColumn(lineNumber);\n                                    }\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charDelete));\n                                }\n                            }\n                            else {\n                                result.decorations.push(createDecoration(charChange.originalStartLineNumber, charChange.originalStartColumn, charChange.originalEndLineNumber, charChange.originalEndColumn, DECORATIONS.charDelete));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    _getModifiedEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators, renderMarginRevertIcon) {\n        const modifiedEditor = this._dataSource.getModifiedEditor();\n        const overviewZoneColor = String(this._insertColor);\n        const result = {\n            decorations: [],\n            overviewZones: []\n        };\n        const modifiedModel = modifiedEditor.getModel();\n        const modifiedViewModel = modifiedEditor._getViewModel();\n        for (const lineChange of lineChanges) {\n            // Arrows for reverting changes.\n            if (renderMarginRevertIcon) {\n                if (lineChange.modifiedEndLineNumber > 0) {\n                    result.decorations.push({\n                        range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedStartLineNumber, 1),\n                        options: DECORATIONS.arrowRevertChange\n                    });\n                }\n                else {\n                    const viewZone = zones.modified.find(z => z.afterLineNumber === lineChange.modifiedStartLineNumber);\n                    if (viewZone) {\n                        viewZone.marginDomNode = createViewZoneMarginArrow();\n                    }\n                }\n            }\n            if (isChangeOrInsert(lineChange)) {\n                result.decorations.push({\n                    range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n                    options: (renderIndicators ? DECORATIONS.lineInsertWithSign : DECORATIONS.lineInsert)\n                });\n                if (!isChangeOrDelete(lineChange) || !lineChange.charChanges) {\n                    result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charInsertWholeLine));\n                }\n                const viewRange = getViewRange(modifiedModel, modifiedViewModel, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, /*use endLineNumber*/ 0, overviewZoneColor));\n                if (lineChange.charChanges) {\n                    for (const charChange of lineChange.charChanges) {\n                        if (isCharChangeOrInsert(charChange)) {\n                            if (ignoreTrimWhitespace) {\n                                for (let lineNumber = charChange.modifiedStartLineNumber; lineNumber <= charChange.modifiedEndLineNumber; lineNumber++) {\n                                    let startColumn;\n                                    let endColumn;\n                                    if (lineNumber === charChange.modifiedStartLineNumber) {\n                                        startColumn = charChange.modifiedStartColumn;\n                                    }\n                                    else {\n                                        startColumn = modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                                    }\n                                    if (lineNumber === charChange.modifiedEndLineNumber) {\n                                        endColumn = charChange.modifiedEndColumn;\n                                    }\n                                    else {\n                                        endColumn = modifiedModel.getLineLastNonWhitespaceColumn(lineNumber);\n                                    }\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charInsert));\n                                }\n                            }\n                            else {\n                                result.decorations.push(createDecoration(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn, DECORATIONS.charInsert));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n}\nDiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH = 100;\nclass SideBySideViewZonesComputer extends ViewZonesComputer {\n    constructor(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor) {\n        super(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\n    }\n    _createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion() {\n        return null;\n    }\n    _produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        if (lineChangeModifiedLength > lineChangeOriginalLength) {\n            return {\n                afterLineNumber: Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber),\n                heightInLines: (lineChangeModifiedLength - lineChangeOriginalLength),\n                domNode: null\n            };\n        }\n        return null;\n    }\n    _produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        if (lineChangeOriginalLength > lineChangeModifiedLength) {\n            return {\n                afterLineNumber: Math.max(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber),\n                heightInLines: (lineChangeOriginalLength - lineChangeModifiedLength),\n                domNode: null\n            };\n        }\n        return null;\n    }\n}\nclass DiffEditorWidgetInline extends DiffEditorWidgetStyle {\n    constructor(dataSource, enableSplitViewResizing) {\n        super(dataSource);\n        this._decorationsLeft = dataSource.getOriginalEditor().getLayoutInfo().decorationsLeft;\n        this._register(dataSource.getOriginalEditor().onDidLayoutChange((layoutInfo) => {\n            if (this._decorationsLeft !== layoutInfo.decorationsLeft) {\n                this._decorationsLeft = layoutInfo.decorationsLeft;\n                dataSource.relayoutEditors();\n            }\n        }));\n    }\n    setEnableSplitViewResizing(enableSplitViewResizing) {\n        // Nothing to do..\n    }\n    _getViewZones(lineChanges, originalForeignVZ, modifiedForeignVZ, renderIndicators) {\n        const originalEditor = this._dataSource.getOriginalEditor();\n        const modifiedEditor = this._dataSource.getModifiedEditor();\n        const computer = new InlineViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor, renderIndicators);\n        return computer.getViewZones();\n    }\n    _getOriginalEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators) {\n        const overviewZoneColor = String(this._removeColor);\n        const result = {\n            decorations: [],\n            overviewZones: []\n        };\n        const originalEditor = this._dataSource.getOriginalEditor();\n        const originalModel = originalEditor.getModel();\n        const originalViewModel = originalEditor._getViewModel();\n        let zoneIndex = 0;\n        for (const lineChange of lineChanges) {\n            // Add overview zones in the overview ruler\n            if (isChangeOrDelete(lineChange)) {\n                result.decorations.push({\n                    range: new Range(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n                    options: DECORATIONS.lineDeleteMargin\n                });\n                while (zoneIndex < zones.modified.length) {\n                    const zone = zones.modified[zoneIndex];\n                    if (zone.diff && zone.diff.originalStartLineNumber >= lineChange.originalStartLineNumber) {\n                        break;\n                    }\n                    zoneIndex++;\n                }\n                let zoneHeightInLines = 0;\n                if (zoneIndex < zones.modified.length) {\n                    const zone = zones.modified[zoneIndex];\n                    if (zone.diff\n                        && zone.diff.originalStartLineNumber === lineChange.originalStartLineNumber\n                        && zone.diff.originalEndLineNumber === lineChange.originalEndLineNumber\n                        && zone.diff.modifiedStartLineNumber === lineChange.modifiedStartLineNumber\n                        && zone.diff.modifiedEndLineNumber === lineChange.modifiedEndLineNumber) {\n                        zoneHeightInLines = zone.heightInLines;\n                    }\n                }\n                const viewRange = getViewRange(originalModel, originalViewModel, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, zoneHeightInLines, overviewZoneColor));\n            }\n        }\n        return result;\n    }\n    _getModifiedEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators, renderMarginRevertIcon) {\n        const modifiedEditor = this._dataSource.getModifiedEditor();\n        const overviewZoneColor = String(this._insertColor);\n        const result = {\n            decorations: [],\n            overviewZones: []\n        };\n        const modifiedModel = modifiedEditor.getModel();\n        const modifiedViewModel = modifiedEditor._getViewModel();\n        for (const lineChange of lineChanges) {\n            // Add decorations & overview zones\n            if (isChangeOrInsert(lineChange)) {\n                result.decorations.push({\n                    range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n                    options: (renderIndicators ? DECORATIONS.lineInsertWithSign : DECORATIONS.lineInsert)\n                });\n                const viewRange = getViewRange(modifiedModel, modifiedViewModel, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, /*use endLineNumber*/ 0, overviewZoneColor));\n                if (lineChange.charChanges) {\n                    for (const charChange of lineChange.charChanges) {\n                        if (isCharChangeOrInsert(charChange)) {\n                            if (ignoreTrimWhitespace) {\n                                for (let lineNumber = charChange.modifiedStartLineNumber; lineNumber <= charChange.modifiedEndLineNumber; lineNumber++) {\n                                    let startColumn;\n                                    let endColumn;\n                                    if (lineNumber === charChange.modifiedStartLineNumber) {\n                                        startColumn = charChange.modifiedStartColumn;\n                                    }\n                                    else {\n                                        startColumn = modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                                    }\n                                    if (lineNumber === charChange.modifiedEndLineNumber) {\n                                        endColumn = charChange.modifiedEndColumn;\n                                    }\n                                    else {\n                                        endColumn = modifiedModel.getLineLastNonWhitespaceColumn(lineNumber);\n                                    }\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charInsert));\n                                }\n                            }\n                            else {\n                                result.decorations.push(createDecoration(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn, DECORATIONS.charInsert));\n                            }\n                        }\n                    }\n                }\n                else {\n                    result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charInsertWholeLine));\n                }\n            }\n        }\n        return result;\n    }\n    layout() {\n        // An editor should not be smaller than 5px\n        return Math.max(5, this._decorationsLeft);\n    }\n}\nclass InlineViewZonesComputer extends ViewZonesComputer {\n    constructor(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor, renderIndicators) {\n        super(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\n        this._originalModel = originalEditor.getModel();\n        this._renderIndicators = renderIndicators;\n        this._pendingLineChange = [];\n        this._pendingViewZones = [];\n        this._lineBreaksComputer = this._modifiedEditor._getViewModel().createLineBreaksComputer();\n    }\n    getViewZones() {\n        const result = super.getViewZones();\n        this._finalize(result);\n        return result;\n    }\n    _createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion() {\n        const result = document.createElement('div');\n        result.className = 'inline-added-margin-view-zone';\n        return result;\n    }\n    _produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        const marginDomNode = document.createElement('div');\n        marginDomNode.className = 'inline-added-margin-view-zone';\n        return {\n            afterLineNumber: Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber),\n            heightInLines: lineChangeModifiedLength,\n            domNode: document.createElement('div'),\n            marginDomNode: marginDomNode\n        };\n    }\n    _produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        const domNode = document.createElement('div');\n        domNode.className = `view-lines line-delete ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`;\n        const marginDomNode = document.createElement('div');\n        marginDomNode.className = 'inline-deleted-margin-view-zone';\n        const viewZone = {\n            shouldNotShrink: true,\n            afterLineNumber: (lineChange.modifiedEndLineNumber === 0 ? lineChange.modifiedStartLineNumber : lineChange.modifiedStartLineNumber - 1),\n            heightInLines: lineChangeOriginalLength,\n            minWidthInPx: 0,\n            domNode: domNode,\n            marginDomNode: marginDomNode,\n            diff: {\n                originalStartLineNumber: lineChange.originalStartLineNumber,\n                originalEndLineNumber: lineChange.originalEndLineNumber,\n                modifiedStartLineNumber: lineChange.modifiedStartLineNumber,\n                modifiedEndLineNumber: lineChange.modifiedEndLineNumber,\n                originalModel: this._originalModel,\n                viewLineCounts: null,\n            }\n        };\n        for (let lineNumber = lineChange.originalStartLineNumber; lineNumber <= lineChange.originalEndLineNumber; lineNumber++) {\n            this._lineBreaksComputer.addRequest(this._originalModel.getLineContent(lineNumber), null, null);\n        }\n        this._pendingLineChange.push(lineChange);\n        this._pendingViewZones.push(viewZone);\n        return viewZone;\n    }\n    _finalize(result) {\n        const modifiedEditorOptions = this._modifiedEditor.getOptions();\n        const tabSize = this._modifiedEditor.getModel().getOptions().tabSize;\n        const fontInfo = modifiedEditorOptions.get(47 /* EditorOption.fontInfo */);\n        const disableMonospaceOptimizations = modifiedEditorOptions.get(30 /* EditorOption.disableMonospaceOptimizations */);\n        const typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        const scrollBeyondLastColumn = modifiedEditorOptions.get(98 /* EditorOption.scrollBeyondLastColumn */);\n        const mightContainNonBasicASCII = this._originalModel.mightContainNonBasicASCII();\n        const mightContainRTL = this._originalModel.mightContainRTL();\n        const lineHeight = modifiedEditorOptions.get(63 /* EditorOption.lineHeight */);\n        const layoutInfo = modifiedEditorOptions.get(138 /* EditorOption.layoutInfo */);\n        const lineDecorationsWidth = layoutInfo.decorationsWidth;\n        const stopRenderingLineAfter = modifiedEditorOptions.get(111 /* EditorOption.stopRenderingLineAfter */);\n        const renderWhitespace = modifiedEditorOptions.get(93 /* EditorOption.renderWhitespace */);\n        const renderControlCharacters = modifiedEditorOptions.get(88 /* EditorOption.renderControlCharacters */);\n        const fontLigatures = modifiedEditorOptions.get(48 /* EditorOption.fontLigatures */);\n        const lineBreaks = this._lineBreaksComputer.finalize();\n        let lineBreakIndex = 0;\n        for (let i = 0; i < this._pendingLineChange.length; i++) {\n            const lineChange = this._pendingLineChange[i];\n            const viewZone = this._pendingViewZones[i];\n            const domNode = viewZone.domNode;\n            applyFontInfo(domNode, fontInfo);\n            const marginDomNode = viewZone.marginDomNode;\n            applyFontInfo(marginDomNode, fontInfo);\n            const decorations = [];\n            if (lineChange.charChanges) {\n                for (const charChange of lineChange.charChanges) {\n                    if (isCharChangeOrDelete(charChange)) {\n                        decorations.push(new InlineDecoration(new Range(charChange.originalStartLineNumber, charChange.originalStartColumn, charChange.originalEndLineNumber, charChange.originalEndColumn), 'char-delete', 0 /* InlineDecorationType.Regular */));\n                    }\n                }\n            }\n            const hasCharChanges = (decorations.length > 0);\n            const sb = new StringBuilder(10000);\n            let maxCharsPerLine = 0;\n            let renderedLineCount = 0;\n            let viewLineCounts = null;\n            for (let lineNumber = lineChange.originalStartLineNumber; lineNumber <= lineChange.originalEndLineNumber; lineNumber++) {\n                const lineIndex = lineNumber - lineChange.originalStartLineNumber;\n                const lineTokens = this._originalModel.tokenization.getLineTokens(lineNumber);\n                const lineContent = lineTokens.getLineContent();\n                const lineBreakData = lineBreaks[lineBreakIndex++];\n                const actualDecorations = LineDecoration.filter(decorations, lineNumber, 1, lineContent.length + 1);\n                if (lineBreakData) {\n                    let lastBreakOffset = 0;\n                    for (const breakOffset of lineBreakData.breakOffsets) {\n                        const viewLineTokens = lineTokens.sliceAndInflate(lastBreakOffset, breakOffset, 0);\n                        const viewLineContent = lineContent.substring(lastBreakOffset, breakOffset);\n                        maxCharsPerLine = Math.max(maxCharsPerLine, this._renderOriginalLine(renderedLineCount++, viewLineContent, viewLineTokens, LineDecoration.extractWrapped(actualDecorations, lastBreakOffset, breakOffset), hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode));\n                        lastBreakOffset = breakOffset;\n                    }\n                    if (!viewLineCounts) {\n                        viewLineCounts = [];\n                    }\n                    // make sure all lines before this one have an entry in `viewLineCounts`\n                    while (viewLineCounts.length < lineIndex) {\n                        viewLineCounts[viewLineCounts.length] = 1;\n                    }\n                    viewLineCounts[lineIndex] = lineBreakData.breakOffsets.length;\n                    viewZone.heightInLines += (lineBreakData.breakOffsets.length - 1);\n                    const marginDomNode2 = document.createElement('div');\n                    marginDomNode2.className = 'gutter-delete';\n                    result.original.push({\n                        afterLineNumber: lineNumber,\n                        afterColumn: 0,\n                        heightInLines: lineBreakData.breakOffsets.length - 1,\n                        domNode: createFakeLinesDiv(),\n                        marginDomNode: marginDomNode2\n                    });\n                }\n                else {\n                    maxCharsPerLine = Math.max(maxCharsPerLine, this._renderOriginalLine(renderedLineCount++, lineContent, lineTokens, actualDecorations, hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode));\n                }\n            }\n            maxCharsPerLine += scrollBeyondLastColumn;\n            const html = sb.build();\n            const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n            domNode.innerHTML = trustedhtml;\n            viewZone.minWidthInPx = (maxCharsPerLine * typicalHalfwidthCharacterWidth);\n            if (viewLineCounts) {\n                // make sure all lines have an entry in `viewLineCounts`\n                const cnt = lineChange.originalEndLineNumber - lineChange.originalStartLineNumber;\n                while (viewLineCounts.length <= cnt) {\n                    viewLineCounts[viewLineCounts.length] = 1;\n                }\n            }\n            viewZone.diff.viewLineCounts = viewLineCounts;\n        }\n        result.original.sort((a, b) => {\n            return a.afterLineNumber - b.afterLineNumber;\n        });\n    }\n    _renderOriginalLine(renderedLineCount, lineContent, lineTokens, decorations, hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode) {\n        sb.appendString('<div class=\"view-line');\n        if (!hasCharChanges) {\n            // No char changes\n            sb.appendString(' char-delete');\n        }\n        sb.appendString('\" style=\"top:');\n        sb.appendString(String(renderedLineCount * lineHeight));\n        sb.appendString('px;width:1000000px;\">');\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, mightContainNonBasicASCII);\n        const containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, mightContainRTL);\n        const output = renderViewLine(new RenderLineInput((fontInfo.isMonospace && !disableMonospaceOptimizations), fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null // Send no selections, original line cannot be selected\n        ), sb);\n        sb.appendString('</div>');\n        if (this._renderIndicators) {\n            const marginElement = document.createElement('div');\n            marginElement.className = `delete-sign ${ThemeIcon.asClassName(diffRemoveIcon)}`;\n            marginElement.setAttribute('style', `position:absolute;top:${renderedLineCount * lineHeight}px;width:${lineDecorationsWidth}px;height:${lineHeight}px;right:0;`);\n            marginDomNode.appendChild(marginElement);\n        }\n        return output.characterMapping.getHorizontalOffset(output.characterMapping.length);\n    }\n}\nfunction validateDiffWordWrap(value, defaultValue) {\n    return validateStringSetOption(value, defaultValue, ['off', 'on', 'inherit']);\n}\nfunction isChangeOrInsert(lineChange) {\n    return lineChange.modifiedEndLineNumber > 0;\n}\nfunction isChangeOrDelete(lineChange) {\n    return lineChange.originalEndLineNumber > 0;\n}\nfunction isCharChangeOrInsert(charChange) {\n    if (charChange.modifiedStartLineNumber === charChange.modifiedEndLineNumber) {\n        return charChange.modifiedEndColumn - charChange.modifiedStartColumn > 0;\n    }\n    return charChange.modifiedEndLineNumber - charChange.modifiedStartLineNumber > 0;\n}\nfunction isCharChangeOrDelete(charChange) {\n    if (charChange.originalStartLineNumber === charChange.originalEndLineNumber) {\n        return charChange.originalEndColumn - charChange.originalStartColumn > 0;\n    }\n    return charChange.originalEndLineNumber - charChange.originalStartLineNumber > 0;\n}\nfunction createFakeLinesDiv() {\n    const r = document.createElement('div');\n    r.className = 'diagonal-fill';\n    return r;\n}\nfunction createViewZoneMarginArrow() {\n    const arrow = document.createElement('div');\n    arrow.className = 'arrow-revert-change ' + ThemeIcon.asClassName(Codicon.arrowRight);\n    return dom.$('div', {}, arrow);\n}\nfunction getViewRange(model, viewModel, startLineNumber, endLineNumber) {\n    const lineCount = model.getLineCount();\n    startLineNumber = Math.min(lineCount, Math.max(1, startLineNumber));\n    endLineNumber = Math.min(lineCount, Math.max(1, endLineNumber));\n    return viewModel.coordinatesConverter.convertModelRangeToViewRange(new Range(startLineNumber, model.getLineMinColumn(startLineNumber), endLineNumber, model.getLineMaxColumn(endLineNumber)));\n}\nfunction validateDiffEditorOptions(options, defaults) {\n    return {\n        enableSplitViewResizing: validateBooleanOption(options.enableSplitViewResizing, defaults.enableSplitViewResizing),\n        renderSideBySide: validateBooleanOption(options.renderSideBySide, defaults.renderSideBySide),\n        renderMarginRevertIcon: validateBooleanOption(options.renderMarginRevertIcon, defaults.renderMarginRevertIcon),\n        maxComputationTime: clampedInt(options.maxComputationTime, defaults.maxComputationTime, 0, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n        maxFileSize: clampedInt(options.maxFileSize, defaults.maxFileSize, 0, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n        ignoreTrimWhitespace: validateBooleanOption(options.ignoreTrimWhitespace, defaults.ignoreTrimWhitespace),\n        renderIndicators: validateBooleanOption(options.renderIndicators, defaults.renderIndicators),\n        originalEditable: validateBooleanOption(options.originalEditable, defaults.originalEditable),\n        diffCodeLens: validateBooleanOption(options.diffCodeLens, defaults.diffCodeLens),\n        renderOverviewRuler: validateBooleanOption(options.renderOverviewRuler, defaults.renderOverviewRuler),\n        diffWordWrap: validateDiffWordWrap(options.diffWordWrap, defaults.diffWordWrap),\n        diffAlgorithm: validateStringSetOption(options.diffAlgorithm, defaults.diffAlgorithm, ['smart', 'experimental']),\n    };\n}\nfunction changedDiffEditorOptions(a, b) {\n    return {\n        enableSplitViewResizing: (a.enableSplitViewResizing !== b.enableSplitViewResizing),\n        renderSideBySide: (a.renderSideBySide !== b.renderSideBySide),\n        renderMarginRevertIcon: (a.renderMarginRevertIcon !== b.renderMarginRevertIcon),\n        maxComputationTime: (a.maxComputationTime !== b.maxComputationTime),\n        maxFileSize: (a.maxFileSize !== b.maxFileSize),\n        ignoreTrimWhitespace: (a.ignoreTrimWhitespace !== b.ignoreTrimWhitespace),\n        renderIndicators: (a.renderIndicators !== b.renderIndicators),\n        originalEditable: (a.originalEditable !== b.originalEditable),\n        diffCodeLens: (a.diffCodeLens !== b.diffCodeLens),\n        renderOverviewRuler: (a.renderOverviewRuler !== b.renderOverviewRuler),\n        diffWordWrap: (a.diffWordWrap !== b.diffWordWrap),\n        diffAlgorithm: (a.diffAlgorithm !== b.diffAlgorithm),\n    };\n}\nregisterThemingParticipant((theme, collector) => {\n    const diffDiagonalFillColor = theme.getColor(diffDiagonalFill);\n    collector.addRule(`\n\t.monaco-editor .diagonal-fill {\n\t\tbackground-image: linear-gradient(\n\t\t\t-45deg,\n\t\t\t${diffDiagonalFillColor} 12.5%,\n\t\t\t#0000 12.5%, #0000 50%,\n\t\t\t${diffDiagonalFillColor} 50%, ${diffDiagonalFillColor} 62.5%,\n\t\t\t#0000 62.5%, #0000 100%\n\t\t);\n\t\tbackground-size: 8px 8px;\n\t}\n\t`);\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as assert from '../../../base/common/assert.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as objects from '../../../base/common/objects.js';\nimport { Range } from '../../common/core/range.js';\nimport { AudioCue, IAudioCueService } from '../../../platform/audioCues/browser/audioCueService.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nconst defaultOptions = {\n    followsCaret: true,\n    ignoreCharChanges: true,\n    alwaysRevealFirst: true,\n    findResultLoop: true\n};\n/**\n * Create a new diff navigator for the provided diff editor.\n */\nlet DiffNavigator = class DiffNavigator extends Disposable {\n    constructor(editor, options = {}, _audioCueService, _codeEditorService, _accessibilityService) {\n        super();\n        this._audioCueService = _audioCueService;\n        this._codeEditorService = _codeEditorService;\n        this._accessibilityService = _accessibilityService;\n        this._onDidUpdate = this._register(new Emitter());\n        this._editor = editor;\n        this._options = objects.mixin(options, defaultOptions, false);\n        this.disposed = false;\n        this.nextIdx = -1;\n        this.ranges = [];\n        this.ignoreSelectionChange = false;\n        this.revealFirst = Boolean(this._options.alwaysRevealFirst);\n        // hook up to diff editor for diff, disposal, and caret move\n        this._register(this._editor.onDidDispose(() => this.dispose()));\n        this._register(this._editor.onDidUpdateDiff(() => this._onDiffUpdated()));\n        if (this._options.followsCaret) {\n            this._register(this._editor.getModifiedEditor().onDidChangeCursorPosition((e) => {\n                if (this.ignoreSelectionChange) {\n                    return;\n                }\n                this._updateAccessibilityState(e.position.lineNumber);\n                this.nextIdx = -1;\n            }));\n        }\n        if (this._options.alwaysRevealFirst) {\n            this._register(this._editor.getModifiedEditor().onDidChangeModel((e) => {\n                this.revealFirst = true;\n            }));\n        }\n        // init things\n        this._init();\n    }\n    _init() {\n        const changes = this._editor.getLineChanges();\n        if (!changes) {\n            return;\n        }\n    }\n    _onDiffUpdated() {\n        this._init();\n        this._compute(this._editor.getLineChanges());\n        if (this.revealFirst) {\n            // Only reveal first on first non-null changes\n            if (this._editor.getLineChanges() !== null) {\n                this.revealFirst = false;\n                this.nextIdx = -1;\n                this.next(1 /* ScrollType.Immediate */);\n            }\n        }\n    }\n    _compute(lineChanges) {\n        // new ranges\n        this.ranges = [];\n        if (lineChanges) {\n            // create ranges from changes\n            lineChanges.forEach((lineChange) => {\n                if (!this._options.ignoreCharChanges && lineChange.charChanges) {\n                    lineChange.charChanges.forEach((charChange) => {\n                        this.ranges.push({\n                            rhs: true,\n                            range: new Range(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn)\n                        });\n                    });\n                }\n                else {\n                    if (lineChange.modifiedEndLineNumber === 0) {\n                        // a deletion\n                        this.ranges.push({\n                            rhs: true,\n                            range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedStartLineNumber + 1, 1)\n                        });\n                    }\n                    else {\n                        // an insertion or modification\n                        this.ranges.push({\n                            rhs: true,\n                            range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber + 1, 1)\n                        });\n                    }\n                }\n            });\n        }\n        // sort\n        this.ranges.sort((left, right) => Range.compareRangesUsingStarts(left.range, right.range));\n        this._onDidUpdate.fire(this);\n    }\n    _initIdx(fwd) {\n        let found = false;\n        const position = this._editor.getPosition();\n        if (!position) {\n            this.nextIdx = 0;\n            return;\n        }\n        for (let i = 0, len = this.ranges.length; i < len && !found; i++) {\n            const range = this.ranges[i].range;\n            if (position.isBeforeOrEqual(range.getStartPosition())) {\n                this.nextIdx = i + (fwd ? 0 : -1);\n                found = true;\n            }\n        }\n        if (!found) {\n            // after the last change\n            this.nextIdx = fwd ? 0 : this.ranges.length - 1;\n        }\n        if (this.nextIdx < 0) {\n            this.nextIdx = this.ranges.length - 1;\n        }\n    }\n    _move(fwd, scrollType) {\n        assert.ok(!this.disposed, 'Illegal State - diff navigator has been disposed');\n        if (!this.canNavigate()) {\n            return;\n        }\n        if (this.nextIdx === -1) {\n            this._initIdx(fwd);\n        }\n        else if (fwd) {\n            this.nextIdx += 1;\n            if (this.nextIdx >= this.ranges.length) {\n                this.nextIdx = 0;\n            }\n        }\n        else {\n            this.nextIdx -= 1;\n            if (this.nextIdx < 0) {\n                this.nextIdx = this.ranges.length - 1;\n            }\n        }\n        const info = this.ranges[this.nextIdx];\n        this.ignoreSelectionChange = true;\n        try {\n            const pos = info.range.getStartPosition();\n            this._editor.setPosition(pos);\n            this._editor.revealRangeInCenter(info.range, scrollType);\n            this._updateAccessibilityState(pos.lineNumber, true);\n        }\n        finally {\n            this.ignoreSelectionChange = false;\n        }\n    }\n    _updateAccessibilityState(lineNumber, jumpToChange) {\n        var _a;\n        const modifiedEditor = (_a = this._editor.getModel()) === null || _a === void 0 ? void 0 : _a.modified;\n        if (!modifiedEditor) {\n            return;\n        }\n        const insertedOrModified = modifiedEditor.getLineDecorations(lineNumber).find(l => l.options.className === 'line-insert');\n        if (insertedOrModified) {\n            this._audioCueService.playAudioCue(AudioCue.diffLineModified, true);\n        }\n        else if (jumpToChange) {\n            // The modified editor does not include deleted lines, but when\n            // we are moved to the area where lines were deleted, play this cue\n            this._audioCueService.playAudioCue(AudioCue.diffLineDeleted, true);\n        }\n        else {\n            return;\n        }\n        const codeEditor = this._codeEditorService.getActiveCodeEditor();\n        if (jumpToChange && codeEditor && insertedOrModified && this._accessibilityService.isScreenReaderOptimized()) {\n            codeEditor.setSelection({ startLineNumber: lineNumber, startColumn: 0, endLineNumber: lineNumber, endColumn: Number.MAX_VALUE });\n            codeEditor.writeScreenReaderContent('diff-navigation');\n        }\n    }\n    canNavigate() {\n        return this.ranges && this.ranges.length > 0;\n    }\n    next(scrollType = 0 /* ScrollType.Smooth */) {\n        if (!this.canNavigateNext()) {\n            return;\n        }\n        this._move(true, scrollType);\n    }\n    previous(scrollType = 0 /* ScrollType.Smooth */) {\n        if (!this.canNavigatePrevious()) {\n            return;\n        }\n        this._move(false, scrollType);\n    }\n    canNavigateNext() {\n        return this.canNavigateLoop() || this.nextIdx < this.ranges.length - 1;\n    }\n    canNavigatePrevious() {\n        return this.canNavigateLoop() || this.nextIdx !== 0;\n    }\n    canNavigateLoop() {\n        return Boolean(this._options.findResultLoop);\n    }\n    dispose() {\n        super.dispose();\n        this.ranges = [];\n        this.disposed = true;\n    }\n};\nDiffNavigator = __decorate([\n    __param(2, IAudioCueService),\n    __param(3, ICodeEditorService),\n    __param(4, IAccessibilityService)\n], DiffNavigator);\nexport { DiffNavigator };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as objects from '../../../base/common/objects.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { CodeEditorWidget } from './codeEditorWidget.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\nlet EmbeddedCodeEditorWidget = class EmbeddedCodeEditorWidget extends CodeEditorWidget {\n    constructor(domElement, options, parentEditor, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService, languageConfigurationService, languageFeaturesService) {\n        super(domElement, Object.assign(Object.assign({}, parentEditor.getRawOptions()), { overflowWidgetsDomNode: parentEditor.getOverflowWidgetsDomNode() }), {}, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService, languageConfigurationService, languageFeaturesService);\n        this._parentEditor = parentEditor;\n        this._overwriteOptions = options;\n        // Overwrite parent's options\n        super.updateOptions(this._overwriteOptions);\n        this._register(parentEditor.onDidChangeConfiguration((e) => this._onParentConfigurationChanged(e)));\n    }\n    getParentEditor() {\n        return this._parentEditor;\n    }\n    _onParentConfigurationChanged(e) {\n        super.updateOptions(this._parentEditor.getRawOptions());\n        super.updateOptions(this._overwriteOptions);\n    }\n    updateOptions(newOptions) {\n        objects.mixin(this._overwriteOptions, newOptions, true);\n        super.updateOptions(this._overwriteOptions);\n    }\n};\nEmbeddedCodeEditorWidget = __decorate([\n    __param(3, IInstantiationService),\n    __param(4, ICodeEditorService),\n    __param(5, ICommandService),\n    __param(6, IContextKeyService),\n    __param(7, IThemeService),\n    __param(8, INotificationService),\n    __param(9, IAccessibilityService),\n    __param(10, ILanguageConfigurationService),\n    __param(11, ILanguageFeaturesService)\n], EmbeddedCodeEditorWidget);\nexport { EmbeddedCodeEditorWidget };\n"],"names":["RenderingContext","_RestrictedRenderingC","_inherits","_super","_createSuper","viewLayout","viewportData","viewLines","_this","_classCallCheck","call","_renderingContextBrand","undefined","_viewLines","_createClass","key","value","range","includeNewLines","this","linesVisibleRangesForRange","position","visibleRangeForPosition","RestrictedRenderingContext","_restrictedRenderingContextBrand","_viewLayout","scrollWidth","getScrollWidth","scrollHeight","getScrollHeight","visibleRange","bigNumbersDelta","vInfo","getCurrentViewport","scrollTop","top","scrollLeft","left","viewportWidth","width","viewportHeight","height","absoluteTop","lineNumber","includeViewZones","getVerticalOffsetForLineNumber","getVerticalOffsetAfterLineNumber","getDecorationsInViewport","LineVisibleRanges","outsideRenderedLine","ranges","HorizontalRange","_horizontalRangeBrand","Math","round","concat","result","Array","length","i","len","FloatHorizontalRange","_floatHorizontalRangeBrand","a","b","HorizontalPosition","originalLeft","VisibleRanges","ViewController","configuration","viewModel","userInputEvents","commandDelegate","text","pasteOnNewLine","multicursorText","mode","paste","type","replacePrevCharCnt","replaceNextCharCnt","positionDelta","compositionType","startComposition","endComposition","cut","modelSelection","CoreNavigationCommands","source","selection","viewPosition","minColumn","getLineMinColumn","column","Position","data","options","get","altKey","ctrlKey","metaKey","selectionClipboardIsOn","platform","columnSelection","middleButton","_columnSelect","mouseColumn","inSelectionMode","startedOnLineNumbers","_hasMulticursorModifier","_lastCursorLineSelect","revealType","_createCursor","_lineSelectDrag","_lineSelect","mouseDownCount","_selectAll","_lastCursorLineSelectDrag","onInjectedText","_lastCursorWordSelect","_wordSelectDrag","_wordSelect","_hasNonMulticursorModifier","shiftKey","_lastCursorMoveToSelect","_moveToSelect","moveTo","_validateViewColumn","_convertViewToModelPosition","_usualArgs","doColumnSelect","wholeLine","coordinatesConverter","convertViewPositionToModelPosition","e","emitKeyDown","emitKeyUp","emitContextMenu","emitMouseMove","emitMouseLeave","emitMouseUp","emitMouseDown","emitMouseDrag","emitMouseDrop","emitMouseDropCanceled","emitMouseWheel","_a","RenderedLinesCollection","createLine","_createLine","_set","rendLineNumberStart","lines","_lines","_rendLineNumberStart","lineIndex","Error","deleteFromLineNumber","deleteToLineNumber","getCount","startLineNumber","getStartLineNumber","endLineNumber","getEndLineNumber","deleteCnt","deleteStartIndex","deleteCount","deleteAboveCount","splice","changeFromLineNumber","changeCount","changeToLineNumber","someoneNotified","changedLineNumber","onContentChanged","insertFromLineNumber","insertToLineNumber","insertCnt","newLines","insertIndex","beforeLines","slice","afterLines","deletedLines","notifiedSomeone","rng","toLineNumber","fromLineNumber","from","max","to","min","onTokensChanged","VisibleLinesCollection","host","_host","domNode","_createDomNode","_linesCollection","createVisibleLine","createFastDomNode","document","createElement","setClassName","setPosition","setAttribute","hasChanged","flush","onLinesChanged","count","deleted","onLinesDeleted","lineDomNode","getDomNode","removeChild","onLinesInserted","scrollTopChanged","getLine","inp","_get","renderer","ViewLayerRenderer","ctx","linesLength","resCtx","render","relativeVerticalOffset","inContext","stopLineNumber","deltaTop","x","_finishRendering","_renderUntouchedLines","_insertLinesBefore","removeCnt","_removeLinesBefore","_insertLinesAfter","_removeLinesAfter","startIndex","endIndex","deltaLN","layoutLine","newLinesLen","removeCount","removeIndex","domNodeIsEmpty","newLinesHTML","wasNew","_ttPolicy","createHTML","lastChild","innerHTML","insertAdjacentHTML","currChild","line","setDomNode","previousSibling","invalidLinesHTML","wasInvalid","hugeDomNode","firstChild","parentNode","replaceChild","sb","_sb","reset","hadNewLine","renderLine","_finishRenderingNewLines","build","hadInvalidLine","_finishRenderingInvalidLines","window","trustedTypes","createPolicy","StringBuilder","ViewOverlays","_ViewPart","context","_visibleLines","_assertThisInitialized","fontInfo","_context","applyFontInfo","_dynamicOverlays","_isFocused","_getPrototypeOf","prototype","shouldRender","dispose","ViewOverlayLine","overlay","push","onConfigurationChanged","getVisibleLine","onFlushed","isFocused","onScrollChanged","onZonesChanged","toRender","filter","dynamicOverlay","prepareRender","onDidRender","_viewOverlaysRender","toggleClassName","renderLines","ViewPart","dynamicOverlays","_configuration","_lineHeight","_domNode","_renderedContent","appendString","String","setTop","setHeight","ContentViewOverlays","_ViewOverlays","_super2","_this2","layoutInfo","_contentWidth","contentWidth","scrollWidthChanged","setWidth","MarginViewOverlays","_ViewOverlays2","_super3","_this3","_contentLeft","contentLeft","scrollHeightChanged","_ViewEventHandler","addEventHandler","removeEventHandler","ViewEventHandler","PartFingerprints","target","partId","r","getAttribute","parseInt","child","stopAt","resultLen","body","nodeType","ELEMENT_NODE","read","parentElement","Uint8Array","ViewUserInputEvents","onKeyDown","onKeyUp","onContextMenu","onMouseMove","onMouseLeave","onMouseDown","onMouseUp","onMouseDrag","onMouseDrop","onMouseDropCanceled","onMouseWheel","_coordinatesConverter","_convertViewToModelMouseEvent","event","_convertViewToModelMouseTarget","convertViewToModelMouseTarget","Object","assign","convertViewRangeToModelRange","CodeEditorContributions","_Disposable","_editor","_instantiationService","_instances","_register","DisposableMap","_pending","Map","_finishedInstantiation","editor","contributions","instantiationService","_step","_iterator","_createForOfIteratorHelper","s","n","done","desc","has","id","onUnexpectedError","set","err","f","_instantiateSome","runWhenIdle","_step2","contributionsState","_iterator2","_step2$value","_slicedToArray","contribution","saveViewState","_step3","_iterator3","_step3$value","restoreViewState","_instantiateById","instantiation","_step4","contribs","_findPendingContributionsByInstantiation","_iterator4","contrib","_step5","_iterator5","delete","instance","createInstance","ctor","console","warn","Disposable","__decorate","decorators","d","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","then","apply","EDITOR_ID","ModelData","model","view","hasRealView","listenersToRemove","onBeforeDetached","CodeEditorWidget","domElement","_options","codeEditorWidgetOptions","codeEditorService","commandService","contextKeyService","themeService","notificationService","accessibilityService","languageConfigurationService","languageFeaturesService","_deliveryQueue","EventDeliveryQueue","_contributions","_onDidDispose","Emitter","onDidDispose","_onDidChangeModelContent","deliveryQueue","onDidChangeModelContent","_onDidChangeModelLanguage","onDidChangeModelLanguage","_onDidChangeModelLanguageConfiguration","onDidChangeModelLanguageConfiguration","_onDidChangeModelOptions","onDidChangeModelOptions","_onDidChangeModelDecorations","onDidChangeModelDecorations","_onDidChangeModelTokens","onDidChangeModelTokens","_onDidChangeConfiguration","onDidChangeConfiguration","_onDidChangeModel","onDidChangeModel","_onDidChangeCursorPosition","onDidChangeCursorPosition","_onDidChangeCursorSelection","onDidChangeCursorSelection","_onDidAttemptReadOnlyEdit","InteractionEmitter","onDidAttemptReadOnlyEdit","_onDidLayoutChange","onDidLayoutChange","_editorTextFocus","BooleanEventEmitter","onDidFocusEditorText","onDidChangeToTrue","onDidBlurEditorText","onDidChangeToFalse","_editorWidgetFocus","onDidFocusEditorWidget","onDidBlurEditorWidget","_onWillType","onWillType","_onDidType","onDidType","_onDidCompositionStart","onDidCompositionStart","_onDidCompositionEnd","onDidCompositionEnd","_onDidPaste","onDidPaste","_onMouseUp","_onMouseDown","_onMouseDrag","_onMouseDrop","_onMouseDropCanceled","_onDropIntoEditor","onDropIntoEditor","_onContextMenu","_onMouseMove","_onMouseLeave","_onMouseWheel","_onKeyUp","_onKeyDown","_onDidContentSizeChange","onDidContentSizeChange","_onDidScrollChange","onDidScrollChange","_onDidChangeViewZones","onDidChangeViewZones","_onDidChangeHiddenAreas","onDidChangeHiddenAreas","_actions","_bannerDomNode","_dropIntoEditorDecorations","createDecorationsCollection","willCreateCodeEditor","_domElement","_overflowWidgetsDomNode","overflowWidgetsDomNode","_id","_decorationTypeKeysToIds","_decorationTypeSubtypes","_telemetryData","telemetryData","_createConfiguration","isSimpleWidget","onDidChange","fire","_contextKeyService","createScoped","_notificationService","_codeEditorService","_commandService","_themeService","EditorContextKeysManager","EditorModeContext","createChild","ServiceCollection","IContextKeyService","_modelData","_focusTracker","CodeEditorWidgetFocusTracker","onChange","setValue","hasFocus","_contentWidgets","_overlayWidgets","isArray","EditorExtensionsRegistry","initialize","_loop","action","internalAction","InternalEditorAction","label","alias","withNullAsUndefined","precondition","invokeFunction","accessor","runEditorCommand","isDropIntoEnabled","enabled","dom","DragAndDropObserver","onDragEnter","onDragOver","getTargetAtClientPoint","clientX","clientY","showDropIndicatorAt","onDrop","_regeneratorRuntime","mark","_callee","wrap","prev","abrupt","removeDropIndicator","dataTransfer","stop","onDragLeave","onDragEnd","addCodeEditor","reason","writeScreenReaderContent","EditorConfiguration","getEditorType","editorCommon","removeCodeEditor","clear","_removeDecorationTypes","_postDetachModelCleanup","_detachModel","fn","newOptions","updateOptions","getRawOptions","WordOperations","preserveBOM","eolPreference","lineEnding","getValue","newValue","hasTextFocus","detachedModel","_attachModel","hasModel","focus","oldModelUrl","uri","newModelUrl","onAfterModelAttached","decorationType","subTypes","subType","_removeDecorationType","getVisibleRanges","getVisibleRangesPlusViewportAboveBelow","getWhitespaces","_getVerticalOffsetForPosition","_getVerticalOffsetAfterPosition","setHiddenAreas","map","Range","rawPosition","validatePosition","tabSize","getOptions","CursorColumns","getLineContent","getPosition","setSelections","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","modelRange","verticalType","revealHorizontal","scrollType","validatedModelRange","validateRange","viewRange","convertModelRangeToViewRange","revealRange","_revealLine","_sendRevealRange","_revealPosition","getSelection","getSelections","something","isSelection","Selection","isRange","_setSelectionImpl","startColumn","endColumn","sel","_revealLines","revealVerticalInCenter","_revealRange","getContentWidth","getCurrentScrollLeft","getContentHeight","getCurrentScrollTop","newScrollLeft","setScrollPosition","newScrollTop","cursorState","saveCursorState","viewState","saveState","codeEditorState","restoreCursorState","reducedState","reduceRestoreState","restoreState","values","getActions","isSupported","handlerId","payload","_startComposition","_endComposition","args","_type","_compositionType","replaceCharCnt","_paste","_cut","getAction","run","_triggerEditorCommand","_triggerCommand","executeCommand","startPosition","getStartPosition","endPosition","languageId","command","pushStackElement","popStackElement","edits","endCursorState","cursorStateComputer","executeEdits","commands","executeCommands","decorations","EditorDecorationsCollection","callback","changeDecorations","getLineDecorations","filterValidationDecorations","getDecorationsInRange","oldDecorations","newDecorations","deltaDecorations","decorationIds","changeAccessor","decorationTypeKey","oldDecorationsIds","hasOwnProperty","cssClassName","createOverviewRuler","browserEvent","delegateVerticalScrollbarPointerDown","delegateScrollFromMouseWheelEvent","dimension","observeContainer","widget","widgetData","getId","addContentWidget","widgetId","layoutContentWidget","removeContentWidget","addOverlayWidget","layoutOverlayWidget","removeOverlayWidget","change","getScrollTop","getOffsetForColumn","glyphMarginWidth","lineNumbersWidth","decorationsWidth","getScrollLeft","forceRedraw","setAriaOptions","domNodeHeight","contains","setReservedHeight","prepend","getLanguageId","setIsDominatedByLongLines","isDominatedByLongLines","setModelLineCount","getLineCount","onBeforeAttached","ViewModel","DOMLineBreaksComputerFactory","MonospaceLineBreaksComputerFactory","scheduleAtNextAnimationFrame","onWillDispose","setModel","onEvent","kind","reachedMaxCursorCount","multiCursorLimit","getOption","message","nls","prompt","Severity","query","positions","selections","e1","secondaryPositions","e2","secondarySelections","modelVersionId","oldSelections","oldModelVersionId","_this$_createView","_createView","_this$_createView2","appendChild","keys","toString","_this4","viewUserInputEvents","View","getColorTheme","removeAllDecorationsWithOwnerId","removeDomNode","removeAttribute","removeDecorationType","dropIntoEditorDecorationOptions","revealPosition","modelData","modelLineNumber","modelColumn","modelPosition","convertModelPositionToViewPosition","ModelDecorationOptions","description","className","IInstantiationService","ICodeEditorService","ICommandService","IThemeService","INotificationService","IAccessibilityService","ILanguageConfigurationService","ILanguageFeaturesService","_Disposable2","_emitterOptions","_this5","_onDidChangeToTrue","_onDidChangeToFalse","_value","_Emitter","_this6","onBeforeInteractionEvent","_Disposable3","_super4","_this7","createKey","_editorSimpleInput","EditorContextKeys","_editorFocus","_textInputFocus","_editorTabMovesFocus","_editorReadonly","_inDiffEditor","_editorColumnSelection","_hasMultipleSelections","_hasNonEmptySelection","_canUndo","_canRedo","_updateFromConfig","_updateFromSelection","_updateFromFocus","_updateFromModel","TabFocus","some","isEmpty","hasWidgetFocus","getModel","Boolean","canUndo","canRedo","_Disposable4","_super5","_languageFeaturesService","_this8","_langId","_hasCompletionItemProvider","_hasCodeActionsProvider","_hasCodeLensProvider","_hasDefinitionProvider","_hasDeclarationProvider","_hasImplementationProvider","_hasTypeDefinitionProvider","_hasHoverProvider","_hasDocumentHighlightProvider","_hasDocumentSymbolProvider","_hasReferenceProvider","_hasRenameProvider","_hasSignatureHelpProvider","_hasInlayHintsProvider","_hasDocumentFormattingProvider","_hasDocumentSelectionFormattingProvider","_hasMultipleDocumentFormattingProvider","_hasMultipleDocumentSelectionFormattingProvider","_isInWalkThrough","update","_update","completionProvider","codeActionProvider","codeLensProvider","definitionProvider","declarationProvider","implementationProvider","typeDefinitionProvider","hoverProvider","documentHighlightProvider","documentSymbolProvider","referenceProvider","renameProvider","documentFormattingEditProvider","documentRangeFormattingEditProvider","signatureHelpProvider","inlayHintsProvider","_this9","bufferChangeEvents","_this10","all","scheme","Schemas","_Disposable5","_super6","_this11","_onChange","_hasFocus","_domFocusTracker","trackFocus","onDidFocus","onDidBlur","_decorationIds","_isChangingDecorations","listener","thisArgs","disposables","_this12","index","getDecorationRange","decorationId","decoration","includes","_this13","squigglyStart","encodeURIComponent","squigglyEnd","getSquigglySVGData","color","dotdotdotStart","dotdotdotEnd","registerThemingParticipant","theme","collector","errorForeground","getColor","editorErrorForeground","addRule","warningForeground","editorWarningForeground","infoForeground","editorInfoForeground","hintForeground","editorHintForeground","unnecessaryForeground","editorUnnecessaryCodeOpacity","rgba","DiffEntry","originalLineStart","originalLineEnd","modifiedLineStart","modifiedLineEnd","Diff","entries","diffReviewInsertIcon","registerIcon","Codicon","diffReviewRemoveIcon","diffReviewCloseIcon","DiffReview","diffEditor","_languageService","_audioCueService","_width","_diffEditor","_isVisible","shadow","actionBarContainer","_actionBar","ActionBar","Action","ThemeIcon","hide","icon","_content","scrollbar","DomScrollableElement","onDidUpdateDiff","_diffs","_compute","_render","getModifiedEditor","addStandardDisposableListener","preventDefault","row","findParentWithClass","_goToRow","equals","_getNextRow","_getPrevRow","accept","_currentDiff","currentIndex","_findDiffIndex","setSelection","doLayout","jumpToLineNumber","current","_getCurrentFocusedRow","isNaN","readOnly","previousElementSibling","_getFirstRow","nextElementSibling","querySelector","activeElement","test","tabIndex","element","classList","playAudioCue","AudioCue","scanDomNode","setDisplay","lineChanges","getLineChanges","originalModel","getOriginalEditor","modifiedModel","_mergeAdjacent","pos","diff","originalOptions","modifiedOptions","originalModelOpts","modifiedModelOpts","clearNode","diffIndex","diffs","container","minOriginalLine","maxOriginalLine","minModifiedLine","maxModifiedLine","diffEntry","header","cell","originalChangedLinesCnt","modifiedChangedLinesCnt","createTextNode","getAriaLines","originalChangedLinesCntAria","modifiedChangedLinesCntAria","comment","lineHeight","modLine","_renderSection","languageIdCodec","originalLineCount","modifiedLineCount","diffsLength","lineChange","originalStart","originalStartLineNumber","originalEnd","originalEndLineNumber","modifiedStart","modifiedStartLineNumber","modifiedEnd","modifiedEndLineNumber","rLength","originalEqualAbove","modifiedEqualAbove","minOriginal","minModified","prevLineChange","fromOriginal","fromModified","delta","originalEqualBelow","modifiedEqualBelow","maxOriginal","maxModified","nextLineChange","toOriginal","toModified","curr","thisDiff","currLast","thisFirst","getType","dest","rowClassName","lineNumbersExtraClassName","spacerIcon","cnt","originalLayoutInfo","originalLineNumbersWidth","modifiedLayoutInfo","modifiedLineNumbersWidth","originalLine","modifiedLine","style","minWidth","originalLineNumber","innerText","modifiedLineNumber","paddingRight","spacer","spacerCodicon","lineContent","html","_renderLine","ariaLabel","lineTokens","LineTokens","isBasicASCII","ViewLineRenderingData","mightContainNonBasicASCII","containsRTL","mightContainRTL","renderViewLine","RenderLineInput","isMonospace","canUseHalfwidthRightwardsArrow","spaceWidth","middotWidth","wsmiddotWidth","EditorFontLigatures","ILanguageService","IAudioCueService","DiffReviewNext","_EditorAction","ContextKeyExpr","kbOpts","kbExpr","primary","weight","findFocusedDiffEditor","diffReviewNext","EditorAction","DiffReviewPrev","_EditorAction2","diffReviewPrev","diffEditors","listDiffEditors","activeCodeEditor","getActiveCodeEditor","registerEditorAction","InlineDiffMargin","_viewZoneId","_marginDomNode","_contextMenuService","_clipboardService","_visibility","zIndex","_diffActions","lineFeed","getEOL","right","visibility","actions","isDeletion","deletedText","getValueInRange","writeText","currentLineNumberOffset","copyLineAction","_callee2","eof","_context2","getEndOfLineSequence","_callee3","_column","_context3","getLineMaxColumn","showContextMenu","y","getAnchor","autoSelectFirstItem","_dom$getDomNodePagePo","getDomNodePagePosition","pad","floor","posx","detail","viewZoneId","_updateLightBulbPosition","rightButton","posy","marginDomNode","offset","lineNumberOffset","newTop","viewLineCounts","acc","WorkerBasedDocumentDiffProvider","editorWorkerService","onDidChangeEventEmitter","diffAlgorithm","diffAlgorithmOnDidChangeSubscription","setOptions","original","modified","computeDiff","sent","didChange","IEditorWorkerService","VisualEditorState","_zones","_inlineDiffMargins","_zonesMap","_decorations","allViewZones","z","changeViewZones","viewChangeAccessor","zoneId","removeZone","overviewRuler","restoreScrollState","scrollState","StableEditorScrollState","zones","viewZone","suppressMouseDown","addZone","getValueLength","restore","setZones","overviewZones","DIFF_EDITOR_ID","diffInsertIcon","diffRemoveIcon","ttPolicy","ariaNavigationTip","DiffEditorWidget","clipboardService","contextMenuService","_editorProgressService","_onDidUpdateDiff","_lastOriginalWarning","_lastModifiedWarning","willCreateDiffEditor","_documentDiffProvider","_beginUpdateDecorationsSoon","_state","_updatingDiffProgress","validateDiffEditorOptions","enableSplitViewResizing","renderSideBySide","renderMarginRevertIcon","maxComputationTime","maxFileSize","ignoreTrimWhitespace","renderIndicators","originalEditable","diffCodeLens","renderOverviewRuler","diffWordWrap","isInEmbeddedEditor","_updateDecorationsRunner","RunOnceScheduler","_updateDecorations","_containerDomElement","_getClassName","_overviewViewportDomElement","_overviewDomElement","EventType","POINTER_DOWN","_modifiedEditor","addDisposableListener","MOUSE_WHEEL","passive","_originalDomNode","_modifiedDomNode","_beginUpdateDecorationsTimeout","_currentlyChangingViewZones","_diffComputationToken","_originalEditorState","_modifiedEditorState","_isHandlingScrollEvent","_elementSizeObserver","ElementSizeObserver","_onDidContainerSizeChanged","automaticLayout","startObserving","_diffComputationResult","_originalEditor","_createLeftHandSideEditor","originalEditor","_createRightHandSideEditor","modifiedEditor","_originalOverviewRuler","_modifiedOverviewRuler","_reviewPane","_setStrategy","DiffEditorWidgetSideBySide","_createDataSource","DiffEditorWidgetInline","onDidColorThemeChange","t","_strategy","applyColors","schedule","addDiffEditor","newState","show","assert","ok","_layoutOverviewRulers","_createInnerEditor","_adjustOptionsForLeftHandSide","scrollLeftChanged","_layoutOverviewViewport","_onViewZonesChanged","cancel","isInDiffLeftEditorKey","ONE_OVERVIEW_WIDTH","contentHeight","contentHeightChanged","contentWidthChanged","_adjustOptionsForRightHandSide","isInDiffRightEditorKey","_b","changes","find","afterLineNumber","revertChange","stopPropagation","originalRange","originalContent","newRange","eol","setStartPosition","setEndPosition","insertAt","editorWidgetOptions","removeDiffEditor","clearTimeout","_cleanViewZonesAndDecorations","_newOptions","changed","beginUpdateDecorations","beginUpdateDecorationsSoon","_beginUpdateDecorations","setEnableSplitViewResizing","_disposeOverviewRulers","setScrollTop","_setState","_createOverviewRulers","getVisibleColumnFromPosition","revealLine","revealLineInCenter","revealLineInCenterIfOutsideViewport","revealLineNearTop","revealPositionInCenter","revealPositionInCenterIfOutsideViewport","revealPositionNearTop","revealLines","revealLinesInCenter","revealLinesInCenterIfOutsideViewport","revealLinesNearTop","revealRangeInCenter","revealRangeInCenterIfOutsideViewport","revealRangeNearTop","revealRangeNearTopIfOutsideViewport","revealRangeAtTop","getSupportedActions","diffEditorState","observe","trigger","_doLayout","isVisible","getHeight","reviewHeight","_getReviewHeight","freeSpace","ENTIRE_DIFF_OVERVIEW_WIDTH","getLayoutInfo","setLayout","setTimeout","UPDATE_DIFF_DECORATIONS_DELAY","currentOriginalModel","currentModifiedModel","currentToken","diffLimit","canSyncModelForDiff","bufferTextLength","maxComputationTimeMs","identical","quitEarly","m","innerChanges","endLineNumberExclusive","modifiedRange","charChanges","originalStartColumn","originalEndColumn","modifiedStartColumn","modifiedEndColumn","error","_equals","clean","foreignOriginal","getForeignViewZones","foreignModified","diffDecorations","getEditorsDiffDecorations","clonedOptions","inDiffEditor","vertical","folding","codeLens","fixedOverflowWidgets","minimap","_adjustOptionsForSubEditor","wordWrapOverride1","wordWrapOverride2","originalAriaLabel","dropIntoEditor","extraEditorClassName","modifiedAriaLabel","revealHorizontalRightPadding","EditorOptions","verticalHasArrows","getWidth","splitPoint","layout","_computeOverviewViewport","computedAvailableSize","computedRepresentableSize","computedRatio","getContainerDomNode","relayoutEditors","newStrategy","_boundarySashes","setBoundarySashes","startLineNumberExtractor","mid","midStart","midEnd","_getLineChangeAtOrBeforeLineNumber","originalEquivalentLineNumber","modifiedEquivalentLineNumber","lineChangeOriginalLength","lineChangeModifiedLength","equivalentLineNumber","_getEquivalentLineForOriginalLineNumber","_getEquivalentLineForModifiedLineNumber","getThemeTypeSelector","IClipboardService","IContextMenuService","IEditorProgressService","DiffEditorWidgetStyle","dataSource","_dataSource","_insertColor","_removeColor","newInsertColor","diffOverviewRulerInserted","diffInserted","defaultInsertColor","transparent","newRemoveColor","diffOverviewRulerRemoved","diffRemoved","defaultRemoveColor","hasChanges","originalWhitespaces","modifiedWhitespaces","sort","_getViewZones","originalDecorations","_getOriginalEditorDecorations","modifiedDecorations","_getModifiedEditorDecorations","_sashes","ForeignViewZonesIterator","_source","_index","advance","ViewZonesComputer","_lineChanges","_originalForeignVZ","_modifiedForeignVZ","originalLineHeight","modifiedLineHeight","originalHasWrapping","wrappingColumn","modifiedHasWrapping","hasWrapping","originalCoordinatesConverter","_getViewModel","modifiedCoordinatesConverter","originalEndEquivalentLineNumber","modifiedEndEquivalentLineNumber","sortMyViewZones","addAndCombineIfPossible","destination","item","lastItem","heightInLines","modifiedForeignVZ","originalForeignVZ","lastOriginalLineNumber","lastModifiedLineNumber","_getViewLineCount","stepOriginal","stepModified","originalViewLineCount","getModelLineViewLineCount","modifiedViewLineCount","viewZoneLineNumber","_createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion","isChangeOrInsert","_produceOriginalFromDiff","isChangeOrDelete","_produceModifiedFromDiff","stepOriginalIndex","stepModifiedIndex","originalDelta","modifiedDelta","shouldNotShrink","_ensureDomNodes","getViewRange","createFakeLinesDiv","createDecoration","DECORATIONS","arrowRevertChange","glyphMarginClassName","charDelete","charDeleteWholeLine","isWholeLine","charInsert","charInsertWholeLine","lineInsert","marginClassName","lineInsertWithSign","linesDecorationsClassName","lineDelete","lineDeleteWithSign","lineDeleteMargin","_DiffEditorWidgetStyl","_disableSash","_sashRatio","_sashPosition","_startSashPosition","_sash","Sash","orientation","state","onDidStart","_onSashDragStart","_onSashDrag","onDidEnd","_onSashDragEnd","onDidReset","_onSashReset","newDisableSash","sashRatio","sashPosition","midPoint","MINIMUM_EDITOR_WIDTH","currentX","startX","sash","sashes","orthogonalEndSash","bottom","SideBySideViewZonesComputer","getViewZones","overviewZoneColor","originalViewModel","OverviewRulerZone","_step6","_iterator6","charChange","isCharChangeOrDelete","getLineFirstNonWhitespaceColumn","getLineLastNonWhitespaceColumn","_step7","modifiedViewModel","_iterator7","arrow","$","createViewZoneMarginArrow","_step8","_iterator8","isCharChangeOrInsert","_ViewZonesComputer","_DiffEditorWidgetStyl2","_decorationsLeft","decorationsLeft","InlineViewZonesComputer","_step9","zoneIndex","_iterator9","zone","zoneHeightInLines","_step10","_iterator10","_step11","_iterator11","_ViewZonesComputer2","_originalModel","_renderIndicators","_pendingLineChange","_pendingViewZones","_lineBreaksComputer","createLineBreaksComputer","_finalize","MOUSE_CURSOR_TEXT_CSS_CLASS_NAME","minWidthInPx","addRequest","modifiedEditorOptions","disableMonospaceOptimizations","typicalHalfwidthCharacterWidth","scrollBeyondLastColumn","lineDecorationsWidth","stopRenderingLineAfter","renderWhitespace","renderControlCharacters","fontLigatures","lineBreaks","finalize","lineBreakIndex","_step12","_iterator12","InlineDecoration","hasCharChanges","maxCharsPerLine","renderedLineCount","tokenization","getLineTokens","lineBreakData","actualDecorations","LineDecoration","_step13","lastBreakOffset","_iterator13","breakOffsets","breakOffset","viewLineTokens","sliceAndInflate","viewLineContent","substring","_renderOriginalLine","marginDomNode2","afterColumn","trustedhtml","output","marginElement","characterMapping","getHorizontalOffset","lineCount","defaults","validateBooleanOption","clampedInt","defaultValue","validateStringSetOption","diffDiagonalFillColor","diffDiagonalFill","defaultOptions","followsCaret","ignoreCharChanges","alwaysRevealFirst","findResultLoop","DiffNavigator","_accessibilityService","_onDidUpdate","objects","disposed","nextIdx","ignoreSelectionChange","revealFirst","_onDiffUpdated","_updateAccessibilityState","_init","forEach","rhs","fwd","found","isBeforeOrEqual","canNavigate","_initIdx","info","jumpToChange","insertedOrModified","l","codeEditor","isScreenReaderOptimized","Number","MAX_VALUE","canNavigateNext","_move","canNavigatePrevious","canNavigateLoop","EmbeddedCodeEditorWidget","_CodeEditorWidget","parentEditor","_thisSuper","getOverflowWidgetsDomNode","_parentEditor","_overwriteOptions","_onParentConfigurationChanged"],"sourceRoot":""}