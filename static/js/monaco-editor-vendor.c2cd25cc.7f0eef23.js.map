{"version":3,"file":"static/js/monaco-editor-vendor.c2cd25cc.7f0eef23.js","mappings":"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","sources":["../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/glob.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/hash.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/history.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/hotReload.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/htmlContent.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/iconLabels.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/idGenerator.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/ime.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/iterator.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/keyCodes.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/keybindingLabels.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/keybindings.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/labels.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/lazy.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/lifecycle.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/linkedList.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/linkedText.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { isThenable } from './async.js';\nimport { isEqualOrParent } from './extpath.js';\nimport { LRUCache } from './map.js';\nimport { basename, extname, posix, sep } from './path.js';\nimport { isLinux } from './platform.js';\nimport { escapeRegExpCharacters, ltrim } from './strings.js';\nexport const GLOBSTAR = '**';\nexport const GLOB_SPLIT = '/';\nconst PATH_REGEX = '[/\\\\\\\\]'; // any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]'; // any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\nfunction starsToRegExp(starCount, isLastPattern) {\n    switch (starCount) {\n        case 0:\n            return '';\n        case 1:\n            return `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n        default:\n            // Matches:  (Path Sep OR Path Val followed by Path Sep) 0-many times except when it's the last pattern\n            //           in which case also matches (Path Sep followed by Path Val)\n            // Group is non capturing because we don't need to capture at all (?:...)\n            // Overall we use non-greedy matching because it could be that we match too much\n            return `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}${isLastPattern ? `|${PATH_REGEX}${NO_PATH_REGEX}+` : ''})*?`;\n    }\n}\nexport function splitGlobAware(pattern, splitChar) {\n    if (!pattern) {\n        return [];\n    }\n    const segments = [];\n    let inBraces = false;\n    let inBrackets = false;\n    let curVal = '';\n    for (const char of pattern) {\n        switch (char) {\n            case splitChar:\n                if (!inBraces && !inBrackets) {\n                    segments.push(curVal);\n                    curVal = '';\n                    continue;\n                }\n                break;\n            case '{':\n                inBraces = true;\n                break;\n            case '}':\n                inBraces = false;\n                break;\n            case '[':\n                inBrackets = true;\n                break;\n            case ']':\n                inBrackets = false;\n                break;\n        }\n        curVal += char;\n    }\n    // Tail\n    if (curVal) {\n        segments.push(curVal);\n    }\n    return segments;\n}\nfunction parseRegExp(pattern) {\n    if (!pattern) {\n        return '';\n    }\n    let regEx = '';\n    // Split up into segments for each slash found\n    const segments = splitGlobAware(pattern, GLOB_SPLIT);\n    // Special case where we only have globstars\n    if (segments.every(segment => segment === GLOBSTAR)) {\n        regEx = '.*';\n    }\n    // Build regex over segments\n    else {\n        let previousSegmentWasGlobStar = false;\n        segments.forEach((segment, index) => {\n            // Treat globstar specially\n            if (segment === GLOBSTAR) {\n                // if we have more than one globstar after another, just ignore it\n                if (previousSegmentWasGlobStar) {\n                    return;\n                }\n                regEx += starsToRegExp(2, index === segments.length - 1);\n            }\n            // Anything else, not globstar\n            else {\n                // States\n                let inBraces = false;\n                let braceVal = '';\n                let inBrackets = false;\n                let bracketVal = '';\n                for (const char of segment) {\n                    // Support brace expansion\n                    if (char !== '}' && inBraces) {\n                        braceVal += char;\n                        continue;\n                    }\n                    // Support brackets\n                    if (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n                        let res;\n                        // range operator\n                        if (char === '-') {\n                            res = char;\n                        }\n                        // negation operator (only valid on first index in bracket)\n                        else if ((char === '^' || char === '!') && !bracketVal) {\n                            res = '^';\n                        }\n                        // glob split matching is not allowed within character ranges\n                        // see http://man7.org/linux/man-pages/man7/glob.7.html\n                        else if (char === GLOB_SPLIT) {\n                            res = '';\n                        }\n                        // anything else gets escaped\n                        else {\n                            res = escapeRegExpCharacters(char);\n                        }\n                        bracketVal += res;\n                        continue;\n                    }\n                    switch (char) {\n                        case '{':\n                            inBraces = true;\n                            continue;\n                        case '[':\n                            inBrackets = true;\n                            continue;\n                        case '}': {\n                            const choices = splitGlobAware(braceVal, ',');\n                            // Converts {foo,bar} => [foo|bar]\n                            const braceRegExp = `(?:${choices.map(choice => parseRegExp(choice)).join('|')})`;\n                            regEx += braceRegExp;\n                            inBraces = false;\n                            braceVal = '';\n                            break;\n                        }\n                        case ']': {\n                            regEx += ('[' + bracketVal + ']');\n                            inBrackets = false;\n                            bracketVal = '';\n                            break;\n                        }\n                        case '?':\n                            regEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n                            continue;\n                        case '*':\n                            regEx += starsToRegExp(1);\n                            continue;\n                        default:\n                            regEx += escapeRegExpCharacters(char);\n                    }\n                }\n                // Tail: Add the slash we had split on if there is more to\n                // come and the remaining pattern is not a globstar\n                // For example if pattern: some/**/*.js we want the \"/\" after\n                // some to be included in the RegEx to prevent a folder called\n                // \"something\" to match as well.\n                if (index < segments.length - 1 && // more segments to come after this\n                    (segments[index + 1] !== GLOBSTAR || // next segment is not **, or...\n                        index + 2 < segments.length // ...next segment is ** but there is more segments after that\n                    )) {\n                    regEx += PATH_REGEX;\n                }\n            }\n            // update globstar state\n            previousSegmentWasGlobStar = (segment === GLOBSTAR);\n        });\n    }\n    return regEx;\n}\n// regexes to check for trivial glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; // **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; // **/something\nconst T3 = /^{\\*\\*\\/\\*?[\\w\\.-]+\\/?(,\\*\\*\\/\\*?[\\w\\.-]+\\/?)*}$/; // {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/\\*?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/\\*?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; // Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; // **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; // something/else\nconst CACHE = new LRUCache(10000); // bounded to 10000 elements\nconst FALSE = function () {\n    return false;\n};\nconst NULL = function () {\n    return null;\n};\nfunction parsePattern(arg1, options) {\n    if (!arg1) {\n        return NULL;\n    }\n    // Handle relative patterns\n    let pattern;\n    if (typeof arg1 !== 'string') {\n        pattern = arg1.pattern;\n    }\n    else {\n        pattern = arg1;\n    }\n    // Whitespace trimming\n    pattern = pattern.trim();\n    // Check cache\n    const patternKey = `${pattern}_${!!options.trimForExclusions}`;\n    let parsedPattern = CACHE.get(patternKey);\n    if (parsedPattern) {\n        return wrapRelativePattern(parsedPattern, arg1);\n    }\n    // Check for Trivials\n    let match;\n    if (T1.test(pattern)) {\n        parsedPattern = trivia1(pattern.substr(4), pattern); // common pattern: **/*.txt just need endsWith check\n    }\n    else if (match = T2.exec(trimForExclusions(pattern, options))) { // common pattern: **/some.txt just need basename check\n        parsedPattern = trivia2(match[1], pattern);\n    }\n    else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n        parsedPattern = trivia3(pattern, options);\n    }\n    else if (match = T4.exec(trimForExclusions(pattern, options))) { // common pattern: **/something/else just need endsWith check\n        parsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n    }\n    else if (match = T5.exec(trimForExclusions(pattern, options))) { // common pattern: something/else just need equals check\n        parsedPattern = trivia4and5(match[1], pattern, false);\n    }\n    // Otherwise convert to pattern\n    else {\n        parsedPattern = toRegExp(pattern);\n    }\n    // Cache\n    CACHE.set(patternKey, parsedPattern);\n    return wrapRelativePattern(parsedPattern, arg1);\n}\nfunction wrapRelativePattern(parsedPattern, arg2) {\n    if (typeof arg2 === 'string') {\n        return parsedPattern;\n    }\n    const wrappedPattern = function (path, basename) {\n        if (!isEqualOrParent(path, arg2.base, !isLinux)) {\n            // skip glob matching if `base` is not a parent of `path`\n            return null;\n        }\n        // Given we have checked `base` being a parent of `path`,\n        // we can now remove the `base` portion of the `path`\n        // and only match on the remaining path components\n        // For that we try to extract the portion of the `path`\n        // that comes after the `base` portion. We have to account\n        // for the fact that `base` might end in a path separator\n        // (https://github.com/microsoft/vscode/issues/162498)\n        return parsedPattern(ltrim(path.substr(arg2.base.length), sep), basename);\n    };\n    // Make sure to preserve associated metadata\n    wrappedPattern.allBasenames = parsedPattern.allBasenames;\n    wrappedPattern.allPaths = parsedPattern.allPaths;\n    wrappedPattern.basenames = parsedPattern.basenames;\n    wrappedPattern.patterns = parsedPattern.patterns;\n    return wrappedPattern;\n}\nfunction trimForExclusions(pattern, options) {\n    return options.trimForExclusions && pattern.endsWith('/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n// common pattern: **/*.txt just need endsWith check\nfunction trivia1(base, pattern) {\n    return function (path, basename) {\n        return typeof path === 'string' && path.endsWith(base) ? pattern : null;\n    };\n}\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base, pattern) {\n    const slashBase = `/${base}`;\n    const backslashBase = `\\\\${base}`;\n    const parsedPattern = function (path, basename) {\n        if (typeof path !== 'string') {\n            return null;\n        }\n        if (basename) {\n            return basename === base ? pattern : null;\n        }\n        return path === base || path.endsWith(slashBase) || path.endsWith(backslashBase) ? pattern : null;\n    };\n    const basenames = [base];\n    parsedPattern.basenames = basenames;\n    parsedPattern.patterns = [pattern];\n    parsedPattern.allBasenames = basenames;\n    return parsedPattern;\n}\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern, options) {\n    const parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1)\n        .split(',')\n        .map(pattern => parsePattern(pattern, options))\n        .filter(pattern => pattern !== NULL), pattern);\n    const patternsLength = parsedPatterns.length;\n    if (!patternsLength) {\n        return NULL;\n    }\n    if (patternsLength === 1) {\n        return parsedPatterns[0];\n    }\n    const parsedPattern = function (path, basename) {\n        for (let i = 0, n = parsedPatterns.length; i < n; i++) {\n            if (parsedPatterns[i](path, basename)) {\n                return pattern;\n            }\n        }\n        return null;\n    };\n    const withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n    if (withBasenames) {\n        parsedPattern.allBasenames = withBasenames.allBasenames;\n    }\n    const allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, []);\n    if (allPaths.length) {\n        parsedPattern.allPaths = allPaths;\n    }\n    return parsedPattern;\n}\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(targetPath, pattern, matchPathEnds) {\n    const usingPosixSep = sep === posix.sep;\n    const nativePath = usingPosixSep ? targetPath : targetPath.replace(ALL_FORWARD_SLASHES, sep);\n    const nativePathEnd = sep + nativePath;\n    const targetPathEnd = posix.sep + targetPath;\n    let parsedPattern;\n    if (matchPathEnds) {\n        parsedPattern = function (path, basename) {\n            return typeof path === 'string' && ((path === nativePath || path.endsWith(nativePathEnd)) || !usingPosixSep && (path === targetPath || path.endsWith(targetPathEnd))) ? pattern : null;\n        };\n    }\n    else {\n        parsedPattern = function (path, basename) {\n            return typeof path === 'string' && (path === nativePath || (!usingPosixSep && path === targetPath)) ? pattern : null;\n        };\n    }\n    parsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + targetPath];\n    return parsedPattern;\n}\nfunction toRegExp(pattern) {\n    try {\n        const regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n        return function (path) {\n            regExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n            return typeof path === 'string' && regExp.test(path) ? pattern : null;\n        };\n    }\n    catch (error) {\n        return NULL;\n    }\n}\nexport function match(arg1, path, hasSibling) {\n    if (!arg1 || typeof path !== 'string') {\n        return false;\n    }\n    return parse(arg1)(path, undefined, hasSibling);\n}\nexport function parse(arg1, options = {}) {\n    if (!arg1) {\n        return FALSE;\n    }\n    // Glob with String\n    if (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n        const parsedPattern = parsePattern(arg1, options);\n        if (parsedPattern === NULL) {\n            return FALSE;\n        }\n        const resultPattern = function (path, basename) {\n            return !!parsedPattern(path, basename);\n        };\n        if (parsedPattern.allBasenames) {\n            resultPattern.allBasenames = parsedPattern.allBasenames;\n        }\n        if (parsedPattern.allPaths) {\n            resultPattern.allPaths = parsedPattern.allPaths;\n        }\n        return resultPattern;\n    }\n    // Glob with Expression\n    return parsedExpression(arg1, options);\n}\nexport function isRelativePattern(obj) {\n    const rp = obj;\n    if (!rp) {\n        return false;\n    }\n    return typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\nfunction parsedExpression(expression, options) {\n    const parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n        .map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n        .filter(pattern => pattern !== NULL));\n    const patternsLength = parsedPatterns.length;\n    if (!patternsLength) {\n        return NULL;\n    }\n    if (!parsedPatterns.some(parsedPattern => !!parsedPattern.requiresSiblings)) {\n        if (patternsLength === 1) {\n            return parsedPatterns[0];\n        }\n        const resultExpression = function (path, basename) {\n            let resultPromises = undefined;\n            for (let i = 0, n = parsedPatterns.length; i < n; i++) {\n                const result = parsedPatterns[i](path, basename);\n                if (typeof result === 'string') {\n                    return result; // immediately return as soon as the first expression matches\n                }\n                // If the result is a promise, we have to keep it for\n                // later processing and await the result properly.\n                if (isThenable(result)) {\n                    if (!resultPromises) {\n                        resultPromises = [];\n                    }\n                    resultPromises.push(result);\n                }\n            }\n            // With result promises, we have to loop over each and\n            // await the result before we can return any result.\n            if (resultPromises) {\n                return (() => __awaiter(this, void 0, void 0, function* () {\n                    for (const resultPromise of resultPromises) {\n                        const result = yield resultPromise;\n                        if (typeof result === 'string') {\n                            return result;\n                        }\n                    }\n                    return null;\n                }))();\n            }\n            return null;\n        };\n        const withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n        if (withBasenames) {\n            resultExpression.allBasenames = withBasenames.allBasenames;\n        }\n        const allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, []);\n        if (allPaths.length) {\n            resultExpression.allPaths = allPaths;\n        }\n        return resultExpression;\n    }\n    const resultExpression = function (path, base, hasSibling) {\n        let name = undefined;\n        let resultPromises = undefined;\n        for (let i = 0, n = parsedPatterns.length; i < n; i++) {\n            // Pattern matches path\n            const parsedPattern = parsedPatterns[i];\n            if (parsedPattern.requiresSiblings && hasSibling) {\n                if (!base) {\n                    base = basename(path);\n                }\n                if (!name) {\n                    name = base.substr(0, base.length - extname(path).length);\n                }\n            }\n            const result = parsedPattern(path, base, name, hasSibling);\n            if (typeof result === 'string') {\n                return result; // immediately return as soon as the first expression matches\n            }\n            // If the result is a promise, we have to keep it for\n            // later processing and await the result properly.\n            if (isThenable(result)) {\n                if (!resultPromises) {\n                    resultPromises = [];\n                }\n                resultPromises.push(result);\n            }\n        }\n        // With result promises, we have to loop over each and\n        // await the result before we can return any result.\n        if (resultPromises) {\n            return (() => __awaiter(this, void 0, void 0, function* () {\n                for (const resultPromise of resultPromises) {\n                    const result = yield resultPromise;\n                    if (typeof result === 'string') {\n                        return result;\n                    }\n                }\n                return null;\n            }))();\n        }\n        return null;\n    };\n    const withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n    if (withBasenames) {\n        resultExpression.allBasenames = withBasenames.allBasenames;\n    }\n    const allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, []);\n    if (allPaths.length) {\n        resultExpression.allPaths = allPaths;\n    }\n    return resultExpression;\n}\nfunction parseExpressionPattern(pattern, value, options) {\n    if (value === false) {\n        return NULL; // pattern is disabled\n    }\n    const parsedPattern = parsePattern(pattern, options);\n    if (parsedPattern === NULL) {\n        return NULL;\n    }\n    // Expression Pattern is <boolean>\n    if (typeof value === 'boolean') {\n        return parsedPattern;\n    }\n    // Expression Pattern is <SiblingClause>\n    if (value) {\n        const when = value.when;\n        if (typeof when === 'string') {\n            const result = (path, basename, name, hasSibling) => {\n                if (!hasSibling || !parsedPattern(path, basename)) {\n                    return null;\n                }\n                const clausePattern = when.replace('$(basename)', () => name);\n                const matched = hasSibling(clausePattern);\n                return isThenable(matched) ?\n                    matched.then(match => match ? pattern : null) :\n                    matched ? pattern : null;\n            };\n            result.requiresSiblings = true;\n            return result;\n        }\n    }\n    // Expression is anything\n    return parsedPattern;\n}\nfunction aggregateBasenameMatches(parsedPatterns, result) {\n    const basenamePatterns = parsedPatterns.filter(parsedPattern => !!parsedPattern.basenames);\n    if (basenamePatterns.length < 2) {\n        return parsedPatterns;\n    }\n    const basenames = basenamePatterns.reduce((all, current) => {\n        const basenames = current.basenames;\n        return basenames ? all.concat(basenames) : all;\n    }, []);\n    let patterns;\n    if (result) {\n        patterns = [];\n        for (let i = 0, n = basenames.length; i < n; i++) {\n            patterns.push(result);\n        }\n    }\n    else {\n        patterns = basenamePatterns.reduce((all, current) => {\n            const patterns = current.patterns;\n            return patterns ? all.concat(patterns) : all;\n        }, []);\n    }\n    const aggregate = function (path, basename) {\n        if (typeof path !== 'string') {\n            return null;\n        }\n        if (!basename) {\n            let i;\n            for (i = path.length; i > 0; i--) {\n                const ch = path.charCodeAt(i - 1);\n                if (ch === 47 /* CharCode.Slash */ || ch === 92 /* CharCode.Backslash */) {\n                    break;\n                }\n            }\n            basename = path.substr(i);\n        }\n        const index = basenames.indexOf(basename);\n        return index !== -1 ? patterns[index] : null;\n    };\n    aggregate.basenames = basenames;\n    aggregate.patterns = patterns;\n    aggregate.allBasenames = basenames;\n    const aggregatedPatterns = parsedPatterns.filter(parsedPattern => !parsedPattern.basenames);\n    aggregatedPatterns.push(aggregate);\n    return aggregatedPatterns;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\n/**\n * Return a hash value for an object.\n */\nexport function hash(obj) {\n    return doHash(obj, 0);\n}\nexport function doHash(obj, hashVal) {\n    switch (typeof obj) {\n        case 'object':\n            if (obj === null) {\n                return numberHash(349, hashVal);\n            }\n            else if (Array.isArray(obj)) {\n                return arrayHash(obj, hashVal);\n            }\n            return objectHash(obj, hashVal);\n        case 'string':\n            return stringHash(obj, hashVal);\n        case 'boolean':\n            return booleanHash(obj, hashVal);\n        case 'number':\n            return numberHash(obj, hashVal);\n        case 'undefined':\n            return numberHash(937, hashVal);\n        default:\n            return numberHash(617, hashVal);\n    }\n}\nexport function numberHash(val, initialHashVal) {\n    return (((initialHashVal << 5) - initialHashVal) + val) | 0; // hashVal * 31 + ch, keep as int32\n}\nfunction booleanHash(b, initialHashVal) {\n    return numberHash(b ? 433 : 863, initialHashVal);\n}\nexport function stringHash(s, hashVal) {\n    hashVal = numberHash(149417, hashVal);\n    for (let i = 0, length = s.length; i < length; i++) {\n        hashVal = numberHash(s.charCodeAt(i), hashVal);\n    }\n    return hashVal;\n}\nfunction arrayHash(arr, initialHashVal) {\n    initialHashVal = numberHash(104579, initialHashVal);\n    return arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\nfunction objectHash(obj, initialHashVal) {\n    initialHashVal = numberHash(181387, initialHashVal);\n    return Object.keys(obj).sort().reduce((hashVal, key) => {\n        hashVal = stringHash(key, hashVal);\n        return doHash(obj[key], hashVal);\n    }, initialHashVal);\n}\nfunction leftRotate(value, bits, totalBits = 32) {\n    // delta + bits = totalBits\n    const delta = totalBits - bits;\n    // All ones, expect `delta` zeros aligned to the right\n    const mask = ~((1 << delta) - 1);\n    // Join (value left-shifted `bits` bits) with (masked value right-shifted `delta` bits)\n    return ((value << bits) | ((mask & value) >>> delta)) >>> 0;\n}\nfunction fill(dest, index = 0, count = dest.byteLength, value = 0) {\n    for (let i = 0; i < count; i++) {\n        dest[index + i] = value;\n    }\n}\nfunction leftPad(value, length, char = '0') {\n    while (value.length < length) {\n        value = char + value;\n    }\n    return value;\n}\nexport function toHexString(bufferOrValue, bitsize = 32) {\n    if (bufferOrValue instanceof ArrayBuffer) {\n        return Array.from(new Uint8Array(bufferOrValue)).map(b => b.toString(16).padStart(2, '0')).join('');\n    }\n    return leftPad((bufferOrValue >>> 0).toString(16), bitsize / 4);\n}\n/**\n * A SHA1 implementation that works with strings and does not allocate.\n */\nexport class StringSHA1 {\n    constructor() {\n        this._h0 = 0x67452301;\n        this._h1 = 0xEFCDAB89;\n        this._h2 = 0x98BADCFE;\n        this._h3 = 0x10325476;\n        this._h4 = 0xC3D2E1F0;\n        this._buff = new Uint8Array(64 /* SHA1Constant.BLOCK_SIZE */ + 3 /* to fit any utf-8 */);\n        this._buffDV = new DataView(this._buff.buffer);\n        this._buffLen = 0;\n        this._totalLen = 0;\n        this._leftoverHighSurrogate = 0;\n        this._finished = false;\n    }\n    update(str) {\n        const strLen = str.length;\n        if (strLen === 0) {\n            return;\n        }\n        const buff = this._buff;\n        let buffLen = this._buffLen;\n        let leftoverHighSurrogate = this._leftoverHighSurrogate;\n        let charCode;\n        let offset;\n        if (leftoverHighSurrogate !== 0) {\n            charCode = leftoverHighSurrogate;\n            offset = -1;\n            leftoverHighSurrogate = 0;\n        }\n        else {\n            charCode = str.charCodeAt(0);\n            offset = 0;\n        }\n        while (true) {\n            let codePoint = charCode;\n            if (strings.isHighSurrogate(charCode)) {\n                if (offset + 1 < strLen) {\n                    const nextCharCode = str.charCodeAt(offset + 1);\n                    if (strings.isLowSurrogate(nextCharCode)) {\n                        offset++;\n                        codePoint = strings.computeCodePoint(charCode, nextCharCode);\n                    }\n                    else {\n                        // illegal => unicode replacement character\n                        codePoint = 65533 /* SHA1Constant.UNICODE_REPLACEMENT */;\n                    }\n                }\n                else {\n                    // last character is a surrogate pair\n                    leftoverHighSurrogate = charCode;\n                    break;\n                }\n            }\n            else if (strings.isLowSurrogate(charCode)) {\n                // illegal => unicode replacement character\n                codePoint = 65533 /* SHA1Constant.UNICODE_REPLACEMENT */;\n            }\n            buffLen = this._push(buff, buffLen, codePoint);\n            offset++;\n            if (offset < strLen) {\n                charCode = str.charCodeAt(offset);\n            }\n            else {\n                break;\n            }\n        }\n        this._buffLen = buffLen;\n        this._leftoverHighSurrogate = leftoverHighSurrogate;\n    }\n    _push(buff, buffLen, codePoint) {\n        if (codePoint < 0x0080) {\n            buff[buffLen++] = codePoint;\n        }\n        else if (codePoint < 0x0800) {\n            buff[buffLen++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else if (codePoint < 0x10000) {\n            buff[buffLen++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else {\n            buff[buffLen++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        if (buffLen >= 64 /* SHA1Constant.BLOCK_SIZE */) {\n            this._step();\n            buffLen -= 64 /* SHA1Constant.BLOCK_SIZE */;\n            this._totalLen += 64 /* SHA1Constant.BLOCK_SIZE */;\n            // take last 3 in case of UTF8 overflow\n            buff[0] = buff[64 /* SHA1Constant.BLOCK_SIZE */ + 0];\n            buff[1] = buff[64 /* SHA1Constant.BLOCK_SIZE */ + 1];\n            buff[2] = buff[64 /* SHA1Constant.BLOCK_SIZE */ + 2];\n        }\n        return buffLen;\n    }\n    digest() {\n        if (!this._finished) {\n            this._finished = true;\n            if (this._leftoverHighSurrogate) {\n                // illegal => unicode replacement character\n                this._leftoverHighSurrogate = 0;\n                this._buffLen = this._push(this._buff, this._buffLen, 65533 /* SHA1Constant.UNICODE_REPLACEMENT */);\n            }\n            this._totalLen += this._buffLen;\n            this._wrapUp();\n        }\n        return toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n    }\n    _wrapUp() {\n        this._buff[this._buffLen++] = 0x80;\n        fill(this._buff, this._buffLen);\n        if (this._buffLen > 56) {\n            this._step();\n            fill(this._buff);\n        }\n        // this will fit because the mantissa can cover up to 52 bits\n        const ml = 8 * this._totalLen;\n        this._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n        this._buffDV.setUint32(60, ml % 4294967296, false);\n        this._step();\n    }\n    _step() {\n        const bigBlock32 = StringSHA1._bigBlock32;\n        const data = this._buffDV;\n        for (let j = 0; j < 64 /* 16*4 */; j += 4) {\n            bigBlock32.setUint32(j, data.getUint32(j, false), false);\n        }\n        for (let j = 64; j < 320 /* 80*4 */; j += 4) {\n            bigBlock32.setUint32(j, leftRotate((bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false)), 1), false);\n        }\n        let a = this._h0;\n        let b = this._h1;\n        let c = this._h2;\n        let d = this._h3;\n        let e = this._h4;\n        let f, k;\n        let temp;\n        for (let j = 0; j < 80; j++) {\n            if (j < 20) {\n                f = (b & c) | ((~b) & d);\n                k = 0x5A827999;\n            }\n            else if (j < 40) {\n                f = b ^ c ^ d;\n                k = 0x6ED9EBA1;\n            }\n            else if (j < 60) {\n                f = (b & c) | (b & d) | (c & d);\n                k = 0x8F1BBCDC;\n            }\n            else {\n                f = b ^ c ^ d;\n                k = 0xCA62C1D6;\n            }\n            temp = (leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false)) & 0xffffffff;\n            e = d;\n            d = c;\n            c = leftRotate(b, 30);\n            b = a;\n            a = temp;\n        }\n        this._h0 = (this._h0 + a) & 0xffffffff;\n        this._h1 = (this._h1 + b) & 0xffffffff;\n        this._h2 = (this._h2 + c) & 0xffffffff;\n        this._h3 = (this._h3 + d) & 0xffffffff;\n        this._h4 = (this._h4 + e) & 0xffffffff;\n    }\n}\nStringSHA1._bigBlock32 = new DataView(new ArrayBuffer(320)); // 80 * 4 = 320\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ArrayNavigator } from './navigator.js';\nexport class HistoryNavigator {\n    constructor(history = [], limit = 10) {\n        this._initialize(history);\n        this._limit = limit;\n        this._onChange();\n    }\n    getHistory() {\n        return this._elements;\n    }\n    add(t) {\n        this._history.delete(t);\n        this._history.add(t);\n        this._onChange();\n    }\n    next() {\n        // This will navigate past the end of the last element, and in that case the input should be cleared\n        return this._navigator.next();\n    }\n    previous() {\n        if (this._currentPosition() !== 0) {\n            return this._navigator.previous();\n        }\n        return null;\n    }\n    current() {\n        return this._navigator.current();\n    }\n    first() {\n        return this._navigator.first();\n    }\n    last() {\n        return this._navigator.last();\n    }\n    isLast() {\n        return this._currentPosition() >= this._elements.length - 1;\n    }\n    isNowhere() {\n        return this._navigator.current() === null;\n    }\n    has(t) {\n        return this._history.has(t);\n    }\n    _onChange() {\n        this._reduceToLimit();\n        const elements = this._elements;\n        this._navigator = new ArrayNavigator(elements, 0, elements.length, elements.length);\n    }\n    _reduceToLimit() {\n        const data = this._elements;\n        if (data.length > this._limit) {\n            this._initialize(data.slice(data.length - this._limit));\n        }\n    }\n    _currentPosition() {\n        const currentElement = this._navigator.current();\n        if (!currentElement) {\n            return -1;\n        }\n        return this._elements.indexOf(currentElement);\n    }\n    _initialize(history) {\n        this._history = new Set();\n        for (const entry of history) {\n            this._history.add(entry);\n        }\n    }\n    get _elements() {\n        const elements = [];\n        this._history.forEach(e => elements.push(e));\n        return elements;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { env } from './process.js';\nexport function isHotReloadEnabled() {\n    return !!env['VSCODE_DEV'];\n}\nexport function registerHotReloadHandler(handler) {\n    if (!isHotReloadEnabled()) {\n        return { dispose() { } };\n    }\n    else {\n        const handlers = registerGlobalHotReloadHandler();\n        handlers.add(handler);\n        return {\n            dispose() { handlers.delete(handler); }\n        };\n    }\n}\nfunction registerGlobalHotReloadHandler() {\n    if (!hotReloadHandlers) {\n        hotReloadHandlers = new Set();\n    }\n    const g = globalThis;\n    if (!g.$hotReload_applyNewExports) {\n        g.$hotReload_applyNewExports = oldExports => {\n            for (const h of hotReloadHandlers) {\n                const result = h(oldExports);\n                if (result) {\n                    return result;\n                }\n            }\n            return undefined;\n        };\n    }\n    return hotReloadHandlers;\n}\nlet hotReloadHandlers = undefined;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from './errors.js';\nimport { escapeIcons } from './iconLabels.js';\nimport { isEqual } from './resources.js';\nimport { escapeRegExpCharacters } from './strings.js';\nimport { URI } from './uri.js';\nexport class MarkdownString {\n    constructor(value = '', isTrustedOrOptions = false) {\n        var _a, _b, _c;\n        this.value = value;\n        if (typeof this.value !== 'string') {\n            throw illegalArgument('value');\n        }\n        if (typeof isTrustedOrOptions === 'boolean') {\n            this.isTrusted = isTrustedOrOptions;\n            this.supportThemeIcons = false;\n            this.supportHtml = false;\n        }\n        else {\n            this.isTrusted = (_a = isTrustedOrOptions.isTrusted) !== null && _a !== void 0 ? _a : undefined;\n            this.supportThemeIcons = (_b = isTrustedOrOptions.supportThemeIcons) !== null && _b !== void 0 ? _b : false;\n            this.supportHtml = (_c = isTrustedOrOptions.supportHtml) !== null && _c !== void 0 ? _c : false;\n        }\n    }\n    appendText(value, newlineStyle = 0 /* MarkdownStringTextNewlineStyle.Paragraph */) {\n        this.value += escapeMarkdownSyntaxTokens(this.supportThemeIcons ? escapeIcons(value) : value)\n            .replace(/([ \\t]+)/g, (_match, g1) => '&nbsp;'.repeat(g1.length)) // CodeQL [SM02383] The Markdown is fully sanitized after being rendered.\n            .replace(/\\>/gm, '\\\\>') // CodeQL [SM02383] The Markdown is fully sanitized after being rendered.\n            .replace(/\\n/g, newlineStyle === 1 /* MarkdownStringTextNewlineStyle.Break */ ? '\\\\\\n' : '\\n\\n'); // CodeQL [SM02383] The Markdown is fully sanitized after being rendered.\n        return this;\n    }\n    appendMarkdown(value) {\n        this.value += value;\n        return this;\n    }\n    appendCodeblock(langId, code) {\n        this.value += '\\n```';\n        this.value += langId;\n        this.value += '\\n';\n        this.value += code;\n        this.value += '\\n```\\n';\n        return this;\n    }\n    appendLink(target, label, title) {\n        this.value += '[';\n        this.value += this._escape(label, ']');\n        this.value += '](';\n        this.value += this._escape(String(target), ')');\n        if (title) {\n            this.value += ` \"${this._escape(this._escape(title, '\"'), ')')}\"`;\n        }\n        this.value += ')';\n        return this;\n    }\n    _escape(value, ch) {\n        const r = new RegExp(escapeRegExpCharacters(ch), 'g');\n        return value.replace(r, (match, offset) => {\n            if (value.charAt(offset - 1) !== '\\\\') {\n                return `\\\\${match}`;\n            }\n            else {\n                return match;\n            }\n        });\n    }\n}\nexport function isEmptyMarkdownString(oneOrMany) {\n    if (isMarkdownString(oneOrMany)) {\n        return !oneOrMany.value;\n    }\n    else if (Array.isArray(oneOrMany)) {\n        return oneOrMany.every(isEmptyMarkdownString);\n    }\n    else {\n        return true;\n    }\n}\nexport function isMarkdownString(thing) {\n    if (thing instanceof MarkdownString) {\n        return true;\n    }\n    else if (thing && typeof thing === 'object') {\n        return typeof thing.value === 'string'\n            && (typeof thing.isTrusted === 'boolean' || typeof thing.isTrusted === 'object' || thing.isTrusted === undefined)\n            && (typeof thing.supportThemeIcons === 'boolean' || thing.supportThemeIcons === undefined);\n    }\n    return false;\n}\nexport function markdownStringEqual(a, b) {\n    if (a === b) {\n        return true;\n    }\n    else if (!a || !b) {\n        return false;\n    }\n    else {\n        return a.value === b.value\n            && a.isTrusted === b.isTrusted\n            && a.supportThemeIcons === b.supportThemeIcons\n            && a.supportHtml === b.supportHtml\n            && (a.baseUri === b.baseUri || !!a.baseUri && !!b.baseUri && isEqual(URI.from(a.baseUri), URI.from(b.baseUri)));\n    }\n}\nexport function escapeMarkdownSyntaxTokens(text) {\n    // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    return text.replace(/[\\\\`*_{}[\\]()#+\\-!~]/g, '\\\\$&'); // CodeQL [SM02383] Backslash is escaped in the character class\n}\nexport function escapeDoubleQuotes(input) {\n    return input.replace(/\"/g, '&quot;');\n}\nexport function removeMarkdownEscapes(text) {\n    if (!text) {\n        return text;\n    }\n    return text.replace(/\\\\([\\\\`*_{}[\\]()#+\\-.!~])/g, '$1');\n}\nexport function parseHrefAndDimensions(href) {\n    const dimensions = [];\n    const splitted = href.split('|').map(s => s.trim());\n    href = splitted[0];\n    const parameters = splitted[1];\n    if (parameters) {\n        const heightFromParams = /height=(\\d+)/.exec(parameters);\n        const widthFromParams = /width=(\\d+)/.exec(parameters);\n        const height = heightFromParams ? heightFromParams[1] : '';\n        const width = widthFromParams ? widthFromParams[1] : '';\n        const widthIsFinite = isFinite(parseInt(width));\n        const heightIsFinite = isFinite(parseInt(height));\n        if (widthIsFinite) {\n            dimensions.push(`width=\"${width}\"`);\n        }\n        if (heightIsFinite) {\n            dimensions.push(`height=\"${height}\"`);\n        }\n    }\n    return { href, dimensions };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { matchesFuzzy } from './filters.js';\nimport { ltrim } from './strings.js';\nimport { ThemeIcon } from './themables.js';\nconst iconStartMarker = '$(';\nconst iconsRegex = new RegExp(`\\\\$\\\\(${ThemeIcon.iconNameExpression}(?:${ThemeIcon.iconModifierExpression})?\\\\)`, 'g'); // no capturing groups\nconst escapeIconsRegex = new RegExp(`(\\\\\\\\)?${iconsRegex.source}`, 'g');\nexport function escapeIcons(text) {\n    return text.replace(escapeIconsRegex, (match, escaped) => escaped ? match : `\\\\${match}`);\n}\nconst markdownEscapedIconsRegex = new RegExp(`\\\\\\\\${iconsRegex.source}`, 'g');\nexport function markdownEscapeEscapedIcons(text) {\n    // Need to add an extra \\ for escaping in markdown\n    return text.replace(markdownEscapedIconsRegex, match => `\\\\${match}`);\n}\nconst stripIconsRegex = new RegExp(`(\\\\s)?(\\\\\\\\)?${iconsRegex.source}(\\\\s)?`, 'g');\n/**\n * Takes a label with icons (`$(iconId)xyz`)  and strips the icons out (`xyz`)\n */\nexport function stripIcons(text) {\n    if (text.indexOf(iconStartMarker) === -1) {\n        return text;\n    }\n    return text.replace(stripIconsRegex, (match, preWhitespace, escaped, postWhitespace) => escaped ? match : preWhitespace || postWhitespace || '');\n}\n/**\n * Takes a label with icons (`$(iconId)xyz`), removes the icon syntax adds whitespace so that screen readers can read the text better.\n */\nexport function getCodiconAriaLabel(text) {\n    if (!text) {\n        return '';\n    }\n    return text.replace(/\\$\\((.*?)\\)/g, (_match, codiconName) => ` ${codiconName} `).trim();\n}\nconst _parseIconsRegex = new RegExp(`\\\\$\\\\(${ThemeIcon.iconNameCharacter}+\\\\)`, 'g');\n/**\n * Takes a label with icons (`abc $(iconId)xyz`) and returns the text (`abc xyz`) and the offsets of the icons (`[3]`)\n */\nexport function parseLabelWithIcons(input) {\n    _parseIconsRegex.lastIndex = 0;\n    let text = '';\n    const iconOffsets = [];\n    let iconsOffset = 0;\n    while (true) {\n        const pos = _parseIconsRegex.lastIndex;\n        const match = _parseIconsRegex.exec(input);\n        const chars = input.substring(pos, match === null || match === void 0 ? void 0 : match.index);\n        if (chars.length > 0) {\n            text += chars;\n            for (let i = 0; i < chars.length; i++) {\n                iconOffsets.push(iconsOffset);\n            }\n        }\n        if (!match) {\n            break;\n        }\n        iconsOffset += match[0].length;\n    }\n    return { text, iconOffsets };\n}\nexport function matchesFuzzyIconAware(query, target, enableSeparateSubstringMatching = false) {\n    const { text, iconOffsets } = target;\n    // Return early if there are no icon markers in the word to match against\n    if (!iconOffsets || iconOffsets.length === 0) {\n        return matchesFuzzy(query, text, enableSeparateSubstringMatching);\n    }\n    // Trim the word to match against because it could have leading\n    // whitespace now if the word started with an icon\n    const wordToMatchAgainstWithoutIconsTrimmed = ltrim(text, ' ');\n    const leadingWhitespaceOffset = text.length - wordToMatchAgainstWithoutIconsTrimmed.length;\n    // match on value without icon\n    const matches = matchesFuzzy(query, wordToMatchAgainstWithoutIconsTrimmed, enableSeparateSubstringMatching);\n    // Map matches back to offsets with icon and trimming\n    if (matches) {\n        for (const match of matches) {\n            const iconOffset = iconOffsets[match.start + leadingWhitespaceOffset] /* icon offsets at index */ + leadingWhitespaceOffset /* overall leading whitespace offset */;\n            match.start += iconOffset;\n            match.end += iconOffset;\n        }\n    }\n    return matches;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class IdGenerator {\n    constructor(prefix) {\n        this._prefix = prefix;\n        this._lastId = 0;\n    }\n    nextId() {\n        return this._prefix + (++this._lastId);\n    }\n}\nexport const defaultGenerator = new IdGenerator('id#');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from './event.js';\nexport class IMEImpl {\n    constructor() {\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._enabled = true;\n    }\n    get enabled() {\n        return this._enabled;\n    }\n    /**\n     * Enable IME\n     */\n    enable() {\n        this._enabled = true;\n        this._onDidChange.fire();\n    }\n    /**\n     * Disable IME\n     */\n    disable() {\n        this._enabled = false;\n        this._onDidChange.fire();\n    }\n}\nexport const IME = new IMEImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var Iterable;\n(function (Iterable) {\n    function is(thing) {\n        return thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n    }\n    Iterable.is = is;\n    const _empty = Object.freeze([]);\n    function empty() {\n        return _empty;\n    }\n    Iterable.empty = empty;\n    function* single(element) {\n        yield element;\n    }\n    Iterable.single = single;\n    function wrap(iterableOrElement) {\n        if (is(iterableOrElement)) {\n            return iterableOrElement;\n        }\n        else {\n            return single(iterableOrElement);\n        }\n    }\n    Iterable.wrap = wrap;\n    function from(iterable) {\n        return iterable || _empty;\n    }\n    Iterable.from = from;\n    function* reverse(array) {\n        for (let i = array.length - 1; i >= 0; i--) {\n            yield array[i];\n        }\n    }\n    Iterable.reverse = reverse;\n    function isEmpty(iterable) {\n        return !iterable || iterable[Symbol.iterator]().next().done === true;\n    }\n    Iterable.isEmpty = isEmpty;\n    function first(iterable) {\n        return iterable[Symbol.iterator]().next().value;\n    }\n    Iterable.first = first;\n    function some(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    Iterable.some = some;\n    function find(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return undefined;\n    }\n    Iterable.find = find;\n    function* filter(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                yield element;\n            }\n        }\n    }\n    Iterable.filter = filter;\n    function* map(iterable, fn) {\n        let index = 0;\n        for (const element of iterable) {\n            yield fn(element, index++);\n        }\n    }\n    Iterable.map = map;\n    function* concat(...iterables) {\n        for (const iterable of iterables) {\n            for (const element of iterable) {\n                yield element;\n            }\n        }\n    }\n    Iterable.concat = concat;\n    function reduce(iterable, reducer, initialValue) {\n        let value = initialValue;\n        for (const element of iterable) {\n            value = reducer(value, element);\n        }\n        return value;\n    }\n    Iterable.reduce = reduce;\n    /**\n     * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\n     */\n    function* slice(arr, from, to = arr.length) {\n        if (from < 0) {\n            from += arr.length;\n        }\n        if (to < 0) {\n            to += arr.length;\n        }\n        else if (to > arr.length) {\n            to = arr.length;\n        }\n        for (; from < to; from++) {\n            yield arr[from];\n        }\n    }\n    Iterable.slice = slice;\n    /**\n     * Consumes `atMost` elements from iterable and returns the consumed elements,\n     * and an iterable for the rest of the elements.\n     */\n    function consume(iterable, atMost = Number.POSITIVE_INFINITY) {\n        const consumed = [];\n        if (atMost === 0) {\n            return [consumed, iterable];\n        }\n        const iterator = iterable[Symbol.iterator]();\n        for (let i = 0; i < atMost; i++) {\n            const next = iterator.next();\n            if (next.done) {\n                return [consumed, Iterable.empty()];\n            }\n            consumed.push(next.value);\n        }\n        return [consumed, { [Symbol.iterator]() { return iterator; } }];\n    }\n    Iterable.consume = consume;\n})(Iterable || (Iterable = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass KeyCodeStrMap {\n    constructor() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    define(keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    }\n    keyCodeToStr(keyCode) {\n        return this._keyCodeToStr[keyCode];\n    }\n    strToKeyCode(str) {\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* KeyCode.Unknown */;\n    }\n}\nconst uiMap = new KeyCodeStrMap();\nconst userSettingsUSMap = new KeyCodeStrMap();\nconst userSettingsGeneralMap = new KeyCodeStrMap();\nexport const EVENT_KEY_CODE_MAP = new Array(230);\nexport const NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE = {};\nconst scanCodeIntToStr = [];\nconst scanCodeStrToInt = Object.create(null);\nconst scanCodeLowerCaseStrToInt = Object.create(null);\n/**\n * -1 if a ScanCode => KeyCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_CODE_TO_KEY_CODE = [];\n/**\n * -1 if a KeyCode => ScanCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_KEY_CODE_TO_CODE = [];\nfor (let i = 0; i <= 193 /* ScanCode.MAX_VALUE */; i++) {\n    IMMUTABLE_CODE_TO_KEY_CODE[i] = -1 /* KeyCode.DependsOnKbLayout */;\n}\nfor (let i = 0; i <= 132 /* KeyCode.MAX_VALUE */; i++) {\n    IMMUTABLE_KEY_CODE_TO_CODE[i] = -1 /* ScanCode.DependsOnKbLayout */;\n}\n(function () {\n    // See https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n    // See https://github.com/microsoft/node-native-keymap/blob/88c0b0e5/deps/chromium/keyboard_codes_win.h\n    const empty = '';\n    const mappings = [\n        // immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel\n        [1, 0 /* ScanCode.None */, 'None', 0 /* KeyCode.Unknown */, 'unknown', 0, 'VK_UNKNOWN', empty, empty],\n        [1, 1 /* ScanCode.Hyper */, 'Hyper', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 2 /* ScanCode.Super */, 'Super', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 3 /* ScanCode.Fn */, 'Fn', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 4 /* ScanCode.FnLock */, 'FnLock', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 5 /* ScanCode.Suspend */, 'Suspend', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 6 /* ScanCode.Resume */, 'Resume', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 7 /* ScanCode.Turbo */, 'Turbo', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 8 /* ScanCode.Sleep */, 'Sleep', 0 /* KeyCode.Unknown */, empty, 0, 'VK_SLEEP', empty, empty],\n        [1, 9 /* ScanCode.WakeUp */, 'WakeUp', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 10 /* ScanCode.KeyA */, 'KeyA', 31 /* KeyCode.KeyA */, 'A', 65, 'VK_A', empty, empty],\n        [0, 11 /* ScanCode.KeyB */, 'KeyB', 32 /* KeyCode.KeyB */, 'B', 66, 'VK_B', empty, empty],\n        [0, 12 /* ScanCode.KeyC */, 'KeyC', 33 /* KeyCode.KeyC */, 'C', 67, 'VK_C', empty, empty],\n        [0, 13 /* ScanCode.KeyD */, 'KeyD', 34 /* KeyCode.KeyD */, 'D', 68, 'VK_D', empty, empty],\n        [0, 14 /* ScanCode.KeyE */, 'KeyE', 35 /* KeyCode.KeyE */, 'E', 69, 'VK_E', empty, empty],\n        [0, 15 /* ScanCode.KeyF */, 'KeyF', 36 /* KeyCode.KeyF */, 'F', 70, 'VK_F', empty, empty],\n        [0, 16 /* ScanCode.KeyG */, 'KeyG', 37 /* KeyCode.KeyG */, 'G', 71, 'VK_G', empty, empty],\n        [0, 17 /* ScanCode.KeyH */, 'KeyH', 38 /* KeyCode.KeyH */, 'H', 72, 'VK_H', empty, empty],\n        [0, 18 /* ScanCode.KeyI */, 'KeyI', 39 /* KeyCode.KeyI */, 'I', 73, 'VK_I', empty, empty],\n        [0, 19 /* ScanCode.KeyJ */, 'KeyJ', 40 /* KeyCode.KeyJ */, 'J', 74, 'VK_J', empty, empty],\n        [0, 20 /* ScanCode.KeyK */, 'KeyK', 41 /* KeyCode.KeyK */, 'K', 75, 'VK_K', empty, empty],\n        [0, 21 /* ScanCode.KeyL */, 'KeyL', 42 /* KeyCode.KeyL */, 'L', 76, 'VK_L', empty, empty],\n        [0, 22 /* ScanCode.KeyM */, 'KeyM', 43 /* KeyCode.KeyM */, 'M', 77, 'VK_M', empty, empty],\n        [0, 23 /* ScanCode.KeyN */, 'KeyN', 44 /* KeyCode.KeyN */, 'N', 78, 'VK_N', empty, empty],\n        [0, 24 /* ScanCode.KeyO */, 'KeyO', 45 /* KeyCode.KeyO */, 'O', 79, 'VK_O', empty, empty],\n        [0, 25 /* ScanCode.KeyP */, 'KeyP', 46 /* KeyCode.KeyP */, 'P', 80, 'VK_P', empty, empty],\n        [0, 26 /* ScanCode.KeyQ */, 'KeyQ', 47 /* KeyCode.KeyQ */, 'Q', 81, 'VK_Q', empty, empty],\n        [0, 27 /* ScanCode.KeyR */, 'KeyR', 48 /* KeyCode.KeyR */, 'R', 82, 'VK_R', empty, empty],\n        [0, 28 /* ScanCode.KeyS */, 'KeyS', 49 /* KeyCode.KeyS */, 'S', 83, 'VK_S', empty, empty],\n        [0, 29 /* ScanCode.KeyT */, 'KeyT', 50 /* KeyCode.KeyT */, 'T', 84, 'VK_T', empty, empty],\n        [0, 30 /* ScanCode.KeyU */, 'KeyU', 51 /* KeyCode.KeyU */, 'U', 85, 'VK_U', empty, empty],\n        [0, 31 /* ScanCode.KeyV */, 'KeyV', 52 /* KeyCode.KeyV */, 'V', 86, 'VK_V', empty, empty],\n        [0, 32 /* ScanCode.KeyW */, 'KeyW', 53 /* KeyCode.KeyW */, 'W', 87, 'VK_W', empty, empty],\n        [0, 33 /* ScanCode.KeyX */, 'KeyX', 54 /* KeyCode.KeyX */, 'X', 88, 'VK_X', empty, empty],\n        [0, 34 /* ScanCode.KeyY */, 'KeyY', 55 /* KeyCode.KeyY */, 'Y', 89, 'VK_Y', empty, empty],\n        [0, 35 /* ScanCode.KeyZ */, 'KeyZ', 56 /* KeyCode.KeyZ */, 'Z', 90, 'VK_Z', empty, empty],\n        [0, 36 /* ScanCode.Digit1 */, 'Digit1', 22 /* KeyCode.Digit1 */, '1', 49, 'VK_1', empty, empty],\n        [0, 37 /* ScanCode.Digit2 */, 'Digit2', 23 /* KeyCode.Digit2 */, '2', 50, 'VK_2', empty, empty],\n        [0, 38 /* ScanCode.Digit3 */, 'Digit3', 24 /* KeyCode.Digit3 */, '3', 51, 'VK_3', empty, empty],\n        [0, 39 /* ScanCode.Digit4 */, 'Digit4', 25 /* KeyCode.Digit4 */, '4', 52, 'VK_4', empty, empty],\n        [0, 40 /* ScanCode.Digit5 */, 'Digit5', 26 /* KeyCode.Digit5 */, '5', 53, 'VK_5', empty, empty],\n        [0, 41 /* ScanCode.Digit6 */, 'Digit6', 27 /* KeyCode.Digit6 */, '6', 54, 'VK_6', empty, empty],\n        [0, 42 /* ScanCode.Digit7 */, 'Digit7', 28 /* KeyCode.Digit7 */, '7', 55, 'VK_7', empty, empty],\n        [0, 43 /* ScanCode.Digit8 */, 'Digit8', 29 /* KeyCode.Digit8 */, '8', 56, 'VK_8', empty, empty],\n        [0, 44 /* ScanCode.Digit9 */, 'Digit9', 30 /* KeyCode.Digit9 */, '9', 57, 'VK_9', empty, empty],\n        [0, 45 /* ScanCode.Digit0 */, 'Digit0', 21 /* KeyCode.Digit0 */, '0', 48, 'VK_0', empty, empty],\n        [1, 46 /* ScanCode.Enter */, 'Enter', 3 /* KeyCode.Enter */, 'Enter', 13, 'VK_RETURN', empty, empty],\n        [1, 47 /* ScanCode.Escape */, 'Escape', 9 /* KeyCode.Escape */, 'Escape', 27, 'VK_ESCAPE', empty, empty],\n        [1, 48 /* ScanCode.Backspace */, 'Backspace', 1 /* KeyCode.Backspace */, 'Backspace', 8, 'VK_BACK', empty, empty],\n        [1, 49 /* ScanCode.Tab */, 'Tab', 2 /* KeyCode.Tab */, 'Tab', 9, 'VK_TAB', empty, empty],\n        [1, 50 /* ScanCode.Space */, 'Space', 10 /* KeyCode.Space */, 'Space', 32, 'VK_SPACE', empty, empty],\n        [0, 51 /* ScanCode.Minus */, 'Minus', 88 /* KeyCode.Minus */, '-', 189, 'VK_OEM_MINUS', '-', 'OEM_MINUS'],\n        [0, 52 /* ScanCode.Equal */, 'Equal', 86 /* KeyCode.Equal */, '=', 187, 'VK_OEM_PLUS', '=', 'OEM_PLUS'],\n        [0, 53 /* ScanCode.BracketLeft */, 'BracketLeft', 92 /* KeyCode.BracketLeft */, '[', 219, 'VK_OEM_4', '[', 'OEM_4'],\n        [0, 54 /* ScanCode.BracketRight */, 'BracketRight', 94 /* KeyCode.BracketRight */, ']', 221, 'VK_OEM_6', ']', 'OEM_6'],\n        [0, 55 /* ScanCode.Backslash */, 'Backslash', 93 /* KeyCode.Backslash */, '\\\\', 220, 'VK_OEM_5', '\\\\', 'OEM_5'],\n        [0, 56 /* ScanCode.IntlHash */, 'IntlHash', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty], // has been dropped from the w3c spec\n        [0, 57 /* ScanCode.Semicolon */, 'Semicolon', 85 /* KeyCode.Semicolon */, ';', 186, 'VK_OEM_1', ';', 'OEM_1'],\n        [0, 58 /* ScanCode.Quote */, 'Quote', 95 /* KeyCode.Quote */, '\\'', 222, 'VK_OEM_7', '\\'', 'OEM_7'],\n        [0, 59 /* ScanCode.Backquote */, 'Backquote', 91 /* KeyCode.Backquote */, '`', 192, 'VK_OEM_3', '`', 'OEM_3'],\n        [0, 60 /* ScanCode.Comma */, 'Comma', 87 /* KeyCode.Comma */, ',', 188, 'VK_OEM_COMMA', ',', 'OEM_COMMA'],\n        [0, 61 /* ScanCode.Period */, 'Period', 89 /* KeyCode.Period */, '.', 190, 'VK_OEM_PERIOD', '.', 'OEM_PERIOD'],\n        [0, 62 /* ScanCode.Slash */, 'Slash', 90 /* KeyCode.Slash */, '/', 191, 'VK_OEM_2', '/', 'OEM_2'],\n        [1, 63 /* ScanCode.CapsLock */, 'CapsLock', 8 /* KeyCode.CapsLock */, 'CapsLock', 20, 'VK_CAPITAL', empty, empty],\n        [1, 64 /* ScanCode.F1 */, 'F1', 59 /* KeyCode.F1 */, 'F1', 112, 'VK_F1', empty, empty],\n        [1, 65 /* ScanCode.F2 */, 'F2', 60 /* KeyCode.F2 */, 'F2', 113, 'VK_F2', empty, empty],\n        [1, 66 /* ScanCode.F3 */, 'F3', 61 /* KeyCode.F3 */, 'F3', 114, 'VK_F3', empty, empty],\n        [1, 67 /* ScanCode.F4 */, 'F4', 62 /* KeyCode.F4 */, 'F4', 115, 'VK_F4', empty, empty],\n        [1, 68 /* ScanCode.F5 */, 'F5', 63 /* KeyCode.F5 */, 'F5', 116, 'VK_F5', empty, empty],\n        [1, 69 /* ScanCode.F6 */, 'F6', 64 /* KeyCode.F6 */, 'F6', 117, 'VK_F6', empty, empty],\n        [1, 70 /* ScanCode.F7 */, 'F7', 65 /* KeyCode.F7 */, 'F7', 118, 'VK_F7', empty, empty],\n        [1, 71 /* ScanCode.F8 */, 'F8', 66 /* KeyCode.F8 */, 'F8', 119, 'VK_F8', empty, empty],\n        [1, 72 /* ScanCode.F9 */, 'F9', 67 /* KeyCode.F9 */, 'F9', 120, 'VK_F9', empty, empty],\n        [1, 73 /* ScanCode.F10 */, 'F10', 68 /* KeyCode.F10 */, 'F10', 121, 'VK_F10', empty, empty],\n        [1, 74 /* ScanCode.F11 */, 'F11', 69 /* KeyCode.F11 */, 'F11', 122, 'VK_F11', empty, empty],\n        [1, 75 /* ScanCode.F12 */, 'F12', 70 /* KeyCode.F12 */, 'F12', 123, 'VK_F12', empty, empty],\n        [1, 76 /* ScanCode.PrintScreen */, 'PrintScreen', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 77 /* ScanCode.ScrollLock */, 'ScrollLock', 84 /* KeyCode.ScrollLock */, 'ScrollLock', 145, 'VK_SCROLL', empty, empty],\n        [1, 78 /* ScanCode.Pause */, 'Pause', 7 /* KeyCode.PauseBreak */, 'PauseBreak', 19, 'VK_PAUSE', empty, empty],\n        [1, 79 /* ScanCode.Insert */, 'Insert', 19 /* KeyCode.Insert */, 'Insert', 45, 'VK_INSERT', empty, empty],\n        [1, 80 /* ScanCode.Home */, 'Home', 14 /* KeyCode.Home */, 'Home', 36, 'VK_HOME', empty, empty],\n        [1, 81 /* ScanCode.PageUp */, 'PageUp', 11 /* KeyCode.PageUp */, 'PageUp', 33, 'VK_PRIOR', empty, empty],\n        [1, 82 /* ScanCode.Delete */, 'Delete', 20 /* KeyCode.Delete */, 'Delete', 46, 'VK_DELETE', empty, empty],\n        [1, 83 /* ScanCode.End */, 'End', 13 /* KeyCode.End */, 'End', 35, 'VK_END', empty, empty],\n        [1, 84 /* ScanCode.PageDown */, 'PageDown', 12 /* KeyCode.PageDown */, 'PageDown', 34, 'VK_NEXT', empty, empty],\n        [1, 85 /* ScanCode.ArrowRight */, 'ArrowRight', 17 /* KeyCode.RightArrow */, 'RightArrow', 39, 'VK_RIGHT', 'Right', empty],\n        [1, 86 /* ScanCode.ArrowLeft */, 'ArrowLeft', 15 /* KeyCode.LeftArrow */, 'LeftArrow', 37, 'VK_LEFT', 'Left', empty],\n        [1, 87 /* ScanCode.ArrowDown */, 'ArrowDown', 18 /* KeyCode.DownArrow */, 'DownArrow', 40, 'VK_DOWN', 'Down', empty],\n        [1, 88 /* ScanCode.ArrowUp */, 'ArrowUp', 16 /* KeyCode.UpArrow */, 'UpArrow', 38, 'VK_UP', 'Up', empty],\n        [1, 89 /* ScanCode.NumLock */, 'NumLock', 83 /* KeyCode.NumLock */, 'NumLock', 144, 'VK_NUMLOCK', empty, empty],\n        [1, 90 /* ScanCode.NumpadDivide */, 'NumpadDivide', 113 /* KeyCode.NumpadDivide */, 'NumPad_Divide', 111, 'VK_DIVIDE', empty, empty],\n        [1, 91 /* ScanCode.NumpadMultiply */, 'NumpadMultiply', 108 /* KeyCode.NumpadMultiply */, 'NumPad_Multiply', 106, 'VK_MULTIPLY', empty, empty],\n        [1, 92 /* ScanCode.NumpadSubtract */, 'NumpadSubtract', 111 /* KeyCode.NumpadSubtract */, 'NumPad_Subtract', 109, 'VK_SUBTRACT', empty, empty],\n        [1, 93 /* ScanCode.NumpadAdd */, 'NumpadAdd', 109 /* KeyCode.NumpadAdd */, 'NumPad_Add', 107, 'VK_ADD', empty, empty],\n        [1, 94 /* ScanCode.NumpadEnter */, 'NumpadEnter', 3 /* KeyCode.Enter */, empty, 0, empty, empty, empty],\n        [1, 95 /* ScanCode.Numpad1 */, 'Numpad1', 99 /* KeyCode.Numpad1 */, 'NumPad1', 97, 'VK_NUMPAD1', empty, empty],\n        [1, 96 /* ScanCode.Numpad2 */, 'Numpad2', 100 /* KeyCode.Numpad2 */, 'NumPad2', 98, 'VK_NUMPAD2', empty, empty],\n        [1, 97 /* ScanCode.Numpad3 */, 'Numpad3', 101 /* KeyCode.Numpad3 */, 'NumPad3', 99, 'VK_NUMPAD3', empty, empty],\n        [1, 98 /* ScanCode.Numpad4 */, 'Numpad4', 102 /* KeyCode.Numpad4 */, 'NumPad4', 100, 'VK_NUMPAD4', empty, empty],\n        [1, 99 /* ScanCode.Numpad5 */, 'Numpad5', 103 /* KeyCode.Numpad5 */, 'NumPad5', 101, 'VK_NUMPAD5', empty, empty],\n        [1, 100 /* ScanCode.Numpad6 */, 'Numpad6', 104 /* KeyCode.Numpad6 */, 'NumPad6', 102, 'VK_NUMPAD6', empty, empty],\n        [1, 101 /* ScanCode.Numpad7 */, 'Numpad7', 105 /* KeyCode.Numpad7 */, 'NumPad7', 103, 'VK_NUMPAD7', empty, empty],\n        [1, 102 /* ScanCode.Numpad8 */, 'Numpad8', 106 /* KeyCode.Numpad8 */, 'NumPad8', 104, 'VK_NUMPAD8', empty, empty],\n        [1, 103 /* ScanCode.Numpad9 */, 'Numpad9', 107 /* KeyCode.Numpad9 */, 'NumPad9', 105, 'VK_NUMPAD9', empty, empty],\n        [1, 104 /* ScanCode.Numpad0 */, 'Numpad0', 98 /* KeyCode.Numpad0 */, 'NumPad0', 96, 'VK_NUMPAD0', empty, empty],\n        [1, 105 /* ScanCode.NumpadDecimal */, 'NumpadDecimal', 112 /* KeyCode.NumpadDecimal */, 'NumPad_Decimal', 110, 'VK_DECIMAL', empty, empty],\n        [0, 106 /* ScanCode.IntlBackslash */, 'IntlBackslash', 97 /* KeyCode.IntlBackslash */, 'OEM_102', 226, 'VK_OEM_102', empty, empty],\n        [1, 107 /* ScanCode.ContextMenu */, 'ContextMenu', 58 /* KeyCode.ContextMenu */, 'ContextMenu', 93, empty, empty, empty],\n        [1, 108 /* ScanCode.Power */, 'Power', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 109 /* ScanCode.NumpadEqual */, 'NumpadEqual', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 110 /* ScanCode.F13 */, 'F13', 71 /* KeyCode.F13 */, 'F13', 124, 'VK_F13', empty, empty],\n        [1, 111 /* ScanCode.F14 */, 'F14', 72 /* KeyCode.F14 */, 'F14', 125, 'VK_F14', empty, empty],\n        [1, 112 /* ScanCode.F15 */, 'F15', 73 /* KeyCode.F15 */, 'F15', 126, 'VK_F15', empty, empty],\n        [1, 113 /* ScanCode.F16 */, 'F16', 74 /* KeyCode.F16 */, 'F16', 127, 'VK_F16', empty, empty],\n        [1, 114 /* ScanCode.F17 */, 'F17', 75 /* KeyCode.F17 */, 'F17', 128, 'VK_F17', empty, empty],\n        [1, 115 /* ScanCode.F18 */, 'F18', 76 /* KeyCode.F18 */, 'F18', 129, 'VK_F18', empty, empty],\n        [1, 116 /* ScanCode.F19 */, 'F19', 77 /* KeyCode.F19 */, 'F19', 130, 'VK_F19', empty, empty],\n        [1, 117 /* ScanCode.F20 */, 'F20', 78 /* KeyCode.F20 */, 'F20', 131, 'VK_F20', empty, empty],\n        [1, 118 /* ScanCode.F21 */, 'F21', 79 /* KeyCode.F21 */, 'F21', 132, 'VK_F21', empty, empty],\n        [1, 119 /* ScanCode.F22 */, 'F22', 80 /* KeyCode.F22 */, 'F22', 133, 'VK_F22', empty, empty],\n        [1, 120 /* ScanCode.F23 */, 'F23', 81 /* KeyCode.F23 */, 'F23', 134, 'VK_F23', empty, empty],\n        [1, 121 /* ScanCode.F24 */, 'F24', 82 /* KeyCode.F24 */, 'F24', 135, 'VK_F24', empty, empty],\n        [1, 122 /* ScanCode.Open */, 'Open', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 123 /* ScanCode.Help */, 'Help', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 124 /* ScanCode.Select */, 'Select', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 125 /* ScanCode.Again */, 'Again', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 126 /* ScanCode.Undo */, 'Undo', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 127 /* ScanCode.Cut */, 'Cut', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 128 /* ScanCode.Copy */, 'Copy', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 129 /* ScanCode.Paste */, 'Paste', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 130 /* ScanCode.Find */, 'Find', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 131 /* ScanCode.AudioVolumeMute */, 'AudioVolumeMute', 117 /* KeyCode.AudioVolumeMute */, 'AudioVolumeMute', 173, 'VK_VOLUME_MUTE', empty, empty],\n        [1, 132 /* ScanCode.AudioVolumeUp */, 'AudioVolumeUp', 118 /* KeyCode.AudioVolumeUp */, 'AudioVolumeUp', 175, 'VK_VOLUME_UP', empty, empty],\n        [1, 133 /* ScanCode.AudioVolumeDown */, 'AudioVolumeDown', 119 /* KeyCode.AudioVolumeDown */, 'AudioVolumeDown', 174, 'VK_VOLUME_DOWN', empty, empty],\n        [1, 134 /* ScanCode.NumpadComma */, 'NumpadComma', 110 /* KeyCode.NUMPAD_SEPARATOR */, 'NumPad_Separator', 108, 'VK_SEPARATOR', empty, empty],\n        [0, 135 /* ScanCode.IntlRo */, 'IntlRo', 115 /* KeyCode.ABNT_C1 */, 'ABNT_C1', 193, 'VK_ABNT_C1', empty, empty],\n        [1, 136 /* ScanCode.KanaMode */, 'KanaMode', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 137 /* ScanCode.IntlYen */, 'IntlYen', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 138 /* ScanCode.Convert */, 'Convert', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 139 /* ScanCode.NonConvert */, 'NonConvert', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 140 /* ScanCode.Lang1 */, 'Lang1', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 141 /* ScanCode.Lang2 */, 'Lang2', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 142 /* ScanCode.Lang3 */, 'Lang3', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 143 /* ScanCode.Lang4 */, 'Lang4', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 144 /* ScanCode.Lang5 */, 'Lang5', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 145 /* ScanCode.Abort */, 'Abort', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 146 /* ScanCode.Props */, 'Props', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 147 /* ScanCode.NumpadParenLeft */, 'NumpadParenLeft', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 148 /* ScanCode.NumpadParenRight */, 'NumpadParenRight', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 149 /* ScanCode.NumpadBackspace */, 'NumpadBackspace', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 150 /* ScanCode.NumpadMemoryStore */, 'NumpadMemoryStore', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 151 /* ScanCode.NumpadMemoryRecall */, 'NumpadMemoryRecall', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 152 /* ScanCode.NumpadMemoryClear */, 'NumpadMemoryClear', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 153 /* ScanCode.NumpadMemoryAdd */, 'NumpadMemoryAdd', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 154 /* ScanCode.NumpadMemorySubtract */, 'NumpadMemorySubtract', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 155 /* ScanCode.NumpadClear */, 'NumpadClear', 131 /* KeyCode.Clear */, 'Clear', 12, 'VK_CLEAR', empty, empty],\n        [1, 156 /* ScanCode.NumpadClearEntry */, 'NumpadClearEntry', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 5 /* KeyCode.Ctrl */, 'Ctrl', 17, 'VK_CONTROL', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 4 /* KeyCode.Shift */, 'Shift', 16, 'VK_SHIFT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 6 /* KeyCode.Alt */, 'Alt', 18, 'VK_MENU', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 57 /* KeyCode.Meta */, 'Meta', 91, 'VK_COMMAND', empty, empty],\n        [1, 157 /* ScanCode.ControlLeft */, 'ControlLeft', 5 /* KeyCode.Ctrl */, empty, 0, 'VK_LCONTROL', empty, empty],\n        [1, 158 /* ScanCode.ShiftLeft */, 'ShiftLeft', 4 /* KeyCode.Shift */, empty, 0, 'VK_LSHIFT', empty, empty],\n        [1, 159 /* ScanCode.AltLeft */, 'AltLeft', 6 /* KeyCode.Alt */, empty, 0, 'VK_LMENU', empty, empty],\n        [1, 160 /* ScanCode.MetaLeft */, 'MetaLeft', 57 /* KeyCode.Meta */, empty, 0, 'VK_LWIN', empty, empty],\n        [1, 161 /* ScanCode.ControlRight */, 'ControlRight', 5 /* KeyCode.Ctrl */, empty, 0, 'VK_RCONTROL', empty, empty],\n        [1, 162 /* ScanCode.ShiftRight */, 'ShiftRight', 4 /* KeyCode.Shift */, empty, 0, 'VK_RSHIFT', empty, empty],\n        [1, 163 /* ScanCode.AltRight */, 'AltRight', 6 /* KeyCode.Alt */, empty, 0, 'VK_RMENU', empty, empty],\n        [1, 164 /* ScanCode.MetaRight */, 'MetaRight', 57 /* KeyCode.Meta */, empty, 0, 'VK_RWIN', empty, empty],\n        [1, 165 /* ScanCode.BrightnessUp */, 'BrightnessUp', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 166 /* ScanCode.BrightnessDown */, 'BrightnessDown', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 167 /* ScanCode.MediaPlay */, 'MediaPlay', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 168 /* ScanCode.MediaRecord */, 'MediaRecord', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 169 /* ScanCode.MediaFastForward */, 'MediaFastForward', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 170 /* ScanCode.MediaRewind */, 'MediaRewind', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 171 /* ScanCode.MediaTrackNext */, 'MediaTrackNext', 124 /* KeyCode.MediaTrackNext */, 'MediaTrackNext', 176, 'VK_MEDIA_NEXT_TRACK', empty, empty],\n        [1, 172 /* ScanCode.MediaTrackPrevious */, 'MediaTrackPrevious', 125 /* KeyCode.MediaTrackPrevious */, 'MediaTrackPrevious', 177, 'VK_MEDIA_PREV_TRACK', empty, empty],\n        [1, 173 /* ScanCode.MediaStop */, 'MediaStop', 126 /* KeyCode.MediaStop */, 'MediaStop', 178, 'VK_MEDIA_STOP', empty, empty],\n        [1, 174 /* ScanCode.Eject */, 'Eject', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 175 /* ScanCode.MediaPlayPause */, 'MediaPlayPause', 127 /* KeyCode.MediaPlayPause */, 'MediaPlayPause', 179, 'VK_MEDIA_PLAY_PAUSE', empty, empty],\n        [1, 176 /* ScanCode.MediaSelect */, 'MediaSelect', 128 /* KeyCode.LaunchMediaPlayer */, 'LaunchMediaPlayer', 181, 'VK_MEDIA_LAUNCH_MEDIA_SELECT', empty, empty],\n        [1, 177 /* ScanCode.LaunchMail */, 'LaunchMail', 129 /* KeyCode.LaunchMail */, 'LaunchMail', 180, 'VK_MEDIA_LAUNCH_MAIL', empty, empty],\n        [1, 178 /* ScanCode.LaunchApp2 */, 'LaunchApp2', 130 /* KeyCode.LaunchApp2 */, 'LaunchApp2', 183, 'VK_MEDIA_LAUNCH_APP2', empty, empty],\n        [1, 179 /* ScanCode.LaunchApp1 */, 'LaunchApp1', 0 /* KeyCode.Unknown */, empty, 0, 'VK_MEDIA_LAUNCH_APP1', empty, empty],\n        [1, 180 /* ScanCode.SelectTask */, 'SelectTask', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 181 /* ScanCode.LaunchScreenSaver */, 'LaunchScreenSaver', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 182 /* ScanCode.BrowserSearch */, 'BrowserSearch', 120 /* KeyCode.BrowserSearch */, 'BrowserSearch', 170, 'VK_BROWSER_SEARCH', empty, empty],\n        [1, 183 /* ScanCode.BrowserHome */, 'BrowserHome', 121 /* KeyCode.BrowserHome */, 'BrowserHome', 172, 'VK_BROWSER_HOME', empty, empty],\n        [1, 184 /* ScanCode.BrowserBack */, 'BrowserBack', 122 /* KeyCode.BrowserBack */, 'BrowserBack', 166, 'VK_BROWSER_BACK', empty, empty],\n        [1, 185 /* ScanCode.BrowserForward */, 'BrowserForward', 123 /* KeyCode.BrowserForward */, 'BrowserForward', 167, 'VK_BROWSER_FORWARD', empty, empty],\n        [1, 186 /* ScanCode.BrowserStop */, 'BrowserStop', 0 /* KeyCode.Unknown */, empty, 0, 'VK_BROWSER_STOP', empty, empty],\n        [1, 187 /* ScanCode.BrowserRefresh */, 'BrowserRefresh', 0 /* KeyCode.Unknown */, empty, 0, 'VK_BROWSER_REFRESH', empty, empty],\n        [1, 188 /* ScanCode.BrowserFavorites */, 'BrowserFavorites', 0 /* KeyCode.Unknown */, empty, 0, 'VK_BROWSER_FAVORITES', empty, empty],\n        [1, 189 /* ScanCode.ZoomToggle */, 'ZoomToggle', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 190 /* ScanCode.MailReply */, 'MailReply', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 191 /* ScanCode.MailForward */, 'MailForward', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 192 /* ScanCode.MailSend */, 'MailSend', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        // See https://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html\n        // If an Input Method Editor is processing key input and the event is keydown, return 229.\n        [1, 0 /* ScanCode.None */, empty, 114 /* KeyCode.KEY_IN_COMPOSITION */, 'KeyInComposition', 229, empty, empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 116 /* KeyCode.ABNT_C2 */, 'ABNT_C2', 194, 'VK_ABNT_C2', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 96 /* KeyCode.OEM_8 */, 'OEM_8', 223, 'VK_OEM_8', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_KANA', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_HANGUL', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_JUNJA', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_FINAL', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_HANJA', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_KANJI', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_CONVERT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_NONCONVERT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_ACCEPT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_MODECHANGE', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_SELECT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PRINT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_EXECUTE', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_SNAPSHOT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_HELP', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_APPS', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PROCESSKEY', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PACKET', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_DBE_SBCSCHAR', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_DBE_DBCSCHAR', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_ATTN', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_CRSEL', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_EXSEL', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_EREOF', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PLAY', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_ZOOM', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_NONAME', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PA1', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_OEM_CLEAR', empty, empty],\n    ];\n    const seenKeyCode = [];\n    const seenScanCode = [];\n    for (const mapping of mappings) {\n        const [immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel] = mapping;\n        if (!seenScanCode[scanCode]) {\n            seenScanCode[scanCode] = true;\n            scanCodeIntToStr[scanCode] = scanCodeStr;\n            scanCodeStrToInt[scanCodeStr] = scanCode;\n            scanCodeLowerCaseStrToInt[scanCodeStr.toLowerCase()] = scanCode;\n            if (immutable) {\n                IMMUTABLE_CODE_TO_KEY_CODE[scanCode] = keyCode;\n                if ((keyCode !== 0 /* KeyCode.Unknown */)\n                    && (keyCode !== 3 /* KeyCode.Enter */)\n                    && (keyCode !== 5 /* KeyCode.Ctrl */)\n                    && (keyCode !== 4 /* KeyCode.Shift */)\n                    && (keyCode !== 6 /* KeyCode.Alt */)\n                    && (keyCode !== 57 /* KeyCode.Meta */)) {\n                    IMMUTABLE_KEY_CODE_TO_CODE[keyCode] = scanCode;\n                }\n            }\n        }\n        if (!seenKeyCode[keyCode]) {\n            seenKeyCode[keyCode] = true;\n            if (!keyCodeStr) {\n                throw new Error(`String representation missing for key code ${keyCode} around scan code ${scanCodeStr}`);\n            }\n            uiMap.define(keyCode, keyCodeStr);\n            userSettingsUSMap.define(keyCode, usUserSettingsLabel || keyCodeStr);\n            userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel || usUserSettingsLabel || keyCodeStr);\n        }\n        if (eventKeyCode) {\n            EVENT_KEY_CODE_MAP[eventKeyCode] = keyCode;\n        }\n        if (vkey) {\n            NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE[vkey] = keyCode;\n        }\n    }\n    // Manually added due to the exclusion above (due to duplication with NumpadEnter)\n    IMMUTABLE_KEY_CODE_TO_CODE[3 /* KeyCode.Enter */] = 46 /* ScanCode.Enter */;\n})();\nexport var KeyCodeUtils;\n(function (KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n    function toElectronAccelerator(keyCode) {\n        if (keyCode >= 98 /* KeyCode.Numpad0 */ && keyCode <= 113 /* KeyCode.NumpadDivide */) {\n            // [Electron Accelerators] Electron is able to parse numpad keys, but unfortunately it\n            // renders them just as regular keys in menus. For example, num0 is rendered as \"0\",\n            // numdiv is rendered as \"/\", numsub is rendered as \"-\".\n            //\n            // This can lead to incredible confusion, as it makes numpad based keybindings indistinguishable\n            // from keybindings based on regular keys.\n            //\n            // We therefore need to fall back to custom rendering for numpad keys.\n            return null;\n        }\n        switch (keyCode) {\n            case 16 /* KeyCode.UpArrow */:\n                return 'Up';\n            case 18 /* KeyCode.DownArrow */:\n                return 'Down';\n            case 15 /* KeyCode.LeftArrow */:\n                return 'Left';\n            case 17 /* KeyCode.RightArrow */:\n                return 'Right';\n        }\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toElectronAccelerator = toElectronAccelerator;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\nexport function KeyChord(firstPart, secondPart) {\n    const chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nexport class ModifierLabelProvider {\n    constructor(mac, windows, linux = windows) {\n        this.modifierLabels = [null]; // index 0 will never me accessed.\n        this.modifierLabels[2 /* OperatingSystem.Macintosh */] = mac;\n        this.modifierLabels[1 /* OperatingSystem.Windows */] = windows;\n        this.modifierLabels[3 /* OperatingSystem.Linux */] = linux;\n    }\n    toLabel(OS, chords, keyLabelProvider) {\n        if (chords.length === 0) {\n            return null;\n        }\n        const result = [];\n        for (let i = 0, len = chords.length; i < len; i++) {\n            const chord = chords[i];\n            const keyLabel = keyLabelProvider(chord);\n            if (keyLabel === null) {\n                // this keybinding cannot be expressed...\n                return null;\n            }\n            result[i] = _simpleAsString(chord, keyLabel, this.modifierLabels[OS]);\n        }\n        return result.join(' ');\n    }\n}\n/**\n * A label provider that prints modifiers in a suitable format for displaying in the UI.\n */\nexport const UILabelProvider = new ModifierLabelProvider({\n    ctrlKey: '\\u2303',\n    shiftKey: '⇧',\n    altKey: '⌥',\n    metaKey: '⌘',\n    separator: '',\n}, {\n    ctrlKey: nls.localize({ key: 'ctrlKey', comment: ['This is the short form for the Control key on the keyboard'] }, \"Ctrl\"),\n    shiftKey: nls.localize({ key: 'shiftKey', comment: ['This is the short form for the Shift key on the keyboard'] }, \"Shift\"),\n    altKey: nls.localize({ key: 'altKey', comment: ['This is the short form for the Alt key on the keyboard'] }, \"Alt\"),\n    metaKey: nls.localize({ key: 'windowsKey', comment: ['This is the short form for the Windows key on the keyboard'] }, \"Windows\"),\n    separator: '+',\n}, {\n    ctrlKey: nls.localize({ key: 'ctrlKey', comment: ['This is the short form for the Control key on the keyboard'] }, \"Ctrl\"),\n    shiftKey: nls.localize({ key: 'shiftKey', comment: ['This is the short form for the Shift key on the keyboard'] }, \"Shift\"),\n    altKey: nls.localize({ key: 'altKey', comment: ['This is the short form for the Alt key on the keyboard'] }, \"Alt\"),\n    metaKey: nls.localize({ key: 'superKey', comment: ['This is the short form for the Super key on the keyboard'] }, \"Super\"),\n    separator: '+',\n});\n/**\n * A label provider that prints modifiers in a suitable format for ARIA.\n */\nexport const AriaLabelProvider = new ModifierLabelProvider({\n    ctrlKey: nls.localize({ key: 'ctrlKey.long', comment: ['This is the long form for the Control key on the keyboard'] }, \"Control\"),\n    shiftKey: nls.localize({ key: 'shiftKey.long', comment: ['This is the long form for the Shift key on the keyboard'] }, \"Shift\"),\n    altKey: nls.localize({ key: 'optKey.long', comment: ['This is the long form for the Alt/Option key on the keyboard'] }, \"Option\"),\n    metaKey: nls.localize({ key: 'cmdKey.long', comment: ['This is the long form for the Command key on the keyboard'] }, \"Command\"),\n    separator: '+',\n}, {\n    ctrlKey: nls.localize({ key: 'ctrlKey.long', comment: ['This is the long form for the Control key on the keyboard'] }, \"Control\"),\n    shiftKey: nls.localize({ key: 'shiftKey.long', comment: ['This is the long form for the Shift key on the keyboard'] }, \"Shift\"),\n    altKey: nls.localize({ key: 'altKey.long', comment: ['This is the long form for the Alt key on the keyboard'] }, \"Alt\"),\n    metaKey: nls.localize({ key: 'windowsKey.long', comment: ['This is the long form for the Windows key on the keyboard'] }, \"Windows\"),\n    separator: '+',\n}, {\n    ctrlKey: nls.localize({ key: 'ctrlKey.long', comment: ['This is the long form for the Control key on the keyboard'] }, \"Control\"),\n    shiftKey: nls.localize({ key: 'shiftKey.long', comment: ['This is the long form for the Shift key on the keyboard'] }, \"Shift\"),\n    altKey: nls.localize({ key: 'altKey.long', comment: ['This is the long form for the Alt key on the keyboard'] }, \"Alt\"),\n    metaKey: nls.localize({ key: 'superKey.long', comment: ['This is the long form for the Super key on the keyboard'] }, \"Super\"),\n    separator: '+',\n});\n/**\n * A label provider that prints modifiers in a suitable format for Electron Accelerators.\n * See https://github.com/electron/electron/blob/master/docs/api/accelerator.md\n */\nexport const ElectronAcceleratorLabelProvider = new ModifierLabelProvider({\n    ctrlKey: 'Ctrl',\n    shiftKey: 'Shift',\n    altKey: 'Alt',\n    metaKey: 'Cmd',\n    separator: '+',\n}, {\n    ctrlKey: 'Ctrl',\n    shiftKey: 'Shift',\n    altKey: 'Alt',\n    metaKey: 'Super',\n    separator: '+',\n});\n/**\n * A label provider that prints modifiers in a suitable format for user settings.\n */\nexport const UserSettingsLabelProvider = new ModifierLabelProvider({\n    ctrlKey: 'ctrl',\n    shiftKey: 'shift',\n    altKey: 'alt',\n    metaKey: 'cmd',\n    separator: '+',\n}, {\n    ctrlKey: 'ctrl',\n    shiftKey: 'shift',\n    altKey: 'alt',\n    metaKey: 'win',\n    separator: '+',\n}, {\n    ctrlKey: 'ctrl',\n    shiftKey: 'shift',\n    altKey: 'alt',\n    metaKey: 'meta',\n    separator: '+',\n});\nfunction _simpleAsString(modifiers, key, labels) {\n    if (key === null) {\n        return '';\n    }\n    const result = [];\n    // translate modifier keys: Ctrl-Shift-Alt-Meta\n    if (modifiers.ctrlKey) {\n        result.push(labels.ctrlKey);\n    }\n    if (modifiers.shiftKey) {\n        result.push(labels.shiftKey);\n    }\n    if (modifiers.altKey) {\n        result.push(labels.altKey);\n    }\n    if (modifiers.metaKey) {\n        result.push(labels.metaKey);\n    }\n    // the actual key\n    if (key !== '') {\n        result.push(key);\n    }\n    return result.join(labels.separator);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from './errors.js';\nexport function decodeKeybinding(keybinding, OS) {\n    if (typeof keybinding === 'number') {\n        if (keybinding === 0) {\n            return null;\n        }\n        const firstChord = (keybinding & 0x0000FFFF) >>> 0;\n        const secondChord = (keybinding & 0xFFFF0000) >>> 16;\n        if (secondChord !== 0) {\n            return new Keybinding([\n                createSimpleKeybinding(firstChord, OS),\n                createSimpleKeybinding(secondChord, OS)\n            ]);\n        }\n        return new Keybinding([createSimpleKeybinding(firstChord, OS)]);\n    }\n    else {\n        const chords = [];\n        for (let i = 0; i < keybinding.length; i++) {\n            chords.push(createSimpleKeybinding(keybinding[i], OS));\n        }\n        return new Keybinding(chords);\n    }\n}\nexport function createSimpleKeybinding(keybinding, OS) {\n    const ctrlCmd = (keybinding & 2048 /* BinaryKeybindingsMask.CtrlCmd */ ? true : false);\n    const winCtrl = (keybinding & 256 /* BinaryKeybindingsMask.WinCtrl */ ? true : false);\n    const ctrlKey = (OS === 2 /* OperatingSystem.Macintosh */ ? winCtrl : ctrlCmd);\n    const shiftKey = (keybinding & 1024 /* BinaryKeybindingsMask.Shift */ ? true : false);\n    const altKey = (keybinding & 512 /* BinaryKeybindingsMask.Alt */ ? true : false);\n    const metaKey = (OS === 2 /* OperatingSystem.Macintosh */ ? ctrlCmd : winCtrl);\n    const keyCode = (keybinding & 255 /* BinaryKeybindingsMask.KeyCode */);\n    return new KeyCodeChord(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\n/**\n * Represents a chord which uses the `keyCode` field of keyboard events.\n * A chord is a combination of keys pressed simultaneously.\n */\nexport class KeyCodeChord {\n    constructor(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyCode = keyCode;\n    }\n    equals(other) {\n        return (other instanceof KeyCodeChord\n            && this.ctrlKey === other.ctrlKey\n            && this.shiftKey === other.shiftKey\n            && this.altKey === other.altKey\n            && this.metaKey === other.metaKey\n            && this.keyCode === other.keyCode);\n    }\n    isModifierKey() {\n        return (this.keyCode === 0 /* KeyCode.Unknown */\n            || this.keyCode === 5 /* KeyCode.Ctrl */\n            || this.keyCode === 57 /* KeyCode.Meta */\n            || this.keyCode === 6 /* KeyCode.Alt */\n            || this.keyCode === 4 /* KeyCode.Shift */);\n    }\n    /**\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n     */\n    isDuplicateModifierCase() {\n        return ((this.ctrlKey && this.keyCode === 5 /* KeyCode.Ctrl */)\n            || (this.shiftKey && this.keyCode === 4 /* KeyCode.Shift */)\n            || (this.altKey && this.keyCode === 6 /* KeyCode.Alt */)\n            || (this.metaKey && this.keyCode === 57 /* KeyCode.Meta */));\n    }\n}\n/**\n * Represents a chord which uses the `code` field of keyboard events.\n * A chord is a combination of keys pressed simultaneously.\n */\nexport class ScanCodeChord {\n    constructor(ctrlKey, shiftKey, altKey, metaKey, scanCode) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.scanCode = scanCode;\n    }\n    /**\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n     */\n    isDuplicateModifierCase() {\n        return ((this.ctrlKey && (this.scanCode === 157 /* ScanCode.ControlLeft */ || this.scanCode === 161 /* ScanCode.ControlRight */))\n            || (this.shiftKey && (this.scanCode === 158 /* ScanCode.ShiftLeft */ || this.scanCode === 162 /* ScanCode.ShiftRight */))\n            || (this.altKey && (this.scanCode === 159 /* ScanCode.AltLeft */ || this.scanCode === 163 /* ScanCode.AltRight */))\n            || (this.metaKey && (this.scanCode === 160 /* ScanCode.MetaLeft */ || this.scanCode === 164 /* ScanCode.MetaRight */)));\n    }\n}\n/**\n * A keybinding is a sequence of chords.\n */\nexport class Keybinding {\n    constructor(chords) {\n        if (chords.length === 0) {\n            throw illegalArgument(`chords`);\n        }\n        this.chords = chords;\n    }\n}\nexport class ResolvedChord {\n    constructor(ctrlKey, shiftKey, altKey, metaKey, keyLabel, keyAriaLabel) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyLabel = keyLabel;\n        this.keyAriaLabel = keyAriaLabel;\n    }\n}\n/**\n * A resolved keybinding. Consists of one or multiple chords.\n */\nexport class ResolvedKeybinding {\n}\n","import { hasDriveLetter } from './extpath.js';\nimport { isWindows } from './platform.js';\nexport function normalizeDriveLetter(path, isWindowsOS = isWindows) {\n    if (hasDriveLetter(path, isWindowsOS)) {\n        return path.charAt(0).toUpperCase() + path.slice(1);\n    }\n    return path;\n}\nlet normalizedUserHomeCached = Object.create(null);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class Lazy {\n    constructor(executor) {\n        this.executor = executor;\n        this._didRun = false;\n    }\n    /**\n     * Get the wrapped value.\n     *\n     * This will force evaluation of the lazy value if it has not been resolved yet. Lazy values are only\n     * resolved once. `getValue` will re-throw exceptions that are hit while resolving the value\n     */\n    get value() {\n        if (!this._didRun) {\n            try {\n                this._value = this.executor();\n            }\n            catch (err) {\n                this._error = err;\n            }\n            finally {\n                this._didRun = true;\n            }\n        }\n        if (this._error) {\n            throw this._error;\n        }\n        return this._value;\n    }\n    /**\n     * Get the wrapped value without forcing evaluation.\n     */\n    get rawValue() { return this._value; }\n}\n","import { createSingleCallFunction } from './functional.js';\nimport { Iterable } from './iterator.js';\n// #region Disposable Tracking\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\nlet disposableTracker = null;\nexport function setDisposableTracker(tracker) {\n    disposableTracker = tracker;\n}\nif (TRACK_DISPOSABLES) {\n    const __is_disposable_tracked__ = '__is_disposable_tracked__';\n    setDisposableTracker(new class {\n        trackDisposable(x) {\n            const stack = new Error('Potentially leaked disposable').stack;\n            setTimeout(() => {\n                if (!x[__is_disposable_tracked__]) {\n                    console.log(stack);\n                }\n            }, 3000);\n        }\n        setParent(child, parent) {\n            if (child && child !== Disposable.None) {\n                try {\n                    child[__is_disposable_tracked__] = true;\n                }\n                catch (_a) {\n                    // noop\n                }\n            }\n        }\n        markAsDisposed(disposable) {\n            if (disposable && disposable !== Disposable.None) {\n                try {\n                    disposable[__is_disposable_tracked__] = true;\n                }\n                catch (_a) {\n                    // noop\n                }\n            }\n        }\n        markAsSingleton(disposable) { }\n    });\n}\nexport function trackDisposable(x) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.trackDisposable(x);\n    return x;\n}\nexport function markAsDisposed(disposable) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.markAsDisposed(disposable);\n}\nfunction setParentOfDisposable(child, parent) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.setParent(child, parent);\n}\nfunction setParentOfDisposables(children, parent) {\n    if (!disposableTracker) {\n        return;\n    }\n    for (const child of children) {\n        disposableTracker.setParent(child, parent);\n    }\n}\n/**\n * Indicates that the given object is a singleton which does not need to be disposed.\n*/\nexport function markAsSingleton(singleton) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.markAsSingleton(singleton);\n    return singleton;\n}\n/**\n * Check if `thing` is {@link IDisposable disposable}.\n */\nexport function isDisposable(thing) {\n    return typeof thing.dispose === 'function' && thing.dispose.length === 0;\n}\nexport function dispose(arg) {\n    if (Iterable.is(arg)) {\n        const errors = [];\n        for (const d of arg) {\n            if (d) {\n                try {\n                    d.dispose();\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n            }\n        }\n        if (errors.length === 1) {\n            throw errors[0];\n        }\n        else if (errors.length > 1) {\n            throw new AggregateError(errors, 'Encountered errors while disposing of store');\n        }\n        return Array.isArray(arg) ? [] : arg;\n    }\n    else if (arg) {\n        arg.dispose();\n        return arg;\n    }\n}\n/**\n * Combine multiple disposable values into a single {@link IDisposable}.\n */\nexport function combinedDisposable(...disposables) {\n    const parent = toDisposable(() => dispose(disposables));\n    setParentOfDisposables(disposables, parent);\n    return parent;\n}\n/**\n * Turn a function that implements dispose into an {@link IDisposable}.\n *\n * @param fn Clean up function, guaranteed to be called only **once**.\n */\nexport function toDisposable(fn) {\n    const self = trackDisposable({\n        dispose: createSingleCallFunction(() => {\n            markAsDisposed(self);\n            fn();\n        })\n    });\n    return self;\n}\n/**\n * Manages a collection of disposable values.\n *\n * This is the preferred way to manage multiple disposables. A `DisposableStore` is safer to work with than an\n * `IDisposable[]` as it considers edge cases, such as registering the same value multiple times or adding an item to a\n * store that has already been disposed of.\n */\nexport class DisposableStore {\n    constructor() {\n        this._toDispose = new Set();\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    /**\n     * Dispose of all registered disposables and mark this object as disposed.\n     *\n     * Any future disposables added to this object will be disposed of on `add`.\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clear();\n    }\n    /**\n     * @return `true` if this object has been disposed of.\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Dispose of all registered disposables but do not mark this object as disposed.\n     */\n    clear() {\n        if (this._toDispose.size === 0) {\n            return;\n        }\n        try {\n            dispose(this._toDispose);\n        }\n        finally {\n            this._toDispose.clear();\n        }\n    }\n    /**\n     * Add a new {@link IDisposable disposable} to the collection.\n     */\n    add(o) {\n        if (!o) {\n            return o;\n        }\n        if (o === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        setParentOfDisposable(o, this);\n        if (this._isDisposed) {\n            if (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n                console.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n            }\n        }\n        else {\n            this._toDispose.add(o);\n        }\n        return o;\n    }\n    /**\n     * Deletes the value from the store, but does not dispose it.\n     */\n    deleteAndLeak(o) {\n        if (!o) {\n            return;\n        }\n        if (this._toDispose.has(o)) {\n            this._toDispose.delete(o);\n            setParentOfDisposable(o, null);\n        }\n    }\n}\nDisposableStore.DISABLE_DISPOSED_WARNING = false;\n/**\n * Abstract base class for a {@link IDisposable disposable} object.\n *\n * Subclasses can {@linkcode _register} disposables that will be automatically cleaned up when this object is disposed of.\n */\nexport class Disposable {\n    constructor() {\n        this._store = new DisposableStore();\n        trackDisposable(this);\n        setParentOfDisposable(this._store, this);\n    }\n    dispose() {\n        markAsDisposed(this);\n        this._store.dispose();\n    }\n    /**\n     * Adds `o` to the collection of disposables managed by this object.\n     */\n    _register(o) {\n        if (o === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        return this._store.add(o);\n    }\n}\n/**\n * A disposable that does nothing when it is disposed of.\n *\n * TODO: This should not be a static property.\n */\nDisposable.None = Object.freeze({ dispose() { } });\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable {\n    constructor() {\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    get value() {\n        return this._isDisposed ? undefined : this._value;\n    }\n    set value(value) {\n        var _a;\n        if (this._isDisposed || value === this._value) {\n            return;\n        }\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n        if (value) {\n            setParentOfDisposable(value, this);\n        }\n        this._value = value;\n    }\n    /**\n     * Resets the stored value and disposed of the previously stored value.\n     */\n    clear() {\n        this.value = undefined;\n    }\n    dispose() {\n        var _a;\n        this._isDisposed = true;\n        markAsDisposed(this);\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._value = undefined;\n    }\n}\nexport class RefCountedDisposable {\n    constructor(_disposable) {\n        this._disposable = _disposable;\n        this._counter = 1;\n    }\n    acquire() {\n        this._counter++;\n        return this;\n    }\n    release() {\n        if (--this._counter === 0) {\n            this._disposable.dispose();\n        }\n        return this;\n    }\n}\nexport class ImmortalReference {\n    constructor(object) {\n        this.object = object;\n    }\n    dispose() { }\n}\n/**\n * A map the manages the lifecycle of the values that it stores.\n */\nexport class DisposableMap {\n    constructor() {\n        this._store = new Map();\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    /**\n     * Disposes of all stored values and mark this object as disposed.\n     *\n     * Trying to use this object after it has been disposed of is an error.\n     */\n    dispose() {\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clearAndDisposeAll();\n    }\n    /**\n     * Disposes of all stored values and clear the map, but DO NOT mark this object as disposed.\n     */\n    clearAndDisposeAll() {\n        if (!this._store.size) {\n            return;\n        }\n        try {\n            dispose(this._store.values());\n        }\n        finally {\n            this._store.clear();\n        }\n    }\n    get(key) {\n        return this._store.get(key);\n    }\n    set(key, value, skipDisposeOnOverwrite = false) {\n        var _a;\n        if (this._isDisposed) {\n            console.warn(new Error('Trying to add a disposable to a DisposableMap that has already been disposed of. The added object will be leaked!').stack);\n        }\n        if (!skipDisposeOnOverwrite) {\n            (_a = this._store.get(key)) === null || _a === void 0 ? void 0 : _a.dispose();\n        }\n        this._store.set(key, value);\n    }\n    /**\n     * Delete the value stored for `key` from this map and also dispose of it.\n     */\n    deleteAndDispose(key) {\n        var _a;\n        (_a = this._store.get(key)) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._store.delete(key);\n    }\n    [Symbol.iterator]() {\n        return this._store[Symbol.iterator]();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass Node {\n    constructor(element) {\n        this.element = element;\n        this.next = Node.Undefined;\n        this.prev = Node.Undefined;\n    }\n}\nNode.Undefined = new Node(undefined);\nexport class LinkedList {\n    constructor() {\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    get size() {\n        return this._size;\n    }\n    isEmpty() {\n        return this._first === Node.Undefined;\n    }\n    clear() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            const next = node.next;\n            node.prev = Node.Undefined;\n            node.next = Node.Undefined;\n            node = next;\n        }\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    unshift(element) {\n        return this._insert(element, false);\n    }\n    push(element) {\n        return this._insert(element, true);\n    }\n    _insert(element, atTheEnd) {\n        const newNode = new Node(element);\n        if (this._first === Node.Undefined) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            // push\n            const oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            // unshift\n            const oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        this._size += 1;\n        let didRemove = false;\n        return () => {\n            if (!didRemove) {\n                didRemove = true;\n                this._remove(newNode);\n            }\n        };\n    }\n    shift() {\n        if (this._first === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._first.element;\n            this._remove(this._first);\n            return res;\n        }\n    }\n    pop() {\n        if (this._last === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._last.element;\n            this._remove(this._last);\n            return res;\n        }\n    }\n    _remove(node) {\n        if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n            // middle\n            const anchor = node.prev;\n            anchor.next = node.next;\n            node.next.prev = anchor;\n        }\n        else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n            // only node\n            this._first = Node.Undefined;\n            this._last = Node.Undefined;\n        }\n        else if (node.next === Node.Undefined) {\n            // last\n            this._last = this._last.prev;\n            this._last.next = Node.Undefined;\n        }\n        else if (node.prev === Node.Undefined) {\n            // first\n            this._first = this._first.next;\n            this._first.prev = Node.Undefined;\n        }\n        // done\n        this._size -= 1;\n    }\n    *[Symbol.iterator]() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            yield node.element;\n            node = node.next;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { memoize } from './decorators.js';\nexport class LinkedText {\n    constructor(nodes) {\n        this.nodes = nodes;\n    }\n    toString() {\n        return this.nodes.map(node => typeof node === 'string' ? node : node.label).join('');\n    }\n}\n__decorate([\n    memoize\n], LinkedText.prototype, \"toString\", null);\nconst LINK_REGEX = /\\[([^\\]]+)\\]\\(((?:https?:\\/\\/|command:|file:)[^\\)\\s]+)(?: ([\"'])(.+?)(\\3))?\\)/gi;\nexport function parseLinkedText(text) {\n    const result = [];\n    let index = 0;\n    let match;\n    while (match = LINK_REGEX.exec(text)) {\n        if (match.index - index > 0) {\n            result.push(text.substring(index, match.index));\n        }\n        const [, label, href, , title] = match;\n        if (title) {\n            result.push({ label, href, title });\n        }\n        else {\n            result.push({ label, href });\n        }\n        index = match.index + match[0].length;\n    }\n    if (index < text.length) {\n        result.push(text.substring(index));\n    }\n    return new LinkedText(result);\n}\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","GLOBSTAR","GLOB_SPLIT","PATH_REGEX","NO_PATH_REGEX","ALL_FORWARD_SLASHES","starsToRegExp","starCount","isLastPattern","concat","splitGlobAware","pattern","splitChar","segments","inBraces","inBrackets","curVal","char","push","parseRegExp","regEx","every","segment","previousSegmentWasGlobStar","forEach","index","length","braceVal","bracketVal","choices","braceRegExp","map","choice","join","escapeRegExpCharacters","res","T1","T2","T3","T3_2","T4","T5","CACHE","LRUCache","FALSE","NULL","parsePattern","arg1","options","trim","patternKey","trimForExclusions","match","parsedPattern","get","test","base","path","basename","endsWith","trivia1","substr","exec","slashBase","backslashBase","basenames","patterns","allBasenames","trivia2","parsedPatterns","aggregateBasenameMatches","slice","split","filter","patternsLength","i","n","withBasenames","find","allPaths","reduce","all","current","trivia3","trivia4and5","regExp","RegExp","lastIndex","error","toRegExp","set","wrapRelativePattern","arg2","wrappedPattern","isEqualOrParent","isLinux","ltrim","sep","targetPath","matchPathEnds","usingPosixSep","posix","nativePath","replace","nativePathEnd","targetPathEnd","hasSibling","parse","undefined","arguments","obj","rp","isRelativePattern","resultPattern","expression","Object","getOwnPropertyNames","when","name","matched","isThenable","requiresSiblings","parseExpressionPattern","some","resultExpression","resultPromises","this","resultPromise","extname","parsedExpression","basenamePatterns","aggregate","ch","charCodeAt","indexOf","aggregatedPatterns","hash","doHash","hashVal","numberHash","Array","isArray","arr","initialHashVal","item","keys","sort","key","stringHash","objectHash","b","booleanHash","val","s","leftRotate","bits","delta","fill","dest","count","byteLength","toHexString","bufferOrValue","bitsize","ArrayBuffer","from","Uint8Array","toString","padStart","leftPad","StringSHA1","constructor","_h0","_h1","_h2","_h3","_h4","_buff","_buffDV","DataView","buffer","_buffLen","_totalLen","_leftoverHighSurrogate","_finished","update","str","strLen","buff","charCode","offset","buffLen","leftoverHighSurrogate","codePoint","strings","nextCharCode","_push","_step","digest","_wrapUp","ml","setUint32","Math","floor","bigBlock32","_bigBlock32","data","j","getUint32","f","k","temp","a","c","d","HistoryNavigator","history","limit","_initialize","_limit","_onChange","getHistory","_elements","add","t","_history","delete","_navigator","previous","_currentPosition","first","last","isLast","isNowhere","has","_reduceToLimit","elements","ArrayNavigator","currentElement","Set","entry","isHotReloadEnabled","env","registerHotReloadHandler","handler","handlers","hotReloadHandlers","g","globalThis","$hotReload_applyNewExports","oldExports","h","registerGlobalHotReloadHandler","dispose","MarkdownString","isTrustedOrOptions","_a","_b","_c","illegalArgument","isTrusted","supportThemeIcons","supportHtml","appendText","newlineStyle","text","escapeIcons","_match","g1","repeat","appendMarkdown","appendCodeblock","langId","code","appendLink","target","label","title","_escape","String","r","charAt","isEmptyMarkdownString","oneOrMany","isMarkdownString","thing","markdownStringEqual","baseUri","isEqual","URI","escapeDoubleQuotes","input","removeMarkdownEscapes","parseHrefAndDimensions","href","dimensions","splitted","parameters","heightFromParams","widthFromParams","height","width","widthIsFinite","isFinite","parseInt","heightIsFinite","iconStartMarker","iconsRegex","ThemeIcon","iconNameExpression","iconModifierExpression","escapeIconsRegex","source","escaped","markdownEscapedIconsRegex","markdownEscapeEscapedIcons","stripIconsRegex","stripIcons","preWhitespace","postWhitespace","getCodiconAriaLabel","codiconName","_parseIconsRegex","iconNameCharacter","parseLabelWithIcons","iconOffsets","iconsOffset","pos","chars","substring","matchesFuzzyIconAware","query","enableSeparateSubstringMatching","matchesFuzzy","wordToMatchAgainstWithoutIconsTrimmed","leadingWhitespaceOffset","matches","iconOffset","start","end","IdGenerator","prefix","_prefix","_lastId","nextId","defaultGenerator","IME","_onDidChange","Emitter","onDidChange","event","_enabled","enabled","enable","fire","disable","Iterable","is","Symbol","iterator","_empty","freeze","single","element","empty","wrap","iterableOrElement","iterable","reverse","array","isEmpty","predicate","fn","_len","iterables","_key","reducer","initialValue","to","consume","atMost","Number","POSITIVE_INFINITY","consumed","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","create","define","keyCode","toLowerCase","keyCodeToStr","strToKeyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","EVENT_KEY_CODE_MAP","NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE","scanCodeIntToStr","scanCodeStrToInt","scanCodeLowerCaseStrToInt","IMMUTABLE_CODE_TO_KEY_CODE","IMMUTABLE_KEY_CODE_TO_CODE","KeyCodeUtils","KeyChord","firstPart","secondPart","mappings","seenKeyCode","seenScanCode","mapping","immutable","scanCode","scanCodeStr","keyCodeStr","eventKeyCode","vkey","usUserSettingsLabel","generalUserSettingsLabel","Error","fromString","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","toElectronAccelerator","ModifierLabelProvider","mac","windows","linux","modifierLabels","toLabel","OS","chords","keyLabelProvider","len","chord","keyLabel","_simpleAsString","UILabelProvider","ctrlKey","shiftKey","altKey","metaKey","separator","nls","comment","AriaLabelProvider","ElectronAcceleratorLabelProvider","UserSettingsLabelProvider","modifiers","labels","decodeKeybinding","keybinding","firstChord","secondChord","Keybinding","createSimpleKeybinding","ctrlCmd","winCtrl","KeyCodeChord","equals","other","isModifierKey","isDuplicateModifierCase","ResolvedChord","keyAriaLabel","ResolvedKeybinding","normalizeDriveLetter","isWindowsOS","isWindows","hasDriveLetter","toUpperCase","Lazy","executor","_didRun","_value","err","_error","rawValue","disposableTracker","trackDisposable","x","markAsDisposed","disposable","setParentOfDisposable","child","parent","setParent","markAsSingleton","singleton","isDisposable","arg","errors","AggregateError","combinedDisposable","disposables","toDisposable","children","setParentOfDisposables","self","createSingleCallFunction","DisposableStore","_toDispose","_isDisposed","clear","isDisposed","size","o","DISABLE_DISPOSED_WARNING","console","warn","stack","deleteAndLeak","Disposable","_store","_register","None","MutableDisposable","RefCountedDisposable","_disposable","_counter","acquire","release","ImmortalReference","object","DisposableMap","Map","clearAndDisposeAll","values","skipDisposeOnOverwrite","deleteAndDispose","Node","Undefined","prev","LinkedList","_first","_last","_size","node","unshift","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","shift","pop","anchor","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","LinkedText","nodes","memoize","prototype","LINK_REGEX","parseLinkedText"],"sourceRoot":""}