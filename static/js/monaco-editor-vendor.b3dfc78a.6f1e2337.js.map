{"version":3,"file":"static/js/monaco-editor-vendor.b3dfc78a.6f1e2337.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findDecorations.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/replaceAllCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/replacePattern.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findModel.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findOptionsWidget.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findState.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findWidget.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { MinimapPosition, OverviewRulerLane } from '../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { minimapFindMatch, overviewRulerFindMatchForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nexport class FindDecorations {\n    constructor(editor) {\n        this._editor = editor;\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationIds = [];\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n        this._startPosition = this._editor.getPosition();\n    }\n    dispose() {\n        this._editor.removeDecorations(this._allDecorations());\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationIds = [];\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n    }\n    reset() {\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationIds = [];\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n    }\n    getCount() {\n        return this._decorations.length;\n    }\n    /** @deprecated use getFindScopes to support multiple selections */\n    getFindScope() {\n        if (this._findScopeDecorationIds[0]) {\n            return this._editor.getModel().getDecorationRange(this._findScopeDecorationIds[0]);\n        }\n        return null;\n    }\n    getFindScopes() {\n        if (this._findScopeDecorationIds.length) {\n            const scopes = this._findScopeDecorationIds.map(findScopeDecorationId => this._editor.getModel().getDecorationRange(findScopeDecorationId)).filter(element => !!element);\n            if (scopes.length) {\n                return scopes;\n            }\n        }\n        return null;\n    }\n    getStartPosition() {\n        return this._startPosition;\n    }\n    setStartPosition(newStartPosition) {\n        this._startPosition = newStartPosition;\n        this.setCurrentFindMatch(null);\n    }\n    _getDecorationIndex(decorationId) {\n        const index = this._decorations.indexOf(decorationId);\n        if (index >= 0) {\n            return index + 1;\n        }\n        return 1;\n    }\n    getDecorationRangeAt(index) {\n        const decorationId = index < this._decorations.length ? this._decorations[index] : null;\n        if (decorationId) {\n            return this._editor.getModel().getDecorationRange(decorationId);\n        }\n        return null;\n    }\n    getCurrentMatchesPosition(desiredRange) {\n        const candidates = this._editor.getModel().getDecorationsInRange(desiredRange);\n        for (const candidate of candidates) {\n            const candidateOpts = candidate.options;\n            if (candidateOpts === FindDecorations._FIND_MATCH_DECORATION || candidateOpts === FindDecorations._CURRENT_FIND_MATCH_DECORATION) {\n                return this._getDecorationIndex(candidate.id);\n            }\n        }\n        // We don't know the current match position, so returns zero to show '?' in find widget\n        return 0;\n    }\n    setCurrentFindMatch(nextMatch) {\n        let newCurrentDecorationId = null;\n        let matchPosition = 0;\n        if (nextMatch) {\n            for (let i = 0, len = this._decorations.length; i < len; i++) {\n                const range = this._editor.getModel().getDecorationRange(this._decorations[i]);\n                if (nextMatch.equalsRange(range)) {\n                    newCurrentDecorationId = this._decorations[i];\n                    matchPosition = (i + 1);\n                    break;\n                }\n            }\n        }\n        if (this._highlightedDecorationId !== null || newCurrentDecorationId !== null) {\n            this._editor.changeDecorations((changeAccessor) => {\n                if (this._highlightedDecorationId !== null) {\n                    changeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._FIND_MATCH_DECORATION);\n                    this._highlightedDecorationId = null;\n                }\n                if (newCurrentDecorationId !== null) {\n                    this._highlightedDecorationId = newCurrentDecorationId;\n                    changeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._CURRENT_FIND_MATCH_DECORATION);\n                }\n                if (this._rangeHighlightDecorationId !== null) {\n                    changeAccessor.removeDecoration(this._rangeHighlightDecorationId);\n                    this._rangeHighlightDecorationId = null;\n                }\n                if (newCurrentDecorationId !== null) {\n                    let rng = this._editor.getModel().getDecorationRange(newCurrentDecorationId);\n                    if (rng.startLineNumber !== rng.endLineNumber && rng.endColumn === 1) {\n                        const lineBeforeEnd = rng.endLineNumber - 1;\n                        const lineBeforeEndMaxColumn = this._editor.getModel().getLineMaxColumn(lineBeforeEnd);\n                        rng = new Range(rng.startLineNumber, rng.startColumn, lineBeforeEnd, lineBeforeEndMaxColumn);\n                    }\n                    this._rangeHighlightDecorationId = changeAccessor.addDecoration(rng, FindDecorations._RANGE_HIGHLIGHT_DECORATION);\n                }\n            });\n        }\n        return matchPosition;\n    }\n    set(findMatches, findScopes) {\n        this._editor.changeDecorations((accessor) => {\n            let findMatchesOptions = FindDecorations._FIND_MATCH_DECORATION;\n            const newOverviewRulerApproximateDecorations = [];\n            if (findMatches.length > 1000) {\n                // we go into a mode where the overview ruler gets \"approximate\" decorations\n                // the reason is that the overview ruler paints all the decorations in the file and we don't want to cause freezes\n                findMatchesOptions = FindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION;\n                // approximate a distance in lines where matches should be merged\n                const lineCount = this._editor.getModel().getLineCount();\n                const height = this._editor.getLayoutInfo().height;\n                const approxPixelsPerLine = height / lineCount;\n                const mergeLinesDelta = Math.max(2, Math.ceil(3 / approxPixelsPerLine));\n                // merge decorations as much as possible\n                let prevStartLineNumber = findMatches[0].range.startLineNumber;\n                let prevEndLineNumber = findMatches[0].range.endLineNumber;\n                for (let i = 1, len = findMatches.length; i < len; i++) {\n                    const range = findMatches[i].range;\n                    if (prevEndLineNumber + mergeLinesDelta >= range.startLineNumber) {\n                        if (range.endLineNumber > prevEndLineNumber) {\n                            prevEndLineNumber = range.endLineNumber;\n                        }\n                    }\n                    else {\n                        newOverviewRulerApproximateDecorations.push({\n                            range: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\n                            options: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\n                        });\n                        prevStartLineNumber = range.startLineNumber;\n                        prevEndLineNumber = range.endLineNumber;\n                    }\n                }\n                newOverviewRulerApproximateDecorations.push({\n                    range: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\n                    options: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\n                });\n            }\n            // Find matches\n            const newFindMatchesDecorations = new Array(findMatches.length);\n            for (let i = 0, len = findMatches.length; i < len; i++) {\n                newFindMatchesDecorations[i] = {\n                    range: findMatches[i].range,\n                    options: findMatchesOptions\n                };\n            }\n            this._decorations = accessor.deltaDecorations(this._decorations, newFindMatchesDecorations);\n            // Overview ruler approximate decorations\n            this._overviewRulerApproximateDecorations = accessor.deltaDecorations(this._overviewRulerApproximateDecorations, newOverviewRulerApproximateDecorations);\n            // Range highlight\n            if (this._rangeHighlightDecorationId) {\n                accessor.removeDecoration(this._rangeHighlightDecorationId);\n                this._rangeHighlightDecorationId = null;\n            }\n            // Find scope\n            if (this._findScopeDecorationIds.length) {\n                this._findScopeDecorationIds.forEach(findScopeDecorationId => accessor.removeDecoration(findScopeDecorationId));\n                this._findScopeDecorationIds = [];\n            }\n            if (findScopes === null || findScopes === void 0 ? void 0 : findScopes.length) {\n                this._findScopeDecorationIds = findScopes.map(findScope => accessor.addDecoration(findScope, FindDecorations._FIND_SCOPE_DECORATION));\n            }\n        });\n    }\n    matchBeforePosition(position) {\n        if (this._decorations.length === 0) {\n            return null;\n        }\n        for (let i = this._decorations.length - 1; i >= 0; i--) {\n            const decorationId = this._decorations[i];\n            const r = this._editor.getModel().getDecorationRange(decorationId);\n            if (!r || r.endLineNumber > position.lineNumber) {\n                continue;\n            }\n            if (r.endLineNumber < position.lineNumber) {\n                return r;\n            }\n            if (r.endColumn > position.column) {\n                continue;\n            }\n            return r;\n        }\n        return this._editor.getModel().getDecorationRange(this._decorations[this._decorations.length - 1]);\n    }\n    matchAfterPosition(position) {\n        if (this._decorations.length === 0) {\n            return null;\n        }\n        for (let i = 0, len = this._decorations.length; i < len; i++) {\n            const decorationId = this._decorations[i];\n            const r = this._editor.getModel().getDecorationRange(decorationId);\n            if (!r || r.startLineNumber < position.lineNumber) {\n                continue;\n            }\n            if (r.startLineNumber > position.lineNumber) {\n                return r;\n            }\n            if (r.startColumn < position.column) {\n                continue;\n            }\n            return r;\n        }\n        return this._editor.getModel().getDecorationRange(this._decorations[0]);\n    }\n    _allDecorations() {\n        let result = [];\n        result = result.concat(this._decorations);\n        result = result.concat(this._overviewRulerApproximateDecorations);\n        if (this._findScopeDecorationIds.length) {\n            result.push(...this._findScopeDecorationIds);\n        }\n        if (this._rangeHighlightDecorationId) {\n            result.push(this._rangeHighlightDecorationId);\n        }\n        return result;\n    }\n}\nFindDecorations._CURRENT_FIND_MATCH_DECORATION = ModelDecorationOptions.register({\n    description: 'current-find-match',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    zIndex: 13,\n    className: 'currentFindMatch',\n    showIfCollapsed: true,\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerFindMatchForeground),\n        position: OverviewRulerLane.Center\n    },\n    minimap: {\n        color: themeColorFromId(minimapFindMatch),\n        position: MinimapPosition.Inline\n    }\n});\nFindDecorations._FIND_MATCH_DECORATION = ModelDecorationOptions.register({\n    description: 'find-match',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    zIndex: 10,\n    className: 'findMatch',\n    showIfCollapsed: true,\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerFindMatchForeground),\n        position: OverviewRulerLane.Center\n    },\n    minimap: {\n        color: themeColorFromId(minimapFindMatch),\n        position: MinimapPosition.Inline\n    }\n});\nFindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION = ModelDecorationOptions.register({\n    description: 'find-match-no-overview',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    className: 'findMatch',\n    showIfCollapsed: true\n});\nFindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION = ModelDecorationOptions.register({\n    description: 'find-match-only-overview',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerFindMatchForeground),\n        position: OverviewRulerLane.Center\n    }\n});\nFindDecorations._RANGE_HIGHLIGHT_DECORATION = ModelDecorationOptions.register({\n    description: 'find-range-highlight',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    className: 'rangeHighlight',\n    isWholeLine: true\n});\nFindDecorations._FIND_SCOPE_DECORATION = ModelDecorationOptions.register({\n    description: 'find-scope',\n    className: 'findScope',\n    isWholeLine: true\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nexport class ReplaceAllCommand {\n    constructor(editorSelection, ranges, replaceStrings) {\n        this._editorSelection = editorSelection;\n        this._ranges = ranges;\n        this._replaceStrings = replaceStrings;\n        this._trackedEditorSelectionId = null;\n    }\n    getEditOperations(model, builder) {\n        if (this._ranges.length > 0) {\n            // Collect all edit operations\n            const ops = [];\n            for (let i = 0; i < this._ranges.length; i++) {\n                ops.push({\n                    range: this._ranges[i],\n                    text: this._replaceStrings[i]\n                });\n            }\n            // Sort them in ascending order by range starts\n            ops.sort((o1, o2) => {\n                return Range.compareRangesUsingStarts(o1.range, o2.range);\n            });\n            // Merge operations that touch each other\n            const resultOps = [];\n            let previousOp = ops[0];\n            for (let i = 1; i < ops.length; i++) {\n                if (previousOp.range.endLineNumber === ops[i].range.startLineNumber && previousOp.range.endColumn === ops[i].range.startColumn) {\n                    // These operations are one after another and can be merged\n                    previousOp.range = previousOp.range.plusRange(ops[i].range);\n                    previousOp.text = previousOp.text + ops[i].text;\n                }\n                else {\n                    resultOps.push(previousOp);\n                    previousOp = ops[i];\n                }\n            }\n            resultOps.push(previousOp);\n            for (const op of resultOps) {\n                builder.addEditOperation(op.range, op.text);\n            }\n        }\n        this._trackedEditorSelectionId = builder.trackSelection(this._editorSelection);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this._trackedEditorSelectionId);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { buildReplaceStringWithCasePreserved } from '../../../../base/common/search.js';\n/**\n * Assigned when the replace pattern is entirely static.\n */\nclass StaticValueReplacePattern {\n    constructor(staticValue) {\n        this.staticValue = staticValue;\n        this.kind = 0 /* ReplacePatternKind.StaticValue */;\n    }\n}\n/**\n * Assigned when the replace pattern has replacement patterns.\n */\nclass DynamicPiecesReplacePattern {\n    constructor(pieces) {\n        this.pieces = pieces;\n        this.kind = 1 /* ReplacePatternKind.DynamicPieces */;\n    }\n}\nexport class ReplacePattern {\n    static fromStaticValue(value) {\n        return new ReplacePattern([ReplacePiece.staticValue(value)]);\n    }\n    get hasReplacementPatterns() {\n        return (this._state.kind === 1 /* ReplacePatternKind.DynamicPieces */);\n    }\n    constructor(pieces) {\n        if (!pieces || pieces.length === 0) {\n            this._state = new StaticValueReplacePattern('');\n        }\n        else if (pieces.length === 1 && pieces[0].staticValue !== null) {\n            this._state = new StaticValueReplacePattern(pieces[0].staticValue);\n        }\n        else {\n            this._state = new DynamicPiecesReplacePattern(pieces);\n        }\n    }\n    buildReplaceString(matches, preserveCase) {\n        if (this._state.kind === 0 /* ReplacePatternKind.StaticValue */) {\n            if (preserveCase) {\n                return buildReplaceStringWithCasePreserved(matches, this._state.staticValue);\n            }\n            else {\n                return this._state.staticValue;\n            }\n        }\n        let result = '';\n        for (let i = 0, len = this._state.pieces.length; i < len; i++) {\n            const piece = this._state.pieces[i];\n            if (piece.staticValue !== null) {\n                // static value ReplacePiece\n                result += piece.staticValue;\n                continue;\n            }\n            // match index ReplacePiece\n            let match = ReplacePattern._substitute(piece.matchIndex, matches);\n            if (piece.caseOps !== null && piece.caseOps.length > 0) {\n                const repl = [];\n                const lenOps = piece.caseOps.length;\n                let opIdx = 0;\n                for (let idx = 0, len = match.length; idx < len; idx++) {\n                    if (opIdx >= lenOps) {\n                        repl.push(match.slice(idx));\n                        break;\n                    }\n                    switch (piece.caseOps[opIdx]) {\n                        case 'U':\n                            repl.push(match[idx].toUpperCase());\n                            break;\n                        case 'u':\n                            repl.push(match[idx].toUpperCase());\n                            opIdx++;\n                            break;\n                        case 'L':\n                            repl.push(match[idx].toLowerCase());\n                            break;\n                        case 'l':\n                            repl.push(match[idx].toLowerCase());\n                            opIdx++;\n                            break;\n                        default:\n                            repl.push(match[idx]);\n                    }\n                }\n                match = repl.join('');\n            }\n            result += match;\n        }\n        return result;\n    }\n    static _substitute(matchIndex, matches) {\n        if (matches === null) {\n            return '';\n        }\n        if (matchIndex === 0) {\n            return matches[0];\n        }\n        let remainder = '';\n        while (matchIndex > 0) {\n            if (matchIndex < matches.length) {\n                // A match can be undefined\n                const match = (matches[matchIndex] || '');\n                return match + remainder;\n            }\n            remainder = String(matchIndex % 10) + remainder;\n            matchIndex = Math.floor(matchIndex / 10);\n        }\n        return '$' + remainder;\n    }\n}\n/**\n * A replace piece can either be a static string or an index to a specific match.\n */\nexport class ReplacePiece {\n    static staticValue(value) {\n        return new ReplacePiece(value, -1, null);\n    }\n    static caseOps(index, caseOps) {\n        return new ReplacePiece(null, index, caseOps);\n    }\n    constructor(staticValue, matchIndex, caseOps) {\n        this.staticValue = staticValue;\n        this.matchIndex = matchIndex;\n        if (!caseOps || caseOps.length === 0) {\n            this.caseOps = null;\n        }\n        else {\n            this.caseOps = caseOps.slice(0);\n        }\n    }\n}\nclass ReplacePieceBuilder {\n    constructor(source) {\n        this._source = source;\n        this._lastCharIndex = 0;\n        this._result = [];\n        this._resultLen = 0;\n        this._currentStaticPiece = '';\n    }\n    emitUnchanged(toCharIndex) {\n        this._emitStatic(this._source.substring(this._lastCharIndex, toCharIndex));\n        this._lastCharIndex = toCharIndex;\n    }\n    emitStatic(value, toCharIndex) {\n        this._emitStatic(value);\n        this._lastCharIndex = toCharIndex;\n    }\n    _emitStatic(value) {\n        if (value.length === 0) {\n            return;\n        }\n        this._currentStaticPiece += value;\n    }\n    emitMatchIndex(index, toCharIndex, caseOps) {\n        if (this._currentStaticPiece.length !== 0) {\n            this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\n            this._currentStaticPiece = '';\n        }\n        this._result[this._resultLen++] = ReplacePiece.caseOps(index, caseOps);\n        this._lastCharIndex = toCharIndex;\n    }\n    finalize() {\n        this.emitUnchanged(this._source.length);\n        if (this._currentStaticPiece.length !== 0) {\n            this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\n            this._currentStaticPiece = '';\n        }\n        return new ReplacePattern(this._result);\n    }\n}\n/**\n * \\n\t\t\t=> inserts a LF\n * \\t\t\t\t=> inserts a TAB\n * \\\\\t\t\t=> inserts a \"\\\".\n * \\u\t\t\t=> upper-cases one character in a match.\n * \\U\t\t\t=> upper-cases ALL remaining characters in a match.\n * \\l\t\t\t=> lower-cases one character in a match.\n * \\L\t\t\t=> lower-cases ALL remaining characters in a match.\n * $$\t\t\t=> inserts a \"$\".\n * $& and $0\t=> inserts the matched substring.\n * $n\t\t\t=> Where n is a non-negative integer lesser than 100, inserts the nth parenthesized submatch string\n * everything else stays untouched\n *\n * Also see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter\n */\nexport function parseReplaceString(replaceString) {\n    if (!replaceString || replaceString.length === 0) {\n        return new ReplacePattern(null);\n    }\n    const caseOps = [];\n    const result = new ReplacePieceBuilder(replaceString);\n    for (let i = 0, len = replaceString.length; i < len; i++) {\n        const chCode = replaceString.charCodeAt(i);\n        if (chCode === 92 /* CharCode.Backslash */) {\n            // move to next char\n            i++;\n            if (i >= len) {\n                // string ends with a \\\n                break;\n            }\n            const nextChCode = replaceString.charCodeAt(i);\n            // let replaceWithCharacter: string | null = null;\n            switch (nextChCode) {\n                case 92 /* CharCode.Backslash */:\n                    // \\\\ => inserts a \"\\\"\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('\\\\', i + 1);\n                    break;\n                case 110 /* CharCode.n */:\n                    // \\n => inserts a LF\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('\\n', i + 1);\n                    break;\n                case 116 /* CharCode.t */:\n                    // \\t => inserts a TAB\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('\\t', i + 1);\n                    break;\n                // Case modification of string replacements, patterned after Boost, but only applied\n                // to the replacement text, not subsequent content.\n                case 117 /* CharCode.u */:\n                // \\u => upper-cases one character.\n                case 85 /* CharCode.U */:\n                // \\U => upper-cases ALL following characters.\n                case 108 /* CharCode.l */:\n                // \\l => lower-cases one character.\n                case 76 /* CharCode.L */:\n                    // \\L => lower-cases ALL following characters.\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('', i + 1);\n                    caseOps.push(String.fromCharCode(nextChCode));\n                    break;\n            }\n            continue;\n        }\n        if (chCode === 36 /* CharCode.DollarSign */) {\n            // move to next char\n            i++;\n            if (i >= len) {\n                // string ends with a $\n                break;\n            }\n            const nextChCode = replaceString.charCodeAt(i);\n            if (nextChCode === 36 /* CharCode.DollarSign */) {\n                // $$ => inserts a \"$\"\n                result.emitUnchanged(i - 1);\n                result.emitStatic('$', i + 1);\n                continue;\n            }\n            if (nextChCode === 48 /* CharCode.Digit0 */ || nextChCode === 38 /* CharCode.Ampersand */) {\n                // $& and $0 => inserts the matched substring.\n                result.emitUnchanged(i - 1);\n                result.emitMatchIndex(0, i + 1, caseOps);\n                caseOps.length = 0;\n                continue;\n            }\n            if (49 /* CharCode.Digit1 */ <= nextChCode && nextChCode <= 57 /* CharCode.Digit9 */) {\n                // $n\n                let matchIndex = nextChCode - 48 /* CharCode.Digit0 */;\n                // peek next char to probe for $nn\n                if (i + 1 < len) {\n                    const nextNextChCode = replaceString.charCodeAt(i + 1);\n                    if (48 /* CharCode.Digit0 */ <= nextNextChCode && nextNextChCode <= 57 /* CharCode.Digit9 */) {\n                        // $nn\n                        // move to next char\n                        i++;\n                        matchIndex = matchIndex * 10 + (nextNextChCode - 48 /* CharCode.Digit0 */);\n                        result.emitUnchanged(i - 2);\n                        result.emitMatchIndex(matchIndex, i + 1, caseOps);\n                        caseOps.length = 0;\n                        continue;\n                    }\n                }\n                result.emitUnchanged(i - 1);\n                result.emitMatchIndex(matchIndex, i + 1, caseOps);\n                caseOps.length = 0;\n                continue;\n            }\n        }\n    }\n    return result.finalize();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { findFirstInSorted } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler, TimeoutTimer } from '../../../../base/common/async.js';\nimport { DisposableStore, dispose } from '../../../../base/common/lifecycle.js';\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection } from '../../../common/commands/replaceCommand.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { SearchParams } from '../../../common/model/textModelSearch.js';\nimport { FindDecorations } from './findDecorations.js';\nimport { ReplaceAllCommand } from './replaceAllCommand.js';\nimport { parseReplaceString, ReplacePattern } from './replacePattern.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nexport const CONTEXT_FIND_WIDGET_VISIBLE = new RawContextKey('findWidgetVisible', false);\nexport const CONTEXT_FIND_WIDGET_NOT_VISIBLE = CONTEXT_FIND_WIDGET_VISIBLE.toNegated();\n// Keep ContextKey use of 'Focussed' to not break when clauses\nexport const CONTEXT_FIND_INPUT_FOCUSED = new RawContextKey('findInputFocussed', false);\nexport const CONTEXT_REPLACE_INPUT_FOCUSED = new RawContextKey('replaceInputFocussed', false);\nexport const ToggleCaseSensitiveKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 33 /* KeyCode.KeyC */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 33 /* KeyCode.KeyC */ }\n};\nexport const ToggleWholeWordKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 53 /* KeyCode.KeyW */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 53 /* KeyCode.KeyW */ }\n};\nexport const ToggleRegexKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 48 /* KeyCode.KeyR */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 48 /* KeyCode.KeyR */ }\n};\nexport const ToggleSearchScopeKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 42 /* KeyCode.KeyL */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 42 /* KeyCode.KeyL */ }\n};\nexport const TogglePreserveCaseKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 46 /* KeyCode.KeyP */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 46 /* KeyCode.KeyP */ }\n};\nexport const FIND_IDS = {\n    StartFindAction: 'actions.find',\n    StartFindWithSelection: 'actions.findWithSelection',\n    StartFindWithArgs: 'editor.actions.findWithArgs',\n    NextMatchFindAction: 'editor.action.nextMatchFindAction',\n    PreviousMatchFindAction: 'editor.action.previousMatchFindAction',\n    GoToMatchFindAction: 'editor.action.goToMatchFindAction',\n    NextSelectionMatchFindAction: 'editor.action.nextSelectionMatchFindAction',\n    PreviousSelectionMatchFindAction: 'editor.action.previousSelectionMatchFindAction',\n    StartFindReplaceAction: 'editor.action.startFindReplaceAction',\n    CloseFindWidgetCommand: 'closeFindWidget',\n    ToggleCaseSensitiveCommand: 'toggleFindCaseSensitive',\n    ToggleWholeWordCommand: 'toggleFindWholeWord',\n    ToggleRegexCommand: 'toggleFindRegex',\n    ToggleSearchScopeCommand: 'toggleFindInSelection',\n    TogglePreserveCaseCommand: 'togglePreserveCase',\n    ReplaceOneAction: 'editor.action.replaceOne',\n    ReplaceAllAction: 'editor.action.replaceAll',\n    SelectAllMatchesAction: 'editor.action.selectAllMatches'\n};\nexport const MATCHES_LIMIT = 19999;\nconst RESEARCH_DELAY = 240;\nexport class FindModelBoundToEditorModel {\n    constructor(editor, state) {\n        this._toDispose = new DisposableStore();\n        this._editor = editor;\n        this._state = state;\n        this._isDisposed = false;\n        this._startSearchingTimer = new TimeoutTimer();\n        this._decorations = new FindDecorations(editor);\n        this._toDispose.add(this._decorations);\n        this._updateDecorationsScheduler = new RunOnceScheduler(() => this.research(false), 100);\n        this._toDispose.add(this._updateDecorationsScheduler);\n        this._toDispose.add(this._editor.onDidChangeCursorPosition((e) => {\n            if (e.reason === 3 /* CursorChangeReason.Explicit */\n                || e.reason === 5 /* CursorChangeReason.Undo */\n                || e.reason === 6 /* CursorChangeReason.Redo */) {\n                this._decorations.setStartPosition(this._editor.getPosition());\n            }\n        }));\n        this._ignoreModelContentChanged = false;\n        this._toDispose.add(this._editor.onDidChangeModelContent((e) => {\n            if (this._ignoreModelContentChanged) {\n                return;\n            }\n            if (e.isFlush) {\n                // a model.setValue() was called\n                this._decorations.reset();\n            }\n            this._decorations.setStartPosition(this._editor.getPosition());\n            this._updateDecorationsScheduler.schedule();\n        }));\n        this._toDispose.add(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this.research(false, this._state.searchScope);\n    }\n    dispose() {\n        this._isDisposed = true;\n        dispose(this._startSearchingTimer);\n        this._toDispose.dispose();\n    }\n    _onStateChanged(e) {\n        if (this._isDisposed) {\n            // The find model is disposed during a find state changed event\n            return;\n        }\n        if (!this._editor.hasModel()) {\n            // The find model will be disposed momentarily\n            return;\n        }\n        if (e.searchString || e.isReplaceRevealed || e.isRegex || e.wholeWord || e.matchCase || e.searchScope) {\n            const model = this._editor.getModel();\n            if (model.isTooLargeForSyncing()) {\n                this._startSearchingTimer.cancel();\n                this._startSearchingTimer.setIfNotSet(() => {\n                    if (e.searchScope) {\n                        this.research(e.moveCursor, this._state.searchScope);\n                    }\n                    else {\n                        this.research(e.moveCursor);\n                    }\n                }, RESEARCH_DELAY);\n            }\n            else {\n                if (e.searchScope) {\n                    this.research(e.moveCursor, this._state.searchScope);\n                }\n                else {\n                    this.research(e.moveCursor);\n                }\n            }\n        }\n    }\n    static _getSearchRange(model, findScope) {\n        // If we have set now or before a find scope, use it for computing the search range\n        if (findScope) {\n            return findScope;\n        }\n        return model.getFullModelRange();\n    }\n    research(moveCursor, newFindScope) {\n        let findScopes = null;\n        if (typeof newFindScope !== 'undefined') {\n            if (newFindScope !== null) {\n                if (!Array.isArray(newFindScope)) {\n                    findScopes = [newFindScope];\n                }\n                else {\n                    findScopes = newFindScope;\n                }\n            }\n        }\n        else {\n            findScopes = this._decorations.getFindScopes();\n        }\n        if (findScopes !== null) {\n            findScopes = findScopes.map(findScope => {\n                if (findScope.startLineNumber !== findScope.endLineNumber) {\n                    let endLineNumber = findScope.endLineNumber;\n                    if (findScope.endColumn === 1) {\n                        endLineNumber = endLineNumber - 1;\n                    }\n                    return new Range(findScope.startLineNumber, 1, endLineNumber, this._editor.getModel().getLineMaxColumn(endLineNumber));\n                }\n                return findScope;\n            });\n        }\n        const findMatches = this._findMatches(findScopes, false, MATCHES_LIMIT);\n        this._decorations.set(findMatches, findScopes);\n        const editorSelection = this._editor.getSelection();\n        let currentMatchesPosition = this._decorations.getCurrentMatchesPosition(editorSelection);\n        if (currentMatchesPosition === 0 && findMatches.length > 0) {\n            // current selection is not on top of a match\n            // try to find its nearest result from the top of the document\n            const matchAfterSelection = findFirstInSorted(findMatches.map(match => match.range), range => Range.compareRangesUsingStarts(range, editorSelection) >= 0);\n            currentMatchesPosition = matchAfterSelection > 0 ? matchAfterSelection - 1 + 1 /** match position is one based */ : currentMatchesPosition;\n        }\n        this._state.changeMatchInfo(currentMatchesPosition, this._decorations.getCount(), undefined);\n        if (moveCursor && this._editor.getOption(39 /* EditorOption.find */).cursorMoveOnType) {\n            this._moveToNextMatch(this._decorations.getStartPosition());\n        }\n    }\n    _hasMatches() {\n        return (this._state.matchesCount > 0);\n    }\n    _cannotFind() {\n        if (!this._hasMatches()) {\n            const findScope = this._decorations.getFindScope();\n            if (findScope) {\n                // Reveal the selection so user is reminded that 'selection find' is on.\n                this._editor.revealRangeInCenterIfOutsideViewport(findScope, 0 /* ScrollType.Smooth */);\n            }\n            return true;\n        }\n        return false;\n    }\n    _setCurrentFindMatch(match) {\n        const matchesPosition = this._decorations.setCurrentFindMatch(match);\n        this._state.changeMatchInfo(matchesPosition, this._decorations.getCount(), match);\n        this._editor.setSelection(match);\n        this._editor.revealRangeInCenterIfOutsideViewport(match, 0 /* ScrollType.Smooth */);\n    }\n    _prevSearchPosition(before) {\n        const isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0\n            || this._state.searchString.indexOf('$') >= 0);\n        let { lineNumber, column } = before;\n        const model = this._editor.getModel();\n        if (isUsingLineStops || column === 1) {\n            if (lineNumber === 1) {\n                lineNumber = model.getLineCount();\n            }\n            else {\n                lineNumber--;\n            }\n            column = model.getLineMaxColumn(lineNumber);\n        }\n        else {\n            column--;\n        }\n        return new Position(lineNumber, column);\n    }\n    _moveToPrevMatch(before, isRecursed = false) {\n        if (!this._state.canNavigateBack()) {\n            // we are beyond the first matched find result\n            // instead of doing nothing, we should refocus the first item\n            const nextMatchRange = this._decorations.matchAfterPosition(before);\n            if (nextMatchRange) {\n                this._setCurrentFindMatch(nextMatchRange);\n            }\n            return;\n        }\n        if (this._decorations.getCount() < MATCHES_LIMIT) {\n            let prevMatchRange = this._decorations.matchBeforePosition(before);\n            if (prevMatchRange && prevMatchRange.isEmpty() && prevMatchRange.getStartPosition().equals(before)) {\n                before = this._prevSearchPosition(before);\n                prevMatchRange = this._decorations.matchBeforePosition(before);\n            }\n            if (prevMatchRange) {\n                this._setCurrentFindMatch(prevMatchRange);\n            }\n            return;\n        }\n        if (this._cannotFind()) {\n            return;\n        }\n        const findScope = this._decorations.getFindScope();\n        const searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\n        // ...(----)...|...\n        if (searchRange.getEndPosition().isBefore(before)) {\n            before = searchRange.getEndPosition();\n        }\n        // ...|...(----)...\n        if (before.isBefore(searchRange.getStartPosition())) {\n            before = searchRange.getEndPosition();\n        }\n        const { lineNumber, column } = before;\n        const model = this._editor.getModel();\n        let position = new Position(lineNumber, column);\n        let prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(126 /* EditorOption.wordSeparators */) : null, false);\n        if (prevMatch && prevMatch.range.isEmpty() && prevMatch.range.getStartPosition().equals(position)) {\n            // Looks like we're stuck at this position, unacceptable!\n            position = this._prevSearchPosition(position);\n            prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(126 /* EditorOption.wordSeparators */) : null, false);\n        }\n        if (!prevMatch) {\n            // there is precisely one match and selection is on top of it\n            return;\n        }\n        if (!isRecursed && !searchRange.containsRange(prevMatch.range)) {\n            return this._moveToPrevMatch(prevMatch.range.getStartPosition(), true);\n        }\n        this._setCurrentFindMatch(prevMatch.range);\n    }\n    moveToPrevMatch() {\n        this._moveToPrevMatch(this._editor.getSelection().getStartPosition());\n    }\n    _nextSearchPosition(after) {\n        const isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0\n            || this._state.searchString.indexOf('$') >= 0);\n        let { lineNumber, column } = after;\n        const model = this._editor.getModel();\n        if (isUsingLineStops || column === model.getLineMaxColumn(lineNumber)) {\n            if (lineNumber === model.getLineCount()) {\n                lineNumber = 1;\n            }\n            else {\n                lineNumber++;\n            }\n            column = 1;\n        }\n        else {\n            column++;\n        }\n        return new Position(lineNumber, column);\n    }\n    _moveToNextMatch(after) {\n        if (!this._state.canNavigateForward()) {\n            // we are beyond the last matched find result\n            // instead of doing nothing, we should refocus the last item\n            const prevMatchRange = this._decorations.matchBeforePosition(after);\n            if (prevMatchRange) {\n                this._setCurrentFindMatch(prevMatchRange);\n            }\n            return;\n        }\n        if (this._decorations.getCount() < MATCHES_LIMIT) {\n            let nextMatchRange = this._decorations.matchAfterPosition(after);\n            if (nextMatchRange && nextMatchRange.isEmpty() && nextMatchRange.getStartPosition().equals(after)) {\n                // Looks like we're stuck at this position, unacceptable!\n                after = this._nextSearchPosition(after);\n                nextMatchRange = this._decorations.matchAfterPosition(after);\n            }\n            if (nextMatchRange) {\n                this._setCurrentFindMatch(nextMatchRange);\n            }\n            return;\n        }\n        const nextMatch = this._getNextMatch(after, false, true);\n        if (nextMatch) {\n            this._setCurrentFindMatch(nextMatch.range);\n        }\n    }\n    _getNextMatch(after, captureMatches, forceMove, isRecursed = false) {\n        if (this._cannotFind()) {\n            return null;\n        }\n        const findScope = this._decorations.getFindScope();\n        const searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\n        // ...(----)...|...\n        if (searchRange.getEndPosition().isBefore(after)) {\n            after = searchRange.getStartPosition();\n        }\n        // ...|...(----)...\n        if (after.isBefore(searchRange.getStartPosition())) {\n            after = searchRange.getStartPosition();\n        }\n        const { lineNumber, column } = after;\n        const model = this._editor.getModel();\n        let position = new Position(lineNumber, column);\n        let nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(126 /* EditorOption.wordSeparators */) : null, captureMatches);\n        if (forceMove && nextMatch && nextMatch.range.isEmpty() && nextMatch.range.getStartPosition().equals(position)) {\n            // Looks like we're stuck at this position, unacceptable!\n            position = this._nextSearchPosition(position);\n            nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(126 /* EditorOption.wordSeparators */) : null, captureMatches);\n        }\n        if (!nextMatch) {\n            // there is precisely one match and selection is on top of it\n            return null;\n        }\n        if (!isRecursed && !searchRange.containsRange(nextMatch.range)) {\n            return this._getNextMatch(nextMatch.range.getEndPosition(), captureMatches, forceMove, true);\n        }\n        return nextMatch;\n    }\n    moveToNextMatch() {\n        this._moveToNextMatch(this._editor.getSelection().getEndPosition());\n    }\n    _moveToMatch(index) {\n        const decorationRange = this._decorations.getDecorationRangeAt(index);\n        if (decorationRange) {\n            this._setCurrentFindMatch(decorationRange);\n        }\n    }\n    moveToMatch(index) {\n        this._moveToMatch(index);\n    }\n    _getReplacePattern() {\n        if (this._state.isRegex) {\n            return parseReplaceString(this._state.replaceString);\n        }\n        return ReplacePattern.fromStaticValue(this._state.replaceString);\n    }\n    replace() {\n        if (!this._hasMatches()) {\n            return;\n        }\n        const replacePattern = this._getReplacePattern();\n        const selection = this._editor.getSelection();\n        const nextMatch = this._getNextMatch(selection.getStartPosition(), true, false);\n        if (nextMatch) {\n            if (selection.equalsRange(nextMatch.range)) {\n                // selection sits on a find match => replace it!\n                const replaceString = replacePattern.buildReplaceString(nextMatch.matches, this._state.preserveCase);\n                const command = new ReplaceCommand(selection, replaceString);\n                this._executeEditorCommand('replace', command);\n                this._decorations.setStartPosition(new Position(selection.startLineNumber, selection.startColumn + replaceString.length));\n                this.research(true);\n            }\n            else {\n                this._decorations.setStartPosition(this._editor.getPosition());\n                this._setCurrentFindMatch(nextMatch.range);\n            }\n        }\n    }\n    _findMatches(findScopes, captureMatches, limitResultCount) {\n        const searchRanges = (findScopes || [null]).map((scope) => FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), scope));\n        return this._editor.getModel().findMatches(this._state.searchString, searchRanges, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(126 /* EditorOption.wordSeparators */) : null, captureMatches, limitResultCount);\n    }\n    replaceAll() {\n        if (!this._hasMatches()) {\n            return;\n        }\n        const findScopes = this._decorations.getFindScopes();\n        if (findScopes === null && this._state.matchesCount >= MATCHES_LIMIT) {\n            // Doing a replace on the entire file that is over ${MATCHES_LIMIT} matches\n            this._largeReplaceAll();\n        }\n        else {\n            this._regularReplaceAll(findScopes);\n        }\n        this.research(false);\n    }\n    _largeReplaceAll() {\n        const searchParams = new SearchParams(this._state.searchString, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(126 /* EditorOption.wordSeparators */) : null);\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return;\n        }\n        let searchRegex = searchData.regex;\n        if (!searchRegex.multiline) {\n            let mod = 'mu';\n            if (searchRegex.ignoreCase) {\n                mod += 'i';\n            }\n            if (searchRegex.global) {\n                mod += 'g';\n            }\n            searchRegex = new RegExp(searchRegex.source, mod);\n        }\n        const model = this._editor.getModel();\n        const modelText = model.getValue(1 /* EndOfLinePreference.LF */);\n        const fullModelRange = model.getFullModelRange();\n        const replacePattern = this._getReplacePattern();\n        let resultText;\n        const preserveCase = this._state.preserveCase;\n        if (replacePattern.hasReplacementPatterns || preserveCase) {\n            resultText = modelText.replace(searchRegex, function () {\n                return replacePattern.buildReplaceString(arguments, preserveCase);\n            });\n        }\n        else {\n            resultText = modelText.replace(searchRegex, replacePattern.buildReplaceString(null, preserveCase));\n        }\n        const command = new ReplaceCommandThatPreservesSelection(fullModelRange, resultText, this._editor.getSelection());\n        this._executeEditorCommand('replaceAll', command);\n    }\n    _regularReplaceAll(findScopes) {\n        const replacePattern = this._getReplacePattern();\n        // Get all the ranges (even more than the highlighted ones)\n        const matches = this._findMatches(findScopes, replacePattern.hasReplacementPatterns || this._state.preserveCase, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n        const replaceStrings = [];\n        for (let i = 0, len = matches.length; i < len; i++) {\n            replaceStrings[i] = replacePattern.buildReplaceString(matches[i].matches, this._state.preserveCase);\n        }\n        const command = new ReplaceAllCommand(this._editor.getSelection(), matches.map(m => m.range), replaceStrings);\n        this._executeEditorCommand('replaceAll', command);\n    }\n    selectAllMatches() {\n        if (!this._hasMatches()) {\n            return;\n        }\n        const findScopes = this._decorations.getFindScopes();\n        // Get all the ranges (even more than the highlighted ones)\n        const matches = this._findMatches(findScopes, false, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n        let selections = matches.map(m => new Selection(m.range.startLineNumber, m.range.startColumn, m.range.endLineNumber, m.range.endColumn));\n        // If one of the ranges is the editor selection, then maintain it as primary\n        const editorSelection = this._editor.getSelection();\n        for (let i = 0, len = selections.length; i < len; i++) {\n            const sel = selections[i];\n            if (sel.equalsRange(editorSelection)) {\n                selections = [editorSelection].concat(selections.slice(0, i)).concat(selections.slice(i + 1));\n                break;\n            }\n        }\n        this._editor.setSelections(selections);\n    }\n    _executeEditorCommand(source, command) {\n        try {\n            this._ignoreModelContentChanged = true;\n            this._editor.pushUndoStop();\n            this._editor.executeCommand(source, command);\n            this._editor.pushUndoStop();\n        }\n        finally {\n            this._ignoreModelContentChanged = false;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport './findOptionsWidget.css';\nimport { CaseSensitiveToggle, RegexToggle, WholeWordsToggle } from '../../../../base/browser/ui/findinput/findInputToggles.js';\nimport { Widget } from '../../../../base/browser/ui/widget.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { FIND_IDS } from './findModel.js';\nimport { asCssVariable, inputActiveOptionBackground, inputActiveOptionBorder, inputActiveOptionForeground } from '../../../../platform/theme/common/colorRegistry.js';\nexport class FindOptionsWidget extends Widget {\n    constructor(editor, state, keybindingService) {\n        super();\n        this._hideSoon = this._register(new RunOnceScheduler(() => this._hide(), 2000));\n        this._isVisible = false;\n        this._editor = editor;\n        this._state = state;\n        this._keybindingService = keybindingService;\n        this._domNode = document.createElement('div');\n        this._domNode.className = 'findOptionsWidget';\n        this._domNode.style.display = 'none';\n        this._domNode.style.top = '10px';\n        this._domNode.style.zIndex = '12';\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        const toggleStyles = {\n            inputActiveOptionBorder: asCssVariable(inputActiveOptionBorder),\n            inputActiveOptionForeground: asCssVariable(inputActiveOptionForeground),\n            inputActiveOptionBackground: asCssVariable(inputActiveOptionBackground),\n        };\n        this.caseSensitive = this._register(new CaseSensitiveToggle(Object.assign({ appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand), isChecked: this._state.matchCase }, toggleStyles)));\n        this._domNode.appendChild(this.caseSensitive.domNode);\n        this._register(this.caseSensitive.onChange(() => {\n            this._state.change({\n                matchCase: this.caseSensitive.checked\n            }, false);\n        }));\n        this.wholeWords = this._register(new WholeWordsToggle(Object.assign({ appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand), isChecked: this._state.wholeWord }, toggleStyles)));\n        this._domNode.appendChild(this.wholeWords.domNode);\n        this._register(this.wholeWords.onChange(() => {\n            this._state.change({\n                wholeWord: this.wholeWords.checked\n            }, false);\n        }));\n        this.regex = this._register(new RegexToggle(Object.assign({ appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand), isChecked: this._state.isRegex }, toggleStyles)));\n        this._domNode.appendChild(this.regex.domNode);\n        this._register(this.regex.onChange(() => {\n            this._state.change({\n                isRegex: this.regex.checked\n            }, false);\n        }));\n        this._editor.addOverlayWidget(this);\n        this._register(this._state.onFindReplaceStateChange((e) => {\n            let somethingChanged = false;\n            if (e.isRegex) {\n                this.regex.checked = this._state.isRegex;\n                somethingChanged = true;\n            }\n            if (e.wholeWord) {\n                this.wholeWords.checked = this._state.wholeWord;\n                somethingChanged = true;\n            }\n            if (e.matchCase) {\n                this.caseSensitive.checked = this._state.matchCase;\n                somethingChanged = true;\n            }\n            if (!this._state.isRevealed && somethingChanged) {\n                this._revealTemporarily();\n            }\n        }));\n        this._register(dom.addDisposableListener(this._domNode, dom.EventType.MOUSE_LEAVE, (e) => this._onMouseLeave()));\n        this._register(dom.addDisposableListener(this._domNode, 'mouseover', (e) => this._onMouseOver()));\n    }\n    _keybindingLabelFor(actionId) {\n        const kb = this._keybindingService.lookupKeybinding(actionId);\n        if (!kb) {\n            return '';\n        }\n        return ` (${kb.getLabel()})`;\n    }\n    dispose() {\n        this._editor.removeOverlayWidget(this);\n        super.dispose();\n    }\n    // ----- IOverlayWidget API\n    getId() {\n        return FindOptionsWidget.ID;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        return {\n            preference: 0 /* OverlayWidgetPositionPreference.TOP_RIGHT_CORNER */\n        };\n    }\n    highlightFindOptions() {\n        this._revealTemporarily();\n    }\n    _revealTemporarily() {\n        this._show();\n        this._hideSoon.schedule();\n    }\n    _onMouseLeave() {\n        this._hideSoon.schedule();\n    }\n    _onMouseOver() {\n        this._hideSoon.cancel();\n    }\n    _show() {\n        if (this._isVisible) {\n            return;\n        }\n        this._isVisible = true;\n        this._domNode.style.display = 'block';\n    }\n    _hide() {\n        if (!this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        this._domNode.style.display = 'none';\n    }\n}\nFindOptionsWidget.ID = 'editor.contrib.findOptionsWidget';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Range } from '../../../common/core/range.js';\nimport { MATCHES_LIMIT } from './findModel.js';\nfunction effectiveOptionValue(override, value) {\n    if (override === 1 /* FindOptionOverride.True */) {\n        return true;\n    }\n    if (override === 2 /* FindOptionOverride.False */) {\n        return false;\n    }\n    return value;\n}\nexport class FindReplaceState extends Disposable {\n    get searchString() { return this._searchString; }\n    get replaceString() { return this._replaceString; }\n    get isRevealed() { return this._isRevealed; }\n    get isReplaceRevealed() { return this._isReplaceRevealed; }\n    get isRegex() { return effectiveOptionValue(this._isRegexOverride, this._isRegex); }\n    get wholeWord() { return effectiveOptionValue(this._wholeWordOverride, this._wholeWord); }\n    get matchCase() { return effectiveOptionValue(this._matchCaseOverride, this._matchCase); }\n    get preserveCase() { return effectiveOptionValue(this._preserveCaseOverride, this._preserveCase); }\n    get actualIsRegex() { return this._isRegex; }\n    get actualWholeWord() { return this._wholeWord; }\n    get actualMatchCase() { return this._matchCase; }\n    get actualPreserveCase() { return this._preserveCase; }\n    get searchScope() { return this._searchScope; }\n    get matchesPosition() { return this._matchesPosition; }\n    get matchesCount() { return this._matchesCount; }\n    get currentMatch() { return this._currentMatch; }\n    constructor() {\n        super();\n        this._onFindReplaceStateChange = this._register(new Emitter());\n        this.onFindReplaceStateChange = this._onFindReplaceStateChange.event;\n        this._searchString = '';\n        this._replaceString = '';\n        this._isRevealed = false;\n        this._isReplaceRevealed = false;\n        this._isRegex = false;\n        this._isRegexOverride = 0 /* FindOptionOverride.NotSet */;\n        this._wholeWord = false;\n        this._wholeWordOverride = 0 /* FindOptionOverride.NotSet */;\n        this._matchCase = false;\n        this._matchCaseOverride = 0 /* FindOptionOverride.NotSet */;\n        this._preserveCase = false;\n        this._preserveCaseOverride = 0 /* FindOptionOverride.NotSet */;\n        this._searchScope = null;\n        this._matchesPosition = 0;\n        this._matchesCount = 0;\n        this._currentMatch = null;\n        this._loop = true;\n        this._isSearching = false;\n        this._filters = null;\n    }\n    changeMatchInfo(matchesPosition, matchesCount, currentMatch) {\n        const changeEvent = {\n            moveCursor: false,\n            updateHistory: false,\n            searchString: false,\n            replaceString: false,\n            isRevealed: false,\n            isReplaceRevealed: false,\n            isRegex: false,\n            wholeWord: false,\n            matchCase: false,\n            preserveCase: false,\n            searchScope: false,\n            matchesPosition: false,\n            matchesCount: false,\n            currentMatch: false,\n            loop: false,\n            isSearching: false,\n            filters: false\n        };\n        let somethingChanged = false;\n        if (matchesCount === 0) {\n            matchesPosition = 0;\n        }\n        if (matchesPosition > matchesCount) {\n            matchesPosition = matchesCount;\n        }\n        if (this._matchesPosition !== matchesPosition) {\n            this._matchesPosition = matchesPosition;\n            changeEvent.matchesPosition = true;\n            somethingChanged = true;\n        }\n        if (this._matchesCount !== matchesCount) {\n            this._matchesCount = matchesCount;\n            changeEvent.matchesCount = true;\n            somethingChanged = true;\n        }\n        if (typeof currentMatch !== 'undefined') {\n            if (!Range.equalsRange(this._currentMatch, currentMatch)) {\n                this._currentMatch = currentMatch;\n                changeEvent.currentMatch = true;\n                somethingChanged = true;\n            }\n        }\n        if (somethingChanged) {\n            this._onFindReplaceStateChange.fire(changeEvent);\n        }\n    }\n    change(newState, moveCursor, updateHistory = true) {\n        var _a;\n        const changeEvent = {\n            moveCursor: moveCursor,\n            updateHistory: updateHistory,\n            searchString: false,\n            replaceString: false,\n            isRevealed: false,\n            isReplaceRevealed: false,\n            isRegex: false,\n            wholeWord: false,\n            matchCase: false,\n            preserveCase: false,\n            searchScope: false,\n            matchesPosition: false,\n            matchesCount: false,\n            currentMatch: false,\n            loop: false,\n            isSearching: false,\n            filters: false\n        };\n        let somethingChanged = false;\n        const oldEffectiveIsRegex = this.isRegex;\n        const oldEffectiveWholeWords = this.wholeWord;\n        const oldEffectiveMatchCase = this.matchCase;\n        const oldEffectivePreserveCase = this.preserveCase;\n        if (typeof newState.searchString !== 'undefined') {\n            if (this._searchString !== newState.searchString) {\n                this._searchString = newState.searchString;\n                changeEvent.searchString = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.replaceString !== 'undefined') {\n            if (this._replaceString !== newState.replaceString) {\n                this._replaceString = newState.replaceString;\n                changeEvent.replaceString = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isRevealed !== 'undefined') {\n            if (this._isRevealed !== newState.isRevealed) {\n                this._isRevealed = newState.isRevealed;\n                changeEvent.isRevealed = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isReplaceRevealed !== 'undefined') {\n            if (this._isReplaceRevealed !== newState.isReplaceRevealed) {\n                this._isReplaceRevealed = newState.isReplaceRevealed;\n                changeEvent.isReplaceRevealed = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isRegex !== 'undefined') {\n            this._isRegex = newState.isRegex;\n        }\n        if (typeof newState.wholeWord !== 'undefined') {\n            this._wholeWord = newState.wholeWord;\n        }\n        if (typeof newState.matchCase !== 'undefined') {\n            this._matchCase = newState.matchCase;\n        }\n        if (typeof newState.preserveCase !== 'undefined') {\n            this._preserveCase = newState.preserveCase;\n        }\n        if (typeof newState.searchScope !== 'undefined') {\n            if (!((_a = newState.searchScope) === null || _a === void 0 ? void 0 : _a.every((newSearchScope) => {\n                var _a;\n                return (_a = this._searchScope) === null || _a === void 0 ? void 0 : _a.some(existingSearchScope => {\n                    return !Range.equalsRange(existingSearchScope, newSearchScope);\n                });\n            }))) {\n                this._searchScope = newState.searchScope;\n                changeEvent.searchScope = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.loop !== 'undefined') {\n            if (this._loop !== newState.loop) {\n                this._loop = newState.loop;\n                changeEvent.loop = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isSearching !== 'undefined') {\n            if (this._isSearching !== newState.isSearching) {\n                this._isSearching = newState.isSearching;\n                changeEvent.isSearching = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.filters !== 'undefined') {\n            if (this._filters) {\n                this._filters.update(newState.filters);\n            }\n            else {\n                this._filters = newState.filters;\n            }\n            changeEvent.filters = true;\n            somethingChanged = true;\n        }\n        // Overrides get set when they explicitly come in and get reset anytime something else changes\n        this._isRegexOverride = (typeof newState.isRegexOverride !== 'undefined' ? newState.isRegexOverride : 0 /* FindOptionOverride.NotSet */);\n        this._wholeWordOverride = (typeof newState.wholeWordOverride !== 'undefined' ? newState.wholeWordOverride : 0 /* FindOptionOverride.NotSet */);\n        this._matchCaseOverride = (typeof newState.matchCaseOverride !== 'undefined' ? newState.matchCaseOverride : 0 /* FindOptionOverride.NotSet */);\n        this._preserveCaseOverride = (typeof newState.preserveCaseOverride !== 'undefined' ? newState.preserveCaseOverride : 0 /* FindOptionOverride.NotSet */);\n        if (oldEffectiveIsRegex !== this.isRegex) {\n            somethingChanged = true;\n            changeEvent.isRegex = true;\n        }\n        if (oldEffectiveWholeWords !== this.wholeWord) {\n            somethingChanged = true;\n            changeEvent.wholeWord = true;\n        }\n        if (oldEffectiveMatchCase !== this.matchCase) {\n            somethingChanged = true;\n            changeEvent.matchCase = true;\n        }\n        if (oldEffectivePreserveCase !== this.preserveCase) {\n            somethingChanged = true;\n            changeEvent.preserveCase = true;\n        }\n        if (somethingChanged) {\n            this._onFindReplaceStateChange.fire(changeEvent);\n        }\n    }\n    canNavigateBack() {\n        return this.canNavigateInLoop() || (this.matchesPosition !== 1);\n    }\n    canNavigateForward() {\n        return this.canNavigateInLoop() || (this.matchesPosition < this.matchesCount);\n    }\n    canNavigateInLoop() {\n        return this._loop || (this.matchesCount >= MATCHES_LIMIT);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { alert as alertFn } from '../../../../base/browser/ui/aria/aria.js';\nimport { Toggle } from '../../../../base/browser/ui/toggle/toggle.js';\nimport { Sash } from '../../../../base/browser/ui/sash/sash.js';\nimport { Widget } from '../../../../base/browser/ui/widget.js';\nimport { Delayer } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './findWidget.css';\nimport { Range } from '../../../common/core/range.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_REPLACE_INPUT_FOCUSED, FIND_IDS, MATCHES_LIMIT } from './findModel.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextScopedFindInput, ContextScopedReplaceInput } from '../../../../platform/history/browser/contextScopedHistoryWidget.js';\nimport { showHistoryKeybindingHint } from '../../../../platform/history/browser/historyWidgetKeybindingHint.js';\nimport { asCssVariable, contrastBorder, editorFindMatch, editorFindMatchBorder, editorFindMatchHighlight, editorFindMatchHighlightBorder, editorFindRangeHighlight, editorFindRangeHighlightBorder, editorWidgetBackground, editorWidgetBorder, editorWidgetForeground, editorWidgetResizeBorder, errorForeground, focusBorder, inputActiveOptionBackground, inputActiveOptionBorder, inputActiveOptionForeground, toolbarHoverBackground, widgetBorder, widgetShadow } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerIcon, widgetClose } from '../../../../platform/theme/common/iconRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { assertIsDefined } from '../../../../base/common/types.js';\nimport { defaultInputBoxStyles, defaultToggleStyles } from '../../../../platform/theme/browser/defaultStyles.js';\nconst findSelectionIcon = registerIcon('find-selection', Codicon.selection, nls.localize('findSelectionIcon', 'Icon for \\'Find in Selection\\' in the editor find widget.'));\nconst findCollapsedIcon = registerIcon('find-collapsed', Codicon.chevronRight, nls.localize('findCollapsedIcon', 'Icon to indicate that the editor find widget is collapsed.'));\nconst findExpandedIcon = registerIcon('find-expanded', Codicon.chevronDown, nls.localize('findExpandedIcon', 'Icon to indicate that the editor find widget is expanded.'));\nexport const findReplaceIcon = registerIcon('find-replace', Codicon.replace, nls.localize('findReplaceIcon', 'Icon for \\'Replace\\' in the editor find widget.'));\nexport const findReplaceAllIcon = registerIcon('find-replace-all', Codicon.replaceAll, nls.localize('findReplaceAllIcon', 'Icon for \\'Replace All\\' in the editor find widget.'));\nexport const findPreviousMatchIcon = registerIcon('find-previous-match', Codicon.arrowUp, nls.localize('findPreviousMatchIcon', 'Icon for \\'Find Previous\\' in the editor find widget.'));\nexport const findNextMatchIcon = registerIcon('find-next-match', Codicon.arrowDown, nls.localize('findNextMatchIcon', 'Icon for \\'Find Next\\' in the editor find widget.'));\nconst NLS_FIND_INPUT_LABEL = nls.localize('label.find', \"Find\");\nconst NLS_FIND_INPUT_PLACEHOLDER = nls.localize('placeholder.find', \"Find\");\nconst NLS_PREVIOUS_MATCH_BTN_LABEL = nls.localize('label.previousMatchButton', \"Previous Match\");\nconst NLS_NEXT_MATCH_BTN_LABEL = nls.localize('label.nextMatchButton', \"Next Match\");\nconst NLS_TOGGLE_SELECTION_FIND_TITLE = nls.localize('label.toggleSelectionFind', \"Find in Selection\");\nconst NLS_CLOSE_BTN_LABEL = nls.localize('label.closeButton', \"Close\");\nconst NLS_REPLACE_INPUT_LABEL = nls.localize('label.replace', \"Replace\");\nconst NLS_REPLACE_INPUT_PLACEHOLDER = nls.localize('placeholder.replace', \"Replace\");\nconst NLS_REPLACE_BTN_LABEL = nls.localize('label.replaceButton', \"Replace\");\nconst NLS_REPLACE_ALL_BTN_LABEL = nls.localize('label.replaceAllButton', \"Replace All\");\nconst NLS_TOGGLE_REPLACE_MODE_BTN_LABEL = nls.localize('label.toggleReplaceButton', \"Toggle Replace\");\nconst NLS_MATCHES_COUNT_LIMIT_TITLE = nls.localize('title.matchesCountLimit', \"Only the first {0} results are highlighted, but all find operations work on the entire text.\", MATCHES_LIMIT);\nexport const NLS_MATCHES_LOCATION = nls.localize('label.matchesLocation', \"{0} of {1}\");\nexport const NLS_NO_RESULTS = nls.localize('label.noResults', \"No results\");\nconst FIND_WIDGET_INITIAL_WIDTH = 419;\nconst PART_WIDTH = 275;\nconst FIND_INPUT_AREA_WIDTH = PART_WIDTH - 54;\nlet MAX_MATCHES_COUNT_WIDTH = 69;\n// let FIND_ALL_CONTROLS_WIDTH = 17/** Find Input margin-left */ + (MAX_MATCHES_COUNT_WIDTH + 3 + 1) /** Match Results */ + 23 /** Button */ * 4 + 2/** sash */;\nconst FIND_INPUT_AREA_HEIGHT = 33; // The height of Find Widget when Replace Input is not visible.\nconst ctrlEnterReplaceAllWarningPromptedKey = 'ctrlEnterReplaceAll.windows.donotask';\nconst ctrlKeyMod = (platform.isMacintosh ? 256 /* KeyMod.WinCtrl */ : 2048 /* KeyMod.CtrlCmd */);\nexport class FindWidgetViewZone {\n    constructor(afterLineNumber) {\n        this.afterLineNumber = afterLineNumber;\n        this.heightInPx = FIND_INPUT_AREA_HEIGHT;\n        this.suppressMouseDown = false;\n        this.domNode = document.createElement('div');\n        this.domNode.className = 'dock-find-viewzone';\n    }\n}\nfunction stopPropagationForMultiLineUpwards(event, value, textarea) {\n    const isMultiline = !!value.match(/\\n/);\n    if (textarea && isMultiline && textarea.selectionStart > 0) {\n        event.stopPropagation();\n        return;\n    }\n}\nfunction stopPropagationForMultiLineDownwards(event, value, textarea) {\n    const isMultiline = !!value.match(/\\n/);\n    if (textarea && isMultiline && textarea.selectionEnd < textarea.value.length) {\n        event.stopPropagation();\n        return;\n    }\n}\nexport class FindWidget extends Widget {\n    constructor(codeEditor, controller, state, contextViewProvider, keybindingService, contextKeyService, themeService, storageService, notificationService) {\n        super();\n        this._cachedHeight = null;\n        this._revealTimeouts = [];\n        this._codeEditor = codeEditor;\n        this._controller = controller;\n        this._state = state;\n        this._contextViewProvider = contextViewProvider;\n        this._keybindingService = keybindingService;\n        this._contextKeyService = contextKeyService;\n        this._storageService = storageService;\n        this._notificationService = notificationService;\n        this._ctrlEnterReplaceAllWarningPrompted = !!storageService.getBoolean(ctrlEnterReplaceAllWarningPromptedKey, 0 /* StorageScope.PROFILE */);\n        this._isVisible = false;\n        this._isReplaceVisible = false;\n        this._ignoreChangeEvent = false;\n        this._updateHistoryDelayer = new Delayer(500);\n        this._register(toDisposable(() => this._updateHistoryDelayer.cancel()));\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this._buildDomNode();\n        this._updateButtons();\n        this._tryUpdateWidgetWidth();\n        this._findInput.inputBox.layout();\n        this._register(this._codeEditor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(88 /* EditorOption.readOnly */)) {\n                if (this._codeEditor.getOption(88 /* EditorOption.readOnly */)) {\n                    // Hide replace part if editor becomes read only\n                    this._state.change({ isReplaceRevealed: false }, false);\n                }\n                this._updateButtons();\n            }\n            if (e.hasChanged(140 /* EditorOption.layoutInfo */)) {\n                this._tryUpdateWidgetWidth();\n            }\n            if (e.hasChanged(2 /* EditorOption.accessibilitySupport */)) {\n                this.updateAccessibilitySupport();\n            }\n            if (e.hasChanged(39 /* EditorOption.find */)) {\n                const supportLoop = this._codeEditor.getOption(39 /* EditorOption.find */).loop;\n                this._state.change({ loop: supportLoop }, false);\n                const addExtraSpaceOnTop = this._codeEditor.getOption(39 /* EditorOption.find */).addExtraSpaceOnTop;\n                if (addExtraSpaceOnTop && !this._viewZone) {\n                    this._viewZone = new FindWidgetViewZone(0);\n                    this._showViewZone();\n                }\n                if (!addExtraSpaceOnTop && this._viewZone) {\n                    this._removeViewZone();\n                }\n            }\n        }));\n        this.updateAccessibilitySupport();\n        this._register(this._codeEditor.onDidChangeCursorSelection(() => {\n            if (this._isVisible) {\n                this._updateToggleSelectionFindButton();\n            }\n        }));\n        this._register(this._codeEditor.onDidFocusEditorWidget(() => __awaiter(this, void 0, void 0, function* () {\n            if (this._isVisible) {\n                const globalBufferTerm = yield this._controller.getGlobalBufferTerm();\n                if (globalBufferTerm && globalBufferTerm !== this._state.searchString) {\n                    this._state.change({ searchString: globalBufferTerm }, false);\n                    this._findInput.select();\n                }\n            }\n        })));\n        this._findInputFocused = CONTEXT_FIND_INPUT_FOCUSED.bindTo(contextKeyService);\n        this._findFocusTracker = this._register(dom.trackFocus(this._findInput.inputBox.inputElement));\n        this._register(this._findFocusTracker.onDidFocus(() => {\n            this._findInputFocused.set(true);\n            this._updateSearchScope();\n        }));\n        this._register(this._findFocusTracker.onDidBlur(() => {\n            this._findInputFocused.set(false);\n        }));\n        this._replaceInputFocused = CONTEXT_REPLACE_INPUT_FOCUSED.bindTo(contextKeyService);\n        this._replaceFocusTracker = this._register(dom.trackFocus(this._replaceInput.inputBox.inputElement));\n        this._register(this._replaceFocusTracker.onDidFocus(() => {\n            this._replaceInputFocused.set(true);\n            this._updateSearchScope();\n        }));\n        this._register(this._replaceFocusTracker.onDidBlur(() => {\n            this._replaceInputFocused.set(false);\n        }));\n        this._codeEditor.addOverlayWidget(this);\n        if (this._codeEditor.getOption(39 /* EditorOption.find */).addExtraSpaceOnTop) {\n            this._viewZone = new FindWidgetViewZone(0); // Put it before the first line then users can scroll beyond the first line.\n        }\n        this._register(this._codeEditor.onDidChangeModel(() => {\n            if (!this._isVisible) {\n                return;\n            }\n            this._viewZoneId = undefined;\n        }));\n        this._register(this._codeEditor.onDidScrollChange((e) => {\n            if (e.scrollTopChanged) {\n                this._layoutViewZone();\n                return;\n            }\n            // for other scroll changes, layout the viewzone in next tick to avoid ruining current rendering.\n            setTimeout(() => {\n                this._layoutViewZone();\n            }, 0);\n        }));\n    }\n    // ----- IOverlayWidget API\n    getId() {\n        return FindWidget.ID;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        if (this._isVisible) {\n            return {\n                preference: 0 /* OverlayWidgetPositionPreference.TOP_RIGHT_CORNER */\n            };\n        }\n        return null;\n    }\n    // ----- React to state changes\n    _onStateChanged(e) {\n        if (e.searchString) {\n            try {\n                this._ignoreChangeEvent = true;\n                this._findInput.setValue(this._state.searchString);\n            }\n            finally {\n                this._ignoreChangeEvent = false;\n            }\n            this._updateButtons();\n        }\n        if (e.replaceString) {\n            this._replaceInput.inputBox.value = this._state.replaceString;\n        }\n        if (e.isRevealed) {\n            if (this._state.isRevealed) {\n                this._reveal();\n            }\n            else {\n                this._hide(true);\n            }\n        }\n        if (e.isReplaceRevealed) {\n            if (this._state.isReplaceRevealed) {\n                if (!this._codeEditor.getOption(88 /* EditorOption.readOnly */) && !this._isReplaceVisible) {\n                    this._isReplaceVisible = true;\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                    this._updateButtons();\n                    this._replaceInput.inputBox.layout();\n                }\n            }\n            else {\n                if (this._isReplaceVisible) {\n                    this._isReplaceVisible = false;\n                    this._updateButtons();\n                }\n            }\n        }\n        if ((e.isRevealed || e.isReplaceRevealed) && (this._state.isRevealed || this._state.isReplaceRevealed)) {\n            if (this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }\n        if (e.isRegex) {\n            this._findInput.setRegex(this._state.isRegex);\n        }\n        if (e.wholeWord) {\n            this._findInput.setWholeWords(this._state.wholeWord);\n        }\n        if (e.matchCase) {\n            this._findInput.setCaseSensitive(this._state.matchCase);\n        }\n        if (e.preserveCase) {\n            this._replaceInput.setPreserveCase(this._state.preserveCase);\n        }\n        if (e.searchScope) {\n            if (this._state.searchScope) {\n                this._toggleSelectionFind.checked = true;\n            }\n            else {\n                this._toggleSelectionFind.checked = false;\n            }\n            this._updateToggleSelectionFindButton();\n        }\n        if (e.searchString || e.matchesCount || e.matchesPosition) {\n            const showRedOutline = (this._state.searchString.length > 0 && this._state.matchesCount === 0);\n            this._domNode.classList.toggle('no-results', showRedOutline);\n            this._updateMatchesCount();\n            this._updateButtons();\n        }\n        if (e.searchString || e.currentMatch) {\n            this._layoutViewZone();\n        }\n        if (e.updateHistory) {\n            this._delayedUpdateHistory();\n        }\n        if (e.loop) {\n            this._updateButtons();\n        }\n    }\n    _delayedUpdateHistory() {\n        this._updateHistoryDelayer.trigger(this._updateHistory.bind(this)).then(undefined, onUnexpectedError);\n    }\n    _updateHistory() {\n        if (this._state.searchString) {\n            this._findInput.inputBox.addToHistory();\n        }\n        if (this._state.replaceString) {\n            this._replaceInput.inputBox.addToHistory();\n        }\n    }\n    _updateMatchesCount() {\n        this._matchesCount.style.minWidth = MAX_MATCHES_COUNT_WIDTH + 'px';\n        if (this._state.matchesCount >= MATCHES_LIMIT) {\n            this._matchesCount.title = NLS_MATCHES_COUNT_LIMIT_TITLE;\n        }\n        else {\n            this._matchesCount.title = '';\n        }\n        // remove previous content\n        if (this._matchesCount.firstChild) {\n            this._matchesCount.removeChild(this._matchesCount.firstChild);\n        }\n        let label;\n        if (this._state.matchesCount > 0) {\n            let matchesCount = String(this._state.matchesCount);\n            if (this._state.matchesCount >= MATCHES_LIMIT) {\n                matchesCount += '+';\n            }\n            let matchesPosition = String(this._state.matchesPosition);\n            if (matchesPosition === '0') {\n                matchesPosition = '?';\n            }\n            label = strings.format(NLS_MATCHES_LOCATION, matchesPosition, matchesCount);\n        }\n        else {\n            label = NLS_NO_RESULTS;\n        }\n        this._matchesCount.appendChild(document.createTextNode(label));\n        alertFn(this._getAriaLabel(label, this._state.currentMatch, this._state.searchString));\n        MAX_MATCHES_COUNT_WIDTH = Math.max(MAX_MATCHES_COUNT_WIDTH, this._matchesCount.clientWidth);\n    }\n    // ----- actions\n    _getAriaLabel(label, currentMatch, searchString) {\n        if (label === NLS_NO_RESULTS) {\n            return searchString === ''\n                ? nls.localize('ariaSearchNoResultEmpty', \"{0} found\", label)\n                : nls.localize('ariaSearchNoResult', \"{0} found for '{1}'\", label, searchString);\n        }\n        if (currentMatch) {\n            const ariaLabel = nls.localize('ariaSearchNoResultWithLineNum', \"{0} found for '{1}', at {2}\", label, searchString, currentMatch.startLineNumber + ':' + currentMatch.startColumn);\n            const model = this._codeEditor.getModel();\n            if (model && (currentMatch.startLineNumber <= model.getLineCount()) && (currentMatch.startLineNumber >= 1)) {\n                const lineContent = model.getLineContent(currentMatch.startLineNumber);\n                return `${lineContent}, ${ariaLabel}`;\n            }\n            return ariaLabel;\n        }\n        return nls.localize('ariaSearchNoResultWithLineNumNoCurrentMatch', \"{0} found for '{1}'\", label, searchString);\n    }\n    /**\n     * If 'selection find' is ON we should not disable the button (its function is to cancel 'selection find').\n     * If 'selection find' is OFF we enable the button only if there is a selection.\n     */\n    _updateToggleSelectionFindButton() {\n        const selection = this._codeEditor.getSelection();\n        const isSelection = selection ? (selection.startLineNumber !== selection.endLineNumber || selection.startColumn !== selection.endColumn) : false;\n        const isChecked = this._toggleSelectionFind.checked;\n        if (this._isVisible && (isChecked || isSelection)) {\n            this._toggleSelectionFind.enable();\n        }\n        else {\n            this._toggleSelectionFind.disable();\n        }\n    }\n    _updateButtons() {\n        this._findInput.setEnabled(this._isVisible);\n        this._replaceInput.setEnabled(this._isVisible && this._isReplaceVisible);\n        this._updateToggleSelectionFindButton();\n        this._closeBtn.setEnabled(this._isVisible);\n        const findInputIsNonEmpty = (this._state.searchString.length > 0);\n        const matchesCount = this._state.matchesCount ? true : false;\n        this._prevBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateBack());\n        this._nextBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateForward());\n        this._replaceBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n        this._replaceAllBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n        this._domNode.classList.toggle('replaceToggled', this._isReplaceVisible);\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\n        const canReplace = !this._codeEditor.getOption(88 /* EditorOption.readOnly */);\n        this._toggleReplaceBtn.setEnabled(this._isVisible && canReplace);\n    }\n    _reveal() {\n        this._revealTimeouts.forEach(e => {\n            clearTimeout(e);\n        });\n        this._revealTimeouts = [];\n        if (!this._isVisible) {\n            this._isVisible = true;\n            const selection = this._codeEditor.getSelection();\n            switch (this._codeEditor.getOption(39 /* EditorOption.find */).autoFindInSelection) {\n                case 'always':\n                    this._toggleSelectionFind.checked = true;\n                    break;\n                case 'never':\n                    this._toggleSelectionFind.checked = false;\n                    break;\n                case 'multiline': {\n                    const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n                    this._toggleSelectionFind.checked = isSelectionMultipleLine;\n                    break;\n                }\n                default:\n                    break;\n            }\n            this._tryUpdateWidgetWidth();\n            this._updateButtons();\n            this._revealTimeouts.push(setTimeout(() => {\n                this._domNode.classList.add('visible');\n                this._domNode.setAttribute('aria-hidden', 'false');\n            }, 0));\n            // validate query again as it's being dismissed when we hide the find widget.\n            this._revealTimeouts.push(setTimeout(() => {\n                this._findInput.validate();\n            }, 200));\n            this._codeEditor.layoutOverlayWidget(this);\n            let adjustEditorScrollTop = true;\n            if (this._codeEditor.getOption(39 /* EditorOption.find */).seedSearchStringFromSelection && selection) {\n                const domNode = this._codeEditor.getDomNode();\n                if (domNode) {\n                    const editorCoords = dom.getDomNodePagePosition(domNode);\n                    const startCoords = this._codeEditor.getScrolledVisiblePosition(selection.getStartPosition());\n                    const startLeft = editorCoords.left + (startCoords ? startCoords.left : 0);\n                    const startTop = startCoords ? startCoords.top : 0;\n                    if (this._viewZone && startTop < this._viewZone.heightInPx) {\n                        if (selection.endLineNumber > selection.startLineNumber) {\n                            adjustEditorScrollTop = false;\n                        }\n                        const leftOfFindWidget = dom.getTopLeftOffset(this._domNode).left;\n                        if (startLeft > leftOfFindWidget) {\n                            adjustEditorScrollTop = false;\n                        }\n                        const endCoords = this._codeEditor.getScrolledVisiblePosition(selection.getEndPosition());\n                        const endLeft = editorCoords.left + (endCoords ? endCoords.left : 0);\n                        if (endLeft > leftOfFindWidget) {\n                            adjustEditorScrollTop = false;\n                        }\n                    }\n                }\n            }\n            this._showViewZone(adjustEditorScrollTop);\n        }\n    }\n    _hide(focusTheEditor) {\n        this._revealTimeouts.forEach(e => {\n            clearTimeout(e);\n        });\n        this._revealTimeouts = [];\n        if (this._isVisible) {\n            this._isVisible = false;\n            this._updateButtons();\n            this._domNode.classList.remove('visible');\n            this._domNode.setAttribute('aria-hidden', 'true');\n            this._findInput.clearMessage();\n            if (focusTheEditor) {\n                this._codeEditor.focus();\n            }\n            this._codeEditor.layoutOverlayWidget(this);\n            this._removeViewZone();\n        }\n    }\n    _layoutViewZone(targetScrollTop) {\n        const addExtraSpaceOnTop = this._codeEditor.getOption(39 /* EditorOption.find */).addExtraSpaceOnTop;\n        if (!addExtraSpaceOnTop) {\n            this._removeViewZone();\n            return;\n        }\n        if (!this._isVisible) {\n            return;\n        }\n        const viewZone = this._viewZone;\n        if (this._viewZoneId !== undefined || !viewZone) {\n            return;\n        }\n        this._codeEditor.changeViewZones((accessor) => {\n            viewZone.heightInPx = this._getHeight();\n            this._viewZoneId = accessor.addZone(viewZone);\n            // scroll top adjust to make sure the editor doesn't scroll when adding viewzone at the beginning.\n            this._codeEditor.setScrollTop(targetScrollTop || this._codeEditor.getScrollTop() + viewZone.heightInPx);\n        });\n    }\n    _showViewZone(adjustScroll = true) {\n        if (!this._isVisible) {\n            return;\n        }\n        const addExtraSpaceOnTop = this._codeEditor.getOption(39 /* EditorOption.find */).addExtraSpaceOnTop;\n        if (!addExtraSpaceOnTop) {\n            return;\n        }\n        if (this._viewZone === undefined) {\n            this._viewZone = new FindWidgetViewZone(0);\n        }\n        const viewZone = this._viewZone;\n        this._codeEditor.changeViewZones((accessor) => {\n            if (this._viewZoneId !== undefined) {\n                // the view zone already exists, we need to update the height\n                const newHeight = this._getHeight();\n                if (newHeight === viewZone.heightInPx) {\n                    return;\n                }\n                const scrollAdjustment = newHeight - viewZone.heightInPx;\n                viewZone.heightInPx = newHeight;\n                accessor.layoutZone(this._viewZoneId);\n                if (adjustScroll) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n                }\n                return;\n            }\n            else {\n                let scrollAdjustment = this._getHeight();\n                // if the editor has top padding, factor that into the zone height\n                scrollAdjustment -= this._codeEditor.getOption(81 /* EditorOption.padding */).top;\n                if (scrollAdjustment <= 0) {\n                    return;\n                }\n                viewZone.heightInPx = scrollAdjustment;\n                this._viewZoneId = accessor.addZone(viewZone);\n                if (adjustScroll) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n                }\n            }\n        });\n    }\n    _removeViewZone() {\n        this._codeEditor.changeViewZones((accessor) => {\n            if (this._viewZoneId !== undefined) {\n                accessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n                if (this._viewZone) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() - this._viewZone.heightInPx);\n                    this._viewZone = undefined;\n                }\n            }\n        });\n    }\n    _tryUpdateWidgetWidth() {\n        if (!this._isVisible) {\n            return;\n        }\n        if (!dom.isInDOM(this._domNode)) {\n            // the widget is not in the DOM\n            return;\n        }\n        const layoutInfo = this._codeEditor.getLayoutInfo();\n        const editorContentWidth = layoutInfo.contentWidth;\n        if (editorContentWidth <= 0) {\n            // for example, diff view original editor\n            this._domNode.classList.add('hiddenEditor');\n            return;\n        }\n        else if (this._domNode.classList.contains('hiddenEditor')) {\n            this._domNode.classList.remove('hiddenEditor');\n        }\n        const editorWidth = layoutInfo.width;\n        const minimapWidth = layoutInfo.minimap.minimapWidth;\n        let collapsedFindWidget = false;\n        let reducedFindWidget = false;\n        let narrowFindWidget = false;\n        if (this._resized) {\n            const widgetWidth = dom.getTotalWidth(this._domNode);\n            if (widgetWidth > FIND_WIDGET_INITIAL_WIDTH) {\n                // as the widget is resized by users, we may need to change the max width of the widget as the editor width changes.\n                this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                return;\n            }\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth >= editorWidth) {\n            reducedFindWidget = true;\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth) {\n            narrowFindWidget = true;\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth + 50) {\n            collapsedFindWidget = true;\n        }\n        this._domNode.classList.toggle('collapsed-find-widget', collapsedFindWidget);\n        this._domNode.classList.toggle('narrow-find-widget', narrowFindWidget);\n        this._domNode.classList.toggle('reduced-find-widget', reducedFindWidget);\n        if (!narrowFindWidget && !collapsedFindWidget) {\n            // the minimal left offset of findwidget is 15px.\n            this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\n        }\n        this._findInput.layout({ collapsedFindWidget, narrowFindWidget, reducedFindWidget });\n        if (this._resized) {\n            const findInputWidth = this._findInput.inputBox.element.clientWidth;\n            if (findInputWidth > 0) {\n                this._replaceInput.width = findInputWidth;\n            }\n        }\n        else if (this._isReplaceVisible) {\n            this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n        }\n    }\n    _getHeight() {\n        let totalheight = 0;\n        // find input margin top\n        totalheight += 4;\n        // find input height\n        totalheight += this._findInput.inputBox.height + 2 /** input box border */;\n        if (this._isReplaceVisible) {\n            // replace input margin\n            totalheight += 4;\n            totalheight += this._replaceInput.inputBox.height + 2 /** input box border */;\n        }\n        // margin bottom\n        totalheight += 4;\n        return totalheight;\n    }\n    _tryUpdateHeight() {\n        const totalHeight = this._getHeight();\n        if (this._cachedHeight !== null && this._cachedHeight === totalHeight) {\n            return false;\n        }\n        this._cachedHeight = totalHeight;\n        this._domNode.style.height = `${totalHeight}px`;\n        return true;\n    }\n    // ----- Public\n    focusFindInput() {\n        this._findInput.select();\n        // Edge browser requires focus() in addition to select()\n        this._findInput.focus();\n    }\n    focusReplaceInput() {\n        this._replaceInput.select();\n        // Edge browser requires focus() in addition to select()\n        this._replaceInput.focus();\n    }\n    highlightFindOptions() {\n        this._findInput.highlightFindOptions();\n    }\n    _updateSearchScope() {\n        if (!this._codeEditor.hasModel()) {\n            return;\n        }\n        if (this._toggleSelectionFind.checked) {\n            const selections = this._codeEditor.getSelections();\n            selections.map(selection => {\n                if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                    selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                }\n                const currentMatch = this._state.currentMatch;\n                if (selection.startLineNumber !== selection.endLineNumber) {\n                    if (!Range.equalsRange(selection, currentMatch)) {\n                        return selection;\n                    }\n                }\n                return null;\n            }).filter(element => !!element);\n            if (selections.length) {\n                this._state.change({ searchScope: selections }, true);\n            }\n        }\n    }\n    _onFindInputMouseDown(e) {\n        // on linux, middle key does pasting.\n        if (e.middleButton) {\n            e.stopPropagation();\n        }\n    }\n    _onFindInputKeyDown(e) {\n        if (e.equals(ctrlKeyMod | 3 /* KeyCode.Enter */)) {\n            if (this._keybindingService.dispatchEvent(e, e.target)) {\n                e.preventDefault();\n                return;\n            }\n            else {\n                this._findInput.inputBox.insertAtCursor('\\n');\n                e.preventDefault();\n                return;\n            }\n        }\n        if (e.equals(2 /* KeyCode.Tab */)) {\n            if (this._isReplaceVisible) {\n                this._replaceInput.focus();\n            }\n            else {\n                this._findInput.focusOnCaseSensitive();\n            }\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */)) {\n            this._codeEditor.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(16 /* KeyCode.UpArrow */)) {\n            return stopPropagationForMultiLineUpwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n        }\n        if (e.equals(18 /* KeyCode.DownArrow */)) {\n            return stopPropagationForMultiLineDownwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n        }\n    }\n    _onReplaceInputKeyDown(e) {\n        if (e.equals(ctrlKeyMod | 3 /* KeyCode.Enter */)) {\n            if (this._keybindingService.dispatchEvent(e, e.target)) {\n                e.preventDefault();\n                return;\n            }\n            else {\n                if (platform.isWindows && platform.isNative && !this._ctrlEnterReplaceAllWarningPrompted) {\n                    // this is the first time when users press Ctrl + Enter to replace all\n                    this._notificationService.info(nls.localize('ctrlEnter.keybindingChanged', 'Ctrl+Enter now inserts line break instead of replacing all. You can modify the keybinding for editor.action.replaceAll to override this behavior.'));\n                    this._ctrlEnterReplaceAllWarningPrompted = true;\n                    this._storageService.store(ctrlEnterReplaceAllWarningPromptedKey, true, 0 /* StorageScope.PROFILE */, 0 /* StorageTarget.USER */);\n                }\n                this._replaceInput.inputBox.insertAtCursor('\\n');\n                e.preventDefault();\n                return;\n            }\n        }\n        if (e.equals(2 /* KeyCode.Tab */)) {\n            this._findInput.focusOnCaseSensitive();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n            this._findInput.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */)) {\n            this._codeEditor.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(16 /* KeyCode.UpArrow */)) {\n            return stopPropagationForMultiLineUpwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n        }\n        if (e.equals(18 /* KeyCode.DownArrow */)) {\n            return stopPropagationForMultiLineDownwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n        }\n    }\n    // ----- sash\n    getVerticalSashLeft(_sash) {\n        return 0;\n    }\n    // ----- initialization\n    _keybindingLabelFor(actionId) {\n        const kb = this._keybindingService.lookupKeybinding(actionId);\n        if (!kb) {\n            return '';\n        }\n        return ` (${kb.getLabel()})`;\n    }\n    _buildDomNode() {\n        const flexibleHeight = true;\n        const flexibleWidth = true;\n        // Find input\n        this._findInput = this._register(new ContextScopedFindInput(null, this._contextViewProvider, {\n            width: FIND_INPUT_AREA_WIDTH,\n            label: NLS_FIND_INPUT_LABEL,\n            placeholder: NLS_FIND_INPUT_PLACEHOLDER,\n            appendCaseSensitiveLabel: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),\n            appendWholeWordsLabel: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),\n            appendRegexLabel: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),\n            validation: (value) => {\n                if (value.length === 0 || !this._findInput.getRegex()) {\n                    return null;\n                }\n                try {\n                    // use `g` and `u` which are also used by the TextModel search\n                    new RegExp(value, 'gu');\n                    return null;\n                }\n                catch (e) {\n                    return { content: e.message };\n                }\n            },\n            flexibleHeight,\n            flexibleWidth,\n            flexibleMaxHeight: 118,\n            showCommonFindToggles: true,\n            showHistoryHint: () => showHistoryKeybindingHint(this._keybindingService),\n            inputBoxStyles: defaultInputBoxStyles,\n            toggleStyles: defaultToggleStyles\n        }, this._contextKeyService));\n        this._findInput.setRegex(!!this._state.isRegex);\n        this._findInput.setCaseSensitive(!!this._state.matchCase);\n        this._findInput.setWholeWords(!!this._state.wholeWord);\n        this._register(this._findInput.onKeyDown((e) => this._onFindInputKeyDown(e)));\n        this._register(this._findInput.inputBox.onDidChange(() => {\n            if (this._ignoreChangeEvent) {\n                return;\n            }\n            this._state.change({ searchString: this._findInput.getValue() }, true);\n        }));\n        this._register(this._findInput.onDidOptionChange(() => {\n            this._state.change({\n                isRegex: this._findInput.getRegex(),\n                wholeWord: this._findInput.getWholeWords(),\n                matchCase: this._findInput.getCaseSensitive()\n            }, true);\n        }));\n        this._register(this._findInput.onCaseSensitiveKeyDown((e) => {\n            if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n                if (this._isReplaceVisible) {\n                    this._replaceInput.focus();\n                    e.preventDefault();\n                }\n            }\n        }));\n        this._register(this._findInput.onRegexKeyDown((e) => {\n            if (e.equals(2 /* KeyCode.Tab */)) {\n                if (this._isReplaceVisible) {\n                    this._replaceInput.focusOnPreserve();\n                    e.preventDefault();\n                }\n            }\n        }));\n        this._register(this._findInput.inputBox.onDidHeightChange((e) => {\n            if (this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }));\n        if (platform.isLinux) {\n            this._register(this._findInput.onMouseDown((e) => this._onFindInputMouseDown(e)));\n        }\n        this._matchesCount = document.createElement('div');\n        this._matchesCount.className = 'matchesCount';\n        this._updateMatchesCount();\n        // Previous button\n        this._prevBtn = this._register(new SimpleButton({\n            label: NLS_PREVIOUS_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.PreviousMatchFindAction),\n            icon: findPreviousMatchIcon,\n            onTrigger: () => {\n                assertIsDefined(this._codeEditor.getAction(FIND_IDS.PreviousMatchFindAction)).run().then(undefined, onUnexpectedError);\n            }\n        }));\n        // Next button\n        this._nextBtn = this._register(new SimpleButton({\n            label: NLS_NEXT_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.NextMatchFindAction),\n            icon: findNextMatchIcon,\n            onTrigger: () => {\n                assertIsDefined(this._codeEditor.getAction(FIND_IDS.NextMatchFindAction)).run().then(undefined, onUnexpectedError);\n            }\n        }));\n        const findPart = document.createElement('div');\n        findPart.className = 'find-part';\n        findPart.appendChild(this._findInput.domNode);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'find-actions';\n        findPart.appendChild(actionsContainer);\n        actionsContainer.appendChild(this._matchesCount);\n        actionsContainer.appendChild(this._prevBtn.domNode);\n        actionsContainer.appendChild(this._nextBtn.domNode);\n        // Toggle selection button\n        this._toggleSelectionFind = this._register(new Toggle({\n            icon: findSelectionIcon,\n            title: NLS_TOGGLE_SELECTION_FIND_TITLE + this._keybindingLabelFor(FIND_IDS.ToggleSearchScopeCommand),\n            isChecked: false,\n            inputActiveOptionBackground: asCssVariable(inputActiveOptionBackground),\n            inputActiveOptionBorder: asCssVariable(inputActiveOptionBorder),\n            inputActiveOptionForeground: asCssVariable(inputActiveOptionForeground),\n        }));\n        this._register(this._toggleSelectionFind.onChange(() => {\n            if (this._toggleSelectionFind.checked) {\n                if (this._codeEditor.hasModel()) {\n                    const selections = this._codeEditor.getSelections();\n                    selections.map(selection => {\n                        if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                            selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                        }\n                        if (!selection.isEmpty()) {\n                            return selection;\n                        }\n                        return null;\n                    }).filter(element => !!element);\n                    if (selections.length) {\n                        this._state.change({ searchScope: selections }, true);\n                    }\n                }\n            }\n            else {\n                this._state.change({ searchScope: null }, true);\n            }\n        }));\n        actionsContainer.appendChild(this._toggleSelectionFind.domNode);\n        // Close button\n        this._closeBtn = this._register(new SimpleButton({\n            label: NLS_CLOSE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.CloseFindWidgetCommand),\n            icon: widgetClose,\n            onTrigger: () => {\n                this._state.change({ isRevealed: false, searchScope: null }, false);\n            },\n            onKeyDown: (e) => {\n                if (e.equals(2 /* KeyCode.Tab */)) {\n                    if (this._isReplaceVisible) {\n                        if (this._replaceBtn.isEnabled()) {\n                            this._replaceBtn.focus();\n                        }\n                        else {\n                            this._codeEditor.focus();\n                        }\n                        e.preventDefault();\n                    }\n                }\n            }\n        }));\n        actionsContainer.appendChild(this._closeBtn.domNode);\n        // Replace input\n        this._replaceInput = this._register(new ContextScopedReplaceInput(null, undefined, {\n            label: NLS_REPLACE_INPUT_LABEL,\n            placeholder: NLS_REPLACE_INPUT_PLACEHOLDER,\n            appendPreserveCaseLabel: this._keybindingLabelFor(FIND_IDS.TogglePreserveCaseCommand),\n            history: [],\n            flexibleHeight,\n            flexibleWidth,\n            flexibleMaxHeight: 118,\n            showHistoryHint: () => showHistoryKeybindingHint(this._keybindingService),\n            inputBoxStyles: defaultInputBoxStyles,\n            toggleStyles: defaultToggleStyles\n        }, this._contextKeyService, true));\n        this._replaceInput.setPreserveCase(!!this._state.preserveCase);\n        this._register(this._replaceInput.onKeyDown((e) => this._onReplaceInputKeyDown(e)));\n        this._register(this._replaceInput.inputBox.onDidChange(() => {\n            this._state.change({ replaceString: this._replaceInput.inputBox.value }, false);\n        }));\n        this._register(this._replaceInput.inputBox.onDidHeightChange((e) => {\n            if (this._isReplaceVisible && this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }));\n        this._register(this._replaceInput.onDidOptionChange(() => {\n            this._state.change({\n                preserveCase: this._replaceInput.getPreserveCase()\n            }, true);\n        }));\n        this._register(this._replaceInput.onPreserveCaseKeyDown((e) => {\n            if (e.equals(2 /* KeyCode.Tab */)) {\n                if (this._prevBtn.isEnabled()) {\n                    this._prevBtn.focus();\n                }\n                else if (this._nextBtn.isEnabled()) {\n                    this._nextBtn.focus();\n                }\n                else if (this._toggleSelectionFind.enabled) {\n                    this._toggleSelectionFind.focus();\n                }\n                else if (this._closeBtn.isEnabled()) {\n                    this._closeBtn.focus();\n                }\n                e.preventDefault();\n            }\n        }));\n        // Replace one button\n        this._replaceBtn = this._register(new SimpleButton({\n            label: NLS_REPLACE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceOneAction),\n            icon: findReplaceIcon,\n            onTrigger: () => {\n                this._controller.replace();\n            },\n            onKeyDown: (e) => {\n                if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n                    this._closeBtn.focus();\n                    e.preventDefault();\n                }\n            }\n        }));\n        // Replace all button\n        this._replaceAllBtn = this._register(new SimpleButton({\n            label: NLS_REPLACE_ALL_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceAllAction),\n            icon: findReplaceAllIcon,\n            onTrigger: () => {\n                this._controller.replaceAll();\n            }\n        }));\n        const replacePart = document.createElement('div');\n        replacePart.className = 'replace-part';\n        replacePart.appendChild(this._replaceInput.domNode);\n        const replaceActionsContainer = document.createElement('div');\n        replaceActionsContainer.className = 'replace-actions';\n        replacePart.appendChild(replaceActionsContainer);\n        replaceActionsContainer.appendChild(this._replaceBtn.domNode);\n        replaceActionsContainer.appendChild(this._replaceAllBtn.domNode);\n        // Toggle replace button\n        this._toggleReplaceBtn = this._register(new SimpleButton({\n            label: NLS_TOGGLE_REPLACE_MODE_BTN_LABEL,\n            className: 'codicon toggle left',\n            onTrigger: () => {\n                this._state.change({ isReplaceRevealed: !this._isReplaceVisible }, false);\n                if (this._isReplaceVisible) {\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                    this._replaceInput.inputBox.layout();\n                }\n                this._showViewZone();\n            }\n        }));\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\n        // Widget\n        this._domNode = document.createElement('div');\n        this._domNode.className = 'editor-widget find-widget';\n        this._domNode.setAttribute('aria-hidden', 'true');\n        // We need to set this explicitly, otherwise on IE11, the width inheritence of flex doesn't work.\n        this._domNode.style.width = `${FIND_WIDGET_INITIAL_WIDTH}px`;\n        this._domNode.appendChild(this._toggleReplaceBtn.domNode);\n        this._domNode.appendChild(findPart);\n        this._domNode.appendChild(replacePart);\n        this._resizeSash = new Sash(this._domNode, this, { orientation: 0 /* Orientation.VERTICAL */, size: 2 });\n        this._resized = false;\n        let originalWidth = FIND_WIDGET_INITIAL_WIDTH;\n        this._register(this._resizeSash.onDidStart(() => {\n            originalWidth = dom.getTotalWidth(this._domNode);\n        }));\n        this._register(this._resizeSash.onDidChange((evt) => {\n            this._resized = true;\n            const width = originalWidth + evt.startX - evt.currentX;\n            if (width < FIND_WIDGET_INITIAL_WIDTH) {\n                // narrow down the find widget should be handled by CSS.\n                return;\n            }\n            const maxWidth = parseFloat(dom.getComputedStyle(this._domNode).maxWidth) || 0;\n            if (width > maxWidth) {\n                return;\n            }\n            this._domNode.style.width = `${width}px`;\n            if (this._isReplaceVisible) {\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n            }\n            this._findInput.inputBox.layout();\n            this._tryUpdateHeight();\n        }));\n        this._register(this._resizeSash.onDidReset(() => {\n            // users double click on the sash\n            const currentWidth = dom.getTotalWidth(this._domNode);\n            if (currentWidth < FIND_WIDGET_INITIAL_WIDTH) {\n                // The editor is narrow and the width of the find widget is controlled fully by CSS.\n                return;\n            }\n            let width = FIND_WIDGET_INITIAL_WIDTH;\n            if (!this._resized || currentWidth === FIND_WIDGET_INITIAL_WIDTH) {\n                // 1. never resized before, double click should maximizes it\n                // 2. users resized it already but its width is the same as default\n                const layoutInfo = this._codeEditor.getLayoutInfo();\n                width = layoutInfo.width - 28 - layoutInfo.minimap.minimapWidth - 15;\n                this._resized = true;\n            }\n            else {\n                /**\n                 * no op, the find widget should be shrinked to its default size.\n                 */\n            }\n            this._domNode.style.width = `${width}px`;\n            if (this._isReplaceVisible) {\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n            }\n            this._findInput.inputBox.layout();\n        }));\n    }\n    updateAccessibilitySupport() {\n        const value = this._codeEditor.getOption(2 /* EditorOption.accessibilitySupport */);\n        this._findInput.setFocusInputOnOptionClick(value !== 2 /* AccessibilitySupport.Enabled */);\n    }\n}\nFindWidget.ID = 'editor.contrib.findWidget';\nexport class SimpleButton extends Widget {\n    constructor(opts) {\n        super();\n        this._opts = opts;\n        let className = 'button';\n        if (this._opts.className) {\n            className = className + ' ' + this._opts.className;\n        }\n        if (this._opts.icon) {\n            className = className + ' ' + ThemeIcon.asClassName(this._opts.icon);\n        }\n        this._domNode = document.createElement('div');\n        this._domNode.title = this._opts.label;\n        this._domNode.tabIndex = 0;\n        this._domNode.className = className;\n        this._domNode.setAttribute('role', 'button');\n        this._domNode.setAttribute('aria-label', this._opts.label);\n        this.onclick(this._domNode, (e) => {\n            this._opts.onTrigger();\n            e.preventDefault();\n        });\n        this.onkeydown(this._domNode, (e) => {\n            var _a, _b;\n            if (e.equals(10 /* KeyCode.Space */) || e.equals(3 /* KeyCode.Enter */)) {\n                this._opts.onTrigger();\n                e.preventDefault();\n                return;\n            }\n            (_b = (_a = this._opts).onKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n        });\n    }\n    get domNode() {\n        return this._domNode;\n    }\n    isEnabled() {\n        return (this._domNode.tabIndex >= 0);\n    }\n    focus() {\n        this._domNode.focus();\n    }\n    setEnabled(enabled) {\n        this._domNode.classList.toggle('disabled', !enabled);\n        this._domNode.setAttribute('aria-disabled', String(!enabled));\n        this._domNode.tabIndex = enabled ? 0 : -1;\n    }\n    setExpanded(expanded) {\n        this._domNode.setAttribute('aria-expanded', String(!!expanded));\n        if (expanded) {\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findExpandedIcon));\n        }\n        else {\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findExpandedIcon));\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n        }\n    }\n}\n// theming\nregisterThemingParticipant((theme, collector) => {\n    const addBackgroundColorRule = (selector, color) => {\n        if (color) {\n            collector.addRule(`.monaco-editor ${selector} { background-color: ${color}; }`);\n        }\n    };\n    addBackgroundColorRule('.findMatch', theme.getColor(editorFindMatchHighlight));\n    addBackgroundColorRule('.currentFindMatch', theme.getColor(editorFindMatch));\n    addBackgroundColorRule('.findScope', theme.getColor(editorFindRangeHighlight));\n    const widgetBackground = theme.getColor(editorWidgetBackground);\n    addBackgroundColorRule('.find-widget', widgetBackground);\n    const widgetShadowColor = theme.getColor(widgetShadow);\n    if (widgetShadowColor) {\n        collector.addRule(`.monaco-editor .find-widget { box-shadow: 0 0 8px 2px ${widgetShadowColor}; }`);\n    }\n    const widgetBorderColor = theme.getColor(widgetBorder);\n    if (widgetBorderColor) {\n        collector.addRule(`.monaco-editor .find-widget { border-left: 1px solid ${widgetBorderColor}; border-right: 1px solid ${widgetBorderColor}; border-bottom: 1px solid ${widgetBorderColor}; }`);\n    }\n    const findMatchHighlightBorder = theme.getColor(editorFindMatchHighlightBorder);\n    if (findMatchHighlightBorder) {\n        collector.addRule(`.monaco-editor .findMatch { border: 1px ${isHighContrast(theme.type) ? 'dotted' : 'solid'} ${findMatchHighlightBorder}; box-sizing: border-box; }`);\n    }\n    const findMatchBorder = theme.getColor(editorFindMatchBorder);\n    if (findMatchBorder) {\n        collector.addRule(`.monaco-editor .currentFindMatch { border: 2px solid ${findMatchBorder}; padding: 1px; box-sizing: border-box; }`);\n    }\n    const findRangeHighlightBorder = theme.getColor(editorFindRangeHighlightBorder);\n    if (findRangeHighlightBorder) {\n        collector.addRule(`.monaco-editor .findScope { border: 1px ${isHighContrast(theme.type) ? 'dashed' : 'solid'} ${findRangeHighlightBorder}; }`);\n    }\n    const hcBorder = theme.getColor(contrastBorder);\n    if (hcBorder) {\n        collector.addRule(`.monaco-editor .find-widget { border: 1px solid ${hcBorder}; }`);\n    }\n    const foreground = theme.getColor(editorWidgetForeground);\n    if (foreground) {\n        collector.addRule(`.monaco-editor .find-widget { color: ${foreground}; }`);\n    }\n    const error = theme.getColor(errorForeground);\n    if (error) {\n        collector.addRule(`.monaco-editor .find-widget.no-results .matchesCount { color: ${error}; }`);\n    }\n    const resizeBorderBackground = theme.getColor(editorWidgetResizeBorder);\n    if (resizeBorderBackground) {\n        collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${resizeBorderBackground}; }`);\n    }\n    else {\n        const border = theme.getColor(editorWidgetBorder);\n        if (border) {\n            collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${border}; }`);\n        }\n    }\n    // Action bars\n    const toolbarHoverBackgroundColor = theme.getColor(toolbarHoverBackground);\n    if (toolbarHoverBackgroundColor) {\n        collector.addRule(`\n\t\t.monaco-editor .find-widget .button:not(.disabled):hover,\n\t\t.monaco-editor .find-widget .codicon-find-selection:hover {\n\t\t\tbackground-color: ${toolbarHoverBackgroundColor} !important;\n\t\t}\n\t`);\n    }\n    // This rule is used to override the outline color for synthetic-focus find input.\n    const focusOutline = theme.getColor(focusBorder);\n    if (focusOutline) {\n        collector.addRule(`.monaco-editor .find-widget .monaco-inputbox.synthetic-focus { outline-color: ${focusOutline}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Delayer } from '../../../../base/common/async.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { EditorAction, EditorCommand, MultiEditorAction, registerEditorAction, registerEditorCommand, registerEditorContribution, registerMultiEditorAction } from '../../../browser/editorExtensions.js';\nimport { overviewRulerRangeHighlight } from '../../../common/core/editorColorRegistry.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { OverviewRulerLane } from '../../../common/model.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_FIND_WIDGET_VISIBLE, CONTEXT_REPLACE_INPUT_FOCUSED, FindModelBoundToEditorModel, FIND_IDS, ToggleCaseSensitiveKeybinding, TogglePreserveCaseKeybinding, ToggleRegexKeybinding, ToggleSearchScopeKeybinding, ToggleWholeWordKeybinding } from './findModel.js';\nimport { FindOptionsWidget } from './findOptionsWidget.js';\nimport { FindReplaceState } from './findState.js';\nimport { FindWidget } from './findWidget.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextViewService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { IThemeService, themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nconst SEARCH_STRING_MAX_LENGTH = 524288;\nexport function getSelectionSearchString(editor, seedSearchStringFromSelection = 'single', seedSearchStringFromNonEmptySelection = false) {\n    if (!editor.hasModel()) {\n        return null;\n    }\n    const selection = editor.getSelection();\n    // if selection spans multiple lines, default search string to empty\n    if ((seedSearchStringFromSelection === 'single' && selection.startLineNumber === selection.endLineNumber)\n        || seedSearchStringFromSelection === 'multiple') {\n        if (selection.isEmpty()) {\n            const wordAtPosition = editor.getConfiguredWordAtPosition(selection.getStartPosition());\n            if (wordAtPosition && (false === seedSearchStringFromNonEmptySelection)) {\n                return wordAtPosition.word;\n            }\n        }\n        else {\n            if (editor.getModel().getValueLengthInRange(selection) < SEARCH_STRING_MAX_LENGTH) {\n                return editor.getModel().getValueInRange(selection);\n            }\n        }\n    }\n    return null;\n}\nexport let CommonFindController = class CommonFindController extends Disposable {\n    get editor() {\n        return this._editor;\n    }\n    static get(editor) {\n        return editor.getContribution(CommonFindController.ID);\n    }\n    constructor(editor, contextKeyService, storageService, clipboardService) {\n        super();\n        this._editor = editor;\n        this._findWidgetVisible = CONTEXT_FIND_WIDGET_VISIBLE.bindTo(contextKeyService);\n        this._contextKeyService = contextKeyService;\n        this._storageService = storageService;\n        this._clipboardService = clipboardService;\n        this._updateHistoryDelayer = new Delayer(500);\n        this._state = this._register(new FindReplaceState());\n        this.loadQueryState();\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this._model = null;\n        this._register(this._editor.onDidChangeModel(() => {\n            const shouldRestartFind = (this._editor.getModel() && this._state.isRevealed);\n            this.disposeModel();\n            this._state.change({\n                searchScope: null,\n                matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* StorageScope.WORKSPACE */, false),\n                wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* StorageScope.WORKSPACE */, false),\n                isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* StorageScope.WORKSPACE */, false),\n                preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* StorageScope.WORKSPACE */, false)\n            }, false);\n            if (shouldRestartFind) {\n                this._start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: 'none',\n                    seedSearchStringFromNonEmptySelection: false,\n                    seedSearchStringFromGlobalClipboard: false,\n                    shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                    shouldAnimate: false,\n                    updateSearchScope: false,\n                    loop: this._editor.getOption(39 /* EditorOption.find */).loop\n                });\n            }\n        }));\n    }\n    dispose() {\n        this.disposeModel();\n        super.dispose();\n    }\n    disposeModel() {\n        if (this._model) {\n            this._model.dispose();\n            this._model = null;\n        }\n    }\n    _onStateChanged(e) {\n        this.saveQueryState(e);\n        if (e.isRevealed) {\n            if (this._state.isRevealed) {\n                this._findWidgetVisible.set(true);\n            }\n            else {\n                this._findWidgetVisible.reset();\n                this.disposeModel();\n            }\n        }\n        if (e.searchString) {\n            this.setGlobalBufferTerm(this._state.searchString);\n        }\n    }\n    saveQueryState(e) {\n        if (e.isRegex) {\n            this._storageService.store('editor.isRegex', this._state.actualIsRegex, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        if (e.wholeWord) {\n            this._storageService.store('editor.wholeWord', this._state.actualWholeWord, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        if (e.matchCase) {\n            this._storageService.store('editor.matchCase', this._state.actualMatchCase, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        if (e.preserveCase) {\n            this._storageService.store('editor.preserveCase', this._state.actualPreserveCase, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n    }\n    loadQueryState() {\n        this._state.change({\n            matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* StorageScope.WORKSPACE */, this._state.matchCase),\n            wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* StorageScope.WORKSPACE */, this._state.wholeWord),\n            isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* StorageScope.WORKSPACE */, this._state.isRegex),\n            preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* StorageScope.WORKSPACE */, this._state.preserveCase)\n        }, false);\n    }\n    isFindInputFocused() {\n        return !!CONTEXT_FIND_INPUT_FOCUSED.getValue(this._contextKeyService);\n    }\n    getState() {\n        return this._state;\n    }\n    closeFindWidget() {\n        this._state.change({\n            isRevealed: false,\n            searchScope: null\n        }, false);\n        this._editor.focus();\n    }\n    toggleCaseSensitive() {\n        this._state.change({ matchCase: !this._state.matchCase }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleWholeWords() {\n        this._state.change({ wholeWord: !this._state.wholeWord }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleRegex() {\n        this._state.change({ isRegex: !this._state.isRegex }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    togglePreserveCase() {\n        this._state.change({ preserveCase: !this._state.preserveCase }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleSearchScope() {\n        if (this._state.searchScope) {\n            this._state.change({ searchScope: null }, true);\n        }\n        else {\n            if (this._editor.hasModel()) {\n                const selections = this._editor.getSelections();\n                selections.map(selection => {\n                    if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                        selection = selection.setEndPosition(selection.endLineNumber - 1, this._editor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                    }\n                    if (!selection.isEmpty()) {\n                        return selection;\n                    }\n                    return null;\n                }).filter(element => !!element);\n                if (selections.length) {\n                    this._state.change({ searchScope: selections }, true);\n                }\n            }\n        }\n    }\n    setSearchString(searchString) {\n        if (this._state.isRegex) {\n            searchString = strings.escapeRegExpCharacters(searchString);\n        }\n        this._state.change({ searchString: searchString }, false);\n    }\n    highlightFindOptions(ignoreWhenVisible = false) {\n        // overwritten in subclass\n    }\n    _start(opts, newState) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.disposeModel();\n            if (!this._editor.hasModel()) {\n                // cannot do anything with an editor that doesn't have a model...\n                return;\n            }\n            const stateChanges = Object.assign(Object.assign({}, newState), { isRevealed: true });\n            if (opts.seedSearchStringFromSelection === 'single') {\n                const selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection, opts.seedSearchStringFromNonEmptySelection);\n                if (selectionSearchString) {\n                    if (this._state.isRegex) {\n                        stateChanges.searchString = strings.escapeRegExpCharacters(selectionSearchString);\n                    }\n                    else {\n                        stateChanges.searchString = selectionSearchString;\n                    }\n                }\n            }\n            else if (opts.seedSearchStringFromSelection === 'multiple' && !opts.updateSearchScope) {\n                const selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection);\n                if (selectionSearchString) {\n                    stateChanges.searchString = selectionSearchString;\n                }\n            }\n            if (!stateChanges.searchString && opts.seedSearchStringFromGlobalClipboard) {\n                const selectionSearchString = yield this.getGlobalBufferTerm();\n                if (!this._editor.hasModel()) {\n                    // the editor has lost its model in the meantime\n                    return;\n                }\n                if (selectionSearchString) {\n                    stateChanges.searchString = selectionSearchString;\n                }\n            }\n            // Overwrite isReplaceRevealed\n            if (opts.forceRevealReplace || stateChanges.isReplaceRevealed) {\n                stateChanges.isReplaceRevealed = true;\n            }\n            else if (!this._findWidgetVisible.get()) {\n                stateChanges.isReplaceRevealed = false;\n            }\n            if (opts.updateSearchScope) {\n                const currentSelections = this._editor.getSelections();\n                if (currentSelections.some(selection => !selection.isEmpty())) {\n                    stateChanges.searchScope = currentSelections;\n                }\n            }\n            stateChanges.loop = opts.loop;\n            this._state.change(stateChanges, false);\n            if (!this._model) {\n                this._model = new FindModelBoundToEditorModel(this._editor, this._state);\n            }\n        });\n    }\n    start(opts, newState) {\n        return this._start(opts, newState);\n    }\n    moveToNextMatch() {\n        if (this._model) {\n            this._model.moveToNextMatch();\n            return true;\n        }\n        return false;\n    }\n    moveToPrevMatch() {\n        if (this._model) {\n            this._model.moveToPrevMatch();\n            return true;\n        }\n        return false;\n    }\n    goToMatch(index) {\n        if (this._model) {\n            this._model.moveToMatch(index);\n            return true;\n        }\n        return false;\n    }\n    replace() {\n        if (this._model) {\n            this._model.replace();\n            return true;\n        }\n        return false;\n    }\n    replaceAll() {\n        if (this._model) {\n            this._model.replaceAll();\n            return true;\n        }\n        return false;\n    }\n    selectAllMatches() {\n        if (this._model) {\n            this._model.selectAllMatches();\n            this._editor.focus();\n            return true;\n        }\n        return false;\n    }\n    getGlobalBufferTerm() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._editor.getOption(39 /* EditorOption.find */).globalFindClipboard\n                && this._editor.hasModel()\n                && !this._editor.getModel().isTooLargeForSyncing()) {\n                return this._clipboardService.readFindText();\n            }\n            return '';\n        });\n    }\n    setGlobalBufferTerm(text) {\n        if (this._editor.getOption(39 /* EditorOption.find */).globalFindClipboard\n            && this._editor.hasModel()\n            && !this._editor.getModel().isTooLargeForSyncing()) {\n            // intentionally not awaited\n            this._clipboardService.writeFindText(text);\n        }\n    }\n};\nCommonFindController.ID = 'editor.contrib.findController';\nCommonFindController = __decorate([\n    __param(1, IContextKeyService),\n    __param(2, IStorageService),\n    __param(3, IClipboardService)\n], CommonFindController);\nexport let FindController = class FindController extends CommonFindController {\n    constructor(editor, _contextViewService, _contextKeyService, _keybindingService, _themeService, _notificationService, _storageService, clipboardService) {\n        super(editor, _contextKeyService, _storageService, clipboardService);\n        this._contextViewService = _contextViewService;\n        this._keybindingService = _keybindingService;\n        this._themeService = _themeService;\n        this._notificationService = _notificationService;\n        this._widget = null;\n        this._findOptionsWidget = null;\n    }\n    _start(opts, newState) {\n        const _super = Object.create(null, {\n            _start: { get: () => super._start }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._widget) {\n                this._createFindWidget();\n            }\n            const selection = this._editor.getSelection();\n            let updateSearchScope = false;\n            switch (this._editor.getOption(39 /* EditorOption.find */).autoFindInSelection) {\n                case 'always':\n                    updateSearchScope = true;\n                    break;\n                case 'never':\n                    updateSearchScope = false;\n                    break;\n                case 'multiline': {\n                    const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n                    updateSearchScope = isSelectionMultipleLine;\n                    break;\n                }\n                default:\n                    break;\n            }\n            opts.updateSearchScope = opts.updateSearchScope || updateSearchScope;\n            yield _super._start.call(this, opts, newState);\n            if (this._widget) {\n                if (opts.shouldFocus === 2 /* FindStartFocusAction.FocusReplaceInput */) {\n                    this._widget.focusReplaceInput();\n                }\n                else if (opts.shouldFocus === 1 /* FindStartFocusAction.FocusFindInput */) {\n                    this._widget.focusFindInput();\n                }\n            }\n        });\n    }\n    highlightFindOptions(ignoreWhenVisible = false) {\n        if (!this._widget) {\n            this._createFindWidget();\n        }\n        if (this._state.isRevealed && !ignoreWhenVisible) {\n            this._widget.highlightFindOptions();\n        }\n        else {\n            this._findOptionsWidget.highlightFindOptions();\n        }\n    }\n    _createFindWidget() {\n        this._widget = this._register(new FindWidget(this._editor, this, this._state, this._contextViewService, this._keybindingService, this._contextKeyService, this._themeService, this._storageService, this._notificationService));\n        this._findOptionsWidget = this._register(new FindOptionsWidget(this._editor, this._state, this._keybindingService));\n    }\n};\nFindController = __decorate([\n    __param(1, IContextViewService),\n    __param(2, IContextKeyService),\n    __param(3, IKeybindingService),\n    __param(4, IThemeService),\n    __param(5, INotificationService),\n    __param(6, IStorageService),\n    __param(7, IClipboardService)\n], FindController);\nexport const StartFindAction = registerMultiEditorAction(new MultiEditorAction({\n    id: FIND_IDS.StartFindAction,\n    label: nls.localize('startFindAction', \"Find\"),\n    alias: 'Find',\n    precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n    kbOpts: {\n        kbExpr: null,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 36 /* KeyCode.KeyF */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n    },\n    menuOpts: {\n        menuId: MenuId.MenubarEditMenu,\n        group: '3_find',\n        title: nls.localize({ key: 'miFind', comment: ['&& denotes a mnemonic'] }, \"&&Find\"),\n        order: 1\n    }\n}));\nStartFindAction.addImplementation(0, (accessor, editor, args) => {\n    const controller = CommonFindController.get(editor);\n    if (!controller) {\n        return false;\n    }\n    return controller.start({\n        forceRevealReplace: false,\n        seedSearchStringFromSelection: editor.getOption(39 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n        seedSearchStringFromNonEmptySelection: editor.getOption(39 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n        seedSearchStringFromGlobalClipboard: editor.getOption(39 /* EditorOption.find */).globalFindClipboard,\n        shouldFocus: 1 /* FindStartFocusAction.FocusFindInput */,\n        shouldAnimate: true,\n        updateSearchScope: false,\n        loop: editor.getOption(39 /* EditorOption.find */).loop\n    });\n});\nconst findArgDescription = {\n    description: 'Open a new In-Editor Find Widget.',\n    args: [{\n            name: 'Open a new In-Editor Find Widget args',\n            schema: {\n                properties: {\n                    searchString: { type: 'string' },\n                    replaceString: { type: 'string' },\n                    regex: { type: 'boolean' },\n                    regexOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.isRegexOverride', 'Overrides \"Use Regular Expression\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    wholeWord: { type: 'boolean' },\n                    wholeWordOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.wholeWordOverride', 'Overrides \"Match Whole Word\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    matchCase: { type: 'boolean' },\n                    matchCaseOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.matchCaseOverride', 'Overrides \"Math Case\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    preserveCase: { type: 'boolean' },\n                    preserveCaseOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.preserveCaseOverride', 'Overrides \"Preserve Case\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    findInSelection: { type: 'boolean' },\n                }\n            }\n        }]\n};\nexport class StartFindWithArgsAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.StartFindWithArgs,\n            label: nls.localize('startFindWithArgsAction', \"Find With Arguments\"),\n            alias: 'Find With Arguments',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: null,\n                primary: 0,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            description: findArgDescription\n        });\n    }\n    run(accessor, editor, args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (controller) {\n                const newState = args ? {\n                    searchString: args.searchString,\n                    replaceString: args.replaceString,\n                    isReplaceRevealed: args.replaceString !== undefined,\n                    isRegex: args.isRegex,\n                    // isRegexOverride: args.regexOverride,\n                    wholeWord: args.matchWholeWord,\n                    // wholeWordOverride: args.wholeWordOverride,\n                    matchCase: args.isCaseSensitive,\n                    // matchCaseOverride: args.matchCaseOverride,\n                    preserveCase: args.preserveCase,\n                    // preserveCaseOverride: args.preserveCaseOverride,\n                } : {};\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: (controller.getState().searchString.length === 0) && editor.getOption(39 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n                    seedSearchStringFromNonEmptySelection: editor.getOption(39 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n                    seedSearchStringFromGlobalClipboard: true,\n                    shouldFocus: 1 /* FindStartFocusAction.FocusFindInput */,\n                    shouldAnimate: true,\n                    updateSearchScope: (args === null || args === void 0 ? void 0 : args.findInSelection) || false,\n                    loop: editor.getOption(39 /* EditorOption.find */).loop\n                }, newState);\n                controller.setGlobalBufferTerm(controller.getState().searchString);\n            }\n        });\n    }\n}\nexport class StartFindWithSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.StartFindWithSelection,\n            label: nls.localize('startFindWithSelectionAction', \"Find With Selection\"),\n            alias: 'Find With Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: null,\n                primary: 0,\n                mac: {\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 35 /* KeyCode.KeyE */,\n                },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (controller) {\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: 'multiple',\n                    seedSearchStringFromNonEmptySelection: false,\n                    seedSearchStringFromGlobalClipboard: false,\n                    shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                    shouldAnimate: true,\n                    updateSearchScope: false,\n                    loop: editor.getOption(39 /* EditorOption.find */).loop\n                });\n                controller.setGlobalBufferTerm(controller.getState().searchString);\n            }\n        });\n    }\n}\nexport class MatchFindAction extends EditorAction {\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (controller && !this._run(controller)) {\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: (controller.getState().searchString.length === 0) && editor.getOption(39 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n                    seedSearchStringFromNonEmptySelection: editor.getOption(39 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n                    seedSearchStringFromGlobalClipboard: true,\n                    shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                    shouldAnimate: true,\n                    updateSearchScope: false,\n                    loop: editor.getOption(39 /* EditorOption.find */).loop\n                });\n                this._run(controller);\n            }\n        });\n    }\n}\nexport class NextMatchFindAction extends MatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.NextMatchFindAction,\n            label: nls.localize('findNextMatchAction', \"Find Next\"),\n            alias: 'Find Next',\n            precondition: undefined,\n            kbOpts: [{\n                    kbExpr: EditorContextKeys.focus,\n                    primary: 61 /* KeyCode.F3 */,\n                    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 37 /* KeyCode.KeyG */, secondary: [61 /* KeyCode.F3 */] },\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }, {\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n                    primary: 3 /* KeyCode.Enter */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }]\n        });\n    }\n    _run(controller) {\n        const result = controller.moveToNextMatch();\n        if (result) {\n            controller.editor.pushUndoStop();\n            return true;\n        }\n        return false;\n    }\n}\nexport class PreviousMatchFindAction extends MatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.PreviousMatchFindAction,\n            label: nls.localize('findPreviousMatchAction', \"Find Previous\"),\n            alias: 'Find Previous',\n            precondition: undefined,\n            kbOpts: [{\n                    kbExpr: EditorContextKeys.focus,\n                    primary: 1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */,\n                    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 37 /* KeyCode.KeyG */, secondary: [1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */] },\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }, {\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n                    primary: 1024 /* KeyMod.Shift */ | 3 /* KeyCode.Enter */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }\n            ]\n        });\n    }\n    _run(controller) {\n        return controller.moveToPrevMatch();\n    }\n}\nexport class MoveToMatchFindAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.GoToMatchFindAction,\n            label: nls.localize('findMatchAction.goToMatch', \"Go to Match...\"),\n            alias: 'Go to Match...',\n            precondition: CONTEXT_FIND_WIDGET_VISIBLE\n        });\n        this._highlightDecorations = [];\n    }\n    run(accessor, editor, args) {\n        const controller = CommonFindController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const matchesCount = controller.getState().matchesCount;\n        if (matchesCount < 1) {\n            const notificationService = accessor.get(INotificationService);\n            notificationService.notify({\n                severity: Severity.Warning,\n                message: nls.localize('findMatchAction.noResults', \"No matches. Try searching for something else.\")\n            });\n            return;\n        }\n        const quickInputService = accessor.get(IQuickInputService);\n        const inputBox = quickInputService.createInputBox();\n        inputBox.placeholder = nls.localize('findMatchAction.inputPlaceHolder', \"Type a number to go to a specific match (between 1 and {0})\", matchesCount);\n        const toFindMatchIndex = (value) => {\n            const index = parseInt(value);\n            if (isNaN(index)) {\n                return undefined;\n            }\n            const matchCount = controller.getState().matchesCount;\n            if (index > 0 && index <= matchCount) {\n                return index - 1; // zero based\n            }\n            else if (index < 0 && index >= -matchCount) {\n                return matchCount + index;\n            }\n            return undefined;\n        };\n        const updatePickerAndEditor = (value) => {\n            const index = toFindMatchIndex(value);\n            if (typeof index === 'number') {\n                // valid\n                inputBox.validationMessage = undefined;\n                controller.goToMatch(index);\n                const currentMatch = controller.getState().currentMatch;\n                if (currentMatch) {\n                    this.addDecorations(editor, currentMatch);\n                }\n            }\n            else {\n                inputBox.validationMessage = nls.localize('findMatchAction.inputValidationMessage', \"Please type a number between 1 and {0}\", controller.getState().matchesCount);\n                this.clearDecorations(editor);\n            }\n        };\n        inputBox.onDidChangeValue(value => {\n            updatePickerAndEditor(value);\n        });\n        inputBox.onDidAccept(() => {\n            const index = toFindMatchIndex(inputBox.value);\n            if (typeof index === 'number') {\n                controller.goToMatch(index);\n                inputBox.hide();\n            }\n            else {\n                inputBox.validationMessage = nls.localize('findMatchAction.inputValidationMessage', \"Please type a number between 1 and {0}\", controller.getState().matchesCount);\n            }\n        });\n        inputBox.onDidHide(() => {\n            this.clearDecorations(editor);\n            inputBox.dispose();\n        });\n        inputBox.show();\n    }\n    clearDecorations(editor) {\n        editor.changeDecorations(changeAccessor => {\n            this._highlightDecorations = changeAccessor.deltaDecorations(this._highlightDecorations, []);\n        });\n    }\n    addDecorations(editor, range) {\n        editor.changeDecorations(changeAccessor => {\n            this._highlightDecorations = changeAccessor.deltaDecorations(this._highlightDecorations, [\n                {\n                    range,\n                    options: {\n                        description: 'find-match-quick-access-range-highlight',\n                        className: 'rangeHighlight',\n                        isWholeLine: true\n                    }\n                },\n                {\n                    range,\n                    options: {\n                        description: 'find-match-quick-access-range-highlight-overview',\n                        overviewRuler: {\n                            color: themeColorFromId(overviewRulerRangeHighlight),\n                            position: OverviewRulerLane.Full\n                        }\n                    }\n                }\n            ]);\n        });\n    }\n}\nexport class SelectionMatchFindAction extends EditorAction {\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (!controller) {\n                return;\n            }\n            const selectionSearchString = getSelectionSearchString(editor, 'single', false);\n            if (selectionSearchString) {\n                controller.setSearchString(selectionSearchString);\n            }\n            if (!this._run(controller)) {\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: 'none',\n                    seedSearchStringFromNonEmptySelection: false,\n                    seedSearchStringFromGlobalClipboard: false,\n                    shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                    shouldAnimate: true,\n                    updateSearchScope: false,\n                    loop: editor.getOption(39 /* EditorOption.find */).loop\n                });\n                this._run(controller);\n            }\n        });\n    }\n}\nexport class NextSelectionMatchFindAction extends SelectionMatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.NextSelectionMatchFindAction,\n            label: nls.localize('nextSelectionMatchFindAction', \"Find Next Selection\"),\n            alias: 'Find Next Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.focus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 61 /* KeyCode.F3 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _run(controller) {\n        return controller.moveToNextMatch();\n    }\n}\nexport class PreviousSelectionMatchFindAction extends SelectionMatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.PreviousSelectionMatchFindAction,\n            label: nls.localize('previousSelectionMatchFindAction', \"Find Previous Selection\"),\n            alias: 'Find Previous Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.focus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _run(controller) {\n        return controller.moveToPrevMatch();\n    }\n}\nexport const StartFindReplaceAction = registerMultiEditorAction(new MultiEditorAction({\n    id: FIND_IDS.StartFindReplaceAction,\n    label: nls.localize('startReplace', \"Replace\"),\n    alias: 'Replace',\n    precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n    kbOpts: {\n        kbExpr: null,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 38 /* KeyCode.KeyH */,\n        mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 36 /* KeyCode.KeyF */ },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n    },\n    menuOpts: {\n        menuId: MenuId.MenubarEditMenu,\n        group: '3_find',\n        title: nls.localize({ key: 'miReplace', comment: ['&& denotes a mnemonic'] }, \"&&Replace\"),\n        order: 2\n    }\n}));\nStartFindReplaceAction.addImplementation(0, (accessor, editor, args) => {\n    if (!editor.hasModel() || editor.getOption(88 /* EditorOption.readOnly */)) {\n        return false;\n    }\n    const controller = CommonFindController.get(editor);\n    if (!controller) {\n        return false;\n    }\n    const currentSelection = editor.getSelection();\n    const findInputFocused = controller.isFindInputFocused();\n    // we only seed search string from selection when the current selection is single line and not empty,\n    // + the find input is not focused\n    const seedSearchStringFromSelection = !currentSelection.isEmpty()\n        && currentSelection.startLineNumber === currentSelection.endLineNumber\n        && (editor.getOption(39 /* EditorOption.find */).seedSearchStringFromSelection !== 'never')\n        && !findInputFocused;\n    /*\n    * if the existing search string in find widget is empty and we don't seed search string from selection, it means the Find Input is still empty, so we should focus the Find Input instead of Replace Input.\n\n    * findInputFocused true -> seedSearchStringFromSelection false, FocusReplaceInput\n    * findInputFocused false, seedSearchStringFromSelection true FocusReplaceInput\n    * findInputFocused false seedSearchStringFromSelection false FocusFindInput\n    */\n    const shouldFocus = (findInputFocused || seedSearchStringFromSelection) ?\n        2 /* FindStartFocusAction.FocusReplaceInput */ : 1 /* FindStartFocusAction.FocusFindInput */;\n    return controller.start({\n        forceRevealReplace: true,\n        seedSearchStringFromSelection: seedSearchStringFromSelection ? 'single' : 'none',\n        seedSearchStringFromNonEmptySelection: editor.getOption(39 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n        seedSearchStringFromGlobalClipboard: editor.getOption(39 /* EditorOption.find */).seedSearchStringFromSelection !== 'never',\n        shouldFocus: shouldFocus,\n        shouldAnimate: true,\n        updateSearchScope: false,\n        loop: editor.getOption(39 /* EditorOption.find */).loop\n    });\n});\nregisterEditorContribution(CommonFindController.ID, FindController, 0 /* EditorContributionInstantiation.Eager */); // eager because it uses `saveViewState`/`restoreViewState`\nregisterEditorAction(StartFindWithArgsAction);\nregisterEditorAction(StartFindWithSelectionAction);\nregisterEditorAction(NextMatchFindAction);\nregisterEditorAction(PreviousMatchFindAction);\nregisterEditorAction(MoveToMatchFindAction);\nregisterEditorAction(NextSelectionMatchFindAction);\nregisterEditorAction(PreviousSelectionMatchFindAction);\nconst FindCommand = EditorCommand.bindToContribution(CommonFindController.get);\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.CloseFindWidgetCommand,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.closeFindWidget(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\n        primary: 9 /* KeyCode.Escape */,\n        secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleCaseSensitiveCommand,\n    precondition: undefined,\n    handler: x => x.toggleCaseSensitive(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleCaseSensitiveKeybinding.primary,\n        mac: ToggleCaseSensitiveKeybinding.mac,\n        win: ToggleCaseSensitiveKeybinding.win,\n        linux: ToggleCaseSensitiveKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleWholeWordCommand,\n    precondition: undefined,\n    handler: x => x.toggleWholeWords(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleWholeWordKeybinding.primary,\n        mac: ToggleWholeWordKeybinding.mac,\n        win: ToggleWholeWordKeybinding.win,\n        linux: ToggleWholeWordKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleRegexCommand,\n    precondition: undefined,\n    handler: x => x.toggleRegex(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleRegexKeybinding.primary,\n        mac: ToggleRegexKeybinding.mac,\n        win: ToggleRegexKeybinding.win,\n        linux: ToggleRegexKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleSearchScopeCommand,\n    precondition: undefined,\n    handler: x => x.toggleSearchScope(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleSearchScopeKeybinding.primary,\n        mac: ToggleSearchScopeKeybinding.mac,\n        win: ToggleSearchScopeKeybinding.win,\n        linux: ToggleSearchScopeKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.TogglePreserveCaseCommand,\n    precondition: undefined,\n    handler: x => x.togglePreserveCase(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: TogglePreserveCaseKeybinding.primary,\n        mac: TogglePreserveCaseKeybinding.mac,\n        win: TogglePreserveCaseKeybinding.win,\n        linux: TogglePreserveCaseKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceOneAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replace(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 22 /* KeyCode.Digit1 */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceOneAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replace(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n        primary: 3 /* KeyCode.Enter */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceAllAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replaceAll(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 3 /* KeyCode.Enter */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceAllAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replaceAll(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n        primary: undefined,\n        mac: {\n            primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */,\n        }\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.SelectAllMatchesAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.selectAllMatches(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 512 /* KeyMod.Alt */ | 3 /* KeyCode.Enter */\n    }\n}));\n"],"names":["FindDecorations","editor","_classCallCheck","this","_editor","_decorations","_overviewRulerApproximateDecorations","_findScopeDecorationIds","_rangeHighlightDecorationId","_highlightedDecorationId","_startPosition","getPosition","_createClass","key","value","removeDecorations","_allDecorations","length","getModel","getDecorationRange","_this","scopes","map","findScopeDecorationId","filter","element","newStartPosition","setCurrentFindMatch","decorationId","index","indexOf","desiredRange","_step","candidates","getDecorationsInRange","_iterator","_createForOfIteratorHelper","s","n","done","candidate","candidateOpts","options","_FIND_MATCH_DECORATION","_CURRENT_FIND_MATCH_DECORATION","_getDecorationIndex","id","err","e","f","nextMatch","_this2","newCurrentDecorationId","matchPosition","i","len","range","equalsRange","changeDecorations","changeAccessor","changeDecorationOptions","removeDecoration","rng","startLineNumber","endLineNumber","endColumn","lineBeforeEnd","lineBeforeEndMaxColumn","getLineMaxColumn","Range","startColumn","addDecoration","_RANGE_HIGHLIGHT_DECORATION","findMatches","findScopes","_this3","accessor","findMatchesOptions","newOverviewRulerApproximateDecorations","_FIND_MATCH_NO_OVERVIEW_DECORATION","lineCount","getLineCount","approxPixelsPerLine","getLayoutInfo","height","mergeLinesDelta","Math","max","ceil","prevStartLineNumber","prevEndLineNumber","push","_FIND_MATCH_ONLY_OVERVIEW_DECORATION","newFindMatchesDecorations","Array","deltaDecorations","forEach","findScope","_FIND_SCOPE_DECORATION","position","r","lineNumber","column","_result","result","concat","apply","_toConsumableArray","ModelDecorationOptions","register","description","stickiness","zIndex","className","showIfCollapsed","overviewRuler","color","themeColorFromId","overviewRulerFindMatchForeground","OverviewRulerLane","Center","minimap","minimapFindMatch","MinimapPosition","Inline","isWholeLine","ReplaceAllCommand","editorSelection","ranges","replaceStrings","_editorSelection","_ranges","_replaceStrings","_trackedEditorSelectionId","model","builder","ops","text","sort","o1","o2","compareRangesUsingStarts","resultOps","previousOp","plusRange","_i2","_resultOps","op","addEditOperation","trackSelection","helper","getTrackedSelection","StaticValueReplacePattern","staticValue","kind","DynamicPiecesReplacePattern","pieces","ReplacePattern","_state","get","matches","preserveCase","buildReplaceStringWithCasePreserved","piece","match","_substitute","matchIndex","caseOps","repl","lenOps","opIdx","idx","slice","toUpperCase","toLowerCase","join","ReplacePiece","remainder","String","floor","ReplacePieceBuilder","source","_source","_lastCharIndex","_resultLen","_currentStaticPiece","toCharIndex","_emitStatic","substring","emitUnchanged","CONTEXT_FIND_WIDGET_VISIBLE","RawContextKey","CONTEXT_FIND_INPUT_FOCUSED","toNegated","CONTEXT_REPLACE_INPUT_FOCUSED","ToggleCaseSensitiveKeybinding","primary","mac","ToggleWholeWordKeybinding","ToggleRegexKeybinding","ToggleSearchScopeKeybinding","TogglePreserveCaseKeybinding","FIND_IDS","MATCHES_LIMIT","FindModelBoundToEditorModel","state","_toDispose","DisposableStore","_isDisposed","_startSearchingTimer","TimeoutTimer","add","_updateDecorationsScheduler","RunOnceScheduler","research","onDidChangeCursorPosition","reason","setStartPosition","_ignoreModelContentChanged","onDidChangeModelContent","isFlush","reset","schedule","onFindReplaceStateChange","_onStateChanged","searchScope","dispose","hasModel","searchString","isReplaceRevealed","isRegex","wholeWord","matchCase","isTooLargeForSyncing","cancel","setIfNotSet","moveCursor","newFindScope","isArray","getFindScopes","_findMatches","set","getSelection","currentMatchesPosition","getCurrentMatchesPosition","matchAfterSelection","findFirstInSorted","changeMatchInfo","getCount","undefined","getOption","cursorMoveOnType","_moveToNextMatch","getStartPosition","matchesCount","_hasMatches","getFindScope","revealRangeInCenterIfOutsideViewport","matchesPosition","setSelection","before","isUsingLineStops","Position","isRecursed","arguments","canNavigateBack","prevMatchRange","matchBeforePosition","isEmpty","equals","_prevSearchPosition","_setCurrentFindMatch","_cannotFind","searchRange","_getSearchRange","getEndPosition","isBefore","_before","prevMatch","findPreviousMatch","containsRange","_moveToPrevMatch","nextMatchRange","matchAfterPosition","after","canNavigateForward","_nextSearchPosition","_getNextMatch","captureMatches","forceMove","_after","findNextMatch","decorationRange","getDecorationRangeAt","_moveToMatch","replaceString","chCode","charCodeAt","nextChCode","emitStatic","emitMatchIndex","nextNextChCode","fromCharCode","finalize","parseReplaceString","fromStaticValue","replacePattern","_getReplacePattern","selection","buildReplaceString","command","ReplaceCommand","_executeEditorCommand","limitResultCount","_this4","searchRanges","scope","_largeReplaceAll","_regularReplaceAll","searchData","SearchParams","parseSearchRequest","searchRegex","regex","multiline","mod","ignoreCase","global","RegExp","resultText","modelText","getValue","fullModelRange","getFullModelRange","hasReplacementPatterns","replace","ReplaceCommandThatPreservesSelection","m","selections","Selection","setSelections","pushUndoStop","executeCommand","FindOptionsWidget","_Widget","_inherits","_super","_createSuper","keybindingService","call","_hideSoon","_register","_hide","_isVisible","_keybindingService","_domNode","document","createElement","style","display","top","setAttribute","toggleStyles","inputActiveOptionBorder","asCssVariable","inputActiveOptionForeground","inputActiveOptionBackground","caseSensitive","CaseSensitiveToggle","Object","assign","appendTitle","_keybindingLabelFor","isChecked","appendChild","domNode","onChange","change","checked","wholeWords","WholeWordsToggle","RegexToggle","addOverlayWidget","_assertThisInitialized","somethingChanged","isRevealed","_revealTemporarily","dom","addDisposableListener","EventType","MOUSE_LEAVE","_onMouseLeave","_onMouseOver","actionId","kb","lookupKeybinding","getLabel","removeOverlayWidget","_get","_getPrototypeOf","prototype","ID","preference","_show","Widget","effectiveOptionValue","override","FindReplaceState","_Disposable","_onFindReplaceStateChange","Emitter","event","_searchString","_replaceString","_isRevealed","_isReplaceRevealed","_isRegex","_isRegexOverride","_wholeWord","_wholeWordOverride","_matchCase","_matchCaseOverride","_preserveCase","_preserveCaseOverride","_searchScope","_matchesPosition","_matchesCount","_currentMatch","_loop","_isSearching","_filters","currentMatch","changeEvent","updateHistory","loop","isSearching","filters","fire","newState","_a","oldEffectiveIsRegex","oldEffectiveWholeWords","oldEffectiveMatchCase","oldEffectivePreserveCase","every","newSearchScope","some","existingSearchScope","update","isRegexOverride","wholeWordOverride","matchCaseOverride","preserveCaseOverride","canNavigateInLoop","Disposable","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","then","findSelectionIcon","registerIcon","Codicon","nls","findCollapsedIcon","chevronRight","findExpandedIcon","chevronDown","findReplaceIcon","findReplaceAllIcon","replaceAll","findPreviousMatchIcon","arrowUp","findNextMatchIcon","arrowDown","NLS_FIND_INPUT_LABEL","NLS_FIND_INPUT_PLACEHOLDER","NLS_PREVIOUS_MATCH_BTN_LABEL","NLS_NEXT_MATCH_BTN_LABEL","NLS_TOGGLE_SELECTION_FIND_TITLE","NLS_CLOSE_BTN_LABEL","NLS_REPLACE_INPUT_LABEL","NLS_REPLACE_INPUT_PLACEHOLDER","NLS_REPLACE_BTN_LABEL","NLS_REPLACE_ALL_BTN_LABEL","NLS_TOGGLE_REPLACE_MODE_BTN_LABEL","NLS_MATCHES_COUNT_LIMIT_TITLE","NLS_MATCHES_LOCATION","NLS_NO_RESULTS","FIND_WIDGET_INITIAL_WIDTH","MAX_MATCHES_COUNT_WIDTH","ctrlEnterReplaceAllWarningPromptedKey","ctrlKeyMod","platform","FindWidgetViewZone","afterLineNumber","heightInPx","suppressMouseDown","stopPropagationForMultiLineUpwards","textarea","isMultiline","selectionStart","stopPropagation","stopPropagationForMultiLineDownwards","selectionEnd","FindWidget","codeEditor","controller","contextViewProvider","contextKeyService","themeService","storageService","notificationService","_cachedHeight","_revealTimeouts","_codeEditor","_controller","_contextViewProvider","_contextKeyService","_storageService","_notificationService","_ctrlEnterReplaceAllWarningPrompted","getBoolean","_isReplaceVisible","_ignoreChangeEvent","_updateHistoryDelayer","Delayer","toDisposable","_buildDomNode","_updateButtons","_tryUpdateWidgetWidth","_findInput","inputBox","layout","onDidChangeConfiguration","hasChanged","updateAccessibilitySupport","supportLoop","addExtraSpaceOnTop","_viewZone","_showViewZone","_removeViewZone","onDidChangeCursorSelection","_updateToggleSelectionFindButton","onDidFocusEditorWidget","_regeneratorRuntime","mark","_callee","globalBufferTerm","wrap","_context","prev","getGlobalBufferTerm","sent","select","stop","_findInputFocused","bindTo","_findFocusTracker","trackFocus","inputElement","onDidFocus","_updateSearchScope","onDidBlur","_replaceInputFocused","_replaceFocusTracker","_replaceInput","onDidChangeModel","_viewZoneId","onDidScrollChange","scrollTopChanged","_layoutViewZone","setTimeout","setValue","_reveal","width","getTotalWidth","_tryUpdateHeight","setRegex","setWholeWords","setCaseSensitive","setPreserveCase","_toggleSelectionFind","showRedOutline","classList","toggle","_updateMatchesCount","_delayedUpdateHistory","trigger","_updateHistory","bind","onUnexpectedError","addToHistory","label","minWidth","title","firstChild","removeChild","strings","createTextNode","alertFn","_getAriaLabel","clientWidth","ariaLabel","lineContent","getLineContent","isSelection","enable","disable","setEnabled","_closeBtn","findInputIsNonEmpty","_prevBtn","_nextBtn","_replaceBtn","_replaceAllBtn","_toggleReplaceBtn","setExpanded","canReplace","clearTimeout","autoFindInSelection","isSelectionMultipleLine","validate","layoutOverlayWidget","adjustEditorScrollTop","seedSearchStringFromSelection","getDomNode","editorCoords","getDomNodePagePosition","startCoords","getScrolledVisiblePosition","startLeft","left","startTop","leftOfFindWidget","getTopLeftOffset","endCoords","focusTheEditor","remove","clearMessage","focus","targetScrollTop","viewZone","changeViewZones","_getHeight","addZone","setScrollTop","getScrollTop","adjustScroll","newHeight","scrollAdjustment","layoutZone","_this5","removeZone","isInDOM","layoutInfo","contentWidth","contains","editorWidth","minimapWidth","collapsedFindWidget","reducedFindWidget","narrowFindWidget","_resized","maxWidth","findInputWidth","totalheight","totalHeight","highlightFindOptions","_this6","getSelections","setEndPosition","middleButton","dispatchEvent","target","insertAtCursor","preventDefault","focusOnCaseSensitive","querySelector","info","store","_sash","_this7","ContextScopedFindInput","PART_WIDTH","placeholder","appendCaseSensitiveLabel","appendWholeWordsLabel","appendRegexLabel","validation","getRegex","content","message","flexibleHeight","flexibleWidth","flexibleMaxHeight","showCommonFindToggles","showHistoryHint","showHistoryKeybindingHint","inputBoxStyles","defaultInputBoxStyles","defaultToggleStyles","onKeyDown","_onFindInputKeyDown","onDidChange","onDidOptionChange","getWholeWords","getCaseSensitive","onCaseSensitiveKeyDown","onRegexKeyDown","focusOnPreserve","onDidHeightChange","onMouseDown","_onFindInputMouseDown","SimpleButton","icon","onTrigger","assertIsDefined","getAction","run","findPart","actionsContainer","Toggle","widgetClose","isEnabled","ContextScopedReplaceInput","appendPreserveCaseLabel","history","_onReplaceInputKeyDown","getPreserveCase","onPreserveCaseKeyDown","enabled","replacePart","replaceActionsContainer","_resizeSash","Sash","orientation","size","originalWidth","onDidStart","evt","startX","currentX","parseFloat","getComputedStyle","onDidReset","currentWidth","setFocusInputOnOptionClick","_Widget2","_super2","opts","_this8","_opts","ThemeIcon","asClassName","tabIndex","onclick","onkeydown","_b","expanded","_this$_domNode$classL","_this$_domNode$classL2","_this$_domNode$classL3","_this$_domNode$classL4","asClassNameArray","registerThemingParticipant","theme","collector","addBackgroundColorRule","selector","addRule","getColor","editorFindMatchHighlight","editorFindMatch","editorFindRangeHighlight","editorWidgetBackground","widgetShadowColor","widgetShadow","widgetBorderColor","widgetBorder","findMatchHighlightBorder","editorFindMatchHighlightBorder","isHighContrast","type","findMatchBorder","editorFindMatchBorder","findRangeHighlightBorder","editorFindRangeHighlightBorder","hcBorder","contrastBorder","foreground","editorWidgetForeground","error","errorForeground","resizeBorderBackground","editorWidgetResizeBorder","border","editorWidgetBorder","toolbarHoverBackgroundColor","toolbarHoverBackground","focusOutline","focusBorder","__decorate","decorators","desc","d","c","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","SEARCH_STRING_MAX_LENGTH","getSelectionSearchString","seedSearchStringFromNonEmptySelection","wordAtPosition","getConfiguredWordAtPosition","word","getValueLengthInRange","getValueInRange","CommonFindController","clipboardService","_findWidgetVisible","_clipboardService","loadQueryState","_model","shouldRestartFind","disposeModel","_start","forceRevealReplace","seedSearchStringFromGlobalClipboard","shouldFocus","shouldAnimate","updateSearchScope","saveQueryState","setGlobalBufferTerm","actualIsRegex","actualWholeWord","actualMatchCase","actualPreserveCase","stateChanges","selectionSearchString","_selectionSearchString","_selectionSearchString2","currentSelections","abrupt","moveToNextMatch","moveToPrevMatch","moveToMatch","selectAllMatches","_callee2","_context2","globalFindClipboard","readFindText","writeFindText","getContribution","FindController","_CommonFindController","_super3","_contextViewService","_themeService","_widget","_findOptionsWidget","create","_callee3","_context3","_createFindWidget","t0","focusReplaceInput","focusFindInput","ignoreWhenVisible","IContextKeyService","IStorageService","IClipboardService","IContextViewService","IKeybindingService","IThemeService","INotificationService","StartFindAction","registerMultiEditorAction","MultiEditorAction","alias","precondition","ContextKeyExpr","or","EditorContextKeys","has","kbOpts","kbExpr","weight","menuOpts","menuId","MenuId","MenubarEditMenu","group","comment","order","addImplementation","args","start","findArgDescription","name","schema","properties","regexOverride","findInSelection","StartFindWithArgsAction","_EditorAction","_super4","_callee4","_context4","matchWholeWord","isCaseSensitive","getState","EditorAction","StartFindWithSelectionAction","_EditorAction2","_super5","_callee5","_context5","MatchFindAction","_EditorAction3","_super6","_callee6","_context6","_run","NextMatchFindAction","_MatchFindAction","_super7","secondary","and","PreviousMatchFindAction","_MatchFindAction2","_super8","MoveToMatchFindAction","_EditorAction4","_super9","_highlightDecorations","notify","severity","Severity","Warning","IQuickInputService","createInputBox","toFindMatchIndex","parseInt","isNaN","matchCount","onDidChangeValue","validationMessage","goToMatch","addDecorations","clearDecorations","updatePickerAndEditor","onDidAccept","hide","onDidHide","show","overviewRulerRangeHighlight","Full","SelectionMatchFindAction","_EditorAction5","_super10","_callee7","_context7","setSearchString","NextSelectionMatchFindAction","_SelectionMatchFindAc","_super11","PreviousSelectionMatchFindAction","_SelectionMatchFindAc2","_super12","StartFindReplaceAction","currentSelection","findInputFocused","isFindInputFocused","registerEditorContribution","registerEditorAction","FindCommand","EditorCommand","bindToContribution","registerEditorCommand","handler","x","closeFindWidget","not","toggleCaseSensitive","win","linux","toggleWholeWords","toggleRegex","toggleSearchScope","togglePreserveCase"],"sourceRoot":""}