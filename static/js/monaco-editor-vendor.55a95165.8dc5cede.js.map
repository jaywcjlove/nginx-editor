{"version":3,"file":"static/js/monaco-editor-vendor.55a95165.8dc5cede.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/editor/browser/view/renderingContext.js","../node_modules/monaco-editor/esm/vs/editor/browser/view/viewController.js","../node_modules/monaco-editor/esm/vs/editor/browser/view/viewLayer.js","../node_modules/monaco-editor/esm/vs/editor/browser/view/viewOverlays.js","../node_modules/monaco-editor/esm/vs/editor/browser/view/viewPart.js","../node_modules/monaco-editor/esm/vs/editor/browser/view/viewUserInputEvents.js","../node_modules/monaco-editor/esm/vs/editor/browser/widget/codeEditorWidget.js","../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffReview.js","../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditorWidget.js","../node_modules/monaco-editor/esm/vs/editor/browser/widget/inlineDiffMargin.js","../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffNavigator.js","../node_modules/monaco-editor/esm/vs/editor/browser/widget/embeddedCodeEditorWidget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class RestrictedRenderingContext {\n    constructor(viewLayout, viewportData) {\n        this._restrictedRenderingContextBrand = undefined;\n        this._viewLayout = viewLayout;\n        this.viewportData = viewportData;\n        this.scrollWidth = this._viewLayout.getScrollWidth();\n        this.scrollHeight = this._viewLayout.getScrollHeight();\n        this.visibleRange = this.viewportData.visibleRange;\n        this.bigNumbersDelta = this.viewportData.bigNumbersDelta;\n        const vInfo = this._viewLayout.getCurrentViewport();\n        this.scrollTop = vInfo.top;\n        this.scrollLeft = vInfo.left;\n        this.viewportWidth = vInfo.width;\n        this.viewportHeight = vInfo.height;\n    }\n    getScrolledTopFromAbsoluteTop(absoluteTop) {\n        return absoluteTop - this.scrollTop;\n    }\n    getVerticalOffsetForLineNumber(lineNumber) {\n        return this._viewLayout.getVerticalOffsetForLineNumber(lineNumber);\n    }\n    getDecorationsInViewport() {\n        return this.viewportData.getDecorationsInViewport();\n    }\n}\nexport class RenderingContext extends RestrictedRenderingContext {\n    constructor(viewLayout, viewportData, viewLines) {\n        super(viewLayout, viewportData);\n        this._renderingContextBrand = undefined;\n        this._viewLines = viewLines;\n    }\n    linesVisibleRangesForRange(range, includeNewLines) {\n        return this._viewLines.linesVisibleRangesForRange(range, includeNewLines);\n    }\n    visibleRangeForPosition(position) {\n        return this._viewLines.visibleRangeForPosition(position);\n    }\n}\nexport class LineVisibleRanges {\n    constructor(outsideRenderedLine, lineNumber, ranges) {\n        this.outsideRenderedLine = outsideRenderedLine;\n        this.lineNumber = lineNumber;\n        this.ranges = ranges;\n    }\n}\nexport class HorizontalRange {\n    constructor(left, width) {\n        this._horizontalRangeBrand = undefined;\n        this.left = Math.round(left);\n        this.width = Math.round(width);\n    }\n    static from(ranges) {\n        const result = new Array(ranges.length);\n        for (let i = 0, len = ranges.length; i < len; i++) {\n            const range = ranges[i];\n            result[i] = new HorizontalRange(range.left, range.width);\n        }\n        return result;\n    }\n    toString() {\n        return `[${this.left},${this.width}]`;\n    }\n}\nexport class FloatHorizontalRange {\n    constructor(left, width) {\n        this._floatHorizontalRangeBrand = undefined;\n        this.left = left;\n        this.width = width;\n    }\n    toString() {\n        return `[${this.left},${this.width}]`;\n    }\n    static compare(a, b) {\n        return a.left - b.left;\n    }\n}\nexport class HorizontalPosition {\n    constructor(outsideRenderedLine, left) {\n        this.outsideRenderedLine = outsideRenderedLine;\n        this.originalLeft = left;\n        this.left = Math.round(this.originalLeft);\n    }\n}\nexport class VisibleRanges {\n    constructor(outsideRenderedLine, ranges) {\n        this.outsideRenderedLine = outsideRenderedLine;\n        this.ranges = ranges;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CoreNavigationCommands } from '../coreCommands.js';\nimport { Position } from '../../common/core/position.js';\nimport * as platform from '../../../base/common/platform.js';\nexport class ViewController {\n    constructor(configuration, viewModel, userInputEvents, commandDelegate) {\n        this.configuration = configuration;\n        this.viewModel = viewModel;\n        this.userInputEvents = userInputEvents;\n        this.commandDelegate = commandDelegate;\n    }\n    paste(text, pasteOnNewLine, multicursorText, mode) {\n        this.commandDelegate.paste(text, pasteOnNewLine, multicursorText, mode);\n    }\n    type(text) {\n        this.commandDelegate.type(text);\n    }\n    compositionType(text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) {\n        this.commandDelegate.compositionType(text, replacePrevCharCnt, replaceNextCharCnt, positionDelta);\n    }\n    compositionStart() {\n        this.commandDelegate.startComposition();\n    }\n    compositionEnd() {\n        this.commandDelegate.endComposition();\n    }\n    cut() {\n        this.commandDelegate.cut();\n    }\n    setSelection(modelSelection) {\n        CoreNavigationCommands.SetSelection.runCoreEditorCommand(this.viewModel, {\n            source: 'keyboard',\n            selection: modelSelection\n        });\n    }\n    _validateViewColumn(viewPosition) {\n        const minColumn = this.viewModel.getLineMinColumn(viewPosition.lineNumber);\n        if (viewPosition.column < minColumn) {\n            return new Position(viewPosition.lineNumber, minColumn);\n        }\n        return viewPosition;\n    }\n    _hasMulticursorModifier(data) {\n        switch (this.configuration.options.get(70 /* multiCursorModifier */)) {\n            case 'altKey':\n                return data.altKey;\n            case 'ctrlKey':\n                return data.ctrlKey;\n            case 'metaKey':\n                return data.metaKey;\n            default:\n                return false;\n        }\n    }\n    _hasNonMulticursorModifier(data) {\n        switch (this.configuration.options.get(70 /* multiCursorModifier */)) {\n            case 'altKey':\n                return data.ctrlKey || data.metaKey;\n            case 'ctrlKey':\n                return data.altKey || data.metaKey;\n            case 'metaKey':\n                return data.ctrlKey || data.altKey;\n            default:\n                return false;\n        }\n    }\n    dispatchMouse(data) {\n        const options = this.configuration.options;\n        const selectionClipboardIsOn = (platform.isLinux && options.get(96 /* selectionClipboard */));\n        const columnSelection = options.get(18 /* columnSelection */);\n        if (data.middleButton && !selectionClipboardIsOn) {\n            this._columnSelect(data.position, data.mouseColumn, data.inSelectionMode);\n        }\n        else if (data.startedOnLineNumbers) {\n            // If the dragging started on the gutter, then have operations work on the entire line\n            if (this._hasMulticursorModifier(data)) {\n                if (data.inSelectionMode) {\n                    this._lastCursorLineSelect(data.position);\n                }\n                else {\n                    this._createCursor(data.position, true);\n                }\n            }\n            else {\n                if (data.inSelectionMode) {\n                    this._lineSelectDrag(data.position);\n                }\n                else {\n                    this._lineSelect(data.position);\n                }\n            }\n        }\n        else if (data.mouseDownCount >= 4) {\n            this._selectAll();\n        }\n        else if (data.mouseDownCount === 3) {\n            if (this._hasMulticursorModifier(data)) {\n                if (data.inSelectionMode) {\n                    this._lastCursorLineSelectDrag(data.position);\n                }\n                else {\n                    this._lastCursorLineSelect(data.position);\n                }\n            }\n            else {\n                if (data.inSelectionMode) {\n                    this._lineSelectDrag(data.position);\n                }\n                else {\n                    this._lineSelect(data.position);\n                }\n            }\n        }\n        else if (data.mouseDownCount === 2) {\n            if (!data.onInjectedText) {\n                if (this._hasMulticursorModifier(data)) {\n                    this._lastCursorWordSelect(data.position);\n                }\n                else {\n                    if (data.inSelectionMode) {\n                        this._wordSelectDrag(data.position);\n                    }\n                    else {\n                        this._wordSelect(data.position);\n                    }\n                }\n            }\n        }\n        else {\n            if (this._hasMulticursorModifier(data)) {\n                if (!this._hasNonMulticursorModifier(data)) {\n                    if (data.shiftKey) {\n                        this._columnSelect(data.position, data.mouseColumn, true);\n                    }\n                    else {\n                        // Do multi-cursor operations only when purely alt is pressed\n                        if (data.inSelectionMode) {\n                            this._lastCursorMoveToSelect(data.position);\n                        }\n                        else {\n                            this._createCursor(data.position, false);\n                        }\n                    }\n                }\n            }\n            else {\n                if (data.inSelectionMode) {\n                    if (data.altKey) {\n                        this._columnSelect(data.position, data.mouseColumn, true);\n                    }\n                    else {\n                        if (columnSelection) {\n                            this._columnSelect(data.position, data.mouseColumn, true);\n                        }\n                        else {\n                            this._moveToSelect(data.position);\n                        }\n                    }\n                }\n                else {\n                    this.moveTo(data.position);\n                }\n            }\n        }\n    }\n    _usualArgs(viewPosition) {\n        viewPosition = this._validateViewColumn(viewPosition);\n        return {\n            source: 'mouse',\n            position: this._convertViewToModelPosition(viewPosition),\n            viewPosition: viewPosition\n        };\n    }\n    moveTo(viewPosition) {\n        CoreNavigationCommands.MoveTo.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n    }\n    _moveToSelect(viewPosition) {\n        CoreNavigationCommands.MoveToSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n    }\n    _columnSelect(viewPosition, mouseColumn, doColumnSelect) {\n        viewPosition = this._validateViewColumn(viewPosition);\n        CoreNavigationCommands.ColumnSelect.runCoreEditorCommand(this.viewModel, {\n            source: 'mouse',\n            position: this._convertViewToModelPosition(viewPosition),\n            viewPosition: viewPosition,\n            mouseColumn: mouseColumn,\n            doColumnSelect: doColumnSelect\n        });\n    }\n    _createCursor(viewPosition, wholeLine) {\n        viewPosition = this._validateViewColumn(viewPosition);\n        CoreNavigationCommands.CreateCursor.runCoreEditorCommand(this.viewModel, {\n            source: 'mouse',\n            position: this._convertViewToModelPosition(viewPosition),\n            viewPosition: viewPosition,\n            wholeLine: wholeLine\n        });\n    }\n    _lastCursorMoveToSelect(viewPosition) {\n        CoreNavigationCommands.LastCursorMoveToSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n    }\n    _wordSelect(viewPosition) {\n        CoreNavigationCommands.WordSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n    }\n    _wordSelectDrag(viewPosition) {\n        CoreNavigationCommands.WordSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n    }\n    _lastCursorWordSelect(viewPosition) {\n        CoreNavigationCommands.LastCursorWordSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n    }\n    _lineSelect(viewPosition) {\n        CoreNavigationCommands.LineSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n    }\n    _lineSelectDrag(viewPosition) {\n        CoreNavigationCommands.LineSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n    }\n    _lastCursorLineSelect(viewPosition) {\n        CoreNavigationCommands.LastCursorLineSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n    }\n    _lastCursorLineSelectDrag(viewPosition) {\n        CoreNavigationCommands.LastCursorLineSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n    }\n    _selectAll() {\n        CoreNavigationCommands.SelectAll.runCoreEditorCommand(this.viewModel, { source: 'mouse' });\n    }\n    // ----------------------\n    _convertViewToModelPosition(viewPosition) {\n        return this.viewModel.coordinatesConverter.convertViewPositionToModelPosition(viewPosition);\n    }\n    emitKeyDown(e) {\n        this.userInputEvents.emitKeyDown(e);\n    }\n    emitKeyUp(e) {\n        this.userInputEvents.emitKeyUp(e);\n    }\n    emitContextMenu(e) {\n        this.userInputEvents.emitContextMenu(e);\n    }\n    emitMouseMove(e) {\n        this.userInputEvents.emitMouseMove(e);\n    }\n    emitMouseLeave(e) {\n        this.userInputEvents.emitMouseLeave(e);\n    }\n    emitMouseUp(e) {\n        this.userInputEvents.emitMouseUp(e);\n    }\n    emitMouseDown(e) {\n        this.userInputEvents.emitMouseDown(e);\n    }\n    emitMouseDrag(e) {\n        this.userInputEvents.emitMouseDrag(e);\n    }\n    emitMouseDrop(e) {\n        this.userInputEvents.emitMouseDrop(e);\n    }\n    emitMouseDropCanceled() {\n        this.userInputEvents.emitMouseDropCanceled();\n    }\n    emitMouseWheel(e) {\n        this.userInputEvents.emitMouseWheel(e);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { createStringBuilder } from '../../common/core/stringBuilder.js';\nexport class RenderedLinesCollection {\n    constructor(createLine) {\n        this._createLine = createLine;\n        this._set(1, []);\n    }\n    flush() {\n        this._set(1, []);\n    }\n    _set(rendLineNumberStart, lines) {\n        this._lines = lines;\n        this._rendLineNumberStart = rendLineNumberStart;\n    }\n    _get() {\n        return {\n            rendLineNumberStart: this._rendLineNumberStart,\n            lines: this._lines\n        };\n    }\n    /**\n     * @returns Inclusive line number that is inside this collection\n     */\n    getStartLineNumber() {\n        return this._rendLineNumberStart;\n    }\n    /**\n     * @returns Inclusive line number that is inside this collection\n     */\n    getEndLineNumber() {\n        return this._rendLineNumberStart + this._lines.length - 1;\n    }\n    getCount() {\n        return this._lines.length;\n    }\n    getLine(lineNumber) {\n        const lineIndex = lineNumber - this._rendLineNumberStart;\n        if (lineIndex < 0 || lineIndex >= this._lines.length) {\n            throw new Error('Illegal value for lineNumber');\n        }\n        return this._lines[lineIndex];\n    }\n    /**\n     * @returns Lines that were removed from this collection\n     */\n    onLinesDeleted(deleteFromLineNumber, deleteToLineNumber) {\n        if (this.getCount() === 0) {\n            // no lines\n            return null;\n        }\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        if (deleteToLineNumber < startLineNumber) {\n            // deleting above the viewport\n            const deleteCnt = deleteToLineNumber - deleteFromLineNumber + 1;\n            this._rendLineNumberStart -= deleteCnt;\n            return null;\n        }\n        if (deleteFromLineNumber > endLineNumber) {\n            // deleted below the viewport\n            return null;\n        }\n        // Record what needs to be deleted\n        let deleteStartIndex = 0;\n        let deleteCount = 0;\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - this._rendLineNumberStart;\n            if (deleteFromLineNumber <= lineNumber && lineNumber <= deleteToLineNumber) {\n                // this is a line to be deleted\n                if (deleteCount === 0) {\n                    // this is the first line to be deleted\n                    deleteStartIndex = lineIndex;\n                    deleteCount = 1;\n                }\n                else {\n                    deleteCount++;\n                }\n            }\n        }\n        // Adjust this._rendLineNumberStart for lines deleted above\n        if (deleteFromLineNumber < startLineNumber) {\n            // Something was deleted above\n            let deleteAboveCount = 0;\n            if (deleteToLineNumber < startLineNumber) {\n                // the entire deleted lines are above\n                deleteAboveCount = deleteToLineNumber - deleteFromLineNumber + 1;\n            }\n            else {\n                deleteAboveCount = startLineNumber - deleteFromLineNumber;\n            }\n            this._rendLineNumberStart -= deleteAboveCount;\n        }\n        const deleted = this._lines.splice(deleteStartIndex, deleteCount);\n        return deleted;\n    }\n    onLinesChanged(changeFromLineNumber, changeToLineNumber) {\n        if (this.getCount() === 0) {\n            // no lines\n            return false;\n        }\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        let someoneNotified = false;\n        for (let changedLineNumber = changeFromLineNumber; changedLineNumber <= changeToLineNumber; changedLineNumber++) {\n            if (changedLineNumber >= startLineNumber && changedLineNumber <= endLineNumber) {\n                // Notify the line\n                this._lines[changedLineNumber - this._rendLineNumberStart].onContentChanged();\n                someoneNotified = true;\n            }\n        }\n        return someoneNotified;\n    }\n    onLinesInserted(insertFromLineNumber, insertToLineNumber) {\n        if (this.getCount() === 0) {\n            // no lines\n            return null;\n        }\n        const insertCnt = insertToLineNumber - insertFromLineNumber + 1;\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        if (insertFromLineNumber <= startLineNumber) {\n            // inserting above the viewport\n            this._rendLineNumberStart += insertCnt;\n            return null;\n        }\n        if (insertFromLineNumber > endLineNumber) {\n            // inserting below the viewport\n            return null;\n        }\n        if (insertCnt + insertFromLineNumber > endLineNumber) {\n            // insert inside the viewport in such a way that all remaining lines are pushed outside\n            const deleted = this._lines.splice(insertFromLineNumber - this._rendLineNumberStart, endLineNumber - insertFromLineNumber + 1);\n            return deleted;\n        }\n        // insert inside the viewport, push out some lines, but not all remaining lines\n        const newLines = [];\n        for (let i = 0; i < insertCnt; i++) {\n            newLines[i] = this._createLine();\n        }\n        const insertIndex = insertFromLineNumber - this._rendLineNumberStart;\n        const beforeLines = this._lines.slice(0, insertIndex);\n        const afterLines = this._lines.slice(insertIndex, this._lines.length - insertCnt);\n        const deletedLines = this._lines.slice(this._lines.length - insertCnt, this._lines.length);\n        this._lines = beforeLines.concat(newLines).concat(afterLines);\n        return deletedLines;\n    }\n    onTokensChanged(ranges) {\n        if (this.getCount() === 0) {\n            // no lines\n            return false;\n        }\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        let notifiedSomeone = false;\n        for (let i = 0, len = ranges.length; i < len; i++) {\n            const rng = ranges[i];\n            if (rng.toLineNumber < startLineNumber || rng.fromLineNumber > endLineNumber) {\n                // range outside viewport\n                continue;\n            }\n            const from = Math.max(startLineNumber, rng.fromLineNumber);\n            const to = Math.min(endLineNumber, rng.toLineNumber);\n            for (let lineNumber = from; lineNumber <= to; lineNumber++) {\n                const lineIndex = lineNumber - this._rendLineNumberStart;\n                this._lines[lineIndex].onTokensChanged();\n                notifiedSomeone = true;\n            }\n        }\n        return notifiedSomeone;\n    }\n}\nexport class VisibleLinesCollection {\n    constructor(host) {\n        this._host = host;\n        this.domNode = this._createDomNode();\n        this._linesCollection = new RenderedLinesCollection(() => this._host.createVisibleLine());\n    }\n    _createDomNode() {\n        const domNode = createFastDomNode(document.createElement('div'));\n        domNode.setClassName('view-layer');\n        domNode.setPosition('absolute');\n        domNode.domNode.setAttribute('role', 'presentation');\n        domNode.domNode.setAttribute('aria-hidden', 'true');\n        return domNode;\n    }\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        if (e.hasChanged(131 /* layoutInfo */)) {\n            return true;\n        }\n        return false;\n    }\n    onFlushed(e) {\n        this._linesCollection.flush();\n        // No need to clear the dom node because a full .innerHTML will occur in ViewLayerRenderer._render\n        return true;\n    }\n    onLinesChanged(e) {\n        return this._linesCollection.onLinesChanged(e.fromLineNumber, e.toLineNumber);\n    }\n    onLinesDeleted(e) {\n        const deleted = this._linesCollection.onLinesDeleted(e.fromLineNumber, e.toLineNumber);\n        if (deleted) {\n            // Remove from DOM\n            for (let i = 0, len = deleted.length; i < len; i++) {\n                const lineDomNode = deleted[i].getDomNode();\n                if (lineDomNode) {\n                    this.domNode.domNode.removeChild(lineDomNode);\n                }\n            }\n        }\n        return true;\n    }\n    onLinesInserted(e) {\n        const deleted = this._linesCollection.onLinesInserted(e.fromLineNumber, e.toLineNumber);\n        if (deleted) {\n            // Remove from DOM\n            for (let i = 0, len = deleted.length; i < len; i++) {\n                const lineDomNode = deleted[i].getDomNode();\n                if (lineDomNode) {\n                    this.domNode.domNode.removeChild(lineDomNode);\n                }\n            }\n        }\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onTokensChanged(e) {\n        return this._linesCollection.onTokensChanged(e.ranges);\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // ---- end view event handlers\n    getStartLineNumber() {\n        return this._linesCollection.getStartLineNumber();\n    }\n    getEndLineNumber() {\n        return this._linesCollection.getEndLineNumber();\n    }\n    getVisibleLine(lineNumber) {\n        return this._linesCollection.getLine(lineNumber);\n    }\n    renderLines(viewportData) {\n        const inp = this._linesCollection._get();\n        const renderer = new ViewLayerRenderer(this.domNode.domNode, this._host, viewportData);\n        const ctx = {\n            rendLineNumberStart: inp.rendLineNumberStart,\n            lines: inp.lines,\n            linesLength: inp.lines.length\n        };\n        // Decide if this render will do a single update (single large .innerHTML) or many updates (inserting/removing dom nodes)\n        const resCtx = renderer.render(ctx, viewportData.startLineNumber, viewportData.endLineNumber, viewportData.relativeVerticalOffset);\n        this._linesCollection._set(resCtx.rendLineNumberStart, resCtx.lines);\n    }\n}\nclass ViewLayerRenderer {\n    constructor(domNode, host, viewportData) {\n        this.domNode = domNode;\n        this.host = host;\n        this.viewportData = viewportData;\n    }\n    render(inContext, startLineNumber, stopLineNumber, deltaTop) {\n        const ctx = {\n            rendLineNumberStart: inContext.rendLineNumberStart,\n            lines: inContext.lines.slice(0),\n            linesLength: inContext.linesLength\n        };\n        if ((ctx.rendLineNumberStart + ctx.linesLength - 1 < startLineNumber) || (stopLineNumber < ctx.rendLineNumberStart)) {\n            // There is no overlap whatsoever\n            ctx.rendLineNumberStart = startLineNumber;\n            ctx.linesLength = stopLineNumber - startLineNumber + 1;\n            ctx.lines = [];\n            for (let x = startLineNumber; x <= stopLineNumber; x++) {\n                ctx.lines[x - startLineNumber] = this.host.createVisibleLine();\n            }\n            this._finishRendering(ctx, true, deltaTop);\n            return ctx;\n        }\n        // Update lines which will remain untouched\n        this._renderUntouchedLines(ctx, Math.max(startLineNumber - ctx.rendLineNumberStart, 0), Math.min(stopLineNumber - ctx.rendLineNumberStart, ctx.linesLength - 1), deltaTop, startLineNumber);\n        if (ctx.rendLineNumberStart > startLineNumber) {\n            // Insert lines before\n            const fromLineNumber = startLineNumber;\n            const toLineNumber = Math.min(stopLineNumber, ctx.rendLineNumberStart - 1);\n            if (fromLineNumber <= toLineNumber) {\n                this._insertLinesBefore(ctx, fromLineNumber, toLineNumber, deltaTop, startLineNumber);\n                ctx.linesLength += toLineNumber - fromLineNumber + 1;\n            }\n        }\n        else if (ctx.rendLineNumberStart < startLineNumber) {\n            // Remove lines before\n            const removeCnt = Math.min(ctx.linesLength, startLineNumber - ctx.rendLineNumberStart);\n            if (removeCnt > 0) {\n                this._removeLinesBefore(ctx, removeCnt);\n                ctx.linesLength -= removeCnt;\n            }\n        }\n        ctx.rendLineNumberStart = startLineNumber;\n        if (ctx.rendLineNumberStart + ctx.linesLength - 1 < stopLineNumber) {\n            // Insert lines after\n            const fromLineNumber = ctx.rendLineNumberStart + ctx.linesLength;\n            const toLineNumber = stopLineNumber;\n            if (fromLineNumber <= toLineNumber) {\n                this._insertLinesAfter(ctx, fromLineNumber, toLineNumber, deltaTop, startLineNumber);\n                ctx.linesLength += toLineNumber - fromLineNumber + 1;\n            }\n        }\n        else if (ctx.rendLineNumberStart + ctx.linesLength - 1 > stopLineNumber) {\n            // Remove lines after\n            const fromLineNumber = Math.max(0, stopLineNumber - ctx.rendLineNumberStart + 1);\n            const toLineNumber = ctx.linesLength - 1;\n            const removeCnt = toLineNumber - fromLineNumber + 1;\n            if (removeCnt > 0) {\n                this._removeLinesAfter(ctx, removeCnt);\n                ctx.linesLength -= removeCnt;\n            }\n        }\n        this._finishRendering(ctx, false, deltaTop);\n        return ctx;\n    }\n    _renderUntouchedLines(ctx, startIndex, endIndex, deltaTop, deltaLN) {\n        const rendLineNumberStart = ctx.rendLineNumberStart;\n        const lines = ctx.lines;\n        for (let i = startIndex; i <= endIndex; i++) {\n            const lineNumber = rendLineNumberStart + i;\n            lines[i].layoutLine(lineNumber, deltaTop[lineNumber - deltaLN]);\n        }\n    }\n    _insertLinesBefore(ctx, fromLineNumber, toLineNumber, deltaTop, deltaLN) {\n        const newLines = [];\n        let newLinesLen = 0;\n        for (let lineNumber = fromLineNumber; lineNumber <= toLineNumber; lineNumber++) {\n            newLines[newLinesLen++] = this.host.createVisibleLine();\n        }\n        ctx.lines = newLines.concat(ctx.lines);\n    }\n    _removeLinesBefore(ctx, removeCount) {\n        for (let i = 0; i < removeCount; i++) {\n            const lineDomNode = ctx.lines[i].getDomNode();\n            if (lineDomNode) {\n                this.domNode.removeChild(lineDomNode);\n            }\n        }\n        ctx.lines.splice(0, removeCount);\n    }\n    _insertLinesAfter(ctx, fromLineNumber, toLineNumber, deltaTop, deltaLN) {\n        const newLines = [];\n        let newLinesLen = 0;\n        for (let lineNumber = fromLineNumber; lineNumber <= toLineNumber; lineNumber++) {\n            newLines[newLinesLen++] = this.host.createVisibleLine();\n        }\n        ctx.lines = ctx.lines.concat(newLines);\n    }\n    _removeLinesAfter(ctx, removeCount) {\n        const removeIndex = ctx.linesLength - removeCount;\n        for (let i = 0; i < removeCount; i++) {\n            const lineDomNode = ctx.lines[removeIndex + i].getDomNode();\n            if (lineDomNode) {\n                this.domNode.removeChild(lineDomNode);\n            }\n        }\n        ctx.lines.splice(removeIndex, removeCount);\n    }\n    _finishRenderingNewLines(ctx, domNodeIsEmpty, newLinesHTML, wasNew) {\n        if (ViewLayerRenderer._ttPolicy) {\n            newLinesHTML = ViewLayerRenderer._ttPolicy.createHTML(newLinesHTML);\n        }\n        const lastChild = this.domNode.lastChild;\n        if (domNodeIsEmpty || !lastChild) {\n            this.domNode.innerHTML = newLinesHTML; // explains the ugly casts -> https://github.com/microsoft/vscode/issues/106396#issuecomment-692625393;\n        }\n        else {\n            lastChild.insertAdjacentHTML('afterend', newLinesHTML);\n        }\n        let currChild = this.domNode.lastChild;\n        for (let i = ctx.linesLength - 1; i >= 0; i--) {\n            const line = ctx.lines[i];\n            if (wasNew[i]) {\n                line.setDomNode(currChild);\n                currChild = currChild.previousSibling;\n            }\n        }\n    }\n    _finishRenderingInvalidLines(ctx, invalidLinesHTML, wasInvalid) {\n        const hugeDomNode = document.createElement('div');\n        if (ViewLayerRenderer._ttPolicy) {\n            invalidLinesHTML = ViewLayerRenderer._ttPolicy.createHTML(invalidLinesHTML);\n        }\n        hugeDomNode.innerHTML = invalidLinesHTML;\n        for (let i = 0; i < ctx.linesLength; i++) {\n            const line = ctx.lines[i];\n            if (wasInvalid[i]) {\n                const source = hugeDomNode.firstChild;\n                const lineDomNode = line.getDomNode();\n                lineDomNode.parentNode.replaceChild(source, lineDomNode);\n                line.setDomNode(source);\n            }\n        }\n    }\n    _finishRendering(ctx, domNodeIsEmpty, deltaTop) {\n        const sb = ViewLayerRenderer._sb;\n        const linesLength = ctx.linesLength;\n        const lines = ctx.lines;\n        const rendLineNumberStart = ctx.rendLineNumberStart;\n        const wasNew = [];\n        {\n            sb.reset();\n            let hadNewLine = false;\n            for (let i = 0; i < linesLength; i++) {\n                const line = lines[i];\n                wasNew[i] = false;\n                const lineDomNode = line.getDomNode();\n                if (lineDomNode) {\n                    // line is not new\n                    continue;\n                }\n                const renderResult = line.renderLine(i + rendLineNumberStart, deltaTop[i], this.viewportData, sb);\n                if (!renderResult) {\n                    // line does not need rendering\n                    continue;\n                }\n                wasNew[i] = true;\n                hadNewLine = true;\n            }\n            if (hadNewLine) {\n                this._finishRenderingNewLines(ctx, domNodeIsEmpty, sb.build(), wasNew);\n            }\n        }\n        {\n            sb.reset();\n            let hadInvalidLine = false;\n            const wasInvalid = [];\n            for (let i = 0; i < linesLength; i++) {\n                const line = lines[i];\n                wasInvalid[i] = false;\n                if (wasNew[i]) {\n                    // line was new\n                    continue;\n                }\n                const renderResult = line.renderLine(i + rendLineNumberStart, deltaTop[i], this.viewportData, sb);\n                if (!renderResult) {\n                    // line does not need rendering\n                    continue;\n                }\n                wasInvalid[i] = true;\n                hadInvalidLine = true;\n            }\n            if (hadInvalidLine) {\n                this._finishRenderingInvalidLines(ctx, sb.build(), wasInvalid);\n            }\n        }\n    }\n}\nViewLayerRenderer._ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('editorViewLayer', { createHTML: value => value });\nViewLayerRenderer._sb = createStringBuilder(100000);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { VisibleLinesCollection } from './viewLayer.js';\nimport { ViewPart } from './viewPart.js';\nexport class ViewOverlays extends ViewPart {\n    constructor(context) {\n        super(context);\n        this._visibleLines = new VisibleLinesCollection(this);\n        this.domNode = this._visibleLines.domNode;\n        this._dynamicOverlays = [];\n        this._isFocused = false;\n        this.domNode.setClassName('view-overlays');\n    }\n    shouldRender() {\n        if (super.shouldRender()) {\n            return true;\n        }\n        for (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n            const dynamicOverlay = this._dynamicOverlays[i];\n            if (dynamicOverlay.shouldRender()) {\n                return true;\n            }\n        }\n        return false;\n    }\n    dispose() {\n        super.dispose();\n        for (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n            const dynamicOverlay = this._dynamicOverlays[i];\n            dynamicOverlay.dispose();\n        }\n        this._dynamicOverlays = [];\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    // ---- begin IVisibleLinesHost\n    createVisibleLine() {\n        return new ViewOverlayLine(this._context.configuration, this._dynamicOverlays);\n    }\n    // ---- end IVisibleLinesHost\n    addDynamicOverlay(overlay) {\n        this._dynamicOverlays.push(overlay);\n    }\n    // ----- event handlers\n    onConfigurationChanged(e) {\n        this._visibleLines.onConfigurationChanged(e);\n        const startLineNumber = this._visibleLines.getStartLineNumber();\n        const endLineNumber = this._visibleLines.getEndLineNumber();\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const line = this._visibleLines.getVisibleLine(lineNumber);\n            line.onConfigurationChanged(e);\n        }\n        return true;\n    }\n    onFlushed(e) {\n        return this._visibleLines.onFlushed(e);\n    }\n    onFocusChanged(e) {\n        this._isFocused = e.isFocused;\n        return true;\n    }\n    onLinesChanged(e) {\n        return this._visibleLines.onLinesChanged(e);\n    }\n    onLinesDeleted(e) {\n        return this._visibleLines.onLinesDeleted(e);\n    }\n    onLinesInserted(e) {\n        return this._visibleLines.onLinesInserted(e);\n    }\n    onScrollChanged(e) {\n        return this._visibleLines.onScrollChanged(e) || true;\n    }\n    onTokensChanged(e) {\n        return this._visibleLines.onTokensChanged(e);\n    }\n    onZonesChanged(e) {\n        return this._visibleLines.onZonesChanged(e);\n    }\n    // ----- end event handlers\n    prepareRender(ctx) {\n        const toRender = this._dynamicOverlays.filter(overlay => overlay.shouldRender());\n        for (let i = 0, len = toRender.length; i < len; i++) {\n            const dynamicOverlay = toRender[i];\n            dynamicOverlay.prepareRender(ctx);\n            dynamicOverlay.onDidRender();\n        }\n    }\n    render(ctx) {\n        // Overwriting to bypass `shouldRender` flag\n        this._viewOverlaysRender(ctx);\n        this.domNode.toggleClassName('focused', this._isFocused);\n    }\n    _viewOverlaysRender(ctx) {\n        this._visibleLines.renderLines(ctx.viewportData);\n    }\n}\nexport class ViewOverlayLine {\n    constructor(configuration, dynamicOverlays) {\n        this._configuration = configuration;\n        this._lineHeight = this._configuration.options.get(59 /* lineHeight */);\n        this._dynamicOverlays = dynamicOverlays;\n        this._domNode = null;\n        this._renderedContent = null;\n    }\n    getDomNode() {\n        if (!this._domNode) {\n            return null;\n        }\n        return this._domNode.domNode;\n    }\n    setDomNode(domNode) {\n        this._domNode = createFastDomNode(domNode);\n    }\n    onContentChanged() {\n        // Nothing\n    }\n    onTokensChanged() {\n        // Nothing\n    }\n    onConfigurationChanged(e) {\n        this._lineHeight = this._configuration.options.get(59 /* lineHeight */);\n    }\n    renderLine(lineNumber, deltaTop, viewportData, sb) {\n        let result = '';\n        for (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n            const dynamicOverlay = this._dynamicOverlays[i];\n            result += dynamicOverlay.render(viewportData.startLineNumber, lineNumber);\n        }\n        if (this._renderedContent === result) {\n            // No rendering needed\n            return false;\n        }\n        this._renderedContent = result;\n        sb.appendASCIIString('<div style=\"position:absolute;top:');\n        sb.appendASCIIString(String(deltaTop));\n        sb.appendASCIIString('px;width:100%;height:');\n        sb.appendASCIIString(String(this._lineHeight));\n        sb.appendASCIIString('px;\">');\n        sb.appendASCIIString(result);\n        sb.appendASCIIString('</div>');\n        return true;\n    }\n    layoutLine(lineNumber, deltaTop) {\n        if (this._domNode) {\n            this._domNode.setTop(deltaTop);\n            this._domNode.setHeight(this._lineHeight);\n        }\n    }\n}\nexport class ContentViewOverlays extends ViewOverlays {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(131 /* layoutInfo */);\n        this._contentWidth = layoutInfo.contentWidth;\n        this.domNode.setHeight(0);\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(131 /* layoutInfo */);\n        this._contentWidth = layoutInfo.contentWidth;\n        return super.onConfigurationChanged(e) || true;\n    }\n    onScrollChanged(e) {\n        return super.onScrollChanged(e) || e.scrollWidthChanged;\n    }\n    // --- end event handlers\n    _viewOverlaysRender(ctx) {\n        super._viewOverlaysRender(ctx);\n        this.domNode.setWidth(Math.max(ctx.scrollWidth, this._contentWidth));\n    }\n}\nexport class MarginViewOverlays extends ViewOverlays {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(131 /* layoutInfo */);\n        this._contentLeft = layoutInfo.contentLeft;\n        this.domNode.setClassName('margin-view-overlays');\n        this.domNode.setWidth(1);\n        applyFontInfo(this.domNode, options.get(44 /* fontInfo */));\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        applyFontInfo(this.domNode, options.get(44 /* fontInfo */));\n        const layoutInfo = options.get(131 /* layoutInfo */);\n        this._contentLeft = layoutInfo.contentLeft;\n        return super.onConfigurationChanged(e) || true;\n    }\n    onScrollChanged(e) {\n        return super.onScrollChanged(e) || e.scrollHeightChanged;\n    }\n    _viewOverlaysRender(ctx) {\n        super._viewOverlaysRender(ctx);\n        const height = Math.min(ctx.scrollHeight, 1000000);\n        this.domNode.setHeight(height);\n        this.domNode.setWidth(this._contentLeft);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ViewEventHandler } from '../../common/viewEventHandler.js';\nexport class ViewPart extends ViewEventHandler {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        super.dispose();\n    }\n}\nexport class PartFingerprints {\n    static write(target, partId) {\n        target.setAttribute('data-mprt', String(partId));\n    }\n    static read(target) {\n        const r = target.getAttribute('data-mprt');\n        if (r === null) {\n            return 0 /* None */;\n        }\n        return parseInt(r, 10);\n    }\n    static collect(child, stopAt) {\n        const result = [];\n        let resultLen = 0;\n        while (child && child !== document.body) {\n            if (child === stopAt) {\n                break;\n            }\n            if (child.nodeType === child.ELEMENT_NODE) {\n                result[resultLen++] = this.read(child);\n            }\n            child = child.parentElement;\n        }\n        const r = new Uint8Array(resultLen);\n        for (let i = 0; i < resultLen; i++) {\n            r[i] = result[resultLen - i - 1];\n        }\n        return r;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class ViewUserInputEvents {\n    constructor(coordinatesConverter) {\n        this.onKeyDown = null;\n        this.onKeyUp = null;\n        this.onContextMenu = null;\n        this.onMouseMove = null;\n        this.onMouseLeave = null;\n        this.onMouseDown = null;\n        this.onMouseUp = null;\n        this.onMouseDrag = null;\n        this.onMouseDrop = null;\n        this.onMouseDropCanceled = null;\n        this.onMouseWheel = null;\n        this._coordinatesConverter = coordinatesConverter;\n    }\n    emitKeyDown(e) {\n        if (this.onKeyDown) {\n            this.onKeyDown(e);\n        }\n    }\n    emitKeyUp(e) {\n        if (this.onKeyUp) {\n            this.onKeyUp(e);\n        }\n    }\n    emitContextMenu(e) {\n        if (this.onContextMenu) {\n            this.onContextMenu(this._convertViewToModelMouseEvent(e));\n        }\n    }\n    emitMouseMove(e) {\n        if (this.onMouseMove) {\n            this.onMouseMove(this._convertViewToModelMouseEvent(e));\n        }\n    }\n    emitMouseLeave(e) {\n        if (this.onMouseLeave) {\n            this.onMouseLeave(this._convertViewToModelMouseEvent(e));\n        }\n    }\n    emitMouseDown(e) {\n        if (this.onMouseDown) {\n            this.onMouseDown(this._convertViewToModelMouseEvent(e));\n        }\n    }\n    emitMouseUp(e) {\n        if (this.onMouseUp) {\n            this.onMouseUp(this._convertViewToModelMouseEvent(e));\n        }\n    }\n    emitMouseDrag(e) {\n        if (this.onMouseDrag) {\n            this.onMouseDrag(this._convertViewToModelMouseEvent(e));\n        }\n    }\n    emitMouseDrop(e) {\n        if (this.onMouseDrop) {\n            this.onMouseDrop(this._convertViewToModelMouseEvent(e));\n        }\n    }\n    emitMouseDropCanceled() {\n        if (this.onMouseDropCanceled) {\n            this.onMouseDropCanceled();\n        }\n    }\n    emitMouseWheel(e) {\n        if (this.onMouseWheel) {\n            this.onMouseWheel(e);\n        }\n    }\n    _convertViewToModelMouseEvent(e) {\n        if (e.target) {\n            return {\n                event: e.event,\n                target: this._convertViewToModelMouseTarget(e.target)\n            };\n        }\n        return e;\n    }\n    _convertViewToModelMouseTarget(target) {\n        return ViewUserInputEvents.convertViewToModelMouseTarget(target, this._coordinatesConverter);\n    }\n    static convertViewToModelMouseTarget(target, coordinatesConverter) {\n        const result = Object.assign({}, target);\n        if (result.position) {\n            result.position = coordinatesConverter.convertViewPositionToModelPosition(result.position);\n        }\n        if (result.range) {\n            result.range = coordinatesConverter.convertViewRangeToModelRange(result.range);\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport '../services/markerDecorations.js';\nimport './media/editor.css';\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, dispose } from '../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { EditorConfiguration } from '../config/editorConfiguration.js';\nimport { EditorExtensionsRegistry } from '../editorExtensions.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { View } from '../view.js';\nimport { ViewUserInputEvents } from '../view/viewUserInputEvents.js';\nimport { filterValidationDecorations } from '../../common/config/editorOptions.js';\nimport { CursorsController } from '../../common/cursor/cursor.js';\nimport { CursorColumns } from '../../common/core/cursorColumns.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { InternalEditorAction } from '../../common/editorAction.js';\nimport * as editorCommon from '../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { editorUnnecessaryCodeBorder, editorUnnecessaryCodeOpacity } from '../../common/core/editorColorRegistry.js';\nimport { editorErrorBorder, editorErrorForeground, editorHintBorder, editorHintForeground, editorInfoBorder, editorInfoForeground, editorWarningBorder, editorWarningForeground, editorForeground, editorErrorBackground, editorInfoBackground, editorWarningBackground } from '../../../platform/theme/common/colorRegistry.js';\nimport { ViewModel } from '../../common/viewModel/viewModelImpl.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { IThemeService, registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { withNullAsUndefined } from '../../../base/common/types.js';\nimport { MonospaceLineBreaksComputerFactory } from '../../common/viewModel/monospaceLineBreaksComputer.js';\nimport { DOMLineBreaksComputerFactory } from '../view/domLineBreaksComputer.js';\nimport { WordOperations } from '../../common/cursor/cursorWordOperations.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\nlet EDITOR_ID = 0;\nclass ModelData {\n    constructor(model, viewModel, view, hasRealView, listenersToRemove) {\n        this.model = model;\n        this.viewModel = viewModel;\n        this.view = view;\n        this.hasRealView = hasRealView;\n        this.listenersToRemove = listenersToRemove;\n    }\n    dispose() {\n        dispose(this.listenersToRemove);\n        this.model.onBeforeDetached();\n        if (this.hasRealView) {\n            this.view.dispose();\n        }\n        this.viewModel.dispose();\n    }\n}\nlet CodeEditorWidget = class CodeEditorWidget extends Disposable {\n    constructor(domElement, _options, codeEditorWidgetOptions, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService, languageConfigurationService, languageFeaturesService) {\n        super();\n        this.languageConfigurationService = languageConfigurationService;\n        //#region Eventing\n        this._onDidDispose = this._register(new Emitter());\n        this.onDidDispose = this._onDidDispose.event;\n        this._onDidChangeModelContent = this._register(new Emitter());\n        this.onDidChangeModelContent = this._onDidChangeModelContent.event;\n        this._onDidChangeModelLanguage = this._register(new Emitter());\n        this.onDidChangeModelLanguage = this._onDidChangeModelLanguage.event;\n        this._onDidChangeModelLanguageConfiguration = this._register(new Emitter());\n        this.onDidChangeModelLanguageConfiguration = this._onDidChangeModelLanguageConfiguration.event;\n        this._onDidChangeModelOptions = this._register(new Emitter());\n        this.onDidChangeModelOptions = this._onDidChangeModelOptions.event;\n        this._onDidChangeModelDecorations = this._register(new Emitter());\n        this.onDidChangeModelDecorations = this._onDidChangeModelDecorations.event;\n        this._onDidChangeConfiguration = this._register(new Emitter());\n        this.onDidChangeConfiguration = this._onDidChangeConfiguration.event;\n        this._onDidChangeModel = this._register(new Emitter());\n        this.onDidChangeModel = this._onDidChangeModel.event;\n        this._onDidChangeCursorPosition = this._register(new Emitter());\n        this.onDidChangeCursorPosition = this._onDidChangeCursorPosition.event;\n        this._onDidChangeCursorSelection = this._register(new Emitter());\n        this.onDidChangeCursorSelection = this._onDidChangeCursorSelection.event;\n        this._onDidAttemptReadOnlyEdit = this._register(new Emitter());\n        this.onDidAttemptReadOnlyEdit = this._onDidAttemptReadOnlyEdit.event;\n        this._onDidLayoutChange = this._register(new Emitter());\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._editorTextFocus = this._register(new BooleanEventEmitter());\n        this.onDidFocusEditorText = this._editorTextFocus.onDidChangeToTrue;\n        this.onDidBlurEditorText = this._editorTextFocus.onDidChangeToFalse;\n        this._editorWidgetFocus = this._register(new BooleanEventEmitter());\n        this.onDidFocusEditorWidget = this._editorWidgetFocus.onDidChangeToTrue;\n        this.onDidBlurEditorWidget = this._editorWidgetFocus.onDidChangeToFalse;\n        this._onWillType = this._register(new Emitter());\n        this.onWillType = this._onWillType.event;\n        this._onDidType = this._register(new Emitter());\n        this.onDidType = this._onDidType.event;\n        this._onDidCompositionStart = this._register(new Emitter());\n        this.onDidCompositionStart = this._onDidCompositionStart.event;\n        this._onDidCompositionEnd = this._register(new Emitter());\n        this.onDidCompositionEnd = this._onDidCompositionEnd.event;\n        this._onDidPaste = this._register(new Emitter());\n        this.onDidPaste = this._onDidPaste.event;\n        this._onMouseUp = this._register(new Emitter());\n        this.onMouseUp = this._onMouseUp.event;\n        this._onMouseDown = this._register(new Emitter());\n        this.onMouseDown = this._onMouseDown.event;\n        this._onMouseDrag = this._register(new Emitter());\n        this.onMouseDrag = this._onMouseDrag.event;\n        this._onMouseDrop = this._register(new Emitter());\n        this.onMouseDrop = this._onMouseDrop.event;\n        this._onMouseDropCanceled = this._register(new Emitter());\n        this.onMouseDropCanceled = this._onMouseDropCanceled.event;\n        this._onContextMenu = this._register(new Emitter());\n        this.onContextMenu = this._onContextMenu.event;\n        this._onMouseMove = this._register(new Emitter());\n        this.onMouseMove = this._onMouseMove.event;\n        this._onMouseLeave = this._register(new Emitter());\n        this.onMouseLeave = this._onMouseLeave.event;\n        this._onMouseWheel = this._register(new Emitter());\n        this.onMouseWheel = this._onMouseWheel.event;\n        this._onKeyUp = this._register(new Emitter());\n        this.onKeyUp = this._onKeyUp.event;\n        this._onKeyDown = this._register(new Emitter());\n        this.onKeyDown = this._onKeyDown.event;\n        this._onDidContentSizeChange = this._register(new Emitter());\n        this.onDidContentSizeChange = this._onDidContentSizeChange.event;\n        this._onDidScrollChange = this._register(new Emitter());\n        this.onDidScrollChange = this._onDidScrollChange.event;\n        this._onDidChangeViewZones = this._register(new Emitter());\n        this.onDidChangeViewZones = this._onDidChangeViewZones.event;\n        this._onDidChangeHiddenAreas = this._register(new Emitter());\n        this.onDidChangeHiddenAreas = this._onDidChangeHiddenAreas.event;\n        this._bannerDomNode = null;\n        const options = Object.assign({}, _options);\n        this._domElement = domElement;\n        this._overflowWidgetsDomNode = options.overflowWidgetsDomNode;\n        delete options.overflowWidgetsDomNode;\n        this._id = (++EDITOR_ID);\n        this._decorationTypeKeysToIds = {};\n        this._decorationTypeSubtypes = {};\n        this._telemetryData = codeEditorWidgetOptions.telemetryData;\n        this._configuration = this._register(this._createConfiguration(codeEditorWidgetOptions.isSimpleWidget || false, options, accessibilityService));\n        this._register(this._configuration.onDidChange((e) => {\n            this._onDidChangeConfiguration.fire(e);\n            const options = this._configuration.options;\n            if (e.hasChanged(131 /* layoutInfo */)) {\n                const layoutInfo = options.get(131 /* layoutInfo */);\n                this._onDidLayoutChange.fire(layoutInfo);\n            }\n        }));\n        this._contextKeyService = this._register(contextKeyService.createScoped(this._domElement));\n        this._notificationService = notificationService;\n        this._codeEditorService = codeEditorService;\n        this._commandService = commandService;\n        this._themeService = themeService;\n        this._register(new EditorContextKeysManager(this, this._contextKeyService));\n        this._register(new EditorModeContext(this, this._contextKeyService, languageFeaturesService));\n        this._instantiationService = instantiationService.createChild(new ServiceCollection([IContextKeyService, this._contextKeyService]));\n        this._modelData = null;\n        this._contributions = {};\n        this._actions = {};\n        this._focusTracker = new CodeEditorWidgetFocusTracker(domElement);\n        this._register(this._focusTracker.onChange(() => {\n            this._editorWidgetFocus.setValue(this._focusTracker.hasFocus());\n        }));\n        this._contentWidgets = {};\n        this._overlayWidgets = {};\n        let contributions;\n        if (Array.isArray(codeEditorWidgetOptions.contributions)) {\n            contributions = codeEditorWidgetOptions.contributions;\n        }\n        else {\n            contributions = EditorExtensionsRegistry.getEditorContributions();\n        }\n        for (const desc of contributions) {\n            if (this._contributions[desc.id]) {\n                onUnexpectedError(new Error(`Cannot have two contributions with the same id ${desc.id}`));\n                continue;\n            }\n            try {\n                const contribution = this._instantiationService.createInstance(desc.ctor, this);\n                this._contributions[desc.id] = contribution;\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n        }\n        EditorExtensionsRegistry.getEditorActions().forEach((action) => {\n            if (this._actions[action.id]) {\n                onUnexpectedError(new Error(`Cannot have two actions with the same id ${action.id}`));\n                return;\n            }\n            const internalAction = new InternalEditorAction(action.id, action.label, action.alias, withNullAsUndefined(action.precondition), () => {\n                return this._instantiationService.invokeFunction((accessor) => {\n                    return Promise.resolve(action.runEditorCommand(accessor, this, null));\n                });\n            }, this._contextKeyService);\n            this._actions[internalAction.id] = internalAction;\n        });\n        this._codeEditorService.addCodeEditor(this);\n    }\n    //#endregion\n    get isSimpleWidget() {\n        return this._configuration.isSimpleWidget;\n    }\n    _createConfiguration(isSimpleWidget, options, accessibilityService) {\n        return new EditorConfiguration(isSimpleWidget, options, this._domElement, accessibilityService);\n    }\n    getId() {\n        return this.getEditorType() + ':' + this._id;\n    }\n    getEditorType() {\n        return editorCommon.EditorType.ICodeEditor;\n    }\n    dispose() {\n        this._codeEditorService.removeCodeEditor(this);\n        this._focusTracker.dispose();\n        const keys = Object.keys(this._contributions);\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const contributionId = keys[i];\n            this._contributions[contributionId].dispose();\n        }\n        this._contributions = {};\n        this._actions = {};\n        this._contentWidgets = {};\n        this._overlayWidgets = {};\n        this._removeDecorationTypes();\n        this._postDetachModelCleanup(this._detachModel());\n        this._onDidDispose.fire();\n        super.dispose();\n    }\n    invokeWithinContext(fn) {\n        return this._instantiationService.invokeFunction(fn);\n    }\n    updateOptions(newOptions) {\n        this._configuration.updateOptions(newOptions || {});\n    }\n    getOptions() {\n        return this._configuration.options;\n    }\n    getOption(id) {\n        return this._configuration.options.get(id);\n    }\n    getRawOptions() {\n        return this._configuration.getRawOptions();\n    }\n    getOverflowWidgetsDomNode() {\n        return this._overflowWidgetsDomNode;\n    }\n    getConfiguredWordAtPosition(position) {\n        if (!this._modelData) {\n            return null;\n        }\n        return WordOperations.getWordAtPosition(this._modelData.model, this._configuration.options.get(117 /* wordSeparators */), position);\n    }\n    getValue(options = null) {\n        if (!this._modelData) {\n            return '';\n        }\n        const preserveBOM = (options && options.preserveBOM) ? true : false;\n        let eolPreference = 0 /* TextDefined */;\n        if (options && options.lineEnding && options.lineEnding === '\\n') {\n            eolPreference = 1 /* LF */;\n        }\n        else if (options && options.lineEnding && options.lineEnding === '\\r\\n') {\n            eolPreference = 2 /* CRLF */;\n        }\n        return this._modelData.model.getValue(eolPreference, preserveBOM);\n    }\n    setValue(newValue) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.model.setValue(newValue);\n    }\n    getModel() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.model;\n    }\n    setModel(_model = null) {\n        const model = _model;\n        if (this._modelData === null && model === null) {\n            // Current model is the new model\n            return;\n        }\n        if (this._modelData && this._modelData.model === model) {\n            // Current model is the new model\n            return;\n        }\n        const hasTextFocus = this.hasTextFocus();\n        const detachedModel = this._detachModel();\n        this._attachModel(model);\n        if (hasTextFocus && this.hasModel()) {\n            this.focus();\n        }\n        const e = {\n            oldModelUrl: detachedModel ? detachedModel.uri : null,\n            newModelUrl: model ? model.uri : null\n        };\n        this._removeDecorationTypes();\n        this._onDidChangeModel.fire(e);\n        this._postDetachModelCleanup(detachedModel);\n    }\n    _removeDecorationTypes() {\n        this._decorationTypeKeysToIds = {};\n        if (this._decorationTypeSubtypes) {\n            for (let decorationType in this._decorationTypeSubtypes) {\n                const subTypes = this._decorationTypeSubtypes[decorationType];\n                for (let subType in subTypes) {\n                    this._removeDecorationType(decorationType + '-' + subType);\n                }\n            }\n            this._decorationTypeSubtypes = {};\n        }\n    }\n    getVisibleRanges() {\n        if (!this._modelData) {\n            return [];\n        }\n        return this._modelData.viewModel.getVisibleRanges();\n    }\n    getVisibleRangesPlusViewportAboveBelow() {\n        if (!this._modelData) {\n            return [];\n        }\n        return this._modelData.viewModel.getVisibleRangesPlusViewportAboveBelow();\n    }\n    getWhitespaces() {\n        if (!this._modelData) {\n            return [];\n        }\n        return this._modelData.viewModel.viewLayout.getWhitespaces();\n    }\n    static _getVerticalOffsetForPosition(modelData, modelLineNumber, modelColumn) {\n        const modelPosition = modelData.model.validatePosition({\n            lineNumber: modelLineNumber,\n            column: modelColumn\n        });\n        const viewPosition = modelData.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n        return modelData.viewModel.viewLayout.getVerticalOffsetForLineNumber(viewPosition.lineNumber);\n    }\n    getTopForLineNumber(lineNumber) {\n        if (!this._modelData) {\n            return -1;\n        }\n        return CodeEditorWidget._getVerticalOffsetForPosition(this._modelData, lineNumber, 1);\n    }\n    getTopForPosition(lineNumber, column) {\n        if (!this._modelData) {\n            return -1;\n        }\n        return CodeEditorWidget._getVerticalOffsetForPosition(this._modelData, lineNumber, column);\n    }\n    setHiddenAreas(ranges) {\n        if (this._modelData) {\n            this._modelData.viewModel.setHiddenAreas(ranges.map(r => Range.lift(r)));\n        }\n    }\n    getVisibleColumnFromPosition(rawPosition) {\n        if (!this._modelData) {\n            return rawPosition.column;\n        }\n        const position = this._modelData.model.validatePosition(rawPosition);\n        const tabSize = this._modelData.model.getOptions().tabSize;\n        return CursorColumns.visibleColumnFromColumn(this._modelData.model.getLineContent(position.lineNumber), position.column, tabSize) + 1;\n    }\n    getPosition() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel.getPosition();\n    }\n    setPosition(position, source = 'api') {\n        if (!this._modelData) {\n            return;\n        }\n        if (!Position.isIPosition(position)) {\n            throw new Error('Invalid arguments');\n        }\n        this._modelData.viewModel.setSelections(source, [{\n                selectionStartLineNumber: position.lineNumber,\n                selectionStartColumn: position.column,\n                positionLineNumber: position.lineNumber,\n                positionColumn: position.column\n            }]);\n    }\n    _sendRevealRange(modelRange, verticalType, revealHorizontal, scrollType) {\n        if (!this._modelData) {\n            return;\n        }\n        if (!Range.isIRange(modelRange)) {\n            throw new Error('Invalid arguments');\n        }\n        const validatedModelRange = this._modelData.model.validateRange(modelRange);\n        const viewRange = this._modelData.viewModel.coordinatesConverter.convertModelRangeToViewRange(validatedModelRange);\n        this._modelData.viewModel.revealRange('api', revealHorizontal, viewRange, verticalType, scrollType);\n    }\n    revealLine(lineNumber, scrollType = 0 /* Smooth */) {\n        this._revealLine(lineNumber, 0 /* Simple */, scrollType);\n    }\n    revealLineInCenter(lineNumber, scrollType = 0 /* Smooth */) {\n        this._revealLine(lineNumber, 1 /* Center */, scrollType);\n    }\n    revealLineInCenterIfOutsideViewport(lineNumber, scrollType = 0 /* Smooth */) {\n        this._revealLine(lineNumber, 2 /* CenterIfOutsideViewport */, scrollType);\n    }\n    revealLineNearTop(lineNumber, scrollType = 0 /* Smooth */) {\n        this._revealLine(lineNumber, 5 /* NearTop */, scrollType);\n    }\n    _revealLine(lineNumber, revealType, scrollType) {\n        if (typeof lineNumber !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(new Range(lineNumber, 1, lineNumber, 1), revealType, false, scrollType);\n    }\n    revealPosition(position, scrollType = 0 /* Smooth */) {\n        this._revealPosition(position, 0 /* Simple */, true, scrollType);\n    }\n    revealPositionInCenter(position, scrollType = 0 /* Smooth */) {\n        this._revealPosition(position, 1 /* Center */, true, scrollType);\n    }\n    revealPositionInCenterIfOutsideViewport(position, scrollType = 0 /* Smooth */) {\n        this._revealPosition(position, 2 /* CenterIfOutsideViewport */, true, scrollType);\n    }\n    revealPositionNearTop(position, scrollType = 0 /* Smooth */) {\n        this._revealPosition(position, 5 /* NearTop */, true, scrollType);\n    }\n    _revealPosition(position, verticalType, revealHorizontal, scrollType) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(new Range(position.lineNumber, position.column, position.lineNumber, position.column), verticalType, revealHorizontal, scrollType);\n    }\n    getSelection() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel.getSelection();\n    }\n    getSelections() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel.getSelections();\n    }\n    setSelection(something, source = 'api') {\n        const isSelection = Selection.isISelection(something);\n        const isRange = Range.isIRange(something);\n        if (!isSelection && !isRange) {\n            throw new Error('Invalid arguments');\n        }\n        if (isSelection) {\n            this._setSelectionImpl(something, source);\n        }\n        else if (isRange) {\n            // act as if it was an IRange\n            const selection = {\n                selectionStartLineNumber: something.startLineNumber,\n                selectionStartColumn: something.startColumn,\n                positionLineNumber: something.endLineNumber,\n                positionColumn: something.endColumn\n            };\n            this._setSelectionImpl(selection, source);\n        }\n    }\n    _setSelectionImpl(sel, source) {\n        if (!this._modelData) {\n            return;\n        }\n        const selection = new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n        this._modelData.viewModel.setSelections(source, [selection]);\n    }\n    revealLines(startLineNumber, endLineNumber, scrollType = 0 /* Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 0 /* Simple */, scrollType);\n    }\n    revealLinesInCenter(startLineNumber, endLineNumber, scrollType = 0 /* Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 1 /* Center */, scrollType);\n    }\n    revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType = 0 /* Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 2 /* CenterIfOutsideViewport */, scrollType);\n    }\n    revealLinesNearTop(startLineNumber, endLineNumber, scrollType = 0 /* Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 5 /* NearTop */, scrollType);\n    }\n    _revealLines(startLineNumber, endLineNumber, verticalType, scrollType) {\n        if (typeof startLineNumber !== 'number' || typeof endLineNumber !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(new Range(startLineNumber, 1, endLineNumber, 1), verticalType, false, scrollType);\n    }\n    revealRange(range, scrollType = 0 /* Smooth */, revealVerticalInCenter = false, revealHorizontal = true) {\n        this._revealRange(range, revealVerticalInCenter ? 1 /* Center */ : 0 /* Simple */, revealHorizontal, scrollType);\n    }\n    revealRangeInCenter(range, scrollType = 0 /* Smooth */) {\n        this._revealRange(range, 1 /* Center */, true, scrollType);\n    }\n    revealRangeInCenterIfOutsideViewport(range, scrollType = 0 /* Smooth */) {\n        this._revealRange(range, 2 /* CenterIfOutsideViewport */, true, scrollType);\n    }\n    revealRangeNearTop(range, scrollType = 0 /* Smooth */) {\n        this._revealRange(range, 5 /* NearTop */, true, scrollType);\n    }\n    revealRangeNearTopIfOutsideViewport(range, scrollType = 0 /* Smooth */) {\n        this._revealRange(range, 6 /* NearTopIfOutsideViewport */, true, scrollType);\n    }\n    revealRangeAtTop(range, scrollType = 0 /* Smooth */) {\n        this._revealRange(range, 3 /* Top */, true, scrollType);\n    }\n    _revealRange(range, verticalType, revealHorizontal, scrollType) {\n        if (!Range.isIRange(range)) {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(Range.lift(range), verticalType, revealHorizontal, scrollType);\n    }\n    setSelections(ranges, source = 'api', reason = 0 /* NotSet */) {\n        if (!this._modelData) {\n            return;\n        }\n        if (!ranges || ranges.length === 0) {\n            throw new Error('Invalid arguments');\n        }\n        for (let i = 0, len = ranges.length; i < len; i++) {\n            if (!Selection.isISelection(ranges[i])) {\n                throw new Error('Invalid arguments');\n            }\n        }\n        this._modelData.viewModel.setSelections(source, ranges, reason);\n    }\n    getContentWidth() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getContentWidth();\n    }\n    getScrollWidth() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getScrollWidth();\n    }\n    getScrollLeft() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getCurrentScrollLeft();\n    }\n    getContentHeight() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getContentHeight();\n    }\n    getScrollHeight() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getScrollHeight();\n    }\n    getScrollTop() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getCurrentScrollTop();\n    }\n    setScrollLeft(newScrollLeft, scrollType = 1 /* Immediate */) {\n        if (!this._modelData) {\n            return;\n        }\n        if (typeof newScrollLeft !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._modelData.viewModel.viewLayout.setScrollPosition({\n            scrollLeft: newScrollLeft\n        }, scrollType);\n    }\n    setScrollTop(newScrollTop, scrollType = 1 /* Immediate */) {\n        if (!this._modelData) {\n            return;\n        }\n        if (typeof newScrollTop !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._modelData.viewModel.viewLayout.setScrollPosition({\n            scrollTop: newScrollTop\n        }, scrollType);\n    }\n    setScrollPosition(position, scrollType = 1 /* Immediate */) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.viewLayout.setScrollPosition(position, scrollType);\n    }\n    saveViewState() {\n        if (!this._modelData) {\n            return null;\n        }\n        const contributionsState = {};\n        const keys = Object.keys(this._contributions);\n        for (const id of keys) {\n            const contribution = this._contributions[id];\n            if (typeof contribution.saveViewState === 'function') {\n                contributionsState[id] = contribution.saveViewState();\n            }\n        }\n        const cursorState = this._modelData.viewModel.saveCursorState();\n        const viewState = this._modelData.viewModel.saveState();\n        return {\n            cursorState: cursorState,\n            viewState: viewState,\n            contributionsState: contributionsState\n        };\n    }\n    restoreViewState(s) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        const codeEditorState = s;\n        if (codeEditorState && codeEditorState.cursorState && codeEditorState.viewState) {\n            const cursorState = codeEditorState.cursorState;\n            if (Array.isArray(cursorState)) {\n                if (cursorState.length > 0) {\n                    this._modelData.viewModel.restoreCursorState(cursorState);\n                }\n            }\n            else {\n                // Backwards compatibility\n                this._modelData.viewModel.restoreCursorState([cursorState]);\n            }\n            const contributionsState = codeEditorState.contributionsState || {};\n            const keys = Object.keys(this._contributions);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const id = keys[i];\n                const contribution = this._contributions[id];\n                if (typeof contribution.restoreViewState === 'function') {\n                    contribution.restoreViewState(contributionsState[id]);\n                }\n            }\n            const reducedState = this._modelData.viewModel.reduceRestoreState(codeEditorState.viewState);\n            this._modelData.view.restoreState(reducedState);\n        }\n    }\n    getContribution(id) {\n        return (this._contributions[id] || null);\n    }\n    getActions() {\n        const result = [];\n        const keys = Object.keys(this._actions);\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const id = keys[i];\n            result.push(this._actions[id]);\n        }\n        return result;\n    }\n    getSupportedActions() {\n        let result = this.getActions();\n        result = result.filter(action => action.isSupported());\n        return result;\n    }\n    getAction(id) {\n        return this._actions[id] || null;\n    }\n    trigger(source, handlerId, payload) {\n        payload = payload || {};\n        switch (handlerId) {\n            case \"compositionStart\" /* CompositionStart */:\n                this._startComposition();\n                return;\n            case \"compositionEnd\" /* CompositionEnd */:\n                this._endComposition(source);\n                return;\n            case \"type\" /* Type */: {\n                const args = payload;\n                this._type(source, args.text || '');\n                return;\n            }\n            case \"replacePreviousChar\" /* ReplacePreviousChar */: {\n                const args = payload;\n                this._compositionType(source, args.text || '', args.replaceCharCnt || 0, 0, 0);\n                return;\n            }\n            case \"compositionType\" /* CompositionType */: {\n                const args = payload;\n                this._compositionType(source, args.text || '', args.replacePrevCharCnt || 0, args.replaceNextCharCnt || 0, args.positionDelta || 0);\n                return;\n            }\n            case \"paste\" /* Paste */: {\n                const args = payload;\n                this._paste(source, args.text || '', args.pasteOnNewLine || false, args.multicursorText || null, args.mode || null);\n                return;\n            }\n            case \"cut\" /* Cut */:\n                this._cut(source);\n                return;\n        }\n        const action = this.getAction(handlerId);\n        if (action) {\n            Promise.resolve(action.run()).then(undefined, onUnexpectedError);\n            return;\n        }\n        if (!this._modelData) {\n            return;\n        }\n        if (this._triggerEditorCommand(source, handlerId, payload)) {\n            return;\n        }\n        this._triggerCommand(handlerId, payload);\n    }\n    _triggerCommand(handlerId, payload) {\n        this._commandService.executeCommand(handlerId, payload);\n    }\n    _startComposition() {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.startComposition();\n        this._onDidCompositionStart.fire();\n    }\n    _endComposition(source) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.endComposition(source);\n        this._onDidCompositionEnd.fire();\n    }\n    _type(source, text) {\n        if (!this._modelData || text.length === 0) {\n            return;\n        }\n        if (source === 'keyboard') {\n            this._onWillType.fire(text);\n        }\n        this._modelData.viewModel.type(text, source);\n        if (source === 'keyboard') {\n            this._onDidType.fire(text);\n        }\n    }\n    _compositionType(source, text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.compositionType(text, replacePrevCharCnt, replaceNextCharCnt, positionDelta, source);\n    }\n    _paste(source, text, pasteOnNewLine, multicursorText, mode) {\n        if (!this._modelData || text.length === 0) {\n            return;\n        }\n        const startPosition = this._modelData.viewModel.getSelection().getStartPosition();\n        this._modelData.viewModel.paste(text, pasteOnNewLine, multicursorText, source);\n        const endPosition = this._modelData.viewModel.getSelection().getStartPosition();\n        if (source === 'keyboard') {\n            this._onDidPaste.fire({\n                range: new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column),\n                languageId: mode\n            });\n        }\n    }\n    _cut(source) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.cut(source);\n    }\n    _triggerEditorCommand(source, handlerId, payload) {\n        const command = EditorExtensionsRegistry.getEditorCommand(handlerId);\n        if (command) {\n            payload = payload || {};\n            payload.source = source;\n            this._instantiationService.invokeFunction((accessor) => {\n                Promise.resolve(command.runEditorCommand(accessor, this, payload)).then(undefined, onUnexpectedError);\n            });\n            return true;\n        }\n        return false;\n    }\n    _getViewModel() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel;\n    }\n    pushUndoStop() {\n        if (!this._modelData) {\n            return false;\n        }\n        if (this._configuration.options.get(81 /* readOnly */)) {\n            // read only editor => sorry!\n            return false;\n        }\n        this._modelData.model.pushStackElement();\n        return true;\n    }\n    popUndoStop() {\n        if (!this._modelData) {\n            return false;\n        }\n        if (this._configuration.options.get(81 /* readOnly */)) {\n            // read only editor => sorry!\n            return false;\n        }\n        this._modelData.model.popStackElement();\n        return true;\n    }\n    executeEdits(source, edits, endCursorState) {\n        if (!this._modelData) {\n            return false;\n        }\n        if (this._configuration.options.get(81 /* readOnly */)) {\n            // read only editor => sorry!\n            return false;\n        }\n        let cursorStateComputer;\n        if (!endCursorState) {\n            cursorStateComputer = () => null;\n        }\n        else if (Array.isArray(endCursorState)) {\n            cursorStateComputer = () => endCursorState;\n        }\n        else {\n            cursorStateComputer = endCursorState;\n        }\n        this._modelData.viewModel.executeEdits(source, edits, cursorStateComputer);\n        return true;\n    }\n    executeCommand(source, command) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.executeCommand(command, source);\n    }\n    executeCommands(source, commands) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.executeCommands(commands, source);\n    }\n    changeDecorations(callback) {\n        if (!this._modelData) {\n            // callback will not be called\n            return null;\n        }\n        return this._modelData.model.changeDecorations(callback, this._id);\n    }\n    getLineDecorations(lineNumber) {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.model.getLineDecorations(lineNumber, this._id, filterValidationDecorations(this._configuration.options));\n    }\n    getDecorationsInRange(range) {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.model.getDecorationsInRange(range, this._id, filterValidationDecorations(this._configuration.options));\n    }\n    deltaDecorations(oldDecorations, newDecorations) {\n        if (!this._modelData) {\n            return [];\n        }\n        if (oldDecorations.length === 0 && newDecorations.length === 0) {\n            return oldDecorations;\n        }\n        return this._modelData.model.deltaDecorations(oldDecorations, newDecorations, this._id);\n    }\n    removeDecorations(decorationTypeKey) {\n        // remove decorations for type and sub type\n        const oldDecorationsIds = this._decorationTypeKeysToIds[decorationTypeKey];\n        if (oldDecorationsIds) {\n            this.deltaDecorations(oldDecorationsIds, []);\n        }\n        if (this._decorationTypeKeysToIds.hasOwnProperty(decorationTypeKey)) {\n            delete this._decorationTypeKeysToIds[decorationTypeKey];\n        }\n        if (this._decorationTypeSubtypes.hasOwnProperty(decorationTypeKey)) {\n            delete this._decorationTypeSubtypes[decorationTypeKey];\n        }\n    }\n    getLayoutInfo() {\n        const options = this._configuration.options;\n        const layoutInfo = options.get(131 /* layoutInfo */);\n        return layoutInfo;\n    }\n    createOverviewRuler(cssClassName) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        return this._modelData.view.createOverviewRuler(cssClassName);\n    }\n    getContainerDomNode() {\n        return this._domElement;\n    }\n    getDomNode() {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        return this._modelData.view.domNode.domNode;\n    }\n    delegateVerticalScrollbarMouseDown(browserEvent) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.delegateVerticalScrollbarMouseDown(browserEvent);\n    }\n    layout(dimension) {\n        this._configuration.observeContainer(dimension);\n        this.render();\n    }\n    focus() {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.focus();\n    }\n    hasTextFocus() {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return false;\n        }\n        return this._modelData.view.isFocused();\n    }\n    hasWidgetFocus() {\n        return this._focusTracker && this._focusTracker.hasFocus();\n    }\n    addContentWidget(widget) {\n        const widgetData = {\n            widget: widget,\n            position: widget.getPosition()\n        };\n        if (this._contentWidgets.hasOwnProperty(widget.getId())) {\n            console.warn('Overwriting a content widget with the same id.');\n        }\n        this._contentWidgets[widget.getId()] = widgetData;\n        if (this._modelData && this._modelData.hasRealView) {\n            this._modelData.view.addContentWidget(widgetData);\n        }\n    }\n    layoutContentWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._contentWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._contentWidgets[widgetId];\n            widgetData.position = widget.getPosition();\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.layoutContentWidget(widgetData);\n            }\n        }\n    }\n    removeContentWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._contentWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._contentWidgets[widgetId];\n            delete this._contentWidgets[widgetId];\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.removeContentWidget(widgetData);\n            }\n        }\n    }\n    addOverlayWidget(widget) {\n        const widgetData = {\n            widget: widget,\n            position: widget.getPosition()\n        };\n        if (this._overlayWidgets.hasOwnProperty(widget.getId())) {\n            console.warn('Overwriting an overlay widget with the same id.');\n        }\n        this._overlayWidgets[widget.getId()] = widgetData;\n        if (this._modelData && this._modelData.hasRealView) {\n            this._modelData.view.addOverlayWidget(widgetData);\n        }\n    }\n    layoutOverlayWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._overlayWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._overlayWidgets[widgetId];\n            widgetData.position = widget.getPosition();\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.layoutOverlayWidget(widgetData);\n            }\n        }\n    }\n    removeOverlayWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._overlayWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._overlayWidgets[widgetId];\n            delete this._overlayWidgets[widgetId];\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.removeOverlayWidget(widgetData);\n            }\n        }\n    }\n    changeViewZones(callback) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.change(callback);\n    }\n    getTargetAtClientPoint(clientX, clientY) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        return this._modelData.view.getTargetAtClientPoint(clientX, clientY);\n    }\n    getScrolledVisiblePosition(rawPosition) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        const position = this._modelData.model.validatePosition(rawPosition);\n        const options = this._configuration.options;\n        const layoutInfo = options.get(131 /* layoutInfo */);\n        const top = CodeEditorWidget._getVerticalOffsetForPosition(this._modelData, position.lineNumber, position.column) - this.getScrollTop();\n        const left = this._modelData.view.getOffsetForColumn(position.lineNumber, position.column) + layoutInfo.glyphMarginWidth + layoutInfo.lineNumbersWidth + layoutInfo.decorationsWidth - this.getScrollLeft();\n        return {\n            top: top,\n            left: left,\n            height: options.get(59 /* lineHeight */)\n        };\n    }\n    getOffsetForColumn(lineNumber, column) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return -1;\n        }\n        return this._modelData.view.getOffsetForColumn(lineNumber, column);\n    }\n    render(forceRedraw = false) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.render(true, forceRedraw);\n    }\n    setAriaOptions(options) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.setAriaOptions(options);\n    }\n    applyFontInfo(target) {\n        applyFontInfo(target, this._configuration.options.get(44 /* fontInfo */));\n    }\n    setBanner(domNode, domNodeHeight) {\n        if (this._bannerDomNode && this._domElement.contains(this._bannerDomNode)) {\n            this._domElement.removeChild(this._bannerDomNode);\n        }\n        this._bannerDomNode = domNode;\n        this._configuration.setReservedHeight(domNode ? domNodeHeight : 0);\n        if (this._bannerDomNode) {\n            this._domElement.prepend(this._bannerDomNode);\n        }\n    }\n    _attachModel(model) {\n        if (!model) {\n            this._modelData = null;\n            return;\n        }\n        const listenersToRemove = [];\n        this._domElement.setAttribute('data-mode-id', model.getLanguageId());\n        this._configuration.setIsDominatedByLongLines(model.isDominatedByLongLines());\n        this._configuration.setModelLineCount(model.getLineCount());\n        model.onBeforeAttached();\n        const viewModel = new ViewModel(this._id, this._configuration, model, DOMLineBreaksComputerFactory.create(), MonospaceLineBreaksComputerFactory.create(this._configuration.options), (callback) => dom.scheduleAtNextAnimationFrame(callback), this.languageConfigurationService, this._themeService);\n        listenersToRemove.push(model.onDidChangeDecorations((e) => this._onDidChangeModelDecorations.fire(e)));\n        listenersToRemove.push(model.onDidChangeLanguage((e) => {\n            this._domElement.setAttribute('data-mode-id', model.getLanguageId());\n            this._onDidChangeModelLanguage.fire(e);\n        }));\n        listenersToRemove.push(model.onDidChangeLanguageConfiguration((e) => this._onDidChangeModelLanguageConfiguration.fire(e)));\n        listenersToRemove.push(model.onDidChangeContent((e) => this._onDidChangeModelContent.fire(e)));\n        listenersToRemove.push(model.onDidChangeOptions((e) => this._onDidChangeModelOptions.fire(e)));\n        // Someone might destroy the model from under the editor, so prevent any exceptions by setting a null model\n        listenersToRemove.push(model.onWillDispose(() => this.setModel(null)));\n        listenersToRemove.push(viewModel.onEvent((e) => {\n            switch (e.kind) {\n                case 0 /* ContentSizeChanged */:\n                    this._onDidContentSizeChange.fire(e);\n                    break;\n                case 1 /* FocusChanged */:\n                    this._editorTextFocus.setValue(e.hasFocus);\n                    break;\n                case 2 /* ScrollChanged */:\n                    this._onDidScrollChange.fire(e);\n                    break;\n                case 3 /* ViewZonesChanged */:\n                    this._onDidChangeViewZones.fire();\n                    break;\n                case 4 /* HiddenAreasChanged */:\n                    this._onDidChangeHiddenAreas.fire();\n                    break;\n                case 5 /* ReadOnlyEditAttempt */:\n                    this._onDidAttemptReadOnlyEdit.fire();\n                    break;\n                case 6 /* CursorStateChanged */: {\n                    if (e.reachedMaxCursorCount) {\n                        this._notificationService.warn(nls.localize('cursors.maximum', \"The number of cursors has been limited to {0}.\", CursorsController.MAX_CURSOR_COUNT));\n                    }\n                    const positions = [];\n                    for (let i = 0, len = e.selections.length; i < len; i++) {\n                        positions[i] = e.selections[i].getPosition();\n                    }\n                    const e1 = {\n                        position: positions[0],\n                        secondaryPositions: positions.slice(1),\n                        reason: e.reason,\n                        source: e.source\n                    };\n                    this._onDidChangeCursorPosition.fire(e1);\n                    const e2 = {\n                        selection: e.selections[0],\n                        secondarySelections: e.selections.slice(1),\n                        modelVersionId: e.modelVersionId,\n                        oldSelections: e.oldSelections,\n                        oldModelVersionId: e.oldModelVersionId,\n                        source: e.source,\n                        reason: e.reason\n                    };\n                    this._onDidChangeCursorSelection.fire(e2);\n                    break;\n                }\n            }\n        }));\n        const [view, hasRealView] = this._createView(viewModel);\n        if (hasRealView) {\n            this._domElement.appendChild(view.domNode.domNode);\n            let keys = Object.keys(this._contentWidgets);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const widgetId = keys[i];\n                view.addContentWidget(this._contentWidgets[widgetId]);\n            }\n            keys = Object.keys(this._overlayWidgets);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const widgetId = keys[i];\n                view.addOverlayWidget(this._overlayWidgets[widgetId]);\n            }\n            view.render(false, true);\n            view.domNode.domNode.setAttribute('data-uri', model.uri.toString());\n        }\n        this._modelData = new ModelData(model, viewModel, view, hasRealView, listenersToRemove);\n    }\n    _createView(viewModel) {\n        let commandDelegate;\n        if (this.isSimpleWidget) {\n            commandDelegate = {\n                paste: (text, pasteOnNewLine, multicursorText, mode) => {\n                    this._paste('keyboard', text, pasteOnNewLine, multicursorText, mode);\n                },\n                type: (text) => {\n                    this._type('keyboard', text);\n                },\n                compositionType: (text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) => {\n                    this._compositionType('keyboard', text, replacePrevCharCnt, replaceNextCharCnt, positionDelta);\n                },\n                startComposition: () => {\n                    this._startComposition();\n                },\n                endComposition: () => {\n                    this._endComposition('keyboard');\n                },\n                cut: () => {\n                    this._cut('keyboard');\n                }\n            };\n        }\n        else {\n            commandDelegate = {\n                paste: (text, pasteOnNewLine, multicursorText, mode) => {\n                    const payload = { text, pasteOnNewLine, multicursorText, mode };\n                    this._commandService.executeCommand(\"paste\" /* Paste */, payload);\n                },\n                type: (text) => {\n                    const payload = { text };\n                    this._commandService.executeCommand(\"type\" /* Type */, payload);\n                },\n                compositionType: (text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) => {\n                    // Try if possible to go through the existing `replacePreviousChar` command\n                    if (replaceNextCharCnt || positionDelta) {\n                        // must be handled through the new command\n                        const payload = { text, replacePrevCharCnt, replaceNextCharCnt, positionDelta };\n                        this._commandService.executeCommand(\"compositionType\" /* CompositionType */, payload);\n                    }\n                    else {\n                        const payload = { text, replaceCharCnt: replacePrevCharCnt };\n                        this._commandService.executeCommand(\"replacePreviousChar\" /* ReplacePreviousChar */, payload);\n                    }\n                },\n                startComposition: () => {\n                    this._commandService.executeCommand(\"compositionStart\" /* CompositionStart */, {});\n                },\n                endComposition: () => {\n                    this._commandService.executeCommand(\"compositionEnd\" /* CompositionEnd */, {});\n                },\n                cut: () => {\n                    this._commandService.executeCommand(\"cut\" /* Cut */, {});\n                }\n            };\n        }\n        const viewUserInputEvents = new ViewUserInputEvents(viewModel.coordinatesConverter);\n        viewUserInputEvents.onKeyDown = (e) => this._onKeyDown.fire(e);\n        viewUserInputEvents.onKeyUp = (e) => this._onKeyUp.fire(e);\n        viewUserInputEvents.onContextMenu = (e) => this._onContextMenu.fire(e);\n        viewUserInputEvents.onMouseMove = (e) => this._onMouseMove.fire(e);\n        viewUserInputEvents.onMouseLeave = (e) => this._onMouseLeave.fire(e);\n        viewUserInputEvents.onMouseDown = (e) => this._onMouseDown.fire(e);\n        viewUserInputEvents.onMouseUp = (e) => this._onMouseUp.fire(e);\n        viewUserInputEvents.onMouseDrag = (e) => this._onMouseDrag.fire(e);\n        viewUserInputEvents.onMouseDrop = (e) => this._onMouseDrop.fire(e);\n        viewUserInputEvents.onMouseDropCanceled = (e) => this._onMouseDropCanceled.fire(e);\n        viewUserInputEvents.onMouseWheel = (e) => this._onMouseWheel.fire(e);\n        const view = new View(commandDelegate, this._configuration, this._themeService.getColorTheme(), viewModel, viewUserInputEvents, this._overflowWidgetsDomNode);\n        return [view, true];\n    }\n    _postDetachModelCleanup(detachedModel) {\n        if (detachedModel) {\n            detachedModel.removeAllDecorationsWithOwnerId(this._id);\n        }\n    }\n    _detachModel() {\n        if (!this._modelData) {\n            return null;\n        }\n        const model = this._modelData.model;\n        const removeDomNode = this._modelData.hasRealView ? this._modelData.view.domNode.domNode : null;\n        this._modelData.dispose();\n        this._modelData = null;\n        this._domElement.removeAttribute('data-mode-id');\n        if (removeDomNode && this._domElement.contains(removeDomNode)) {\n            this._domElement.removeChild(removeDomNode);\n        }\n        if (this._bannerDomNode && this._domElement.contains(this._bannerDomNode)) {\n            this._domElement.removeChild(this._bannerDomNode);\n        }\n        return model;\n    }\n    _removeDecorationType(key) {\n        this._codeEditorService.removeDecorationType(key);\n    }\n    hasModel() {\n        return (this._modelData !== null);\n    }\n};\nCodeEditorWidget = __decorate([\n    __param(3, IInstantiationService),\n    __param(4, ICodeEditorService),\n    __param(5, ICommandService),\n    __param(6, IContextKeyService),\n    __param(7, IThemeService),\n    __param(8, INotificationService),\n    __param(9, IAccessibilityService),\n    __param(10, ILanguageConfigurationService),\n    __param(11, ILanguageFeaturesService)\n], CodeEditorWidget);\nexport { CodeEditorWidget };\nexport class BooleanEventEmitter extends Disposable {\n    constructor() {\n        super();\n        this._onDidChangeToTrue = this._register(new Emitter());\n        this.onDidChangeToTrue = this._onDidChangeToTrue.event;\n        this._onDidChangeToFalse = this._register(new Emitter());\n        this.onDidChangeToFalse = this._onDidChangeToFalse.event;\n        this._value = 0 /* NotSet */;\n    }\n    setValue(_value) {\n        const value = (_value ? 2 /* True */ : 1 /* False */);\n        if (this._value === value) {\n            return;\n        }\n        this._value = value;\n        if (this._value === 2 /* True */) {\n            this._onDidChangeToTrue.fire();\n        }\n        else if (this._value === 1 /* False */) {\n            this._onDidChangeToFalse.fire();\n        }\n    }\n}\nclass EditorContextKeysManager extends Disposable {\n    constructor(editor, contextKeyService) {\n        super();\n        this._editor = editor;\n        contextKeyService.createKey('editorId', editor.getId());\n        this._editorSimpleInput = EditorContextKeys.editorSimpleInput.bindTo(contextKeyService);\n        this._editorFocus = EditorContextKeys.focus.bindTo(contextKeyService);\n        this._textInputFocus = EditorContextKeys.textInputFocus.bindTo(contextKeyService);\n        this._editorTextFocus = EditorContextKeys.editorTextFocus.bindTo(contextKeyService);\n        this._editorTabMovesFocus = EditorContextKeys.tabMovesFocus.bindTo(contextKeyService);\n        this._editorReadonly = EditorContextKeys.readOnly.bindTo(contextKeyService);\n        this._inDiffEditor = EditorContextKeys.inDiffEditor.bindTo(contextKeyService);\n        this._editorColumnSelection = EditorContextKeys.columnSelection.bindTo(contextKeyService);\n        this._hasMultipleSelections = EditorContextKeys.hasMultipleSelections.bindTo(contextKeyService);\n        this._hasNonEmptySelection = EditorContextKeys.hasNonEmptySelection.bindTo(contextKeyService);\n        this._canUndo = EditorContextKeys.canUndo.bindTo(contextKeyService);\n        this._canRedo = EditorContextKeys.canRedo.bindTo(contextKeyService);\n        this._register(this._editor.onDidChangeConfiguration(() => this._updateFromConfig()));\n        this._register(this._editor.onDidChangeCursorSelection(() => this._updateFromSelection()));\n        this._register(this._editor.onDidFocusEditorWidget(() => this._updateFromFocus()));\n        this._register(this._editor.onDidBlurEditorWidget(() => this._updateFromFocus()));\n        this._register(this._editor.onDidFocusEditorText(() => this._updateFromFocus()));\n        this._register(this._editor.onDidBlurEditorText(() => this._updateFromFocus()));\n        this._register(this._editor.onDidChangeModel(() => this._updateFromModel()));\n        this._register(this._editor.onDidChangeConfiguration(() => this._updateFromModel()));\n        this._updateFromConfig();\n        this._updateFromSelection();\n        this._updateFromFocus();\n        this._updateFromModel();\n        this._editorSimpleInput.set(this._editor.isSimpleWidget);\n    }\n    _updateFromConfig() {\n        const options = this._editor.getOptions();\n        this._editorTabMovesFocus.set(options.get(130 /* tabFocusMode */));\n        this._editorReadonly.set(options.get(81 /* readOnly */));\n        this._inDiffEditor.set(options.get(54 /* inDiffEditor */));\n        this._editorColumnSelection.set(options.get(18 /* columnSelection */));\n    }\n    _updateFromSelection() {\n        const selections = this._editor.getSelections();\n        if (!selections) {\n            this._hasMultipleSelections.reset();\n            this._hasNonEmptySelection.reset();\n        }\n        else {\n            this._hasMultipleSelections.set(selections.length > 1);\n            this._hasNonEmptySelection.set(selections.some(s => !s.isEmpty()));\n        }\n    }\n    _updateFromFocus() {\n        this._editorFocus.set(this._editor.hasWidgetFocus() && !this._editor.isSimpleWidget);\n        this._editorTextFocus.set(this._editor.hasTextFocus() && !this._editor.isSimpleWidget);\n        this._textInputFocus.set(this._editor.hasTextFocus());\n    }\n    _updateFromModel() {\n        const model = this._editor.getModel();\n        this._canUndo.set(Boolean(model && model.canUndo()));\n        this._canRedo.set(Boolean(model && model.canRedo()));\n    }\n}\nexport class EditorModeContext extends Disposable {\n    constructor(_editor, _contextKeyService, _languageFeaturesService) {\n        super();\n        this._editor = _editor;\n        this._contextKeyService = _contextKeyService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._langId = EditorContextKeys.languageId.bindTo(_contextKeyService);\n        this._hasCompletionItemProvider = EditorContextKeys.hasCompletionItemProvider.bindTo(_contextKeyService);\n        this._hasCodeActionsProvider = EditorContextKeys.hasCodeActionsProvider.bindTo(_contextKeyService);\n        this._hasCodeLensProvider = EditorContextKeys.hasCodeLensProvider.bindTo(_contextKeyService);\n        this._hasDefinitionProvider = EditorContextKeys.hasDefinitionProvider.bindTo(_contextKeyService);\n        this._hasDeclarationProvider = EditorContextKeys.hasDeclarationProvider.bindTo(_contextKeyService);\n        this._hasImplementationProvider = EditorContextKeys.hasImplementationProvider.bindTo(_contextKeyService);\n        this._hasTypeDefinitionProvider = EditorContextKeys.hasTypeDefinitionProvider.bindTo(_contextKeyService);\n        this._hasHoverProvider = EditorContextKeys.hasHoverProvider.bindTo(_contextKeyService);\n        this._hasDocumentHighlightProvider = EditorContextKeys.hasDocumentHighlightProvider.bindTo(_contextKeyService);\n        this._hasDocumentSymbolProvider = EditorContextKeys.hasDocumentSymbolProvider.bindTo(_contextKeyService);\n        this._hasReferenceProvider = EditorContextKeys.hasReferenceProvider.bindTo(_contextKeyService);\n        this._hasRenameProvider = EditorContextKeys.hasRenameProvider.bindTo(_contextKeyService);\n        this._hasSignatureHelpProvider = EditorContextKeys.hasSignatureHelpProvider.bindTo(_contextKeyService);\n        this._hasInlayHintsProvider = EditorContextKeys.hasInlayHintsProvider.bindTo(_contextKeyService);\n        this._hasDocumentFormattingProvider = EditorContextKeys.hasDocumentFormattingProvider.bindTo(_contextKeyService);\n        this._hasDocumentSelectionFormattingProvider = EditorContextKeys.hasDocumentSelectionFormattingProvider.bindTo(_contextKeyService);\n        this._hasMultipleDocumentFormattingProvider = EditorContextKeys.hasMultipleDocumentFormattingProvider.bindTo(_contextKeyService);\n        this._hasMultipleDocumentSelectionFormattingProvider = EditorContextKeys.hasMultipleDocumentSelectionFormattingProvider.bindTo(_contextKeyService);\n        this._isInWalkThrough = EditorContextKeys.isInWalkThroughSnippet.bindTo(_contextKeyService);\n        const update = () => this._update();\n        // update when model/mode changes\n        this._register(_editor.onDidChangeModel(update));\n        this._register(_editor.onDidChangeModelLanguage(update));\n        // update when registries change\n        this._register(_languageFeaturesService.completionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.codeActionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.codeLensProvider.onDidChange(update));\n        this._register(_languageFeaturesService.definitionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.declarationProvider.onDidChange(update));\n        this._register(_languageFeaturesService.implementationProvider.onDidChange(update));\n        this._register(_languageFeaturesService.typeDefinitionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.hoverProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentHighlightProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentSymbolProvider.onDidChange(update));\n        this._register(_languageFeaturesService.referenceProvider.onDidChange(update));\n        this._register(_languageFeaturesService.renameProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentFormattingEditProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentRangeFormattingEditProvider.onDidChange(update));\n        this._register(_languageFeaturesService.signatureHelpProvider.onDidChange(update));\n        this._register(_languageFeaturesService.inlayHintsProvider.onDidChange(update));\n        update();\n    }\n    dispose() {\n        super.dispose();\n    }\n    reset() {\n        this._contextKeyService.bufferChangeEvents(() => {\n            this._langId.reset();\n            this._hasCompletionItemProvider.reset();\n            this._hasCodeActionsProvider.reset();\n            this._hasCodeLensProvider.reset();\n            this._hasDefinitionProvider.reset();\n            this._hasDeclarationProvider.reset();\n            this._hasImplementationProvider.reset();\n            this._hasTypeDefinitionProvider.reset();\n            this._hasHoverProvider.reset();\n            this._hasDocumentHighlightProvider.reset();\n            this._hasDocumentSymbolProvider.reset();\n            this._hasReferenceProvider.reset();\n            this._hasRenameProvider.reset();\n            this._hasDocumentFormattingProvider.reset();\n            this._hasDocumentSelectionFormattingProvider.reset();\n            this._hasSignatureHelpProvider.reset();\n            this._isInWalkThrough.reset();\n        });\n    }\n    _update() {\n        const model = this._editor.getModel();\n        if (!model) {\n            this.reset();\n            return;\n        }\n        this._contextKeyService.bufferChangeEvents(() => {\n            this._langId.set(model.getLanguageId());\n            this._hasCompletionItemProvider.set(this._languageFeaturesService.completionProvider.has(model));\n            this._hasCodeActionsProvider.set(this._languageFeaturesService.codeActionProvider.has(model));\n            this._hasCodeLensProvider.set(this._languageFeaturesService.codeLensProvider.has(model));\n            this._hasDefinitionProvider.set(this._languageFeaturesService.definitionProvider.has(model));\n            this._hasDeclarationProvider.set(this._languageFeaturesService.declarationProvider.has(model));\n            this._hasImplementationProvider.set(this._languageFeaturesService.implementationProvider.has(model));\n            this._hasTypeDefinitionProvider.set(this._languageFeaturesService.typeDefinitionProvider.has(model));\n            this._hasHoverProvider.set(this._languageFeaturesService.hoverProvider.has(model));\n            this._hasDocumentHighlightProvider.set(this._languageFeaturesService.documentHighlightProvider.has(model));\n            this._hasDocumentSymbolProvider.set(this._languageFeaturesService.documentSymbolProvider.has(model));\n            this._hasReferenceProvider.set(this._languageFeaturesService.referenceProvider.has(model));\n            this._hasRenameProvider.set(this._languageFeaturesService.renameProvider.has(model));\n            this._hasSignatureHelpProvider.set(this._languageFeaturesService.signatureHelpProvider.has(model));\n            this._hasInlayHintsProvider.set(this._languageFeaturesService.inlayHintsProvider.has(model));\n            this._hasDocumentFormattingProvider.set(this._languageFeaturesService.documentFormattingEditProvider.has(model) || this._languageFeaturesService.documentRangeFormattingEditProvider.has(model));\n            this._hasDocumentSelectionFormattingProvider.set(this._languageFeaturesService.documentRangeFormattingEditProvider.has(model));\n            this._hasMultipleDocumentFormattingProvider.set(this._languageFeaturesService.documentFormattingEditProvider.all(model).length + this._languageFeaturesService.documentRangeFormattingEditProvider.all(model).length > 1);\n            this._hasMultipleDocumentSelectionFormattingProvider.set(this._languageFeaturesService.documentRangeFormattingEditProvider.all(model).length > 1);\n            this._isInWalkThrough.set(model.uri.scheme === Schemas.walkThroughSnippet);\n        });\n    }\n}\nclass CodeEditorWidgetFocusTracker extends Disposable {\n    constructor(domElement) {\n        super();\n        this._onChange = this._register(new Emitter());\n        this.onChange = this._onChange.event;\n        this._hasFocus = false;\n        this._domFocusTracker = this._register(dom.trackFocus(domElement));\n        this._register(this._domFocusTracker.onDidFocus(() => {\n            this._hasFocus = true;\n            this._onChange.fire(undefined);\n        }));\n        this._register(this._domFocusTracker.onDidBlur(() => {\n            this._hasFocus = false;\n            this._onChange.fire(undefined);\n        }));\n    }\n    hasFocus() {\n        return this._hasFocus;\n    }\n}\nconst squigglyStart = encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 6 3' enable-background='new 0 0 6 3' height='3' width='6'><g fill='`);\nconst squigglyEnd = encodeURIComponent(`'><polygon points='5.5,0 2.5,3 1.1,3 4.1,0'/><polygon points='4,0 6,2 6,0.6 5.4,0'/><polygon points='0,2 1,3 2.4,3 0,0.6'/></g></svg>`);\nfunction getSquigglySVGData(color) {\n    return squigglyStart + encodeURIComponent(color.toString()) + squigglyEnd;\n}\nconst dotdotdotStart = encodeURIComponent(`<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"3\" width=\"12\"><g fill=\"`);\nconst dotdotdotEnd = encodeURIComponent(`\"><circle cx=\"1\" cy=\"1\" r=\"1\"/><circle cx=\"5\" cy=\"1\" r=\"1\"/><circle cx=\"9\" cy=\"1\" r=\"1\"/></g></svg>`);\nfunction getDotDotDotSVGData(color) {\n    return dotdotdotStart + encodeURIComponent(color.toString()) + dotdotdotEnd;\n}\nregisterThemingParticipant((theme, collector) => {\n    const errorBorderColor = theme.getColor(editorErrorBorder);\n    if (errorBorderColor) {\n        collector.addRule(`.monaco-editor .${\"squiggly-error\" /* EditorErrorDecoration */} { border-bottom: 4px double ${errorBorderColor}; }`);\n    }\n    const errorForeground = theme.getColor(editorErrorForeground);\n    if (errorForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-error\" /* EditorErrorDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(errorForeground)}\") repeat-x bottom left; }`);\n    }\n    const errorBackground = theme.getColor(editorErrorBackground);\n    if (errorBackground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-error\" /* EditorErrorDecoration */}::before { display: block; content: ''; width: 100%; height: 100%; background: ${errorBackground}; }`);\n    }\n    const warningBorderColor = theme.getColor(editorWarningBorder);\n    if (warningBorderColor) {\n        collector.addRule(`.monaco-editor .${\"squiggly-warning\" /* EditorWarningDecoration */} { border-bottom: 4px double ${warningBorderColor}; }`);\n    }\n    const warningForeground = theme.getColor(editorWarningForeground);\n    if (warningForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-warning\" /* EditorWarningDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(warningForeground)}\") repeat-x bottom left; }`);\n    }\n    const warningBackground = theme.getColor(editorWarningBackground);\n    if (warningBackground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-warning\" /* EditorWarningDecoration */}::before { display: block; content: ''; width: 100%; height: 100%; background: ${warningBackground}; }`);\n    }\n    const infoBorderColor = theme.getColor(editorInfoBorder);\n    if (infoBorderColor) {\n        collector.addRule(`.monaco-editor .${\"squiggly-info\" /* EditorInfoDecoration */} { border-bottom: 4px double ${infoBorderColor}; }`);\n    }\n    const infoForeground = theme.getColor(editorInfoForeground);\n    if (infoForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-info\" /* EditorInfoDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(infoForeground)}\") repeat-x bottom left; }`);\n    }\n    const infoBackground = theme.getColor(editorInfoBackground);\n    if (infoBackground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-info\" /* EditorInfoDecoration */}::before { display: block; content: ''; width: 100%; height: 100%; background: ${infoBackground}; }`);\n    }\n    const hintBorderColor = theme.getColor(editorHintBorder);\n    if (hintBorderColor) {\n        collector.addRule(`.monaco-editor .${\"squiggly-hint\" /* EditorHintDecoration */} { border-bottom: 2px dotted ${hintBorderColor}; }`);\n    }\n    const hintForeground = theme.getColor(editorHintForeground);\n    if (hintForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-hint\" /* EditorHintDecoration */} { background: url(\"data:image/svg+xml,${getDotDotDotSVGData(hintForeground)}\") no-repeat bottom left; }`);\n    }\n    const unnecessaryForeground = theme.getColor(editorUnnecessaryCodeOpacity);\n    if (unnecessaryForeground) {\n        collector.addRule(`.monaco-editor.showUnused .${\"squiggly-inline-unnecessary\" /* EditorUnnecessaryInlineDecoration */} { opacity: ${unnecessaryForeground.rgba.a}; }`);\n    }\n    const unnecessaryBorder = theme.getColor(editorUnnecessaryCodeBorder);\n    if (unnecessaryBorder) {\n        collector.addRule(`.monaco-editor.showUnused .${\"squiggly-unnecessary\" /* EditorUnnecessaryDecoration */} { border-bottom: 2px dashed ${unnecessaryBorder}; }`);\n    }\n    const deprecatedForeground = theme.getColor(editorForeground) || 'inherit';\n    collector.addRule(`.monaco-editor.showDeprecated .${\"squiggly-inline-deprecated\" /* EditorDeprecatedInlineDecoration */} { text-decoration: line-through; text-decoration-color: ${deprecatedForeground}}`);\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar _a;\nimport './media/diffReview.css';\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { DomScrollableElement } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { Action } from '../../../base/common/actions.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { EditorAction, registerEditorAction } from '../editorExtensions.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { EditorFontLigatures } from '../../common/config/editorOptions.js';\nimport { LineTokens } from '../../common/tokens/lineTokens.js';\nimport { Position } from '../../common/core/position.js';\nimport { editorLineNumbers } from '../../common/core/editorColorRegistry.js';\nimport { RenderLineInput, renderViewLine2 as renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\nimport { ViewLineRenderingData } from '../../common/viewModel.js';\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\nimport { scrollbarShadow } from '../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant, ThemeIcon } from '../../../platform/theme/common/themeService.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\nimport { ILanguageService } from '../../common/languages/language.js';\nconst DIFF_LINES_PADDING = 3;\nclass DiffEntry {\n    constructor(originalLineStart, originalLineEnd, modifiedLineStart, modifiedLineEnd) {\n        this.originalLineStart = originalLineStart;\n        this.originalLineEnd = originalLineEnd;\n        this.modifiedLineStart = modifiedLineStart;\n        this.modifiedLineEnd = modifiedLineEnd;\n    }\n    getType() {\n        if (this.originalLineStart === 0) {\n            return 1 /* Insert */;\n        }\n        if (this.modifiedLineStart === 0) {\n            return 2 /* Delete */;\n        }\n        return 0 /* Equal */;\n    }\n}\nclass Diff {\n    constructor(entries) {\n        this.entries = entries;\n    }\n}\nconst diffReviewInsertIcon = registerIcon('diff-review-insert', Codicon.add, nls.localize('diffReviewInsertIcon', 'Icon for \\'Insert\\' in diff review.'));\nconst diffReviewRemoveIcon = registerIcon('diff-review-remove', Codicon.remove, nls.localize('diffReviewRemoveIcon', 'Icon for \\'Remove\\' in diff review.'));\nconst diffReviewCloseIcon = registerIcon('diff-review-close', Codicon.close, nls.localize('diffReviewCloseIcon', 'Icon for \\'Close\\' in diff review.'));\nlet DiffReview = class DiffReview extends Disposable {\n    constructor(diffEditor, _languageService) {\n        super();\n        this._languageService = _languageService;\n        this._width = 0;\n        this._diffEditor = diffEditor;\n        this._isVisible = false;\n        this.shadow = createFastDomNode(document.createElement('div'));\n        this.shadow.setClassName('diff-review-shadow');\n        this.actionBarContainer = createFastDomNode(document.createElement('div'));\n        this.actionBarContainer.setClassName('diff-review-actions');\n        this._actionBar = this._register(new ActionBar(this.actionBarContainer.domNode));\n        this._actionBar.push(new Action('diffreview.close', nls.localize('label.close', \"Close\"), 'close-diff-review ' + ThemeIcon.asClassName(diffReviewCloseIcon), true, () => __awaiter(this, void 0, void 0, function* () { return this.hide(); })), { label: false, icon: true });\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setClassName('diff-review monaco-editor-background');\n        this._content = createFastDomNode(document.createElement('div'));\n        this._content.setClassName('diff-review-content');\n        this._content.setAttribute('role', 'code');\n        this.scrollbar = this._register(new DomScrollableElement(this._content.domNode, {}));\n        this.domNode.domNode.appendChild(this.scrollbar.getDomNode());\n        this._register(diffEditor.onDidUpdateDiff(() => {\n            if (!this._isVisible) {\n                return;\n            }\n            this._diffs = this._compute();\n            this._render();\n        }));\n        this._register(diffEditor.getModifiedEditor().onDidChangeCursorPosition(() => {\n            if (!this._isVisible) {\n                return;\n            }\n            this._render();\n        }));\n        this._register(dom.addStandardDisposableListener(this.domNode.domNode, 'click', (e) => {\n            e.preventDefault();\n            const row = dom.findParentWithClass(e.target, 'diff-review-row');\n            if (row) {\n                this._goToRow(row);\n            }\n        }));\n        this._register(dom.addStandardDisposableListener(this.domNode.domNode, 'keydown', (e) => {\n            if (e.equals(18 /* DownArrow */)\n                || e.equals(2048 /* CtrlCmd */ | 18 /* DownArrow */)\n                || e.equals(512 /* Alt */ | 18 /* DownArrow */)) {\n                e.preventDefault();\n                this._goToRow(this._getNextRow());\n            }\n            if (e.equals(16 /* UpArrow */)\n                || e.equals(2048 /* CtrlCmd */ | 16 /* UpArrow */)\n                || e.equals(512 /* Alt */ | 16 /* UpArrow */)) {\n                e.preventDefault();\n                this._goToRow(this._getPrevRow());\n            }\n            if (e.equals(9 /* Escape */)\n                || e.equals(2048 /* CtrlCmd */ | 9 /* Escape */)\n                || e.equals(512 /* Alt */ | 9 /* Escape */)\n                || e.equals(1024 /* Shift */ | 9 /* Escape */)) {\n                e.preventDefault();\n                this.hide();\n            }\n            if (e.equals(10 /* Space */)\n                || e.equals(3 /* Enter */)) {\n                e.preventDefault();\n                this.accept();\n            }\n        }));\n        this._diffs = [];\n        this._currentDiff = null;\n    }\n    prev() {\n        let index = 0;\n        if (!this._isVisible) {\n            this._diffs = this._compute();\n        }\n        if (this._isVisible) {\n            let currentIndex = -1;\n            for (let i = 0, len = this._diffs.length; i < len; i++) {\n                if (this._diffs[i] === this._currentDiff) {\n                    currentIndex = i;\n                    break;\n                }\n            }\n            index = (this._diffs.length + currentIndex - 1);\n        }\n        else {\n            index = this._findDiffIndex(this._diffEditor.getPosition());\n        }\n        if (this._diffs.length === 0) {\n            // Nothing to do\n            return;\n        }\n        index = index % this._diffs.length;\n        const entries = this._diffs[index].entries;\n        this._diffEditor.setPosition(new Position(entries[0].modifiedLineStart, 1));\n        this._diffEditor.setSelection({ startColumn: 1, startLineNumber: entries[0].modifiedLineStart, endColumn: 1073741824 /* MAX_SAFE_SMALL_INTEGER */, endLineNumber: entries[entries.length - 1].modifiedLineEnd });\n        this._isVisible = true;\n        this._diffEditor.doLayout();\n        this._render();\n        this._goToRow(this._getNextRow());\n    }\n    next() {\n        let index = 0;\n        if (!this._isVisible) {\n            this._diffs = this._compute();\n        }\n        if (this._isVisible) {\n            let currentIndex = -1;\n            for (let i = 0, len = this._diffs.length; i < len; i++) {\n                if (this._diffs[i] === this._currentDiff) {\n                    currentIndex = i;\n                    break;\n                }\n            }\n            index = (currentIndex + 1);\n        }\n        else {\n            index = this._findDiffIndex(this._diffEditor.getPosition());\n        }\n        if (this._diffs.length === 0) {\n            // Nothing to do\n            return;\n        }\n        index = index % this._diffs.length;\n        const entries = this._diffs[index].entries;\n        this._diffEditor.setPosition(new Position(entries[0].modifiedLineStart, 1));\n        this._diffEditor.setSelection({ startColumn: 1, startLineNumber: entries[0].modifiedLineStart, endColumn: 1073741824 /* MAX_SAFE_SMALL_INTEGER */, endLineNumber: entries[entries.length - 1].modifiedLineEnd });\n        this._isVisible = true;\n        this._diffEditor.doLayout();\n        this._render();\n        this._goToRow(this._getNextRow());\n    }\n    accept() {\n        let jumpToLineNumber = -1;\n        const current = this._getCurrentFocusedRow();\n        if (current) {\n            const lineNumber = parseInt(current.getAttribute('data-line'), 10);\n            if (!isNaN(lineNumber)) {\n                jumpToLineNumber = lineNumber;\n            }\n        }\n        this.hide();\n        if (jumpToLineNumber !== -1) {\n            this._diffEditor.setPosition(new Position(jumpToLineNumber, 1));\n            this._diffEditor.revealPosition(new Position(jumpToLineNumber, 1), 1 /* Immediate */);\n        }\n    }\n    hide() {\n        this._isVisible = false;\n        this._diffEditor.updateOptions({ readOnly: false });\n        this._diffEditor.focus();\n        this._diffEditor.doLayout();\n        this._render();\n    }\n    _getPrevRow() {\n        const current = this._getCurrentFocusedRow();\n        if (!current) {\n            return this._getFirstRow();\n        }\n        if (current.previousElementSibling) {\n            return current.previousElementSibling;\n        }\n        return current;\n    }\n    _getNextRow() {\n        const current = this._getCurrentFocusedRow();\n        if (!current) {\n            return this._getFirstRow();\n        }\n        if (current.nextElementSibling) {\n            return current.nextElementSibling;\n        }\n        return current;\n    }\n    _getFirstRow() {\n        return this.domNode.domNode.querySelector('.diff-review-row');\n    }\n    _getCurrentFocusedRow() {\n        const result = document.activeElement;\n        if (result && /diff-review-row/.test(result.className)) {\n            return result;\n        }\n        return null;\n    }\n    _goToRow(row) {\n        const prev = this._getCurrentFocusedRow();\n        row.tabIndex = 0;\n        row.focus();\n        if (prev && prev !== row) {\n            prev.tabIndex = -1;\n        }\n        this.scrollbar.scanDomNode();\n    }\n    isVisible() {\n        return this._isVisible;\n    }\n    layout(top, width, height) {\n        this._width = width;\n        this.shadow.setTop(top - 6);\n        this.shadow.setWidth(width);\n        this.shadow.setHeight(this._isVisible ? 6 : 0);\n        this.domNode.setTop(top);\n        this.domNode.setWidth(width);\n        this.domNode.setHeight(height);\n        this._content.setHeight(height);\n        this._content.setWidth(width);\n        if (this._isVisible) {\n            this.actionBarContainer.setAttribute('aria-hidden', 'false');\n            this.actionBarContainer.setDisplay('block');\n        }\n        else {\n            this.actionBarContainer.setAttribute('aria-hidden', 'true');\n            this.actionBarContainer.setDisplay('none');\n        }\n    }\n    _compute() {\n        const lineChanges = this._diffEditor.getLineChanges();\n        if (!lineChanges || lineChanges.length === 0) {\n            return [];\n        }\n        const originalModel = this._diffEditor.getOriginalEditor().getModel();\n        const modifiedModel = this._diffEditor.getModifiedEditor().getModel();\n        if (!originalModel || !modifiedModel) {\n            return [];\n        }\n        return DiffReview._mergeAdjacent(lineChanges, originalModel.getLineCount(), modifiedModel.getLineCount());\n    }\n    static _mergeAdjacent(lineChanges, originalLineCount, modifiedLineCount) {\n        if (!lineChanges || lineChanges.length === 0) {\n            return [];\n        }\n        const diffs = [];\n        let diffsLength = 0;\n        for (let i = 0, len = lineChanges.length; i < len; i++) {\n            const lineChange = lineChanges[i];\n            const originalStart = lineChange.originalStartLineNumber;\n            const originalEnd = lineChange.originalEndLineNumber;\n            const modifiedStart = lineChange.modifiedStartLineNumber;\n            const modifiedEnd = lineChange.modifiedEndLineNumber;\n            const r = [];\n            let rLength = 0;\n            // Emit before anchors\n            {\n                const originalEqualAbove = (originalEnd === 0 ? originalStart : originalStart - 1);\n                const modifiedEqualAbove = (modifiedEnd === 0 ? modifiedStart : modifiedStart - 1);\n                // Make sure we don't step into the previous diff\n                let minOriginal = 1;\n                let minModified = 1;\n                if (i > 0) {\n                    const prevLineChange = lineChanges[i - 1];\n                    if (prevLineChange.originalEndLineNumber === 0) {\n                        minOriginal = prevLineChange.originalStartLineNumber + 1;\n                    }\n                    else {\n                        minOriginal = prevLineChange.originalEndLineNumber + 1;\n                    }\n                    if (prevLineChange.modifiedEndLineNumber === 0) {\n                        minModified = prevLineChange.modifiedStartLineNumber + 1;\n                    }\n                    else {\n                        minModified = prevLineChange.modifiedEndLineNumber + 1;\n                    }\n                }\n                let fromOriginal = originalEqualAbove - DIFF_LINES_PADDING + 1;\n                let fromModified = modifiedEqualAbove - DIFF_LINES_PADDING + 1;\n                if (fromOriginal < minOriginal) {\n                    const delta = minOriginal - fromOriginal;\n                    fromOriginal = fromOriginal + delta;\n                    fromModified = fromModified + delta;\n                }\n                if (fromModified < minModified) {\n                    const delta = minModified - fromModified;\n                    fromOriginal = fromOriginal + delta;\n                    fromModified = fromModified + delta;\n                }\n                r[rLength++] = new DiffEntry(fromOriginal, originalEqualAbove, fromModified, modifiedEqualAbove);\n            }\n            // Emit deleted lines\n            {\n                if (originalEnd !== 0) {\n                    r[rLength++] = new DiffEntry(originalStart, originalEnd, 0, 0);\n                }\n            }\n            // Emit inserted lines\n            {\n                if (modifiedEnd !== 0) {\n                    r[rLength++] = new DiffEntry(0, 0, modifiedStart, modifiedEnd);\n                }\n            }\n            // Emit after anchors\n            {\n                const originalEqualBelow = (originalEnd === 0 ? originalStart + 1 : originalEnd + 1);\n                const modifiedEqualBelow = (modifiedEnd === 0 ? modifiedStart + 1 : modifiedEnd + 1);\n                // Make sure we don't step into the next diff\n                let maxOriginal = originalLineCount;\n                let maxModified = modifiedLineCount;\n                if (i + 1 < len) {\n                    const nextLineChange = lineChanges[i + 1];\n                    if (nextLineChange.originalEndLineNumber === 0) {\n                        maxOriginal = nextLineChange.originalStartLineNumber;\n                    }\n                    else {\n                        maxOriginal = nextLineChange.originalStartLineNumber - 1;\n                    }\n                    if (nextLineChange.modifiedEndLineNumber === 0) {\n                        maxModified = nextLineChange.modifiedStartLineNumber;\n                    }\n                    else {\n                        maxModified = nextLineChange.modifiedStartLineNumber - 1;\n                    }\n                }\n                let toOriginal = originalEqualBelow + DIFF_LINES_PADDING - 1;\n                let toModified = modifiedEqualBelow + DIFF_LINES_PADDING - 1;\n                if (toOriginal > maxOriginal) {\n                    const delta = maxOriginal - toOriginal;\n                    toOriginal = toOriginal + delta;\n                    toModified = toModified + delta;\n                }\n                if (toModified > maxModified) {\n                    const delta = maxModified - toModified;\n                    toOriginal = toOriginal + delta;\n                    toModified = toModified + delta;\n                }\n                r[rLength++] = new DiffEntry(originalEqualBelow, toOriginal, modifiedEqualBelow, toModified);\n            }\n            diffs[diffsLength++] = new Diff(r);\n        }\n        // Merge adjacent diffs\n        let curr = diffs[0].entries;\n        const r = [];\n        let rLength = 0;\n        for (let i = 1, len = diffs.length; i < len; i++) {\n            const thisDiff = diffs[i].entries;\n            const currLast = curr[curr.length - 1];\n            const thisFirst = thisDiff[0];\n            if (currLast.getType() === 0 /* Equal */\n                && thisFirst.getType() === 0 /* Equal */\n                && thisFirst.originalLineStart <= currLast.originalLineEnd) {\n                // We are dealing with equal lines that overlap\n                curr[curr.length - 1] = new DiffEntry(currLast.originalLineStart, thisFirst.originalLineEnd, currLast.modifiedLineStart, thisFirst.modifiedLineEnd);\n                curr = curr.concat(thisDiff.slice(1));\n                continue;\n            }\n            r[rLength++] = new Diff(curr);\n            curr = thisDiff;\n        }\n        r[rLength++] = new Diff(curr);\n        return r;\n    }\n    _findDiffIndex(pos) {\n        const lineNumber = pos.lineNumber;\n        for (let i = 0, len = this._diffs.length; i < len; i++) {\n            const diff = this._diffs[i].entries;\n            const lastModifiedLine = diff[diff.length - 1].modifiedLineEnd;\n            if (lineNumber <= lastModifiedLine) {\n                return i;\n            }\n        }\n        return 0;\n    }\n    _render() {\n        const originalOptions = this._diffEditor.getOriginalEditor().getOptions();\n        const modifiedOptions = this._diffEditor.getModifiedEditor().getOptions();\n        const originalModel = this._diffEditor.getOriginalEditor().getModel();\n        const modifiedModel = this._diffEditor.getModifiedEditor().getModel();\n        const originalModelOpts = originalModel.getOptions();\n        const modifiedModelOpts = modifiedModel.getOptions();\n        if (!this._isVisible || !originalModel || !modifiedModel) {\n            dom.clearNode(this._content.domNode);\n            this._currentDiff = null;\n            this.scrollbar.scanDomNode();\n            return;\n        }\n        this._diffEditor.updateOptions({ readOnly: true });\n        const diffIndex = this._findDiffIndex(this._diffEditor.getPosition());\n        if (this._diffs[diffIndex] === this._currentDiff) {\n            return;\n        }\n        this._currentDiff = this._diffs[diffIndex];\n        const diffs = this._diffs[diffIndex].entries;\n        const container = document.createElement('div');\n        container.className = 'diff-review-table';\n        container.setAttribute('role', 'list');\n        container.setAttribute('aria-label', 'Difference review. Use \"Stage | Unstage | Revert Selected Ranges\" commands');\n        applyFontInfo(container, modifiedOptions.get(44 /* fontInfo */));\n        let minOriginalLine = 0;\n        let maxOriginalLine = 0;\n        let minModifiedLine = 0;\n        let maxModifiedLine = 0;\n        for (let i = 0, len = diffs.length; i < len; i++) {\n            const diffEntry = diffs[i];\n            const originalLineStart = diffEntry.originalLineStart;\n            const originalLineEnd = diffEntry.originalLineEnd;\n            const modifiedLineStart = diffEntry.modifiedLineStart;\n            const modifiedLineEnd = diffEntry.modifiedLineEnd;\n            if (originalLineStart !== 0 && ((minOriginalLine === 0 || originalLineStart < minOriginalLine))) {\n                minOriginalLine = originalLineStart;\n            }\n            if (originalLineEnd !== 0 && ((maxOriginalLine === 0 || originalLineEnd > maxOriginalLine))) {\n                maxOriginalLine = originalLineEnd;\n            }\n            if (modifiedLineStart !== 0 && ((minModifiedLine === 0 || modifiedLineStart < minModifiedLine))) {\n                minModifiedLine = modifiedLineStart;\n            }\n            if (modifiedLineEnd !== 0 && ((maxModifiedLine === 0 || modifiedLineEnd > maxModifiedLine))) {\n                maxModifiedLine = modifiedLineEnd;\n            }\n        }\n        const header = document.createElement('div');\n        header.className = 'diff-review-row';\n        const cell = document.createElement('div');\n        cell.className = 'diff-review-cell diff-review-summary';\n        const originalChangedLinesCnt = maxOriginalLine - minOriginalLine + 1;\n        const modifiedChangedLinesCnt = maxModifiedLine - minModifiedLine + 1;\n        cell.appendChild(document.createTextNode(`${diffIndex + 1}/${this._diffs.length}: @@ -${minOriginalLine},${originalChangedLinesCnt} +${minModifiedLine},${modifiedChangedLinesCnt} @@`));\n        header.setAttribute('data-line', String(minModifiedLine));\n        const getAriaLines = (lines) => {\n            if (lines === 0) {\n                return nls.localize('no_lines_changed', \"no lines changed\");\n            }\n            else if (lines === 1) {\n                return nls.localize('one_line_changed', \"1 line changed\");\n            }\n            else {\n                return nls.localize('more_lines_changed', \"{0} lines changed\", lines);\n            }\n        };\n        const originalChangedLinesCntAria = getAriaLines(originalChangedLinesCnt);\n        const modifiedChangedLinesCntAria = getAriaLines(modifiedChangedLinesCnt);\n        header.setAttribute('aria-label', nls.localize({\n            key: 'header',\n            comment: [\n                'This is the ARIA label for a git diff header.',\n                'A git diff header looks like this: @@ -154,12 +159,39 @@.',\n                'That encodes that at original line 154 (which is now line 159), 12 lines were removed/changed with 39 lines.',\n                'Variables 0 and 1 refer to the diff index out of total number of diffs.',\n                'Variables 2 and 4 will be numbers (a line number).',\n                'Variables 3 and 5 will be \"no lines changed\", \"1 line changed\" or \"X lines changed\", localized separately.'\n            ]\n        }, \"Difference {0} of {1}: original line {2}, {3}, modified line {4}, {5}\", (diffIndex + 1), this._diffs.length, minOriginalLine, originalChangedLinesCntAria, minModifiedLine, modifiedChangedLinesCntAria));\n        header.appendChild(cell);\n        // @@ -504,7 +517,7 @@\n        header.setAttribute('role', 'listitem');\n        container.appendChild(header);\n        const lineHeight = modifiedOptions.get(59 /* lineHeight */);\n        let modLine = minModifiedLine;\n        for (let i = 0, len = diffs.length; i < len; i++) {\n            const diffEntry = diffs[i];\n            DiffReview._renderSection(container, diffEntry, modLine, lineHeight, this._width, originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts, this._languageService.languageIdCodec);\n            if (diffEntry.modifiedLineStart !== 0) {\n                modLine = diffEntry.modifiedLineEnd;\n            }\n        }\n        dom.clearNode(this._content.domNode);\n        this._content.domNode.appendChild(container);\n        this.scrollbar.scanDomNode();\n    }\n    static _renderSection(dest, diffEntry, modLine, lineHeight, width, originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts, languageIdCodec) {\n        const type = diffEntry.getType();\n        let rowClassName = 'diff-review-row';\n        let lineNumbersExtraClassName = '';\n        const spacerClassName = 'diff-review-spacer';\n        let spacerIcon = null;\n        switch (type) {\n            case 1 /* Insert */:\n                rowClassName = 'diff-review-row line-insert';\n                lineNumbersExtraClassName = ' char-insert';\n                spacerIcon = diffReviewInsertIcon;\n                break;\n            case 2 /* Delete */:\n                rowClassName = 'diff-review-row line-delete';\n                lineNumbersExtraClassName = ' char-delete';\n                spacerIcon = diffReviewRemoveIcon;\n                break;\n        }\n        const originalLineStart = diffEntry.originalLineStart;\n        const originalLineEnd = diffEntry.originalLineEnd;\n        const modifiedLineStart = diffEntry.modifiedLineStart;\n        const modifiedLineEnd = diffEntry.modifiedLineEnd;\n        const cnt = Math.max(modifiedLineEnd - modifiedLineStart, originalLineEnd - originalLineStart);\n        const originalLayoutInfo = originalOptions.get(131 /* layoutInfo */);\n        const originalLineNumbersWidth = originalLayoutInfo.glyphMarginWidth + originalLayoutInfo.lineNumbersWidth;\n        const modifiedLayoutInfo = modifiedOptions.get(131 /* layoutInfo */);\n        const modifiedLineNumbersWidth = 10 + modifiedLayoutInfo.glyphMarginWidth + modifiedLayoutInfo.lineNumbersWidth;\n        for (let i = 0; i <= cnt; i++) {\n            const originalLine = (originalLineStart === 0 ? 0 : originalLineStart + i);\n            const modifiedLine = (modifiedLineStart === 0 ? 0 : modifiedLineStart + i);\n            const row = document.createElement('div');\n            row.style.minWidth = width + 'px';\n            row.className = rowClassName;\n            row.setAttribute('role', 'listitem');\n            if (modifiedLine !== 0) {\n                modLine = modifiedLine;\n            }\n            row.setAttribute('data-line', String(modLine));\n            const cell = document.createElement('div');\n            cell.className = 'diff-review-cell';\n            cell.style.height = `${lineHeight}px`;\n            row.appendChild(cell);\n            const originalLineNumber = document.createElement('span');\n            originalLineNumber.style.width = (originalLineNumbersWidth + 'px');\n            originalLineNumber.style.minWidth = (originalLineNumbersWidth + 'px');\n            originalLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n            if (originalLine !== 0) {\n                originalLineNumber.appendChild(document.createTextNode(String(originalLine)));\n            }\n            else {\n                originalLineNumber.innerText = '\\u00a0';\n            }\n            cell.appendChild(originalLineNumber);\n            const modifiedLineNumber = document.createElement('span');\n            modifiedLineNumber.style.width = (modifiedLineNumbersWidth + 'px');\n            modifiedLineNumber.style.minWidth = (modifiedLineNumbersWidth + 'px');\n            modifiedLineNumber.style.paddingRight = '10px';\n            modifiedLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n            if (modifiedLine !== 0) {\n                modifiedLineNumber.appendChild(document.createTextNode(String(modifiedLine)));\n            }\n            else {\n                modifiedLineNumber.innerText = '\\u00a0';\n            }\n            cell.appendChild(modifiedLineNumber);\n            const spacer = document.createElement('span');\n            spacer.className = spacerClassName;\n            if (spacerIcon) {\n                const spacerCodicon = document.createElement('span');\n                spacerCodicon.className = ThemeIcon.asClassName(spacerIcon);\n                spacerCodicon.innerText = '\\u00a0\\u00a0';\n                spacer.appendChild(spacerCodicon);\n            }\n            else {\n                spacer.innerText = '\\u00a0\\u00a0';\n            }\n            cell.appendChild(spacer);\n            let lineContent;\n            if (modifiedLine !== 0) {\n                let html = this._renderLine(modifiedModel, modifiedOptions, modifiedModelOpts.tabSize, modifiedLine, languageIdCodec);\n                if (DiffReview._ttPolicy) {\n                    html = DiffReview._ttPolicy.createHTML(html);\n                }\n                cell.insertAdjacentHTML('beforeend', html);\n                lineContent = modifiedModel.getLineContent(modifiedLine);\n            }\n            else {\n                let html = this._renderLine(originalModel, originalOptions, originalModelOpts.tabSize, originalLine, languageIdCodec);\n                if (DiffReview._ttPolicy) {\n                    html = DiffReview._ttPolicy.createHTML(html);\n                }\n                cell.insertAdjacentHTML('beforeend', html);\n                lineContent = originalModel.getLineContent(originalLine);\n            }\n            if (lineContent.length === 0) {\n                lineContent = nls.localize('blankLine', \"blank\");\n            }\n            let ariaLabel = '';\n            switch (type) {\n                case 0 /* Equal */:\n                    if (originalLine === modifiedLine) {\n                        ariaLabel = nls.localize({ key: 'unchangedLine', comment: ['The placeholders are contents of the line and should not be translated.'] }, \"{0} unchanged line {1}\", lineContent, originalLine);\n                    }\n                    else {\n                        ariaLabel = nls.localize('equalLine', \"{0} original line {1} modified line {2}\", lineContent, originalLine, modifiedLine);\n                    }\n                    break;\n                case 1 /* Insert */:\n                    ariaLabel = nls.localize('insertLine', \"+ {0} modified line {1}\", lineContent, modifiedLine);\n                    break;\n                case 2 /* Delete */:\n                    ariaLabel = nls.localize('deleteLine', \"- {0} original line {1}\", lineContent, originalLine);\n                    break;\n            }\n            row.setAttribute('aria-label', ariaLabel);\n            dest.appendChild(row);\n        }\n    }\n    static _renderLine(model, options, tabSize, lineNumber, languageIdCodec) {\n        const lineContent = model.getLineContent(lineNumber);\n        const fontInfo = options.get(44 /* fontInfo */);\n        const lineTokens = LineTokens.createEmpty(lineContent, languageIdCodec);\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, model.mightContainNonBasicASCII());\n        const containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, model.mightContainRTL());\n        const r = renderViewLine(new RenderLineInput((fontInfo.isMonospace && !options.get(29 /* disableMonospaceOptimizations */)), fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, [], tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, options.get(105 /* stopRenderingLineAfter */), options.get(88 /* renderWhitespace */), options.get(83 /* renderControlCharacters */), options.get(45 /* fontLigatures */) !== EditorFontLigatures.OFF, null));\n        return r.html;\n    }\n};\nDiffReview._ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('diffReview', { createHTML: value => value });\nDiffReview = __decorate([\n    __param(1, ILanguageService)\n], DiffReview);\nexport { DiffReview };\n// theming\nregisterThemingParticipant((theme, collector) => {\n    const lineNumbers = theme.getColor(editorLineNumbers);\n    if (lineNumbers) {\n        collector.addRule(`.monaco-diff-editor .diff-review-line-number { color: ${lineNumbers}; }`);\n    }\n    const shadow = theme.getColor(scrollbarShadow);\n    if (shadow) {\n        collector.addRule(`.monaco-diff-editor .diff-review-shadow { box-shadow: ${shadow} 0 -6px 6px -6px inset; }`);\n    }\n});\nclass DiffReviewNext extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.diffReview.next',\n            label: nls.localize('editor.action.diffReview.next', \"Go to Next Difference\"),\n            alias: 'Go to Next Difference',\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n            kbOpts: {\n                kbExpr: null,\n                primary: 65 /* F7 */,\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const diffEditor = findFocusedDiffEditor(accessor);\n        if (diffEditor) {\n            diffEditor.diffReviewNext();\n        }\n    }\n}\nclass DiffReviewPrev extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.diffReview.prev',\n            label: nls.localize('editor.action.diffReview.prev', \"Go to Previous Difference\"),\n            alias: 'Go to Previous Difference',\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n            kbOpts: {\n                kbExpr: null,\n                primary: 1024 /* Shift */ | 65 /* F7 */,\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const diffEditor = findFocusedDiffEditor(accessor);\n        if (diffEditor) {\n            diffEditor.diffReviewPrev();\n        }\n    }\n}\nfunction findFocusedDiffEditor(accessor) {\n    const codeEditorService = accessor.get(ICodeEditorService);\n    const diffEditors = codeEditorService.listDiffEditors();\n    const activeCodeEditor = codeEditorService.getActiveCodeEditor();\n    if (!activeCodeEditor) {\n        return null;\n    }\n    for (let i = 0, len = diffEditors.length; i < len; i++) {\n        const diffEditor = diffEditors[i];\n        if (diffEditor.getModifiedEditor().getId() === activeCodeEditor.getId() || diffEditor.getOriginalEditor().getId() === activeCodeEditor.getId()) {\n            return diffEditor;\n        }\n    }\n    return null;\n}\nregisterEditorAction(DiffReviewNext);\nregisterEditorAction(DiffReviewPrev);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar _a;\nimport './media/diffEditor.css';\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { Sash } from '../../../base/browser/ui/sash/sash.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { StableEditorScrollState } from '../stableEditorScroll.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { CodeEditorWidget } from './codeEditorWidget.js';\nimport { DiffReview } from './diffReview.js';\nimport { EditorOptions, EditorFontLigatures, stringSet as validateStringSetOption, boolean as validateBooleanOption, clampedInt } from '../../common/config/editorOptions.js';\nimport { Range } from '../../common/core/range.js';\nimport { createStringBuilder } from '../../common/core/stringBuilder.js';\nimport * as editorCommon from '../../common/editorCommon.js';\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\nimport { IEditorWorkerService } from '../../common/services/editorWorker.js';\nimport { OverviewRulerZone } from '../../common/viewModel/overviewZoneManager.js';\nimport { LineDecoration } from '../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\nimport { InlineDecoration, ViewLineRenderingData } from '../../common/viewModel.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { defaultInsertColor, defaultRemoveColor, diffBorder, diffInserted, diffInsertedOutline, diffRemoved, diffRemovedOutline, scrollbarShadow, scrollbarSliderBackground, scrollbarSliderHoverBackground, scrollbarSliderActiveBackground, diffDiagonalFill, diffInsertedLineGutter, diffRemovedLineGutter, diffInsertedLine, diffRemovedLine, diffOverviewRulerInserted, diffOverviewRulerRemoved } from '../../../platform/theme/common/colorRegistry.js';\nimport { IThemeService, getThemeTypeSelector, registerThemingParticipant, ThemeIcon } from '../../../platform/theme/common/themeService.js';\nimport { IContextMenuService } from '../../../platform/contextview/browser/contextView.js';\nimport { InlineDiffMargin } from './inlineDiffMargin.js';\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\nimport { EditorExtensionsRegistry } from '../editorExtensions.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\nimport { ElementSizeObserver } from '../config/elementSizeObserver.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../base/browser/ui/mouseCursor/mouseCursor.js';\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\nclass VisualEditorState {\n    constructor(_contextMenuService, _clipboardService) {\n        this._contextMenuService = _contextMenuService;\n        this._clipboardService = _clipboardService;\n        this._zones = [];\n        this._inlineDiffMargins = [];\n        this._zonesMap = {};\n        this._decorations = [];\n    }\n    getForeignViewZones(allViewZones) {\n        return allViewZones.filter((z) => !this._zonesMap[String(z.id)]);\n    }\n    clean(editor) {\n        // (1) View zones\n        if (this._zones.length > 0) {\n            editor.changeViewZones((viewChangeAccessor) => {\n                for (const zoneId of this._zones) {\n                    viewChangeAccessor.removeZone(zoneId);\n                }\n            });\n        }\n        this._zones = [];\n        this._zonesMap = {};\n        // (2) Model decorations\n        this._decorations = editor.deltaDecorations(this._decorations, []);\n    }\n    apply(editor, overviewRuler, newDecorations, restoreScrollState) {\n        const scrollState = restoreScrollState ? StableEditorScrollState.capture(editor) : null;\n        // view zones\n        editor.changeViewZones((viewChangeAccessor) => {\n            var _a;\n            for (const zoneId of this._zones) {\n                viewChangeAccessor.removeZone(zoneId);\n            }\n            for (const inlineDiffMargin of this._inlineDiffMargins) {\n                inlineDiffMargin.dispose();\n            }\n            this._zones = [];\n            this._zonesMap = {};\n            this._inlineDiffMargins = [];\n            for (let i = 0, length = newDecorations.zones.length; i < length; i++) {\n                const viewZone = newDecorations.zones[i];\n                viewZone.suppressMouseDown = true;\n                const zoneId = viewChangeAccessor.addZone(viewZone);\n                this._zones.push(zoneId);\n                this._zonesMap[String(zoneId)] = true;\n                if (newDecorations.zones[i].diff && viewZone.marginDomNode) {\n                    viewZone.suppressMouseDown = false;\n                    if (((_a = newDecorations.zones[i].diff) === null || _a === void 0 ? void 0 : _a.originalModel.getValueLength()) !== 0) {\n                        // do not contribute diff margin actions for newly created files\n                        this._inlineDiffMargins.push(new InlineDiffMargin(zoneId, viewZone.marginDomNode, editor, newDecorations.zones[i].diff, this._contextMenuService, this._clipboardService));\n                    }\n                }\n            }\n        });\n        if (scrollState) {\n            scrollState.restore(editor);\n        }\n        // decorations\n        this._decorations = editor.deltaDecorations(this._decorations, newDecorations.decorations);\n        // overview ruler\n        if (overviewRuler) {\n            overviewRuler.setZones(newDecorations.overviewZones);\n        }\n    }\n}\nlet DIFF_EDITOR_ID = 0;\nconst diffInsertIcon = registerIcon('diff-insert', Codicon.add, nls.localize('diffInsertIcon', 'Line decoration for inserts in the diff editor.'));\nconst diffRemoveIcon = registerIcon('diff-remove', Codicon.remove, nls.localize('diffRemoveIcon', 'Line decoration for removals in the diff editor.'));\nconst ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('diffEditorWidget', { createHTML: value => value });\nlet DiffEditorWidget = class DiffEditorWidget extends Disposable {\n    constructor(domElement, options, codeEditorWidgetOptions, clipboardService, editorWorkerService, contextKeyService, instantiationService, codeEditorService, themeService, notificationService, contextMenuService, _editorProgressService) {\n        super();\n        this._editorProgressService = _editorProgressService;\n        this._onDidDispose = this._register(new Emitter());\n        this.onDidDispose = this._onDidDispose.event;\n        this._onDidUpdateDiff = this._register(new Emitter());\n        this.onDidUpdateDiff = this._onDidUpdateDiff.event;\n        this._onDidContentSizeChange = this._register(new Emitter());\n        this._lastOriginalWarning = null;\n        this._lastModifiedWarning = null;\n        this._editorWorkerService = editorWorkerService;\n        this._codeEditorService = codeEditorService;\n        this._contextKeyService = this._register(contextKeyService.createScoped(domElement));\n        this._instantiationService = instantiationService.createChild(new ServiceCollection([IContextKeyService, this._contextKeyService]));\n        this._contextKeyService.createKey('isInDiffEditor', true);\n        this._themeService = themeService;\n        this._notificationService = notificationService;\n        this._id = (++DIFF_EDITOR_ID);\n        this._state = 0 /* Idle */;\n        this._updatingDiffProgress = null;\n        this._domElement = domElement;\n        options = options || {};\n        this._options = validateDiffEditorOptions(options, {\n            enableSplitViewResizing: true,\n            renderSideBySide: true,\n            maxComputationTime: 5000,\n            maxFileSize: 50,\n            ignoreTrimWhitespace: true,\n            renderIndicators: true,\n            originalEditable: false,\n            diffCodeLens: false,\n            renderOverviewRuler: true,\n            diffWordWrap: 'inherit'\n        });\n        if (typeof options.isInEmbeddedEditor !== 'undefined') {\n            this._contextKeyService.createKey('isInEmbeddedDiffEditor', options.isInEmbeddedEditor);\n        }\n        else {\n            this._contextKeyService.createKey('isInEmbeddedDiffEditor', false);\n        }\n        this._updateDecorationsRunner = this._register(new RunOnceScheduler(() => this._updateDecorations(), 0));\n        this._containerDomElement = document.createElement('div');\n        this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._options.renderSideBySide);\n        this._containerDomElement.style.position = 'relative';\n        this._containerDomElement.style.height = '100%';\n        this._domElement.appendChild(this._containerDomElement);\n        this._overviewViewportDomElement = createFastDomNode(document.createElement('div'));\n        this._overviewViewportDomElement.setClassName('diffViewport');\n        this._overviewViewportDomElement.setPosition('absolute');\n        this._overviewDomElement = document.createElement('div');\n        this._overviewDomElement.className = 'diffOverview';\n        this._overviewDomElement.style.position = 'absolute';\n        this._overviewDomElement.appendChild(this._overviewViewportDomElement.domNode);\n        this._register(dom.addStandardDisposableListener(this._overviewDomElement, 'mousedown', (e) => {\n            this._modifiedEditor.delegateVerticalScrollbarMouseDown(e);\n        }));\n        if (this._options.renderOverviewRuler) {\n            this._containerDomElement.appendChild(this._overviewDomElement);\n        }\n        // Create left side\n        this._originalDomNode = document.createElement('div');\n        this._originalDomNode.className = 'editor original';\n        this._originalDomNode.style.position = 'absolute';\n        this._originalDomNode.style.height = '100%';\n        this._containerDomElement.appendChild(this._originalDomNode);\n        // Create right side\n        this._modifiedDomNode = document.createElement('div');\n        this._modifiedDomNode.className = 'editor modified';\n        this._modifiedDomNode.style.position = 'absolute';\n        this._modifiedDomNode.style.height = '100%';\n        this._containerDomElement.appendChild(this._modifiedDomNode);\n        this._beginUpdateDecorationsTimeout = -1;\n        this._currentlyChangingViewZones = false;\n        this._diffComputationToken = 0;\n        this._originalEditorState = new VisualEditorState(contextMenuService, clipboardService);\n        this._modifiedEditorState = new VisualEditorState(contextMenuService, clipboardService);\n        this._isVisible = true;\n        this._isHandlingScrollEvent = false;\n        this._elementSizeObserver = this._register(new ElementSizeObserver(this._containerDomElement, options.dimension));\n        this._register(this._elementSizeObserver.onDidChange(() => this._onDidContainerSizeChanged()));\n        if (options.automaticLayout) {\n            this._elementSizeObserver.startObserving();\n        }\n        this._diffComputationResult = null;\n        this._originalEditor = this._createLeftHandSideEditor(options, codeEditorWidgetOptions.originalEditor || {});\n        this._modifiedEditor = this._createRightHandSideEditor(options, codeEditorWidgetOptions.modifiedEditor || {});\n        this._originalOverviewRuler = null;\n        this._modifiedOverviewRuler = null;\n        this._reviewPane = instantiationService.createInstance(DiffReview, this);\n        this._containerDomElement.appendChild(this._reviewPane.domNode.domNode);\n        this._containerDomElement.appendChild(this._reviewPane.shadow.domNode);\n        this._containerDomElement.appendChild(this._reviewPane.actionBarContainer.domNode);\n        if (this._options.renderSideBySide) {\n            this._setStrategy(new DiffEditorWidgetSideBySide(this._createDataSource(), this._options.enableSplitViewResizing));\n        }\n        else {\n            this._setStrategy(new DiffEditorWidgetInline(this._createDataSource(), this._options.enableSplitViewResizing));\n        }\n        this._register(themeService.onDidColorThemeChange(t => {\n            if (this._strategy && this._strategy.applyColors(t)) {\n                this._updateDecorationsRunner.schedule();\n            }\n            this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._options.renderSideBySide);\n        }));\n        const contributions = EditorExtensionsRegistry.getDiffEditorContributions();\n        for (const desc of contributions) {\n            try {\n                this._register(instantiationService.createInstance(desc.ctor, this));\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n        }\n        this._codeEditorService.addDiffEditor(this);\n    }\n    _setState(newState) {\n        if (this._state === newState) {\n            return;\n        }\n        this._state = newState;\n        if (this._updatingDiffProgress) {\n            this._updatingDiffProgress.done();\n            this._updatingDiffProgress = null;\n        }\n        if (this._state === 1 /* ComputingDiff */) {\n            this._updatingDiffProgress = this._editorProgressService.show(true, 1000);\n        }\n    }\n    diffReviewNext() {\n        this._reviewPane.next();\n    }\n    diffReviewPrev() {\n        this._reviewPane.prev();\n    }\n    static _getClassName(theme, renderSideBySide) {\n        let result = 'monaco-diff-editor monaco-editor-background ';\n        if (renderSideBySide) {\n            result += 'side-by-side ';\n        }\n        result += getThemeTypeSelector(theme.type);\n        return result;\n    }\n    _recreateOverviewRulers() {\n        if (!this._options.renderOverviewRuler) {\n            return;\n        }\n        if (this._originalOverviewRuler) {\n            this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode());\n            this._originalOverviewRuler.dispose();\n        }\n        if (this._originalEditor.hasModel()) {\n            this._originalOverviewRuler = this._originalEditor.createOverviewRuler('original diffOverviewRuler');\n            this._overviewDomElement.appendChild(this._originalOverviewRuler.getDomNode());\n        }\n        if (this._modifiedOverviewRuler) {\n            this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode());\n            this._modifiedOverviewRuler.dispose();\n        }\n        if (this._modifiedEditor.hasModel()) {\n            this._modifiedOverviewRuler = this._modifiedEditor.createOverviewRuler('modified diffOverviewRuler');\n            this._overviewDomElement.appendChild(this._modifiedOverviewRuler.getDomNode());\n        }\n        this._layoutOverviewRulers();\n    }\n    _createLeftHandSideEditor(options, codeEditorWidgetOptions) {\n        const editor = this._createInnerEditor(this._instantiationService, this._originalDomNode, this._adjustOptionsForLeftHandSide(options), codeEditorWidgetOptions);\n        this._register(editor.onDidScrollChange((e) => {\n            if (this._isHandlingScrollEvent) {\n                return;\n            }\n            if (!e.scrollTopChanged && !e.scrollLeftChanged && !e.scrollHeightChanged) {\n                return;\n            }\n            this._isHandlingScrollEvent = true;\n            this._modifiedEditor.setScrollPosition({\n                scrollLeft: e.scrollLeft,\n                scrollTop: e.scrollTop\n            });\n            this._isHandlingScrollEvent = false;\n            this._layoutOverviewViewport();\n        }));\n        this._register(editor.onDidChangeViewZones(() => {\n            this._onViewZonesChanged();\n        }));\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (!editor.getModel()) {\n                return;\n            }\n            if (e.hasChanged(44 /* fontInfo */)) {\n                this._updateDecorationsRunner.schedule();\n            }\n            if (e.hasChanged(132 /* wrappingInfo */)) {\n                this._updateDecorationsRunner.cancel();\n                this._updateDecorations();\n            }\n        }));\n        this._register(editor.onDidChangeHiddenAreas(() => {\n            this._updateDecorationsRunner.cancel();\n            this._updateDecorations();\n        }));\n        this._register(editor.onDidChangeModelContent(() => {\n            if (this._isVisible) {\n                this._beginUpdateDecorationsSoon();\n            }\n        }));\n        const isInDiffLeftEditorKey = this._contextKeyService.createKey('isInDiffLeftEditor', editor.hasWidgetFocus());\n        this._register(editor.onDidFocusEditorWidget(() => isInDiffLeftEditorKey.set(true)));\n        this._register(editor.onDidBlurEditorWidget(() => isInDiffLeftEditorKey.set(false)));\n        this._register(editor.onDidContentSizeChange(e => {\n            const width = this._originalEditor.getContentWidth() + this._modifiedEditor.getContentWidth() + DiffEditorWidget.ONE_OVERVIEW_WIDTH;\n            const height = Math.max(this._modifiedEditor.getContentHeight(), this._originalEditor.getContentHeight());\n            this._onDidContentSizeChange.fire({\n                contentHeight: height,\n                contentWidth: width,\n                contentHeightChanged: e.contentHeightChanged,\n                contentWidthChanged: e.contentWidthChanged\n            });\n        }));\n        return editor;\n    }\n    _createRightHandSideEditor(options, codeEditorWidgetOptions) {\n        const editor = this._createInnerEditor(this._instantiationService, this._modifiedDomNode, this._adjustOptionsForRightHandSide(options), codeEditorWidgetOptions);\n        this._register(editor.onDidScrollChange((e) => {\n            if (this._isHandlingScrollEvent) {\n                return;\n            }\n            if (!e.scrollTopChanged && !e.scrollLeftChanged && !e.scrollHeightChanged) {\n                return;\n            }\n            this._isHandlingScrollEvent = true;\n            this._originalEditor.setScrollPosition({\n                scrollLeft: e.scrollLeft,\n                scrollTop: e.scrollTop\n            });\n            this._isHandlingScrollEvent = false;\n            this._layoutOverviewViewport();\n        }));\n        this._register(editor.onDidChangeViewZones(() => {\n            this._onViewZonesChanged();\n        }));\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (!editor.getModel()) {\n                return;\n            }\n            if (e.hasChanged(44 /* fontInfo */)) {\n                this._updateDecorationsRunner.schedule();\n            }\n            if (e.hasChanged(132 /* wrappingInfo */)) {\n                this._updateDecorationsRunner.cancel();\n                this._updateDecorations();\n            }\n        }));\n        this._register(editor.onDidChangeHiddenAreas(() => {\n            this._updateDecorationsRunner.cancel();\n            this._updateDecorations();\n        }));\n        this._register(editor.onDidChangeModelContent(() => {\n            if (this._isVisible) {\n                this._beginUpdateDecorationsSoon();\n            }\n        }));\n        this._register(editor.onDidChangeModelOptions((e) => {\n            if (e.tabSize) {\n                this._updateDecorationsRunner.schedule();\n            }\n        }));\n        const isInDiffRightEditorKey = this._contextKeyService.createKey('isInDiffRightEditor', editor.hasWidgetFocus());\n        this._register(editor.onDidFocusEditorWidget(() => isInDiffRightEditorKey.set(true)));\n        this._register(editor.onDidBlurEditorWidget(() => isInDiffRightEditorKey.set(false)));\n        this._register(editor.onDidContentSizeChange(e => {\n            const width = this._originalEditor.getContentWidth() + this._modifiedEditor.getContentWidth() + DiffEditorWidget.ONE_OVERVIEW_WIDTH;\n            const height = Math.max(this._modifiedEditor.getContentHeight(), this._originalEditor.getContentHeight());\n            this._onDidContentSizeChange.fire({\n                contentHeight: height,\n                contentWidth: width,\n                contentHeightChanged: e.contentHeightChanged,\n                contentWidthChanged: e.contentWidthChanged\n            });\n        }));\n        return editor;\n    }\n    _createInnerEditor(instantiationService, container, options, editorWidgetOptions) {\n        return instantiationService.createInstance(CodeEditorWidget, container, options, editorWidgetOptions);\n    }\n    dispose() {\n        this._codeEditorService.removeDiffEditor(this);\n        if (this._beginUpdateDecorationsTimeout !== -1) {\n            window.clearTimeout(this._beginUpdateDecorationsTimeout);\n            this._beginUpdateDecorationsTimeout = -1;\n        }\n        this._cleanViewZonesAndDecorations();\n        if (this._originalOverviewRuler) {\n            this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode());\n            this._originalOverviewRuler.dispose();\n        }\n        if (this._modifiedOverviewRuler) {\n            this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode());\n            this._modifiedOverviewRuler.dispose();\n        }\n        this._overviewDomElement.removeChild(this._overviewViewportDomElement.domNode);\n        if (this._options.renderOverviewRuler) {\n            this._containerDomElement.removeChild(this._overviewDomElement);\n        }\n        this._containerDomElement.removeChild(this._originalDomNode);\n        this._originalEditor.dispose();\n        this._containerDomElement.removeChild(this._modifiedDomNode);\n        this._modifiedEditor.dispose();\n        this._strategy.dispose();\n        this._containerDomElement.removeChild(this._reviewPane.domNode.domNode);\n        this._containerDomElement.removeChild(this._reviewPane.shadow.domNode);\n        this._containerDomElement.removeChild(this._reviewPane.actionBarContainer.domNode);\n        this._reviewPane.dispose();\n        this._domElement.removeChild(this._containerDomElement);\n        this._onDidDispose.fire();\n        super.dispose();\n    }\n    //------------ begin IDiffEditor methods\n    getId() {\n        return this.getEditorType() + ':' + this._id;\n    }\n    getEditorType() {\n        return editorCommon.EditorType.IDiffEditor;\n    }\n    getLineChanges() {\n        if (!this._diffComputationResult) {\n            return null;\n        }\n        return this._diffComputationResult.changes;\n    }\n    getOriginalEditor() {\n        return this._originalEditor;\n    }\n    getModifiedEditor() {\n        return this._modifiedEditor;\n    }\n    updateOptions(_newOptions) {\n        const newOptions = validateDiffEditorOptions(_newOptions, this._options);\n        const changed = changedDiffEditorOptions(this._options, newOptions);\n        this._options = newOptions;\n        const beginUpdateDecorations = (changed.ignoreTrimWhitespace || changed.renderIndicators);\n        const beginUpdateDecorationsSoon = (this._isVisible && (changed.maxComputationTime || changed.maxFileSize));\n        if (beginUpdateDecorations) {\n            this._beginUpdateDecorations();\n        }\n        else if (beginUpdateDecorationsSoon) {\n            this._beginUpdateDecorationsSoon();\n        }\n        this._modifiedEditor.updateOptions(this._adjustOptionsForRightHandSide(_newOptions));\n        this._originalEditor.updateOptions(this._adjustOptionsForLeftHandSide(_newOptions));\n        // enableSplitViewResizing\n        this._strategy.setEnableSplitViewResizing(this._options.enableSplitViewResizing);\n        // renderSideBySide\n        if (changed.renderSideBySide) {\n            if (this._options.renderSideBySide) {\n                this._setStrategy(new DiffEditorWidgetSideBySide(this._createDataSource(), this._options.enableSplitViewResizing));\n            }\n            else {\n                this._setStrategy(new DiffEditorWidgetInline(this._createDataSource(), this._options.enableSplitViewResizing));\n            }\n            // Update class name\n            this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._options.renderSideBySide);\n        }\n        // renderOverviewRuler\n        if (changed.renderOverviewRuler) {\n            if (this._options.renderOverviewRuler) {\n                this._containerDomElement.appendChild(this._overviewDomElement);\n            }\n            else {\n                this._containerDomElement.removeChild(this._overviewDomElement);\n            }\n        }\n    }\n    getModel() {\n        return {\n            original: this._originalEditor.getModel(),\n            modified: this._modifiedEditor.getModel()\n        };\n    }\n    setModel(model) {\n        // Guard us against partial null model\n        if (model && (!model.original || !model.modified)) {\n            throw new Error(!model.original ? 'DiffEditorWidget.setModel: Original model is null' : 'DiffEditorWidget.setModel: Modified model is null');\n        }\n        // Remove all view zones & decorations\n        this._cleanViewZonesAndDecorations();\n        // Update code editor models\n        this._originalEditor.setModel(model ? model.original : null);\n        this._modifiedEditor.setModel(model ? model.modified : null);\n        this._updateDecorationsRunner.cancel();\n        // this.originalEditor.onDidChangeModelOptions\n        if (model) {\n            this._originalEditor.setScrollTop(0);\n            this._modifiedEditor.setScrollTop(0);\n        }\n        // Disable any diff computations that will come in\n        this._diffComputationResult = null;\n        this._diffComputationToken++;\n        this._setState(0 /* Idle */);\n        if (model) {\n            this._recreateOverviewRulers();\n            // Begin comparing\n            this._beginUpdateDecorations();\n        }\n        this._layoutOverviewViewport();\n    }\n    getContainerDomNode() {\n        return this._domElement;\n    }\n    getVisibleColumnFromPosition(position) {\n        return this._modifiedEditor.getVisibleColumnFromPosition(position);\n    }\n    getPosition() {\n        return this._modifiedEditor.getPosition();\n    }\n    setPosition(position, source = 'api') {\n        this._modifiedEditor.setPosition(position, source);\n    }\n    revealLine(lineNumber, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealLine(lineNumber, scrollType);\n    }\n    revealLineInCenter(lineNumber, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealLineInCenter(lineNumber, scrollType);\n    }\n    revealLineInCenterIfOutsideViewport(lineNumber, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealLineInCenterIfOutsideViewport(lineNumber, scrollType);\n    }\n    revealLineNearTop(lineNumber, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealLineNearTop(lineNumber, scrollType);\n    }\n    revealPosition(position, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealPosition(position, scrollType);\n    }\n    revealPositionInCenter(position, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealPositionInCenter(position, scrollType);\n    }\n    revealPositionInCenterIfOutsideViewport(position, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealPositionInCenterIfOutsideViewport(position, scrollType);\n    }\n    revealPositionNearTop(position, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealPositionNearTop(position, scrollType);\n    }\n    getSelection() {\n        return this._modifiedEditor.getSelection();\n    }\n    getSelections() {\n        return this._modifiedEditor.getSelections();\n    }\n    setSelection(something, source = 'api') {\n        this._modifiedEditor.setSelection(something, source);\n    }\n    setSelections(ranges, source = 'api') {\n        this._modifiedEditor.setSelections(ranges, source);\n    }\n    revealLines(startLineNumber, endLineNumber, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealLines(startLineNumber, endLineNumber, scrollType);\n    }\n    revealLinesInCenter(startLineNumber, endLineNumber, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealLinesInCenter(startLineNumber, endLineNumber, scrollType);\n    }\n    revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType);\n    }\n    revealLinesNearTop(startLineNumber, endLineNumber, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealLinesNearTop(startLineNumber, endLineNumber, scrollType);\n    }\n    revealRange(range, scrollType = 0 /* Smooth */, revealVerticalInCenter = false, revealHorizontal = true) {\n        this._modifiedEditor.revealRange(range, scrollType, revealVerticalInCenter, revealHorizontal);\n    }\n    revealRangeInCenter(range, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealRangeInCenter(range, scrollType);\n    }\n    revealRangeInCenterIfOutsideViewport(range, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealRangeInCenterIfOutsideViewport(range, scrollType);\n    }\n    revealRangeNearTop(range, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealRangeNearTop(range, scrollType);\n    }\n    revealRangeNearTopIfOutsideViewport(range, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealRangeNearTopIfOutsideViewport(range, scrollType);\n    }\n    revealRangeAtTop(range, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealRangeAtTop(range, scrollType);\n    }\n    getSupportedActions() {\n        return this._modifiedEditor.getSupportedActions();\n    }\n    saveViewState() {\n        const originalViewState = this._originalEditor.saveViewState();\n        const modifiedViewState = this._modifiedEditor.saveViewState();\n        return {\n            original: originalViewState,\n            modified: modifiedViewState\n        };\n    }\n    restoreViewState(s) {\n        if (s && s.original && s.modified) {\n            const diffEditorState = s;\n            this._originalEditor.restoreViewState(diffEditorState.original);\n            this._modifiedEditor.restoreViewState(diffEditorState.modified);\n        }\n    }\n    layout(dimension) {\n        this._elementSizeObserver.observe(dimension);\n    }\n    focus() {\n        this._modifiedEditor.focus();\n    }\n    hasTextFocus() {\n        return this._originalEditor.hasTextFocus() || this._modifiedEditor.hasTextFocus();\n    }\n    trigger(source, handlerId, payload) {\n        this._modifiedEditor.trigger(source, handlerId, payload);\n    }\n    changeDecorations(callback) {\n        return this._modifiedEditor.changeDecorations(callback);\n    }\n    //------------ end IDiffEditor methods\n    //------------ begin layouting methods\n    _onDidContainerSizeChanged() {\n        this._doLayout();\n    }\n    _getReviewHeight() {\n        return this._reviewPane.isVisible() ? this._elementSizeObserver.getHeight() : 0;\n    }\n    _layoutOverviewRulers() {\n        if (!this._options.renderOverviewRuler) {\n            return;\n        }\n        if (!this._originalOverviewRuler || !this._modifiedOverviewRuler) {\n            return;\n        }\n        const height = this._elementSizeObserver.getHeight();\n        const reviewHeight = this._getReviewHeight();\n        const freeSpace = DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH - 2 * DiffEditorWidget.ONE_OVERVIEW_WIDTH;\n        const layoutInfo = this._modifiedEditor.getLayoutInfo();\n        if (layoutInfo) {\n            this._originalOverviewRuler.setLayout({\n                top: 0,\n                width: DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n                right: freeSpace + DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n                height: (height - reviewHeight)\n            });\n            this._modifiedOverviewRuler.setLayout({\n                top: 0,\n                right: 0,\n                width: DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n                height: (height - reviewHeight)\n            });\n        }\n    }\n    //------------ end layouting methods\n    _onViewZonesChanged() {\n        if (this._currentlyChangingViewZones) {\n            return;\n        }\n        this._updateDecorationsRunner.schedule();\n    }\n    _beginUpdateDecorationsSoon() {\n        // Clear previous timeout if necessary\n        if (this._beginUpdateDecorationsTimeout !== -1) {\n            window.clearTimeout(this._beginUpdateDecorationsTimeout);\n            this._beginUpdateDecorationsTimeout = -1;\n        }\n        this._beginUpdateDecorationsTimeout = window.setTimeout(() => this._beginUpdateDecorations(), DiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY);\n    }\n    static _equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        if (!a || !b) {\n            return false;\n        }\n        return (a.toString() === b.toString());\n    }\n    _beginUpdateDecorations() {\n        this._beginUpdateDecorationsTimeout = -1;\n        const currentOriginalModel = this._originalEditor.getModel();\n        const currentModifiedModel = this._modifiedEditor.getModel();\n        if (!currentOriginalModel || !currentModifiedModel) {\n            return;\n        }\n        // Prevent old diff requests to come if a new request has been initiated\n        // The best method would be to call cancel on the Promise, but this is not\n        // yet supported, so using tokens for now.\n        this._diffComputationToken++;\n        const currentToken = this._diffComputationToken;\n        const diffLimit = this._options.maxFileSize * 1024 * 1024; // MB\n        const canSyncModelForDiff = (model) => {\n            const bufferTextLength = model.getValueLength();\n            return (diffLimit === 0 || bufferTextLength <= diffLimit);\n        };\n        if (!canSyncModelForDiff(currentOriginalModel) || !canSyncModelForDiff(currentModifiedModel)) {\n            if (!DiffEditorWidget._equals(currentOriginalModel.uri, this._lastOriginalWarning)\n                || !DiffEditorWidget._equals(currentModifiedModel.uri, this._lastModifiedWarning)) {\n                this._lastOriginalWarning = currentOriginalModel.uri;\n                this._lastModifiedWarning = currentModifiedModel.uri;\n                this._notificationService.warn(nls.localize(\"diff.tooLarge\", \"Cannot compare files because one file is too large.\"));\n            }\n            return;\n        }\n        this._setState(1 /* ComputingDiff */);\n        this._editorWorkerService.computeDiff(currentOriginalModel.uri, currentModifiedModel.uri, this._options.ignoreTrimWhitespace, this._options.maxComputationTime).then((result) => {\n            if (currentToken === this._diffComputationToken\n                && currentOriginalModel === this._originalEditor.getModel()\n                && currentModifiedModel === this._modifiedEditor.getModel()) {\n                this._setState(2 /* DiffComputed */);\n                this._diffComputationResult = result;\n                this._updateDecorationsRunner.schedule();\n                this._onDidUpdateDiff.fire();\n            }\n        }, (error) => {\n            if (currentToken === this._diffComputationToken\n                && currentOriginalModel === this._originalEditor.getModel()\n                && currentModifiedModel === this._modifiedEditor.getModel()) {\n                this._setState(2 /* DiffComputed */);\n                this._diffComputationResult = null;\n                this._updateDecorationsRunner.schedule();\n            }\n        });\n    }\n    _cleanViewZonesAndDecorations() {\n        this._originalEditorState.clean(this._originalEditor);\n        this._modifiedEditorState.clean(this._modifiedEditor);\n    }\n    _updateDecorations() {\n        if (!this._originalEditor.getModel() || !this._modifiedEditor.getModel()) {\n            return;\n        }\n        const lineChanges = (this._diffComputationResult ? this._diffComputationResult.changes : []);\n        const foreignOriginal = this._originalEditorState.getForeignViewZones(this._originalEditor.getWhitespaces());\n        const foreignModified = this._modifiedEditorState.getForeignViewZones(this._modifiedEditor.getWhitespaces());\n        const diffDecorations = this._strategy.getEditorsDiffDecorations(lineChanges, this._options.ignoreTrimWhitespace, this._options.renderIndicators, foreignOriginal, foreignModified);\n        try {\n            this._currentlyChangingViewZones = true;\n            this._originalEditorState.apply(this._originalEditor, this._originalOverviewRuler, diffDecorations.original, false);\n            this._modifiedEditorState.apply(this._modifiedEditor, this._modifiedOverviewRuler, diffDecorations.modified, true);\n        }\n        finally {\n            this._currentlyChangingViewZones = false;\n        }\n    }\n    _adjustOptionsForSubEditor(options) {\n        const clonedOptions = Object.assign({}, options);\n        clonedOptions.inDiffEditor = true;\n        clonedOptions.automaticLayout = false;\n        // Clone scrollbar options before changing them\n        clonedOptions.scrollbar = Object.assign({}, (clonedOptions.scrollbar || {}));\n        clonedOptions.scrollbar.vertical = 'visible';\n        clonedOptions.folding = false;\n        clonedOptions.codeLens = this._options.diffCodeLens;\n        clonedOptions.fixedOverflowWidgets = true;\n        // clonedOptions.lineDecorationsWidth = '2ch';\n        // Clone minimap options before changing them\n        clonedOptions.minimap = Object.assign({}, (clonedOptions.minimap || {}));\n        clonedOptions.minimap.enabled = false;\n        return clonedOptions;\n    }\n    _adjustOptionsForLeftHandSide(options) {\n        const result = this._adjustOptionsForSubEditor(options);\n        if (!this._options.renderSideBySide) {\n            // never wrap hidden editor\n            result.wordWrapOverride1 = 'off';\n            result.wordWrapOverride2 = 'off';\n        }\n        else {\n            result.wordWrapOverride1 = this._options.diffWordWrap;\n        }\n        if (options.originalAriaLabel) {\n            result.ariaLabel = options.originalAriaLabel;\n        }\n        result.readOnly = !this._options.originalEditable;\n        result.extraEditorClassName = 'original-in-monaco-diff-editor';\n        return Object.assign(Object.assign({}, result), { dimension: {\n                height: 0,\n                width: 0\n            } });\n    }\n    _adjustOptionsForRightHandSide(options) {\n        const result = this._adjustOptionsForSubEditor(options);\n        if (options.modifiedAriaLabel) {\n            result.ariaLabel = options.modifiedAriaLabel;\n        }\n        result.wordWrapOverride1 = this._options.diffWordWrap;\n        result.revealHorizontalRightPadding = EditorOptions.revealHorizontalRightPadding.defaultValue + DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH;\n        result.scrollbar.verticalHasArrows = false;\n        result.extraEditorClassName = 'modified-in-monaco-diff-editor';\n        return Object.assign(Object.assign({}, result), { dimension: {\n                height: 0,\n                width: 0\n            } });\n    }\n    doLayout() {\n        this._elementSizeObserver.observe();\n        this._doLayout();\n    }\n    _doLayout() {\n        const width = this._elementSizeObserver.getWidth();\n        const height = this._elementSizeObserver.getHeight();\n        const reviewHeight = this._getReviewHeight();\n        const splitPoint = this._strategy.layout();\n        this._originalDomNode.style.width = splitPoint + 'px';\n        this._originalDomNode.style.left = '0px';\n        this._modifiedDomNode.style.width = (width - splitPoint) + 'px';\n        this._modifiedDomNode.style.left = splitPoint + 'px';\n        this._overviewDomElement.style.top = '0px';\n        this._overviewDomElement.style.height = (height - reviewHeight) + 'px';\n        this._overviewDomElement.style.width = DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH + 'px';\n        this._overviewDomElement.style.left = (width - DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH) + 'px';\n        this._overviewViewportDomElement.setWidth(DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH);\n        this._overviewViewportDomElement.setHeight(30);\n        this._originalEditor.layout({ width: splitPoint, height: (height - reviewHeight) });\n        this._modifiedEditor.layout({ width: width - splitPoint - (this._options.renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0), height: (height - reviewHeight) });\n        if (this._originalOverviewRuler || this._modifiedOverviewRuler) {\n            this._layoutOverviewRulers();\n        }\n        this._reviewPane.layout(height - reviewHeight, width, reviewHeight);\n        this._layoutOverviewViewport();\n    }\n    _layoutOverviewViewport() {\n        const layout = this._computeOverviewViewport();\n        if (!layout) {\n            this._overviewViewportDomElement.setTop(0);\n            this._overviewViewportDomElement.setHeight(0);\n        }\n        else {\n            this._overviewViewportDomElement.setTop(layout.top);\n            this._overviewViewportDomElement.setHeight(layout.height);\n        }\n    }\n    _computeOverviewViewport() {\n        const layoutInfo = this._modifiedEditor.getLayoutInfo();\n        if (!layoutInfo) {\n            return null;\n        }\n        const scrollTop = this._modifiedEditor.getScrollTop();\n        const scrollHeight = this._modifiedEditor.getScrollHeight();\n        const computedAvailableSize = Math.max(0, layoutInfo.height);\n        const computedRepresentableSize = Math.max(0, computedAvailableSize - 2 * 0);\n        const computedRatio = scrollHeight > 0 ? (computedRepresentableSize / scrollHeight) : 0;\n        const computedSliderSize = Math.max(0, Math.floor(layoutInfo.height * computedRatio));\n        const computedSliderPosition = Math.floor(scrollTop * computedRatio);\n        return {\n            height: computedSliderSize,\n            top: computedSliderPosition\n        };\n    }\n    _createDataSource() {\n        return {\n            getWidth: () => {\n                return this._elementSizeObserver.getWidth();\n            },\n            getHeight: () => {\n                return (this._elementSizeObserver.getHeight() - this._getReviewHeight());\n            },\n            getOptions: () => {\n                return {\n                    renderOverviewRuler: this._options.renderOverviewRuler\n                };\n            },\n            getContainerDomNode: () => {\n                return this._containerDomElement;\n            },\n            relayoutEditors: () => {\n                this._doLayout();\n            },\n            getOriginalEditor: () => {\n                return this._originalEditor;\n            },\n            getModifiedEditor: () => {\n                return this._modifiedEditor;\n            }\n        };\n    }\n    _setStrategy(newStrategy) {\n        if (this._strategy) {\n            this._strategy.dispose();\n        }\n        this._strategy = newStrategy;\n        newStrategy.applyColors(this._themeService.getColorTheme());\n        if (this._diffComputationResult) {\n            this._updateDecorations();\n        }\n        // Just do a layout, the strategy might need it\n        this._doLayout();\n    }\n    _getLineChangeAtOrBeforeLineNumber(lineNumber, startLineNumberExtractor) {\n        const lineChanges = (this._diffComputationResult ? this._diffComputationResult.changes : []);\n        if (lineChanges.length === 0 || lineNumber < startLineNumberExtractor(lineChanges[0])) {\n            // There are no changes or `lineNumber` is before the first change\n            return null;\n        }\n        let min = 0;\n        let max = lineChanges.length - 1;\n        while (min < max) {\n            const mid = Math.floor((min + max) / 2);\n            const midStart = startLineNumberExtractor(lineChanges[mid]);\n            const midEnd = (mid + 1 <= max ? startLineNumberExtractor(lineChanges[mid + 1]) : 1073741824 /* MAX_SAFE_SMALL_INTEGER */);\n            if (lineNumber < midStart) {\n                max = mid - 1;\n            }\n            else if (lineNumber >= midEnd) {\n                min = mid + 1;\n            }\n            else {\n                // HIT!\n                min = mid;\n                max = mid;\n            }\n        }\n        return lineChanges[min];\n    }\n    _getEquivalentLineForOriginalLineNumber(lineNumber) {\n        const lineChange = this._getLineChangeAtOrBeforeLineNumber(lineNumber, (lineChange) => lineChange.originalStartLineNumber);\n        if (!lineChange) {\n            return lineNumber;\n        }\n        const originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n        const modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n        const lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? (lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1) : 0);\n        const lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? (lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1) : 0);\n        const delta = lineNumber - originalEquivalentLineNumber;\n        if (delta <= lineChangeOriginalLength) {\n            return modifiedEquivalentLineNumber + Math.min(delta, lineChangeModifiedLength);\n        }\n        return modifiedEquivalentLineNumber + lineChangeModifiedLength - lineChangeOriginalLength + delta;\n    }\n    _getEquivalentLineForModifiedLineNumber(lineNumber) {\n        const lineChange = this._getLineChangeAtOrBeforeLineNumber(lineNumber, (lineChange) => lineChange.modifiedStartLineNumber);\n        if (!lineChange) {\n            return lineNumber;\n        }\n        const originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n        const modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n        const lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? (lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1) : 0);\n        const lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? (lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1) : 0);\n        const delta = lineNumber - modifiedEquivalentLineNumber;\n        if (delta <= lineChangeModifiedLength) {\n            return originalEquivalentLineNumber + Math.min(delta, lineChangeOriginalLength);\n        }\n        return originalEquivalentLineNumber + lineChangeOriginalLength - lineChangeModifiedLength + delta;\n    }\n    getDiffLineInformationForOriginal(lineNumber) {\n        if (!this._diffComputationResult) {\n            // Cannot answer that which I don't know\n            return null;\n        }\n        return {\n            equivalentLineNumber: this._getEquivalentLineForOriginalLineNumber(lineNumber)\n        };\n    }\n    getDiffLineInformationForModified(lineNumber) {\n        if (!this._diffComputationResult) {\n            // Cannot answer that which I don't know\n            return null;\n        }\n        return {\n            equivalentLineNumber: this._getEquivalentLineForModifiedLineNumber(lineNumber)\n        };\n    }\n};\nDiffEditorWidget.ONE_OVERVIEW_WIDTH = 15;\nDiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH = 30;\nDiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY = 200; // ms\nDiffEditorWidget = __decorate([\n    __param(3, IClipboardService),\n    __param(4, IEditorWorkerService),\n    __param(5, IContextKeyService),\n    __param(6, IInstantiationService),\n    __param(7, ICodeEditorService),\n    __param(8, IThemeService),\n    __param(9, INotificationService),\n    __param(10, IContextMenuService),\n    __param(11, IEditorProgressService)\n], DiffEditorWidget);\nexport { DiffEditorWidget };\nclass DiffEditorWidgetStyle extends Disposable {\n    constructor(dataSource) {\n        super();\n        this._dataSource = dataSource;\n        this._insertColor = null;\n        this._removeColor = null;\n    }\n    applyColors(theme) {\n        const newInsertColor = theme.getColor(diffOverviewRulerInserted) || (theme.getColor(diffInserted) || defaultInsertColor).transparent(2);\n        const newRemoveColor = theme.getColor(diffOverviewRulerRemoved) || (theme.getColor(diffRemoved) || defaultRemoveColor).transparent(2);\n        const hasChanges = !newInsertColor.equals(this._insertColor) || !newRemoveColor.equals(this._removeColor);\n        this._insertColor = newInsertColor;\n        this._removeColor = newRemoveColor;\n        return hasChanges;\n    }\n    getEditorsDiffDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators, originalWhitespaces, modifiedWhitespaces) {\n        // Get view zones\n        modifiedWhitespaces = modifiedWhitespaces.sort((a, b) => {\n            return a.afterLineNumber - b.afterLineNumber;\n        });\n        originalWhitespaces = originalWhitespaces.sort((a, b) => {\n            return a.afterLineNumber - b.afterLineNumber;\n        });\n        const zones = this._getViewZones(lineChanges, originalWhitespaces, modifiedWhitespaces, renderIndicators);\n        // Get decorations & overview ruler zones\n        const originalDecorations = this._getOriginalEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators);\n        const modifiedDecorations = this._getModifiedEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators);\n        return {\n            original: {\n                decorations: originalDecorations.decorations,\n                overviewZones: originalDecorations.overviewZones,\n                zones: zones.original\n            },\n            modified: {\n                decorations: modifiedDecorations.decorations,\n                overviewZones: modifiedDecorations.overviewZones,\n                zones: zones.modified\n            }\n        };\n    }\n}\nclass ForeignViewZonesIterator {\n    constructor(source) {\n        this._source = source;\n        this._index = -1;\n        this.current = null;\n        this.advance();\n    }\n    advance() {\n        this._index++;\n        if (this._index < this._source.length) {\n            this.current = this._source[this._index];\n        }\n        else {\n            this.current = null;\n        }\n    }\n}\nclass ViewZonesComputer {\n    constructor(_lineChanges, _originalForeignVZ, _modifiedForeignVZ, _originalEditor, _modifiedEditor) {\n        this._lineChanges = _lineChanges;\n        this._originalForeignVZ = _originalForeignVZ;\n        this._modifiedForeignVZ = _modifiedForeignVZ;\n        this._originalEditor = _originalEditor;\n        this._modifiedEditor = _modifiedEditor;\n    }\n    static _getViewLineCount(editor, startLineNumber, endLineNumber) {\n        const model = editor.getModel();\n        const viewModel = editor._getViewModel();\n        if (model && viewModel) {\n            const viewRange = getViewRange(model, viewModel, startLineNumber, endLineNumber);\n            return (viewRange.endLineNumber - viewRange.startLineNumber + 1);\n        }\n        return (endLineNumber - startLineNumber + 1);\n    }\n    getViewZones() {\n        const originalLineHeight = this._originalEditor.getOption(59 /* lineHeight */);\n        const modifiedLineHeight = this._modifiedEditor.getOption(59 /* lineHeight */);\n        const originalHasWrapping = (this._originalEditor.getOption(132 /* wrappingInfo */).wrappingColumn !== -1);\n        const modifiedHasWrapping = (this._modifiedEditor.getOption(132 /* wrappingInfo */).wrappingColumn !== -1);\n        const hasWrapping = (originalHasWrapping || modifiedHasWrapping);\n        const originalModel = this._originalEditor.getModel();\n        const originalCoordinatesConverter = this._originalEditor._getViewModel().coordinatesConverter;\n        const modifiedCoordinatesConverter = this._modifiedEditor._getViewModel().coordinatesConverter;\n        const result = {\n            original: [],\n            modified: []\n        };\n        let lineChangeModifiedLength = 0;\n        let lineChangeOriginalLength = 0;\n        let originalEquivalentLineNumber = 0;\n        let modifiedEquivalentLineNumber = 0;\n        let originalEndEquivalentLineNumber = 0;\n        let modifiedEndEquivalentLineNumber = 0;\n        const sortMyViewZones = (a, b) => {\n            return a.afterLineNumber - b.afterLineNumber;\n        };\n        const addAndCombineIfPossible = (destination, item) => {\n            if (item.domNode === null && destination.length > 0) {\n                const lastItem = destination[destination.length - 1];\n                if (lastItem.afterLineNumber === item.afterLineNumber && lastItem.domNode === null) {\n                    lastItem.heightInLines += item.heightInLines;\n                    return;\n                }\n            }\n            destination.push(item);\n        };\n        const modifiedForeignVZ = new ForeignViewZonesIterator(this._modifiedForeignVZ);\n        const originalForeignVZ = new ForeignViewZonesIterator(this._originalForeignVZ);\n        let lastOriginalLineNumber = 1;\n        let lastModifiedLineNumber = 1;\n        // In order to include foreign view zones after the last line change, the for loop will iterate once more after the end of the `lineChanges` array\n        for (let i = 0, length = this._lineChanges.length; i <= length; i++) {\n            const lineChange = (i < length ? this._lineChanges[i] : null);\n            if (lineChange !== null) {\n                originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n                modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n                lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? ViewZonesComputer._getViewLineCount(this._originalEditor, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber) : 0);\n                lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? ViewZonesComputer._getViewLineCount(this._modifiedEditor, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber) : 0);\n                originalEndEquivalentLineNumber = Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\n                modifiedEndEquivalentLineNumber = Math.max(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\n            }\n            else {\n                // Increase to very large value to get the producing tests of foreign view zones running\n                originalEquivalentLineNumber += 10000000 + lineChangeOriginalLength;\n                modifiedEquivalentLineNumber += 10000000 + lineChangeModifiedLength;\n                originalEndEquivalentLineNumber = originalEquivalentLineNumber;\n                modifiedEndEquivalentLineNumber = modifiedEquivalentLineNumber;\n            }\n            // Each step produces view zones, and after producing them, we try to cancel them out, to avoid empty-empty view zone cases\n            let stepOriginal = [];\n            let stepModified = [];\n            // ---------------------------- PRODUCE VIEW ZONES\n            // [PRODUCE] View zones due to line mapping differences (equal lines but wrapped differently)\n            if (hasWrapping) {\n                let count;\n                if (lineChange) {\n                    if (lineChange.originalEndLineNumber > 0) {\n                        count = lineChange.originalStartLineNumber - lastOriginalLineNumber;\n                    }\n                    else {\n                        count = lineChange.modifiedStartLineNumber - lastModifiedLineNumber;\n                    }\n                }\n                else {\n                    // `lastOriginalLineNumber` has not been looked at yet\n                    count = originalModel.getLineCount() - lastOriginalLineNumber + 1;\n                }\n                for (let i = 0; i < count; i++) {\n                    const originalLineNumber = lastOriginalLineNumber + i;\n                    const modifiedLineNumber = lastModifiedLineNumber + i;\n                    const originalViewLineCount = originalCoordinatesConverter.getModelLineViewLineCount(originalLineNumber);\n                    const modifiedViewLineCount = modifiedCoordinatesConverter.getModelLineViewLineCount(modifiedLineNumber);\n                    if (originalViewLineCount < modifiedViewLineCount) {\n                        stepOriginal.push({\n                            afterLineNumber: originalLineNumber,\n                            heightInLines: modifiedViewLineCount - originalViewLineCount,\n                            domNode: null,\n                            marginDomNode: null\n                        });\n                    }\n                    else if (originalViewLineCount > modifiedViewLineCount) {\n                        stepModified.push({\n                            afterLineNumber: modifiedLineNumber,\n                            heightInLines: originalViewLineCount - modifiedViewLineCount,\n                            domNode: null,\n                            marginDomNode: null\n                        });\n                    }\n                }\n                if (lineChange) {\n                    lastOriginalLineNumber = (lineChange.originalEndLineNumber > 0 ? lineChange.originalEndLineNumber : lineChange.originalStartLineNumber) + 1;\n                    lastModifiedLineNumber = (lineChange.modifiedEndLineNumber > 0 ? lineChange.modifiedEndLineNumber : lineChange.modifiedStartLineNumber) + 1;\n                }\n            }\n            // [PRODUCE] View zone(s) in original-side due to foreign view zone(s) in modified-side\n            while (modifiedForeignVZ.current && modifiedForeignVZ.current.afterLineNumber <= modifiedEndEquivalentLineNumber) {\n                let viewZoneLineNumber;\n                if (modifiedForeignVZ.current.afterLineNumber <= modifiedEquivalentLineNumber) {\n                    viewZoneLineNumber = originalEquivalentLineNumber - modifiedEquivalentLineNumber + modifiedForeignVZ.current.afterLineNumber;\n                }\n                else {\n                    viewZoneLineNumber = originalEndEquivalentLineNumber;\n                }\n                let marginDomNode = null;\n                if (lineChange && lineChange.modifiedStartLineNumber <= modifiedForeignVZ.current.afterLineNumber && modifiedForeignVZ.current.afterLineNumber <= lineChange.modifiedEndLineNumber) {\n                    marginDomNode = this._createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion();\n                }\n                stepOriginal.push({\n                    afterLineNumber: viewZoneLineNumber,\n                    heightInLines: modifiedForeignVZ.current.height / modifiedLineHeight,\n                    domNode: null,\n                    marginDomNode: marginDomNode\n                });\n                modifiedForeignVZ.advance();\n            }\n            // [PRODUCE] View zone(s) in modified-side due to foreign view zone(s) in original-side\n            while (originalForeignVZ.current && originalForeignVZ.current.afterLineNumber <= originalEndEquivalentLineNumber) {\n                let viewZoneLineNumber;\n                if (originalForeignVZ.current.afterLineNumber <= originalEquivalentLineNumber) {\n                    viewZoneLineNumber = modifiedEquivalentLineNumber - originalEquivalentLineNumber + originalForeignVZ.current.afterLineNumber;\n                }\n                else {\n                    viewZoneLineNumber = modifiedEndEquivalentLineNumber;\n                }\n                stepModified.push({\n                    afterLineNumber: viewZoneLineNumber,\n                    heightInLines: originalForeignVZ.current.height / originalLineHeight,\n                    domNode: null\n                });\n                originalForeignVZ.advance();\n            }\n            if (lineChange !== null && isChangeOrInsert(lineChange)) {\n                const r = this._produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength);\n                if (r) {\n                    stepOriginal.push(r);\n                }\n            }\n            if (lineChange !== null && isChangeOrDelete(lineChange)) {\n                const r = this._produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength);\n                if (r) {\n                    stepModified.push(r);\n                }\n            }\n            // ---------------------------- END PRODUCE VIEW ZONES\n            // ---------------------------- EMIT MINIMAL VIEW ZONES\n            // [CANCEL & EMIT] Try to cancel view zones out\n            let stepOriginalIndex = 0;\n            let stepModifiedIndex = 0;\n            stepOriginal = stepOriginal.sort(sortMyViewZones);\n            stepModified = stepModified.sort(sortMyViewZones);\n            while (stepOriginalIndex < stepOriginal.length && stepModifiedIndex < stepModified.length) {\n                const original = stepOriginal[stepOriginalIndex];\n                const modified = stepModified[stepModifiedIndex];\n                const originalDelta = original.afterLineNumber - originalEquivalentLineNumber;\n                const modifiedDelta = modified.afterLineNumber - modifiedEquivalentLineNumber;\n                if (originalDelta < modifiedDelta) {\n                    addAndCombineIfPossible(result.original, original);\n                    stepOriginalIndex++;\n                }\n                else if (modifiedDelta < originalDelta) {\n                    addAndCombineIfPossible(result.modified, modified);\n                    stepModifiedIndex++;\n                }\n                else if (original.shouldNotShrink) {\n                    addAndCombineIfPossible(result.original, original);\n                    stepOriginalIndex++;\n                }\n                else if (modified.shouldNotShrink) {\n                    addAndCombineIfPossible(result.modified, modified);\n                    stepModifiedIndex++;\n                }\n                else {\n                    if (original.heightInLines >= modified.heightInLines) {\n                        // modified view zone gets removed\n                        original.heightInLines -= modified.heightInLines;\n                        stepModifiedIndex++;\n                    }\n                    else {\n                        // original view zone gets removed\n                        modified.heightInLines -= original.heightInLines;\n                        stepOriginalIndex++;\n                    }\n                }\n            }\n            // [EMIT] Remaining original view zones\n            while (stepOriginalIndex < stepOriginal.length) {\n                addAndCombineIfPossible(result.original, stepOriginal[stepOriginalIndex]);\n                stepOriginalIndex++;\n            }\n            // [EMIT] Remaining modified view zones\n            while (stepModifiedIndex < stepModified.length) {\n                addAndCombineIfPossible(result.modified, stepModified[stepModifiedIndex]);\n                stepModifiedIndex++;\n            }\n            // ---------------------------- END EMIT MINIMAL VIEW ZONES\n        }\n        return {\n            original: ViewZonesComputer._ensureDomNodes(result.original),\n            modified: ViewZonesComputer._ensureDomNodes(result.modified),\n        };\n    }\n    static _ensureDomNodes(zones) {\n        return zones.map((z) => {\n            if (!z.domNode) {\n                z.domNode = createFakeLinesDiv();\n            }\n            return z;\n        });\n    }\n}\nfunction createDecoration(startLineNumber, startColumn, endLineNumber, endColumn, options) {\n    return {\n        range: new Range(startLineNumber, startColumn, endLineNumber, endColumn),\n        options: options\n    };\n}\nconst DECORATIONS = {\n    charDelete: ModelDecorationOptions.register({\n        description: 'diff-editor-char-delete',\n        className: 'char-delete'\n    }),\n    charDeleteWholeLine: ModelDecorationOptions.register({\n        description: 'diff-editor-char-delete-whole-line',\n        className: 'char-delete',\n        isWholeLine: true\n    }),\n    charInsert: ModelDecorationOptions.register({\n        description: 'diff-editor-char-insert',\n        className: 'char-insert'\n    }),\n    charInsertWholeLine: ModelDecorationOptions.register({\n        description: 'diff-editor-char-insert-whole-line',\n        className: 'char-insert',\n        isWholeLine: true\n    }),\n    lineInsert: ModelDecorationOptions.register({\n        description: 'diff-editor-line-insert',\n        className: 'line-insert',\n        marginClassName: 'gutter-insert',\n        isWholeLine: true\n    }),\n    lineInsertWithSign: ModelDecorationOptions.register({\n        description: 'diff-editor-line-insert-with-sign',\n        className: 'line-insert',\n        linesDecorationsClassName: 'insert-sign ' + ThemeIcon.asClassName(diffInsertIcon),\n        marginClassName: 'gutter-insert',\n        isWholeLine: true\n    }),\n    lineDelete: ModelDecorationOptions.register({\n        description: 'diff-editor-line-delete',\n        className: 'line-delete',\n        marginClassName: 'gutter-delete',\n        isWholeLine: true\n    }),\n    lineDeleteWithSign: ModelDecorationOptions.register({\n        description: 'diff-editor-line-delete-with-sign',\n        className: 'line-delete',\n        linesDecorationsClassName: 'delete-sign ' + ThemeIcon.asClassName(diffRemoveIcon),\n        marginClassName: 'gutter-delete',\n        isWholeLine: true\n    }),\n    lineDeleteMargin: ModelDecorationOptions.register({\n        description: 'diff-editor-line-delete-margin',\n        marginClassName: 'gutter-delete',\n    })\n};\nclass DiffEditorWidgetSideBySide extends DiffEditorWidgetStyle {\n    constructor(dataSource, enableSplitViewResizing) {\n        super(dataSource);\n        this._disableSash = (enableSplitViewResizing === false);\n        this._sashRatio = null;\n        this._sashPosition = null;\n        this._startSashPosition = null;\n        this._sash = this._register(new Sash(this._dataSource.getContainerDomNode(), this, { orientation: 0 /* VERTICAL */ }));\n        if (this._disableSash) {\n            this._sash.state = 0 /* Disabled */;\n        }\n        this._sash.onDidStart(() => this._onSashDragStart());\n        this._sash.onDidChange((e) => this._onSashDrag(e));\n        this._sash.onDidEnd(() => this._onSashDragEnd());\n        this._sash.onDidReset(() => this._onSashReset());\n    }\n    setEnableSplitViewResizing(enableSplitViewResizing) {\n        const newDisableSash = (enableSplitViewResizing === false);\n        if (this._disableSash !== newDisableSash) {\n            this._disableSash = newDisableSash;\n            this._sash.state = this._disableSash ? 0 /* Disabled */ : 3 /* Enabled */;\n        }\n    }\n    layout(sashRatio = this._sashRatio) {\n        const w = this._dataSource.getWidth();\n        const contentWidth = w - (this._dataSource.getOptions().renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0);\n        let sashPosition = Math.floor((sashRatio || 0.5) * contentWidth);\n        const midPoint = Math.floor(0.5 * contentWidth);\n        sashPosition = this._disableSash ? midPoint : sashPosition || midPoint;\n        if (contentWidth > DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH * 2) {\n            if (sashPosition < DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH) {\n                sashPosition = DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH;\n            }\n            if (sashPosition > contentWidth - DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH) {\n                sashPosition = contentWidth - DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH;\n            }\n        }\n        else {\n            sashPosition = midPoint;\n        }\n        if (this._sashPosition !== sashPosition) {\n            this._sashPosition = sashPosition;\n        }\n        this._sash.layout();\n        return this._sashPosition;\n    }\n    _onSashDragStart() {\n        this._startSashPosition = this._sashPosition;\n    }\n    _onSashDrag(e) {\n        const w = this._dataSource.getWidth();\n        const contentWidth = w - (this._dataSource.getOptions().renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0);\n        const sashPosition = this.layout((this._startSashPosition + (e.currentX - e.startX)) / contentWidth);\n        this._sashRatio = sashPosition / contentWidth;\n        this._dataSource.relayoutEditors();\n    }\n    _onSashDragEnd() {\n        this._sash.layout();\n    }\n    _onSashReset() {\n        this._sashRatio = 0.5;\n        this._dataSource.relayoutEditors();\n        this._sash.layout();\n    }\n    getVerticalSashTop(sash) {\n        return 0;\n    }\n    getVerticalSashLeft(sash) {\n        return this._sashPosition;\n    }\n    getVerticalSashHeight(sash) {\n        return this._dataSource.getHeight();\n    }\n    _getViewZones(lineChanges, originalForeignVZ, modifiedForeignVZ) {\n        const originalEditor = this._dataSource.getOriginalEditor();\n        const modifiedEditor = this._dataSource.getModifiedEditor();\n        const c = new SideBySideViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\n        return c.getViewZones();\n    }\n    _getOriginalEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators) {\n        const originalEditor = this._dataSource.getOriginalEditor();\n        const overviewZoneColor = String(this._removeColor);\n        const result = {\n            decorations: [],\n            overviewZones: []\n        };\n        const originalModel = originalEditor.getModel();\n        const originalViewModel = originalEditor._getViewModel();\n        for (const lineChange of lineChanges) {\n            if (isChangeOrDelete(lineChange)) {\n                result.decorations.push({\n                    range: new Range(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */),\n                    options: (renderIndicators ? DECORATIONS.lineDeleteWithSign : DECORATIONS.lineDelete)\n                });\n                if (!isChangeOrInsert(lineChange) || !lineChange.charChanges) {\n                    result.decorations.push(createDecoration(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charDeleteWholeLine));\n                }\n                const viewRange = getViewRange(originalModel, originalViewModel, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, /*use endLineNumber*/ 0, overviewZoneColor));\n                if (lineChange.charChanges) {\n                    for (const charChange of lineChange.charChanges) {\n                        if (isChangeOrDelete(charChange)) {\n                            if (ignoreTrimWhitespace) {\n                                for (let lineNumber = charChange.originalStartLineNumber; lineNumber <= charChange.originalEndLineNumber; lineNumber++) {\n                                    let startColumn;\n                                    let endColumn;\n                                    if (lineNumber === charChange.originalStartLineNumber) {\n                                        startColumn = charChange.originalStartColumn;\n                                    }\n                                    else {\n                                        startColumn = originalModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                                    }\n                                    if (lineNumber === charChange.originalEndLineNumber) {\n                                        endColumn = charChange.originalEndColumn;\n                                    }\n                                    else {\n                                        endColumn = originalModel.getLineLastNonWhitespaceColumn(lineNumber);\n                                    }\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charDelete));\n                                }\n                            }\n                            else {\n                                result.decorations.push(createDecoration(charChange.originalStartLineNumber, charChange.originalStartColumn, charChange.originalEndLineNumber, charChange.originalEndColumn, DECORATIONS.charDelete));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    _getModifiedEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators) {\n        const modifiedEditor = this._dataSource.getModifiedEditor();\n        const overviewZoneColor = String(this._insertColor);\n        const result = {\n            decorations: [],\n            overviewZones: []\n        };\n        const modifiedModel = modifiedEditor.getModel();\n        const modifiedViewModel = modifiedEditor._getViewModel();\n        for (const lineChange of lineChanges) {\n            if (isChangeOrInsert(lineChange)) {\n                result.decorations.push({\n                    range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */),\n                    options: (renderIndicators ? DECORATIONS.lineInsertWithSign : DECORATIONS.lineInsert)\n                });\n                if (!isChangeOrDelete(lineChange) || !lineChange.charChanges) {\n                    result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charInsertWholeLine));\n                }\n                const viewRange = getViewRange(modifiedModel, modifiedViewModel, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, /*use endLineNumber*/ 0, overviewZoneColor));\n                if (lineChange.charChanges) {\n                    for (const charChange of lineChange.charChanges) {\n                        if (isChangeOrInsert(charChange)) {\n                            if (ignoreTrimWhitespace) {\n                                for (let lineNumber = charChange.modifiedStartLineNumber; lineNumber <= charChange.modifiedEndLineNumber; lineNumber++) {\n                                    let startColumn;\n                                    let endColumn;\n                                    if (lineNumber === charChange.modifiedStartLineNumber) {\n                                        startColumn = charChange.modifiedStartColumn;\n                                    }\n                                    else {\n                                        startColumn = modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                                    }\n                                    if (lineNumber === charChange.modifiedEndLineNumber) {\n                                        endColumn = charChange.modifiedEndColumn;\n                                    }\n                                    else {\n                                        endColumn = modifiedModel.getLineLastNonWhitespaceColumn(lineNumber);\n                                    }\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charInsert));\n                                }\n                            }\n                            else {\n                                result.decorations.push(createDecoration(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn, DECORATIONS.charInsert));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n}\nDiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH = 100;\nclass SideBySideViewZonesComputer extends ViewZonesComputer {\n    constructor(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor) {\n        super(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\n    }\n    _createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion() {\n        return null;\n    }\n    _produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        if (lineChangeModifiedLength > lineChangeOriginalLength) {\n            return {\n                afterLineNumber: Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber),\n                heightInLines: (lineChangeModifiedLength - lineChangeOriginalLength),\n                domNode: null\n            };\n        }\n        return null;\n    }\n    _produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        if (lineChangeOriginalLength > lineChangeModifiedLength) {\n            return {\n                afterLineNumber: Math.max(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber),\n                heightInLines: (lineChangeOriginalLength - lineChangeModifiedLength),\n                domNode: null\n            };\n        }\n        return null;\n    }\n}\nclass DiffEditorWidgetInline extends DiffEditorWidgetStyle {\n    constructor(dataSource, enableSplitViewResizing) {\n        super(dataSource);\n        this._decorationsLeft = dataSource.getOriginalEditor().getLayoutInfo().decorationsLeft;\n        this._register(dataSource.getOriginalEditor().onDidLayoutChange((layoutInfo) => {\n            if (this._decorationsLeft !== layoutInfo.decorationsLeft) {\n                this._decorationsLeft = layoutInfo.decorationsLeft;\n                dataSource.relayoutEditors();\n            }\n        }));\n    }\n    setEnableSplitViewResizing(enableSplitViewResizing) {\n        // Nothing to do..\n    }\n    _getViewZones(lineChanges, originalForeignVZ, modifiedForeignVZ, renderIndicators) {\n        const originalEditor = this._dataSource.getOriginalEditor();\n        const modifiedEditor = this._dataSource.getModifiedEditor();\n        const computer = new InlineViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor, renderIndicators);\n        return computer.getViewZones();\n    }\n    _getOriginalEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators) {\n        const overviewZoneColor = String(this._removeColor);\n        const result = {\n            decorations: [],\n            overviewZones: []\n        };\n        const originalEditor = this._dataSource.getOriginalEditor();\n        const originalModel = originalEditor.getModel();\n        const originalViewModel = originalEditor._getViewModel();\n        let zoneIndex = 0;\n        for (const lineChange of lineChanges) {\n            // Add overview zones in the overview ruler\n            if (isChangeOrDelete(lineChange)) {\n                result.decorations.push({\n                    range: new Range(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */),\n                    options: DECORATIONS.lineDeleteMargin\n                });\n                while (zoneIndex < zones.modified.length) {\n                    const zone = zones.modified[zoneIndex];\n                    if (zone.diff && zone.diff.originalStartLineNumber >= lineChange.originalStartLineNumber) {\n                        break;\n                    }\n                    zoneIndex++;\n                }\n                let zoneHeightInLines = 0;\n                if (zoneIndex < zones.modified.length) {\n                    const zone = zones.modified[zoneIndex];\n                    if (zone.diff\n                        && zone.diff.originalStartLineNumber === lineChange.originalStartLineNumber\n                        && zone.diff.originalEndLineNumber === lineChange.originalEndLineNumber\n                        && zone.diff.modifiedStartLineNumber === lineChange.modifiedStartLineNumber\n                        && zone.diff.modifiedEndLineNumber === lineChange.modifiedEndLineNumber) {\n                        zoneHeightInLines = zone.heightInLines;\n                    }\n                }\n                const viewRange = getViewRange(originalModel, originalViewModel, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, zoneHeightInLines, overviewZoneColor));\n            }\n        }\n        return result;\n    }\n    _getModifiedEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators) {\n        const modifiedEditor = this._dataSource.getModifiedEditor();\n        const overviewZoneColor = String(this._insertColor);\n        const result = {\n            decorations: [],\n            overviewZones: []\n        };\n        const modifiedModel = modifiedEditor.getModel();\n        const modifiedViewModel = modifiedEditor._getViewModel();\n        for (const lineChange of lineChanges) {\n            // Add decorations & overview zones\n            if (isChangeOrInsert(lineChange)) {\n                result.decorations.push({\n                    range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */),\n                    options: (renderIndicators ? DECORATIONS.lineInsertWithSign : DECORATIONS.lineInsert)\n                });\n                const viewRange = getViewRange(modifiedModel, modifiedViewModel, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, /*use endLineNumber*/ 0, overviewZoneColor));\n                if (lineChange.charChanges) {\n                    for (const charChange of lineChange.charChanges) {\n                        if (isChangeOrInsert(charChange)) {\n                            if (ignoreTrimWhitespace) {\n                                for (let lineNumber = charChange.modifiedStartLineNumber; lineNumber <= charChange.modifiedEndLineNumber; lineNumber++) {\n                                    let startColumn;\n                                    let endColumn;\n                                    if (lineNumber === charChange.modifiedStartLineNumber) {\n                                        startColumn = charChange.modifiedStartColumn;\n                                    }\n                                    else {\n                                        startColumn = modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                                    }\n                                    if (lineNumber === charChange.modifiedEndLineNumber) {\n                                        endColumn = charChange.modifiedEndColumn;\n                                    }\n                                    else {\n                                        endColumn = modifiedModel.getLineLastNonWhitespaceColumn(lineNumber);\n                                    }\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charInsert));\n                                }\n                            }\n                            else {\n                                result.decorations.push(createDecoration(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn, DECORATIONS.charInsert));\n                            }\n                        }\n                    }\n                }\n                else {\n                    result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charInsertWholeLine));\n                }\n            }\n        }\n        return result;\n    }\n    layout() {\n        // An editor should not be smaller than 5px\n        return Math.max(5, this._decorationsLeft);\n    }\n}\nclass InlineViewZonesComputer extends ViewZonesComputer {\n    constructor(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor, renderIndicators) {\n        super(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\n        this._originalModel = originalEditor.getModel();\n        this._renderIndicators = renderIndicators;\n        this._pendingLineChange = [];\n        this._pendingViewZones = [];\n        this._lineBreaksComputer = this._modifiedEditor._getViewModel().createLineBreaksComputer();\n    }\n    getViewZones() {\n        const result = super.getViewZones();\n        this._finalize(result);\n        return result;\n    }\n    _createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion() {\n        const result = document.createElement('div');\n        result.className = 'inline-added-margin-view-zone';\n        return result;\n    }\n    _produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        const marginDomNode = document.createElement('div');\n        marginDomNode.className = 'inline-added-margin-view-zone';\n        return {\n            afterLineNumber: Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber),\n            heightInLines: lineChangeModifiedLength,\n            domNode: document.createElement('div'),\n            marginDomNode: marginDomNode\n        };\n    }\n    _produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        const domNode = document.createElement('div');\n        domNode.className = `view-lines line-delete ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`;\n        const marginDomNode = document.createElement('div');\n        marginDomNode.className = 'inline-deleted-margin-view-zone';\n        const viewZone = {\n            shouldNotShrink: true,\n            afterLineNumber: (lineChange.modifiedEndLineNumber === 0 ? lineChange.modifiedStartLineNumber : lineChange.modifiedStartLineNumber - 1),\n            heightInLines: lineChangeOriginalLength,\n            minWidthInPx: 0,\n            domNode: domNode,\n            marginDomNode: marginDomNode,\n            diff: {\n                originalStartLineNumber: lineChange.originalStartLineNumber,\n                originalEndLineNumber: lineChange.originalEndLineNumber,\n                modifiedStartLineNumber: lineChange.modifiedStartLineNumber,\n                modifiedEndLineNumber: lineChange.modifiedEndLineNumber,\n                originalModel: this._originalModel,\n                viewLineCounts: null,\n            }\n        };\n        for (let lineNumber = lineChange.originalStartLineNumber; lineNumber <= lineChange.originalEndLineNumber; lineNumber++) {\n            this._lineBreaksComputer.addRequest(this._originalModel.getLineContent(lineNumber), null, null);\n        }\n        this._pendingLineChange.push(lineChange);\n        this._pendingViewZones.push(viewZone);\n        return viewZone;\n    }\n    _finalize(result) {\n        const modifiedEditorOptions = this._modifiedEditor.getOptions();\n        const tabSize = this._modifiedEditor.getModel().getOptions().tabSize;\n        const fontInfo = modifiedEditorOptions.get(44 /* fontInfo */);\n        const disableMonospaceOptimizations = modifiedEditorOptions.get(29 /* disableMonospaceOptimizations */);\n        const typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        const scrollBeyondLastColumn = modifiedEditorOptions.get(93 /* scrollBeyondLastColumn */);\n        const mightContainNonBasicASCII = this._originalModel.mightContainNonBasicASCII();\n        const mightContainRTL = this._originalModel.mightContainRTL();\n        const lineHeight = modifiedEditorOptions.get(59 /* lineHeight */);\n        const layoutInfo = modifiedEditorOptions.get(131 /* layoutInfo */);\n        const lineDecorationsWidth = layoutInfo.decorationsWidth;\n        const stopRenderingLineAfter = modifiedEditorOptions.get(105 /* stopRenderingLineAfter */);\n        const renderWhitespace = modifiedEditorOptions.get(88 /* renderWhitespace */);\n        const renderControlCharacters = modifiedEditorOptions.get(83 /* renderControlCharacters */);\n        const fontLigatures = modifiedEditorOptions.get(45 /* fontLigatures */);\n        const lineBreaks = this._lineBreaksComputer.finalize();\n        let lineBreakIndex = 0;\n        for (let i = 0; i < this._pendingLineChange.length; i++) {\n            const lineChange = this._pendingLineChange[i];\n            const viewZone = this._pendingViewZones[i];\n            const domNode = viewZone.domNode;\n            applyFontInfo(domNode, fontInfo);\n            const marginDomNode = viewZone.marginDomNode;\n            applyFontInfo(marginDomNode, fontInfo);\n            const decorations = [];\n            if (lineChange.charChanges) {\n                for (const charChange of lineChange.charChanges) {\n                    if (isChangeOrDelete(charChange)) {\n                        decorations.push(new InlineDecoration(new Range(charChange.originalStartLineNumber, charChange.originalStartColumn, charChange.originalEndLineNumber, charChange.originalEndColumn), 'char-delete', 0 /* Regular */));\n                    }\n                }\n            }\n            const hasCharChanges = (decorations.length > 0);\n            const sb = createStringBuilder(10000);\n            let maxCharsPerLine = 0;\n            let renderedLineCount = 0;\n            let viewLineCounts = null;\n            for (let lineNumber = lineChange.originalStartLineNumber; lineNumber <= lineChange.originalEndLineNumber; lineNumber++) {\n                const lineIndex = lineNumber - lineChange.originalStartLineNumber;\n                const lineTokens = this._originalModel.getLineTokens(lineNumber);\n                const lineContent = lineTokens.getLineContent();\n                const lineBreakData = lineBreaks[lineBreakIndex++];\n                const actualDecorations = LineDecoration.filter(decorations, lineNumber, 1, lineContent.length + 1);\n                if (lineBreakData) {\n                    let lastBreakOffset = 0;\n                    for (const breakOffset of lineBreakData.breakOffsets) {\n                        const viewLineTokens = lineTokens.sliceAndInflate(lastBreakOffset, breakOffset, 0);\n                        const viewLineContent = lineContent.substring(lastBreakOffset, breakOffset);\n                        maxCharsPerLine = Math.max(maxCharsPerLine, this._renderOriginalLine(renderedLineCount++, viewLineContent, viewLineTokens, LineDecoration.extractWrapped(actualDecorations, lastBreakOffset, breakOffset), hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode));\n                        lastBreakOffset = breakOffset;\n                    }\n                    if (!viewLineCounts) {\n                        viewLineCounts = [];\n                    }\n                    // make sure all lines before this one have an entry in `viewLineCounts`\n                    while (viewLineCounts.length < lineIndex) {\n                        viewLineCounts[viewLineCounts.length] = 1;\n                    }\n                    viewLineCounts[lineIndex] = lineBreakData.breakOffsets.length;\n                    viewZone.heightInLines += (lineBreakData.breakOffsets.length - 1);\n                    const marginDomNode2 = document.createElement('div');\n                    marginDomNode2.className = 'gutter-delete';\n                    result.original.push({\n                        afterLineNumber: lineNumber,\n                        afterColumn: 0,\n                        heightInLines: lineBreakData.breakOffsets.length - 1,\n                        domNode: createFakeLinesDiv(),\n                        marginDomNode: marginDomNode2\n                    });\n                }\n                else {\n                    maxCharsPerLine = Math.max(maxCharsPerLine, this._renderOriginalLine(renderedLineCount++, lineContent, lineTokens, actualDecorations, hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode));\n                }\n            }\n            maxCharsPerLine += scrollBeyondLastColumn;\n            const html = sb.build();\n            const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n            domNode.innerHTML = trustedhtml;\n            viewZone.minWidthInPx = (maxCharsPerLine * typicalHalfwidthCharacterWidth);\n            if (viewLineCounts) {\n                // make sure all lines have an entry in `viewLineCounts`\n                const cnt = lineChange.originalEndLineNumber - lineChange.originalStartLineNumber;\n                while (viewLineCounts.length <= cnt) {\n                    viewLineCounts[viewLineCounts.length] = 1;\n                }\n            }\n            viewZone.diff.viewLineCounts = viewLineCounts;\n        }\n        result.original.sort((a, b) => {\n            return a.afterLineNumber - b.afterLineNumber;\n        });\n    }\n    _renderOriginalLine(renderedLineCount, lineContent, lineTokens, decorations, hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode) {\n        sb.appendASCIIString('<div class=\"view-line');\n        if (!hasCharChanges) {\n            // No char changes\n            sb.appendASCIIString(' char-delete');\n        }\n        sb.appendASCIIString('\" style=\"top:');\n        sb.appendASCIIString(String(renderedLineCount * lineHeight));\n        sb.appendASCIIString('px;width:1000000px;\">');\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, mightContainNonBasicASCII);\n        const containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, mightContainRTL);\n        const output = renderViewLine(new RenderLineInput((fontInfo.isMonospace && !disableMonospaceOptimizations), fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null // Send no selections, original line cannot be selected\n        ), sb);\n        sb.appendASCIIString('</div>');\n        if (this._renderIndicators) {\n            const marginElement = document.createElement('div');\n            marginElement.className = `delete-sign ${ThemeIcon.asClassName(diffRemoveIcon)}`;\n            marginElement.setAttribute('style', `position:absolute;top:${renderedLineCount * lineHeight}px;width:${lineDecorationsWidth}px;height:${lineHeight}px;right:0;`);\n            marginDomNode.appendChild(marginElement);\n        }\n        return output.characterMapping.getAbsoluteOffset(output.characterMapping.length);\n    }\n}\nfunction validateDiffWordWrap(value, defaultValue) {\n    return validateStringSetOption(value, defaultValue, ['off', 'on', 'inherit']);\n}\nfunction isChangeOrInsert(lineChange) {\n    return lineChange.modifiedEndLineNumber > 0;\n}\nfunction isChangeOrDelete(lineChange) {\n    return lineChange.originalEndLineNumber > 0;\n}\nfunction createFakeLinesDiv() {\n    const r = document.createElement('div');\n    r.className = 'diagonal-fill';\n    return r;\n}\nfunction getViewRange(model, viewModel, startLineNumber, endLineNumber) {\n    const lineCount = model.getLineCount();\n    startLineNumber = Math.min(lineCount, Math.max(1, startLineNumber));\n    endLineNumber = Math.min(lineCount, Math.max(1, endLineNumber));\n    return viewModel.coordinatesConverter.convertModelRangeToViewRange(new Range(startLineNumber, model.getLineMinColumn(startLineNumber), endLineNumber, model.getLineMaxColumn(endLineNumber)));\n}\nfunction validateDiffEditorOptions(options, defaults) {\n    return {\n        enableSplitViewResizing: validateBooleanOption(options.enableSplitViewResizing, defaults.enableSplitViewResizing),\n        renderSideBySide: validateBooleanOption(options.renderSideBySide, defaults.renderSideBySide),\n        maxComputationTime: clampedInt(options.maxComputationTime, defaults.maxComputationTime, 0, 1073741824 /* MAX_SAFE_SMALL_INTEGER */),\n        maxFileSize: clampedInt(options.maxFileSize, defaults.maxFileSize, 0, 1073741824 /* MAX_SAFE_SMALL_INTEGER */),\n        ignoreTrimWhitespace: validateBooleanOption(options.ignoreTrimWhitespace, defaults.ignoreTrimWhitespace),\n        renderIndicators: validateBooleanOption(options.renderIndicators, defaults.renderIndicators),\n        originalEditable: validateBooleanOption(options.originalEditable, defaults.originalEditable),\n        diffCodeLens: validateBooleanOption(options.diffCodeLens, defaults.diffCodeLens),\n        renderOverviewRuler: validateBooleanOption(options.renderOverviewRuler, defaults.renderOverviewRuler),\n        diffWordWrap: validateDiffWordWrap(options.diffWordWrap, defaults.diffWordWrap),\n    };\n}\nfunction changedDiffEditorOptions(a, b) {\n    return {\n        enableSplitViewResizing: (a.enableSplitViewResizing !== b.enableSplitViewResizing),\n        renderSideBySide: (a.renderSideBySide !== b.renderSideBySide),\n        maxComputationTime: (a.maxComputationTime !== b.maxComputationTime),\n        maxFileSize: (a.maxFileSize !== b.maxFileSize),\n        ignoreTrimWhitespace: (a.ignoreTrimWhitespace !== b.ignoreTrimWhitespace),\n        renderIndicators: (a.renderIndicators !== b.renderIndicators),\n        originalEditable: (a.originalEditable !== b.originalEditable),\n        diffCodeLens: (a.diffCodeLens !== b.diffCodeLens),\n        renderOverviewRuler: (a.renderOverviewRuler !== b.renderOverviewRuler),\n        diffWordWrap: (a.diffWordWrap !== b.diffWordWrap),\n    };\n}\nregisterThemingParticipant((theme, collector) => {\n    const added = theme.getColor(diffInserted);\n    if (added) {\n        collector.addRule(`.monaco-editor .char-insert, .monaco-diff-editor .char-insert { background-color: ${added}; }`);\n    }\n    const lineAdded = theme.getColor(diffInsertedLine) || added;\n    if (lineAdded) {\n        collector.addRule(`.monaco-editor .line-insert, .monaco-diff-editor .line-insert { background-color: ${lineAdded}; }`);\n    }\n    const gutterAdded = theme.getColor(diffInsertedLineGutter) || lineAdded;\n    if (gutterAdded) {\n        collector.addRule(`.monaco-editor .inline-added-margin-view-zone { background-color: ${gutterAdded}; }`);\n        collector.addRule(`.monaco-editor .gutter-insert, .monaco-diff-editor .gutter-insert { background-color: ${gutterAdded}; }`);\n    }\n    const removed = theme.getColor(diffRemoved);\n    if (removed) {\n        collector.addRule(`.monaco-editor .char-delete, .monaco-diff-editor .char-delete { background-color: ${removed}; }`);\n    }\n    const lineRemoved = theme.getColor(diffRemovedLine) || removed;\n    if (lineRemoved) {\n        collector.addRule(`.monaco-editor .line-delete, .monaco-diff-editor .line-delete { background-color: ${lineRemoved}; }`);\n    }\n    const gutterRemoved = theme.getColor(diffRemovedLineGutter) || lineRemoved;\n    if (gutterRemoved) {\n        collector.addRule(`.monaco-editor .inline-deleted-margin-view-zone { background-color: ${gutterRemoved}; }`);\n        collector.addRule(`.monaco-editor .gutter-delete, .monaco-diff-editor .gutter-delete { background-color: ${gutterRemoved}; }`);\n    }\n    const addedOutline = theme.getColor(diffInsertedOutline);\n    if (addedOutline) {\n        collector.addRule(`.monaco-editor .line-insert, .monaco-editor .char-insert { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${addedOutline}; }`);\n    }\n    const removedOutline = theme.getColor(diffRemovedOutline);\n    if (removedOutline) {\n        collector.addRule(`.monaco-editor .line-delete, .monaco-editor .char-delete { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${removedOutline}; }`);\n    }\n    const shadow = theme.getColor(scrollbarShadow);\n    if (shadow) {\n        collector.addRule(`.monaco-diff-editor.side-by-side .editor.modified { box-shadow: -6px 0 5px -5px ${shadow}; }`);\n    }\n    const border = theme.getColor(diffBorder);\n    if (border) {\n        collector.addRule(`.monaco-diff-editor.side-by-side .editor.modified { border-left: 1px solid ${border}; }`);\n    }\n    const scrollbarSliderBackgroundColor = theme.getColor(scrollbarSliderBackground);\n    if (scrollbarSliderBackgroundColor) {\n        collector.addRule(`\n\t\t\t.monaco-diff-editor .diffViewport {\n\t\t\t\tbackground: ${scrollbarSliderBackgroundColor};\n\t\t\t}\n\t\t`);\n    }\n    const scrollbarSliderHoverBackgroundColor = theme.getColor(scrollbarSliderHoverBackground);\n    if (scrollbarSliderHoverBackgroundColor) {\n        collector.addRule(`\n\t\t\t.monaco-diff-editor .diffViewport:hover {\n\t\t\t\tbackground: ${scrollbarSliderHoverBackgroundColor};\n\t\t\t}\n\t\t`);\n    }\n    const scrollbarSliderActiveBackgroundColor = theme.getColor(scrollbarSliderActiveBackground);\n    if (scrollbarSliderActiveBackgroundColor) {\n        collector.addRule(`\n\t\t\t.monaco-diff-editor .diffViewport:active {\n\t\t\t\tbackground: ${scrollbarSliderActiveBackgroundColor};\n\t\t\t}\n\t\t`);\n    }\n    const diffDiagonalFillColor = theme.getColor(diffDiagonalFill);\n    collector.addRule(`\n\t.monaco-editor .diagonal-fill {\n\t\tbackground-image: linear-gradient(\n\t\t\t-45deg,\n\t\t\t${diffDiagonalFillColor} 12.5%,\n\t\t\t#0000 12.5%, #0000 50%,\n\t\t\t${diffDiagonalFillColor} 50%, ${diffDiagonalFillColor} 62.5%,\n\t\t\t#0000 62.5%, #0000 100%\n\t\t);\n\t\tbackground-size: 8px 8px;\n\t}\n\t`);\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { Action } from '../../../base/common/actions.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Range } from '../../common/core/range.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nexport class InlineDiffMargin extends Disposable {\n    constructor(_viewZoneId, _marginDomNode, editor, diff, _contextMenuService, _clipboardService) {\n        super();\n        this._viewZoneId = _viewZoneId;\n        this._marginDomNode = _marginDomNode;\n        this.editor = editor;\n        this.diff = diff;\n        this._contextMenuService = _contextMenuService;\n        this._clipboardService = _clipboardService;\n        this._visibility = false;\n        // make sure the diff margin shows above overlay.\n        this._marginDomNode.style.zIndex = '10';\n        this._diffActions = document.createElement('div');\n        this._diffActions.className = Codicon.lightBulb.classNames + ' lightbulb-glyph';\n        this._diffActions.style.position = 'absolute';\n        const lineHeight = editor.getOption(59 /* lineHeight */);\n        const lineFeed = editor.getModel().getEOL();\n        this._diffActions.style.right = '0px';\n        this._diffActions.style.visibility = 'hidden';\n        this._diffActions.style.height = `${lineHeight}px`;\n        this._diffActions.style.lineHeight = `${lineHeight}px`;\n        this._marginDomNode.appendChild(this._diffActions);\n        const actions = [];\n        const isDeletion = diff.modifiedEndLineNumber === 0;\n        // default action\n        actions.push(new Action('diff.clipboard.copyDeletedContent', isDeletion\n            ? (diff.originalEndLineNumber > diff.modifiedStartLineNumber\n                ? nls.localize('diff.clipboard.copyDeletedLinesContent.label', \"Copy deleted lines\")\n                : nls.localize('diff.clipboard.copyDeletedLinesContent.single.label', \"Copy deleted line\"))\n            : (diff.originalEndLineNumber > diff.modifiedStartLineNumber\n                ? nls.localize('diff.clipboard.copyChangedLinesContent.label', \"Copy changed lines\")\n                : nls.localize('diff.clipboard.copyChangedLinesContent.single.label', \"Copy changed line\")), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n            const range = new Range(diff.originalStartLineNumber, 1, diff.originalEndLineNumber + 1, 1);\n            const deletedText = diff.originalModel.getValueInRange(range);\n            yield this._clipboardService.writeText(deletedText);\n        })));\n        let currentLineNumberOffset = 0;\n        let copyLineAction = undefined;\n        if (diff.originalEndLineNumber > diff.modifiedStartLineNumber) {\n            copyLineAction = new Action('diff.clipboard.copyDeletedLineContent', isDeletion\n                ? nls.localize('diff.clipboard.copyDeletedLineContent.label', \"Copy deleted line ({0})\", diff.originalStartLineNumber)\n                : nls.localize('diff.clipboard.copyChangedLineContent.label', \"Copy changed line ({0})\", diff.originalStartLineNumber), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                const lineContent = diff.originalModel.getLineContent(diff.originalStartLineNumber + currentLineNumberOffset);\n                if (lineContent === '') {\n                    // empty line\n                    const eof = diff.originalModel.getEndOfLineSequence();\n                    yield this._clipboardService.writeText(eof === 0 /* LF */ ? '\\n' : '\\r\\n');\n                }\n                else {\n                    yield this._clipboardService.writeText(lineContent);\n                }\n            }));\n            actions.push(copyLineAction);\n        }\n        const readOnly = editor.getOption(81 /* readOnly */);\n        if (!readOnly) {\n            actions.push(new Action('diff.inline.revertChange', nls.localize('diff.inline.revertChange.label', \"Revert this change\"), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                const range = new Range(diff.originalStartLineNumber, 1, diff.originalEndLineNumber, diff.originalModel.getLineMaxColumn(diff.originalEndLineNumber));\n                const deletedText = diff.originalModel.getValueInRange(range);\n                if (diff.modifiedEndLineNumber === 0) {\n                    // deletion only\n                    const column = editor.getModel().getLineMaxColumn(diff.modifiedStartLineNumber);\n                    editor.executeEdits('diffEditor', [\n                        {\n                            range: new Range(diff.modifiedStartLineNumber, column, diff.modifiedStartLineNumber, column),\n                            text: lineFeed + deletedText\n                        }\n                    ]);\n                }\n                else {\n                    const column = editor.getModel().getLineMaxColumn(diff.modifiedEndLineNumber);\n                    editor.executeEdits('diffEditor', [\n                        {\n                            range: new Range(diff.modifiedStartLineNumber, 1, diff.modifiedEndLineNumber, column),\n                            text: deletedText\n                        }\n                    ]);\n                }\n            })));\n        }\n        const showContextMenu = (x, y) => {\n            this._contextMenuService.showContextMenu({\n                getAnchor: () => {\n                    return {\n                        x,\n                        y\n                    };\n                },\n                getActions: () => {\n                    if (copyLineAction) {\n                        copyLineAction.label =\n                            isDeletion\n                                ? nls.localize('diff.clipboard.copyDeletedLineContent.label', \"Copy deleted line ({0})\", diff.originalStartLineNumber + currentLineNumberOffset)\n                                : nls.localize('diff.clipboard.copyChangedLineContent.label', \"Copy changed line ({0})\", diff.originalStartLineNumber + currentLineNumberOffset);\n                    }\n                    return actions;\n                },\n                autoSelectFirstItem: true\n            });\n        };\n        this._register(dom.addStandardDisposableListener(this._diffActions, 'mousedown', e => {\n            const { top, height } = dom.getDomNodePagePosition(this._diffActions);\n            const pad = Math.floor(lineHeight / 3);\n            e.preventDefault();\n            showContextMenu(e.posx, top + height + pad);\n        }));\n        this._register(editor.onMouseMove((e) => {\n            if (e.target.type === 8 /* CONTENT_VIEW_ZONE */ || e.target.type === 5 /* GUTTER_VIEW_ZONE */) {\n                const viewZoneId = e.target.detail.viewZoneId;\n                if (viewZoneId === this._viewZoneId) {\n                    this.visibility = true;\n                    currentLineNumberOffset = this._updateLightBulbPosition(this._marginDomNode, e.event.browserEvent.y, lineHeight);\n                }\n                else {\n                    this.visibility = false;\n                }\n            }\n            else {\n                this.visibility = false;\n            }\n        }));\n        this._register(editor.onMouseDown((e) => {\n            if (!e.event.rightButton) {\n                return;\n            }\n            if (e.target.type === 8 /* CONTENT_VIEW_ZONE */ || e.target.type === 5 /* GUTTER_VIEW_ZONE */) {\n                const viewZoneId = e.target.detail.viewZoneId;\n                if (viewZoneId === this._viewZoneId) {\n                    e.event.preventDefault();\n                    currentLineNumberOffset = this._updateLightBulbPosition(this._marginDomNode, e.event.browserEvent.y, lineHeight);\n                    showContextMenu(e.event.posx, e.event.posy + lineHeight);\n                }\n            }\n        }));\n    }\n    get visibility() {\n        return this._visibility;\n    }\n    set visibility(_visibility) {\n        if (this._visibility !== _visibility) {\n            this._visibility = _visibility;\n            if (_visibility) {\n                this._diffActions.style.visibility = 'visible';\n            }\n            else {\n                this._diffActions.style.visibility = 'hidden';\n            }\n        }\n    }\n    _updateLightBulbPosition(marginDomNode, y, lineHeight) {\n        const { top } = dom.getDomNodePagePosition(marginDomNode);\n        const offset = y - top;\n        const lineNumberOffset = Math.floor(offset / lineHeight);\n        const newTop = lineNumberOffset * lineHeight;\n        this._diffActions.style.top = `${newTop}px`;\n        if (this.diff.viewLineCounts) {\n            let acc = 0;\n            for (let i = 0; i < this.diff.viewLineCounts.length; i++) {\n                acc += this.diff.viewLineCounts[i];\n                if (lineNumberOffset < acc) {\n                    return i;\n                }\n            }\n        }\n        return lineNumberOffset;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from '../../../base/common/assert.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as objects from '../../../base/common/objects.js';\nimport { Range } from '../../common/core/range.js';\nconst defaultOptions = {\n    followsCaret: true,\n    ignoreCharChanges: true,\n    alwaysRevealFirst: true\n};\n/**\n * Create a new diff navigator for the provided diff editor.\n */\nexport class DiffNavigator extends Disposable {\n    constructor(editor, options = {}) {\n        super();\n        this._onDidUpdate = this._register(new Emitter());\n        this._editor = editor;\n        this._options = objects.mixin(options, defaultOptions, false);\n        this.disposed = false;\n        this.nextIdx = -1;\n        this.ranges = [];\n        this.ignoreSelectionChange = false;\n        this.revealFirst = Boolean(this._options.alwaysRevealFirst);\n        // hook up to diff editor for diff, disposal, and caret move\n        this._register(this._editor.onDidDispose(() => this.dispose()));\n        this._register(this._editor.onDidUpdateDiff(() => this._onDiffUpdated()));\n        if (this._options.followsCaret) {\n            this._register(this._editor.getModifiedEditor().onDidChangeCursorPosition((e) => {\n                if (this.ignoreSelectionChange) {\n                    return;\n                }\n                this.nextIdx = -1;\n            }));\n        }\n        if (this._options.alwaysRevealFirst) {\n            this._register(this._editor.getModifiedEditor().onDidChangeModel((e) => {\n                this.revealFirst = true;\n            }));\n        }\n        // init things\n        this._init();\n    }\n    _init() {\n        const changes = this._editor.getLineChanges();\n        if (!changes) {\n            return;\n        }\n    }\n    _onDiffUpdated() {\n        this._init();\n        this._compute(this._editor.getLineChanges());\n        if (this.revealFirst) {\n            // Only reveal first on first non-null changes\n            if (this._editor.getLineChanges() !== null) {\n                this.revealFirst = false;\n                this.nextIdx = -1;\n                this.next(1 /* Immediate */);\n            }\n        }\n    }\n    _compute(lineChanges) {\n        // new ranges\n        this.ranges = [];\n        if (lineChanges) {\n            // create ranges from changes\n            lineChanges.forEach((lineChange) => {\n                if (!this._options.ignoreCharChanges && lineChange.charChanges) {\n                    lineChange.charChanges.forEach((charChange) => {\n                        this.ranges.push({\n                            rhs: true,\n                            range: new Range(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn)\n                        });\n                    });\n                }\n                else {\n                    if (lineChange.modifiedEndLineNumber === 0) {\n                        // a deletion\n                        this.ranges.push({\n                            rhs: true,\n                            range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedStartLineNumber + 1, 1)\n                        });\n                    }\n                    else {\n                        // an insertion or modification\n                        this.ranges.push({\n                            rhs: true,\n                            range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber + 1, 1)\n                        });\n                    }\n                }\n            });\n        }\n        // sort\n        this.ranges.sort((left, right) => Range.compareRangesUsingStarts(left.range, right.range));\n        this._onDidUpdate.fire(this);\n    }\n    _initIdx(fwd) {\n        let found = false;\n        const position = this._editor.getPosition();\n        if (!position) {\n            this.nextIdx = 0;\n            return;\n        }\n        for (let i = 0, len = this.ranges.length; i < len && !found; i++) {\n            const range = this.ranges[i].range;\n            if (position.isBeforeOrEqual(range.getStartPosition())) {\n                this.nextIdx = i + (fwd ? 0 : -1);\n                found = true;\n            }\n        }\n        if (!found) {\n            // after the last change\n            this.nextIdx = fwd ? 0 : this.ranges.length - 1;\n        }\n        if (this.nextIdx < 0) {\n            this.nextIdx = this.ranges.length - 1;\n        }\n    }\n    _move(fwd, scrollType) {\n        assert.ok(!this.disposed, 'Illegal State - diff navigator has been disposed');\n        if (!this.canNavigate()) {\n            return;\n        }\n        if (this.nextIdx === -1) {\n            this._initIdx(fwd);\n        }\n        else if (fwd) {\n            this.nextIdx += 1;\n            if (this.nextIdx >= this.ranges.length) {\n                this.nextIdx = 0;\n            }\n        }\n        else {\n            this.nextIdx -= 1;\n            if (this.nextIdx < 0) {\n                this.nextIdx = this.ranges.length - 1;\n            }\n        }\n        const info = this.ranges[this.nextIdx];\n        this.ignoreSelectionChange = true;\n        try {\n            const pos = info.range.getStartPosition();\n            this._editor.setPosition(pos);\n            this._editor.revealRangeInCenter(info.range, scrollType);\n        }\n        finally {\n            this.ignoreSelectionChange = false;\n        }\n    }\n    canNavigate() {\n        return this.ranges && this.ranges.length > 0;\n    }\n    next(scrollType = 0 /* Smooth */) {\n        this._move(true, scrollType);\n    }\n    previous(scrollType = 0 /* Smooth */) {\n        this._move(false, scrollType);\n    }\n    dispose() {\n        super.dispose();\n        this.ranges = [];\n        this.disposed = true;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as objects from '../../../base/common/objects.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { CodeEditorWidget } from './codeEditorWidget.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\nlet EmbeddedCodeEditorWidget = class EmbeddedCodeEditorWidget extends CodeEditorWidget {\n    constructor(domElement, options, parentEditor, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService, languageConfigurationService, languageFeaturesService) {\n        super(domElement, Object.assign(Object.assign({}, parentEditor.getRawOptions()), { overflowWidgetsDomNode: parentEditor.getOverflowWidgetsDomNode() }), {}, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService, languageConfigurationService, languageFeaturesService);\n        this._parentEditor = parentEditor;\n        this._overwriteOptions = options;\n        // Overwrite parent's options\n        super.updateOptions(this._overwriteOptions);\n        this._register(parentEditor.onDidChangeConfiguration((e) => this._onParentConfigurationChanged(e)));\n    }\n    getParentEditor() {\n        return this._parentEditor;\n    }\n    _onParentConfigurationChanged(e) {\n        super.updateOptions(this._parentEditor.getRawOptions());\n        super.updateOptions(this._overwriteOptions);\n    }\n    updateOptions(newOptions) {\n        objects.mixin(this._overwriteOptions, newOptions, true);\n        super.updateOptions(this._overwriteOptions);\n    }\n};\nEmbeddedCodeEditorWidget = __decorate([\n    __param(3, IInstantiationService),\n    __param(4, ICodeEditorService),\n    __param(5, ICommandService),\n    __param(6, IContextKeyService),\n    __param(7, IThemeService),\n    __param(8, INotificationService),\n    __param(9, IAccessibilityService),\n    __param(10, ILanguageConfigurationService),\n    __param(11, ILanguageFeaturesService)\n], EmbeddedCodeEditorWidget);\nexport { EmbeddedCodeEditorWidget };\n"],"names":["RenderingContext","viewLayout","viewportData","viewLines","_renderingContextBrand","undefined","_viewLines","range","includeNewLines","this","linesVisibleRangesForRange","position","visibleRangeForPosition","_restrictedRenderingContextBrand","_viewLayout","scrollWidth","getScrollWidth","scrollHeight","getScrollHeight","visibleRange","bigNumbersDelta","vInfo","getCurrentViewport","scrollTop","top","scrollLeft","left","viewportWidth","width","viewportHeight","height","absoluteTop","lineNumber","getVerticalOffsetForLineNumber","getDecorationsInViewport","LineVisibleRanges","outsideRenderedLine","ranges","HorizontalRange","_horizontalRangeBrand","Math","round","result","Array","length","i","len","FloatHorizontalRange","_floatHorizontalRangeBrand","a","b","HorizontalPosition","originalLeft","VisibleRanges","ViewController","configuration","viewModel","userInputEvents","commandDelegate","text","pasteOnNewLine","multicursorText","mode","paste","type","replacePrevCharCnt","replaceNextCharCnt","positionDelta","compositionType","startComposition","endComposition","cut","modelSelection","CoreNavigationCommands","source","selection","viewPosition","minColumn","getLineMinColumn","column","Position","data","options","get","altKey","ctrlKey","metaKey","selectionClipboardIsOn","platform","columnSelection","middleButton","_columnSelect","mouseColumn","inSelectionMode","startedOnLineNumbers","_hasMulticursorModifier","_lastCursorLineSelect","_createCursor","_lineSelectDrag","_lineSelect","mouseDownCount","_selectAll","_lastCursorLineSelectDrag","onInjectedText","_lastCursorWordSelect","_wordSelectDrag","_wordSelect","_hasNonMulticursorModifier","shiftKey","_lastCursorMoveToSelect","_moveToSelect","moveTo","_validateViewColumn","_convertViewToModelPosition","_usualArgs","doColumnSelect","wholeLine","coordinatesConverter","convertViewPositionToModelPosition","e","emitKeyDown","emitKeyUp","emitContextMenu","emitMouseMove","emitMouseLeave","emitMouseUp","emitMouseDown","emitMouseDrag","emitMouseDrop","emitMouseDropCanceled","emitMouseWheel","_a","RenderedLinesCollection","createLine","_createLine","_set","rendLineNumberStart","lines","_lines","_rendLineNumberStart","lineIndex","Error","deleteFromLineNumber","deleteToLineNumber","getCount","startLineNumber","getStartLineNumber","endLineNumber","getEndLineNumber","deleteCnt","deleteStartIndex","deleteCount","deleteAboveCount","splice","changeFromLineNumber","changeToLineNumber","someoneNotified","changedLineNumber","onContentChanged","insertFromLineNumber","insertToLineNumber","insertCnt","newLines","insertIndex","beforeLines","slice","afterLines","deletedLines","concat","notifiedSomeone","rng","toLineNumber","fromLineNumber","from","max","to","min","onTokensChanged","VisibleLinesCollection","host","_host","domNode","_createDomNode","_linesCollection","createVisibleLine","createFastDomNode","document","createElement","setClassName","setPosition","setAttribute","hasChanged","flush","onLinesChanged","deleted","onLinesDeleted","lineDomNode","getDomNode","removeChild","onLinesInserted","scrollTopChanged","getLine","inp","_get","renderer","ViewLayerRenderer","ctx","linesLength","resCtx","render","relativeVerticalOffset","inContext","stopLineNumber","deltaTop","x","_finishRendering","_renderUntouchedLines","_insertLinesBefore","removeCnt","_removeLinesBefore","_insertLinesAfter","_removeLinesAfter","startIndex","endIndex","deltaLN","layoutLine","newLinesLen","removeCount","removeIndex","domNodeIsEmpty","newLinesHTML","wasNew","_ttPolicy","createHTML","lastChild","innerHTML","insertAdjacentHTML","currChild","line","setDomNode","previousSibling","invalidLinesHTML","wasInvalid","hugeDomNode","firstChild","parentNode","replaceChild","sb","_sb","reset","hadNewLine","renderLine","_finishRenderingNewLines","build","hadInvalidLine","_finishRenderingInvalidLines","window","trustedTypes","createPolicy","value","createStringBuilder","ViewOverlays","context","_visibleLines","_dynamicOverlays","_isFocused","shouldRender","dispose","ViewOverlayLine","_context","overlay","push","onConfigurationChanged","getVisibleLine","onFlushed","isFocused","onScrollChanged","onZonesChanged","toRender","filter","dynamicOverlay","prepareRender","onDidRender","_viewOverlaysRender","toggleClassName","renderLines","ViewPart","dynamicOverlays","_configuration","_lineHeight","_domNode","_renderedContent","appendASCIIString","String","setTop","setHeight","ContentViewOverlays","layoutInfo","_contentWidth","contentWidth","scrollWidthChanged","setWidth","MarginViewOverlays","_contentLeft","contentLeft","applyFontInfo","scrollHeightChanged","addEventHandler","removeEventHandler","ViewEventHandler","PartFingerprints","target","partId","r","getAttribute","parseInt","child","stopAt","resultLen","body","nodeType","ELEMENT_NODE","read","parentElement","Uint8Array","ViewUserInputEvents","onKeyDown","onKeyUp","onContextMenu","onMouseMove","onMouseLeave","onMouseDown","onMouseUp","onMouseDrag","onMouseDrop","onMouseDropCanceled","onMouseWheel","_coordinatesConverter","_convertViewToModelMouseEvent","event","_convertViewToModelMouseTarget","convertViewToModelMouseTarget","Object","assign","convertViewRangeToModelRange","__decorate","decorators","key","desc","d","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","EDITOR_ID","ModelData","model","view","hasRealView","listenersToRemove","onBeforeDetached","CodeEditorWidget","domElement","_options","codeEditorWidgetOptions","instantiationService","codeEditorService","commandService","contextKeyService","themeService","notificationService","accessibilityService","languageConfigurationService","languageFeaturesService","_onDidDispose","_register","Emitter","onDidDispose","_onDidChangeModelContent","onDidChangeModelContent","_onDidChangeModelLanguage","onDidChangeModelLanguage","_onDidChangeModelLanguageConfiguration","onDidChangeModelLanguageConfiguration","_onDidChangeModelOptions","onDidChangeModelOptions","_onDidChangeModelDecorations","onDidChangeModelDecorations","_onDidChangeConfiguration","onDidChangeConfiguration","_onDidChangeModel","onDidChangeModel","_onDidChangeCursorPosition","onDidChangeCursorPosition","_onDidChangeCursorSelection","onDidChangeCursorSelection","_onDidAttemptReadOnlyEdit","onDidAttemptReadOnlyEdit","_onDidLayoutChange","onDidLayoutChange","_editorTextFocus","BooleanEventEmitter","onDidFocusEditorText","onDidChangeToTrue","onDidBlurEditorText","onDidChangeToFalse","_editorWidgetFocus","onDidFocusEditorWidget","onDidBlurEditorWidget","_onWillType","onWillType","_onDidType","onDidType","_onDidCompositionStart","onDidCompositionStart","_onDidCompositionEnd","onDidCompositionEnd","_onDidPaste","onDidPaste","_onMouseUp","_onMouseDown","_onMouseDrag","_onMouseDrop","_onMouseDropCanceled","_onContextMenu","_onMouseMove","_onMouseLeave","_onMouseWheel","_onKeyUp","_onKeyDown","_onDidContentSizeChange","onDidContentSizeChange","_onDidScrollChange","onDidScrollChange","_onDidChangeViewZones","onDidChangeViewZones","_onDidChangeHiddenAreas","onDidChangeHiddenAreas","_bannerDomNode","contributions","_domElement","_overflowWidgetsDomNode","overflowWidgetsDomNode","_id","_decorationTypeKeysToIds","_decorationTypeSubtypes","_telemetryData","telemetryData","_createConfiguration","isSimpleWidget","onDidChange","fire","_contextKeyService","createScoped","_notificationService","_codeEditorService","_commandService","_themeService","EditorContextKeysManager","EditorModeContext","_instantiationService","createChild","ServiceCollection","IContextKeyService","_modelData","_contributions","_actions","_focusTracker","CodeEditorWidgetFocusTracker","onChange","setValue","hasFocus","_contentWidgets","_overlayWidgets","isArray","EditorExtensionsRegistry","id","onUnexpectedError","contribution","createInstance","ctor","err","forEach","action","internalAction","InternalEditorAction","label","alias","withNullAsUndefined","precondition","invokeFunction","accessor","Promise","resolve","runEditorCommand","addCodeEditor","EditorConfiguration","getEditorType","editorCommon","removeCodeEditor","keys","contributionId","_removeDecorationTypes","_postDetachModelCleanup","_detachModel","fn","newOptions","updateOptions","getRawOptions","WordOperations","preserveBOM","eolPreference","lineEnding","getValue","newValue","_model","hasTextFocus","detachedModel","_attachModel","hasModel","focus","oldModelUrl","uri","newModelUrl","decorationType","subTypes","subType","_removeDecorationType","getVisibleRanges","getVisibleRangesPlusViewportAboveBelow","getWhitespaces","_getVerticalOffsetForPosition","setHiddenAreas","map","Range","rawPosition","validatePosition","tabSize","getOptions","CursorColumns","getLineContent","getPosition","setSelections","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","modelRange","verticalType","revealHorizontal","scrollType","validatedModelRange","validateRange","viewRange","convertModelRangeToViewRange","revealRange","_revealLine","revealType","_sendRevealRange","_revealPosition","getSelection","getSelections","something","isSelection","Selection","isRange","_setSelectionImpl","startColumn","endColumn","sel","_revealLines","revealVerticalInCenter","_revealRange","reason","getContentWidth","getCurrentScrollLeft","getContentHeight","getCurrentScrollTop","newScrollLeft","setScrollPosition","newScrollTop","contributionsState","saveViewState","cursorState","saveCursorState","viewState","saveState","s","codeEditorState","restoreCursorState","restoreViewState","reducedState","reduceRestoreState","restoreState","getActions","isSupported","handlerId","payload","_startComposition","_endComposition","args","_type","_compositionType","replaceCharCnt","_paste","_cut","getAction","run","then","_triggerEditorCommand","_triggerCommand","executeCommand","startPosition","getStartPosition","endPosition","languageId","command","pushStackElement","popStackElement","edits","endCursorState","cursorStateComputer","executeEdits","commands","executeCommands","callback","changeDecorations","getLineDecorations","filterValidationDecorations","getDecorationsInRange","oldDecorations","newDecorations","deltaDecorations","decorationTypeKey","oldDecorationsIds","hasOwnProperty","cssClassName","createOverviewRuler","browserEvent","delegateVerticalScrollbarMouseDown","dimension","observeContainer","widget","widgetData","getId","console","warn","addContentWidget","widgetId","layoutContentWidget","removeContentWidget","addOverlayWidget","layoutOverlayWidget","removeOverlayWidget","change","clientX","clientY","getTargetAtClientPoint","getScrollTop","getOffsetForColumn","glyphMarginWidth","lineNumbersWidth","decorationsWidth","getScrollLeft","forceRedraw","setAriaOptions","domNodeHeight","contains","setReservedHeight","prepend","getLanguageId","setIsDominatedByLongLines","isDominatedByLongLines","setModelLineCount","getLineCount","onBeforeAttached","ViewModel","DOMLineBreaksComputerFactory","MonospaceLineBreaksComputerFactory","dom","scheduleAtNextAnimationFrame","onDidChangeDecorations","onDidChangeLanguage","onDidChangeLanguageConfiguration","onDidChangeContent","onDidChangeOptions","onWillDispose","setModel","onEvent","kind","reachedMaxCursorCount","nls","CursorsController","positions","selections","e1","secondaryPositions","e2","secondarySelections","modelVersionId","oldSelections","oldModelVersionId","_createView","appendChild","toString","viewUserInputEvents","View","getColorTheme","removeAllDecorationsWithOwnerId","removeDomNode","removeAttribute","removeDecorationType","modelData","modelLineNumber","modelColumn","modelPosition","convertModelPositionToViewPosition","Disposable","IInstantiationService","ICodeEditorService","ICommandService","IThemeService","INotificationService","IAccessibilityService","ILanguageConfigurationService","ILanguageFeaturesService","_onDidChangeToTrue","_onDidChangeToFalse","_value","editor","_editor","createKey","_editorSimpleInput","EditorContextKeys","_editorFocus","_textInputFocus","_editorTabMovesFocus","_editorReadonly","_inDiffEditor","_editorColumnSelection","_hasMultipleSelections","_hasNonEmptySelection","_canUndo","_canRedo","_updateFromConfig","_updateFromSelection","_updateFromFocus","_updateFromModel","set","some","isEmpty","hasWidgetFocus","getModel","Boolean","canUndo","canRedo","_languageFeaturesService","_langId","_hasCompletionItemProvider","_hasCodeActionsProvider","_hasCodeLensProvider","_hasDefinitionProvider","_hasDeclarationProvider","_hasImplementationProvider","_hasTypeDefinitionProvider","_hasHoverProvider","_hasDocumentHighlightProvider","_hasDocumentSymbolProvider","_hasReferenceProvider","_hasRenameProvider","_hasSignatureHelpProvider","_hasInlayHintsProvider","_hasDocumentFormattingProvider","_hasDocumentSelectionFormattingProvider","_hasMultipleDocumentFormattingProvider","_hasMultipleDocumentSelectionFormattingProvider","_isInWalkThrough","update","_update","completionProvider","codeActionProvider","codeLensProvider","definitionProvider","declarationProvider","implementationProvider","typeDefinitionProvider","hoverProvider","documentHighlightProvider","documentSymbolProvider","referenceProvider","renameProvider","documentFormattingEditProvider","documentRangeFormattingEditProvider","signatureHelpProvider","inlayHintsProvider","bufferChangeEvents","has","all","scheme","Schemas","_onChange","_hasFocus","_domFocusTracker","trackFocus","onDidFocus","onDidBlur","squigglyStart","encodeURIComponent","squigglyEnd","getSquigglySVGData","color","dotdotdotStart","dotdotdotEnd","registerThemingParticipant","theme","collector","errorBorderColor","getColor","editorErrorBorder","addRule","errorForeground","editorErrorForeground","errorBackground","editorErrorBackground","warningBorderColor","editorWarningBorder","warningForeground","editorWarningForeground","warningBackground","editorWarningBackground","infoBorderColor","editorInfoBorder","infoForeground","editorInfoForeground","infoBackground","editorInfoBackground","hintBorderColor","editorHintBorder","hintForeground","editorHintForeground","unnecessaryForeground","editorUnnecessaryCodeOpacity","rgba","unnecessaryBorder","editorUnnecessaryCodeBorder","deprecatedForeground","editorForeground","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","step","next","rejected","done","apply","DiffEntry","originalLineStart","originalLineEnd","modifiedLineStart","modifiedLineEnd","Diff","entries","diffReviewInsertIcon","registerIcon","Codicon","diffReviewRemoveIcon","diffReviewCloseIcon","DiffReview","diffEditor","_languageService","_width","_diffEditor","_isVisible","shadow","actionBarContainer","_actionBar","ActionBar","Action","ThemeIcon","hide","icon","_content","scrollbar","DomScrollableElement","onDidUpdateDiff","_diffs","_compute","_render","getModifiedEditor","addStandardDisposableListener","preventDefault","row","findParentWithClass","_goToRow","equals","_getNextRow","_getPrevRow","accept","_currentDiff","index","currentIndex","_findDiffIndex","setSelection","doLayout","jumpToLineNumber","current","_getCurrentFocusedRow","isNaN","revealPosition","readOnly","previousElementSibling","_getFirstRow","nextElementSibling","querySelector","activeElement","test","className","prev","tabIndex","scanDomNode","setDisplay","lineChanges","getLineChanges","originalModel","getOriginalEditor","modifiedModel","_mergeAdjacent","pos","diff","originalOptions","modifiedOptions","originalModelOpts","modifiedModelOpts","clearNode","diffIndex","diffs","container","minOriginalLine","maxOriginalLine","minModifiedLine","maxModifiedLine","diffEntry","header","cell","originalChangedLinesCnt","modifiedChangedLinesCnt","createTextNode","getAriaLines","originalChangedLinesCntAria","modifiedChangedLinesCntAria","comment","lineHeight","modLine","_renderSection","languageIdCodec","originalLineCount","modifiedLineCount","diffsLength","lineChange","originalStart","originalStartLineNumber","originalEnd","originalEndLineNumber","modifiedStart","modifiedStartLineNumber","modifiedEnd","modifiedEndLineNumber","rLength","originalEqualAbove","modifiedEqualAbove","minOriginal","minModified","prevLineChange","fromOriginal","fromModified","delta","originalEqualBelow","modifiedEqualBelow","maxOriginal","maxModified","nextLineChange","toOriginal","toModified","curr","thisDiff","currLast","thisFirst","getType","dest","rowClassName","lineNumbersExtraClassName","spacerIcon","cnt","originalLayoutInfo","originalLineNumbersWidth","modifiedLayoutInfo","modifiedLineNumbersWidth","originalLine","modifiedLine","style","minWidth","originalLineNumber","innerText","modifiedLineNumber","paddingRight","spacer","spacerCodicon","lineContent","html","_renderLine","ariaLabel","fontInfo","lineTokens","LineTokens","isBasicASCII","ViewLineRenderingData","mightContainNonBasicASCII","containsRTL","mightContainRTL","renderViewLine","RenderLineInput","isMonospace","canUseHalfwidthRightwardsArrow","spaceWidth","middotWidth","wsmiddotWidth","EditorFontLigatures","ILanguageService","lineNumbers","editorLineNumbers","scrollbarShadow","DiffReviewNext","ContextKeyExpr","kbOpts","kbExpr","primary","weight","findFocusedDiffEditor","diffReviewNext","EditorAction","DiffReviewPrev","diffReviewPrev","diffEditors","listDiffEditors","activeCodeEditor","getActiveCodeEditor","registerEditorAction","InlineDiffMargin","_viewZoneId","_marginDomNode","_contextMenuService","_clipboardService","_visibility","zIndex","_diffActions","getOption","lineFeed","getEOL","right","visibility","actions","isDeletion","deletedText","getValueInRange","writeText","currentLineNumberOffset","copyLineAction","eof","getEndOfLineSequence","getLineMaxColumn","showContextMenu","y","getAnchor","autoSelectFirstItem","getDomNodePagePosition","pad","floor","posx","detail","viewZoneId","_updateLightBulbPosition","rightButton","posy","marginDomNode","offset","lineNumberOffset","newTop","viewLineCounts","acc","VisualEditorState","_zones","_inlineDiffMargins","_zonesMap","_decorations","allViewZones","z","changeViewZones","viewChangeAccessor","zoneId","removeZone","overviewRuler","restoreScrollState","scrollState","StableEditorScrollState","zones","viewZone","suppressMouseDown","addZone","getValueLength","restore","decorations","setZones","overviewZones","DIFF_EDITOR_ID","diffInsertIcon","diffRemoveIcon","ttPolicy","DiffEditorWidget","clipboardService","editorWorkerService","contextMenuService","_editorProgressService","_onDidUpdateDiff","_lastOriginalWarning","_lastModifiedWarning","_editorWorkerService","_state","_updatingDiffProgress","validateDiffEditorOptions","enableSplitViewResizing","renderSideBySide","maxComputationTime","maxFileSize","ignoreTrimWhitespace","renderIndicators","originalEditable","diffCodeLens","renderOverviewRuler","diffWordWrap","isInEmbeddedEditor","_updateDecorationsRunner","RunOnceScheduler","_updateDecorations","_containerDomElement","_getClassName","_overviewViewportDomElement","_overviewDomElement","_modifiedEditor","_originalDomNode","_modifiedDomNode","_beginUpdateDecorationsTimeout","_currentlyChangingViewZones","_diffComputationToken","_originalEditorState","_modifiedEditorState","_isHandlingScrollEvent","_elementSizeObserver","ElementSizeObserver","_onDidContainerSizeChanged","automaticLayout","startObserving","_diffComputationResult","_originalEditor","_createLeftHandSideEditor","originalEditor","_createRightHandSideEditor","modifiedEditor","_originalOverviewRuler","_modifiedOverviewRuler","_reviewPane","_setStrategy","DiffEditorWidgetSideBySide","_createDataSource","DiffEditorWidgetInline","onDidColorThemeChange","t","_strategy","applyColors","schedule","addDiffEditor","newState","show","_layoutOverviewRulers","_createInnerEditor","_adjustOptionsForLeftHandSide","scrollLeftChanged","_layoutOverviewViewport","_onViewZonesChanged","cancel","_beginUpdateDecorationsSoon","isInDiffLeftEditorKey","ONE_OVERVIEW_WIDTH","contentHeight","contentHeightChanged","contentWidthChanged","_adjustOptionsForRightHandSide","isInDiffRightEditorKey","editorWidgetOptions","removeDiffEditor","clearTimeout","_cleanViewZonesAndDecorations","changes","_newOptions","changed","beginUpdateDecorations","beginUpdateDecorationsSoon","_beginUpdateDecorations","setEnableSplitViewResizing","original","modified","setScrollTop","_setState","_recreateOverviewRulers","getVisibleColumnFromPosition","revealLine","revealLineInCenter","revealLineInCenterIfOutsideViewport","revealLineNearTop","revealPositionInCenter","revealPositionInCenterIfOutsideViewport","revealPositionNearTop","revealLines","revealLinesInCenter","revealLinesInCenterIfOutsideViewport","revealLinesNearTop","revealRangeInCenter","revealRangeInCenterIfOutsideViewport","revealRangeNearTop","revealRangeNearTopIfOutsideViewport","revealRangeAtTop","getSupportedActions","diffEditorState","observe","trigger","_doLayout","isVisible","getHeight","reviewHeight","_getReviewHeight","freeSpace","ENTIRE_DIFF_OVERVIEW_WIDTH","getLayoutInfo","setLayout","setTimeout","UPDATE_DIFF_DECORATIONS_DELAY","currentOriginalModel","currentModifiedModel","currentToken","diffLimit","canSyncModelForDiff","bufferTextLength","computeDiff","error","_equals","clean","foreignOriginal","getForeignViewZones","foreignModified","diffDecorations","getEditorsDiffDecorations","clonedOptions","inDiffEditor","vertical","folding","codeLens","fixedOverflowWidgets","minimap","enabled","_adjustOptionsForSubEditor","wordWrapOverride1","wordWrapOverride2","originalAriaLabel","extraEditorClassName","modifiedAriaLabel","revealHorizontalRightPadding","EditorOptions","verticalHasArrows","getWidth","splitPoint","layout","_computeOverviewViewport","computedAvailableSize","computedRepresentableSize","computedRatio","getContainerDomNode","relayoutEditors","newStrategy","startLineNumberExtractor","mid","midStart","midEnd","_getLineChangeAtOrBeforeLineNumber","originalEquivalentLineNumber","modifiedEquivalentLineNumber","lineChangeOriginalLength","lineChangeModifiedLength","equivalentLineNumber","_getEquivalentLineForOriginalLineNumber","_getEquivalentLineForModifiedLineNumber","getThemeTypeSelector","IClipboardService","IEditorWorkerService","IContextMenuService","IEditorProgressService","DiffEditorWidgetStyle","dataSource","_dataSource","_insertColor","_removeColor","newInsertColor","diffOverviewRulerInserted","diffInserted","defaultInsertColor","transparent","newRemoveColor","diffOverviewRulerRemoved","diffRemoved","defaultRemoveColor","hasChanges","originalWhitespaces","modifiedWhitespaces","sort","afterLineNumber","_getViewZones","originalDecorations","_getOriginalEditorDecorations","modifiedDecorations","_getModifiedEditorDecorations","ForeignViewZonesIterator","_source","_index","advance","ViewZonesComputer","_lineChanges","_originalForeignVZ","_modifiedForeignVZ","originalLineHeight","modifiedLineHeight","originalHasWrapping","wrappingColumn","modifiedHasWrapping","hasWrapping","originalCoordinatesConverter","_getViewModel","modifiedCoordinatesConverter","originalEndEquivalentLineNumber","modifiedEndEquivalentLineNumber","sortMyViewZones","addAndCombineIfPossible","destination","item","lastItem","heightInLines","modifiedForeignVZ","originalForeignVZ","lastOriginalLineNumber","lastModifiedLineNumber","_getViewLineCount","stepOriginal","stepModified","count","originalViewLineCount","getModelLineViewLineCount","modifiedViewLineCount","viewZoneLineNumber","_createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion","isChangeOrInsert","_produceOriginalFromDiff","isChangeOrDelete","_produceModifiedFromDiff","stepOriginalIndex","stepModifiedIndex","originalDelta","modifiedDelta","shouldNotShrink","_ensureDomNodes","getViewRange","createFakeLinesDiv","createDecoration","DECORATIONS","charDelete","ModelDecorationOptions","description","charDeleteWholeLine","isWholeLine","charInsert","charInsertWholeLine","lineInsert","marginClassName","lineInsertWithSign","linesDecorationsClassName","lineDelete","lineDeleteWithSign","lineDeleteMargin","_disableSash","_sashRatio","_sashPosition","_startSashPosition","_sash","Sash","orientation","state","onDidStart","_onSashDragStart","_onSashDrag","onDidEnd","_onSashDragEnd","onDidReset","_onSashReset","newDisableSash","sashRatio","w","sashPosition","midPoint","MINIMUM_EDITOR_WIDTH","currentX","startX","sash","SideBySideViewZonesComputer","getViewZones","overviewZoneColor","originalViewModel","charChanges","OverviewRulerZone","charChange","originalStartColumn","getLineFirstNonWhitespaceColumn","originalEndColumn","getLineLastNonWhitespaceColumn","modifiedViewModel","modifiedStartColumn","modifiedEndColumn","_decorationsLeft","decorationsLeft","InlineViewZonesComputer","zoneIndex","zone","zoneHeightInLines","_originalModel","_renderIndicators","_pendingLineChange","_pendingViewZones","_lineBreaksComputer","createLineBreaksComputer","_finalize","MOUSE_CURSOR_TEXT_CSS_CLASS_NAME","minWidthInPx","addRequest","modifiedEditorOptions","disableMonospaceOptimizations","typicalHalfwidthCharacterWidth","scrollBeyondLastColumn","lineDecorationsWidth","stopRenderingLineAfter","renderWhitespace","renderControlCharacters","fontLigatures","lineBreaks","finalize","lineBreakIndex","InlineDecoration","hasCharChanges","maxCharsPerLine","renderedLineCount","getLineTokens","lineBreakData","actualDecorations","LineDecoration","lastBreakOffset","breakOffsets","breakOffset","viewLineTokens","sliceAndInflate","viewLineContent","substring","_renderOriginalLine","marginDomNode2","afterColumn","trustedhtml","output","marginElement","characterMapping","getAbsoluteOffset","lineCount","defaults","validateBooleanOption","clampedInt","defaultValue","validateStringSetOption","added","lineAdded","diffInsertedLine","gutterAdded","diffInsertedLineGutter","removed","lineRemoved","diffRemovedLine","gutterRemoved","diffRemovedLineGutter","addedOutline","diffInsertedOutline","removedOutline","diffRemovedOutline","border","diffBorder","scrollbarSliderBackgroundColor","scrollbarSliderBackground","scrollbarSliderHoverBackgroundColor","scrollbarSliderHoverBackground","scrollbarSliderActiveBackgroundColor","scrollbarSliderActiveBackground","diffDiagonalFillColor","diffDiagonalFill","defaultOptions","followsCaret","ignoreCharChanges","alwaysRevealFirst","DiffNavigator","_onDidUpdate","objects","disposed","nextIdx","ignoreSelectionChange","revealFirst","_onDiffUpdated","_init","rhs","fwd","found","isBeforeOrEqual","assert","canNavigate","_initIdx","info","_move","EmbeddedCodeEditorWidget","parentEditor","getOverflowWidgetsDomNode","_parentEditor","_overwriteOptions","_onParentConfigurationChanged"],"sourceRoot":""}