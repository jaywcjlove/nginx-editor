{"version":3,"file":"static/js/monaco-editor-vendor.818aa91e.e6e9d5fa.js","mappings":"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","sources":["../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/getHover.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hoverOperation.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/contentHover.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/marginHover.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/markerHoverParticipant.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hover.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hoverTypes.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/markdownHoverParticipant.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/browser/inPlaceReplaceCommand.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/browser/inPlaceReplace.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/indentation/browser/indentUtils.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/indentation/browser/indentation.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport class HoverProviderResult {\n    constructor(provider, hover, ordinal) {\n        this.provider = provider;\n        this.hover = hover;\n        this.ordinal = ordinal;\n    }\n}\nfunction executeProvider(provider, ordinal, model, position, token) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const result = yield Promise.resolve(provider.provideHover(model, position, token));\n            if (result && isValid(result)) {\n                return new HoverProviderResult(provider, result, ordinal);\n            }\n        }\n        catch (err) {\n            onUnexpectedExternalError(err);\n        }\n        return undefined;\n    });\n}\nexport function getHover(registry, model, position, token) {\n    const providers = registry.ordered(model);\n    const promises = providers.map((provider, index) => executeProvider(provider, index, model, position, token));\n    return AsyncIterableObject.fromPromises(promises).coalesce();\n}\nexport function getHoverPromise(registry, model, position, token) {\n    return getHover(registry, model, position, token).map(item => item.hover).toPromise();\n}\nregisterModelAndPositionCommand('_executeHoverProvider', (accessor, model, position) => {\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    return getHoverPromise(languageFeaturesService.hoverProvider, model, position, CancellationToken.None);\n});\nfunction isValid(result) {\n    const hasRange = (typeof result.range !== 'undefined');\n    const hasHtmlContent = typeof result.contents !== 'undefined' && result.contents && result.contents.length > 0;\n    return hasRange && hasHtmlContent;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { createCancelableAsyncIterable, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nexport class HoverResult {\n    constructor(value, isComplete, hasLoadingMessage) {\n        this.value = value;\n        this.isComplete = isComplete;\n        this.hasLoadingMessage = hasLoadingMessage;\n    }\n}\n/**\n * Computing the hover is very fine tuned.\n *\n * Suppose the hover delay is 300ms (the default). Then, when resting the mouse at an anchor:\n * - at 150ms, the async computation is triggered (i.e. semantic hover)\n *   - if async results already come in, they are not rendered yet.\n * - at 300ms, the sync computation is triggered (i.e. decorations, markers)\n *   - if there are sync or async results, they are rendered.\n * - at 900ms, if the async computation hasn't finished, a \"Loading...\" result is added.\n */\nexport class HoverOperation extends Disposable {\n    constructor(_editor, _computer) {\n        super();\n        this._editor = _editor;\n        this._computer = _computer;\n        this._onResult = this._register(new Emitter());\n        this.onResult = this._onResult.event;\n        this._firstWaitScheduler = this._register(new RunOnceScheduler(() => this._triggerAsyncComputation(), 0));\n        this._secondWaitScheduler = this._register(new RunOnceScheduler(() => this._triggerSyncComputation(), 0));\n        this._loadingMessageScheduler = this._register(new RunOnceScheduler(() => this._triggerLoadingMessage(), 0));\n        this._state = 0 /* HoverOperationState.Idle */;\n        this._asyncIterable = null;\n        this._asyncIterableDone = false;\n        this._result = [];\n    }\n    dispose() {\n        if (this._asyncIterable) {\n            this._asyncIterable.cancel();\n            this._asyncIterable = null;\n        }\n        super.dispose();\n    }\n    get _hoverTime() {\n        return this._editor.getOption(57 /* EditorOption.hover */).delay;\n    }\n    get _firstWaitTime() {\n        return this._hoverTime / 2;\n    }\n    get _secondWaitTime() {\n        return this._hoverTime - this._firstWaitTime;\n    }\n    get _loadingMessageTime() {\n        return 3 * this._hoverTime;\n    }\n    _setState(state, fireResult = true) {\n        this._state = state;\n        if (fireResult) {\n            this._fireResult();\n        }\n    }\n    _triggerAsyncComputation() {\n        this._setState(2 /* HoverOperationState.SecondWait */);\n        this._secondWaitScheduler.schedule(this._secondWaitTime);\n        if (this._computer.computeAsync) {\n            this._asyncIterableDone = false;\n            this._asyncIterable = createCancelableAsyncIterable(token => this._computer.computeAsync(token));\n            (() => __awaiter(this, void 0, void 0, function* () {\n                var _a, e_1, _b, _c;\n                try {\n                    try {\n                        for (var _d = true, _e = __asyncValues(this._asyncIterable), _f; _f = yield _e.next(), _a = _f.done, !_a;) {\n                            _c = _f.value;\n                            _d = false;\n                            try {\n                                const item = _c;\n                                if (item) {\n                                    this._result.push(item);\n                                    this._fireResult();\n                                }\n                            }\n                            finally {\n                                _d = true;\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                    this._asyncIterableDone = true;\n                    if (this._state === 3 /* HoverOperationState.WaitingForAsync */ || this._state === 4 /* HoverOperationState.WaitingForAsyncShowingLoading */) {\n                        this._setState(0 /* HoverOperationState.Idle */);\n                    }\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                }\n            }))();\n        }\n        else {\n            this._asyncIterableDone = true;\n        }\n    }\n    _triggerSyncComputation() {\n        if (this._computer.computeSync) {\n            this._result = this._result.concat(this._computer.computeSync());\n        }\n        this._setState(this._asyncIterableDone ? 0 /* HoverOperationState.Idle */ : 3 /* HoverOperationState.WaitingForAsync */);\n    }\n    _triggerLoadingMessage() {\n        if (this._state === 3 /* HoverOperationState.WaitingForAsync */) {\n            this._setState(4 /* HoverOperationState.WaitingForAsyncShowingLoading */);\n        }\n    }\n    _fireResult() {\n        if (this._state === 1 /* HoverOperationState.FirstWait */ || this._state === 2 /* HoverOperationState.SecondWait */) {\n            // Do not send out results before the hover time\n            return;\n        }\n        const isComplete = (this._state === 0 /* HoverOperationState.Idle */);\n        const hasLoadingMessage = (this._state === 4 /* HoverOperationState.WaitingForAsyncShowingLoading */);\n        this._onResult.fire(new HoverResult(this._result.slice(0), isComplete, hasLoadingMessage));\n    }\n    start(mode) {\n        if (mode === 0 /* HoverStartMode.Delayed */) {\n            if (this._state === 0 /* HoverOperationState.Idle */) {\n                this._setState(1 /* HoverOperationState.FirstWait */);\n                this._firstWaitScheduler.schedule(this._firstWaitTime);\n                this._loadingMessageScheduler.schedule(this._loadingMessageTime);\n            }\n        }\n        else {\n            switch (this._state) {\n                case 0 /* HoverOperationState.Idle */:\n                    this._triggerAsyncComputation();\n                    this._secondWaitScheduler.cancel();\n                    this._triggerSyncComputation();\n                    break;\n                case 2 /* HoverOperationState.SecondWait */:\n                    this._secondWaitScheduler.cancel();\n                    this._triggerSyncComputation();\n                    break;\n            }\n        }\n    }\n    cancel() {\n        this._firstWaitScheduler.cancel();\n        this._secondWaitScheduler.cancel();\n        this._loadingMessageScheduler.cancel();\n        if (this._asyncIterable) {\n            this._asyncIterable.cancel();\n            this._asyncIterable = null;\n        }\n        this._result = [];\n        this._setState(0 /* HoverOperationState.Idle */, false);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { HoverAction, HoverWidget } from '../../../../base/browser/ui/hover/hoverWidget.js';\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { TokenizationRegistry } from '../../../common/languages.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { HoverParticipantRegistry, HoverRangeAnchor } from './hoverTypes.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { Context as SuggestContext } from '../../suggest/browser/suggest.js';\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nconst $ = dom.$;\nlet ContentHoverController = class ContentHoverController extends Disposable {\n    constructor(_editor, _instantiationService, _keybindingService) {\n        super();\n        this._editor = _editor;\n        this._instantiationService = _instantiationService;\n        this._keybindingService = _keybindingService;\n        this._widget = this._register(this._instantiationService.createInstance(ContentHoverWidget, this._editor));\n        this._currentResult = null;\n        // Instantiate participants and sort them by `hoverOrdinal` which is relevant for rendering order.\n        this._participants = [];\n        for (const participant of HoverParticipantRegistry.getAll()) {\n            this._participants.push(this._instantiationService.createInstance(participant, this._editor));\n        }\n        this._participants.sort((p1, p2) => p1.hoverOrdinal - p2.hoverOrdinal);\n        this._computer = new ContentHoverComputer(this._editor, this._participants);\n        this._hoverOperation = this._register(new HoverOperation(this._editor, this._computer));\n        this._register(this._hoverOperation.onResult((result) => {\n            if (!this._computer.anchor) {\n                // invalid state, ignore result\n                return;\n            }\n            const messages = (result.hasLoadingMessage ? this._addLoadingMessage(result.value) : result.value);\n            this._withResult(new HoverResult(this._computer.anchor, messages, result.isComplete));\n        }));\n        this._register(dom.addStandardDisposableListener(this._widget.getDomNode(), 'keydown', (e) => {\n            if (e.equals(9 /* KeyCode.Escape */)) {\n                this.hide();\n            }\n        }));\n        this._register(TokenizationRegistry.onDidChange(() => {\n            if (this._widget.position && this._currentResult) {\n                this._widget.clear();\n                this._setCurrentResult(this._currentResult); // render again\n            }\n        }));\n    }\n    /**\n     * Returns true if the hover shows now or will show.\n     */\n    maybeShowAt(mouseEvent) {\n        const anchorCandidates = [];\n        for (const participant of this._participants) {\n            if (participant.suggestHoverAnchor) {\n                const anchor = participant.suggestHoverAnchor(mouseEvent);\n                if (anchor) {\n                    anchorCandidates.push(anchor);\n                }\n            }\n        }\n        const target = mouseEvent.target;\n        if (target.type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n            anchorCandidates.push(new HoverRangeAnchor(0, target.range, mouseEvent.event.posx, mouseEvent.event.posy));\n        }\n        if (target.type === 7 /* MouseTargetType.CONTENT_EMPTY */) {\n            const epsilon = this._editor.getOption(47 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth / 2;\n            if (!target.detail.isAfterLines && typeof target.detail.horizontalDistanceToText === 'number' && target.detail.horizontalDistanceToText < epsilon) {\n                // Let hover kick in even when the mouse is technically in the empty area after a line, given the distance is small enough\n                anchorCandidates.push(new HoverRangeAnchor(0, target.range, mouseEvent.event.posx, mouseEvent.event.posy));\n            }\n        }\n        if (anchorCandidates.length === 0) {\n            return this._startShowingOrUpdateHover(null, 0 /* HoverStartMode.Delayed */, 0 /* HoverStartSource.Mouse */, false, mouseEvent);\n        }\n        anchorCandidates.sort((a, b) => b.priority - a.priority);\n        return this._startShowingOrUpdateHover(anchorCandidates[0], 0 /* HoverStartMode.Delayed */, 0 /* HoverStartSource.Mouse */, false, mouseEvent);\n    }\n    startShowingAtRange(range, mode, source, focus) {\n        this._startShowingOrUpdateHover(new HoverRangeAnchor(0, range, undefined, undefined), mode, source, focus, null);\n    }\n    /**\n     * Returns true if the hover shows now or will show.\n     */\n    _startShowingOrUpdateHover(anchor, mode, source, focus, mouseEvent) {\n        if (!this._widget.position || !this._currentResult) {\n            // The hover is not visible\n            if (anchor) {\n                this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n                return true;\n            }\n            return false;\n        }\n        // The hover is currently visible\n        const hoverIsSticky = this._editor.getOption(57 /* EditorOption.hover */).sticky;\n        const isGettingCloser = (hoverIsSticky && mouseEvent && this._widget.isMouseGettingCloser(mouseEvent.event.posx, mouseEvent.event.posy));\n        if (isGettingCloser) {\n            // The mouse is getting closer to the hover, so we will keep the hover untouched\n            // But we will kick off a hover update at the new anchor, insisting on keeping the hover visible.\n            if (anchor) {\n                this._startHoverOperationIfNecessary(anchor, mode, source, focus, true);\n            }\n            return true;\n        }\n        if (!anchor) {\n            this._setCurrentResult(null);\n            return false;\n        }\n        if (anchor && this._currentResult.anchor.equals(anchor)) {\n            // The widget is currently showing results for the exact same anchor, so no update is needed\n            return true;\n        }\n        if (!anchor.canAdoptVisibleHover(this._currentResult.anchor, this._widget.position)) {\n            // The new anchor is not compatible with the previous anchor\n            this._setCurrentResult(null);\n            this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n            return true;\n        }\n        // We aren't getting any closer to the hover, so we will filter existing results\n        // and keep those which also apply to the new anchor.\n        this._setCurrentResult(this._currentResult.filter(anchor));\n        this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n        return true;\n    }\n    _startHoverOperationIfNecessary(anchor, mode, source, focus, insistOnKeepingHoverVisible) {\n        if (this._computer.anchor && this._computer.anchor.equals(anchor)) {\n            // We have to start a hover operation at the exact same anchor as before, so no work is needed\n            return;\n        }\n        this._hoverOperation.cancel();\n        this._computer.anchor = anchor;\n        this._computer.shouldFocus = focus;\n        this._computer.source = source;\n        this._computer.insistOnKeepingHoverVisible = insistOnKeepingHoverVisible;\n        this._hoverOperation.start(mode);\n    }\n    _setCurrentResult(hoverResult) {\n        if (this._currentResult === hoverResult) {\n            // avoid updating the DOM to avoid resetting the user selection\n            return;\n        }\n        if (hoverResult && hoverResult.messages.length === 0) {\n            hoverResult = null;\n        }\n        this._currentResult = hoverResult;\n        if (this._currentResult) {\n            this._renderMessages(this._currentResult.anchor, this._currentResult.messages);\n        }\n        else {\n            this._widget.hide();\n        }\n    }\n    hide() {\n        this._computer.anchor = null;\n        this._hoverOperation.cancel();\n        this._setCurrentResult(null);\n    }\n    isColorPickerVisible() {\n        return this._widget.isColorPickerVisible;\n    }\n    isVisibleFromKeyboard() {\n        return this._widget.isVisibleFromKeyboard;\n    }\n    containsNode(node) {\n        return this._widget.getDomNode().contains(node);\n    }\n    _addLoadingMessage(result) {\n        if (this._computer.anchor) {\n            for (const participant of this._participants) {\n                if (participant.createLoadingMessage) {\n                    const loadingMessage = participant.createLoadingMessage(this._computer.anchor);\n                    if (loadingMessage) {\n                        return result.slice(0).concat([loadingMessage]);\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    _withResult(hoverResult) {\n        if (this._widget.position && this._currentResult && this._currentResult.isComplete) {\n            // The hover is visible with a previous complete result.\n            if (!hoverResult.isComplete) {\n                // Instead of rendering the new partial result, we wait for the result to be complete.\n                return;\n            }\n            if (this._computer.insistOnKeepingHoverVisible && hoverResult.messages.length === 0) {\n                // The hover would now hide normally, so we'll keep the previous messages\n                return;\n            }\n        }\n        this._setCurrentResult(hoverResult);\n    }\n    _renderMessages(anchor, messages) {\n        const { showAtPosition, showAtSecondaryPosition, highlightRange } = ContentHoverController.computeHoverRanges(this._editor, anchor.range, messages);\n        const disposables = new DisposableStore();\n        const statusBar = disposables.add(new EditorHoverStatusBar(this._keybindingService));\n        const fragment = document.createDocumentFragment();\n        let colorPicker = null;\n        const context = {\n            fragment,\n            statusBar,\n            setColorPicker: (widget) => colorPicker = widget,\n            onContentsChanged: () => this._widget.onContentsChanged(),\n            hide: () => this.hide()\n        };\n        for (const participant of this._participants) {\n            const hoverParts = messages.filter(msg => msg.owner === participant);\n            if (hoverParts.length > 0) {\n                disposables.add(participant.renderHoverParts(context, hoverParts));\n            }\n        }\n        const isBeforeContent = messages.some(m => m.isBeforeContent);\n        if (statusBar.hasContent) {\n            fragment.appendChild(statusBar.hoverElement);\n        }\n        if (fragment.hasChildNodes()) {\n            if (highlightRange) {\n                const highlightDecoration = this._editor.createDecorationsCollection();\n                highlightDecoration.set([{\n                        range: highlightRange,\n                        options: ContentHoverController._DECORATION_OPTIONS\n                    }]);\n                disposables.add(toDisposable(() => {\n                    highlightDecoration.clear();\n                }));\n            }\n            this._widget.showAt(fragment, new ContentHoverVisibleData(colorPicker, showAtPosition, showAtSecondaryPosition, this._editor.getOption(57 /* EditorOption.hover */).above, this._computer.shouldFocus, this._computer.source, isBeforeContent, anchor.initialMousePosX, anchor.initialMousePosY, disposables));\n        }\n        else {\n            disposables.dispose();\n        }\n    }\n    static computeHoverRanges(editor, anchorRange, messages) {\n        let startColumnBoundary = 1;\n        if (editor.hasModel()) {\n            // Ensure the range is on the current view line\n            const viewModel = editor._getViewModel();\n            const coordinatesConverter = viewModel.coordinatesConverter;\n            const anchorViewRange = coordinatesConverter.convertModelRangeToViewRange(anchorRange);\n            const anchorViewRangeStart = new Position(anchorViewRange.startLineNumber, viewModel.getLineMinColumn(anchorViewRange.startLineNumber));\n            startColumnBoundary = coordinatesConverter.convertViewPositionToModelPosition(anchorViewRangeStart).column;\n        }\n        // The anchor range is always on a single line\n        const anchorLineNumber = anchorRange.startLineNumber;\n        let renderStartColumn = anchorRange.startColumn;\n        let highlightRange = messages[0].range;\n        let forceShowAtRange = null;\n        for (const msg of messages) {\n            highlightRange = Range.plusRange(highlightRange, msg.range);\n            if (msg.range.startLineNumber === anchorLineNumber && msg.range.endLineNumber === anchorLineNumber) {\n                // this message has a range that is completely sitting on the line of the anchor\n                renderStartColumn = Math.max(Math.min(renderStartColumn, msg.range.startColumn), startColumnBoundary);\n            }\n            if (msg.forceShowAtRange) {\n                forceShowAtRange = msg.range;\n            }\n        }\n        return {\n            showAtPosition: forceShowAtRange ? forceShowAtRange.getStartPosition() : new Position(anchorLineNumber, anchorRange.startColumn),\n            showAtSecondaryPosition: forceShowAtRange ? forceShowAtRange.getStartPosition() : new Position(anchorLineNumber, renderStartColumn),\n            highlightRange\n        };\n    }\n};\nContentHoverController._DECORATION_OPTIONS = ModelDecorationOptions.register({\n    description: 'content-hover-highlight',\n    className: 'hoverHighlight'\n});\nContentHoverController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IKeybindingService)\n], ContentHoverController);\nexport { ContentHoverController };\nclass HoverResult {\n    constructor(anchor, messages, isComplete) {\n        this.anchor = anchor;\n        this.messages = messages;\n        this.isComplete = isComplete;\n    }\n    filter(anchor) {\n        const filteredMessages = this.messages.filter((m) => m.isValidForHoverAnchor(anchor));\n        if (filteredMessages.length === this.messages.length) {\n            return this;\n        }\n        return new FilteredHoverResult(this, this.anchor, filteredMessages, this.isComplete);\n    }\n}\nclass FilteredHoverResult extends HoverResult {\n    constructor(original, anchor, messages, isComplete) {\n        super(anchor, messages, isComplete);\n        this.original = original;\n    }\n    filter(anchor) {\n        return this.original.filter(anchor);\n    }\n}\nclass ContentHoverVisibleData {\n    constructor(colorPicker, showAtPosition, showAtSecondaryPosition, preferAbove, stoleFocus, source, isBeforeContent, initialMousePosX, initialMousePosY, disposables) {\n        this.colorPicker = colorPicker;\n        this.showAtPosition = showAtPosition;\n        this.showAtSecondaryPosition = showAtSecondaryPosition;\n        this.preferAbove = preferAbove;\n        this.stoleFocus = stoleFocus;\n        this.source = source;\n        this.isBeforeContent = isBeforeContent;\n        this.initialMousePosX = initialMousePosX;\n        this.initialMousePosY = initialMousePosY;\n        this.disposables = disposables;\n        this.closestMouseDistance = undefined;\n    }\n}\nlet ContentHoverWidget = class ContentHoverWidget extends Disposable {\n    /**\n     * Returns `null` if the hover is not visible.\n     */\n    get position() {\n        var _a, _b;\n        return (_b = (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.showAtPosition) !== null && _b !== void 0 ? _b : null;\n    }\n    get isColorPickerVisible() {\n        var _a;\n        return Boolean((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.colorPicker);\n    }\n    get isVisibleFromKeyboard() {\n        var _a;\n        return (((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.source) === 1 /* HoverStartSource.Keyboard */);\n    }\n    constructor(_editor, _contextKeyService) {\n        super();\n        this._editor = _editor;\n        this._contextKeyService = _contextKeyService;\n        this.allowEditorOverflow = true;\n        this._hoverVisibleKey = EditorContextKeys.hoverVisible.bindTo(this._contextKeyService);\n        this._hover = this._register(new HoverWidget());\n        this._visibleData = null;\n        this._register(this._editor.onDidLayoutChange(() => this._layout()));\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(47 /* EditorOption.fontInfo */)) {\n                this._updateFont();\n            }\n        }));\n        this._setVisibleData(null);\n        this._layout();\n        this._editor.addContentWidget(this);\n    }\n    dispose() {\n        this._editor.removeContentWidget(this);\n        if (this._visibleData) {\n            this._visibleData.disposables.dispose();\n        }\n        super.dispose();\n    }\n    getId() {\n        return ContentHoverWidget.ID;\n    }\n    getDomNode() {\n        return this._hover.containerDomNode;\n    }\n    getPosition() {\n        if (!this._visibleData) {\n            return null;\n        }\n        let preferAbove = this._visibleData.preferAbove;\n        if (!preferAbove && this._contextKeyService.getContextKeyValue(SuggestContext.Visible.key)) {\n            // Prefer rendering above if the suggest widget is visible\n            preferAbove = true;\n        }\n        // :before content can align left of the text content\n        const affinity = this._visibleData.isBeforeContent ? 3 /* PositionAffinity.LeftOfInjectedText */ : undefined;\n        return {\n            position: this._visibleData.showAtPosition,\n            secondaryPosition: this._visibleData.showAtSecondaryPosition,\n            preference: (preferAbove\n                ? [1 /* ContentWidgetPositionPreference.ABOVE */, 2 /* ContentWidgetPositionPreference.BELOW */]\n                : [2 /* ContentWidgetPositionPreference.BELOW */, 1 /* ContentWidgetPositionPreference.ABOVE */]),\n            positionAffinity: affinity\n        };\n    }\n    isMouseGettingCloser(posx, posy) {\n        if (!this._visibleData) {\n            return false;\n        }\n        if (typeof this._visibleData.initialMousePosX === 'undefined' || typeof this._visibleData.initialMousePosY === 'undefined') {\n            this._visibleData.initialMousePosX = posx;\n            this._visibleData.initialMousePosY = posy;\n            return false;\n        }\n        const widgetRect = dom.getDomNodePagePosition(this.getDomNode());\n        if (typeof this._visibleData.closestMouseDistance === 'undefined') {\n            this._visibleData.closestMouseDistance = computeDistanceFromPointToRectangle(this._visibleData.initialMousePosX, this._visibleData.initialMousePosY, widgetRect.left, widgetRect.top, widgetRect.width, widgetRect.height);\n        }\n        const distance = computeDistanceFromPointToRectangle(posx, posy, widgetRect.left, widgetRect.top, widgetRect.width, widgetRect.height);\n        if (distance > this._visibleData.closestMouseDistance + 4 /* tolerance of 4 pixels */) {\n            // The mouse is getting farther away\n            return false;\n        }\n        this._visibleData.closestMouseDistance = Math.min(this._visibleData.closestMouseDistance, distance);\n        return true;\n    }\n    _setVisibleData(visibleData) {\n        if (this._visibleData) {\n            this._visibleData.disposables.dispose();\n        }\n        this._visibleData = visibleData;\n        this._hoverVisibleKey.set(!!this._visibleData);\n        this._hover.containerDomNode.classList.toggle('hidden', !this._visibleData);\n    }\n    _layout() {\n        const height = Math.max(this._editor.getLayoutInfo().height / 4, 250);\n        const { fontSize, lineHeight } = this._editor.getOption(47 /* EditorOption.fontInfo */);\n        this._hover.contentsDomNode.style.fontSize = `${fontSize}px`;\n        this._hover.contentsDomNode.style.lineHeight = `${lineHeight / fontSize}`;\n        this._hover.contentsDomNode.style.maxHeight = `${height}px`;\n        this._hover.contentsDomNode.style.maxWidth = `${Math.max(this._editor.getLayoutInfo().width * 0.66, 500)}px`;\n    }\n    _updateFont() {\n        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n        codeClasses.forEach(node => this._editor.applyFontInfo(node));\n    }\n    showAt(node, visibleData) {\n        var _a;\n        this._setVisibleData(visibleData);\n        this._hover.contentsDomNode.textContent = '';\n        this._hover.contentsDomNode.appendChild(node);\n        this._hover.contentsDomNode.style.paddingBottom = '';\n        this._updateFont();\n        this.onContentsChanged();\n        // Simply force a synchronous render on the editor\n        // such that the widget does not really render with left = '0px'\n        this._editor.render();\n        // See https://github.com/microsoft/vscode/issues/140339\n        // TODO: Doing a second layout of the hover after force rendering the editor\n        this.onContentsChanged();\n        if (visibleData.stoleFocus) {\n            this._hover.containerDomNode.focus();\n        }\n        (_a = visibleData.colorPicker) === null || _a === void 0 ? void 0 : _a.layout();\n    }\n    hide() {\n        if (this._visibleData) {\n            const stoleFocus = this._visibleData.stoleFocus;\n            this._setVisibleData(null);\n            this._editor.layoutContentWidget(this);\n            if (stoleFocus) {\n                this._editor.focus();\n            }\n        }\n    }\n    onContentsChanged() {\n        this._editor.layoutContentWidget(this);\n        this._hover.onContentsChanged();\n        const scrollDimensions = this._hover.scrollbar.getScrollDimensions();\n        const hasHorizontalScrollbar = (scrollDimensions.scrollWidth > scrollDimensions.width);\n        if (hasHorizontalScrollbar) {\n            // There is just a horizontal scrollbar\n            const extraBottomPadding = `${this._hover.scrollbar.options.horizontalScrollbarSize}px`;\n            if (this._hover.contentsDomNode.style.paddingBottom !== extraBottomPadding) {\n                this._hover.contentsDomNode.style.paddingBottom = extraBottomPadding;\n                this._editor.layoutContentWidget(this);\n                this._hover.onContentsChanged();\n            }\n        }\n    }\n    clear() {\n        this._hover.contentsDomNode.textContent = '';\n    }\n};\nContentHoverWidget.ID = 'editor.contrib.contentHoverWidget';\nContentHoverWidget = __decorate([\n    __param(1, IContextKeyService)\n], ContentHoverWidget);\nexport { ContentHoverWidget };\nlet EditorHoverStatusBar = class EditorHoverStatusBar extends Disposable {\n    get hasContent() {\n        return this._hasContent;\n    }\n    constructor(_keybindingService) {\n        super();\n        this._keybindingService = _keybindingService;\n        this._hasContent = false;\n        this.hoverElement = $('div.hover-row.status-bar');\n        this.actionsElement = dom.append(this.hoverElement, $('div.actions'));\n    }\n    addAction(actionOptions) {\n        const keybinding = this._keybindingService.lookupKeybinding(actionOptions.commandId);\n        const keybindingLabel = keybinding ? keybinding.getLabel() : null;\n        this._hasContent = true;\n        return this._register(HoverAction.render(this.actionsElement, actionOptions, keybindingLabel));\n    }\n    append(element) {\n        const result = dom.append(this.actionsElement, element);\n        this._hasContent = true;\n        return result;\n    }\n};\nEditorHoverStatusBar = __decorate([\n    __param(0, IKeybindingService)\n], EditorHoverStatusBar);\nclass ContentHoverComputer {\n    get anchor() { return this._anchor; }\n    set anchor(value) { this._anchor = value; }\n    get shouldFocus() { return this._shouldFocus; }\n    set shouldFocus(value) { this._shouldFocus = value; }\n    get source() { return this._source; }\n    set source(value) { this._source = value; }\n    get insistOnKeepingHoverVisible() { return this._insistOnKeepingHoverVisible; }\n    set insistOnKeepingHoverVisible(value) { this._insistOnKeepingHoverVisible = value; }\n    constructor(_editor, _participants) {\n        this._editor = _editor;\n        this._participants = _participants;\n        this._anchor = null;\n        this._shouldFocus = false;\n        this._source = 0 /* HoverStartSource.Mouse */;\n        this._insistOnKeepingHoverVisible = false;\n    }\n    static _getLineDecorations(editor, anchor) {\n        if (anchor.type !== 1 /* HoverAnchorType.Range */ && !anchor.supportsMarkerHover) {\n            return [];\n        }\n        const model = editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        if (lineNumber > model.getLineCount()) {\n            // invalid line\n            return [];\n        }\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        return editor.getLineDecorations(lineNumber).filter((d) => {\n            if (d.options.isWholeLine) {\n                return true;\n            }\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            if (d.options.showIfCollapsed) {\n                // Relax check around `showIfCollapsed` decorations to also include +/- 1 character\n                if (startColumn > anchor.range.startColumn + 1 || anchor.range.endColumn - 1 > endColumn) {\n                    return false;\n                }\n            }\n            else {\n                if (startColumn > anchor.range.startColumn || anchor.range.endColumn > endColumn) {\n                    return false;\n                }\n            }\n            return true;\n        });\n    }\n    computeAsync(token) {\n        const anchor = this._anchor;\n        if (!this._editor.hasModel() || !anchor) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, anchor);\n        return AsyncIterableObject.merge(this._participants.map((participant) => {\n            if (!participant.computeAsync) {\n                return AsyncIterableObject.EMPTY;\n            }\n            return participant.computeAsync(anchor, lineDecorations, token);\n        }));\n    }\n    computeSync() {\n        if (!this._editor.hasModel() || !this._anchor) {\n            return [];\n        }\n        const lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, this._anchor);\n        let result = [];\n        for (const participant of this._participants) {\n            result = result.concat(participant.computeSync(this._anchor, lineDecorations));\n        }\n        return coalesce(result);\n    }\n}\nfunction computeDistanceFromPointToRectangle(pointX, pointY, left, top, width, height) {\n    const x = (left + width / 2); // x center of rectangle\n    const y = (top + height / 2); // y center of rectangle\n    const dx = Math.max(Math.abs(pointX - x) - width / 2, 0);\n    const dy = Math.max(Math.abs(pointY - y) - height / 2, 0);\n    return Math.sqrt(dx * dx + dy * dy);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray } from '../../../../base/common/arrays.js';\nimport { isEmptyMarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { HoverWidget } from '../../../../base/browser/ui/hover/hoverWidget.js';\nconst $ = dom.$;\nclass MarginHoverWidget extends Disposable {\n    constructor(editor, languageService, openerService) {\n        super();\n        this._renderDisposeables = this._register(new DisposableStore());\n        this._editor = editor;\n        this._isVisible = false;\n        this._messages = [];\n        this._hover = this._register(new HoverWidget());\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n        this._markdownRenderer = this._register(new MarkdownRenderer({ editor: this._editor }, languageService, openerService));\n        this._computer = new MarginHoverComputer(this._editor);\n        this._hoverOperation = this._register(new HoverOperation(this._editor, this._computer));\n        this._register(this._hoverOperation.onResult((result) => {\n            this._withResult(result.value);\n        }));\n        this._register(this._editor.onDidChangeModelDecorations(() => this._onModelDecorationsChanged()));\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(47 /* EditorOption.fontInfo */)) {\n                this._updateFont();\n            }\n        }));\n        this._editor.addOverlayWidget(this);\n    }\n    dispose() {\n        this._editor.removeOverlayWidget(this);\n        super.dispose();\n    }\n    getId() {\n        return MarginHoverWidget.ID;\n    }\n    getDomNode() {\n        return this._hover.containerDomNode;\n    }\n    getPosition() {\n        return null;\n    }\n    _updateFont() {\n        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n        codeClasses.forEach(node => this._editor.applyFontInfo(node));\n    }\n    _onModelDecorationsChanged() {\n        if (this._isVisible) {\n            // The decorations have changed and the hover is visible,\n            // we need to recompute the displayed text\n            this._hoverOperation.cancel();\n            this._hoverOperation.start(0 /* HoverStartMode.Delayed */);\n        }\n    }\n    startShowingAt(lineNumber) {\n        if (this._computer.lineNumber === lineNumber) {\n            // We have to show the widget at the exact same line number as before, so no work is needed\n            return;\n        }\n        this._hoverOperation.cancel();\n        this.hide();\n        this._computer.lineNumber = lineNumber;\n        this._hoverOperation.start(0 /* HoverStartMode.Delayed */);\n    }\n    hide() {\n        this._computer.lineNumber = -1;\n        this._hoverOperation.cancel();\n        if (!this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n    }\n    _withResult(result) {\n        this._messages = result;\n        if (this._messages.length > 0) {\n            this._renderMessages(this._computer.lineNumber, this._messages);\n        }\n        else {\n            this.hide();\n        }\n    }\n    _renderMessages(lineNumber, messages) {\n        this._renderDisposeables.clear();\n        const fragment = document.createDocumentFragment();\n        for (const msg of messages) {\n            const markdownHoverElement = $('div.hover-row.markdown-hover');\n            const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n            const renderedContents = this._renderDisposeables.add(this._markdownRenderer.render(msg.value));\n            hoverContentsElement.appendChild(renderedContents.element);\n            fragment.appendChild(markdownHoverElement);\n        }\n        this._updateContents(fragment);\n        this._showAt(lineNumber);\n    }\n    _updateContents(node) {\n        this._hover.contentsDomNode.textContent = '';\n        this._hover.contentsDomNode.appendChild(node);\n        this._updateFont();\n    }\n    _showAt(lineNumber) {\n        if (!this._isVisible) {\n            this._isVisible = true;\n            this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n        }\n        const editorLayout = this._editor.getLayoutInfo();\n        const topForLineNumber = this._editor.getTopForLineNumber(lineNumber);\n        const editorScrollTop = this._editor.getScrollTop();\n        const lineHeight = this._editor.getOption(63 /* EditorOption.lineHeight */);\n        const nodeHeight = this._hover.containerDomNode.clientHeight;\n        const top = topForLineNumber - editorScrollTop - ((nodeHeight - lineHeight) / 2);\n        this._hover.containerDomNode.style.left = `${editorLayout.glyphMarginLeft + editorLayout.glyphMarginWidth}px`;\n        this._hover.containerDomNode.style.top = `${Math.max(Math.round(top), 0)}px`;\n    }\n}\nMarginHoverWidget.ID = 'editor.contrib.modesGlyphHoverWidget';\nexport { MarginHoverWidget };\nclass MarginHoverComputer {\n    get lineNumber() {\n        return this._lineNumber;\n    }\n    set lineNumber(value) {\n        this._lineNumber = value;\n    }\n    constructor(_editor) {\n        this._editor = _editor;\n        this._lineNumber = -1;\n    }\n    computeSync() {\n        const toHoverMessage = (contents) => {\n            return {\n                value: contents\n            };\n        };\n        const lineDecorations = this._editor.getLineDecorations(this._lineNumber);\n        const result = [];\n        if (!lineDecorations) {\n            return result;\n        }\n        for (const d of lineDecorations) {\n            if (!d.options.glyphMarginClassName) {\n                continue;\n            }\n            const hoverMessage = d.options.glyphMarginHoverMessage;\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n                continue;\n            }\n            result.push(...asArray(hoverMessage).map(toHoverMessage));\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, disposableTimeout } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { basename } from '../../../../base/common/resources.js';\nimport { Range } from '../../../common/core/range.js';\nimport { IMarkerDecorationsService } from '../../../common/services/markerDecorations.js';\nimport { getCodeActions } from '../../codeAction/browser/codeAction.js';\nimport { QuickFixAction, CodeActionController } from '../../codeAction/browser/codeActionCommands.js';\nimport { CodeActionKind, CodeActionTriggerSource } from '../../codeAction/common/types.js';\nimport { MarkerController, NextMarkerAction } from '../../gotoError/browser/gotoError.js';\nimport * as nls from '../../../../nls.js';\nimport { IMarkerData, MarkerSeverity } from '../../../../platform/markers/common/markers.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { Progress } from '../../../../platform/progress/common/progress.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nconst $ = dom.$;\nexport class MarkerHover {\n    constructor(owner, range, marker) {\n        this.owner = owner;\n        this.range = range;\n        this.marker = marker;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n}\nconst markerCodeActionTrigger = {\n    type: 1 /* CodeActionTriggerType.Invoke */,\n    filter: { include: CodeActionKind.QuickFix },\n    triggerAction: CodeActionTriggerSource.QuickFixHover\n};\nlet MarkerHoverParticipant = class MarkerHoverParticipant {\n    constructor(_editor, _markerDecorationsService, _openerService, _languageFeaturesService) {\n        this._editor = _editor;\n        this._markerDecorationsService = _markerDecorationsService;\n        this._openerService = _openerService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this.hoverOrdinal = 5;\n        this.recentMarkerCodeActionsInfo = undefined;\n    }\n    computeSync(anchor, lineDecorations) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */ && !anchor.supportsMarkerHover) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        const result = [];\n        for (const d of lineDecorations) {\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            const marker = this._markerDecorationsService.getMarker(model.uri, d);\n            if (!marker) {\n                continue;\n            }\n            const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\n            result.push(new MarkerHover(this, range, marker));\n        }\n        return result;\n    }\n    renderHoverParts(context, hoverParts) {\n        if (!hoverParts.length) {\n            return Disposable.None;\n        }\n        const disposables = new DisposableStore();\n        hoverParts.forEach(msg => context.fragment.appendChild(this.renderMarkerHover(msg, disposables)));\n        const markerHoverForStatusbar = hoverParts.length === 1 ? hoverParts[0] : hoverParts.sort((a, b) => MarkerSeverity.compare(a.marker.severity, b.marker.severity))[0];\n        this.renderMarkerStatusbar(context, markerHoverForStatusbar, disposables);\n        return disposables;\n    }\n    renderMarkerHover(markerHover, disposables) {\n        const hoverElement = $('div.hover-row');\n        const markerElement = dom.append(hoverElement, $('div.marker.hover-contents'));\n        const { source, message, code, relatedInformation } = markerHover.marker;\n        this._editor.applyFontInfo(markerElement);\n        const messageElement = dom.append(markerElement, $('span'));\n        messageElement.style.whiteSpace = 'pre-wrap';\n        messageElement.innerText = message;\n        if (source || code) {\n            // Code has link\n            if (code && typeof code !== 'string') {\n                const sourceAndCodeElement = $('span');\n                if (source) {\n                    const sourceElement = dom.append(sourceAndCodeElement, $('span'));\n                    sourceElement.innerText = source;\n                }\n                const codeLink = dom.append(sourceAndCodeElement, $('a.code-link'));\n                codeLink.setAttribute('href', code.target.toString());\n                disposables.add(dom.addDisposableListener(codeLink, 'click', (e) => {\n                    this._openerService.open(code.target, { allowCommands: true });\n                    e.preventDefault();\n                    e.stopPropagation();\n                }));\n                const codeElement = dom.append(codeLink, $('span'));\n                codeElement.innerText = code.value;\n                const detailsElement = dom.append(markerElement, sourceAndCodeElement);\n                detailsElement.style.opacity = '0.6';\n                detailsElement.style.paddingLeft = '6px';\n            }\n            else {\n                const detailsElement = dom.append(markerElement, $('span'));\n                detailsElement.style.opacity = '0.6';\n                detailsElement.style.paddingLeft = '6px';\n                detailsElement.innerText = source && code ? `${source}(${code})` : source ? source : `(${code})`;\n            }\n        }\n        if (isNonEmptyArray(relatedInformation)) {\n            for (const { message, resource, startLineNumber, startColumn } of relatedInformation) {\n                const relatedInfoContainer = dom.append(markerElement, $('div'));\n                relatedInfoContainer.style.marginTop = '8px';\n                const a = dom.append(relatedInfoContainer, $('a'));\n                a.innerText = `${basename(resource)}(${startLineNumber}, ${startColumn}): `;\n                a.style.cursor = 'pointer';\n                disposables.add(dom.addDisposableListener(a, 'click', (e) => {\n                    e.stopPropagation();\n                    e.preventDefault();\n                    if (this._openerService) {\n                        this._openerService.open(resource, {\n                            fromUserGesture: true,\n                            editorOptions: { selection: { startLineNumber, startColumn } }\n                        }).catch(onUnexpectedError);\n                    }\n                }));\n                const messageElement = dom.append(relatedInfoContainer, $('span'));\n                messageElement.innerText = message;\n                this._editor.applyFontInfo(messageElement);\n            }\n        }\n        return hoverElement;\n    }\n    renderMarkerStatusbar(context, markerHover, disposables) {\n        if (markerHover.marker.severity === MarkerSeverity.Error || markerHover.marker.severity === MarkerSeverity.Warning || markerHover.marker.severity === MarkerSeverity.Info) {\n            context.statusBar.addAction({\n                label: nls.localize('view problem', \"View Problem\"),\n                commandId: NextMarkerAction.ID,\n                run: () => {\n                    var _a;\n                    context.hide();\n                    (_a = MarkerController.get(this._editor)) === null || _a === void 0 ? void 0 : _a.showAtMarker(markerHover.marker);\n                    this._editor.focus();\n                }\n            });\n        }\n        if (!this._editor.getOption(86 /* EditorOption.readOnly */)) {\n            const quickfixPlaceholderElement = context.statusBar.append($('div'));\n            if (this.recentMarkerCodeActionsInfo) {\n                if (IMarkerData.makeKey(this.recentMarkerCodeActionsInfo.marker) === IMarkerData.makeKey(markerHover.marker)) {\n                    if (!this.recentMarkerCodeActionsInfo.hasCodeActions) {\n                        quickfixPlaceholderElement.textContent = nls.localize('noQuickFixes', \"No quick fixes available\");\n                    }\n                }\n                else {\n                    this.recentMarkerCodeActionsInfo = undefined;\n                }\n            }\n            const updatePlaceholderDisposable = this.recentMarkerCodeActionsInfo && !this.recentMarkerCodeActionsInfo.hasCodeActions ? Disposable.None : disposables.add(disposableTimeout(() => quickfixPlaceholderElement.textContent = nls.localize('checkingForQuickFixes', \"Checking for quick fixes...\"), 200));\n            if (!quickfixPlaceholderElement.textContent) {\n                // Have some content in here to avoid flickering\n                quickfixPlaceholderElement.textContent = String.fromCharCode(0xA0); // &nbsp;\n            }\n            const codeActionsPromise = this.getCodeActions(markerHover.marker);\n            disposables.add(toDisposable(() => codeActionsPromise.cancel()));\n            codeActionsPromise.then(actions => {\n                updatePlaceholderDisposable.dispose();\n                this.recentMarkerCodeActionsInfo = { marker: markerHover.marker, hasCodeActions: actions.validActions.length > 0 };\n                if (!this.recentMarkerCodeActionsInfo.hasCodeActions) {\n                    actions.dispose();\n                    quickfixPlaceholderElement.textContent = nls.localize('noQuickFixes', \"No quick fixes available\");\n                    return;\n                }\n                quickfixPlaceholderElement.style.display = 'none';\n                let showing = false;\n                disposables.add(toDisposable(() => {\n                    if (!showing) {\n                        actions.dispose();\n                    }\n                }));\n                context.statusBar.addAction({\n                    label: nls.localize('quick fixes', \"Quick Fix...\"),\n                    commandId: QuickFixAction.Id,\n                    run: (target) => {\n                        showing = true;\n                        const controller = CodeActionController.get(this._editor);\n                        const elementPosition = dom.getDomNodePagePosition(target);\n                        // Hide the hover pre-emptively, otherwise the editor can close the code actions\n                        // context menu as well when using keyboard navigation\n                        context.hide();\n                        controller === null || controller === void 0 ? void 0 : controller.showCodeActions(markerCodeActionTrigger, actions, {\n                            x: elementPosition.left + 6,\n                            y: elementPosition.top + elementPosition.height + 6,\n                            width: elementPosition.width,\n                            height: elementPosition.height\n                        });\n                    }\n                });\n            }, onUnexpectedError);\n        }\n    }\n    getCodeActions(marker) {\n        return createCancelablePromise(cancellationToken => {\n            return getCodeActions(this._languageFeaturesService.codeActionProvider, this._editor.getModel(), new Range(marker.startLineNumber, marker.startColumn, marker.endLineNumber, marker.endColumn), markerCodeActionTrigger, Progress.None, cancellationToken);\n        });\n    }\n};\nMarkerHoverParticipant = __decorate([\n    __param(1, IMarkerDecorationsService),\n    __param(2, IOpenerService),\n    __param(3, ILanguageFeaturesService)\n], MarkerHoverParticipant);\nexport { MarkerHoverParticipant };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { GotoDefinitionAtPositionEditorContribution } from '../../gotoSymbol/browser/link/goToDefinitionAtPosition.js';\nimport { ContentHoverWidget, ContentHoverController } from './contentHover.js';\nimport { MarginHoverWidget } from './marginHover.js';\nimport * as nls from '../../../../nls.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { editorHoverBorder } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { HoverParticipantRegistry } from './hoverTypes.js';\nimport { MarkdownHoverParticipant } from './markdownHoverParticipant.js';\nimport { MarkerHoverParticipant } from './markerHoverParticipant.js';\nimport './hover.css';\nimport { InlineSuggestionHintsContentWidget } from '../../inlineCompletions/browser/inlineSuggestionHintsWidget.js';\nlet ModesHoverController = class ModesHoverController {\n    static get(editor) {\n        return editor.getContribution(ModesHoverController.ID);\n    }\n    constructor(_editor, _instantiationService, _openerService, _languageService, _contextKeyService) {\n        this._editor = _editor;\n        this._instantiationService = _instantiationService;\n        this._openerService = _openerService;\n        this._languageService = _languageService;\n        this._toUnhook = new DisposableStore();\n        this._isMouseDown = false;\n        this._hoverClicked = false;\n        this._contentWidget = null;\n        this._glyphWidget = null;\n        this._hookEvents();\n        this._didChangeConfigurationHandler = this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(57 /* EditorOption.hover */)) {\n                this._unhookEvents();\n                this._hookEvents();\n            }\n        });\n    }\n    _hookEvents() {\n        const hideWidgetsEventHandler = () => this._hideWidgets();\n        const hoverOpts = this._editor.getOption(57 /* EditorOption.hover */);\n        this._isHoverEnabled = hoverOpts.enabled;\n        this._isHoverSticky = hoverOpts.sticky;\n        if (this._isHoverEnabled) {\n            this._toUnhook.add(this._editor.onMouseDown((e) => this._onEditorMouseDown(e)));\n            this._toUnhook.add(this._editor.onMouseUp((e) => this._onEditorMouseUp(e)));\n            this._toUnhook.add(this._editor.onMouseMove((e) => this._onEditorMouseMove(e)));\n            this._toUnhook.add(this._editor.onKeyDown((e) => this._onKeyDown(e)));\n        }\n        else {\n            this._toUnhook.add(this._editor.onMouseMove((e) => this._onEditorMouseMove(e)));\n            this._toUnhook.add(this._editor.onKeyDown((e) => this._onKeyDown(e)));\n        }\n        this._toUnhook.add(this._editor.onMouseLeave((e) => this._onEditorMouseLeave(e)));\n        this._toUnhook.add(this._editor.onDidChangeModel(hideWidgetsEventHandler));\n        this._toUnhook.add(this._editor.onDidScrollChange((e) => this._onEditorScrollChanged(e)));\n    }\n    _unhookEvents() {\n        this._toUnhook.clear();\n    }\n    _onEditorScrollChanged(e) {\n        if (e.scrollTopChanged || e.scrollLeftChanged) {\n            this._hideWidgets();\n        }\n    }\n    _onEditorMouseDown(mouseEvent) {\n        this._isMouseDown = true;\n        const target = mouseEvent.target;\n        if (target.type === 9 /* MouseTargetType.CONTENT_WIDGET */ && target.detail === ContentHoverWidget.ID) {\n            this._hoverClicked = true;\n            // mouse down on top of content hover widget\n            return;\n        }\n        if (target.type === 12 /* MouseTargetType.OVERLAY_WIDGET */ && target.detail === MarginHoverWidget.ID) {\n            // mouse down on top of overlay hover widget\n            return;\n        }\n        if (target.type !== 12 /* MouseTargetType.OVERLAY_WIDGET */) {\n            this._hoverClicked = false;\n        }\n        this._hideWidgets();\n    }\n    _onEditorMouseUp(mouseEvent) {\n        this._isMouseDown = false;\n    }\n    _onEditorMouseLeave(mouseEvent) {\n        var _a;\n        const targetEm = (mouseEvent.event.browserEvent.relatedTarget);\n        if ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.containsNode(targetEm)) {\n            // when the mouse is inside hover widget\n            return;\n        }\n        this._hideWidgets();\n    }\n    _onEditorMouseMove(mouseEvent) {\n        var _a, _b, _c, _d, _e, _f;\n        const target = mouseEvent.target;\n        if (this._isMouseDown && this._hoverClicked) {\n            return;\n        }\n        if (this._isHoverSticky && target.type === 9 /* MouseTargetType.CONTENT_WIDGET */ && target.detail === ContentHoverWidget.ID) {\n            // mouse moved on top of content hover widget\n            return;\n        }\n        if (this._isHoverSticky && !((_b = (_a = mouseEvent.event.browserEvent.view) === null || _a === void 0 ? void 0 : _a.getSelection()) === null || _b === void 0 ? void 0 : _b.isCollapsed)) {\n            // selected text within content hover widget\n            return;\n        }\n        if (!this._isHoverSticky && target.type === 9 /* MouseTargetType.CONTENT_WIDGET */ && target.detail === ContentHoverWidget.ID\n            && ((_c = this._contentWidget) === null || _c === void 0 ? void 0 : _c.isColorPickerVisible())) {\n            // though the hover is not sticky, the color picker needs to.\n            return;\n        }\n        if (this._isHoverSticky && target.type === 12 /* MouseTargetType.OVERLAY_WIDGET */ && target.detail === MarginHoverWidget.ID) {\n            // mouse moved on top of overlay hover widget\n            return;\n        }\n        if (this._isHoverSticky && ((_d = this._contentWidget) === null || _d === void 0 ? void 0 : _d.isVisibleFromKeyboard())) {\n            // Sticky mode is on and the hover has been shown via keyboard\n            // so moving the mouse has no effect\n            return;\n        }\n        if (!this._isHoverEnabled) {\n            this._hideWidgets();\n            return;\n        }\n        const contentWidget = this._getOrCreateContentWidget();\n        if (contentWidget.maybeShowAt(mouseEvent)) {\n            (_e = this._glyphWidget) === null || _e === void 0 ? void 0 : _e.hide();\n            return;\n        }\n        if (target.type === 2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */ && target.position) {\n            (_f = this._contentWidget) === null || _f === void 0 ? void 0 : _f.hide();\n            if (!this._glyphWidget) {\n                this._glyphWidget = new MarginHoverWidget(this._editor, this._languageService, this._openerService);\n            }\n            this._glyphWidget.startShowingAt(target.position.lineNumber);\n            return;\n        }\n        this._hideWidgets();\n    }\n    _onKeyDown(e) {\n        if (e.keyCode !== 5 /* KeyCode.Ctrl */ && e.keyCode !== 6 /* KeyCode.Alt */ && e.keyCode !== 57 /* KeyCode.Meta */ && e.keyCode !== 4 /* KeyCode.Shift */) {\n            // Do not hide hover when a modifier key is pressed\n            this._hideWidgets();\n        }\n    }\n    _hideWidgets() {\n        var _a, _b, _c;\n        if ((this._isMouseDown && this._hoverClicked && ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isColorPickerVisible())) || InlineSuggestionHintsContentWidget.dropDownVisible) {\n            return;\n        }\n        this._hoverClicked = false;\n        (_b = this._glyphWidget) === null || _b === void 0 ? void 0 : _b.hide();\n        (_c = this._contentWidget) === null || _c === void 0 ? void 0 : _c.hide();\n    }\n    _getOrCreateContentWidget() {\n        if (!this._contentWidget) {\n            this._contentWidget = this._instantiationService.createInstance(ContentHoverController, this._editor);\n        }\n        return this._contentWidget;\n    }\n    isColorPickerVisible() {\n        var _a;\n        return ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isColorPickerVisible()) || false;\n    }\n    showContentHover(range, mode, source, focus) {\n        this._getOrCreateContentWidget().startShowingAtRange(range, mode, source, focus);\n    }\n    dispose() {\n        var _a, _b;\n        this._unhookEvents();\n        this._toUnhook.dispose();\n        this._didChangeConfigurationHandler.dispose();\n        (_a = this._glyphWidget) === null || _a === void 0 ? void 0 : _a.dispose();\n        (_b = this._contentWidget) === null || _b === void 0 ? void 0 : _b.dispose();\n    }\n};\nModesHoverController.ID = 'editor.contrib.hover';\nModesHoverController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IOpenerService),\n    __param(3, ILanguageService),\n    __param(4, IContextKeyService)\n], ModesHoverController);\nexport { ModesHoverController };\nclass ShowHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.showHover',\n            label: nls.localize({\n                key: 'showHover',\n                comment: [\n                    'Label for action that will trigger the showing of a hover in the editor.',\n                    'This allows for users to show the hover without using the mouse.'\n                ]\n            }, \"Show Hover\"),\n            alias: 'Show Hover',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const position = editor.getPosition();\n        const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n        const focus = editor.getOption(2 /* EditorOption.accessibilitySupport */) === 2 /* AccessibilitySupport.Enabled */;\n        controller.showContentHover(range, 1 /* HoverStartMode.Immediate */, 1 /* HoverStartSource.Keyboard */, focus);\n    }\n}\nclass ShowDefinitionPreviewHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.showDefinitionPreviewHover',\n            label: nls.localize({\n                key: 'showDefinitionPreviewHover',\n                comment: [\n                    'Label for action that will trigger the showing of definition preview hover in the editor.',\n                    'This allows for users to show the definition preview hover without using the mouse.'\n                ]\n            }, \"Show Definition Preview Hover\"),\n            alias: 'Show Definition Preview Hover',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const position = editor.getPosition();\n        if (!position) {\n            return;\n        }\n        const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n        const goto = GotoDefinitionAtPositionEditorContribution.get(editor);\n        if (!goto) {\n            return;\n        }\n        const promise = goto.startFindDefinitionFromCursor(position);\n        promise.then(() => {\n            controller.showContentHover(range, 1 /* HoverStartMode.Immediate */, 1 /* HoverStartSource.Keyboard */, true);\n        });\n    }\n}\nregisterEditorContribution(ModesHoverController.ID, ModesHoverController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorAction(ShowHoverAction);\nregisterEditorAction(ShowDefinitionPreviewHoverAction);\nHoverParticipantRegistry.register(MarkdownHoverParticipant);\nHoverParticipantRegistry.register(MarkerHoverParticipant);\n// theming\nregisterThemingParticipant((theme, collector) => {\n    const hoverBorder = theme.getColor(editorHoverBorder);\n    if (hoverBorder) {\n        collector.addRule(`.monaco-editor .monaco-hover .hover-row:not(:first-child):not(:empty) { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\n        collector.addRule(`.monaco-editor .monaco-hover hr { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\n        collector.addRule(`.monaco-editor .monaco-hover hr { border-bottom: 0px solid ${hoverBorder.transparent(0.5)}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class HoverRangeAnchor {\n    constructor(priority, range, initialMousePosX, initialMousePosY) {\n        this.priority = priority;\n        this.range = range;\n        this.initialMousePosX = initialMousePosX;\n        this.initialMousePosY = initialMousePosY;\n        this.type = 1 /* HoverAnchorType.Range */;\n    }\n    equals(other) {\n        return (other.type === 1 /* HoverAnchorType.Range */ && this.range.equalsRange(other.range));\n    }\n    canAdoptVisibleHover(lastAnchor, showAtPosition) {\n        return (lastAnchor.type === 1 /* HoverAnchorType.Range */ && showAtPosition.lineNumber === this.range.startLineNumber);\n    }\n}\nexport class HoverForeignElementAnchor {\n    constructor(priority, owner, range, initialMousePosX, initialMousePosY, supportsMarkerHover) {\n        this.priority = priority;\n        this.owner = owner;\n        this.range = range;\n        this.initialMousePosX = initialMousePosX;\n        this.initialMousePosY = initialMousePosY;\n        this.supportsMarkerHover = supportsMarkerHover;\n        this.type = 2 /* HoverAnchorType.ForeignElement */;\n    }\n    equals(other) {\n        return (other.type === 2 /* HoverAnchorType.ForeignElement */ && this.owner === other.owner);\n    }\n    canAdoptVisibleHover(lastAnchor, showAtPosition) {\n        return (lastAnchor.type === 2 /* HoverAnchorType.ForeignElement */ && this.owner === lastAnchor.owner);\n    }\n}\nexport const HoverParticipantRegistry = (new class HoverParticipantRegistry {\n    constructor() {\n        this._participants = [];\n    }\n    register(ctor) {\n        this._participants.push(ctor);\n    }\n    getAll() {\n        return this._participants;\n    }\n}());\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray } from '../../../../base/common/arrays.js';\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { isEmptyMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { getHover } from './getHover.js';\nimport * as nls from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nconst $ = dom.$;\nexport class MarkdownHover {\n    constructor(owner, range, contents, isBeforeContent, ordinal) {\n        this.owner = owner;\n        this.range = range;\n        this.contents = contents;\n        this.isBeforeContent = isBeforeContent;\n        this.ordinal = ordinal;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n}\nlet MarkdownHoverParticipant = class MarkdownHoverParticipant {\n    constructor(_editor, _languageService, _openerService, _configurationService, _languageFeaturesService) {\n        this._editor = _editor;\n        this._languageService = _languageService;\n        this._openerService = _openerService;\n        this._configurationService = _configurationService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this.hoverOrdinal = 2;\n    }\n    createLoadingMessage(anchor) {\n        return new MarkdownHover(this, anchor.range, [new MarkdownString().appendText(nls.localize('modesContentHover.loading', \"Loading...\"))], false, 2000);\n    }\n    computeSync(anchor, lineDecorations) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        const result = [];\n        let index = 1000;\n        const lineLength = model.getLineLength(lineNumber);\n        const languageId = model.getLanguageIdAtPosition(anchor.range.startLineNumber, anchor.range.startColumn);\n        const stopRenderingLineAfter = this._editor.getOption(111 /* EditorOption.stopRenderingLineAfter */);\n        const maxTokenizationLineLength = this._configurationService.getValue('editor.maxTokenizationLineLength', {\n            overrideIdentifier: languageId\n        });\n        let stopRenderingMessage = false;\n        if (stopRenderingLineAfter >= 0 && lineLength > stopRenderingLineAfter && anchor.range.startColumn >= stopRenderingLineAfter) {\n            stopRenderingMessage = true;\n            result.push(new MarkdownHover(this, anchor.range, [{\n                    value: nls.localize('stopped rendering', \"Rendering paused for long line for performance reasons. This can be configured via `editor.stopRenderingLineAfter`.\")\n                }], false, index++));\n        }\n        if (!stopRenderingMessage && typeof maxTokenizationLineLength === 'number' && lineLength >= maxTokenizationLineLength) {\n            result.push(new MarkdownHover(this, anchor.range, [{\n                    value: nls.localize('too many characters', \"Tokenization is skipped for long lines for performance reasons. This can be configured via `editor.maxTokenizationLineLength`.\")\n                }], false, index++));\n        }\n        let isBeforeContent = false;\n        for (const d of lineDecorations) {\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            const hoverMessage = d.options.hoverMessage;\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n                continue;\n            }\n            if (d.options.beforeContentClassName) {\n                isBeforeContent = true;\n            }\n            const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\n            result.push(new MarkdownHover(this, range, asArray(hoverMessage), isBeforeContent, index++));\n        }\n        return result;\n    }\n    computeAsync(anchor, lineDecorations, token) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const model = this._editor.getModel();\n        if (!this._languageFeaturesService.hoverProvider.has(model)) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const position = new Position(anchor.range.startLineNumber, anchor.range.startColumn);\n        return getHover(this._languageFeaturesService.hoverProvider, model, position, token)\n            .filter(item => !isEmptyMarkdownString(item.hover.contents))\n            .map(item => {\n            const rng = item.hover.range ? Range.lift(item.hover.range) : anchor.range;\n            return new MarkdownHover(this, rng, item.hover.contents, false, item.ordinal);\n        });\n    }\n    renderHoverParts(context, hoverParts) {\n        return renderMarkdownHovers(context, hoverParts, this._editor, this._languageService, this._openerService);\n    }\n};\nMarkdownHoverParticipant = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IConfigurationService),\n    __param(4, ILanguageFeaturesService)\n], MarkdownHoverParticipant);\nexport { MarkdownHoverParticipant };\nexport function renderMarkdownHovers(context, hoverParts, editor, languageService, openerService) {\n    // Sort hover parts to keep them stable since they might come in async, out-of-order\n    hoverParts.sort((a, b) => a.ordinal - b.ordinal);\n    const disposables = new DisposableStore();\n    for (const hoverPart of hoverParts) {\n        for (const contents of hoverPart.contents) {\n            if (isEmptyMarkdownString(contents)) {\n                continue;\n            }\n            const markdownHoverElement = $('div.hover-row.markdown-hover');\n            const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n            const renderer = disposables.add(new MarkdownRenderer({ editor }, languageService, openerService));\n            disposables.add(renderer.onDidRenderAsync(() => {\n                hoverContentsElement.className = 'hover-contents code-hover-contents';\n                context.onContentsChanged();\n            }));\n            const renderedContents = disposables.add(renderer.render(contents));\n            hoverContentsElement.appendChild(renderedContents.element);\n            context.fragment.appendChild(markdownHoverElement);\n        }\n    }\n    return disposables;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Selection } from '../../../common/core/selection.js';\nexport class InPlaceReplaceCommand {\n    constructor(editRange, originalSelection, text) {\n        this._editRange = editRange;\n        this._originalSelection = originalSelection;\n        this._text = text;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._editRange, this._text);\n    }\n    computeCursorState(model, helper) {\n        const inverseEditOperations = helper.getInverseEditOperations();\n        const srcRange = inverseEditOperations[0].range;\n        if (!this._originalSelection.isEmpty()) {\n            // Preserve selection and extends to typed text\n            return new Selection(srcRange.endLineNumber, srcRange.endColumn - this._text.length, srcRange.endLineNumber, srcRange.endColumn);\n        }\n        return new Selection(srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn), srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { createCancelablePromise, timeout } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { EditorState } from '../../editorState/browser/editorState.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport * as nls from '../../../../nls.js';\nimport { InPlaceReplaceCommand } from './inPlaceReplaceCommand.js';\nimport './inPlaceReplace.css';\nlet InPlaceReplaceController = class InPlaceReplaceController {\n    static get(editor) {\n        return editor.getContribution(InPlaceReplaceController.ID);\n    }\n    constructor(editor, editorWorkerService) {\n        this.editor = editor;\n        this.editorWorkerService = editorWorkerService;\n        this.decorations = this.editor.createDecorationsCollection();\n    }\n    dispose() {\n    }\n    run(source, up) {\n        var _a;\n        // cancel any pending request\n        (_a = this.currentRequest) === null || _a === void 0 ? void 0 : _a.cancel();\n        const editorSelection = this.editor.getSelection();\n        const model = this.editor.getModel();\n        if (!model || !editorSelection) {\n            return undefined;\n        }\n        let selection = editorSelection;\n        if (selection.startLineNumber !== selection.endLineNumber) {\n            // Can't accept multiline selection\n            return undefined;\n        }\n        const state = new EditorState(this.editor, 1 /* CodeEditorStateFlag.Value */ | 4 /* CodeEditorStateFlag.Position */);\n        const modelURI = model.uri;\n        if (!this.editorWorkerService.canNavigateValueSet(modelURI)) {\n            return Promise.resolve(undefined);\n        }\n        this.currentRequest = createCancelablePromise(token => this.editorWorkerService.navigateValueSet(modelURI, selection, up));\n        return this.currentRequest.then(result => {\n            var _a;\n            if (!result || !result.range || !result.value) {\n                // No proper result\n                return;\n            }\n            if (!state.validate(this.editor)) {\n                // state has changed\n                return;\n            }\n            // Selection\n            const editRange = Range.lift(result.range);\n            let highlightRange = result.range;\n            const diff = result.value.length - (selection.endColumn - selection.startColumn);\n            // highlight\n            highlightRange = {\n                startLineNumber: highlightRange.startLineNumber,\n                startColumn: highlightRange.startColumn,\n                endLineNumber: highlightRange.endLineNumber,\n                endColumn: highlightRange.startColumn + result.value.length\n            };\n            if (diff > 1) {\n                selection = new Selection(selection.startLineNumber, selection.startColumn, selection.endLineNumber, selection.endColumn + diff - 1);\n            }\n            // Insert new text\n            const command = new InPlaceReplaceCommand(editRange, selection, result.value);\n            this.editor.pushUndoStop();\n            this.editor.executeCommand(source, command);\n            this.editor.pushUndoStop();\n            // add decoration\n            this.decorations.set([{\n                    range: highlightRange,\n                    options: InPlaceReplaceController.DECORATION\n                }]);\n            // remove decoration after delay\n            (_a = this.decorationRemover) === null || _a === void 0 ? void 0 : _a.cancel();\n            this.decorationRemover = timeout(350);\n            this.decorationRemover.then(() => this.decorations.clear()).catch(onUnexpectedError);\n        }).catch(onUnexpectedError);\n    }\n};\nInPlaceReplaceController.ID = 'editor.contrib.inPlaceReplaceController';\nInPlaceReplaceController.DECORATION = ModelDecorationOptions.register({\n    description: 'in-place-replace',\n    className: 'valueSetReplacement'\n});\nInPlaceReplaceController = __decorate([\n    __param(1, IEditorWorkerService)\n], InPlaceReplaceController);\nclass InPlaceReplaceUp extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inPlaceReplace.up',\n            label: nls.localize('InPlaceReplaceAction.previous.label', \"Replace with Previous Value\"),\n            alias: 'Replace with Previous Value',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 82 /* KeyCode.Comma */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = InPlaceReplaceController.get(editor);\n        if (!controller) {\n            return Promise.resolve(undefined);\n        }\n        return controller.run(this.id, true);\n    }\n}\nclass InPlaceReplaceDown extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inPlaceReplace.down',\n            label: nls.localize('InPlaceReplaceAction.next.label', \"Replace with Next Value\"),\n            alias: 'Replace with Next Value',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 84 /* KeyCode.Period */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = InPlaceReplaceController.get(editor);\n        if (!controller) {\n            return Promise.resolve(undefined);\n        }\n        return controller.run(this.id, false);\n    }\n}\nregisterEditorContribution(InPlaceReplaceController.ID, InPlaceReplaceController, 4 /* EditorContributionInstantiation.Lazy */);\nregisterEditorAction(InPlaceReplaceUp);\nregisterEditorAction(InPlaceReplaceDown);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function getSpaceCnt(str, tabSize) {\n    let spacesCnt = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) === '\\t') {\n            spacesCnt += tabSize;\n        }\n        else {\n            spacesCnt++;\n        }\n    }\n    return spacesCnt;\n}\nexport function generateIndent(spacesCnt, tabSize, insertSpaces) {\n    spacesCnt = spacesCnt < 0 ? 0 : spacesCnt;\n    let result = '';\n    if (!insertSpaces) {\n        const tabsCnt = Math.floor(spacesCnt / tabSize);\n        spacesCnt = spacesCnt % tabSize;\n        for (let i = 0; i < tabsCnt; i++) {\n            result += '\\t';\n        }\n    }\n    for (let i = 0; i < spacesCnt; i++) {\n        result += ' ';\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ShiftCommand } from '../../../common/commands/shiftCommand.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport * as indentUtils from './indentUtils.js';\nimport * as nls from '../../../../nls.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { normalizeIndentation } from '../../../common/core/indentation.js';\nimport { getGoodIndentForLine, getIndentMetadata } from '../../../common/languages/autoIndent.js';\nexport function getReindentEditOperations(model, languageConfigurationService, startLineNumber, endLineNumber, inheritedIndent) {\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n        // Model is empty\n        return [];\n    }\n    const indentationRules = languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).indentationRules;\n    if (!indentationRules) {\n        return [];\n    }\n    endLineNumber = Math.min(endLineNumber, model.getLineCount());\n    // Skip `unIndentedLinePattern` lines\n    while (startLineNumber <= endLineNumber) {\n        if (!indentationRules.unIndentedLinePattern) {\n            break;\n        }\n        const text = model.getLineContent(startLineNumber);\n        if (!indentationRules.unIndentedLinePattern.test(text)) {\n            break;\n        }\n        startLineNumber++;\n    }\n    if (startLineNumber > endLineNumber - 1) {\n        return [];\n    }\n    const { tabSize, indentSize, insertSpaces } = model.getOptions();\n    const shiftIndent = (indentation, count) => {\n        count = count || 1;\n        return ShiftCommand.shiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);\n    };\n    const unshiftIndent = (indentation, count) => {\n        count = count || 1;\n        return ShiftCommand.unshiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);\n    };\n    const indentEdits = [];\n    // indentation being passed to lines below\n    let globalIndent;\n    // Calculate indentation for the first line\n    // If there is no passed-in indentation, we use the indentation of the first line as base.\n    const currentLineText = model.getLineContent(startLineNumber);\n    let adjustedLineContent = currentLineText;\n    if (inheritedIndent !== undefined && inheritedIndent !== null) {\n        globalIndent = inheritedIndent;\n        const oldIndentation = strings.getLeadingWhitespace(currentLineText);\n        adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);\n        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {\n            globalIndent = unshiftIndent(globalIndent);\n            adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);\n        }\n        if (currentLineText !== adjustedLineContent) {\n            indentEdits.push(EditOperation.replaceMove(new Selection(startLineNumber, 1, startLineNumber, oldIndentation.length + 1), normalizeIndentation(globalIndent, indentSize, insertSpaces)));\n        }\n    }\n    else {\n        globalIndent = strings.getLeadingWhitespace(currentLineText);\n    }\n    // idealIndentForNextLine doesn't equal globalIndent when there is a line matching `indentNextLinePattern`.\n    let idealIndentForNextLine = globalIndent;\n    if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {\n        idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n        globalIndent = shiftIndent(globalIndent);\n    }\n    else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) {\n        idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n    }\n    startLineNumber++;\n    // Calculate indentation adjustment for all following lines\n    for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n        const text = model.getLineContent(lineNumber);\n        const oldIndentation = strings.getLeadingWhitespace(text);\n        const adjustedLineContent = idealIndentForNextLine + text.substring(oldIndentation.length);\n        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {\n            idealIndentForNextLine = unshiftIndent(idealIndentForNextLine);\n            globalIndent = unshiftIndent(globalIndent);\n        }\n        if (oldIndentation !== idealIndentForNextLine) {\n            indentEdits.push(EditOperation.replaceMove(new Selection(lineNumber, 1, lineNumber, oldIndentation.length + 1), normalizeIndentation(idealIndentForNextLine, indentSize, insertSpaces)));\n        }\n        // calculate idealIndentForNextLine\n        if (indentationRules.unIndentedLinePattern && indentationRules.unIndentedLinePattern.test(text)) {\n            // In reindent phase, if the line matches `unIndentedLinePattern` we inherit indentation from above lines\n            // but don't change globalIndent and idealIndentForNextLine.\n            continue;\n        }\n        else if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {\n            globalIndent = shiftIndent(globalIndent);\n            idealIndentForNextLine = globalIndent;\n        }\n        else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) {\n            idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n        }\n        else {\n            idealIndentForNextLine = globalIndent;\n        }\n    }\n    return indentEdits;\n}\nclass IndentationToSpacesAction extends EditorAction {\n    constructor() {\n        super({\n            id: IndentationToSpacesAction.ID,\n            label: nls.localize('indentationToSpaces', \"Convert Indentation to Spaces\"),\n            alias: 'Convert Indentation to Spaces',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const modelOpts = model.getOptions();\n        const selection = editor.getSelection();\n        if (!selection) {\n            return;\n        }\n        const command = new IndentationToSpacesCommand(selection, modelOpts.tabSize);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n        model.updateOptions({\n            insertSpaces: true\n        });\n    }\n}\nIndentationToSpacesAction.ID = 'editor.action.indentationToSpaces';\nexport { IndentationToSpacesAction };\nclass IndentationToTabsAction extends EditorAction {\n    constructor() {\n        super({\n            id: IndentationToTabsAction.ID,\n            label: nls.localize('indentationToTabs', \"Convert Indentation to Tabs\"),\n            alias: 'Convert Indentation to Tabs',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const modelOpts = model.getOptions();\n        const selection = editor.getSelection();\n        if (!selection) {\n            return;\n        }\n        const command = new IndentationToTabsCommand(selection, modelOpts.tabSize);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n        model.updateOptions({\n            insertSpaces: false\n        });\n    }\n}\nIndentationToTabsAction.ID = 'editor.action.indentationToTabs';\nexport { IndentationToTabsAction };\nexport class ChangeIndentationSizeAction extends EditorAction {\n    constructor(insertSpaces, displaySizeOnly, opts) {\n        super(opts);\n        this.insertSpaces = insertSpaces;\n        this.displaySizeOnly = displaySizeOnly;\n    }\n    run(accessor, editor) {\n        const quickInputService = accessor.get(IQuickInputService);\n        const modelService = accessor.get(IModelService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const creationOpts = modelService.getCreationOptions(model.getLanguageId(), model.uri, model.isForSimpleWidget);\n        const modelOpts = model.getOptions();\n        const picks = [1, 2, 3, 4, 5, 6, 7, 8].map(n => ({\n            id: n.toString(),\n            label: n.toString(),\n            // add description for tabSize value set in the configuration\n            description: (n === creationOpts.tabSize && n === modelOpts.tabSize\n                ? nls.localize('configuredTabSize', \"Configured Tab Size\")\n                : n === creationOpts.tabSize\n                    ? nls.localize('defaultTabSize', \"Default Tab Size\")\n                    : n === modelOpts.tabSize\n                        ? nls.localize('currentTabSize', \"Current Tab Size\")\n                        : undefined)\n        }));\n        // auto focus the tabSize set for the current editor\n        const autoFocusIndex = Math.min(model.getOptions().tabSize - 1, 7);\n        setTimeout(() => {\n            quickInputService.pick(picks, { placeHolder: nls.localize({ key: 'selectTabWidth', comment: ['Tab corresponds to the tab key'] }, \"Select Tab Size for Current File\"), activeItem: picks[autoFocusIndex] }).then(pick => {\n                if (pick) {\n                    if (model && !model.isDisposed()) {\n                        const pickedVal = parseInt(pick.label, 10);\n                        if (this.displaySizeOnly) {\n                            model.updateOptions({\n                                tabSize: pickedVal\n                            });\n                        }\n                        else {\n                            model.updateOptions({\n                                tabSize: pickedVal,\n                                indentSize: pickedVal,\n                                insertSpaces: this.insertSpaces\n                            });\n                        }\n                    }\n                }\n            });\n        }, 50 /* quick input is sensitive to being opened so soon after another */);\n    }\n}\nclass IndentUsingTabs extends ChangeIndentationSizeAction {\n    constructor() {\n        super(false, false, {\n            id: IndentUsingTabs.ID,\n            label: nls.localize('indentUsingTabs', \"Indent Using Tabs\"),\n            alias: 'Indent Using Tabs',\n            precondition: undefined\n        });\n    }\n}\nIndentUsingTabs.ID = 'editor.action.indentUsingTabs';\nexport { IndentUsingTabs };\nclass IndentUsingSpaces extends ChangeIndentationSizeAction {\n    constructor() {\n        super(true, false, {\n            id: IndentUsingSpaces.ID,\n            label: nls.localize('indentUsingSpaces', \"Indent Using Spaces\"),\n            alias: 'Indent Using Spaces',\n            precondition: undefined\n        });\n    }\n}\nIndentUsingSpaces.ID = 'editor.action.indentUsingSpaces';\nexport { IndentUsingSpaces };\nclass ChangeTabDisplaySize extends ChangeIndentationSizeAction {\n    constructor() {\n        super(true, true, {\n            id: ChangeTabDisplaySize.ID,\n            label: nls.localize('changeTabDisplaySize', \"Change Tab Display Size\"),\n            alias: 'Change Tab Display Size',\n            precondition: undefined\n        });\n    }\n}\nChangeTabDisplaySize.ID = 'editor.action.changeTabDisplaySize';\nexport { ChangeTabDisplaySize };\nclass DetectIndentation extends EditorAction {\n    constructor() {\n        super({\n            id: DetectIndentation.ID,\n            label: nls.localize('detectIndentation', \"Detect Indentation from Content\"),\n            alias: 'Detect Indentation from Content',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const modelService = accessor.get(IModelService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const creationOpts = modelService.getCreationOptions(model.getLanguageId(), model.uri, model.isForSimpleWidget);\n        model.detectIndentation(creationOpts.insertSpaces, creationOpts.tabSize);\n    }\n}\nDetectIndentation.ID = 'editor.action.detectIndentation';\nexport { DetectIndentation };\nexport class ReindentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.reindentlines',\n            label: nls.localize('editor.reindentlines', \"Reindent Lines\"),\n            alias: 'Reindent Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const edits = getReindentEditOperations(model, languageConfigurationService, 1, model.getLineCount());\n        if (edits.length > 0) {\n            editor.pushUndoStop();\n            editor.executeEdits(this.id, edits);\n            editor.pushUndoStop();\n        }\n    }\n}\nexport class ReindentSelectedLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.reindentselectedlines',\n            label: nls.localize('editor.reindentselectedlines', \"Reindent Selected Lines\"),\n            alias: 'Reindent Selected Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const edits = [];\n        for (const selection of selections) {\n            let startLineNumber = selection.startLineNumber;\n            let endLineNumber = selection.endLineNumber;\n            if (startLineNumber !== endLineNumber && selection.endColumn === 1) {\n                endLineNumber--;\n            }\n            if (startLineNumber === 1) {\n                if (startLineNumber === endLineNumber) {\n                    continue;\n                }\n            }\n            else {\n                startLineNumber--;\n            }\n            const editOperations = getReindentEditOperations(model, languageConfigurationService, startLineNumber, endLineNumber);\n            edits.push(...editOperations);\n        }\n        if (edits.length > 0) {\n            editor.pushUndoStop();\n            editor.executeEdits(this.id, edits);\n            editor.pushUndoStop();\n        }\n    }\n}\nexport class AutoIndentOnPasteCommand {\n    constructor(edits, initialSelection) {\n        this._initialSelection = initialSelection;\n        this._edits = [];\n        this._selectionId = null;\n        for (const edit of edits) {\n            if (edit.range && typeof edit.text === 'string') {\n                this._edits.push(edit);\n            }\n        }\n    }\n    getEditOperations(model, builder) {\n        for (const edit of this._edits) {\n            builder.addEditOperation(Range.lift(edit.range), edit.text);\n        }\n        let selectionIsSet = false;\n        if (Array.isArray(this._edits) && this._edits.length === 1 && this._initialSelection.isEmpty()) {\n            if (this._edits[0].range.startColumn === this._initialSelection.endColumn &&\n                this._edits[0].range.startLineNumber === this._initialSelection.endLineNumber) {\n                selectionIsSet = true;\n                this._selectionId = builder.trackSelection(this._initialSelection, true);\n            }\n            else if (this._edits[0].range.endColumn === this._initialSelection.startColumn &&\n                this._edits[0].range.endLineNumber === this._initialSelection.startLineNumber) {\n                selectionIsSet = true;\n                this._selectionId = builder.trackSelection(this._initialSelection, false);\n            }\n        }\n        if (!selectionIsSet) {\n            this._selectionId = builder.trackSelection(this._initialSelection);\n        }\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this._selectionId);\n    }\n}\nlet AutoIndentOnPaste = class AutoIndentOnPaste {\n    constructor(editor, _languageConfigurationService) {\n        this.editor = editor;\n        this._languageConfigurationService = _languageConfigurationService;\n        this.callOnDispose = new DisposableStore();\n        this.callOnModel = new DisposableStore();\n        this.callOnDispose.add(editor.onDidChangeConfiguration(() => this.update()));\n        this.callOnDispose.add(editor.onDidChangeModel(() => this.update()));\n        this.callOnDispose.add(editor.onDidChangeModelLanguage(() => this.update()));\n    }\n    update() {\n        // clean up\n        this.callOnModel.clear();\n        // we are disabled\n        if (this.editor.getOption(9 /* EditorOption.autoIndent */) < 4 /* EditorAutoIndentStrategy.Full */ || this.editor.getOption(52 /* EditorOption.formatOnPaste */)) {\n            return;\n        }\n        // no model\n        if (!this.editor.hasModel()) {\n            return;\n        }\n        this.callOnModel.add(this.editor.onDidPaste(({ range }) => {\n            this.trigger(range);\n        }));\n    }\n    trigger(range) {\n        const selections = this.editor.getSelections();\n        if (selections === null || selections.length > 1) {\n            return;\n        }\n        const model = this.editor.getModel();\n        if (!model) {\n            return;\n        }\n        if (!model.tokenization.isCheapToTokenize(range.getStartPosition().lineNumber)) {\n            return;\n        }\n        const autoIndent = this.editor.getOption(9 /* EditorOption.autoIndent */);\n        const { tabSize, indentSize, insertSpaces } = model.getOptions();\n        const textEdits = [];\n        const indentConverter = {\n            shiftIndent: (indentation) => {\n                return ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            },\n            unshiftIndent: (indentation) => {\n                return ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            }\n        };\n        let startLineNumber = range.startLineNumber;\n        while (startLineNumber <= range.endLineNumber) {\n            if (this.shouldIgnoreLine(model, startLineNumber)) {\n                startLineNumber++;\n                continue;\n            }\n            break;\n        }\n        if (startLineNumber > range.endLineNumber) {\n            return;\n        }\n        let firstLineText = model.getLineContent(startLineNumber);\n        if (!/\\S/.test(firstLineText.substring(0, range.startColumn - 1))) {\n            const indentOfFirstLine = getGoodIndentForLine(autoIndent, model, model.getLanguageId(), startLineNumber, indentConverter, this._languageConfigurationService);\n            if (indentOfFirstLine !== null) {\n                const oldIndentation = strings.getLeadingWhitespace(firstLineText);\n                const newSpaceCnt = indentUtils.getSpaceCnt(indentOfFirstLine, tabSize);\n                const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                if (newSpaceCnt !== oldSpaceCnt) {\n                    const newIndent = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                    textEdits.push({\n                        range: new Range(startLineNumber, 1, startLineNumber, oldIndentation.length + 1),\n                        text: newIndent\n                    });\n                    firstLineText = newIndent + firstLineText.substr(oldIndentation.length);\n                }\n                else {\n                    const indentMetadata = getIndentMetadata(model, startLineNumber, this._languageConfigurationService);\n                    if (indentMetadata === 0 || indentMetadata === 8 /* IndentConsts.UNINDENT_MASK */) {\n                        // we paste content into a line where only contains whitespaces\n                        // after pasting, the indentation of the first line is already correct\n                        // the first line doesn't match any indentation rule\n                        // then no-op.\n                        return;\n                    }\n                }\n            }\n        }\n        const firstLineNumber = startLineNumber;\n        // ignore empty or ignored lines\n        while (startLineNumber < range.endLineNumber) {\n            if (!/\\S/.test(model.getLineContent(startLineNumber + 1))) {\n                startLineNumber++;\n                continue;\n            }\n            break;\n        }\n        if (startLineNumber !== range.endLineNumber) {\n            const virtualModel = {\n                tokenization: {\n                    getLineTokens: (lineNumber) => {\n                        return model.tokenization.getLineTokens(lineNumber);\n                    },\n                    getLanguageId: () => {\n                        return model.getLanguageId();\n                    },\n                    getLanguageIdAtPosition: (lineNumber, column) => {\n                        return model.getLanguageIdAtPosition(lineNumber, column);\n                    },\n                },\n                getLineContent: (lineNumber) => {\n                    if (lineNumber === firstLineNumber) {\n                        return firstLineText;\n                    }\n                    else {\n                        return model.getLineContent(lineNumber);\n                    }\n                }\n            };\n            const indentOfSecondLine = getGoodIndentForLine(autoIndent, virtualModel, model.getLanguageId(), startLineNumber + 1, indentConverter, this._languageConfigurationService);\n            if (indentOfSecondLine !== null) {\n                const newSpaceCntOfSecondLine = indentUtils.getSpaceCnt(indentOfSecondLine, tabSize);\n                const oldSpaceCntOfSecondLine = indentUtils.getSpaceCnt(strings.getLeadingWhitespace(model.getLineContent(startLineNumber + 1)), tabSize);\n                if (newSpaceCntOfSecondLine !== oldSpaceCntOfSecondLine) {\n                    const spaceCntOffset = newSpaceCntOfSecondLine - oldSpaceCntOfSecondLine;\n                    for (let i = startLineNumber + 1; i <= range.endLineNumber; i++) {\n                        const lineContent = model.getLineContent(i);\n                        const originalIndent = strings.getLeadingWhitespace(lineContent);\n                        const originalSpacesCnt = indentUtils.getSpaceCnt(originalIndent, tabSize);\n                        const newSpacesCnt = originalSpacesCnt + spaceCntOffset;\n                        const newIndent = indentUtils.generateIndent(newSpacesCnt, tabSize, insertSpaces);\n                        if (newIndent !== originalIndent) {\n                            textEdits.push({\n                                range: new Range(i, 1, i, originalIndent.length + 1),\n                                text: newIndent\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        if (textEdits.length > 0) {\n            this.editor.pushUndoStop();\n            const cmd = new AutoIndentOnPasteCommand(textEdits, this.editor.getSelection());\n            this.editor.executeCommand('autoIndentOnPaste', cmd);\n            this.editor.pushUndoStop();\n        }\n    }\n    shouldIgnoreLine(model, lineNumber) {\n        model.tokenization.forceTokenization(lineNumber);\n        const nonWhitespaceColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\n        if (nonWhitespaceColumn === 0) {\n            return true;\n        }\n        const tokens = model.tokenization.getLineTokens(lineNumber);\n        if (tokens.getCount() > 0) {\n            const firstNonWhitespaceTokenIndex = tokens.findTokenIndexAtOffset(nonWhitespaceColumn);\n            if (firstNonWhitespaceTokenIndex >= 0 && tokens.getStandardTokenType(firstNonWhitespaceTokenIndex) === 1 /* StandardTokenType.Comment */) {\n                return true;\n            }\n        }\n        return false;\n    }\n    dispose() {\n        this.callOnDispose.dispose();\n        this.callOnModel.dispose();\n    }\n};\nAutoIndentOnPaste.ID = 'editor.contrib.autoIndentOnPaste';\nAutoIndentOnPaste = __decorate([\n    __param(1, ILanguageConfigurationService)\n], AutoIndentOnPaste);\nexport { AutoIndentOnPaste };\nfunction getIndentationEditOperations(model, builder, tabSize, tabsToSpaces) {\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n        // Model is empty\n        return;\n    }\n    let spaces = '';\n    for (let i = 0; i < tabSize; i++) {\n        spaces += ' ';\n    }\n    const spacesRegExp = new RegExp(spaces, 'gi');\n    for (let lineNumber = 1, lineCount = model.getLineCount(); lineNumber <= lineCount; lineNumber++) {\n        let lastIndentationColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\n        if (lastIndentationColumn === 0) {\n            lastIndentationColumn = model.getLineMaxColumn(lineNumber);\n        }\n        if (lastIndentationColumn === 1) {\n            continue;\n        }\n        const originalIndentationRange = new Range(lineNumber, 1, lineNumber, lastIndentationColumn);\n        const originalIndentation = model.getValueInRange(originalIndentationRange);\n        const newIndentation = (tabsToSpaces\n            ? originalIndentation.replace(/\\t/ig, spaces)\n            : originalIndentation.replace(spacesRegExp, '\\t'));\n        builder.addEditOperation(originalIndentationRange, newIndentation);\n    }\n}\nexport class IndentationToSpacesCommand {\n    constructor(selection, tabSize) {\n        this.selection = selection;\n        this.tabSize = tabSize;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        this.selectionId = builder.trackSelection(this.selection);\n        getIndentationEditOperations(model, builder, this.tabSize, true);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n}\nexport class IndentationToTabsCommand {\n    constructor(selection, tabSize) {\n        this.selection = selection;\n        this.tabSize = tabSize;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        this.selectionId = builder.trackSelection(this.selection);\n        getIndentationEditOperations(model, builder, this.tabSize, false);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n}\nregisterEditorContribution(AutoIndentOnPaste.ID, AutoIndentOnPaste, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorAction(IndentationToSpacesAction);\nregisterEditorAction(IndentationToTabsAction);\nregisterEditorAction(IndentUsingTabs);\nregisterEditorAction(IndentUsingSpaces);\nregisterEditorAction(ChangeTabDisplaySize);\nregisterEditorAction(DetectIndentation);\nregisterEditorAction(ReindentLinesAction);\nregisterEditorAction(ReindentSelectedLinesAction);\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","HoverProviderResult","_createClass","provider","hover","ordinal","_classCallCheck","this","getHover","registry","model","position","token","promises","ordered","map","index","_regeneratorRuntime","mark","_callee","wrap","_context","prev","provideHover","sent","isValid","abrupt","t0","onUnexpectedExternalError","undefined","stop","executeProvider","AsyncIterableObject","fromPromises","coalesce","hasRange","range","hasHtmlContent","contents","length","registerModelAndPositionCommand","accessor","item","toPromise","getHoverPromise","get","ILanguageFeaturesService","hoverProvider","CancellationToken","None","__asyncValues","o","Symbol","asyncIterator","TypeError","i","m","call","__values","iterator","verb","n","v","d","settle","HoverResult","isComplete","hasLoadingMessage","HoverOperation","_Disposable","_inherits","_super","_createSuper","_editor","_computer","_this","_onResult","_register","Emitter","onResult","event","_firstWaitScheduler","RunOnceScheduler","_triggerAsyncComputation","_secondWaitScheduler","_triggerSyncComputation","_loadingMessageScheduler","_triggerLoadingMessage","_state","_asyncIterable","_asyncIterableDone","_result","key","cancel","_get","_getPrototypeOf","prototype","getOption","delay","_hoverTime","_firstWaitTime","state","fireResult","arguments","_fireResult","_this2","_setState","schedule","_secondWaitTime","computeAsync","createCancelableAsyncIterable","_a","e_1","_b","_c","_d","_e","_f","push","error","return","finish","t1","onUnexpectedError","computeSync","concat","fire","slice","mode","_loadingMessageTime","Disposable","__decorate","decorators","target","desc","c","r","Object","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","$","dom","ContentHoverController","_instantiationService","_keybindingService","_widget","createInstance","ContentHoverWidget","_currentResult","_participants","_step","_iterator","_createForOfIteratorHelper","HoverParticipantRegistry","getAll","s","participant","err","f","sort","p1","p2","hoverOrdinal","ContentHoverComputer","_hoverOperation","anchor","messages","_addLoadingMessage","_withResult","addStandardDisposableListener","getDomNode","equals","hide","TokenizationRegistry","onDidChange","clear","_setCurrentResult","mouseEvent","_step2","anchorCandidates","_iterator2","suggestHoverAnchor","type","HoverRangeAnchor","posx","posy","epsilon","typicalHalfwidthCharacterWidth","detail","isAfterLines","horizontalDistanceToText","_startShowingOrUpdateHover","a","b","priority","source","focus","sticky","isMouseGettingCloser","_startHoverOperationIfNecessary","canAdoptVisibleHover","filter","insistOnKeepingHoverVisible","shouldFocus","start","hoverResult","_renderMessages","isColorPickerVisible","isVisibleFromKeyboard","node","contains","_step3","_iterator3","createLoadingMessage","loadingMessage","_step4","_ContentHoverControll","computeHoverRanges","showAtPosition","showAtSecondaryPosition","highlightRange","disposables","DisposableStore","statusBar","add","EditorHoverStatusBar","fragment","document","createDocumentFragment","colorPicker","context","setColorPicker","widget","onContentsChanged","_iterator4","_loop","hoverParts","msg","owner","renderHoverParts","isBeforeContent","some","hasContent","appendChild","hoverElement","hasChildNodes","highlightDecoration","createDecorationsCollection","set","options","_DECORATION_OPTIONS","toDisposable","showAt","ContentHoverVisibleData","above","initialMousePosX","initialMousePosY","dispose","editor","anchorRange","startColumnBoundary","hasModel","viewModel","_getViewModel","coordinatesConverter","anchorViewRange","convertModelRangeToViewRange","anchorViewRangeStart","Position","startLineNumber","getLineMinColumn","convertViewPositionToModelPosition","column","_step5","anchorLineNumber","renderStartColumn","startColumn","forceShowAtRange","_iterator5","Range","plusRange","endLineNumber","Math","max","min","getStartPosition","ModelDecorationOptions","register","description","className","IInstantiationService","IKeybindingService","filteredMessages","isValidForHoverAnchor","FilteredHoverResult","_HoverResult","_super2","original","_this3","preferAbove","stoleFocus","closestMouseDistance","_Disposable2","_super3","_contextKeyService","_this4","allowEditorOverflow","_hoverVisibleKey","EditorContextKeys","hoverVisible","bindTo","_hover","HoverWidget","_visibleData","onDidLayoutChange","_layout","onDidChangeConfiguration","hasChanged","_updateFont","_setVisibleData","addContentWidget","_assertThisInitialized","Boolean","removeContentWidget","ID","containerDomNode","getContextKeyValue","SuggestContext","Visible","affinity","secondaryPosition","preference","positionAffinity","widgetRect","getDomNodePagePosition","computeDistanceFromPointToRectangle","left","top","width","height","distance","visibleData","classList","toggle","getLayoutInfo","_this$_editor$getOpti","fontSize","lineHeight","contentsDomNode","style","maxHeight","maxWidth","_this5","Array","getElementsByClassName","forEach","applyFontInfo","textContent","paddingBottom","render","layout","layoutContentWidget","scrollDimensions","scrollbar","getScrollDimensions","scrollWidth","extraBottomPadding","horizontalScrollbarSize","IContextKeyService","_Disposable3","_super4","_this6","_hasContent","actionsElement","append","actionOptions","keybinding","lookupKeybinding","commandId","keybindingLabel","getLabel","HoverAction","element","_anchor","_shouldFocus","_source","_insistOnKeepingHoverVisible","EMPTY","lineDecorations","_getLineDecorations","merge","_step6","_iterator6","supportsMarkerHover","getModel","lineNumber","getLineCount","maxColumn","getLineMaxColumn","getLineDecorations","isWholeLine","endColumn","showIfCollapsed","pointX","pointY","x","y","dx","abs","dy","sqrt","MarginHoverWidget","languageService","openerService","_renderDisposeables","_isVisible","_messages","_markdownRenderer","MarkdownRenderer","MarginHoverComputer","onDidChangeModelDecorations","_onModelDecorationsChanged","addOverlayWidget","removeOverlayWidget","markdownHoverElement","hoverContentsElement","renderedContents","_updateContents","_showAt","editorLayout","topForLineNumber","getTopForLineNumber","editorScrollTop","getScrollTop","clientHeight","glyphMarginLeft","glyphMarginWidth","round","_lineNumber","toHoverMessage","glyphMarginClassName","hoverMessage","glyphMarginHoverMessage","isEmptyMarkdownString","_toConsumableArray","asArray","MarkerHover","marker","markerCodeActionTrigger","include","CodeActionKind","QuickFix","triggerAction","CodeActionTriggerSource","QuickFixHover","MarkerHoverParticipant","_markerDecorationsService","_openerService","_languageFeaturesService","recentMarkerCodeActionsInfo","getMarker","uri","renderMarkerHover","markerHoverForStatusbar","MarkerSeverity","compare","severity","renderMarkerStatusbar","markerHover","markerElement","_markerHover$marker","message","code","relatedInformation","messageElement","whiteSpace","innerText","sourceAndCodeElement","codeLink","setAttribute","toString","addDisposableListener","open","allowCommands","preventDefault","stopPropagation","detailsElement","opacity","paddingLeft","isNonEmptyArray","_step2$value","resource","relatedInfoContainer","marginTop","basename","cursor","fromUserGesture","editorOptions","selection","catch","Error","Warning","Info","addAction","label","nls","NextMarkerAction","run","MarkerController","showAtMarker","quickfixPlaceholderElement","IMarkerData","makeKey","hasCodeActions","updatePlaceholderDisposable","disposableTimeout","String","fromCharCode","codeActionsPromise","getCodeActions","actions","validActions","display","showing","QuickFixAction","Id","controller","CodeActionController","elementPosition","showCodeActions","createCancelablePromise","cancellationToken","codeActionProvider","Progress","IMarkerDecorationsService","IOpenerService","ModesHoverController","_languageService","_toUnhook","_isMouseDown","_hoverClicked","_contentWidget","_glyphWidget","_hookEvents","_didChangeConfigurationHandler","_unhookEvents","hoverOpts","_isHoverEnabled","enabled","_isHoverSticky","onMouseDown","_onEditorMouseDown","onMouseUp","_onEditorMouseUp","onMouseMove","_onEditorMouseMove","onKeyDown","_onKeyDown","onMouseLeave","_onEditorMouseLeave","onDidChangeModel","_hideWidgets","onDidScrollChange","_onEditorScrollChanged","scrollTopChanged","scrollLeftChanged","targetEm","browserEvent","relatedTarget","containsNode","view","getSelection","isCollapsed","_getOrCreateContentWidget","maybeShowAt","startShowingAt","keyCode","InlineSuggestionHintsContentWidget","dropDownVisible","startShowingAtRange","getContribution","ILanguageService","ShowHoverAction","_EditorAction","id","comment","alias","precondition","kbOpts","kbExpr","editorTextFocus","primary","KeyChord","weight","getPosition","showContentHover","EditorAction","ShowDefinitionPreviewHoverAction","_EditorAction2","goto","GotoDefinitionAtPositionEditorContribution","startFindDefinitionFromCursor","registerEditorContribution","registerEditorAction","MarkdownHoverParticipant","registerThemingParticipant","theme","collector","hoverBorder","getColor","editorHoverBorder","addRule","transparent","other","equalsRange","lastAnchor","HoverForeignElementAnchor","ctor","MarkdownHover","_configurationService","MarkdownString","appendText","lineLength","getLineLength","languageId","getLanguageIdAtPosition","stopRenderingLineAfter","maxTokenizationLineLength","getValue","overrideIdentifier","stopRenderingMessage","beforeContentClassName","has","rng","lift","renderMarkdownHovers","hoverPart","renderer","onDidRenderAsync","IConfigurationService","InPlaceReplaceCommand","editRange","originalSelection","text","_editRange","_originalSelection","_text","builder","addTrackedEditOperation","helper","srcRange","getInverseEditOperations","isEmpty","Selection","positionColumn","InPlaceReplaceController","editorWorkerService","decorations","up","currentRequest","editorSelection","EditorState","modelURI","canNavigateValueSet","navigateValueSet","validate","diff","command","pushUndoStop","executeCommand","DECORATION","decorationRemover","timeout","IEditorWorkerService","InPlaceReplaceUp","writable","InPlaceReplaceDown","getSpaceCnt","str","tabSize","spacesCnt","charAt","generateIndent","insertSpaces","tabsCnt","floor","getReindentEditOperations","languageConfigurationService","inheritedIndent","indentationRules","getLanguageConfiguration","getLanguageId","unIndentedLinePattern","getLineContent","test","globalIndent","_model$getOptions","getOptions","indentSize","shiftIndent","indentation","count","ShiftCommand","unshiftIndent","indentEdits","currentLineText","adjustedLineContent","oldIndentation","strings","substring","decreaseIndentPattern","EditOperation","replaceMove","normalizeIndentation","idealIndentForNextLine","increaseIndentPattern","indentNextLinePattern","IndentationToSpacesAction","modelOpts","IndentationToSpacesCommand","executeCommands","updateOptions","IndentationToTabsAction","IndentationToTabsCommand","ChangeIndentationSizeAction","_EditorAction3","displaySizeOnly","opts","quickInputService","IQuickInputService","modelService","IModelService","creationOpts","getCreationOptions","isForSimpleWidget","picks","autoFocusIndex","setTimeout","pick","placeHolder","activeItem","isDisposed","pickedVal","parseInt","IndentUsingTabs","_ChangeIndentationSiz","IndentUsingSpaces","_ChangeIndentationSiz2","_super5","ChangeTabDisplaySize","_ChangeIndentationSiz3","_super6","DetectIndentation","_EditorAction4","_super7","detectIndentation","ReindentLinesAction","_EditorAction5","_super8","ILanguageConfigurationService","edits","executeEdits","ReindentSelectedLinesAction","_EditorAction6","_super9","selections","getSelections","editOperations","AutoIndentOnPasteCommand","initialSelection","_initialSelection","_edits","_selectionId","edit","addEditOperation","selectionIsSet","isArray","trackSelection","getTrackedSelection","AutoIndentOnPaste","_languageConfigurationService","callOnDispose","callOnModel","update","onDidChangeModelLanguage","onDidPaste","_ref","trigger","tokenization","isCheapToTokenize","autoIndent","_model$getOptions2","textEdits","indentConverter","shouldIgnoreLine","firstLineText","indentOfFirstLine","getGoodIndentForLine","newSpaceCnt","indentUtils","newIndent","substr","indentMetadata","getIndentMetadata","firstLineNumber","virtualModel","getLineTokens","indentOfSecondLine","newSpaceCntOfSecondLine","oldSpaceCntOfSecondLine","spaceCntOffset","lineContent","originalIndent","newSpacesCnt","cmd","forceTokenization","nonWhitespaceColumn","getLineFirstNonWhitespaceColumn","tokens","getCount","firstNonWhitespaceTokenIndex","findTokenIndexAtOffset","getStandardTokenType","getIndentationEditOperations","tabsToSpaces","spaces","spacesRegExp","RegExp","lineCount","lastIndentationColumn","originalIndentationRange","originalIndentation","getValueInRange","newIndentation","replace","selectionId"],"sourceRoot":""}