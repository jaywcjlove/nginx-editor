{"version":3,"file":"static/js/monaco-editor-vendor.b74e11c3.2265e73b.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/editor/contrib/dnd/browser/dragAndDropCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/dnd/browser/dnd.js","../node_modules/monaco-editor/esm/vs/editor/contrib/documentSymbols/browser/documentSymbols.js","../node_modules/monaco-editor/esm/vs/editor/contrib/documentSymbols/browser/outlineModel.js","../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/copyPasteController.js","../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/copyPasteContribution.js","../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/defaultProviders.js","../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/dropIntoEditorController.js","../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/dropIntoEditorContribution.js","../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/edit.js","../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/postEditWidget.js","../node_modules/monaco-editor/esm/vs/editor/contrib/editorState/browser/keybindingCancellation.js","../node_modules/monaco-editor/esm/vs/editor/contrib/editorState/browser/editorState.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findDecorations.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/replaceAllCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/replacePattern.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findModel.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findOptionsWidget.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findState.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findWidget.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class DragAndDropCommand {\n    constructor(selection, targetPosition, copy) {\n        this.selection = selection;\n        this.targetPosition = targetPosition;\n        this.copy = copy;\n        this.targetSelection = null;\n    }\n    getEditOperations(model, builder) {\n        const text = model.getValueInRange(this.selection);\n        if (!this.copy) {\n            builder.addEditOperation(this.selection, null);\n        }\n        builder.addEditOperation(new Range(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column), text);\n        if (this.selection.containsPosition(this.targetPosition) && !(this.copy && (this.selection.getEndPosition().equals(this.targetPosition) || this.selection.getStartPosition().equals(this.targetPosition)) // we allow users to paste content beside the selection\n        )) {\n            this.targetSelection = this.selection;\n            return;\n        }\n        if (this.copy) {\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.selection.endLineNumber - this.selection.startLineNumber + this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        if (this.targetPosition.lineNumber > this.selection.endLineNumber) {\n            // Drag the selection downwards\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        if (this.targetPosition.lineNumber < this.selection.endLineNumber) {\n            // Drag the selection upwards\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber + this.selection.endLineNumber - this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        // The target position is at the same line as the selection's end position.\n        if (this.selection.endColumn <= this.targetPosition.column) {\n            // The target position is after the selection's end position\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn :\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column :\n                this.selection.endColumn);\n        }\n        else {\n            // The target position is before the selection's end position. Since the selection doesn't contain the target position, the selection is one-line and target position is before this selection.\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column + this.selection.endColumn - this.selection.startColumn);\n        }\n    }\n    computeCursorState(model, helper) {\n        return this.targetSelection;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { isMacintosh } from '../../../../base/common/platform.js';\nimport './dnd.css';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { DragAndDropCommand } from './dragAndDropCommand.js';\nfunction hasTriggerModifier(e) {\n    if (isMacintosh) {\n        return e.altKey;\n    }\n    else {\n        return e.ctrlKey;\n    }\n}\nexport class DragAndDropController extends Disposable {\n    constructor(editor) {\n        super();\n        this._editor = editor;\n        this._dndDecorationIds = this._editor.createDecorationsCollection();\n        this._register(this._editor.onMouseDown((e) => this._onEditorMouseDown(e)));\n        this._register(this._editor.onMouseUp((e) => this._onEditorMouseUp(e)));\n        this._register(this._editor.onMouseDrag((e) => this._onEditorMouseDrag(e)));\n        this._register(this._editor.onMouseDrop((e) => this._onEditorMouseDrop(e)));\n        this._register(this._editor.onMouseDropCanceled(() => this._onEditorMouseDropCanceled()));\n        this._register(this._editor.onKeyDown((e) => this.onEditorKeyDown(e)));\n        this._register(this._editor.onKeyUp((e) => this.onEditorKeyUp(e)));\n        this._register(this._editor.onDidBlurEditorWidget(() => this.onEditorBlur()));\n        this._register(this._editor.onDidBlurEditorText(() => this.onEditorBlur()));\n        this._mouseDown = false;\n        this._modifierPressed = false;\n        this._dragSelection = null;\n    }\n    onEditorBlur() {\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n        this._modifierPressed = false;\n    }\n    onEditorKeyDown(e) {\n        if (!this._editor.getOption(35 /* EditorOption.dragAndDrop */) || this._editor.getOption(22 /* EditorOption.columnSelection */)) {\n            return;\n        }\n        if (hasTriggerModifier(e)) {\n            this._modifierPressed = true;\n        }\n        if (this._mouseDown && hasTriggerModifier(e)) {\n            this._editor.updateOptions({\n                mouseStyle: 'copy'\n            });\n        }\n    }\n    onEditorKeyUp(e) {\n        if (!this._editor.getOption(35 /* EditorOption.dragAndDrop */) || this._editor.getOption(22 /* EditorOption.columnSelection */)) {\n            return;\n        }\n        if (hasTriggerModifier(e)) {\n            this._modifierPressed = false;\n        }\n        if (this._mouseDown && e.keyCode === DragAndDropController.TRIGGER_KEY_VALUE) {\n            this._editor.updateOptions({\n                mouseStyle: 'default'\n            });\n        }\n    }\n    _onEditorMouseDown(mouseEvent) {\n        this._mouseDown = true;\n    }\n    _onEditorMouseUp(mouseEvent) {\n        this._mouseDown = false;\n        // Whenever users release the mouse, the drag and drop operation should finish and the cursor should revert to text.\n        this._editor.updateOptions({\n            mouseStyle: 'text'\n        });\n    }\n    _onEditorMouseDrag(mouseEvent) {\n        const target = mouseEvent.target;\n        if (this._dragSelection === null) {\n            const selections = this._editor.getSelections() || [];\n            const possibleSelections = selections.filter(selection => target.position && selection.containsPosition(target.position));\n            if (possibleSelections.length === 1) {\n                this._dragSelection = possibleSelections[0];\n            }\n            else {\n                return;\n            }\n        }\n        if (hasTriggerModifier(mouseEvent.event)) {\n            this._editor.updateOptions({\n                mouseStyle: 'copy'\n            });\n        }\n        else {\n            this._editor.updateOptions({\n                mouseStyle: 'default'\n            });\n        }\n        if (target.position) {\n            if (this._dragSelection.containsPosition(target.position)) {\n                this._removeDecoration();\n            }\n            else {\n                this.showAt(target.position);\n            }\n        }\n    }\n    _onEditorMouseDropCanceled() {\n        this._editor.updateOptions({\n            mouseStyle: 'text'\n        });\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n    }\n    _onEditorMouseDrop(mouseEvent) {\n        if (mouseEvent.target && (this._hitContent(mouseEvent.target) || this._hitMargin(mouseEvent.target)) && mouseEvent.target.position) {\n            const newCursorPosition = new Position(mouseEvent.target.position.lineNumber, mouseEvent.target.position.column);\n            if (this._dragSelection === null) {\n                let newSelections = null;\n                if (mouseEvent.event.shiftKey) {\n                    const primarySelection = this._editor.getSelection();\n                    if (primarySelection) {\n                        const { selectionStartLineNumber, selectionStartColumn } = primarySelection;\n                        newSelections = [new Selection(selectionStartLineNumber, selectionStartColumn, newCursorPosition.lineNumber, newCursorPosition.column)];\n                    }\n                }\n                else {\n                    newSelections = (this._editor.getSelections() || []).map(selection => {\n                        if (selection.containsPosition(newCursorPosition)) {\n                            return new Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);\n                        }\n                        else {\n                            return selection;\n                        }\n                    });\n                }\n                // Use `mouse` as the source instead of `api` and setting the reason to explicit (to behave like any other mouse operation).\n                this._editor.setSelections(newSelections || [], 'mouse', 3 /* CursorChangeReason.Explicit */);\n            }\n            else if (!this._dragSelection.containsPosition(newCursorPosition) ||\n                ((hasTriggerModifier(mouseEvent.event) ||\n                    this._modifierPressed) && (this._dragSelection.getEndPosition().equals(newCursorPosition) || this._dragSelection.getStartPosition().equals(newCursorPosition)) // we allow users to paste content beside the selection\n                )) {\n                this._editor.pushUndoStop();\n                this._editor.executeCommand(DragAndDropController.ID, new DragAndDropCommand(this._dragSelection, newCursorPosition, hasTriggerModifier(mouseEvent.event) || this._modifierPressed));\n                this._editor.pushUndoStop();\n            }\n        }\n        this._editor.updateOptions({\n            mouseStyle: 'text'\n        });\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n    }\n    showAt(position) {\n        this._dndDecorationIds.set([{\n                range: new Range(position.lineNumber, position.column, position.lineNumber, position.column),\n                options: DragAndDropController._DECORATION_OPTIONS\n            }]);\n        this._editor.revealPosition(position, 1 /* ScrollType.Immediate */);\n    }\n    _removeDecoration() {\n        this._dndDecorationIds.clear();\n    }\n    _hitContent(target) {\n        return target.type === 6 /* MouseTargetType.CONTENT_TEXT */ ||\n            target.type === 7 /* MouseTargetType.CONTENT_EMPTY */;\n    }\n    _hitMargin(target) {\n        return target.type === 2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */ ||\n            target.type === 3 /* MouseTargetType.GUTTER_LINE_NUMBERS */ ||\n            target.type === 4 /* MouseTargetType.GUTTER_LINE_DECORATIONS */;\n    }\n    dispose() {\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n        this._modifierPressed = false;\n        super.dispose();\n    }\n}\nDragAndDropController.ID = 'editor.contrib.dragAndDrop';\nDragAndDropController.TRIGGER_KEY_VALUE = isMacintosh ? 6 /* KeyCode.Alt */ : 5 /* KeyCode.Ctrl */;\nDragAndDropController._DECORATION_OPTIONS = ModelDecorationOptions.register({\n    description: 'dnd-target',\n    className: 'dnd-target'\n});\nregisterEditorContribution(DragAndDropController.ID, DragAndDropController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { IOutlineModelService } from './outlineModel.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nCommandsRegistry.registerCommand('_executeDocumentSymbolProvider', function (accessor, ...args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [resource] = args;\n        assertType(URI.isUri(resource));\n        const outlineService = accessor.get(IOutlineModelService);\n        const modelService = accessor.get(ITextModelService);\n        const reference = yield modelService.createModelReference(resource);\n        try {\n            return (yield outlineService.getOrCreate(reference.object.textEditorModel, CancellationToken.None)).getTopLevelSymbols();\n        }\n        finally {\n            reference.dispose();\n        }\n    });\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { equals } from '../../../../base/common/arrays.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport class TreeElement {\n    remove() {\n        var _a;\n        (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.delete(this.id);\n    }\n    static findId(candidate, container) {\n        // complex id-computation which contains the origin/extension,\n        // the parent path, and some dedupe logic when names collide\n        let candidateId;\n        if (typeof candidate === 'string') {\n            candidateId = `${container.id}/${candidate}`;\n        }\n        else {\n            candidateId = `${container.id}/${candidate.name}`;\n            if (container.children.get(candidateId) !== undefined) {\n                candidateId = `${container.id}/${candidate.name}_${candidate.range.startLineNumber}_${candidate.range.startColumn}`;\n            }\n        }\n        let id = candidateId;\n        for (let i = 0; container.children.get(id) !== undefined; i++) {\n            id = `${candidateId}_${i}`;\n        }\n        return id;\n    }\n    static empty(element) {\n        return element.children.size === 0;\n    }\n}\nexport class OutlineElement extends TreeElement {\n    constructor(id, parent, symbol) {\n        super();\n        this.id = id;\n        this.parent = parent;\n        this.symbol = symbol;\n        this.children = new Map();\n    }\n}\nexport class OutlineGroup extends TreeElement {\n    constructor(id, parent, label, order) {\n        super();\n        this.id = id;\n        this.parent = parent;\n        this.label = label;\n        this.order = order;\n        this.children = new Map();\n    }\n}\nexport class OutlineModel extends TreeElement {\n    static create(registry, textModel, token) {\n        const cts = new CancellationTokenSource(token);\n        const result = new OutlineModel(textModel.uri);\n        const provider = registry.ordered(textModel);\n        const promises = provider.map((provider, index) => {\n            var _a;\n            const id = TreeElement.findId(`provider_${index}`, result);\n            const group = new OutlineGroup(id, result, (_a = provider.displayName) !== null && _a !== void 0 ? _a : 'Unknown Outline Provider', index);\n            return Promise.resolve(provider.provideDocumentSymbols(textModel, cts.token)).then(result => {\n                for (const info of result || []) {\n                    OutlineModel._makeOutlineElement(info, group);\n                }\n                return group;\n            }, err => {\n                onUnexpectedExternalError(err);\n                return group;\n            }).then(group => {\n                if (!TreeElement.empty(group)) {\n                    result._groups.set(id, group);\n                }\n                else {\n                    group.remove();\n                }\n            });\n        });\n        const listener = registry.onDidChange(() => {\n            const newProvider = registry.ordered(textModel);\n            if (!equals(newProvider, provider)) {\n                cts.cancel();\n            }\n        });\n        return Promise.all(promises).then(() => {\n            if (cts.token.isCancellationRequested && !token.isCancellationRequested) {\n                return OutlineModel.create(registry, textModel, token);\n            }\n            else {\n                return result._compact();\n            }\n        }).finally(() => {\n            cts.dispose();\n            listener.dispose();\n            cts.dispose();\n        });\n    }\n    static _makeOutlineElement(info, container) {\n        const id = TreeElement.findId(info, container);\n        const res = new OutlineElement(id, container, info);\n        if (info.children) {\n            for (const childInfo of info.children) {\n                OutlineModel._makeOutlineElement(childInfo, res);\n            }\n        }\n        container.children.set(res.id, res);\n    }\n    constructor(uri) {\n        super();\n        this.uri = uri;\n        this.id = 'root';\n        this.parent = undefined;\n        this._groups = new Map();\n        this.children = new Map();\n        this.id = 'root';\n        this.parent = undefined;\n    }\n    _compact() {\n        let count = 0;\n        for (const [key, group] of this._groups) {\n            if (group.children.size === 0) { // empty\n                this._groups.delete(key);\n            }\n            else {\n                count += 1;\n            }\n        }\n        if (count !== 1) {\n            //\n            this.children = this._groups;\n        }\n        else {\n            // adopt all elements of the first group\n            const group = Iterable.first(this._groups.values());\n            for (const [, child] of group.children) {\n                child.parent = this;\n                this.children.set(child.id, child);\n            }\n        }\n        return this;\n    }\n    getTopLevelSymbols() {\n        const roots = [];\n        for (const child of this.children.values()) {\n            if (child instanceof OutlineElement) {\n                roots.push(child.symbol);\n            }\n            else {\n                roots.push(...Iterable.map(child.children.values(), child => child.symbol));\n            }\n        }\n        return roots.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\n    }\n    asListOfDocumentSymbols() {\n        const roots = this.getTopLevelSymbols();\n        const bucket = [];\n        OutlineModel._flattenDocumentSymbols(bucket, roots, '');\n        return bucket.sort((a, b) => Position.compare(Range.getStartPosition(a.range), Range.getStartPosition(b.range)) || Position.compare(Range.getEndPosition(b.range), Range.getEndPosition(a.range)));\n    }\n    static _flattenDocumentSymbols(bucket, entries, overrideContainerLabel) {\n        for (const entry of entries) {\n            bucket.push({\n                kind: entry.kind,\n                tags: entry.tags,\n                name: entry.name,\n                detail: entry.detail,\n                containerName: entry.containerName || overrideContainerLabel,\n                range: entry.range,\n                selectionRange: entry.selectionRange,\n                children: undefined, // we flatten it...\n            });\n            // Recurse over children\n            if (entry.children) {\n                OutlineModel._flattenDocumentSymbols(bucket, entry.children, entry.name);\n            }\n        }\n    }\n}\nexport const IOutlineModelService = createDecorator('IOutlineModelService');\nlet OutlineModelService = class OutlineModelService {\n    constructor(_languageFeaturesService, debounces, modelService) {\n        this._languageFeaturesService = _languageFeaturesService;\n        this._disposables = new DisposableStore();\n        this._cache = new LRUCache(10, 0.7);\n        this._debounceInformation = debounces.for(_languageFeaturesService.documentSymbolProvider, 'DocumentSymbols', { min: 350 });\n        // don't cache outline models longer than their text model\n        this._disposables.add(modelService.onModelRemoved(textModel => {\n            this._cache.delete(textModel.id);\n        }));\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n    getOrCreate(textModel, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const registry = this._languageFeaturesService.documentSymbolProvider;\n            const provider = registry.ordered(textModel);\n            let data = this._cache.get(textModel.id);\n            if (!data || data.versionId !== textModel.getVersionId() || !equals(data.provider, provider)) {\n                const source = new CancellationTokenSource();\n                data = {\n                    versionId: textModel.getVersionId(),\n                    provider,\n                    promiseCnt: 0,\n                    source,\n                    promise: OutlineModel.create(registry, textModel, source.token),\n                    model: undefined,\n                };\n                this._cache.set(textModel.id, data);\n                const now = Date.now();\n                data.promise.then(outlineModel => {\n                    data.model = outlineModel;\n                    this._debounceInformation.update(textModel, Date.now() - now);\n                }).catch(_err => {\n                    this._cache.delete(textModel.id);\n                });\n            }\n            if (data.model) {\n                // resolved -> return data\n                return data.model;\n            }\n            // increase usage counter\n            data.promiseCnt += 1;\n            const listener = token.onCancellationRequested(() => {\n                // last -> cancel provider request, remove cached promise\n                if (--data.promiseCnt === 0) {\n                    data.source.cancel();\n                    this._cache.delete(textModel.id);\n                }\n            });\n            try {\n                return yield data.promise;\n            }\n            finally {\n                listener.dispose();\n            }\n        });\n    }\n};\nOutlineModelService = __decorate([\n    __param(0, ILanguageFeaturesService),\n    __param(1, ILanguageFeatureDebounceService),\n    __param(2, IModelService)\n], OutlineModelService);\nexport { OutlineModelService };\nregisterSingleton(IOutlineModelService, OutlineModelService, 1 /* InstantiationType.Delayed */);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar CopyPasteController_1;\nimport { addDisposableListener, getActiveDocument } from '../../../../base/browser/dom.js';\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, raceCancellation } from '../../../../base/common/async.js';\nimport { UriList, createStringDataTransferItem, matchesMimeType } from '../../../../base/common/dataTransfer.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Mimes } from '../../../../base/common/mime.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { generateUuid } from '../../../../base/common/uuid.js';\nimport { ClipboardEventUtils } from '../../../browser/controller/textAreaInput.js';\nimport { toExternalVSDataTransfer, toVSDataTransfer } from '../../../browser/dnd.js';\nimport { IBulkEditService } from '../../../browser/services/bulkEditService.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { createCombinedWorkspaceEdit, sortEditsByYieldTo } from './edit.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { InlineProgressManager } from '../../inlineProgress/browser/inlineProgress.js';\nimport { localize } from '../../../../nls.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IProgressService } from '../../../../platform/progress/common/progress.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { PostEditWidgetManager } from './postEditWidget.js';\nexport const changePasteTypeCommandId = 'editor.changePasteType';\nexport const pasteWidgetVisibleCtx = new RawContextKey('pasteWidgetVisible', false, localize('pasteWidgetVisible', \"Whether the paste widget is showing\"));\nconst vscodeClipboardMime = 'application/vnd.code.copyMetadata';\nlet CopyPasteController = CopyPasteController_1 = class CopyPasteController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(CopyPasteController_1.ID);\n    }\n    constructor(editor, instantiationService, _bulkEditService, _clipboardService, _languageFeaturesService, _quickInputService, _progressService) {\n        super();\n        this._bulkEditService = _bulkEditService;\n        this._clipboardService = _clipboardService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._quickInputService = _quickInputService;\n        this._progressService = _progressService;\n        this._editor = editor;\n        const container = editor.getContainerDomNode();\n        this._register(addDisposableListener(container, 'copy', e => this.handleCopy(e)));\n        this._register(addDisposableListener(container, 'cut', e => this.handleCopy(e)));\n        this._register(addDisposableListener(container, 'paste', e => this.handlePaste(e), true));\n        this._pasteProgressManager = this._register(new InlineProgressManager('pasteIntoEditor', editor, instantiationService));\n        this._postPasteWidgetManager = this._register(instantiationService.createInstance(PostEditWidgetManager, 'pasteIntoEditor', editor, pasteWidgetVisibleCtx, { id: changePasteTypeCommandId, label: localize('postPasteWidgetTitle', \"Show paste options...\") }));\n    }\n    changePasteType() {\n        this._postPasteWidgetManager.tryShowSelector();\n    }\n    pasteAs(preferredId) {\n        this._editor.focus();\n        try {\n            this._pasteAsActionContext = { preferredId };\n            getActiveDocument().execCommand('paste');\n        }\n        finally {\n            this._pasteAsActionContext = undefined;\n        }\n    }\n    isPasteAsEnabled() {\n        return this._editor.getOption(84 /* EditorOption.pasteAs */).enabled\n            && !this._editor.getOption(90 /* EditorOption.readOnly */);\n    }\n    handleCopy(e) {\n        var _a, _b;\n        if (!this._editor.hasTextFocus()) {\n            return;\n        }\n        if (platform.isWeb) {\n            // Explicitly clear the web resources clipboard.\n            // This is needed because on web, the browser clipboard is faked out using an in-memory store.\n            // This means the resources clipboard is not properly updated when copying from the editor.\n            this._clipboardService.writeResources([]);\n        }\n        if (!e.clipboardData || !this.isPasteAsEnabled()) {\n            return;\n        }\n        const model = this._editor.getModel();\n        const selections = this._editor.getSelections();\n        if (!model || !(selections === null || selections === void 0 ? void 0 : selections.length)) {\n            return;\n        }\n        const enableEmptySelectionClipboard = this._editor.getOption(37 /* EditorOption.emptySelectionClipboard */);\n        let ranges = selections;\n        const wasFromEmptySelection = selections.length === 1 && selections[0].isEmpty();\n        if (wasFromEmptySelection) {\n            if (!enableEmptySelectionClipboard) {\n                return;\n            }\n            ranges = [new Range(ranges[0].startLineNumber, 1, ranges[0].startLineNumber, 1 + model.getLineLength(ranges[0].startLineNumber))];\n        }\n        const toCopy = (_a = this._editor._getViewModel()) === null || _a === void 0 ? void 0 : _a.getPlainTextToCopy(selections, enableEmptySelectionClipboard, platform.isWindows);\n        const multicursorText = Array.isArray(toCopy) ? toCopy : null;\n        const defaultPastePayload = {\n            multicursorText,\n            pasteOnNewLine: wasFromEmptySelection,\n            mode: null\n        };\n        const providers = this._languageFeaturesService.documentPasteEditProvider\n            .ordered(model)\n            .filter(x => !!x.prepareDocumentPaste);\n        if (!providers.length) {\n            this.setCopyMetadata(e.clipboardData, { defaultPastePayload });\n            return;\n        }\n        const dataTransfer = toVSDataTransfer(e.clipboardData);\n        const providerCopyMimeTypes = providers.flatMap(x => { var _a; return (_a = x.copyMimeTypes) !== null && _a !== void 0 ? _a : []; });\n        // Save off a handle pointing to data that VS Code maintains.\n        const handle = generateUuid();\n        this.setCopyMetadata(e.clipboardData, {\n            id: handle,\n            providerCopyMimeTypes,\n            defaultPastePayload\n        });\n        const promise = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n            const results = coalesce(yield Promise.all(providers.map((provider) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    return yield provider.prepareDocumentPaste(model, ranges, dataTransfer, token);\n                }\n                catch (err) {\n                    console.error(err);\n                    return undefined;\n                }\n            }))));\n            // Values from higher priority providers should overwrite values from lower priority ones.\n            // Reverse the array to so that the calls to `replace` below will do this\n            results.reverse();\n            for (const result of results) {\n                for (const [mime, value] of result) {\n                    dataTransfer.replace(mime, value);\n                }\n            }\n            return dataTransfer;\n        }));\n        (_b = this._currentCopyOperation) === null || _b === void 0 ? void 0 : _b.dataTransferPromise.cancel();\n        this._currentCopyOperation = { handle: handle, dataTransferPromise: promise };\n    }\n    handlePaste(e) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!e.clipboardData || !this._editor.hasTextFocus()) {\n                return;\n            }\n            (_a = this._currentPasteOperation) === null || _a === void 0 ? void 0 : _a.cancel();\n            this._currentPasteOperation = undefined;\n            const model = this._editor.getModel();\n            const selections = this._editor.getSelections();\n            if (!(selections === null || selections === void 0 ? void 0 : selections.length) || !model) {\n                return;\n            }\n            if (!this.isPasteAsEnabled()) {\n                return;\n            }\n            const metadata = this.fetchCopyMetadata(e);\n            const dataTransfer = toExternalVSDataTransfer(e.clipboardData);\n            dataTransfer.delete(vscodeClipboardMime);\n            const allPotentialMimeTypes = [\n                ...e.clipboardData.types,\n                ...(_b = metadata === null || metadata === void 0 ? void 0 : metadata.providerCopyMimeTypes) !== null && _b !== void 0 ? _b : [],\n                // TODO: always adds `uri-list` because this get set if there are resources in the system clipboard.\n                // However we can only check the system clipboard async. For this early check, just add it in.\n                // We filter providers again once we have the final dataTransfer we will use.\n                Mimes.uriList,\n            ];\n            const allProviders = this._languageFeaturesService.documentPasteEditProvider\n                .ordered(model)\n                .filter(provider => { var _a; return (_a = provider.pasteMimeTypes) === null || _a === void 0 ? void 0 : _a.some(type => matchesMimeType(type, allPotentialMimeTypes)); });\n            if (!allProviders.length) {\n                return;\n            }\n            // Prevent the editor's default paste handler from running.\n            // Note that after this point, we are fully responsible for handling paste.\n            // If we can't provider a paste for any reason, we need to explicitly delegate pasting back to the editor.\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            if (this._pasteAsActionContext) {\n                this.showPasteAsPick(this._pasteAsActionContext.preferredId, allProviders, selections, dataTransfer, metadata);\n            }\n            else {\n                this.doPasteInline(allProviders, selections, dataTransfer, metadata);\n            }\n        });\n    }\n    doPasteInline(allProviders, selections, dataTransfer, metadata) {\n        const p = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n            const editor = this._editor;\n            if (!editor.hasModel()) {\n                return;\n            }\n            const model = editor.getModel();\n            const tokenSource = new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */ | 2 /* CodeEditorStateFlag.Selection */, undefined, token);\n            try {\n                yield this.mergeInDataFromCopy(dataTransfer, metadata, tokenSource.token);\n                if (tokenSource.token.isCancellationRequested) {\n                    return;\n                }\n                // Filter out any providers the don't match the full data transfer we will send them.\n                const supportedProviders = allProviders.filter(provider => isSupportedPasteProvider(provider, dataTransfer));\n                if (!supportedProviders.length\n                    || (supportedProviders.length === 1 && supportedProviders[0].id === 'text') // Only our default text provider is active\n                ) {\n                    yield this.applyDefaultPasteHandler(dataTransfer, metadata, tokenSource.token);\n                    return;\n                }\n                const providerEdits = yield this.getPasteEdits(supportedProviders, dataTransfer, model, selections, tokenSource.token);\n                if (tokenSource.token.isCancellationRequested) {\n                    return;\n                }\n                // If the only edit returned is a text edit, use the default paste handler\n                if (providerEdits.length === 1 && providerEdits[0].providerId === 'text') {\n                    yield this.applyDefaultPasteHandler(dataTransfer, metadata, tokenSource.token);\n                    return;\n                }\n                if (providerEdits.length) {\n                    const canShowWidget = editor.getOption(84 /* EditorOption.pasteAs */).showPasteSelector === 'afterPaste';\n                    return this._postPasteWidgetManager.applyEditAndShowIfNeeded(selections, { activeEditIndex: 0, allEdits: providerEdits }, canShowWidget, tokenSource.token);\n                }\n                yield this.applyDefaultPasteHandler(dataTransfer, metadata, tokenSource.token);\n            }\n            finally {\n                tokenSource.dispose();\n                if (this._currentPasteOperation === p) {\n                    this._currentPasteOperation = undefined;\n                }\n            }\n        }));\n        this._pasteProgressManager.showWhile(selections[0].getEndPosition(), localize('pasteIntoEditorProgress', \"Running paste handlers. Click to cancel\"), p);\n        this._currentPasteOperation = p;\n    }\n    showPasteAsPick(preferredId, allProviders, selections, dataTransfer, metadata) {\n        const p = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n            const editor = this._editor;\n            if (!editor.hasModel()) {\n                return;\n            }\n            const model = editor.getModel();\n            const tokenSource = new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */ | 2 /* CodeEditorStateFlag.Selection */, undefined, token);\n            try {\n                yield this.mergeInDataFromCopy(dataTransfer, metadata, tokenSource.token);\n                if (tokenSource.token.isCancellationRequested) {\n                    return;\n                }\n                // Filter out any providers the don't match the full data transfer we will send them.\n                let supportedProviders = allProviders.filter(provider => isSupportedPasteProvider(provider, dataTransfer));\n                if (preferredId) {\n                    // We are looking for a specific edit\n                    supportedProviders = supportedProviders.filter(edit => edit.id === preferredId);\n                }\n                const providerEdits = yield this.getPasteEdits(supportedProviders, dataTransfer, model, selections, tokenSource.token);\n                if (tokenSource.token.isCancellationRequested) {\n                    return;\n                }\n                if (!providerEdits.length) {\n                    return;\n                }\n                let pickedEdit;\n                if (preferredId) {\n                    pickedEdit = providerEdits.at(0);\n                }\n                else {\n                    const selected = yield this._quickInputService.pick(providerEdits.map((edit) => ({\n                        label: edit.label,\n                        description: edit.providerId,\n                        detail: edit.detail,\n                        edit,\n                    })), {\n                        placeHolder: localize('pasteAsPickerPlaceholder', \"Select Paste Action\"),\n                    });\n                    pickedEdit = selected === null || selected === void 0 ? void 0 : selected.edit;\n                }\n                if (!pickedEdit) {\n                    return;\n                }\n                const combinedWorkspaceEdit = createCombinedWorkspaceEdit(model.uri, selections, pickedEdit);\n                yield this._bulkEditService.apply(combinedWorkspaceEdit, { editor: this._editor });\n            }\n            finally {\n                tokenSource.dispose();\n                if (this._currentPasteOperation === p) {\n                    this._currentPasteOperation = undefined;\n                }\n            }\n        }));\n        this._progressService.withProgress({\n            location: 10 /* ProgressLocation.Window */,\n            title: localize('pasteAsProgress', \"Running paste handlers\"),\n        }, () => p);\n    }\n    setCopyMetadata(dataTransfer, metadata) {\n        dataTransfer.setData(vscodeClipboardMime, JSON.stringify(metadata));\n    }\n    fetchCopyMetadata(e) {\n        var _a;\n        if (!e.clipboardData) {\n            return;\n        }\n        // Prefer using the clipboard data we saved off\n        const rawMetadata = e.clipboardData.getData(vscodeClipboardMime);\n        if (rawMetadata) {\n            try {\n                return JSON.parse(rawMetadata);\n            }\n            catch (_b) {\n                return undefined;\n            }\n        }\n        // Otherwise try to extract the generic text editor metadata\n        const [_, metadata] = ClipboardEventUtils.getTextData(e.clipboardData);\n        if (metadata) {\n            return {\n                defaultPastePayload: {\n                    mode: metadata.mode,\n                    multicursorText: (_a = metadata.multicursorText) !== null && _a !== void 0 ? _a : null,\n                    pasteOnNewLine: !!metadata.isFromEmptySelection,\n                },\n            };\n        }\n        return undefined;\n    }\n    mergeInDataFromCopy(dataTransfer, metadata, token) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((metadata === null || metadata === void 0 ? void 0 : metadata.id) && ((_a = this._currentCopyOperation) === null || _a === void 0 ? void 0 : _a.handle) === metadata.id) {\n                const toMergeDataTransfer = yield this._currentCopyOperation.dataTransferPromise;\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                for (const [key, value] of toMergeDataTransfer) {\n                    dataTransfer.replace(key, value);\n                }\n            }\n            if (!dataTransfer.has(Mimes.uriList)) {\n                const resources = yield this._clipboardService.readResources();\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                if (resources.length) {\n                    dataTransfer.append(Mimes.uriList, createStringDataTransferItem(UriList.create(resources)));\n                }\n            }\n        });\n    }\n    getPasteEdits(providers, dataTransfer, model, selections, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const results = yield raceCancellation(Promise.all(providers.map((provider) => __awaiter(this, void 0, void 0, function* () {\n                var _a;\n                try {\n                    const edit = yield ((_a = provider.provideDocumentPasteEdits) === null || _a === void 0 ? void 0 : _a.call(provider, model, selections, dataTransfer, token));\n                    if (edit) {\n                        return Object.assign(Object.assign({}, edit), { providerId: provider.id });\n                    }\n                }\n                catch (err) {\n                    console.error(err);\n                }\n                return undefined;\n            }))), token);\n            const edits = coalesce(results !== null && results !== void 0 ? results : []);\n            return sortEditsByYieldTo(edits);\n        });\n    }\n    applyDefaultPasteHandler(dataTransfer, metadata, token) {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            const textDataTransfer = (_a = dataTransfer.get(Mimes.text)) !== null && _a !== void 0 ? _a : dataTransfer.get('text');\n            if (!textDataTransfer) {\n                return;\n            }\n            const text = yield textDataTransfer.asString();\n            if (token.isCancellationRequested) {\n                return;\n            }\n            const payload = {\n                text,\n                pasteOnNewLine: (_b = metadata === null || metadata === void 0 ? void 0 : metadata.defaultPastePayload.pasteOnNewLine) !== null && _b !== void 0 ? _b : false,\n                multicursorText: (_c = metadata === null || metadata === void 0 ? void 0 : metadata.defaultPastePayload.multicursorText) !== null && _c !== void 0 ? _c : null,\n                mode: null,\n            };\n            this._editor.trigger('keyboard', \"paste\" /* Handler.Paste */, payload);\n        });\n    }\n};\nCopyPasteController.ID = 'editor.contrib.copyPasteActionController';\nCopyPasteController = CopyPasteController_1 = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IBulkEditService),\n    __param(3, IClipboardService),\n    __param(4, ILanguageFeaturesService),\n    __param(5, IQuickInputService),\n    __param(6, IProgressService)\n], CopyPasteController);\nexport { CopyPasteController };\nfunction isSupportedPasteProvider(provider, dataTransfer) {\n    var _a;\n    return Boolean((_a = provider.pasteMimeTypes) === null || _a === void 0 ? void 0 : _a.some(type => dataTransfer.matches(type)));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { registerEditorFeature } from '../../../common/editorFeatures.js';\nimport { CopyPasteController, changePasteTypeCommandId, pasteWidgetVisibleCtx } from './copyPasteController.js';\nimport { DefaultPasteProvidersFeature } from './defaultProviders.js';\nimport * as nls from '../../../../nls.js';\nregisterEditorContribution(CopyPasteController.ID, CopyPasteController, 0 /* EditorContributionInstantiation.Eager */); // eager because it listens to events on the container dom node of the editor\nregisterEditorFeature(DefaultPasteProvidersFeature);\nregisterEditorCommand(new class extends EditorCommand {\n    constructor() {\n        super({\n            id: changePasteTypeCommandId,\n            precondition: pasteWidgetVisibleCtx,\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 89 /* KeyCode.Period */,\n            }\n        });\n    }\n    runEditorCommand(_accessor, editor, _args) {\n        var _a;\n        return (_a = CopyPasteController.get(editor)) === null || _a === void 0 ? void 0 : _a.changePasteType();\n    }\n});\nregisterEditorAction(class extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.pasteAs',\n            label: nls.localize('pasteAs', \"Paste As...\"),\n            alias: 'Paste As...',\n            precondition: undefined,\n            description: {\n                description: 'Paste as',\n                args: [{\n                        name: 'args',\n                        schema: {\n                            type: 'object',\n                            properties: {\n                                'id': {\n                                    type: 'string',\n                                    description: nls.localize('pasteAs.id', \"The id of the paste edit to try applying. If not provided, the editor will show a picker.\"),\n                                }\n                            },\n                        }\n                    }]\n            }\n        });\n    }\n    run(_accessor, editor, args) {\n        var _a;\n        const id = typeof (args === null || args === void 0 ? void 0 : args.id) === 'string' ? args.id : undefined;\n        return (_a = CopyPasteController.get(editor)) === null || _a === void 0 ? void 0 : _a.pasteAs(id);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { UriList } from '../../../../base/common/dataTransfer.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Mimes } from '../../../../base/common/mime.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { relativePath } from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { localize } from '../../../../nls.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nconst builtInLabel = localize('builtIn', 'Built-in');\nclass SimplePasteAndDropProvider {\n    provideDocumentPasteEdits(_model, _ranges, dataTransfer, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const edit = yield this.getEdit(dataTransfer, token);\n            return edit ? { insertText: edit.insertText, label: edit.label, detail: edit.detail, handledMimeType: edit.handledMimeType, yieldTo: edit.yieldTo } : undefined;\n        });\n    }\n    provideDocumentOnDropEdits(_model, _position, dataTransfer, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const edit = yield this.getEdit(dataTransfer, token);\n            return edit ? { insertText: edit.insertText, label: edit.label, handledMimeType: edit.handledMimeType, yieldTo: edit.yieldTo } : undefined;\n        });\n    }\n}\nclass DefaultTextProvider extends SimplePasteAndDropProvider {\n    constructor() {\n        super(...arguments);\n        this.id = 'text';\n        this.dropMimeTypes = [Mimes.text];\n        this.pasteMimeTypes = [Mimes.text];\n    }\n    getEdit(dataTransfer, _token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const textEntry = dataTransfer.get(Mimes.text);\n            if (!textEntry) {\n                return;\n            }\n            // Suppress if there's also a uriList entry.\n            // Typically the uri-list contains the same text as the text entry so showing both is confusing.\n            if (dataTransfer.has(Mimes.uriList)) {\n                return;\n            }\n            const insertText = yield textEntry.asString();\n            return {\n                handledMimeType: Mimes.text,\n                label: localize('text.label', \"Insert Plain Text\"),\n                detail: builtInLabel,\n                insertText\n            };\n        });\n    }\n}\nclass PathProvider extends SimplePasteAndDropProvider {\n    constructor() {\n        super(...arguments);\n        this.id = 'uri';\n        this.dropMimeTypes = [Mimes.uriList];\n        this.pasteMimeTypes = [Mimes.uriList];\n    }\n    getEdit(dataTransfer, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const entries = yield extractUriList(dataTransfer);\n            if (!entries.length || token.isCancellationRequested) {\n                return;\n            }\n            let uriCount = 0;\n            const insertText = entries\n                .map(({ uri, originalText }) => {\n                if (uri.scheme === Schemas.file) {\n                    return uri.fsPath;\n                }\n                else {\n                    uriCount++;\n                    return originalText;\n                }\n            })\n                .join(' ');\n            let label;\n            if (uriCount > 0) {\n                // Dropping at least one generic uri (such as https) so use most generic label\n                label = entries.length > 1\n                    ? localize('defaultDropProvider.uriList.uris', \"Insert Uris\")\n                    : localize('defaultDropProvider.uriList.uri', \"Insert Uri\");\n            }\n            else {\n                // All the paths are file paths\n                label = entries.length > 1\n                    ? localize('defaultDropProvider.uriList.paths', \"Insert Paths\")\n                    : localize('defaultDropProvider.uriList.path', \"Insert Path\");\n            }\n            return {\n                handledMimeType: Mimes.uriList,\n                insertText,\n                label,\n                detail: builtInLabel,\n            };\n        });\n    }\n}\nlet RelativePathProvider = class RelativePathProvider extends SimplePasteAndDropProvider {\n    constructor(_workspaceContextService) {\n        super();\n        this._workspaceContextService = _workspaceContextService;\n        this.id = 'relativePath';\n        this.dropMimeTypes = [Mimes.uriList];\n        this.pasteMimeTypes = [Mimes.uriList];\n    }\n    getEdit(dataTransfer, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const entries = yield extractUriList(dataTransfer);\n            if (!entries.length || token.isCancellationRequested) {\n                return;\n            }\n            const relativeUris = coalesce(entries.map(({ uri }) => {\n                const root = this._workspaceContextService.getWorkspaceFolder(uri);\n                return root ? relativePath(root.uri, uri) : undefined;\n            }));\n            if (!relativeUris.length) {\n                return;\n            }\n            return {\n                handledMimeType: Mimes.uriList,\n                insertText: relativeUris.join(' '),\n                label: entries.length > 1\n                    ? localize('defaultDropProvider.uriList.relativePaths', \"Insert Relative Paths\")\n                    : localize('defaultDropProvider.uriList.relativePath', \"Insert Relative Path\"),\n                detail: builtInLabel,\n            };\n        });\n    }\n};\nRelativePathProvider = __decorate([\n    __param(0, IWorkspaceContextService)\n], RelativePathProvider);\nfunction extractUriList(dataTransfer) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const urlListEntry = dataTransfer.get(Mimes.uriList);\n        if (!urlListEntry) {\n            return [];\n        }\n        const strUriList = yield urlListEntry.asString();\n        const entries = [];\n        for (const entry of UriList.parse(strUriList)) {\n            try {\n                entries.push({ uri: URI.parse(entry), originalText: entry });\n            }\n            catch (_a) {\n                // noop\n            }\n        }\n        return entries;\n    });\n}\nlet DefaultDropProvidersFeature = class DefaultDropProvidersFeature extends Disposable {\n    constructor(languageFeaturesService, workspaceContextService) {\n        super();\n        this._register(languageFeaturesService.documentOnDropEditProvider.register('*', new DefaultTextProvider()));\n        this._register(languageFeaturesService.documentOnDropEditProvider.register('*', new PathProvider()));\n        this._register(languageFeaturesService.documentOnDropEditProvider.register('*', new RelativePathProvider(workspaceContextService)));\n    }\n};\nDefaultDropProvidersFeature = __decorate([\n    __param(0, ILanguageFeaturesService),\n    __param(1, IWorkspaceContextService)\n], DefaultDropProvidersFeature);\nexport { DefaultDropProvidersFeature };\nlet DefaultPasteProvidersFeature = class DefaultPasteProvidersFeature extends Disposable {\n    constructor(languageFeaturesService, workspaceContextService) {\n        super();\n        this._register(languageFeaturesService.documentPasteEditProvider.register('*', new DefaultTextProvider()));\n        this._register(languageFeaturesService.documentPasteEditProvider.register('*', new PathProvider()));\n        this._register(languageFeaturesService.documentPasteEditProvider.register('*', new RelativePathProvider(workspaceContextService)));\n    }\n};\nDefaultPasteProvidersFeature = __decorate([\n    __param(0, ILanguageFeaturesService),\n    __param(1, IWorkspaceContextService)\n], DefaultPasteProvidersFeature);\nexport { DefaultPasteProvidersFeature };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar DropIntoEditorController_1;\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, raceCancellation } from '../../../../base/common/async.js';\nimport { VSDataTransfer, matchesMimeType } from '../../../../base/common/dataTransfer.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { toExternalVSDataTransfer } from '../../../browser/dnd.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { DraggedTreeItemsIdentifier } from '../../../common/services/treeViewsDnd.js';\nimport { ITreeViewsDnDService } from '../../../common/services/treeViewsDndService.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { InlineProgressManager } from '../../inlineProgress/browser/inlineProgress.js';\nimport { localize } from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { LocalSelectionTransfer } from '../../../../platform/dnd/browser/dnd.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { sortEditsByYieldTo } from './edit.js';\nimport { PostEditWidgetManager } from './postEditWidget.js';\nexport const defaultProviderConfig = 'editor.experimental.dropIntoEditor.defaultProvider';\nexport const changeDropTypeCommandId = 'editor.changeDropType';\nexport const dropWidgetVisibleCtx = new RawContextKey('dropWidgetVisible', false, localize('dropWidgetVisible', \"Whether the drop widget is showing\"));\nlet DropIntoEditorController = DropIntoEditorController_1 = class DropIntoEditorController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(DropIntoEditorController_1.ID);\n    }\n    constructor(editor, instantiationService, _configService, _languageFeaturesService, _treeViewsDragAndDropService) {\n        super();\n        this._configService = _configService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._treeViewsDragAndDropService = _treeViewsDragAndDropService;\n        this.treeItemsTransfer = LocalSelectionTransfer.getInstance();\n        this._dropProgressManager = this._register(instantiationService.createInstance(InlineProgressManager, 'dropIntoEditor', editor));\n        this._postDropWidgetManager = this._register(instantiationService.createInstance(PostEditWidgetManager, 'dropIntoEditor', editor, dropWidgetVisibleCtx, { id: changeDropTypeCommandId, label: localize('postDropWidgetTitle', \"Show drop options...\") }));\n        this._register(editor.onDropIntoEditor(e => this.onDropIntoEditor(editor, e.position, e.event)));\n    }\n    changeDropType() {\n        this._postDropWidgetManager.tryShowSelector();\n    }\n    onDropIntoEditor(editor, position, dragEvent) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!dragEvent.dataTransfer || !editor.hasModel()) {\n                return;\n            }\n            (_a = this._currentOperation) === null || _a === void 0 ? void 0 : _a.cancel();\n            editor.focus();\n            editor.setPosition(position);\n            const p = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n                const tokenSource = new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */, undefined, token);\n                try {\n                    const ourDataTransfer = yield this.extractDataTransferData(dragEvent);\n                    if (ourDataTransfer.size === 0 || tokenSource.token.isCancellationRequested) {\n                        return;\n                    }\n                    const model = editor.getModel();\n                    if (!model) {\n                        return;\n                    }\n                    const providers = this._languageFeaturesService.documentOnDropEditProvider\n                        .ordered(model)\n                        .filter(provider => {\n                        if (!provider.dropMimeTypes) {\n                            // Keep all providers that don't specify mime types\n                            return true;\n                        }\n                        return provider.dropMimeTypes.some(mime => ourDataTransfer.matches(mime));\n                    });\n                    const edits = yield this.getDropEdits(providers, model, position, ourDataTransfer, tokenSource);\n                    if (tokenSource.token.isCancellationRequested) {\n                        return;\n                    }\n                    if (edits.length) {\n                        const activeEditIndex = this.getInitialActiveEditIndex(model, edits);\n                        const canShowWidget = editor.getOption(36 /* EditorOption.dropIntoEditor */).showDropSelector === 'afterDrop';\n                        // Pass in the parent token here as it tracks cancelling the entire drop operation\n                        yield this._postDropWidgetManager.applyEditAndShowIfNeeded([Range.fromPositions(position)], { activeEditIndex, allEdits: edits }, canShowWidget, token);\n                    }\n                }\n                finally {\n                    tokenSource.dispose();\n                    if (this._currentOperation === p) {\n                        this._currentOperation = undefined;\n                    }\n                }\n            }));\n            this._dropProgressManager.showWhile(position, localize('dropIntoEditorProgress', \"Running drop handlers. Click to cancel\"), p);\n            this._currentOperation = p;\n        });\n    }\n    getDropEdits(providers, model, position, dataTransfer, tokenSource) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const results = yield raceCancellation(Promise.all(providers.map((provider) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const edit = yield provider.provideDocumentOnDropEdits(model, position, dataTransfer, tokenSource.token);\n                    if (edit) {\n                        return Object.assign(Object.assign({}, edit), { providerId: provider.id });\n                    }\n                }\n                catch (err) {\n                    console.error(err);\n                }\n                return undefined;\n            }))), tokenSource.token);\n            const edits = coalesce(results !== null && results !== void 0 ? results : []);\n            return sortEditsByYieldTo(edits);\n        });\n    }\n    getInitialActiveEditIndex(model, edits) {\n        const preferredProviders = this._configService.getValue(defaultProviderConfig, { resource: model.uri });\n        for (const [configMime, desiredId] of Object.entries(preferredProviders)) {\n            const editIndex = edits.findIndex(edit => desiredId === edit.providerId\n                && edit.handledMimeType && matchesMimeType(configMime, [edit.handledMimeType]));\n            if (editIndex >= 0) {\n                return editIndex;\n            }\n        }\n        return 0;\n    }\n    extractDataTransferData(dragEvent) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!dragEvent.dataTransfer) {\n                return new VSDataTransfer();\n            }\n            const dataTransfer = toExternalVSDataTransfer(dragEvent.dataTransfer);\n            if (this.treeItemsTransfer.hasData(DraggedTreeItemsIdentifier.prototype)) {\n                const data = this.treeItemsTransfer.getData(DraggedTreeItemsIdentifier.prototype);\n                if (Array.isArray(data)) {\n                    for (const id of data) {\n                        const treeDataTransfer = yield this._treeViewsDragAndDropService.removeDragOperationTransfer(id.identifier);\n                        if (treeDataTransfer) {\n                            for (const [type, value] of treeDataTransfer) {\n                                dataTransfer.replace(type, value);\n                            }\n                        }\n                    }\n                }\n            }\n            return dataTransfer;\n        });\n    }\n};\nDropIntoEditorController.ID = 'editor.contrib.dropIntoEditorController';\nDropIntoEditorController = DropIntoEditorController_1 = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IConfigurationService),\n    __param(3, ILanguageFeaturesService),\n    __param(4, ITreeViewsDnDService)\n], DropIntoEditorController);\nexport { DropIntoEditorController };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorCommand, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { editorConfigurationBaseNode } from '../../../common/config/editorConfigurationSchema.js';\nimport { registerEditorFeature } from '../../../common/editorFeatures.js';\nimport { DefaultDropProvidersFeature } from './defaultProviders.js';\nimport * as nls from '../../../../nls.js';\nimport { Extensions as ConfigurationExtensions } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { DropIntoEditorController, changeDropTypeCommandId, defaultProviderConfig, dropWidgetVisibleCtx } from './dropIntoEditorController.js';\nregisterEditorContribution(DropIntoEditorController.ID, DropIntoEditorController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorCommand(new class extends EditorCommand {\n    constructor() {\n        super({\n            id: changeDropTypeCommandId,\n            precondition: dropWidgetVisibleCtx,\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 89 /* KeyCode.Period */,\n            }\n        });\n    }\n    runEditorCommand(_accessor, editor, _args) {\n        var _a;\n        (_a = DropIntoEditorController.get(editor)) === null || _a === void 0 ? void 0 : _a.changeDropType();\n    }\n});\nregisterEditorFeature(DefaultDropProvidersFeature);\nRegistry.as(ConfigurationExtensions.Configuration).registerConfiguration(Object.assign(Object.assign({}, editorConfigurationBaseNode), { properties: {\n        [defaultProviderConfig]: {\n            type: 'object',\n            scope: 5 /* ConfigurationScope.LANGUAGE_OVERRIDABLE */,\n            description: nls.localize('defaultProviderDescription', \"Configures the default drop provider to use for content of a given mime type.\"),\n            default: {},\n            additionalProperties: {\n                type: 'string',\n            },\n        },\n    } }));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ResourceTextEdit } from '../../../browser/services/bulkEditService.js';\nexport function createCombinedWorkspaceEdit(uri, ranges, edit) {\n    var _a, _b;\n    return {\n        edits: [\n            ...ranges.map(range => new ResourceTextEdit(uri, typeof edit.insertText === 'string'\n                ? { range, text: edit.insertText, insertAsSnippet: false }\n                : { range, text: edit.insertText.snippet, insertAsSnippet: true })),\n            ...((_b = (_a = edit.additionalEdit) === null || _a === void 0 ? void 0 : _a.edits) !== null && _b !== void 0 ? _b : [])\n        ]\n    };\n}\nexport function sortEditsByYieldTo(edits) {\n    var _a;\n    function yieldsTo(yTo, other) {\n        return ('providerId' in yTo && yTo.providerId === other.providerId)\n            || ('mimeType' in yTo && yTo.mimeType === other.handledMimeType);\n    }\n    // Build list of nodes each node yields to\n    const yieldsToMap = new Map();\n    for (const edit of edits) {\n        for (const yTo of (_a = edit.yieldTo) !== null && _a !== void 0 ? _a : []) {\n            for (const other of edits) {\n                if (other === edit) {\n                    continue;\n                }\n                if (yieldsTo(yTo, other)) {\n                    let arr = yieldsToMap.get(edit);\n                    if (!arr) {\n                        arr = [];\n                        yieldsToMap.set(edit, arr);\n                    }\n                    arr.push(other);\n                }\n            }\n        }\n    }\n    if (!yieldsToMap.size) {\n        return Array.from(edits);\n    }\n    // Topological sort\n    const visited = new Set();\n    const tempStack = [];\n    function visit(nodes) {\n        if (!nodes.length) {\n            return [];\n        }\n        const node = nodes[0];\n        if (tempStack.includes(node)) {\n            console.warn(`Yield to cycle detected for ${node.providerId}`);\n            return nodes;\n        }\n        if (visited.has(node)) {\n            return visit(nodes.slice(1));\n        }\n        let pre = [];\n        const yTo = yieldsToMap.get(node);\n        if (yTo) {\n            tempStack.push(node);\n            pre = visit(yTo);\n            tempStack.pop();\n        }\n        visited.add(node);\n        return [...pre, node, ...visit(nodes.slice(1))];\n    }\n    return visit(Array.from(edits));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar PostEditWidget_1;\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Button } from '../../../../base/browser/ui/button/button.js';\nimport { toAction } from '../../../../base/common/actions.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport './postEditWidget.css';\nimport { IBulkEditService, ResourceTextEdit } from '../../../browser/services/bulkEditService.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nlet PostEditWidget = PostEditWidget_1 = class PostEditWidget extends Disposable {\n    constructor(typeId, editor, visibleContext, showCommand, range, edits, onSelectNewEdit, _contextMenuService, contextKeyService, _keybindingService) {\n        super();\n        this.typeId = typeId;\n        this.editor = editor;\n        this.showCommand = showCommand;\n        this.range = range;\n        this.edits = edits;\n        this.onSelectNewEdit = onSelectNewEdit;\n        this._contextMenuService = _contextMenuService;\n        this._keybindingService = _keybindingService;\n        this.allowEditorOverflow = true;\n        this.suppressMouseDown = true;\n        this.create();\n        this.visibleContext = visibleContext.bindTo(contextKeyService);\n        this.visibleContext.set(true);\n        this._register(toDisposable(() => this.visibleContext.reset()));\n        this.editor.addContentWidget(this);\n        this.editor.layoutContentWidget(this);\n        this._register(toDisposable((() => this.editor.removeContentWidget(this))));\n        this._register(this.editor.onDidChangeCursorPosition(e => {\n            if (!range.containsPosition(e.position)) {\n                this.dispose();\n            }\n        }));\n        this._register(Event.runAndSubscribe(_keybindingService.onDidUpdateKeybindings, () => {\n            this._updateButtonTitle();\n        }));\n    }\n    _updateButtonTitle() {\n        var _a;\n        const binding = (_a = this._keybindingService.lookupKeybinding(this.showCommand.id)) === null || _a === void 0 ? void 0 : _a.getLabel();\n        this.button.element.title = this.showCommand.label + (binding ? ` (${binding})` : '');\n    }\n    create() {\n        this.domNode = dom.$('.post-edit-widget');\n        this.button = this._register(new Button(this.domNode, {\n            supportIcons: true,\n        }));\n        this.button.label = '$(insert)';\n        this._register(dom.addDisposableListener(this.domNode, dom.EventType.CLICK, () => this.showSelector()));\n    }\n    getId() {\n        return PostEditWidget_1.baseId + '.' + this.typeId;\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    getPosition() {\n        return {\n            position: this.range.getEndPosition(),\n            preference: [2 /* ContentWidgetPositionPreference.BELOW */]\n        };\n    }\n    showSelector() {\n        this._contextMenuService.showContextMenu({\n            getAnchor: () => {\n                const pos = dom.getDomNodePagePosition(this.button.element);\n                return { x: pos.left + pos.width, y: pos.top + pos.height };\n            },\n            getActions: () => {\n                return this.edits.allEdits.map((edit, i) => toAction({\n                    id: '',\n                    label: edit.label,\n                    checked: i === this.edits.activeEditIndex,\n                    run: () => {\n                        if (i !== this.edits.activeEditIndex) {\n                            return this.onSelectNewEdit(i);\n                        }\n                    },\n                }));\n            }\n        });\n    }\n};\nPostEditWidget.baseId = 'editor.widget.postEditWidget';\nPostEditWidget = PostEditWidget_1 = __decorate([\n    __param(7, IContextMenuService),\n    __param(8, IContextKeyService),\n    __param(9, IKeybindingService)\n], PostEditWidget);\nlet PostEditWidgetManager = class PostEditWidgetManager extends Disposable {\n    constructor(_id, _editor, _visibleContext, _showCommand, _instantiationService, _bulkEditService) {\n        super();\n        this._id = _id;\n        this._editor = _editor;\n        this._visibleContext = _visibleContext;\n        this._showCommand = _showCommand;\n        this._instantiationService = _instantiationService;\n        this._bulkEditService = _bulkEditService;\n        this._currentWidget = this._register(new MutableDisposable());\n        this._register(Event.any(_editor.onDidChangeModel, _editor.onDidChangeModelContent)(() => this.clear()));\n    }\n    applyEditAndShowIfNeeded(ranges, edits, canShowWidget, token) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const model = this._editor.getModel();\n            if (!model || !ranges.length) {\n                return;\n            }\n            const edit = edits.allEdits[edits.activeEditIndex];\n            if (!edit) {\n                return;\n            }\n            let insertTextEdit = [];\n            if (typeof edit.insertText === 'string' ? edit.insertText === '' : edit.insertText.snippet === '') {\n                insertTextEdit = [];\n            }\n            else {\n                insertTextEdit = ranges.map(range => new ResourceTextEdit(model.uri, typeof edit.insertText === 'string'\n                    ? { range, text: edit.insertText, insertAsSnippet: false }\n                    : { range, text: edit.insertText.snippet, insertAsSnippet: true }));\n            }\n            const allEdits = [\n                ...insertTextEdit,\n                ...((_b = (_a = edit.additionalEdit) === null || _a === void 0 ? void 0 : _a.edits) !== null && _b !== void 0 ? _b : [])\n            ];\n            const combinedWorkspaceEdit = {\n                edits: allEdits\n            };\n            // Use a decoration to track edits around the trigger range\n            const primaryRange = ranges[0];\n            const editTrackingDecoration = model.deltaDecorations([], [{\n                    range: primaryRange,\n                    options: { description: 'paste-line-suffix', stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */ }\n                }]);\n            let editResult;\n            let editRange;\n            try {\n                editResult = yield this._bulkEditService.apply(combinedWorkspaceEdit, { editor: this._editor, token });\n                editRange = model.getDecorationRange(editTrackingDecoration[0]);\n            }\n            finally {\n                model.deltaDecorations(editTrackingDecoration, []);\n            }\n            if (canShowWidget && editResult.isApplied && edits.allEdits.length > 1) {\n                this.show(editRange !== null && editRange !== void 0 ? editRange : primaryRange, edits, (newEditIndex) => __awaiter(this, void 0, void 0, function* () {\n                    const model = this._editor.getModel();\n                    if (!model) {\n                        return;\n                    }\n                    yield model.undo();\n                    this.applyEditAndShowIfNeeded(ranges, { activeEditIndex: newEditIndex, allEdits: edits.allEdits }, canShowWidget, token);\n                }));\n            }\n        });\n    }\n    show(range, edits, onDidSelectEdit) {\n        this.clear();\n        if (this._editor.hasModel()) {\n            this._currentWidget.value = this._instantiationService.createInstance(PostEditWidget, this._id, this._editor, this._visibleContext, this._showCommand, range, edits, onDidSelectEdit);\n        }\n    }\n    clear() {\n        this._currentWidget.clear();\n    }\n    tryShowSelector() {\n        var _a;\n        (_a = this._currentWidget.value) === null || _a === void 0 ? void 0 : _a.showSelector();\n    }\n};\nPostEditWidgetManager = __decorate([\n    __param(4, IInstantiationService),\n    __param(5, IBulkEditService)\n], PostEditWidgetManager);\nexport { PostEditWidgetManager };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorCommand, registerEditorCommand } from '../../../browser/editorExtensions.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { LinkedList } from '../../../../base/common/linkedList.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { localize } from '../../../../nls.js';\nconst IEditorCancellationTokens = createDecorator('IEditorCancelService');\nconst ctxCancellableOperation = new RawContextKey('cancellableOperation', false, localize('cancellableOperation', 'Whether the editor runs a cancellable operation, e.g. like \\'Peek References\\''));\nregisterSingleton(IEditorCancellationTokens, class {\n    constructor() {\n        this._tokens = new WeakMap();\n    }\n    add(editor, cts) {\n        let data = this._tokens.get(editor);\n        if (!data) {\n            data = editor.invokeWithinContext(accessor => {\n                const key = ctxCancellableOperation.bindTo(accessor.get(IContextKeyService));\n                const tokens = new LinkedList();\n                return { key, tokens };\n            });\n            this._tokens.set(editor, data);\n        }\n        let removeFn;\n        data.key.set(true);\n        removeFn = data.tokens.push(cts);\n        return () => {\n            // remove w/o cancellation\n            if (removeFn) {\n                removeFn();\n                data.key.set(!data.tokens.isEmpty());\n                removeFn = undefined;\n            }\n        };\n    }\n    cancel(editor) {\n        const data = this._tokens.get(editor);\n        if (!data) {\n            return;\n        }\n        // remove with cancellation\n        const cts = data.tokens.pop();\n        if (cts) {\n            cts.cancel();\n            data.key.set(!data.tokens.isEmpty());\n        }\n    }\n}, 1 /* InstantiationType.Delayed */);\nexport class EditorKeybindingCancellationTokenSource extends CancellationTokenSource {\n    constructor(editor, parent) {\n        super(parent);\n        this.editor = editor;\n        this._unregister = editor.invokeWithinContext(accessor => accessor.get(IEditorCancellationTokens).add(editor, this));\n    }\n    dispose() {\n        this._unregister();\n        super.dispose();\n    }\n}\nregisterEditorCommand(new class extends EditorCommand {\n    constructor() {\n        super({\n            id: 'editor.cancelOperation',\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */,\n                primary: 9 /* KeyCode.Escape */\n            },\n            precondition: ctxCancellableOperation\n        });\n    }\n    runEditorCommand(accessor, editor) {\n        accessor.get(IEditorCancellationTokens).cancel(editor);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../../base/common/strings.js';\nimport { Range } from '../../../common/core/range.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { EditorKeybindingCancellationTokenSource } from './keybindingCancellation.js';\nexport class EditorState {\n    constructor(editor, flags) {\n        this.flags = flags;\n        if ((this.flags & 1 /* CodeEditorStateFlag.Value */) !== 0) {\n            const model = editor.getModel();\n            this.modelVersionId = model ? strings.format('{0}#{1}', model.uri.toString(), model.getVersionId()) : null;\n        }\n        else {\n            this.modelVersionId = null;\n        }\n        if ((this.flags & 4 /* CodeEditorStateFlag.Position */) !== 0) {\n            this.position = editor.getPosition();\n        }\n        else {\n            this.position = null;\n        }\n        if ((this.flags & 2 /* CodeEditorStateFlag.Selection */) !== 0) {\n            this.selection = editor.getSelection();\n        }\n        else {\n            this.selection = null;\n        }\n        if ((this.flags & 8 /* CodeEditorStateFlag.Scroll */) !== 0) {\n            this.scrollLeft = editor.getScrollLeft();\n            this.scrollTop = editor.getScrollTop();\n        }\n        else {\n            this.scrollLeft = -1;\n            this.scrollTop = -1;\n        }\n    }\n    _equals(other) {\n        if (!(other instanceof EditorState)) {\n            return false;\n        }\n        const state = other;\n        if (this.modelVersionId !== state.modelVersionId) {\n            return false;\n        }\n        if (this.scrollLeft !== state.scrollLeft || this.scrollTop !== state.scrollTop) {\n            return false;\n        }\n        if (!this.position && state.position || this.position && !state.position || this.position && state.position && !this.position.equals(state.position)) {\n            return false;\n        }\n        if (!this.selection && state.selection || this.selection && !state.selection || this.selection && state.selection && !this.selection.equalsRange(state.selection)) {\n            return false;\n        }\n        return true;\n    }\n    validate(editor) {\n        return this._equals(new EditorState(editor, this.flags));\n    }\n}\n/**\n * A cancellation token source that cancels when the editor changes as expressed\n * by the provided flags\n * @param range If provided, changes in position and selection within this range will not trigger cancellation\n */\nexport class EditorStateCancellationTokenSource extends EditorKeybindingCancellationTokenSource {\n    constructor(editor, flags, range, parent) {\n        super(editor, parent);\n        this._listener = new DisposableStore();\n        if (flags & 4 /* CodeEditorStateFlag.Position */) {\n            this._listener.add(editor.onDidChangeCursorPosition(e => {\n                if (!range || !Range.containsPosition(range, e.position)) {\n                    this.cancel();\n                }\n            }));\n        }\n        if (flags & 2 /* CodeEditorStateFlag.Selection */) {\n            this._listener.add(editor.onDidChangeCursorSelection(e => {\n                if (!range || !Range.containsRange(range, e.selection)) {\n                    this.cancel();\n                }\n            }));\n        }\n        if (flags & 8 /* CodeEditorStateFlag.Scroll */) {\n            this._listener.add(editor.onDidScrollChange(_ => this.cancel()));\n        }\n        if (flags & 1 /* CodeEditorStateFlag.Value */) {\n            this._listener.add(editor.onDidChangeModel(_ => this.cancel()));\n            this._listener.add(editor.onDidChangeModelContent(_ => this.cancel()));\n        }\n    }\n    dispose() {\n        this._listener.dispose();\n        super.dispose();\n    }\n}\n/**\n * A cancellation token source that cancels when the provided model changes\n */\nexport class TextModelCancellationTokenSource extends CancellationTokenSource {\n    constructor(model, parent) {\n        super(parent);\n        this._listener = model.onDidChangeContent(() => this.cancel());\n    }\n    dispose() {\n        this._listener.dispose();\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { MinimapPosition, OverviewRulerLane } from '../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { minimapFindMatch, overviewRulerFindMatchForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nexport class FindDecorations {\n    constructor(editor) {\n        this._editor = editor;\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationIds = [];\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n        this._startPosition = this._editor.getPosition();\n    }\n    dispose() {\n        this._editor.removeDecorations(this._allDecorations());\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationIds = [];\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n    }\n    reset() {\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationIds = [];\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n    }\n    getCount() {\n        return this._decorations.length;\n    }\n    /** @deprecated use getFindScopes to support multiple selections */\n    getFindScope() {\n        if (this._findScopeDecorationIds[0]) {\n            return this._editor.getModel().getDecorationRange(this._findScopeDecorationIds[0]);\n        }\n        return null;\n    }\n    getFindScopes() {\n        if (this._findScopeDecorationIds.length) {\n            const scopes = this._findScopeDecorationIds.map(findScopeDecorationId => this._editor.getModel().getDecorationRange(findScopeDecorationId)).filter(element => !!element);\n            if (scopes.length) {\n                return scopes;\n            }\n        }\n        return null;\n    }\n    getStartPosition() {\n        return this._startPosition;\n    }\n    setStartPosition(newStartPosition) {\n        this._startPosition = newStartPosition;\n        this.setCurrentFindMatch(null);\n    }\n    _getDecorationIndex(decorationId) {\n        const index = this._decorations.indexOf(decorationId);\n        if (index >= 0) {\n            return index + 1;\n        }\n        return 1;\n    }\n    getDecorationRangeAt(index) {\n        const decorationId = index < this._decorations.length ? this._decorations[index] : null;\n        if (decorationId) {\n            return this._editor.getModel().getDecorationRange(decorationId);\n        }\n        return null;\n    }\n    getCurrentMatchesPosition(desiredRange) {\n        const candidates = this._editor.getModel().getDecorationsInRange(desiredRange);\n        for (const candidate of candidates) {\n            const candidateOpts = candidate.options;\n            if (candidateOpts === FindDecorations._FIND_MATCH_DECORATION || candidateOpts === FindDecorations._CURRENT_FIND_MATCH_DECORATION) {\n                return this._getDecorationIndex(candidate.id);\n            }\n        }\n        // We don't know the current match position, so returns zero to show '?' in find widget\n        return 0;\n    }\n    setCurrentFindMatch(nextMatch) {\n        let newCurrentDecorationId = null;\n        let matchPosition = 0;\n        if (nextMatch) {\n            for (let i = 0, len = this._decorations.length; i < len; i++) {\n                const range = this._editor.getModel().getDecorationRange(this._decorations[i]);\n                if (nextMatch.equalsRange(range)) {\n                    newCurrentDecorationId = this._decorations[i];\n                    matchPosition = (i + 1);\n                    break;\n                }\n            }\n        }\n        if (this._highlightedDecorationId !== null || newCurrentDecorationId !== null) {\n            this._editor.changeDecorations((changeAccessor) => {\n                if (this._highlightedDecorationId !== null) {\n                    changeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._FIND_MATCH_DECORATION);\n                    this._highlightedDecorationId = null;\n                }\n                if (newCurrentDecorationId !== null) {\n                    this._highlightedDecorationId = newCurrentDecorationId;\n                    changeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._CURRENT_FIND_MATCH_DECORATION);\n                }\n                if (this._rangeHighlightDecorationId !== null) {\n                    changeAccessor.removeDecoration(this._rangeHighlightDecorationId);\n                    this._rangeHighlightDecorationId = null;\n                }\n                if (newCurrentDecorationId !== null) {\n                    let rng = this._editor.getModel().getDecorationRange(newCurrentDecorationId);\n                    if (rng.startLineNumber !== rng.endLineNumber && rng.endColumn === 1) {\n                        const lineBeforeEnd = rng.endLineNumber - 1;\n                        const lineBeforeEndMaxColumn = this._editor.getModel().getLineMaxColumn(lineBeforeEnd);\n                        rng = new Range(rng.startLineNumber, rng.startColumn, lineBeforeEnd, lineBeforeEndMaxColumn);\n                    }\n                    this._rangeHighlightDecorationId = changeAccessor.addDecoration(rng, FindDecorations._RANGE_HIGHLIGHT_DECORATION);\n                }\n            });\n        }\n        return matchPosition;\n    }\n    set(findMatches, findScopes) {\n        this._editor.changeDecorations((accessor) => {\n            let findMatchesOptions = FindDecorations._FIND_MATCH_DECORATION;\n            const newOverviewRulerApproximateDecorations = [];\n            if (findMatches.length > 1000) {\n                // we go into a mode where the overview ruler gets \"approximate\" decorations\n                // the reason is that the overview ruler paints all the decorations in the file and we don't want to cause freezes\n                findMatchesOptions = FindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION;\n                // approximate a distance in lines where matches should be merged\n                const lineCount = this._editor.getModel().getLineCount();\n                const height = this._editor.getLayoutInfo().height;\n                const approxPixelsPerLine = height / lineCount;\n                const mergeLinesDelta = Math.max(2, Math.ceil(3 / approxPixelsPerLine));\n                // merge decorations as much as possible\n                let prevStartLineNumber = findMatches[0].range.startLineNumber;\n                let prevEndLineNumber = findMatches[0].range.endLineNumber;\n                for (let i = 1, len = findMatches.length; i < len; i++) {\n                    const range = findMatches[i].range;\n                    if (prevEndLineNumber + mergeLinesDelta >= range.startLineNumber) {\n                        if (range.endLineNumber > prevEndLineNumber) {\n                            prevEndLineNumber = range.endLineNumber;\n                        }\n                    }\n                    else {\n                        newOverviewRulerApproximateDecorations.push({\n                            range: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\n                            options: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\n                        });\n                        prevStartLineNumber = range.startLineNumber;\n                        prevEndLineNumber = range.endLineNumber;\n                    }\n                }\n                newOverviewRulerApproximateDecorations.push({\n                    range: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\n                    options: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\n                });\n            }\n            // Find matches\n            const newFindMatchesDecorations = new Array(findMatches.length);\n            for (let i = 0, len = findMatches.length; i < len; i++) {\n                newFindMatchesDecorations[i] = {\n                    range: findMatches[i].range,\n                    options: findMatchesOptions\n                };\n            }\n            this._decorations = accessor.deltaDecorations(this._decorations, newFindMatchesDecorations);\n            // Overview ruler approximate decorations\n            this._overviewRulerApproximateDecorations = accessor.deltaDecorations(this._overviewRulerApproximateDecorations, newOverviewRulerApproximateDecorations);\n            // Range highlight\n            if (this._rangeHighlightDecorationId) {\n                accessor.removeDecoration(this._rangeHighlightDecorationId);\n                this._rangeHighlightDecorationId = null;\n            }\n            // Find scope\n            if (this._findScopeDecorationIds.length) {\n                this._findScopeDecorationIds.forEach(findScopeDecorationId => accessor.removeDecoration(findScopeDecorationId));\n                this._findScopeDecorationIds = [];\n            }\n            if (findScopes === null || findScopes === void 0 ? void 0 : findScopes.length) {\n                this._findScopeDecorationIds = findScopes.map(findScope => accessor.addDecoration(findScope, FindDecorations._FIND_SCOPE_DECORATION));\n            }\n        });\n    }\n    matchBeforePosition(position) {\n        if (this._decorations.length === 0) {\n            return null;\n        }\n        for (let i = this._decorations.length - 1; i >= 0; i--) {\n            const decorationId = this._decorations[i];\n            const r = this._editor.getModel().getDecorationRange(decorationId);\n            if (!r || r.endLineNumber > position.lineNumber) {\n                continue;\n            }\n            if (r.endLineNumber < position.lineNumber) {\n                return r;\n            }\n            if (r.endColumn > position.column) {\n                continue;\n            }\n            return r;\n        }\n        return this._editor.getModel().getDecorationRange(this._decorations[this._decorations.length - 1]);\n    }\n    matchAfterPosition(position) {\n        if (this._decorations.length === 0) {\n            return null;\n        }\n        for (let i = 0, len = this._decorations.length; i < len; i++) {\n            const decorationId = this._decorations[i];\n            const r = this._editor.getModel().getDecorationRange(decorationId);\n            if (!r || r.startLineNumber < position.lineNumber) {\n                continue;\n            }\n            if (r.startLineNumber > position.lineNumber) {\n                return r;\n            }\n            if (r.startColumn < position.column) {\n                continue;\n            }\n            return r;\n        }\n        return this._editor.getModel().getDecorationRange(this._decorations[0]);\n    }\n    _allDecorations() {\n        let result = [];\n        result = result.concat(this._decorations);\n        result = result.concat(this._overviewRulerApproximateDecorations);\n        if (this._findScopeDecorationIds.length) {\n            result.push(...this._findScopeDecorationIds);\n        }\n        if (this._rangeHighlightDecorationId) {\n            result.push(this._rangeHighlightDecorationId);\n        }\n        return result;\n    }\n}\nFindDecorations._CURRENT_FIND_MATCH_DECORATION = ModelDecorationOptions.register({\n    description: 'current-find-match',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    zIndex: 13,\n    className: 'currentFindMatch',\n    showIfCollapsed: true,\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerFindMatchForeground),\n        position: OverviewRulerLane.Center\n    },\n    minimap: {\n        color: themeColorFromId(minimapFindMatch),\n        position: MinimapPosition.Inline\n    }\n});\nFindDecorations._FIND_MATCH_DECORATION = ModelDecorationOptions.register({\n    description: 'find-match',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    zIndex: 10,\n    className: 'findMatch',\n    showIfCollapsed: true,\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerFindMatchForeground),\n        position: OverviewRulerLane.Center\n    },\n    minimap: {\n        color: themeColorFromId(minimapFindMatch),\n        position: MinimapPosition.Inline\n    }\n});\nFindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION = ModelDecorationOptions.register({\n    description: 'find-match-no-overview',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    className: 'findMatch',\n    showIfCollapsed: true\n});\nFindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION = ModelDecorationOptions.register({\n    description: 'find-match-only-overview',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerFindMatchForeground),\n        position: OverviewRulerLane.Center\n    }\n});\nFindDecorations._RANGE_HIGHLIGHT_DECORATION = ModelDecorationOptions.register({\n    description: 'find-range-highlight',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    className: 'rangeHighlight',\n    isWholeLine: true\n});\nFindDecorations._FIND_SCOPE_DECORATION = ModelDecorationOptions.register({\n    description: 'find-scope',\n    className: 'findScope',\n    isWholeLine: true\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nexport class ReplaceAllCommand {\n    constructor(editorSelection, ranges, replaceStrings) {\n        this._editorSelection = editorSelection;\n        this._ranges = ranges;\n        this._replaceStrings = replaceStrings;\n        this._trackedEditorSelectionId = null;\n    }\n    getEditOperations(model, builder) {\n        if (this._ranges.length > 0) {\n            // Collect all edit operations\n            const ops = [];\n            for (let i = 0; i < this._ranges.length; i++) {\n                ops.push({\n                    range: this._ranges[i],\n                    text: this._replaceStrings[i]\n                });\n            }\n            // Sort them in ascending order by range starts\n            ops.sort((o1, o2) => {\n                return Range.compareRangesUsingStarts(o1.range, o2.range);\n            });\n            // Merge operations that touch each other\n            const resultOps = [];\n            let previousOp = ops[0];\n            for (let i = 1; i < ops.length; i++) {\n                if (previousOp.range.endLineNumber === ops[i].range.startLineNumber && previousOp.range.endColumn === ops[i].range.startColumn) {\n                    // These operations are one after another and can be merged\n                    previousOp.range = previousOp.range.plusRange(ops[i].range);\n                    previousOp.text = previousOp.text + ops[i].text;\n                }\n                else {\n                    resultOps.push(previousOp);\n                    previousOp = ops[i];\n                }\n            }\n            resultOps.push(previousOp);\n            for (const op of resultOps) {\n                builder.addEditOperation(op.range, op.text);\n            }\n        }\n        this._trackedEditorSelectionId = builder.trackSelection(this._editorSelection);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this._trackedEditorSelectionId);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { buildReplaceStringWithCasePreserved } from '../../../../base/common/search.js';\n/**\n * Assigned when the replace pattern is entirely static.\n */\nclass StaticValueReplacePattern {\n    constructor(staticValue) {\n        this.staticValue = staticValue;\n        this.kind = 0 /* ReplacePatternKind.StaticValue */;\n    }\n}\n/**\n * Assigned when the replace pattern has replacement patterns.\n */\nclass DynamicPiecesReplacePattern {\n    constructor(pieces) {\n        this.pieces = pieces;\n        this.kind = 1 /* ReplacePatternKind.DynamicPieces */;\n    }\n}\nexport class ReplacePattern {\n    static fromStaticValue(value) {\n        return new ReplacePattern([ReplacePiece.staticValue(value)]);\n    }\n    get hasReplacementPatterns() {\n        return (this._state.kind === 1 /* ReplacePatternKind.DynamicPieces */);\n    }\n    constructor(pieces) {\n        if (!pieces || pieces.length === 0) {\n            this._state = new StaticValueReplacePattern('');\n        }\n        else if (pieces.length === 1 && pieces[0].staticValue !== null) {\n            this._state = new StaticValueReplacePattern(pieces[0].staticValue);\n        }\n        else {\n            this._state = new DynamicPiecesReplacePattern(pieces);\n        }\n    }\n    buildReplaceString(matches, preserveCase) {\n        if (this._state.kind === 0 /* ReplacePatternKind.StaticValue */) {\n            if (preserveCase) {\n                return buildReplaceStringWithCasePreserved(matches, this._state.staticValue);\n            }\n            else {\n                return this._state.staticValue;\n            }\n        }\n        let result = '';\n        for (let i = 0, len = this._state.pieces.length; i < len; i++) {\n            const piece = this._state.pieces[i];\n            if (piece.staticValue !== null) {\n                // static value ReplacePiece\n                result += piece.staticValue;\n                continue;\n            }\n            // match index ReplacePiece\n            let match = ReplacePattern._substitute(piece.matchIndex, matches);\n            if (piece.caseOps !== null && piece.caseOps.length > 0) {\n                const repl = [];\n                const lenOps = piece.caseOps.length;\n                let opIdx = 0;\n                for (let idx = 0, len = match.length; idx < len; idx++) {\n                    if (opIdx >= lenOps) {\n                        repl.push(match.slice(idx));\n                        break;\n                    }\n                    switch (piece.caseOps[opIdx]) {\n                        case 'U':\n                            repl.push(match[idx].toUpperCase());\n                            break;\n                        case 'u':\n                            repl.push(match[idx].toUpperCase());\n                            opIdx++;\n                            break;\n                        case 'L':\n                            repl.push(match[idx].toLowerCase());\n                            break;\n                        case 'l':\n                            repl.push(match[idx].toLowerCase());\n                            opIdx++;\n                            break;\n                        default:\n                            repl.push(match[idx]);\n                    }\n                }\n                match = repl.join('');\n            }\n            result += match;\n        }\n        return result;\n    }\n    static _substitute(matchIndex, matches) {\n        if (matches === null) {\n            return '';\n        }\n        if (matchIndex === 0) {\n            return matches[0];\n        }\n        let remainder = '';\n        while (matchIndex > 0) {\n            if (matchIndex < matches.length) {\n                // A match can be undefined\n                const match = (matches[matchIndex] || '');\n                return match + remainder;\n            }\n            remainder = String(matchIndex % 10) + remainder;\n            matchIndex = Math.floor(matchIndex / 10);\n        }\n        return '$' + remainder;\n    }\n}\n/**\n * A replace piece can either be a static string or an index to a specific match.\n */\nexport class ReplacePiece {\n    static staticValue(value) {\n        return new ReplacePiece(value, -1, null);\n    }\n    static caseOps(index, caseOps) {\n        return new ReplacePiece(null, index, caseOps);\n    }\n    constructor(staticValue, matchIndex, caseOps) {\n        this.staticValue = staticValue;\n        this.matchIndex = matchIndex;\n        if (!caseOps || caseOps.length === 0) {\n            this.caseOps = null;\n        }\n        else {\n            this.caseOps = caseOps.slice(0);\n        }\n    }\n}\nclass ReplacePieceBuilder {\n    constructor(source) {\n        this._source = source;\n        this._lastCharIndex = 0;\n        this._result = [];\n        this._resultLen = 0;\n        this._currentStaticPiece = '';\n    }\n    emitUnchanged(toCharIndex) {\n        this._emitStatic(this._source.substring(this._lastCharIndex, toCharIndex));\n        this._lastCharIndex = toCharIndex;\n    }\n    emitStatic(value, toCharIndex) {\n        this._emitStatic(value);\n        this._lastCharIndex = toCharIndex;\n    }\n    _emitStatic(value) {\n        if (value.length === 0) {\n            return;\n        }\n        this._currentStaticPiece += value;\n    }\n    emitMatchIndex(index, toCharIndex, caseOps) {\n        if (this._currentStaticPiece.length !== 0) {\n            this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\n            this._currentStaticPiece = '';\n        }\n        this._result[this._resultLen++] = ReplacePiece.caseOps(index, caseOps);\n        this._lastCharIndex = toCharIndex;\n    }\n    finalize() {\n        this.emitUnchanged(this._source.length);\n        if (this._currentStaticPiece.length !== 0) {\n            this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\n            this._currentStaticPiece = '';\n        }\n        return new ReplacePattern(this._result);\n    }\n}\n/**\n * \\n\t\t\t=> inserts a LF\n * \\t\t\t\t=> inserts a TAB\n * \\\\\t\t\t=> inserts a \"\\\".\n * \\u\t\t\t=> upper-cases one character in a match.\n * \\U\t\t\t=> upper-cases ALL remaining characters in a match.\n * \\l\t\t\t=> lower-cases one character in a match.\n * \\L\t\t\t=> lower-cases ALL remaining characters in a match.\n * $$\t\t\t=> inserts a \"$\".\n * $& and $0\t=> inserts the matched substring.\n * $n\t\t\t=> Where n is a non-negative integer lesser than 100, inserts the nth parenthesized submatch string\n * everything else stays untouched\n *\n * Also see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter\n */\nexport function parseReplaceString(replaceString) {\n    if (!replaceString || replaceString.length === 0) {\n        return new ReplacePattern(null);\n    }\n    const caseOps = [];\n    const result = new ReplacePieceBuilder(replaceString);\n    for (let i = 0, len = replaceString.length; i < len; i++) {\n        const chCode = replaceString.charCodeAt(i);\n        if (chCode === 92 /* CharCode.Backslash */) {\n            // move to next char\n            i++;\n            if (i >= len) {\n                // string ends with a \\\n                break;\n            }\n            const nextChCode = replaceString.charCodeAt(i);\n            // let replaceWithCharacter: string | null = null;\n            switch (nextChCode) {\n                case 92 /* CharCode.Backslash */:\n                    // \\\\ => inserts a \"\\\"\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('\\\\', i + 1);\n                    break;\n                case 110 /* CharCode.n */:\n                    // \\n => inserts a LF\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('\\n', i + 1);\n                    break;\n                case 116 /* CharCode.t */:\n                    // \\t => inserts a TAB\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('\\t', i + 1);\n                    break;\n                // Case modification of string replacements, patterned after Boost, but only applied\n                // to the replacement text, not subsequent content.\n                case 117 /* CharCode.u */:\n                // \\u => upper-cases one character.\n                case 85 /* CharCode.U */:\n                // \\U => upper-cases ALL following characters.\n                case 108 /* CharCode.l */:\n                // \\l => lower-cases one character.\n                case 76 /* CharCode.L */:\n                    // \\L => lower-cases ALL following characters.\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('', i + 1);\n                    caseOps.push(String.fromCharCode(nextChCode));\n                    break;\n            }\n            continue;\n        }\n        if (chCode === 36 /* CharCode.DollarSign */) {\n            // move to next char\n            i++;\n            if (i >= len) {\n                // string ends with a $\n                break;\n            }\n            const nextChCode = replaceString.charCodeAt(i);\n            if (nextChCode === 36 /* CharCode.DollarSign */) {\n                // $$ => inserts a \"$\"\n                result.emitUnchanged(i - 1);\n                result.emitStatic('$', i + 1);\n                continue;\n            }\n            if (nextChCode === 48 /* CharCode.Digit0 */ || nextChCode === 38 /* CharCode.Ampersand */) {\n                // $& and $0 => inserts the matched substring.\n                result.emitUnchanged(i - 1);\n                result.emitMatchIndex(0, i + 1, caseOps);\n                caseOps.length = 0;\n                continue;\n            }\n            if (49 /* CharCode.Digit1 */ <= nextChCode && nextChCode <= 57 /* CharCode.Digit9 */) {\n                // $n\n                let matchIndex = nextChCode - 48 /* CharCode.Digit0 */;\n                // peek next char to probe for $nn\n                if (i + 1 < len) {\n                    const nextNextChCode = replaceString.charCodeAt(i + 1);\n                    if (48 /* CharCode.Digit0 */ <= nextNextChCode && nextNextChCode <= 57 /* CharCode.Digit9 */) {\n                        // $nn\n                        // move to next char\n                        i++;\n                        matchIndex = matchIndex * 10 + (nextNextChCode - 48 /* CharCode.Digit0 */);\n                        result.emitUnchanged(i - 2);\n                        result.emitMatchIndex(matchIndex, i + 1, caseOps);\n                        caseOps.length = 0;\n                        continue;\n                    }\n                }\n                result.emitUnchanged(i - 1);\n                result.emitMatchIndex(matchIndex, i + 1, caseOps);\n                caseOps.length = 0;\n                continue;\n            }\n        }\n    }\n    return result.finalize();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { findFirstIdxMonotonousOrArrLen } from '../../../../base/common/arraysFind.js';\nimport { RunOnceScheduler, TimeoutTimer } from '../../../../base/common/async.js';\nimport { DisposableStore, dispose } from '../../../../base/common/lifecycle.js';\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection } from '../../../common/commands/replaceCommand.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { SearchParams } from '../../../common/model/textModelSearch.js';\nimport { FindDecorations } from './findDecorations.js';\nimport { ReplaceAllCommand } from './replaceAllCommand.js';\nimport { parseReplaceString, ReplacePattern } from './replacePattern.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nexport const CONTEXT_FIND_WIDGET_VISIBLE = new RawContextKey('findWidgetVisible', false);\nexport const CONTEXT_FIND_WIDGET_NOT_VISIBLE = CONTEXT_FIND_WIDGET_VISIBLE.toNegated();\n// Keep ContextKey use of 'Focussed' to not break when clauses\nexport const CONTEXT_FIND_INPUT_FOCUSED = new RawContextKey('findInputFocussed', false);\nexport const CONTEXT_REPLACE_INPUT_FOCUSED = new RawContextKey('replaceInputFocussed', false);\nexport const ToggleCaseSensitiveKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 33 /* KeyCode.KeyC */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 33 /* KeyCode.KeyC */ }\n};\nexport const ToggleWholeWordKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 53 /* KeyCode.KeyW */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 53 /* KeyCode.KeyW */ }\n};\nexport const ToggleRegexKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 48 /* KeyCode.KeyR */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 48 /* KeyCode.KeyR */ }\n};\nexport const ToggleSearchScopeKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 42 /* KeyCode.KeyL */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 42 /* KeyCode.KeyL */ }\n};\nexport const TogglePreserveCaseKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 46 /* KeyCode.KeyP */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 46 /* KeyCode.KeyP */ }\n};\nexport const FIND_IDS = {\n    StartFindAction: 'actions.find',\n    StartFindWithSelection: 'actions.findWithSelection',\n    StartFindWithArgs: 'editor.actions.findWithArgs',\n    NextMatchFindAction: 'editor.action.nextMatchFindAction',\n    PreviousMatchFindAction: 'editor.action.previousMatchFindAction',\n    GoToMatchFindAction: 'editor.action.goToMatchFindAction',\n    NextSelectionMatchFindAction: 'editor.action.nextSelectionMatchFindAction',\n    PreviousSelectionMatchFindAction: 'editor.action.previousSelectionMatchFindAction',\n    StartFindReplaceAction: 'editor.action.startFindReplaceAction',\n    CloseFindWidgetCommand: 'closeFindWidget',\n    ToggleCaseSensitiveCommand: 'toggleFindCaseSensitive',\n    ToggleWholeWordCommand: 'toggleFindWholeWord',\n    ToggleRegexCommand: 'toggleFindRegex',\n    ToggleSearchScopeCommand: 'toggleFindInSelection',\n    TogglePreserveCaseCommand: 'togglePreserveCase',\n    ReplaceOneAction: 'editor.action.replaceOne',\n    ReplaceAllAction: 'editor.action.replaceAll',\n    SelectAllMatchesAction: 'editor.action.selectAllMatches'\n};\nexport const MATCHES_LIMIT = 19999;\nconst RESEARCH_DELAY = 240;\nexport class FindModelBoundToEditorModel {\n    constructor(editor, state) {\n        this._toDispose = new DisposableStore();\n        this._editor = editor;\n        this._state = state;\n        this._isDisposed = false;\n        this._startSearchingTimer = new TimeoutTimer();\n        this._decorations = new FindDecorations(editor);\n        this._toDispose.add(this._decorations);\n        this._updateDecorationsScheduler = new RunOnceScheduler(() => this.research(false), 100);\n        this._toDispose.add(this._updateDecorationsScheduler);\n        this._toDispose.add(this._editor.onDidChangeCursorPosition((e) => {\n            if (e.reason === 3 /* CursorChangeReason.Explicit */\n                || e.reason === 5 /* CursorChangeReason.Undo */\n                || e.reason === 6 /* CursorChangeReason.Redo */) {\n                this._decorations.setStartPosition(this._editor.getPosition());\n            }\n        }));\n        this._ignoreModelContentChanged = false;\n        this._toDispose.add(this._editor.onDidChangeModelContent((e) => {\n            if (this._ignoreModelContentChanged) {\n                return;\n            }\n            if (e.isFlush) {\n                // a model.setValue() was called\n                this._decorations.reset();\n            }\n            this._decorations.setStartPosition(this._editor.getPosition());\n            this._updateDecorationsScheduler.schedule();\n        }));\n        this._toDispose.add(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this.research(false, this._state.searchScope);\n    }\n    dispose() {\n        this._isDisposed = true;\n        dispose(this._startSearchingTimer);\n        this._toDispose.dispose();\n    }\n    _onStateChanged(e) {\n        if (this._isDisposed) {\n            // The find model is disposed during a find state changed event\n            return;\n        }\n        if (!this._editor.hasModel()) {\n            // The find model will be disposed momentarily\n            return;\n        }\n        if (e.searchString || e.isReplaceRevealed || e.isRegex || e.wholeWord || e.matchCase || e.searchScope) {\n            const model = this._editor.getModel();\n            if (model.isTooLargeForSyncing()) {\n                this._startSearchingTimer.cancel();\n                this._startSearchingTimer.setIfNotSet(() => {\n                    if (e.searchScope) {\n                        this.research(e.moveCursor, this._state.searchScope);\n                    }\n                    else {\n                        this.research(e.moveCursor);\n                    }\n                }, RESEARCH_DELAY);\n            }\n            else {\n                if (e.searchScope) {\n                    this.research(e.moveCursor, this._state.searchScope);\n                }\n                else {\n                    this.research(e.moveCursor);\n                }\n            }\n        }\n    }\n    static _getSearchRange(model, findScope) {\n        // If we have set now or before a find scope, use it for computing the search range\n        if (findScope) {\n            return findScope;\n        }\n        return model.getFullModelRange();\n    }\n    research(moveCursor, newFindScope) {\n        let findScopes = null;\n        if (typeof newFindScope !== 'undefined') {\n            if (newFindScope !== null) {\n                if (!Array.isArray(newFindScope)) {\n                    findScopes = [newFindScope];\n                }\n                else {\n                    findScopes = newFindScope;\n                }\n            }\n        }\n        else {\n            findScopes = this._decorations.getFindScopes();\n        }\n        if (findScopes !== null) {\n            findScopes = findScopes.map(findScope => {\n                if (findScope.startLineNumber !== findScope.endLineNumber) {\n                    let endLineNumber = findScope.endLineNumber;\n                    if (findScope.endColumn === 1) {\n                        endLineNumber = endLineNumber - 1;\n                    }\n                    return new Range(findScope.startLineNumber, 1, endLineNumber, this._editor.getModel().getLineMaxColumn(endLineNumber));\n                }\n                return findScope;\n            });\n        }\n        const findMatches = this._findMatches(findScopes, false, MATCHES_LIMIT);\n        this._decorations.set(findMatches, findScopes);\n        const editorSelection = this._editor.getSelection();\n        let currentMatchesPosition = this._decorations.getCurrentMatchesPosition(editorSelection);\n        if (currentMatchesPosition === 0 && findMatches.length > 0) {\n            // current selection is not on top of a match\n            // try to find its nearest result from the top of the document\n            const matchAfterSelection = findFirstIdxMonotonousOrArrLen(findMatches.map(match => match.range), range => Range.compareRangesUsingStarts(range, editorSelection) >= 0);\n            currentMatchesPosition = matchAfterSelection > 0 ? matchAfterSelection - 1 + 1 /** match position is one based */ : currentMatchesPosition;\n        }\n        this._state.changeMatchInfo(currentMatchesPosition, this._decorations.getCount(), undefined);\n        if (moveCursor && this._editor.getOption(41 /* EditorOption.find */).cursorMoveOnType) {\n            this._moveToNextMatch(this._decorations.getStartPosition());\n        }\n    }\n    _hasMatches() {\n        return (this._state.matchesCount > 0);\n    }\n    _cannotFind() {\n        if (!this._hasMatches()) {\n            const findScope = this._decorations.getFindScope();\n            if (findScope) {\n                // Reveal the selection so user is reminded that 'selection find' is on.\n                this._editor.revealRangeInCenterIfOutsideViewport(findScope, 0 /* ScrollType.Smooth */);\n            }\n            return true;\n        }\n        return false;\n    }\n    _setCurrentFindMatch(match) {\n        const matchesPosition = this._decorations.setCurrentFindMatch(match);\n        this._state.changeMatchInfo(matchesPosition, this._decorations.getCount(), match);\n        this._editor.setSelection(match);\n        this._editor.revealRangeInCenterIfOutsideViewport(match, 0 /* ScrollType.Smooth */);\n    }\n    _prevSearchPosition(before) {\n        const isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0\n            || this._state.searchString.indexOf('$') >= 0);\n        let { lineNumber, column } = before;\n        const model = this._editor.getModel();\n        if (isUsingLineStops || column === 1) {\n            if (lineNumber === 1) {\n                lineNumber = model.getLineCount();\n            }\n            else {\n                lineNumber--;\n            }\n            column = model.getLineMaxColumn(lineNumber);\n        }\n        else {\n            column--;\n        }\n        return new Position(lineNumber, column);\n    }\n    _moveToPrevMatch(before, isRecursed = false) {\n        if (!this._state.canNavigateBack()) {\n            // we are beyond the first matched find result\n            // instead of doing nothing, we should refocus the first item\n            const nextMatchRange = this._decorations.matchAfterPosition(before);\n            if (nextMatchRange) {\n                this._setCurrentFindMatch(nextMatchRange);\n            }\n            return;\n        }\n        if (this._decorations.getCount() < MATCHES_LIMIT) {\n            let prevMatchRange = this._decorations.matchBeforePosition(before);\n            if (prevMatchRange && prevMatchRange.isEmpty() && prevMatchRange.getStartPosition().equals(before)) {\n                before = this._prevSearchPosition(before);\n                prevMatchRange = this._decorations.matchBeforePosition(before);\n            }\n            if (prevMatchRange) {\n                this._setCurrentFindMatch(prevMatchRange);\n            }\n            return;\n        }\n        if (this._cannotFind()) {\n            return;\n        }\n        const findScope = this._decorations.getFindScope();\n        const searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\n        // ...(----)...|...\n        if (searchRange.getEndPosition().isBefore(before)) {\n            before = searchRange.getEndPosition();\n        }\n        // ...|...(----)...\n        if (before.isBefore(searchRange.getStartPosition())) {\n            before = searchRange.getEndPosition();\n        }\n        const { lineNumber, column } = before;\n        const model = this._editor.getModel();\n        let position = new Position(lineNumber, column);\n        let prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(129 /* EditorOption.wordSeparators */) : null, false);\n        if (prevMatch && prevMatch.range.isEmpty() && prevMatch.range.getStartPosition().equals(position)) {\n            // Looks like we're stuck at this position, unacceptable!\n            position = this._prevSearchPosition(position);\n            prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(129 /* EditorOption.wordSeparators */) : null, false);\n        }\n        if (!prevMatch) {\n            // there is precisely one match and selection is on top of it\n            return;\n        }\n        if (!isRecursed && !searchRange.containsRange(prevMatch.range)) {\n            return this._moveToPrevMatch(prevMatch.range.getStartPosition(), true);\n        }\n        this._setCurrentFindMatch(prevMatch.range);\n    }\n    moveToPrevMatch() {\n        this._moveToPrevMatch(this._editor.getSelection().getStartPosition());\n    }\n    _nextSearchPosition(after) {\n        const isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0\n            || this._state.searchString.indexOf('$') >= 0);\n        let { lineNumber, column } = after;\n        const model = this._editor.getModel();\n        if (isUsingLineStops || column === model.getLineMaxColumn(lineNumber)) {\n            if (lineNumber === model.getLineCount()) {\n                lineNumber = 1;\n            }\n            else {\n                lineNumber++;\n            }\n            column = 1;\n        }\n        else {\n            column++;\n        }\n        return new Position(lineNumber, column);\n    }\n    _moveToNextMatch(after) {\n        if (!this._state.canNavigateForward()) {\n            // we are beyond the last matched find result\n            // instead of doing nothing, we should refocus the last item\n            const prevMatchRange = this._decorations.matchBeforePosition(after);\n            if (prevMatchRange) {\n                this._setCurrentFindMatch(prevMatchRange);\n            }\n            return;\n        }\n        if (this._decorations.getCount() < MATCHES_LIMIT) {\n            let nextMatchRange = this._decorations.matchAfterPosition(after);\n            if (nextMatchRange && nextMatchRange.isEmpty() && nextMatchRange.getStartPosition().equals(after)) {\n                // Looks like we're stuck at this position, unacceptable!\n                after = this._nextSearchPosition(after);\n                nextMatchRange = this._decorations.matchAfterPosition(after);\n            }\n            if (nextMatchRange) {\n                this._setCurrentFindMatch(nextMatchRange);\n            }\n            return;\n        }\n        const nextMatch = this._getNextMatch(after, false, true);\n        if (nextMatch) {\n            this._setCurrentFindMatch(nextMatch.range);\n        }\n    }\n    _getNextMatch(after, captureMatches, forceMove, isRecursed = false) {\n        if (this._cannotFind()) {\n            return null;\n        }\n        const findScope = this._decorations.getFindScope();\n        const searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\n        // ...(----)...|...\n        if (searchRange.getEndPosition().isBefore(after)) {\n            after = searchRange.getStartPosition();\n        }\n        // ...|...(----)...\n        if (after.isBefore(searchRange.getStartPosition())) {\n            after = searchRange.getStartPosition();\n        }\n        const { lineNumber, column } = after;\n        const model = this._editor.getModel();\n        let position = new Position(lineNumber, column);\n        let nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(129 /* EditorOption.wordSeparators */) : null, captureMatches);\n        if (forceMove && nextMatch && nextMatch.range.isEmpty() && nextMatch.range.getStartPosition().equals(position)) {\n            // Looks like we're stuck at this position, unacceptable!\n            position = this._nextSearchPosition(position);\n            nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(129 /* EditorOption.wordSeparators */) : null, captureMatches);\n        }\n        if (!nextMatch) {\n            // there is precisely one match and selection is on top of it\n            return null;\n        }\n        if (!isRecursed && !searchRange.containsRange(nextMatch.range)) {\n            return this._getNextMatch(nextMatch.range.getEndPosition(), captureMatches, forceMove, true);\n        }\n        return nextMatch;\n    }\n    moveToNextMatch() {\n        this._moveToNextMatch(this._editor.getSelection().getEndPosition());\n    }\n    _moveToMatch(index) {\n        const decorationRange = this._decorations.getDecorationRangeAt(index);\n        if (decorationRange) {\n            this._setCurrentFindMatch(decorationRange);\n        }\n    }\n    moveToMatch(index) {\n        this._moveToMatch(index);\n    }\n    _getReplacePattern() {\n        if (this._state.isRegex) {\n            return parseReplaceString(this._state.replaceString);\n        }\n        return ReplacePattern.fromStaticValue(this._state.replaceString);\n    }\n    replace() {\n        if (!this._hasMatches()) {\n            return;\n        }\n        const replacePattern = this._getReplacePattern();\n        const selection = this._editor.getSelection();\n        const nextMatch = this._getNextMatch(selection.getStartPosition(), true, false);\n        if (nextMatch) {\n            if (selection.equalsRange(nextMatch.range)) {\n                // selection sits on a find match => replace it!\n                const replaceString = replacePattern.buildReplaceString(nextMatch.matches, this._state.preserveCase);\n                const command = new ReplaceCommand(selection, replaceString);\n                this._executeEditorCommand('replace', command);\n                this._decorations.setStartPosition(new Position(selection.startLineNumber, selection.startColumn + replaceString.length));\n                this.research(true);\n            }\n            else {\n                this._decorations.setStartPosition(this._editor.getPosition());\n                this._setCurrentFindMatch(nextMatch.range);\n            }\n        }\n    }\n    _findMatches(findScopes, captureMatches, limitResultCount) {\n        const searchRanges = (findScopes || [null]).map((scope) => FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), scope));\n        return this._editor.getModel().findMatches(this._state.searchString, searchRanges, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(129 /* EditorOption.wordSeparators */) : null, captureMatches, limitResultCount);\n    }\n    replaceAll() {\n        if (!this._hasMatches()) {\n            return;\n        }\n        const findScopes = this._decorations.getFindScopes();\n        if (findScopes === null && this._state.matchesCount >= MATCHES_LIMIT) {\n            // Doing a replace on the entire file that is over ${MATCHES_LIMIT} matches\n            this._largeReplaceAll();\n        }\n        else {\n            this._regularReplaceAll(findScopes);\n        }\n        this.research(false);\n    }\n    _largeReplaceAll() {\n        const searchParams = new SearchParams(this._state.searchString, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(129 /* EditorOption.wordSeparators */) : null);\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return;\n        }\n        let searchRegex = searchData.regex;\n        if (!searchRegex.multiline) {\n            let mod = 'mu';\n            if (searchRegex.ignoreCase) {\n                mod += 'i';\n            }\n            if (searchRegex.global) {\n                mod += 'g';\n            }\n            searchRegex = new RegExp(searchRegex.source, mod);\n        }\n        const model = this._editor.getModel();\n        const modelText = model.getValue(1 /* EndOfLinePreference.LF */);\n        const fullModelRange = model.getFullModelRange();\n        const replacePattern = this._getReplacePattern();\n        let resultText;\n        const preserveCase = this._state.preserveCase;\n        if (replacePattern.hasReplacementPatterns || preserveCase) {\n            resultText = modelText.replace(searchRegex, function () {\n                return replacePattern.buildReplaceString(arguments, preserveCase);\n            });\n        }\n        else {\n            resultText = modelText.replace(searchRegex, replacePattern.buildReplaceString(null, preserveCase));\n        }\n        const command = new ReplaceCommandThatPreservesSelection(fullModelRange, resultText, this._editor.getSelection());\n        this._executeEditorCommand('replaceAll', command);\n    }\n    _regularReplaceAll(findScopes) {\n        const replacePattern = this._getReplacePattern();\n        // Get all the ranges (even more than the highlighted ones)\n        const matches = this._findMatches(findScopes, replacePattern.hasReplacementPatterns || this._state.preserveCase, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n        const replaceStrings = [];\n        for (let i = 0, len = matches.length; i < len; i++) {\n            replaceStrings[i] = replacePattern.buildReplaceString(matches[i].matches, this._state.preserveCase);\n        }\n        const command = new ReplaceAllCommand(this._editor.getSelection(), matches.map(m => m.range), replaceStrings);\n        this._executeEditorCommand('replaceAll', command);\n    }\n    selectAllMatches() {\n        if (!this._hasMatches()) {\n            return;\n        }\n        const findScopes = this._decorations.getFindScopes();\n        // Get all the ranges (even more than the highlighted ones)\n        const matches = this._findMatches(findScopes, false, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n        let selections = matches.map(m => new Selection(m.range.startLineNumber, m.range.startColumn, m.range.endLineNumber, m.range.endColumn));\n        // If one of the ranges is the editor selection, then maintain it as primary\n        const editorSelection = this._editor.getSelection();\n        for (let i = 0, len = selections.length; i < len; i++) {\n            const sel = selections[i];\n            if (sel.equalsRange(editorSelection)) {\n                selections = [editorSelection].concat(selections.slice(0, i)).concat(selections.slice(i + 1));\n                break;\n            }\n        }\n        this._editor.setSelections(selections);\n    }\n    _executeEditorCommand(source, command) {\n        try {\n            this._ignoreModelContentChanged = true;\n            this._editor.pushUndoStop();\n            this._editor.executeCommand(source, command);\n            this._editor.pushUndoStop();\n        }\n        finally {\n            this._ignoreModelContentChanged = false;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport './findOptionsWidget.css';\nimport { CaseSensitiveToggle, RegexToggle, WholeWordsToggle } from '../../../../base/browser/ui/findinput/findInputToggles.js';\nimport { Widget } from '../../../../base/browser/ui/widget.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { FIND_IDS } from './findModel.js';\nimport { asCssVariable, inputActiveOptionBackground, inputActiveOptionBorder, inputActiveOptionForeground } from '../../../../platform/theme/common/colorRegistry.js';\nexport class FindOptionsWidget extends Widget {\n    constructor(editor, state, keybindingService) {\n        super();\n        this._hideSoon = this._register(new RunOnceScheduler(() => this._hide(), 2000));\n        this._isVisible = false;\n        this._editor = editor;\n        this._state = state;\n        this._keybindingService = keybindingService;\n        this._domNode = document.createElement('div');\n        this._domNode.className = 'findOptionsWidget';\n        this._domNode.style.display = 'none';\n        this._domNode.style.top = '10px';\n        this._domNode.style.zIndex = '12';\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        const toggleStyles = {\n            inputActiveOptionBorder: asCssVariable(inputActiveOptionBorder),\n            inputActiveOptionForeground: asCssVariable(inputActiveOptionForeground),\n            inputActiveOptionBackground: asCssVariable(inputActiveOptionBackground),\n        };\n        this.caseSensitive = this._register(new CaseSensitiveToggle(Object.assign({ appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand), isChecked: this._state.matchCase }, toggleStyles)));\n        this._domNode.appendChild(this.caseSensitive.domNode);\n        this._register(this.caseSensitive.onChange(() => {\n            this._state.change({\n                matchCase: this.caseSensitive.checked\n            }, false);\n        }));\n        this.wholeWords = this._register(new WholeWordsToggle(Object.assign({ appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand), isChecked: this._state.wholeWord }, toggleStyles)));\n        this._domNode.appendChild(this.wholeWords.domNode);\n        this._register(this.wholeWords.onChange(() => {\n            this._state.change({\n                wholeWord: this.wholeWords.checked\n            }, false);\n        }));\n        this.regex = this._register(new RegexToggle(Object.assign({ appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand), isChecked: this._state.isRegex }, toggleStyles)));\n        this._domNode.appendChild(this.regex.domNode);\n        this._register(this.regex.onChange(() => {\n            this._state.change({\n                isRegex: this.regex.checked\n            }, false);\n        }));\n        this._editor.addOverlayWidget(this);\n        this._register(this._state.onFindReplaceStateChange((e) => {\n            let somethingChanged = false;\n            if (e.isRegex) {\n                this.regex.checked = this._state.isRegex;\n                somethingChanged = true;\n            }\n            if (e.wholeWord) {\n                this.wholeWords.checked = this._state.wholeWord;\n                somethingChanged = true;\n            }\n            if (e.matchCase) {\n                this.caseSensitive.checked = this._state.matchCase;\n                somethingChanged = true;\n            }\n            if (!this._state.isRevealed && somethingChanged) {\n                this._revealTemporarily();\n            }\n        }));\n        this._register(dom.addDisposableListener(this._domNode, dom.EventType.MOUSE_LEAVE, (e) => this._onMouseLeave()));\n        this._register(dom.addDisposableListener(this._domNode, 'mouseover', (e) => this._onMouseOver()));\n    }\n    _keybindingLabelFor(actionId) {\n        const kb = this._keybindingService.lookupKeybinding(actionId);\n        if (!kb) {\n            return '';\n        }\n        return ` (${kb.getLabel()})`;\n    }\n    dispose() {\n        this._editor.removeOverlayWidget(this);\n        super.dispose();\n    }\n    // ----- IOverlayWidget API\n    getId() {\n        return FindOptionsWidget.ID;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        return {\n            preference: 0 /* OverlayWidgetPositionPreference.TOP_RIGHT_CORNER */\n        };\n    }\n    highlightFindOptions() {\n        this._revealTemporarily();\n    }\n    _revealTemporarily() {\n        this._show();\n        this._hideSoon.schedule();\n    }\n    _onMouseLeave() {\n        this._hideSoon.schedule();\n    }\n    _onMouseOver() {\n        this._hideSoon.cancel();\n    }\n    _show() {\n        if (this._isVisible) {\n            return;\n        }\n        this._isVisible = true;\n        this._domNode.style.display = 'block';\n    }\n    _hide() {\n        if (!this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        this._domNode.style.display = 'none';\n    }\n}\nFindOptionsWidget.ID = 'editor.contrib.findOptionsWidget';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Range } from '../../../common/core/range.js';\nimport { MATCHES_LIMIT } from './findModel.js';\nfunction effectiveOptionValue(override, value) {\n    if (override === 1 /* FindOptionOverride.True */) {\n        return true;\n    }\n    if (override === 2 /* FindOptionOverride.False */) {\n        return false;\n    }\n    return value;\n}\nexport class FindReplaceState extends Disposable {\n    get searchString() { return this._searchString; }\n    get replaceString() { return this._replaceString; }\n    get isRevealed() { return this._isRevealed; }\n    get isReplaceRevealed() { return this._isReplaceRevealed; }\n    get isRegex() { return effectiveOptionValue(this._isRegexOverride, this._isRegex); }\n    get wholeWord() { return effectiveOptionValue(this._wholeWordOverride, this._wholeWord); }\n    get matchCase() { return effectiveOptionValue(this._matchCaseOverride, this._matchCase); }\n    get preserveCase() { return effectiveOptionValue(this._preserveCaseOverride, this._preserveCase); }\n    get actualIsRegex() { return this._isRegex; }\n    get actualWholeWord() { return this._wholeWord; }\n    get actualMatchCase() { return this._matchCase; }\n    get actualPreserveCase() { return this._preserveCase; }\n    get searchScope() { return this._searchScope; }\n    get matchesPosition() { return this._matchesPosition; }\n    get matchesCount() { return this._matchesCount; }\n    get currentMatch() { return this._currentMatch; }\n    constructor() {\n        super();\n        this._onFindReplaceStateChange = this._register(new Emitter());\n        this.onFindReplaceStateChange = this._onFindReplaceStateChange.event;\n        this._searchString = '';\n        this._replaceString = '';\n        this._isRevealed = false;\n        this._isReplaceRevealed = false;\n        this._isRegex = false;\n        this._isRegexOverride = 0 /* FindOptionOverride.NotSet */;\n        this._wholeWord = false;\n        this._wholeWordOverride = 0 /* FindOptionOverride.NotSet */;\n        this._matchCase = false;\n        this._matchCaseOverride = 0 /* FindOptionOverride.NotSet */;\n        this._preserveCase = false;\n        this._preserveCaseOverride = 0 /* FindOptionOverride.NotSet */;\n        this._searchScope = null;\n        this._matchesPosition = 0;\n        this._matchesCount = 0;\n        this._currentMatch = null;\n        this._loop = true;\n        this._isSearching = false;\n        this._filters = null;\n    }\n    changeMatchInfo(matchesPosition, matchesCount, currentMatch) {\n        const changeEvent = {\n            moveCursor: false,\n            updateHistory: false,\n            searchString: false,\n            replaceString: false,\n            isRevealed: false,\n            isReplaceRevealed: false,\n            isRegex: false,\n            wholeWord: false,\n            matchCase: false,\n            preserveCase: false,\n            searchScope: false,\n            matchesPosition: false,\n            matchesCount: false,\n            currentMatch: false,\n            loop: false,\n            isSearching: false,\n            filters: false\n        };\n        let somethingChanged = false;\n        if (matchesCount === 0) {\n            matchesPosition = 0;\n        }\n        if (matchesPosition > matchesCount) {\n            matchesPosition = matchesCount;\n        }\n        if (this._matchesPosition !== matchesPosition) {\n            this._matchesPosition = matchesPosition;\n            changeEvent.matchesPosition = true;\n            somethingChanged = true;\n        }\n        if (this._matchesCount !== matchesCount) {\n            this._matchesCount = matchesCount;\n            changeEvent.matchesCount = true;\n            somethingChanged = true;\n        }\n        if (typeof currentMatch !== 'undefined') {\n            if (!Range.equalsRange(this._currentMatch, currentMatch)) {\n                this._currentMatch = currentMatch;\n                changeEvent.currentMatch = true;\n                somethingChanged = true;\n            }\n        }\n        if (somethingChanged) {\n            this._onFindReplaceStateChange.fire(changeEvent);\n        }\n    }\n    change(newState, moveCursor, updateHistory = true) {\n        var _a;\n        const changeEvent = {\n            moveCursor: moveCursor,\n            updateHistory: updateHistory,\n            searchString: false,\n            replaceString: false,\n            isRevealed: false,\n            isReplaceRevealed: false,\n            isRegex: false,\n            wholeWord: false,\n            matchCase: false,\n            preserveCase: false,\n            searchScope: false,\n            matchesPosition: false,\n            matchesCount: false,\n            currentMatch: false,\n            loop: false,\n            isSearching: false,\n            filters: false\n        };\n        let somethingChanged = false;\n        const oldEffectiveIsRegex = this.isRegex;\n        const oldEffectiveWholeWords = this.wholeWord;\n        const oldEffectiveMatchCase = this.matchCase;\n        const oldEffectivePreserveCase = this.preserveCase;\n        if (typeof newState.searchString !== 'undefined') {\n            if (this._searchString !== newState.searchString) {\n                this._searchString = newState.searchString;\n                changeEvent.searchString = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.replaceString !== 'undefined') {\n            if (this._replaceString !== newState.replaceString) {\n                this._replaceString = newState.replaceString;\n                changeEvent.replaceString = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isRevealed !== 'undefined') {\n            if (this._isRevealed !== newState.isRevealed) {\n                this._isRevealed = newState.isRevealed;\n                changeEvent.isRevealed = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isReplaceRevealed !== 'undefined') {\n            if (this._isReplaceRevealed !== newState.isReplaceRevealed) {\n                this._isReplaceRevealed = newState.isReplaceRevealed;\n                changeEvent.isReplaceRevealed = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isRegex !== 'undefined') {\n            this._isRegex = newState.isRegex;\n        }\n        if (typeof newState.wholeWord !== 'undefined') {\n            this._wholeWord = newState.wholeWord;\n        }\n        if (typeof newState.matchCase !== 'undefined') {\n            this._matchCase = newState.matchCase;\n        }\n        if (typeof newState.preserveCase !== 'undefined') {\n            this._preserveCase = newState.preserveCase;\n        }\n        if (typeof newState.searchScope !== 'undefined') {\n            if (!((_a = newState.searchScope) === null || _a === void 0 ? void 0 : _a.every((newSearchScope) => {\n                var _a;\n                return (_a = this._searchScope) === null || _a === void 0 ? void 0 : _a.some(existingSearchScope => {\n                    return !Range.equalsRange(existingSearchScope, newSearchScope);\n                });\n            }))) {\n                this._searchScope = newState.searchScope;\n                changeEvent.searchScope = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.loop !== 'undefined') {\n            if (this._loop !== newState.loop) {\n                this._loop = newState.loop;\n                changeEvent.loop = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isSearching !== 'undefined') {\n            if (this._isSearching !== newState.isSearching) {\n                this._isSearching = newState.isSearching;\n                changeEvent.isSearching = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.filters !== 'undefined') {\n            if (this._filters) {\n                this._filters.update(newState.filters);\n            }\n            else {\n                this._filters = newState.filters;\n            }\n            changeEvent.filters = true;\n            somethingChanged = true;\n        }\n        // Overrides get set when they explicitly come in and get reset anytime something else changes\n        this._isRegexOverride = (typeof newState.isRegexOverride !== 'undefined' ? newState.isRegexOverride : 0 /* FindOptionOverride.NotSet */);\n        this._wholeWordOverride = (typeof newState.wholeWordOverride !== 'undefined' ? newState.wholeWordOverride : 0 /* FindOptionOverride.NotSet */);\n        this._matchCaseOverride = (typeof newState.matchCaseOverride !== 'undefined' ? newState.matchCaseOverride : 0 /* FindOptionOverride.NotSet */);\n        this._preserveCaseOverride = (typeof newState.preserveCaseOverride !== 'undefined' ? newState.preserveCaseOverride : 0 /* FindOptionOverride.NotSet */);\n        if (oldEffectiveIsRegex !== this.isRegex) {\n            somethingChanged = true;\n            changeEvent.isRegex = true;\n        }\n        if (oldEffectiveWholeWords !== this.wholeWord) {\n            somethingChanged = true;\n            changeEvent.wholeWord = true;\n        }\n        if (oldEffectiveMatchCase !== this.matchCase) {\n            somethingChanged = true;\n            changeEvent.matchCase = true;\n        }\n        if (oldEffectivePreserveCase !== this.preserveCase) {\n            somethingChanged = true;\n            changeEvent.preserveCase = true;\n        }\n        if (somethingChanged) {\n            this._onFindReplaceStateChange.fire(changeEvent);\n        }\n    }\n    canNavigateBack() {\n        return this.canNavigateInLoop() || (this.matchesPosition !== 1);\n    }\n    canNavigateForward() {\n        return this.canNavigateInLoop() || (this.matchesPosition < this.matchesCount);\n    }\n    canNavigateInLoop() {\n        return this._loop || (this.matchesCount >= MATCHES_LIMIT);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { alert as alertFn } from '../../../../base/browser/ui/aria/aria.js';\nimport { Toggle } from '../../../../base/browser/ui/toggle/toggle.js';\nimport { Sash } from '../../../../base/browser/ui/sash/sash.js';\nimport { Widget } from '../../../../base/browser/ui/widget.js';\nimport { Delayer } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './findWidget.css';\nimport { Range } from '../../../common/core/range.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_REPLACE_INPUT_FOCUSED, FIND_IDS, MATCHES_LIMIT } from './findModel.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextScopedFindInput, ContextScopedReplaceInput } from '../../../../platform/history/browser/contextScopedHistoryWidget.js';\nimport { showHistoryKeybindingHint } from '../../../../platform/history/browser/historyWidgetKeybindingHint.js';\nimport { asCssVariable, contrastBorder, editorFindMatch, editorFindMatchBorder, editorFindMatchHighlight, editorFindMatchHighlightBorder, editorFindRangeHighlight, editorFindRangeHighlightBorder, editorWidgetBackground, editorWidgetBorder, editorWidgetForeground, editorWidgetResizeBorder, errorForeground, focusBorder, inputActiveOptionBackground, inputActiveOptionBorder, inputActiveOptionForeground, toolbarHoverBackground, widgetBorder, widgetShadow } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerIcon, widgetClose } from '../../../../platform/theme/common/iconRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { assertIsDefined } from '../../../../base/common/types.js';\nimport { defaultInputBoxStyles, defaultToggleStyles } from '../../../../platform/theme/browser/defaultStyles.js';\nconst findSelectionIcon = registerIcon('find-selection', Codicon.selection, nls.localize('findSelectionIcon', 'Icon for \\'Find in Selection\\' in the editor find widget.'));\nconst findCollapsedIcon = registerIcon('find-collapsed', Codicon.chevronRight, nls.localize('findCollapsedIcon', 'Icon to indicate that the editor find widget is collapsed.'));\nconst findExpandedIcon = registerIcon('find-expanded', Codicon.chevronDown, nls.localize('findExpandedIcon', 'Icon to indicate that the editor find widget is expanded.'));\nexport const findReplaceIcon = registerIcon('find-replace', Codicon.replace, nls.localize('findReplaceIcon', 'Icon for \\'Replace\\' in the editor find widget.'));\nexport const findReplaceAllIcon = registerIcon('find-replace-all', Codicon.replaceAll, nls.localize('findReplaceAllIcon', 'Icon for \\'Replace All\\' in the editor find widget.'));\nexport const findPreviousMatchIcon = registerIcon('find-previous-match', Codicon.arrowUp, nls.localize('findPreviousMatchIcon', 'Icon for \\'Find Previous\\' in the editor find widget.'));\nexport const findNextMatchIcon = registerIcon('find-next-match', Codicon.arrowDown, nls.localize('findNextMatchIcon', 'Icon for \\'Find Next\\' in the editor find widget.'));\nconst NLS_FIND_DIALOG_LABEL = nls.localize('label.findDialog', \"Find / Replace\");\nconst NLS_FIND_INPUT_LABEL = nls.localize('label.find', \"Find\");\nconst NLS_FIND_INPUT_PLACEHOLDER = nls.localize('placeholder.find', \"Find\");\nconst NLS_PREVIOUS_MATCH_BTN_LABEL = nls.localize('label.previousMatchButton', \"Previous Match\");\nconst NLS_NEXT_MATCH_BTN_LABEL = nls.localize('label.nextMatchButton', \"Next Match\");\nconst NLS_TOGGLE_SELECTION_FIND_TITLE = nls.localize('label.toggleSelectionFind', \"Find in Selection\");\nconst NLS_CLOSE_BTN_LABEL = nls.localize('label.closeButton', \"Close\");\nconst NLS_REPLACE_INPUT_LABEL = nls.localize('label.replace', \"Replace\");\nconst NLS_REPLACE_INPUT_PLACEHOLDER = nls.localize('placeholder.replace', \"Replace\");\nconst NLS_REPLACE_BTN_LABEL = nls.localize('label.replaceButton', \"Replace\");\nconst NLS_REPLACE_ALL_BTN_LABEL = nls.localize('label.replaceAllButton', \"Replace All\");\nconst NLS_TOGGLE_REPLACE_MODE_BTN_LABEL = nls.localize('label.toggleReplaceButton', \"Toggle Replace\");\nconst NLS_MATCHES_COUNT_LIMIT_TITLE = nls.localize('title.matchesCountLimit', \"Only the first {0} results are highlighted, but all find operations work on the entire text.\", MATCHES_LIMIT);\nexport const NLS_MATCHES_LOCATION = nls.localize('label.matchesLocation', \"{0} of {1}\");\nexport const NLS_NO_RESULTS = nls.localize('label.noResults', \"No results\");\nconst FIND_WIDGET_INITIAL_WIDTH = 419;\nconst PART_WIDTH = 275;\nconst FIND_INPUT_AREA_WIDTH = PART_WIDTH - 54;\nlet MAX_MATCHES_COUNT_WIDTH = 69;\n// let FIND_ALL_CONTROLS_WIDTH = 17/** Find Input margin-left */ + (MAX_MATCHES_COUNT_WIDTH + 3 + 1) /** Match Results */ + 23 /** Button */ * 4 + 2/** sash */;\nconst FIND_INPUT_AREA_HEIGHT = 33; // The height of Find Widget when Replace Input is not visible.\nconst ctrlEnterReplaceAllWarningPromptedKey = 'ctrlEnterReplaceAll.windows.donotask';\nconst ctrlKeyMod = (platform.isMacintosh ? 256 /* KeyMod.WinCtrl */ : 2048 /* KeyMod.CtrlCmd */);\nexport class FindWidgetViewZone {\n    constructor(afterLineNumber) {\n        this.afterLineNumber = afterLineNumber;\n        this.heightInPx = FIND_INPUT_AREA_HEIGHT;\n        this.suppressMouseDown = false;\n        this.domNode = document.createElement('div');\n        this.domNode.className = 'dock-find-viewzone';\n    }\n}\nfunction stopPropagationForMultiLineUpwards(event, value, textarea) {\n    const isMultiline = !!value.match(/\\n/);\n    if (textarea && isMultiline && textarea.selectionStart > 0) {\n        event.stopPropagation();\n        return;\n    }\n}\nfunction stopPropagationForMultiLineDownwards(event, value, textarea) {\n    const isMultiline = !!value.match(/\\n/);\n    if (textarea && isMultiline && textarea.selectionEnd < textarea.value.length) {\n        event.stopPropagation();\n        return;\n    }\n}\nexport class FindWidget extends Widget {\n    constructor(codeEditor, controller, state, contextViewProvider, keybindingService, contextKeyService, themeService, storageService, notificationService) {\n        super();\n        this._cachedHeight = null;\n        this._revealTimeouts = [];\n        this._codeEditor = codeEditor;\n        this._controller = controller;\n        this._state = state;\n        this._contextViewProvider = contextViewProvider;\n        this._keybindingService = keybindingService;\n        this._contextKeyService = contextKeyService;\n        this._storageService = storageService;\n        this._notificationService = notificationService;\n        this._ctrlEnterReplaceAllWarningPrompted = !!storageService.getBoolean(ctrlEnterReplaceAllWarningPromptedKey, 0 /* StorageScope.PROFILE */);\n        this._isVisible = false;\n        this._isReplaceVisible = false;\n        this._ignoreChangeEvent = false;\n        this._updateHistoryDelayer = new Delayer(500);\n        this._register(toDisposable(() => this._updateHistoryDelayer.cancel()));\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this._buildDomNode();\n        this._updateButtons();\n        this._tryUpdateWidgetWidth();\n        this._findInput.inputBox.layout();\n        this._register(this._codeEditor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(90 /* EditorOption.readOnly */)) {\n                if (this._codeEditor.getOption(90 /* EditorOption.readOnly */)) {\n                    // Hide replace part if editor becomes read only\n                    this._state.change({ isReplaceRevealed: false }, false);\n                }\n                this._updateButtons();\n            }\n            if (e.hasChanged(143 /* EditorOption.layoutInfo */)) {\n                this._tryUpdateWidgetWidth();\n            }\n            if (e.hasChanged(2 /* EditorOption.accessibilitySupport */)) {\n                this.updateAccessibilitySupport();\n            }\n            if (e.hasChanged(41 /* EditorOption.find */)) {\n                const supportLoop = this._codeEditor.getOption(41 /* EditorOption.find */).loop;\n                this._state.change({ loop: supportLoop }, false);\n                const addExtraSpaceOnTop = this._codeEditor.getOption(41 /* EditorOption.find */).addExtraSpaceOnTop;\n                if (addExtraSpaceOnTop && !this._viewZone) {\n                    this._viewZone = new FindWidgetViewZone(0);\n                    this._showViewZone();\n                }\n                if (!addExtraSpaceOnTop && this._viewZone) {\n                    this._removeViewZone();\n                }\n            }\n        }));\n        this.updateAccessibilitySupport();\n        this._register(this._codeEditor.onDidChangeCursorSelection(() => {\n            if (this._isVisible) {\n                this._updateToggleSelectionFindButton();\n            }\n        }));\n        this._register(this._codeEditor.onDidFocusEditorWidget(() => __awaiter(this, void 0, void 0, function* () {\n            if (this._isVisible) {\n                const globalBufferTerm = yield this._controller.getGlobalBufferTerm();\n                if (globalBufferTerm && globalBufferTerm !== this._state.searchString) {\n                    this._state.change({ searchString: globalBufferTerm }, false);\n                    this._findInput.select();\n                }\n            }\n        })));\n        this._findInputFocused = CONTEXT_FIND_INPUT_FOCUSED.bindTo(contextKeyService);\n        this._findFocusTracker = this._register(dom.trackFocus(this._findInput.inputBox.inputElement));\n        this._register(this._findFocusTracker.onDidFocus(() => {\n            this._findInputFocused.set(true);\n            this._updateSearchScope();\n        }));\n        this._register(this._findFocusTracker.onDidBlur(() => {\n            this._findInputFocused.set(false);\n        }));\n        this._replaceInputFocused = CONTEXT_REPLACE_INPUT_FOCUSED.bindTo(contextKeyService);\n        this._replaceFocusTracker = this._register(dom.trackFocus(this._replaceInput.inputBox.inputElement));\n        this._register(this._replaceFocusTracker.onDidFocus(() => {\n            this._replaceInputFocused.set(true);\n            this._updateSearchScope();\n        }));\n        this._register(this._replaceFocusTracker.onDidBlur(() => {\n            this._replaceInputFocused.set(false);\n        }));\n        this._codeEditor.addOverlayWidget(this);\n        if (this._codeEditor.getOption(41 /* EditorOption.find */).addExtraSpaceOnTop) {\n            this._viewZone = new FindWidgetViewZone(0); // Put it before the first line then users can scroll beyond the first line.\n        }\n        this._register(this._codeEditor.onDidChangeModel(() => {\n            if (!this._isVisible) {\n                return;\n            }\n            this._viewZoneId = undefined;\n        }));\n        this._register(this._codeEditor.onDidScrollChange((e) => {\n            if (e.scrollTopChanged) {\n                this._layoutViewZone();\n                return;\n            }\n            // for other scroll changes, layout the viewzone in next tick to avoid ruining current rendering.\n            setTimeout(() => {\n                this._layoutViewZone();\n            }, 0);\n        }));\n    }\n    // ----- IOverlayWidget API\n    getId() {\n        return FindWidget.ID;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        if (this._isVisible) {\n            return {\n                preference: 0 /* OverlayWidgetPositionPreference.TOP_RIGHT_CORNER */\n            };\n        }\n        return null;\n    }\n    // ----- React to state changes\n    _onStateChanged(e) {\n        if (e.searchString) {\n            try {\n                this._ignoreChangeEvent = true;\n                this._findInput.setValue(this._state.searchString);\n            }\n            finally {\n                this._ignoreChangeEvent = false;\n            }\n            this._updateButtons();\n        }\n        if (e.replaceString) {\n            this._replaceInput.inputBox.value = this._state.replaceString;\n        }\n        if (e.isRevealed) {\n            if (this._state.isRevealed) {\n                this._reveal();\n            }\n            else {\n                this._hide(true);\n            }\n        }\n        if (e.isReplaceRevealed) {\n            if (this._state.isReplaceRevealed) {\n                if (!this._codeEditor.getOption(90 /* EditorOption.readOnly */) && !this._isReplaceVisible) {\n                    this._isReplaceVisible = true;\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                    this._updateButtons();\n                    this._replaceInput.inputBox.layout();\n                }\n            }\n            else {\n                if (this._isReplaceVisible) {\n                    this._isReplaceVisible = false;\n                    this._updateButtons();\n                }\n            }\n        }\n        if ((e.isRevealed || e.isReplaceRevealed) && (this._state.isRevealed || this._state.isReplaceRevealed)) {\n            if (this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }\n        if (e.isRegex) {\n            this._findInput.setRegex(this._state.isRegex);\n        }\n        if (e.wholeWord) {\n            this._findInput.setWholeWords(this._state.wholeWord);\n        }\n        if (e.matchCase) {\n            this._findInput.setCaseSensitive(this._state.matchCase);\n        }\n        if (e.preserveCase) {\n            this._replaceInput.setPreserveCase(this._state.preserveCase);\n        }\n        if (e.searchScope) {\n            if (this._state.searchScope) {\n                this._toggleSelectionFind.checked = true;\n            }\n            else {\n                this._toggleSelectionFind.checked = false;\n            }\n            this._updateToggleSelectionFindButton();\n        }\n        if (e.searchString || e.matchesCount || e.matchesPosition) {\n            const showRedOutline = (this._state.searchString.length > 0 && this._state.matchesCount === 0);\n            this._domNode.classList.toggle('no-results', showRedOutline);\n            this._updateMatchesCount();\n            this._updateButtons();\n        }\n        if (e.searchString || e.currentMatch) {\n            this._layoutViewZone();\n        }\n        if (e.updateHistory) {\n            this._delayedUpdateHistory();\n        }\n        if (e.loop) {\n            this._updateButtons();\n        }\n    }\n    _delayedUpdateHistory() {\n        this._updateHistoryDelayer.trigger(this._updateHistory.bind(this)).then(undefined, onUnexpectedError);\n    }\n    _updateHistory() {\n        if (this._state.searchString) {\n            this._findInput.inputBox.addToHistory();\n        }\n        if (this._state.replaceString) {\n            this._replaceInput.inputBox.addToHistory();\n        }\n    }\n    _updateMatchesCount() {\n        this._matchesCount.style.minWidth = MAX_MATCHES_COUNT_WIDTH + 'px';\n        if (this._state.matchesCount >= MATCHES_LIMIT) {\n            this._matchesCount.title = NLS_MATCHES_COUNT_LIMIT_TITLE;\n        }\n        else {\n            this._matchesCount.title = '';\n        }\n        // remove previous content\n        if (this._matchesCount.firstChild) {\n            this._matchesCount.removeChild(this._matchesCount.firstChild);\n        }\n        let label;\n        if (this._state.matchesCount > 0) {\n            let matchesCount = String(this._state.matchesCount);\n            if (this._state.matchesCount >= MATCHES_LIMIT) {\n                matchesCount += '+';\n            }\n            let matchesPosition = String(this._state.matchesPosition);\n            if (matchesPosition === '0') {\n                matchesPosition = '?';\n            }\n            label = strings.format(NLS_MATCHES_LOCATION, matchesPosition, matchesCount);\n        }\n        else {\n            label = NLS_NO_RESULTS;\n        }\n        this._matchesCount.appendChild(document.createTextNode(label));\n        alertFn(this._getAriaLabel(label, this._state.currentMatch, this._state.searchString));\n        MAX_MATCHES_COUNT_WIDTH = Math.max(MAX_MATCHES_COUNT_WIDTH, this._matchesCount.clientWidth);\n    }\n    // ----- actions\n    _getAriaLabel(label, currentMatch, searchString) {\n        if (label === NLS_NO_RESULTS) {\n            return searchString === ''\n                ? nls.localize('ariaSearchNoResultEmpty', \"{0} found\", label)\n                : nls.localize('ariaSearchNoResult', \"{0} found for '{1}'\", label, searchString);\n        }\n        if (currentMatch) {\n            const ariaLabel = nls.localize('ariaSearchNoResultWithLineNum', \"{0} found for '{1}', at {2}\", label, searchString, currentMatch.startLineNumber + ':' + currentMatch.startColumn);\n            const model = this._codeEditor.getModel();\n            if (model && (currentMatch.startLineNumber <= model.getLineCount()) && (currentMatch.startLineNumber >= 1)) {\n                const lineContent = model.getLineContent(currentMatch.startLineNumber);\n                return `${lineContent}, ${ariaLabel}`;\n            }\n            return ariaLabel;\n        }\n        return nls.localize('ariaSearchNoResultWithLineNumNoCurrentMatch', \"{0} found for '{1}'\", label, searchString);\n    }\n    /**\n     * If 'selection find' is ON we should not disable the button (its function is to cancel 'selection find').\n     * If 'selection find' is OFF we enable the button only if there is a selection.\n     */\n    _updateToggleSelectionFindButton() {\n        const selection = this._codeEditor.getSelection();\n        const isSelection = selection ? (selection.startLineNumber !== selection.endLineNumber || selection.startColumn !== selection.endColumn) : false;\n        const isChecked = this._toggleSelectionFind.checked;\n        if (this._isVisible && (isChecked || isSelection)) {\n            this._toggleSelectionFind.enable();\n        }\n        else {\n            this._toggleSelectionFind.disable();\n        }\n    }\n    _updateButtons() {\n        this._findInput.setEnabled(this._isVisible);\n        this._replaceInput.setEnabled(this._isVisible && this._isReplaceVisible);\n        this._updateToggleSelectionFindButton();\n        this._closeBtn.setEnabled(this._isVisible);\n        const findInputIsNonEmpty = (this._state.searchString.length > 0);\n        const matchesCount = this._state.matchesCount ? true : false;\n        this._prevBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateBack());\n        this._nextBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateForward());\n        this._replaceBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n        this._replaceAllBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n        this._domNode.classList.toggle('replaceToggled', this._isReplaceVisible);\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\n        const canReplace = !this._codeEditor.getOption(90 /* EditorOption.readOnly */);\n        this._toggleReplaceBtn.setEnabled(this._isVisible && canReplace);\n    }\n    _reveal() {\n        this._revealTimeouts.forEach(e => {\n            clearTimeout(e);\n        });\n        this._revealTimeouts = [];\n        if (!this._isVisible) {\n            this._isVisible = true;\n            const selection = this._codeEditor.getSelection();\n            switch (this._codeEditor.getOption(41 /* EditorOption.find */).autoFindInSelection) {\n                case 'always':\n                    this._toggleSelectionFind.checked = true;\n                    break;\n                case 'never':\n                    this._toggleSelectionFind.checked = false;\n                    break;\n                case 'multiline': {\n                    const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n                    this._toggleSelectionFind.checked = isSelectionMultipleLine;\n                    break;\n                }\n                default:\n                    break;\n            }\n            this._tryUpdateWidgetWidth();\n            this._updateButtons();\n            this._revealTimeouts.push(setTimeout(() => {\n                this._domNode.classList.add('visible');\n                this._domNode.setAttribute('aria-hidden', 'false');\n            }, 0));\n            // validate query again as it's being dismissed when we hide the find widget.\n            this._revealTimeouts.push(setTimeout(() => {\n                this._findInput.validate();\n            }, 200));\n            this._codeEditor.layoutOverlayWidget(this);\n            let adjustEditorScrollTop = true;\n            if (this._codeEditor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection && selection) {\n                const domNode = this._codeEditor.getDomNode();\n                if (domNode) {\n                    const editorCoords = dom.getDomNodePagePosition(domNode);\n                    const startCoords = this._codeEditor.getScrolledVisiblePosition(selection.getStartPosition());\n                    const startLeft = editorCoords.left + (startCoords ? startCoords.left : 0);\n                    const startTop = startCoords ? startCoords.top : 0;\n                    if (this._viewZone && startTop < this._viewZone.heightInPx) {\n                        if (selection.endLineNumber > selection.startLineNumber) {\n                            adjustEditorScrollTop = false;\n                        }\n                        const leftOfFindWidget = dom.getTopLeftOffset(this._domNode).left;\n                        if (startLeft > leftOfFindWidget) {\n                            adjustEditorScrollTop = false;\n                        }\n                        const endCoords = this._codeEditor.getScrolledVisiblePosition(selection.getEndPosition());\n                        const endLeft = editorCoords.left + (endCoords ? endCoords.left : 0);\n                        if (endLeft > leftOfFindWidget) {\n                            adjustEditorScrollTop = false;\n                        }\n                    }\n                }\n            }\n            this._showViewZone(adjustEditorScrollTop);\n        }\n    }\n    _hide(focusTheEditor) {\n        this._revealTimeouts.forEach(e => {\n            clearTimeout(e);\n        });\n        this._revealTimeouts = [];\n        if (this._isVisible) {\n            this._isVisible = false;\n            this._updateButtons();\n            this._domNode.classList.remove('visible');\n            this._domNode.setAttribute('aria-hidden', 'true');\n            this._findInput.clearMessage();\n            if (focusTheEditor) {\n                this._codeEditor.focus();\n            }\n            this._codeEditor.layoutOverlayWidget(this);\n            this._removeViewZone();\n        }\n    }\n    _layoutViewZone(targetScrollTop) {\n        const addExtraSpaceOnTop = this._codeEditor.getOption(41 /* EditorOption.find */).addExtraSpaceOnTop;\n        if (!addExtraSpaceOnTop) {\n            this._removeViewZone();\n            return;\n        }\n        if (!this._isVisible) {\n            return;\n        }\n        const viewZone = this._viewZone;\n        if (this._viewZoneId !== undefined || !viewZone) {\n            return;\n        }\n        this._codeEditor.changeViewZones((accessor) => {\n            viewZone.heightInPx = this._getHeight();\n            this._viewZoneId = accessor.addZone(viewZone);\n            // scroll top adjust to make sure the editor doesn't scroll when adding viewzone at the beginning.\n            this._codeEditor.setScrollTop(targetScrollTop || this._codeEditor.getScrollTop() + viewZone.heightInPx);\n        });\n    }\n    _showViewZone(adjustScroll = true) {\n        if (!this._isVisible) {\n            return;\n        }\n        const addExtraSpaceOnTop = this._codeEditor.getOption(41 /* EditorOption.find */).addExtraSpaceOnTop;\n        if (!addExtraSpaceOnTop) {\n            return;\n        }\n        if (this._viewZone === undefined) {\n            this._viewZone = new FindWidgetViewZone(0);\n        }\n        const viewZone = this._viewZone;\n        this._codeEditor.changeViewZones((accessor) => {\n            if (this._viewZoneId !== undefined) {\n                // the view zone already exists, we need to update the height\n                const newHeight = this._getHeight();\n                if (newHeight === viewZone.heightInPx) {\n                    return;\n                }\n                const scrollAdjustment = newHeight - viewZone.heightInPx;\n                viewZone.heightInPx = newHeight;\n                accessor.layoutZone(this._viewZoneId);\n                if (adjustScroll) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n                }\n                return;\n            }\n            else {\n                let scrollAdjustment = this._getHeight();\n                // if the editor has top padding, factor that into the zone height\n                scrollAdjustment -= this._codeEditor.getOption(83 /* EditorOption.padding */).top;\n                if (scrollAdjustment <= 0) {\n                    return;\n                }\n                viewZone.heightInPx = scrollAdjustment;\n                this._viewZoneId = accessor.addZone(viewZone);\n                if (adjustScroll) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n                }\n            }\n        });\n    }\n    _removeViewZone() {\n        this._codeEditor.changeViewZones((accessor) => {\n            if (this._viewZoneId !== undefined) {\n                accessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n                if (this._viewZone) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() - this._viewZone.heightInPx);\n                    this._viewZone = undefined;\n                }\n            }\n        });\n    }\n    _tryUpdateWidgetWidth() {\n        if (!this._isVisible) {\n            return;\n        }\n        if (!dom.isInDOM(this._domNode)) {\n            // the widget is not in the DOM\n            return;\n        }\n        const layoutInfo = this._codeEditor.getLayoutInfo();\n        const editorContentWidth = layoutInfo.contentWidth;\n        if (editorContentWidth <= 0) {\n            // for example, diff view original editor\n            this._domNode.classList.add('hiddenEditor');\n            return;\n        }\n        else if (this._domNode.classList.contains('hiddenEditor')) {\n            this._domNode.classList.remove('hiddenEditor');\n        }\n        const editorWidth = layoutInfo.width;\n        const minimapWidth = layoutInfo.minimap.minimapWidth;\n        let collapsedFindWidget = false;\n        let reducedFindWidget = false;\n        let narrowFindWidget = false;\n        if (this._resized) {\n            const widgetWidth = dom.getTotalWidth(this._domNode);\n            if (widgetWidth > FIND_WIDGET_INITIAL_WIDTH) {\n                // as the widget is resized by users, we may need to change the max width of the widget as the editor width changes.\n                this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                return;\n            }\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth >= editorWidth) {\n            reducedFindWidget = true;\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth) {\n            narrowFindWidget = true;\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth + 50) {\n            collapsedFindWidget = true;\n        }\n        this._domNode.classList.toggle('collapsed-find-widget', collapsedFindWidget);\n        this._domNode.classList.toggle('narrow-find-widget', narrowFindWidget);\n        this._domNode.classList.toggle('reduced-find-widget', reducedFindWidget);\n        if (!narrowFindWidget && !collapsedFindWidget) {\n            // the minimal left offset of findwidget is 15px.\n            this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\n        }\n        this._findInput.layout({ collapsedFindWidget, narrowFindWidget, reducedFindWidget });\n        if (this._resized) {\n            const findInputWidth = this._findInput.inputBox.element.clientWidth;\n            if (findInputWidth > 0) {\n                this._replaceInput.width = findInputWidth;\n            }\n        }\n        else if (this._isReplaceVisible) {\n            this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n        }\n    }\n    _getHeight() {\n        let totalheight = 0;\n        // find input margin top\n        totalheight += 4;\n        // find input height\n        totalheight += this._findInput.inputBox.height + 2 /** input box border */;\n        if (this._isReplaceVisible) {\n            // replace input margin\n            totalheight += 4;\n            totalheight += this._replaceInput.inputBox.height + 2 /** input box border */;\n        }\n        // margin bottom\n        totalheight += 4;\n        return totalheight;\n    }\n    _tryUpdateHeight() {\n        const totalHeight = this._getHeight();\n        if (this._cachedHeight !== null && this._cachedHeight === totalHeight) {\n            return false;\n        }\n        this._cachedHeight = totalHeight;\n        this._domNode.style.height = `${totalHeight}px`;\n        return true;\n    }\n    // ----- Public\n    focusFindInput() {\n        this._findInput.select();\n        // Edge browser requires focus() in addition to select()\n        this._findInput.focus();\n    }\n    focusReplaceInput() {\n        this._replaceInput.select();\n        // Edge browser requires focus() in addition to select()\n        this._replaceInput.focus();\n    }\n    highlightFindOptions() {\n        this._findInput.highlightFindOptions();\n    }\n    _updateSearchScope() {\n        if (!this._codeEditor.hasModel()) {\n            return;\n        }\n        if (this._toggleSelectionFind.checked) {\n            const selections = this._codeEditor.getSelections();\n            selections.map(selection => {\n                if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                    selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                }\n                const currentMatch = this._state.currentMatch;\n                if (selection.startLineNumber !== selection.endLineNumber) {\n                    if (!Range.equalsRange(selection, currentMatch)) {\n                        return selection;\n                    }\n                }\n                return null;\n            }).filter(element => !!element);\n            if (selections.length) {\n                this._state.change({ searchScope: selections }, true);\n            }\n        }\n    }\n    _onFindInputMouseDown(e) {\n        // on linux, middle key does pasting.\n        if (e.middleButton) {\n            e.stopPropagation();\n        }\n    }\n    _onFindInputKeyDown(e) {\n        if (e.equals(ctrlKeyMod | 3 /* KeyCode.Enter */)) {\n            if (this._keybindingService.dispatchEvent(e, e.target)) {\n                e.preventDefault();\n                return;\n            }\n            else {\n                this._findInput.inputBox.insertAtCursor('\\n');\n                e.preventDefault();\n                return;\n            }\n        }\n        if (e.equals(2 /* KeyCode.Tab */)) {\n            if (this._isReplaceVisible) {\n                this._replaceInput.focus();\n            }\n            else {\n                this._findInput.focusOnCaseSensitive();\n            }\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */)) {\n            this._codeEditor.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(16 /* KeyCode.UpArrow */)) {\n            return stopPropagationForMultiLineUpwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n        }\n        if (e.equals(18 /* KeyCode.DownArrow */)) {\n            return stopPropagationForMultiLineDownwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n        }\n    }\n    _onReplaceInputKeyDown(e) {\n        if (e.equals(ctrlKeyMod | 3 /* KeyCode.Enter */)) {\n            if (this._keybindingService.dispatchEvent(e, e.target)) {\n                e.preventDefault();\n                return;\n            }\n            else {\n                if (platform.isWindows && platform.isNative && !this._ctrlEnterReplaceAllWarningPrompted) {\n                    // this is the first time when users press Ctrl + Enter to replace all\n                    this._notificationService.info(nls.localize('ctrlEnter.keybindingChanged', 'Ctrl+Enter now inserts line break instead of replacing all. You can modify the keybinding for editor.action.replaceAll to override this behavior.'));\n                    this._ctrlEnterReplaceAllWarningPrompted = true;\n                    this._storageService.store(ctrlEnterReplaceAllWarningPromptedKey, true, 0 /* StorageScope.PROFILE */, 0 /* StorageTarget.USER */);\n                }\n                this._replaceInput.inputBox.insertAtCursor('\\n');\n                e.preventDefault();\n                return;\n            }\n        }\n        if (e.equals(2 /* KeyCode.Tab */)) {\n            this._findInput.focusOnCaseSensitive();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n            this._findInput.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */)) {\n            this._codeEditor.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(16 /* KeyCode.UpArrow */)) {\n            return stopPropagationForMultiLineUpwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n        }\n        if (e.equals(18 /* KeyCode.DownArrow */)) {\n            return stopPropagationForMultiLineDownwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n        }\n    }\n    // ----- sash\n    getVerticalSashLeft(_sash) {\n        return 0;\n    }\n    // ----- initialization\n    _keybindingLabelFor(actionId) {\n        const kb = this._keybindingService.lookupKeybinding(actionId);\n        if (!kb) {\n            return '';\n        }\n        return ` (${kb.getLabel()})`;\n    }\n    _buildDomNode() {\n        const flexibleHeight = true;\n        const flexibleWidth = true;\n        // Find input\n        this._findInput = this._register(new ContextScopedFindInput(null, this._contextViewProvider, {\n            width: FIND_INPUT_AREA_WIDTH,\n            label: NLS_FIND_INPUT_LABEL,\n            placeholder: NLS_FIND_INPUT_PLACEHOLDER,\n            appendCaseSensitiveLabel: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),\n            appendWholeWordsLabel: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),\n            appendRegexLabel: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),\n            validation: (value) => {\n                if (value.length === 0 || !this._findInput.getRegex()) {\n                    return null;\n                }\n                try {\n                    // use `g` and `u` which are also used by the TextModel search\n                    new RegExp(value, 'gu');\n                    return null;\n                }\n                catch (e) {\n                    return { content: e.message };\n                }\n            },\n            flexibleHeight,\n            flexibleWidth,\n            flexibleMaxHeight: 118,\n            showCommonFindToggles: true,\n            showHistoryHint: () => showHistoryKeybindingHint(this._keybindingService),\n            inputBoxStyles: defaultInputBoxStyles,\n            toggleStyles: defaultToggleStyles\n        }, this._contextKeyService));\n        this._findInput.setRegex(!!this._state.isRegex);\n        this._findInput.setCaseSensitive(!!this._state.matchCase);\n        this._findInput.setWholeWords(!!this._state.wholeWord);\n        this._register(this._findInput.onKeyDown((e) => this._onFindInputKeyDown(e)));\n        this._register(this._findInput.inputBox.onDidChange(() => {\n            if (this._ignoreChangeEvent) {\n                return;\n            }\n            this._state.change({ searchString: this._findInput.getValue() }, true);\n        }));\n        this._register(this._findInput.onDidOptionChange(() => {\n            this._state.change({\n                isRegex: this._findInput.getRegex(),\n                wholeWord: this._findInput.getWholeWords(),\n                matchCase: this._findInput.getCaseSensitive()\n            }, true);\n        }));\n        this._register(this._findInput.onCaseSensitiveKeyDown((e) => {\n            if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n                if (this._isReplaceVisible) {\n                    this._replaceInput.focus();\n                    e.preventDefault();\n                }\n            }\n        }));\n        this._register(this._findInput.onRegexKeyDown((e) => {\n            if (e.equals(2 /* KeyCode.Tab */)) {\n                if (this._isReplaceVisible) {\n                    this._replaceInput.focusOnPreserve();\n                    e.preventDefault();\n                }\n            }\n        }));\n        this._register(this._findInput.inputBox.onDidHeightChange((e) => {\n            if (this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }));\n        if (platform.isLinux) {\n            this._register(this._findInput.onMouseDown((e) => this._onFindInputMouseDown(e)));\n        }\n        this._matchesCount = document.createElement('div');\n        this._matchesCount.className = 'matchesCount';\n        this._updateMatchesCount();\n        // Previous button\n        this._prevBtn = this._register(new SimpleButton({\n            label: NLS_PREVIOUS_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.PreviousMatchFindAction),\n            icon: findPreviousMatchIcon,\n            onTrigger: () => {\n                assertIsDefined(this._codeEditor.getAction(FIND_IDS.PreviousMatchFindAction)).run().then(undefined, onUnexpectedError);\n            }\n        }));\n        // Next button\n        this._nextBtn = this._register(new SimpleButton({\n            label: NLS_NEXT_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.NextMatchFindAction),\n            icon: findNextMatchIcon,\n            onTrigger: () => {\n                assertIsDefined(this._codeEditor.getAction(FIND_IDS.NextMatchFindAction)).run().then(undefined, onUnexpectedError);\n            }\n        }));\n        const findPart = document.createElement('div');\n        findPart.className = 'find-part';\n        findPart.appendChild(this._findInput.domNode);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'find-actions';\n        findPart.appendChild(actionsContainer);\n        actionsContainer.appendChild(this._matchesCount);\n        actionsContainer.appendChild(this._prevBtn.domNode);\n        actionsContainer.appendChild(this._nextBtn.domNode);\n        // Toggle selection button\n        this._toggleSelectionFind = this._register(new Toggle({\n            icon: findSelectionIcon,\n            title: NLS_TOGGLE_SELECTION_FIND_TITLE + this._keybindingLabelFor(FIND_IDS.ToggleSearchScopeCommand),\n            isChecked: false,\n            inputActiveOptionBackground: asCssVariable(inputActiveOptionBackground),\n            inputActiveOptionBorder: asCssVariable(inputActiveOptionBorder),\n            inputActiveOptionForeground: asCssVariable(inputActiveOptionForeground),\n        }));\n        this._register(this._toggleSelectionFind.onChange(() => {\n            if (this._toggleSelectionFind.checked) {\n                if (this._codeEditor.hasModel()) {\n                    const selections = this._codeEditor.getSelections();\n                    selections.map(selection => {\n                        if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                            selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                        }\n                        if (!selection.isEmpty()) {\n                            return selection;\n                        }\n                        return null;\n                    }).filter(element => !!element);\n                    if (selections.length) {\n                        this._state.change({ searchScope: selections }, true);\n                    }\n                }\n            }\n            else {\n                this._state.change({ searchScope: null }, true);\n            }\n        }));\n        actionsContainer.appendChild(this._toggleSelectionFind.domNode);\n        // Close button\n        this._closeBtn = this._register(new SimpleButton({\n            label: NLS_CLOSE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.CloseFindWidgetCommand),\n            icon: widgetClose,\n            onTrigger: () => {\n                this._state.change({ isRevealed: false, searchScope: null }, false);\n            },\n            onKeyDown: (e) => {\n                if (e.equals(2 /* KeyCode.Tab */)) {\n                    if (this._isReplaceVisible) {\n                        if (this._replaceBtn.isEnabled()) {\n                            this._replaceBtn.focus();\n                        }\n                        else {\n                            this._codeEditor.focus();\n                        }\n                        e.preventDefault();\n                    }\n                }\n            }\n        }));\n        // Replace input\n        this._replaceInput = this._register(new ContextScopedReplaceInput(null, undefined, {\n            label: NLS_REPLACE_INPUT_LABEL,\n            placeholder: NLS_REPLACE_INPUT_PLACEHOLDER,\n            appendPreserveCaseLabel: this._keybindingLabelFor(FIND_IDS.TogglePreserveCaseCommand),\n            history: [],\n            flexibleHeight,\n            flexibleWidth,\n            flexibleMaxHeight: 118,\n            showHistoryHint: () => showHistoryKeybindingHint(this._keybindingService),\n            inputBoxStyles: defaultInputBoxStyles,\n            toggleStyles: defaultToggleStyles\n        }, this._contextKeyService, true));\n        this._replaceInput.setPreserveCase(!!this._state.preserveCase);\n        this._register(this._replaceInput.onKeyDown((e) => this._onReplaceInputKeyDown(e)));\n        this._register(this._replaceInput.inputBox.onDidChange(() => {\n            this._state.change({ replaceString: this._replaceInput.inputBox.value }, false);\n        }));\n        this._register(this._replaceInput.inputBox.onDidHeightChange((e) => {\n            if (this._isReplaceVisible && this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }));\n        this._register(this._replaceInput.onDidOptionChange(() => {\n            this._state.change({\n                preserveCase: this._replaceInput.getPreserveCase()\n            }, true);\n        }));\n        this._register(this._replaceInput.onPreserveCaseKeyDown((e) => {\n            if (e.equals(2 /* KeyCode.Tab */)) {\n                if (this._prevBtn.isEnabled()) {\n                    this._prevBtn.focus();\n                }\n                else if (this._nextBtn.isEnabled()) {\n                    this._nextBtn.focus();\n                }\n                else if (this._toggleSelectionFind.enabled) {\n                    this._toggleSelectionFind.focus();\n                }\n                else if (this._closeBtn.isEnabled()) {\n                    this._closeBtn.focus();\n                }\n                e.preventDefault();\n            }\n        }));\n        // Replace one button\n        this._replaceBtn = this._register(new SimpleButton({\n            label: NLS_REPLACE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceOneAction),\n            icon: findReplaceIcon,\n            onTrigger: () => {\n                this._controller.replace();\n            },\n            onKeyDown: (e) => {\n                if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n                    this._closeBtn.focus();\n                    e.preventDefault();\n                }\n            }\n        }));\n        // Replace all button\n        this._replaceAllBtn = this._register(new SimpleButton({\n            label: NLS_REPLACE_ALL_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceAllAction),\n            icon: findReplaceAllIcon,\n            onTrigger: () => {\n                this._controller.replaceAll();\n            }\n        }));\n        const replacePart = document.createElement('div');\n        replacePart.className = 'replace-part';\n        replacePart.appendChild(this._replaceInput.domNode);\n        const replaceActionsContainer = document.createElement('div');\n        replaceActionsContainer.className = 'replace-actions';\n        replacePart.appendChild(replaceActionsContainer);\n        replaceActionsContainer.appendChild(this._replaceBtn.domNode);\n        replaceActionsContainer.appendChild(this._replaceAllBtn.domNode);\n        // Toggle replace button\n        this._toggleReplaceBtn = this._register(new SimpleButton({\n            label: NLS_TOGGLE_REPLACE_MODE_BTN_LABEL,\n            className: 'codicon toggle left',\n            onTrigger: () => {\n                this._state.change({ isReplaceRevealed: !this._isReplaceVisible }, false);\n                if (this._isReplaceVisible) {\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                    this._replaceInput.inputBox.layout();\n                }\n                this._showViewZone();\n            }\n        }));\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\n        // Widget\n        this._domNode = document.createElement('div');\n        this._domNode.className = 'editor-widget find-widget';\n        this._domNode.setAttribute('aria-hidden', 'true');\n        this._domNode.ariaLabel = NLS_FIND_DIALOG_LABEL;\n        this._domNode.role = 'dialog';\n        // We need to set this explicitly, otherwise on IE11, the width inheritence of flex doesn't work.\n        this._domNode.style.width = `${FIND_WIDGET_INITIAL_WIDTH}px`;\n        this._domNode.appendChild(this._toggleReplaceBtn.domNode);\n        this._domNode.appendChild(findPart);\n        this._domNode.appendChild(this._closeBtn.domNode);\n        this._domNode.appendChild(replacePart);\n        this._resizeSash = new Sash(this._domNode, this, { orientation: 0 /* Orientation.VERTICAL */, size: 2 });\n        this._resized = false;\n        let originalWidth = FIND_WIDGET_INITIAL_WIDTH;\n        this._register(this._resizeSash.onDidStart(() => {\n            originalWidth = dom.getTotalWidth(this._domNode);\n        }));\n        this._register(this._resizeSash.onDidChange((evt) => {\n            this._resized = true;\n            const width = originalWidth + evt.startX - evt.currentX;\n            if (width < FIND_WIDGET_INITIAL_WIDTH) {\n                // narrow down the find widget should be handled by CSS.\n                return;\n            }\n            const maxWidth = parseFloat(dom.getComputedStyle(this._domNode).maxWidth) || 0;\n            if (width > maxWidth) {\n                return;\n            }\n            this._domNode.style.width = `${width}px`;\n            if (this._isReplaceVisible) {\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n            }\n            this._findInput.inputBox.layout();\n            this._tryUpdateHeight();\n        }));\n        this._register(this._resizeSash.onDidReset(() => {\n            // users double click on the sash\n            const currentWidth = dom.getTotalWidth(this._domNode);\n            if (currentWidth < FIND_WIDGET_INITIAL_WIDTH) {\n                // The editor is narrow and the width of the find widget is controlled fully by CSS.\n                return;\n            }\n            let width = FIND_WIDGET_INITIAL_WIDTH;\n            if (!this._resized || currentWidth === FIND_WIDGET_INITIAL_WIDTH) {\n                // 1. never resized before, double click should maximizes it\n                // 2. users resized it already but its width is the same as default\n                const layoutInfo = this._codeEditor.getLayoutInfo();\n                width = layoutInfo.width - 28 - layoutInfo.minimap.minimapWidth - 15;\n                this._resized = true;\n            }\n            else {\n                /**\n                 * no op, the find widget should be shrinked to its default size.\n                 */\n            }\n            this._domNode.style.width = `${width}px`;\n            if (this._isReplaceVisible) {\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n            }\n            this._findInput.inputBox.layout();\n        }));\n    }\n    updateAccessibilitySupport() {\n        const value = this._codeEditor.getOption(2 /* EditorOption.accessibilitySupport */);\n        this._findInput.setFocusInputOnOptionClick(value !== 2 /* AccessibilitySupport.Enabled */);\n    }\n}\nFindWidget.ID = 'editor.contrib.findWidget';\nexport class SimpleButton extends Widget {\n    constructor(opts) {\n        super();\n        this._opts = opts;\n        let className = 'button';\n        if (this._opts.className) {\n            className = className + ' ' + this._opts.className;\n        }\n        if (this._opts.icon) {\n            className = className + ' ' + ThemeIcon.asClassName(this._opts.icon);\n        }\n        this._domNode = document.createElement('div');\n        this._domNode.title = this._opts.label;\n        this._domNode.tabIndex = 0;\n        this._domNode.className = className;\n        this._domNode.setAttribute('role', 'button');\n        this._domNode.setAttribute('aria-label', this._opts.label);\n        this.onclick(this._domNode, (e) => {\n            this._opts.onTrigger();\n            e.preventDefault();\n        });\n        this.onkeydown(this._domNode, (e) => {\n            var _a, _b;\n            if (e.equals(10 /* KeyCode.Space */) || e.equals(3 /* KeyCode.Enter */)) {\n                this._opts.onTrigger();\n                e.preventDefault();\n                return;\n            }\n            (_b = (_a = this._opts).onKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n        });\n    }\n    get domNode() {\n        return this._domNode;\n    }\n    isEnabled() {\n        return (this._domNode.tabIndex >= 0);\n    }\n    focus() {\n        this._domNode.focus();\n    }\n    setEnabled(enabled) {\n        this._domNode.classList.toggle('disabled', !enabled);\n        this._domNode.setAttribute('aria-disabled', String(!enabled));\n        this._domNode.tabIndex = enabled ? 0 : -1;\n    }\n    setExpanded(expanded) {\n        this._domNode.setAttribute('aria-expanded', String(!!expanded));\n        if (expanded) {\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findExpandedIcon));\n        }\n        else {\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findExpandedIcon));\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n        }\n    }\n}\n// theming\nregisterThemingParticipant((theme, collector) => {\n    const addBackgroundColorRule = (selector, color) => {\n        if (color) {\n            collector.addRule(`.monaco-editor ${selector} { background-color: ${color}; }`);\n        }\n    };\n    addBackgroundColorRule('.findMatch', theme.getColor(editorFindMatchHighlight));\n    addBackgroundColorRule('.currentFindMatch', theme.getColor(editorFindMatch));\n    addBackgroundColorRule('.findScope', theme.getColor(editorFindRangeHighlight));\n    const widgetBackground = theme.getColor(editorWidgetBackground);\n    addBackgroundColorRule('.find-widget', widgetBackground);\n    const widgetShadowColor = theme.getColor(widgetShadow);\n    if (widgetShadowColor) {\n        collector.addRule(`.monaco-editor .find-widget { box-shadow: 0 0 8px 2px ${widgetShadowColor}; }`);\n    }\n    const widgetBorderColor = theme.getColor(widgetBorder);\n    if (widgetBorderColor) {\n        collector.addRule(`.monaco-editor .find-widget { border-left: 1px solid ${widgetBorderColor}; border-right: 1px solid ${widgetBorderColor}; border-bottom: 1px solid ${widgetBorderColor}; }`);\n    }\n    const findMatchHighlightBorder = theme.getColor(editorFindMatchHighlightBorder);\n    if (findMatchHighlightBorder) {\n        collector.addRule(`.monaco-editor .findMatch { border: 1px ${isHighContrast(theme.type) ? 'dotted' : 'solid'} ${findMatchHighlightBorder}; box-sizing: border-box; }`);\n    }\n    const findMatchBorder = theme.getColor(editorFindMatchBorder);\n    if (findMatchBorder) {\n        collector.addRule(`.monaco-editor .currentFindMatch { border: 2px solid ${findMatchBorder}; padding: 1px; box-sizing: border-box; }`);\n    }\n    const findRangeHighlightBorder = theme.getColor(editorFindRangeHighlightBorder);\n    if (findRangeHighlightBorder) {\n        collector.addRule(`.monaco-editor .findScope { border: 1px ${isHighContrast(theme.type) ? 'dashed' : 'solid'} ${findRangeHighlightBorder}; }`);\n    }\n    const hcBorder = theme.getColor(contrastBorder);\n    if (hcBorder) {\n        collector.addRule(`.monaco-editor .find-widget { border: 1px solid ${hcBorder}; }`);\n    }\n    const foreground = theme.getColor(editorWidgetForeground);\n    if (foreground) {\n        collector.addRule(`.monaco-editor .find-widget { color: ${foreground}; }`);\n    }\n    const error = theme.getColor(errorForeground);\n    if (error) {\n        collector.addRule(`.monaco-editor .find-widget.no-results .matchesCount { color: ${error}; }`);\n    }\n    const resizeBorderBackground = theme.getColor(editorWidgetResizeBorder);\n    if (resizeBorderBackground) {\n        collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${resizeBorderBackground}; }`);\n    }\n    else {\n        const border = theme.getColor(editorWidgetBorder);\n        if (border) {\n            collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${border}; }`);\n        }\n    }\n    // Action bars\n    const toolbarHoverBackgroundColor = theme.getColor(toolbarHoverBackground);\n    if (toolbarHoverBackgroundColor) {\n        collector.addRule(`\n\t\t.monaco-editor .find-widget .button:not(.disabled):hover,\n\t\t.monaco-editor .find-widget .codicon-find-selection:hover {\n\t\t\tbackground-color: ${toolbarHoverBackgroundColor} !important;\n\t\t}\n\t`);\n    }\n    // This rule is used to override the outline color for synthetic-focus find input.\n    const focusOutline = theme.getColor(focusBorder);\n    if (focusOutline) {\n        collector.addRule(`.monaco-editor .find-widget .monaco-inputbox.synthetic-focus { outline-color: ${focusOutline}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar CommonFindController_1;\nimport { Delayer } from '../../../../base/common/async.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { EditorAction, EditorCommand, MultiEditorAction, registerEditorAction, registerEditorCommand, registerEditorContribution, registerMultiEditorAction } from '../../../browser/editorExtensions.js';\nimport { overviewRulerRangeHighlight } from '../../../common/core/editorColorRegistry.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { OverviewRulerLane } from '../../../common/model.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_FIND_WIDGET_VISIBLE, CONTEXT_REPLACE_INPUT_FOCUSED, FindModelBoundToEditorModel, FIND_IDS, ToggleCaseSensitiveKeybinding, TogglePreserveCaseKeybinding, ToggleRegexKeybinding, ToggleSearchScopeKeybinding, ToggleWholeWordKeybinding } from './findModel.js';\nimport { FindOptionsWidget } from './findOptionsWidget.js';\nimport { FindReplaceState } from './findState.js';\nimport { FindWidget } from './findWidget.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextViewService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { IThemeService, themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nconst SEARCH_STRING_MAX_LENGTH = 524288;\nexport function getSelectionSearchString(editor, seedSearchStringFromSelection = 'single', seedSearchStringFromNonEmptySelection = false) {\n    if (!editor.hasModel()) {\n        return null;\n    }\n    const selection = editor.getSelection();\n    // if selection spans multiple lines, default search string to empty\n    if ((seedSearchStringFromSelection === 'single' && selection.startLineNumber === selection.endLineNumber)\n        || seedSearchStringFromSelection === 'multiple') {\n        if (selection.isEmpty()) {\n            const wordAtPosition = editor.getConfiguredWordAtPosition(selection.getStartPosition());\n            if (wordAtPosition && (false === seedSearchStringFromNonEmptySelection)) {\n                return wordAtPosition.word;\n            }\n        }\n        else {\n            if (editor.getModel().getValueLengthInRange(selection) < SEARCH_STRING_MAX_LENGTH) {\n                return editor.getModel().getValueInRange(selection);\n            }\n        }\n    }\n    return null;\n}\nlet CommonFindController = CommonFindController_1 = class CommonFindController extends Disposable {\n    get editor() {\n        return this._editor;\n    }\n    static get(editor) {\n        return editor.getContribution(CommonFindController_1.ID);\n    }\n    constructor(editor, contextKeyService, storageService, clipboardService, notificationService) {\n        super();\n        this._editor = editor;\n        this._findWidgetVisible = CONTEXT_FIND_WIDGET_VISIBLE.bindTo(contextKeyService);\n        this._contextKeyService = contextKeyService;\n        this._storageService = storageService;\n        this._clipboardService = clipboardService;\n        this._notificationService = notificationService;\n        this._updateHistoryDelayer = new Delayer(500);\n        this._state = this._register(new FindReplaceState());\n        this.loadQueryState();\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this._model = null;\n        this._register(this._editor.onDidChangeModel(() => {\n            const shouldRestartFind = (this._editor.getModel() && this._state.isRevealed);\n            this.disposeModel();\n            this._state.change({\n                searchScope: null,\n                matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* StorageScope.WORKSPACE */, false),\n                wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* StorageScope.WORKSPACE */, false),\n                isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* StorageScope.WORKSPACE */, false),\n                preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* StorageScope.WORKSPACE */, false)\n            }, false);\n            if (shouldRestartFind) {\n                this._start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: 'none',\n                    seedSearchStringFromNonEmptySelection: false,\n                    seedSearchStringFromGlobalClipboard: false,\n                    shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                    shouldAnimate: false,\n                    updateSearchScope: false,\n                    loop: this._editor.getOption(41 /* EditorOption.find */).loop\n                });\n            }\n        }));\n    }\n    dispose() {\n        this.disposeModel();\n        super.dispose();\n    }\n    disposeModel() {\n        if (this._model) {\n            this._model.dispose();\n            this._model = null;\n        }\n    }\n    _onStateChanged(e) {\n        this.saveQueryState(e);\n        if (e.isRevealed) {\n            if (this._state.isRevealed) {\n                this._findWidgetVisible.set(true);\n            }\n            else {\n                this._findWidgetVisible.reset();\n                this.disposeModel();\n            }\n        }\n        if (e.searchString) {\n            this.setGlobalBufferTerm(this._state.searchString);\n        }\n    }\n    saveQueryState(e) {\n        if (e.isRegex) {\n            this._storageService.store('editor.isRegex', this._state.actualIsRegex, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        if (e.wholeWord) {\n            this._storageService.store('editor.wholeWord', this._state.actualWholeWord, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        if (e.matchCase) {\n            this._storageService.store('editor.matchCase', this._state.actualMatchCase, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        if (e.preserveCase) {\n            this._storageService.store('editor.preserveCase', this._state.actualPreserveCase, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n    }\n    loadQueryState() {\n        this._state.change({\n            matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* StorageScope.WORKSPACE */, this._state.matchCase),\n            wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* StorageScope.WORKSPACE */, this._state.wholeWord),\n            isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* StorageScope.WORKSPACE */, this._state.isRegex),\n            preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* StorageScope.WORKSPACE */, this._state.preserveCase)\n        }, false);\n    }\n    isFindInputFocused() {\n        return !!CONTEXT_FIND_INPUT_FOCUSED.getValue(this._contextKeyService);\n    }\n    getState() {\n        return this._state;\n    }\n    closeFindWidget() {\n        this._state.change({\n            isRevealed: false,\n            searchScope: null\n        }, false);\n        this._editor.focus();\n    }\n    toggleCaseSensitive() {\n        this._state.change({ matchCase: !this._state.matchCase }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleWholeWords() {\n        this._state.change({ wholeWord: !this._state.wholeWord }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleRegex() {\n        this._state.change({ isRegex: !this._state.isRegex }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    togglePreserveCase() {\n        this._state.change({ preserveCase: !this._state.preserveCase }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleSearchScope() {\n        if (this._state.searchScope) {\n            this._state.change({ searchScope: null }, true);\n        }\n        else {\n            if (this._editor.hasModel()) {\n                const selections = this._editor.getSelections();\n                selections.map(selection => {\n                    if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                        selection = selection.setEndPosition(selection.endLineNumber - 1, this._editor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                    }\n                    if (!selection.isEmpty()) {\n                        return selection;\n                    }\n                    return null;\n                }).filter(element => !!element);\n                if (selections.length) {\n                    this._state.change({ searchScope: selections }, true);\n                }\n            }\n        }\n    }\n    setSearchString(searchString) {\n        if (this._state.isRegex) {\n            searchString = strings.escapeRegExpCharacters(searchString);\n        }\n        this._state.change({ searchString: searchString }, false);\n    }\n    highlightFindOptions(ignoreWhenVisible = false) {\n        // overwritten in subclass\n    }\n    _start(opts, newState) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.disposeModel();\n            if (!this._editor.hasModel()) {\n                // cannot do anything with an editor that doesn't have a model...\n                return;\n            }\n            const stateChanges = Object.assign(Object.assign({}, newState), { isRevealed: true });\n            if (opts.seedSearchStringFromSelection === 'single') {\n                const selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection, opts.seedSearchStringFromNonEmptySelection);\n                if (selectionSearchString) {\n                    if (this._state.isRegex) {\n                        stateChanges.searchString = strings.escapeRegExpCharacters(selectionSearchString);\n                    }\n                    else {\n                        stateChanges.searchString = selectionSearchString;\n                    }\n                }\n            }\n            else if (opts.seedSearchStringFromSelection === 'multiple' && !opts.updateSearchScope) {\n                const selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection);\n                if (selectionSearchString) {\n                    stateChanges.searchString = selectionSearchString;\n                }\n            }\n            if (!stateChanges.searchString && opts.seedSearchStringFromGlobalClipboard) {\n                const selectionSearchString = yield this.getGlobalBufferTerm();\n                if (!this._editor.hasModel()) {\n                    // the editor has lost its model in the meantime\n                    return;\n                }\n                if (selectionSearchString) {\n                    stateChanges.searchString = selectionSearchString;\n                }\n            }\n            // Overwrite isReplaceRevealed\n            if (opts.forceRevealReplace || stateChanges.isReplaceRevealed) {\n                stateChanges.isReplaceRevealed = true;\n            }\n            else if (!this._findWidgetVisible.get()) {\n                stateChanges.isReplaceRevealed = false;\n            }\n            if (opts.updateSearchScope) {\n                const currentSelections = this._editor.getSelections();\n                if (currentSelections.some(selection => !selection.isEmpty())) {\n                    stateChanges.searchScope = currentSelections;\n                }\n            }\n            stateChanges.loop = opts.loop;\n            this._state.change(stateChanges, false);\n            if (!this._model) {\n                this._model = new FindModelBoundToEditorModel(this._editor, this._state);\n            }\n        });\n    }\n    start(opts, newState) {\n        return this._start(opts, newState);\n    }\n    moveToNextMatch() {\n        if (this._model) {\n            this._model.moveToNextMatch();\n            return true;\n        }\n        return false;\n    }\n    moveToPrevMatch() {\n        if (this._model) {\n            this._model.moveToPrevMatch();\n            return true;\n        }\n        return false;\n    }\n    goToMatch(index) {\n        if (this._model) {\n            this._model.moveToMatch(index);\n            return true;\n        }\n        return false;\n    }\n    replace() {\n        if (this._model) {\n            this._model.replace();\n            return true;\n        }\n        return false;\n    }\n    replaceAll() {\n        var _a;\n        if (this._model) {\n            if ((_a = this._editor.getModel()) === null || _a === void 0 ? void 0 : _a.isTooLargeForHeapOperation()) {\n                this._notificationService.warn(nls.localize('too.large.for.replaceall', \"The file is too large to perform a replace all operation.\"));\n                return false;\n            }\n            this._model.replaceAll();\n            return true;\n        }\n        return false;\n    }\n    selectAllMatches() {\n        if (this._model) {\n            this._model.selectAllMatches();\n            this._editor.focus();\n            return true;\n        }\n        return false;\n    }\n    getGlobalBufferTerm() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._editor.getOption(41 /* EditorOption.find */).globalFindClipboard\n                && this._editor.hasModel()\n                && !this._editor.getModel().isTooLargeForSyncing()) {\n                return this._clipboardService.readFindText();\n            }\n            return '';\n        });\n    }\n    setGlobalBufferTerm(text) {\n        if (this._editor.getOption(41 /* EditorOption.find */).globalFindClipboard\n            && this._editor.hasModel()\n            && !this._editor.getModel().isTooLargeForSyncing()) {\n            // intentionally not awaited\n            this._clipboardService.writeFindText(text);\n        }\n    }\n};\nCommonFindController.ID = 'editor.contrib.findController';\nCommonFindController = CommonFindController_1 = __decorate([\n    __param(1, IContextKeyService),\n    __param(2, IStorageService),\n    __param(3, IClipboardService),\n    __param(4, INotificationService)\n], CommonFindController);\nexport { CommonFindController };\nlet FindController = class FindController extends CommonFindController {\n    constructor(editor, _contextViewService, _contextKeyService, _keybindingService, _themeService, notificationService, _storageService, clipboardService) {\n        super(editor, _contextKeyService, _storageService, clipboardService, notificationService);\n        this._contextViewService = _contextViewService;\n        this._keybindingService = _keybindingService;\n        this._themeService = _themeService;\n        this._widget = null;\n        this._findOptionsWidget = null;\n    }\n    _start(opts, newState) {\n        const _super = Object.create(null, {\n            _start: { get: () => super._start }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._widget) {\n                this._createFindWidget();\n            }\n            const selection = this._editor.getSelection();\n            let updateSearchScope = false;\n            switch (this._editor.getOption(41 /* EditorOption.find */).autoFindInSelection) {\n                case 'always':\n                    updateSearchScope = true;\n                    break;\n                case 'never':\n                    updateSearchScope = false;\n                    break;\n                case 'multiline': {\n                    const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n                    updateSearchScope = isSelectionMultipleLine;\n                    break;\n                }\n                default:\n                    break;\n            }\n            opts.updateSearchScope = opts.updateSearchScope || updateSearchScope;\n            yield _super._start.call(this, opts, newState);\n            if (this._widget) {\n                if (opts.shouldFocus === 2 /* FindStartFocusAction.FocusReplaceInput */) {\n                    this._widget.focusReplaceInput();\n                }\n                else if (opts.shouldFocus === 1 /* FindStartFocusAction.FocusFindInput */) {\n                    this._widget.focusFindInput();\n                }\n            }\n        });\n    }\n    highlightFindOptions(ignoreWhenVisible = false) {\n        if (!this._widget) {\n            this._createFindWidget();\n        }\n        if (this._state.isRevealed && !ignoreWhenVisible) {\n            this._widget.highlightFindOptions();\n        }\n        else {\n            this._findOptionsWidget.highlightFindOptions();\n        }\n    }\n    _createFindWidget() {\n        this._widget = this._register(new FindWidget(this._editor, this, this._state, this._contextViewService, this._keybindingService, this._contextKeyService, this._themeService, this._storageService, this._notificationService));\n        this._findOptionsWidget = this._register(new FindOptionsWidget(this._editor, this._state, this._keybindingService));\n    }\n};\nFindController = __decorate([\n    __param(1, IContextViewService),\n    __param(2, IContextKeyService),\n    __param(3, IKeybindingService),\n    __param(4, IThemeService),\n    __param(5, INotificationService),\n    __param(6, IStorageService),\n    __param(7, IClipboardService)\n], FindController);\nexport { FindController };\nexport const StartFindAction = registerMultiEditorAction(new MultiEditorAction({\n    id: FIND_IDS.StartFindAction,\n    label: nls.localize('startFindAction', \"Find\"),\n    alias: 'Find',\n    precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n    kbOpts: {\n        kbExpr: null,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 36 /* KeyCode.KeyF */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n    },\n    menuOpts: {\n        menuId: MenuId.MenubarEditMenu,\n        group: '3_find',\n        title: nls.localize({ key: 'miFind', comment: ['&& denotes a mnemonic'] }, \"&&Find\"),\n        order: 1\n    }\n}));\nStartFindAction.addImplementation(0, (accessor, editor, args) => {\n    const controller = CommonFindController.get(editor);\n    if (!controller) {\n        return false;\n    }\n    return controller.start({\n        forceRevealReplace: false,\n        seedSearchStringFromSelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n        seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n        seedSearchStringFromGlobalClipboard: editor.getOption(41 /* EditorOption.find */).globalFindClipboard,\n        shouldFocus: 1 /* FindStartFocusAction.FocusFindInput */,\n        shouldAnimate: true,\n        updateSearchScope: false,\n        loop: editor.getOption(41 /* EditorOption.find */).loop\n    });\n});\nconst findArgDescription = {\n    description: 'Open a new In-Editor Find Widget.',\n    args: [{\n            name: 'Open a new In-Editor Find Widget args',\n            schema: {\n                properties: {\n                    searchString: { type: 'string' },\n                    replaceString: { type: 'string' },\n                    regex: { type: 'boolean' },\n                    regexOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.isRegexOverride', 'Overrides \"Use Regular Expression\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    wholeWord: { type: 'boolean' },\n                    wholeWordOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.wholeWordOverride', 'Overrides \"Match Whole Word\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    matchCase: { type: 'boolean' },\n                    matchCaseOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.matchCaseOverride', 'Overrides \"Math Case\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    preserveCase: { type: 'boolean' },\n                    preserveCaseOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.preserveCaseOverride', 'Overrides \"Preserve Case\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    findInSelection: { type: 'boolean' },\n                }\n            }\n        }]\n};\nexport class StartFindWithArgsAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.StartFindWithArgs,\n            label: nls.localize('startFindWithArgsAction', \"Find With Arguments\"),\n            alias: 'Find With Arguments',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: null,\n                primary: 0,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            description: findArgDescription\n        });\n    }\n    run(accessor, editor, args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (controller) {\n                const newState = args ? {\n                    searchString: args.searchString,\n                    replaceString: args.replaceString,\n                    isReplaceRevealed: args.replaceString !== undefined,\n                    isRegex: args.isRegex,\n                    // isRegexOverride: args.regexOverride,\n                    wholeWord: args.matchWholeWord,\n                    // wholeWordOverride: args.wholeWordOverride,\n                    matchCase: args.isCaseSensitive,\n                    // matchCaseOverride: args.matchCaseOverride,\n                    preserveCase: args.preserveCase,\n                    // preserveCaseOverride: args.preserveCaseOverride,\n                } : {};\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: (controller.getState().searchString.length === 0) && editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n                    seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n                    seedSearchStringFromGlobalClipboard: true,\n                    shouldFocus: 1 /* FindStartFocusAction.FocusFindInput */,\n                    shouldAnimate: true,\n                    updateSearchScope: (args === null || args === void 0 ? void 0 : args.findInSelection) || false,\n                    loop: editor.getOption(41 /* EditorOption.find */).loop\n                }, newState);\n                controller.setGlobalBufferTerm(controller.getState().searchString);\n            }\n        });\n    }\n}\nexport class StartFindWithSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.StartFindWithSelection,\n            label: nls.localize('startFindWithSelectionAction', \"Find With Selection\"),\n            alias: 'Find With Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: null,\n                primary: 0,\n                mac: {\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 35 /* KeyCode.KeyE */,\n                },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (controller) {\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: 'multiple',\n                    seedSearchStringFromNonEmptySelection: false,\n                    seedSearchStringFromGlobalClipboard: false,\n                    shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                    shouldAnimate: true,\n                    updateSearchScope: false,\n                    loop: editor.getOption(41 /* EditorOption.find */).loop\n                });\n                controller.setGlobalBufferTerm(controller.getState().searchString);\n            }\n        });\n    }\n}\nexport class MatchFindAction extends EditorAction {\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (controller && !this._run(controller)) {\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: (controller.getState().searchString.length === 0) && editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n                    seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n                    seedSearchStringFromGlobalClipboard: true,\n                    shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                    shouldAnimate: true,\n                    updateSearchScope: false,\n                    loop: editor.getOption(41 /* EditorOption.find */).loop\n                });\n                this._run(controller);\n            }\n        });\n    }\n}\nexport class NextMatchFindAction extends MatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.NextMatchFindAction,\n            label: nls.localize('findNextMatchAction', \"Find Next\"),\n            alias: 'Find Next',\n            precondition: undefined,\n            kbOpts: [{\n                    kbExpr: EditorContextKeys.focus,\n                    primary: 61 /* KeyCode.F3 */,\n                    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 37 /* KeyCode.KeyG */, secondary: [61 /* KeyCode.F3 */] },\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }, {\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n                    primary: 3 /* KeyCode.Enter */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }]\n        });\n    }\n    _run(controller) {\n        const result = controller.moveToNextMatch();\n        if (result) {\n            controller.editor.pushUndoStop();\n            return true;\n        }\n        return false;\n    }\n}\nexport class PreviousMatchFindAction extends MatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.PreviousMatchFindAction,\n            label: nls.localize('findPreviousMatchAction', \"Find Previous\"),\n            alias: 'Find Previous',\n            precondition: undefined,\n            kbOpts: [{\n                    kbExpr: EditorContextKeys.focus,\n                    primary: 1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */,\n                    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 37 /* KeyCode.KeyG */, secondary: [1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */] },\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }, {\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n                    primary: 1024 /* KeyMod.Shift */ | 3 /* KeyCode.Enter */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }\n            ]\n        });\n    }\n    _run(controller) {\n        return controller.moveToPrevMatch();\n    }\n}\nexport class MoveToMatchFindAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.GoToMatchFindAction,\n            label: nls.localize('findMatchAction.goToMatch', \"Go to Match...\"),\n            alias: 'Go to Match...',\n            precondition: CONTEXT_FIND_WIDGET_VISIBLE\n        });\n        this._highlightDecorations = [];\n    }\n    run(accessor, editor, args) {\n        const controller = CommonFindController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const matchesCount = controller.getState().matchesCount;\n        if (matchesCount < 1) {\n            const notificationService = accessor.get(INotificationService);\n            notificationService.notify({\n                severity: Severity.Warning,\n                message: nls.localize('findMatchAction.noResults', \"No matches. Try searching for something else.\")\n            });\n            return;\n        }\n        const quickInputService = accessor.get(IQuickInputService);\n        const inputBox = quickInputService.createInputBox();\n        inputBox.placeholder = nls.localize('findMatchAction.inputPlaceHolder', \"Type a number to go to a specific match (between 1 and {0})\", matchesCount);\n        const toFindMatchIndex = (value) => {\n            const index = parseInt(value);\n            if (isNaN(index)) {\n                return undefined;\n            }\n            const matchCount = controller.getState().matchesCount;\n            if (index > 0 && index <= matchCount) {\n                return index - 1; // zero based\n            }\n            else if (index < 0 && index >= -matchCount) {\n                return matchCount + index;\n            }\n            return undefined;\n        };\n        const updatePickerAndEditor = (value) => {\n            const index = toFindMatchIndex(value);\n            if (typeof index === 'number') {\n                // valid\n                inputBox.validationMessage = undefined;\n                controller.goToMatch(index);\n                const currentMatch = controller.getState().currentMatch;\n                if (currentMatch) {\n                    this.addDecorations(editor, currentMatch);\n                }\n            }\n            else {\n                inputBox.validationMessage = nls.localize('findMatchAction.inputValidationMessage', \"Please type a number between 1 and {0}\", controller.getState().matchesCount);\n                this.clearDecorations(editor);\n            }\n        };\n        inputBox.onDidChangeValue(value => {\n            updatePickerAndEditor(value);\n        });\n        inputBox.onDidAccept(() => {\n            const index = toFindMatchIndex(inputBox.value);\n            if (typeof index === 'number') {\n                controller.goToMatch(index);\n                inputBox.hide();\n            }\n            else {\n                inputBox.validationMessage = nls.localize('findMatchAction.inputValidationMessage', \"Please type a number between 1 and {0}\", controller.getState().matchesCount);\n            }\n        });\n        inputBox.onDidHide(() => {\n            this.clearDecorations(editor);\n            inputBox.dispose();\n        });\n        inputBox.show();\n    }\n    clearDecorations(editor) {\n        editor.changeDecorations(changeAccessor => {\n            this._highlightDecorations = changeAccessor.deltaDecorations(this._highlightDecorations, []);\n        });\n    }\n    addDecorations(editor, range) {\n        editor.changeDecorations(changeAccessor => {\n            this._highlightDecorations = changeAccessor.deltaDecorations(this._highlightDecorations, [\n                {\n                    range,\n                    options: {\n                        description: 'find-match-quick-access-range-highlight',\n                        className: 'rangeHighlight',\n                        isWholeLine: true\n                    }\n                },\n                {\n                    range,\n                    options: {\n                        description: 'find-match-quick-access-range-highlight-overview',\n                        overviewRuler: {\n                            color: themeColorFromId(overviewRulerRangeHighlight),\n                            position: OverviewRulerLane.Full\n                        }\n                    }\n                }\n            ]);\n        });\n    }\n}\nexport class SelectionMatchFindAction extends EditorAction {\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (!controller) {\n                return;\n            }\n            const selectionSearchString = getSelectionSearchString(editor, 'single', false);\n            if (selectionSearchString) {\n                controller.setSearchString(selectionSearchString);\n            }\n            if (!this._run(controller)) {\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: 'none',\n                    seedSearchStringFromNonEmptySelection: false,\n                    seedSearchStringFromGlobalClipboard: false,\n                    shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                    shouldAnimate: true,\n                    updateSearchScope: false,\n                    loop: editor.getOption(41 /* EditorOption.find */).loop\n                });\n                this._run(controller);\n            }\n        });\n    }\n}\nexport class NextSelectionMatchFindAction extends SelectionMatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.NextSelectionMatchFindAction,\n            label: nls.localize('nextSelectionMatchFindAction', \"Find Next Selection\"),\n            alias: 'Find Next Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.focus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 61 /* KeyCode.F3 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _run(controller) {\n        return controller.moveToNextMatch();\n    }\n}\nexport class PreviousSelectionMatchFindAction extends SelectionMatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.PreviousSelectionMatchFindAction,\n            label: nls.localize('previousSelectionMatchFindAction', \"Find Previous Selection\"),\n            alias: 'Find Previous Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.focus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _run(controller) {\n        return controller.moveToPrevMatch();\n    }\n}\nexport const StartFindReplaceAction = registerMultiEditorAction(new MultiEditorAction({\n    id: FIND_IDS.StartFindReplaceAction,\n    label: nls.localize('startReplace', \"Replace\"),\n    alias: 'Replace',\n    precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n    kbOpts: {\n        kbExpr: null,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 38 /* KeyCode.KeyH */,\n        mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 36 /* KeyCode.KeyF */ },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n    },\n    menuOpts: {\n        menuId: MenuId.MenubarEditMenu,\n        group: '3_find',\n        title: nls.localize({ key: 'miReplace', comment: ['&& denotes a mnemonic'] }, \"&&Replace\"),\n        order: 2\n    }\n}));\nStartFindReplaceAction.addImplementation(0, (accessor, editor, args) => {\n    if (!editor.hasModel() || editor.getOption(90 /* EditorOption.readOnly */)) {\n        return false;\n    }\n    const controller = CommonFindController.get(editor);\n    if (!controller) {\n        return false;\n    }\n    const currentSelection = editor.getSelection();\n    const findInputFocused = controller.isFindInputFocused();\n    // we only seed search string from selection when the current selection is single line and not empty,\n    // + the find input is not focused\n    const seedSearchStringFromSelection = !currentSelection.isEmpty()\n        && currentSelection.startLineNumber === currentSelection.endLineNumber\n        && (editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never')\n        && !findInputFocused;\n    /*\n    * if the existing search string in find widget is empty and we don't seed search string from selection, it means the Find Input is still empty, so we should focus the Find Input instead of Replace Input.\n\n    * findInputFocused true -> seedSearchStringFromSelection false, FocusReplaceInput\n    * findInputFocused false, seedSearchStringFromSelection true FocusReplaceInput\n    * findInputFocused false seedSearchStringFromSelection false FocusFindInput\n    */\n    const shouldFocus = (findInputFocused || seedSearchStringFromSelection) ?\n        2 /* FindStartFocusAction.FocusReplaceInput */ : 1 /* FindStartFocusAction.FocusFindInput */;\n    return controller.start({\n        forceRevealReplace: true,\n        seedSearchStringFromSelection: seedSearchStringFromSelection ? 'single' : 'none',\n        seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n        seedSearchStringFromGlobalClipboard: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never',\n        shouldFocus: shouldFocus,\n        shouldAnimate: true,\n        updateSearchScope: false,\n        loop: editor.getOption(41 /* EditorOption.find */).loop\n    });\n});\nregisterEditorContribution(CommonFindController.ID, FindController, 0 /* EditorContributionInstantiation.Eager */); // eager because it uses `saveViewState`/`restoreViewState`\nregisterEditorAction(StartFindWithArgsAction);\nregisterEditorAction(StartFindWithSelectionAction);\nregisterEditorAction(NextMatchFindAction);\nregisterEditorAction(PreviousMatchFindAction);\nregisterEditorAction(MoveToMatchFindAction);\nregisterEditorAction(NextSelectionMatchFindAction);\nregisterEditorAction(PreviousSelectionMatchFindAction);\nconst FindCommand = EditorCommand.bindToContribution(CommonFindController.get);\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.CloseFindWidgetCommand,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.closeFindWidget(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\n        primary: 9 /* KeyCode.Escape */,\n        secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleCaseSensitiveCommand,\n    precondition: undefined,\n    handler: x => x.toggleCaseSensitive(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleCaseSensitiveKeybinding.primary,\n        mac: ToggleCaseSensitiveKeybinding.mac,\n        win: ToggleCaseSensitiveKeybinding.win,\n        linux: ToggleCaseSensitiveKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleWholeWordCommand,\n    precondition: undefined,\n    handler: x => x.toggleWholeWords(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleWholeWordKeybinding.primary,\n        mac: ToggleWholeWordKeybinding.mac,\n        win: ToggleWholeWordKeybinding.win,\n        linux: ToggleWholeWordKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleRegexCommand,\n    precondition: undefined,\n    handler: x => x.toggleRegex(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleRegexKeybinding.primary,\n        mac: ToggleRegexKeybinding.mac,\n        win: ToggleRegexKeybinding.win,\n        linux: ToggleRegexKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleSearchScopeCommand,\n    precondition: undefined,\n    handler: x => x.toggleSearchScope(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleSearchScopeKeybinding.primary,\n        mac: ToggleSearchScopeKeybinding.mac,\n        win: ToggleSearchScopeKeybinding.win,\n        linux: ToggleSearchScopeKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.TogglePreserveCaseCommand,\n    precondition: undefined,\n    handler: x => x.togglePreserveCase(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: TogglePreserveCaseKeybinding.primary,\n        mac: TogglePreserveCaseKeybinding.mac,\n        win: TogglePreserveCaseKeybinding.win,\n        linux: TogglePreserveCaseKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceOneAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replace(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 22 /* KeyCode.Digit1 */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceOneAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replace(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n        primary: 3 /* KeyCode.Enter */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceAllAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replaceAll(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 3 /* KeyCode.Enter */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceAllAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replaceAll(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n        primary: undefined,\n        mac: {\n            primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */,\n        }\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.SelectAllMatchesAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.selectAllMatches(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 512 /* KeyMod.Alt */ | 3 /* KeyCode.Enter */\n    }\n}));\n"],"names":["DragAndDropCommand","constructor","selection","targetPosition","copy","this","targetSelection","getEditOperations","model","builder","text","getValueInRange","addEditOperation","Range","lineNumber","column","containsPosition","getEndPosition","equals","getStartPosition","Selection","endLineNumber","startLineNumber","endColumn","startColumn","computeCursorState","helper","hasTriggerModifier","e","isMacintosh","altKey","ctrlKey","DragAndDropController","Disposable","editor","super","_editor","_dndDecorationIds","createDecorationsCollection","_register","onMouseDown","_onEditorMouseDown","onMouseUp","_onEditorMouseUp","onMouseDrag","_onEditorMouseDrag","onMouseDrop","_onEditorMouseDrop","onMouseDropCanceled","_onEditorMouseDropCanceled","onKeyDown","onEditorKeyDown","onKeyUp","onEditorKeyUp","onDidBlurEditorWidget","onEditorBlur","onDidBlurEditorText","_mouseDown","_modifierPressed","_dragSelection","_removeDecoration","getOption","updateOptions","mouseStyle","keyCode","TRIGGER_KEY_VALUE","mouseEvent","target","possibleSelections","getSelections","filter","position","length","event","showAt","_hitContent","_hitMargin","newCursorPosition","Position","newSelections","shiftKey","primarySelection","getSelection","selectionStartLineNumber","selectionStartColumn","map","setSelections","pushUndoStop","executeCommand","ID","set","range","options","_DECORATION_OPTIONS","revealPosition","clear","type","dispose","ModelDecorationOptions","register","description","className","registerEditorContribution","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","apply","CommandsRegistry","registerCommand","accessor","_len","arguments","args","Array","_key","resource","assertType","URI","isUri","outlineService","get","IOutlineModelService","modelService","ITextModelService","reference","createModelReference","getOrCreate","object","textEditorModel","CancellationToken","None","getTopLevelSymbols","__decorate","decorators","key","desc","d","c","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","TreeElement","remove","_a","parent","children","delete","id","findId","candidate","container","candidateId","concat","name","undefined","empty","element","size","OutlineElement","symbol","Map","OutlineGroup","label","order","OutlineModel","create","registry","textModel","token","cts","CancellationTokenSource","uri","provider","ordered","promises","index","group","displayName","provideDocumentSymbols","info","_makeOutlineElement","err","onUnexpectedExternalError","_groups","listener","onDidChange","newProvider","cancel","all","isCancellationRequested","_compact","finally","res","childInfo","count","Iterable","first","values","child","roots","push","sort","a","b","compareRangesUsingStarts","asListOfDocumentSymbols","bucket","_flattenDocumentSymbols","compare","entries","overrideContainerLabel","entry","kind","tags","detail","containerName","selectionRange","createDecorator","OutlineModelService","_languageFeaturesService","debounces","_disposables","DisposableStore","_cache","LRUCache","_debounceInformation","for","documentSymbolProvider","min","add","onModelRemoved","data","versionId","getVersionId","source","promiseCnt","promise","now","Date","outlineModel","update","catch","_err","onCancellationRequested","ILanguageFeaturesService","ILanguageFeatureDebounceService","IModelService","registerSingleton","CopyPasteController_1","changePasteTypeCommandId","pasteWidgetVisibleCtx","RawContextKey","localize","vscodeClipboardMime","CopyPasteController","getContribution","instantiationService","_bulkEditService","_clipboardService","_quickInputService","_progressService","getContainerDomNode","addDisposableListener","handleCopy","handlePaste","_pasteProgressManager","InlineProgressManager","_postPasteWidgetManager","createInstance","PostEditWidgetManager","changePasteType","tryShowSelector","pasteAs","preferredId","focus","_pasteAsActionContext","getActiveDocument","execCommand","isPasteAsEnabled","enabled","_b","hasTextFocus","platform","writeResources","clipboardData","getModel","selections","enableEmptySelectionClipboard","ranges","wasFromEmptySelection","isEmpty","getLineLength","toCopy","_getViewModel","getPlainTextToCopy","defaultPastePayload","multicursorText","isArray","pasteOnNewLine","mode","providers","documentPasteEditProvider","x","prepareDocumentPaste","setCopyMetadata","dataTransfer","toVSDataTransfer","providerCopyMimeTypes","flatMap","copyMimeTypes","handle","generateUuid","createCancelablePromise","results","coalesce","console","error","reverse","mime","replace","_currentCopyOperation","dataTransferPromise","_currentPasteOperation","metadata","fetchCopyMetadata","toExternalVSDataTransfer","allPotentialMimeTypes","types","Mimes","uriList","allProviders","pasteMimeTypes","some","matchesMimeType","preventDefault","stopImmediatePropagation","showPasteAsPick","doPasteInline","p","hasModel","tokenSource","EditorStateCancellationTokenSource","mergeInDataFromCopy","supportedProviders","isSupportedPasteProvider","applyDefaultPasteHandler","providerEdits","getPasteEdits","providerId","canShowWidget","showPasteSelector","applyEditAndShowIfNeeded","activeEditIndex","allEdits","showWhile","edit","pickedEdit","at","selected","pick","placeHolder","combinedWorkspaceEdit","createCombinedWorkspaceEdit","withProgress","location","title","setData","JSON","stringify","rawMetadata","getData","parse","_","ClipboardEventUtils","getTextData","isFromEmptySelection","toMergeDataTransfer","has","resources","readResources","append","createStringDataTransferItem","UriList","raceCancellation","provideDocumentPasteEdits","call","assign","edits","sortEditsByYieldTo","_c","textDataTransfer","asString","payload","trigger","Boolean","matches","IInstantiationService","IBulkEditService","IClipboardService","IQuickInputService","IProgressService","registerEditorFeature","DefaultPasteProvidersFeature","registerEditorCommand","EditorCommand","precondition","kbOpts","weight","primary","runEditorCommand","_accessor","_args","registerEditorAction","EditorAction","nls","alias","schema","properties","run","builtInLabel","SimplePasteAndDropProvider","_model","_ranges","getEdit","insertText","handledMimeType","yieldTo","provideDocumentOnDropEdits","_position","DefaultTextProvider","dropMimeTypes","_token","textEntry","PathProvider","extractUriList","uriCount","_ref","originalText","scheme","Schemas","file","fsPath","join","RelativePathProvider","_workspaceContextService","relativeUris","_ref2","root","getWorkspaceFolder","relativePath","urlListEntry","strUriList","IWorkspaceContextService","DefaultDropProvidersFeature","languageFeaturesService","workspaceContextService","documentOnDropEditProvider","DropIntoEditorController_1","defaultProviderConfig","changeDropTypeCommandId","dropWidgetVisibleCtx","DropIntoEditorController","_configService","_treeViewsDragAndDropService","treeItemsTransfer","LocalSelectionTransfer","getInstance","_dropProgressManager","_postDropWidgetManager","onDropIntoEditor","changeDropType","dragEvent","_currentOperation","setPosition","ourDataTransfer","extractDataTransferData","getDropEdits","getInitialActiveEditIndex","showDropSelector","fromPositions","preferredProviders","getValue","configMime","desiredId","editIndex","findIndex","VSDataTransfer","hasData","DraggedTreeItemsIdentifier","prototype","treeDataTransfer","removeDragOperationTransfer","identifier","IConfigurationService","ITreeViewsDnDService","Registry","as","ConfigurationExtensions","Configuration","registerConfiguration","editorConfigurationBaseNode","scope","default","additionalProperties","ResourceTextEdit","insertAsSnippet","snippet","additionalEdit","yieldsTo","yTo","other","mimeType","yieldsToMap","arr","from","visited","Set","tempStack","visit","nodes","node","includes","warn","slice","pre","pop","PostEditWidget_1","PostEditWidget","typeId","visibleContext","showCommand","onSelectNewEdit","_contextMenuService","contextKeyService","_keybindingService","allowEditorOverflow","suppressMouseDown","bindTo","toDisposable","reset","addContentWidget","layoutContentWidget","removeContentWidget","onDidChangeCursorPosition","Event","runAndSubscribe","onDidUpdateKeybindings","_updateButtonTitle","binding","lookupKeybinding","getLabel","button","domNode","dom","$","Button","supportIcons","CLICK","showSelector","getId","baseId","getDomNode","getPosition","preference","showContextMenu","getAnchor","pos","left","width","y","top","height","getActions","toAction","checked","IContextMenuService","IContextKeyService","IKeybindingService","_id","_visibleContext","_showCommand","_instantiationService","_currentWidget","MutableDisposable","any","onDidChangeModel","onDidChangeModelContent","insertTextEdit","primaryRange","editTrackingDecoration","deltaDecorations","stickiness","editResult","editRange","getDecorationRange","isApplied","show","newEditIndex","undo","onDidSelectEdit","IEditorCancellationTokens","ctxCancellableOperation","_tokens","WeakMap","removeFn","invokeWithinContext","tokens","LinkedList","EditorKeybindingCancellationTokenSource","_unregister","EditorState","flags","modelVersionId","strings","toString","scrollLeft","getScrollLeft","scrollTop","getScrollTop","_equals","state","equalsRange","validate","_listener","onDidChangeCursorSelection","containsRange","onDidScrollChange","TextModelCancellationTokenSource","onDidChangeContent","FindDecorations","_decorations","_overviewRulerApproximateDecorations","_findScopeDecorationIds","_rangeHighlightDecorationId","_highlightedDecorationId","_startPosition","removeDecorations","_allDecorations","getCount","getFindScope","getFindScopes","scopes","findScopeDecorationId","setStartPosition","newStartPosition","setCurrentFindMatch","_getDecorationIndex","decorationId","indexOf","getDecorationRangeAt","getCurrentMatchesPosition","desiredRange","candidates","getDecorationsInRange","candidateOpts","_FIND_MATCH_DECORATION","_CURRENT_FIND_MATCH_DECORATION","nextMatch","newCurrentDecorationId","matchPosition","len","changeDecorations","changeAccessor","changeDecorationOptions","removeDecoration","rng","lineBeforeEnd","lineBeforeEndMaxColumn","getLineMaxColumn","addDecoration","_RANGE_HIGHLIGHT_DECORATION","findMatches","findScopes","findMatchesOptions","newOverviewRulerApproximateDecorations","_FIND_MATCH_NO_OVERVIEW_DECORATION","lineCount","getLineCount","approxPixelsPerLine","getLayoutInfo","mergeLinesDelta","Math","max","ceil","prevStartLineNumber","prevEndLineNumber","_FIND_MATCH_ONLY_OVERVIEW_DECORATION","newFindMatchesDecorations","forEach","findScope","_FIND_SCOPE_DECORATION","matchBeforePosition","matchAfterPosition","zIndex","showIfCollapsed","overviewRuler","color","themeColorFromId","overviewRulerFindMatchForeground","OverviewRulerLane","Center","minimap","minimapFindMatch","MinimapPosition","Inline","isWholeLine","ReplaceAllCommand","editorSelection","replaceStrings","_editorSelection","_replaceStrings","_trackedEditorSelectionId","ops","o1","o2","resultOps","previousOp","plusRange","op","trackSelection","getTrackedSelection","StaticValueReplacePattern","staticValue","DynamicPiecesReplacePattern","pieces","ReplacePattern","fromStaticValue","ReplacePiece","hasReplacementPatterns","_state","buildReplaceString","preserveCase","buildReplaceStringWithCasePreserved","piece","match","_substitute","matchIndex","caseOps","repl","lenOps","opIdx","idx","toUpperCase","toLowerCase","remainder","String","floor","ReplacePieceBuilder","_source","_lastCharIndex","_result","_resultLen","_currentStaticPiece","emitUnchanged","toCharIndex","_emitStatic","substring","emitStatic","emitMatchIndex","finalize","CONTEXT_FIND_WIDGET_VISIBLE","CONTEXT_FIND_INPUT_FOCUSED","toNegated","CONTEXT_REPLACE_INPUT_FOCUSED","ToggleCaseSensitiveKeybinding","mac","ToggleWholeWordKeybinding","ToggleRegexKeybinding","ToggleSearchScopeKeybinding","TogglePreserveCaseKeybinding","FIND_IDS","MATCHES_LIMIT","FindModelBoundToEditorModel","_toDispose","_isDisposed","_startSearchingTimer","TimeoutTimer","_updateDecorationsScheduler","RunOnceScheduler","research","reason","_ignoreModelContentChanged","isFlush","schedule","onFindReplaceStateChange","_onStateChanged","searchScope","searchString","isReplaceRevealed","isRegex","wholeWord","matchCase","isTooLargeForSyncing","setIfNotSet","moveCursor","_getSearchRange","getFullModelRange","newFindScope","_findMatches","currentMatchesPosition","matchAfterSelection","findFirstIdxMonotonousOrArrLen","changeMatchInfo","cursorMoveOnType","_moveToNextMatch","_hasMatches","matchesCount","_cannotFind","revealRangeInCenterIfOutsideViewport","_setCurrentFindMatch","matchesPosition","setSelection","_prevSearchPosition","before","isUsingLineStops","_moveToPrevMatch","isRecursed","canNavigateBack","nextMatchRange","prevMatchRange","searchRange","isBefore","prevMatch","findPreviousMatch","moveToPrevMatch","_nextSearchPosition","after","canNavigateForward","_getNextMatch","captureMatches","forceMove","findNextMatch","moveToNextMatch","_moveToMatch","decorationRange","moveToMatch","_getReplacePattern","replaceString","chCode","charCodeAt","nextChCode","nextNextChCode","fromCharCode","parseReplaceString","replacePattern","command","ReplaceCommand","_executeEditorCommand","limitResultCount","searchRanges","replaceAll","_largeReplaceAll","_regularReplaceAll","searchData","SearchParams","parseSearchRequest","searchRegex","regex","multiline","mod","ignoreCase","global","RegExp","modelText","fullModelRange","resultText","ReplaceCommandThatPreservesSelection","m","selectAllMatches","FindOptionsWidget","Widget","keybindingService","_hideSoon","_hide","_isVisible","_domNode","document","createElement","style","display","setAttribute","toggleStyles","inputActiveOptionBorder","asCssVariable","inputActiveOptionForeground","inputActiveOptionBackground","caseSensitive","CaseSensitiveToggle","appendTitle","_keybindingLabelFor","isChecked","appendChild","onChange","change","wholeWords","WholeWordsToggle","RegexToggle","addOverlayWidget","somethingChanged","isRevealed","_revealTemporarily","MOUSE_LEAVE","_onMouseLeave","_onMouseOver","actionId","kb","removeOverlayWidget","highlightFindOptions","_show","effectiveOptionValue","override","FindReplaceState","_searchString","_replaceString","_isRevealed","_isReplaceRevealed","_isRegexOverride","_isRegex","_wholeWordOverride","_wholeWord","_matchCaseOverride","_matchCase","_preserveCaseOverride","_preserveCase","actualIsRegex","actualWholeWord","actualMatchCase","actualPreserveCase","_searchScope","_matchesPosition","_matchesCount","currentMatch","_currentMatch","_onFindReplaceStateChange","Emitter","_loop","_isSearching","_filters","changeEvent","updateHistory","loop","isSearching","filters","fire","newState","oldEffectiveIsRegex","oldEffectiveWholeWords","oldEffectiveMatchCase","oldEffectivePreserveCase","every","newSearchScope","existingSearchScope","isRegexOverride","wholeWordOverride","matchCaseOverride","preserveCaseOverride","canNavigateInLoop","findSelectionIcon","registerIcon","Codicon","findCollapsedIcon","chevronRight","findExpandedIcon","chevronDown","findReplaceIcon","findReplaceAllIcon","findPreviousMatchIcon","arrowUp","findNextMatchIcon","arrowDown","NLS_FIND_DIALOG_LABEL","NLS_FIND_INPUT_LABEL","NLS_FIND_INPUT_PLACEHOLDER","NLS_PREVIOUS_MATCH_BTN_LABEL","NLS_NEXT_MATCH_BTN_LABEL","NLS_TOGGLE_SELECTION_FIND_TITLE","NLS_CLOSE_BTN_LABEL","NLS_REPLACE_INPUT_LABEL","NLS_REPLACE_INPUT_PLACEHOLDER","NLS_REPLACE_BTN_LABEL","NLS_REPLACE_ALL_BTN_LABEL","NLS_TOGGLE_REPLACE_MODE_BTN_LABEL","NLS_MATCHES_COUNT_LIMIT_TITLE","NLS_MATCHES_LOCATION","NLS_NO_RESULTS","FIND_WIDGET_INITIAL_WIDTH","MAX_MATCHES_COUNT_WIDTH","ctrlEnterReplaceAllWarningPromptedKey","ctrlKeyMod","FindWidgetViewZone","afterLineNumber","heightInPx","stopPropagationForMultiLineUpwards","textarea","isMultiline","selectionStart","stopPropagation","stopPropagationForMultiLineDownwards","selectionEnd","FindWidget","codeEditor","controller","contextViewProvider","themeService","storageService","notificationService","_cachedHeight","_revealTimeouts","_codeEditor","_controller","_contextViewProvider","_contextKeyService","_storageService","_notificationService","_ctrlEnterReplaceAllWarningPrompted","getBoolean","_isReplaceVisible","_ignoreChangeEvent","_updateHistoryDelayer","Delayer","_buildDomNode","_updateButtons","_tryUpdateWidgetWidth","_findInput","inputBox","layout","onDidChangeConfiguration","hasChanged","updateAccessibilitySupport","supportLoop","addExtraSpaceOnTop","_viewZone","_showViewZone","_removeViewZone","_updateToggleSelectionFindButton","onDidFocusEditorWidget","globalBufferTerm","getGlobalBufferTerm","select","_findInputFocused","_findFocusTracker","inputElement","onDidFocus","_updateSearchScope","onDidBlur","_replaceInputFocused","_replaceFocusTracker","_replaceInput","_viewZoneId","scrollTopChanged","_layoutViewZone","setTimeout","setValue","_reveal","_tryUpdateHeight","setRegex","setWholeWords","setCaseSensitive","setPreserveCase","_toggleSelectionFind","showRedOutline","classList","toggle","_updateMatchesCount","_delayedUpdateHistory","_updateHistory","bind","onUnexpectedError","addToHistory","minWidth","firstChild","removeChild","createTextNode","alertFn","_getAriaLabel","clientWidth","ariaLabel","lineContent","getLineContent","isSelection","enable","disable","setEnabled","_closeBtn","findInputIsNonEmpty","_prevBtn","_nextBtn","_replaceBtn","_replaceAllBtn","_toggleReplaceBtn","setExpanded","canReplace","clearTimeout","autoFindInSelection","isSelectionMultipleLine","layoutOverlayWidget","adjustEditorScrollTop","seedSearchStringFromSelection","editorCoords","startCoords","getScrolledVisiblePosition","startLeft","startTop","leftOfFindWidget","endCoords","focusTheEditor","clearMessage","targetScrollTop","viewZone","changeViewZones","_getHeight","addZone","setScrollTop","adjustScroll","newHeight","scrollAdjustment","layoutZone","removeZone","layoutInfo","contentWidth","contains","editorWidth","minimapWidth","collapsedFindWidget","reducedFindWidget","narrowFindWidget","_resized","maxWidth","findInputWidth","totalheight","totalHeight","focusFindInput","focusReplaceInput","setEndPosition","_onFindInputMouseDown","middleButton","_onFindInputKeyDown","dispatchEvent","insertAtCursor","focusOnCaseSensitive","querySelector","_onReplaceInputKeyDown","store","getVerticalSashLeft","_sash","flexibleHeight","flexibleWidth","ContextScopedFindInput","PART_WIDTH","placeholder","appendCaseSensitiveLabel","appendWholeWordsLabel","appendRegexLabel","validation","getRegex","content","message","flexibleMaxHeight","showCommonFindToggles","showHistoryHint","showHistoryKeybindingHint","inputBoxStyles","defaultInputBoxStyles","defaultToggleStyles","onDidOptionChange","getWholeWords","getCaseSensitive","onCaseSensitiveKeyDown","onRegexKeyDown","focusOnPreserve","onDidHeightChange","SimpleButton","icon","onTrigger","assertIsDefined","getAction","findPart","actionsContainer","Toggle","widgetClose","isEnabled","ContextScopedReplaceInput","appendPreserveCaseLabel","history","getPreserveCase","onPreserveCaseKeyDown","replacePart","replaceActionsContainer","role","_resizeSash","Sash","orientation","originalWidth","onDidStart","evt","startX","currentX","parseFloat","onDidReset","currentWidth","setFocusInputOnOptionClick","opts","_opts","ThemeIcon","asClassName","tabIndex","onclick","onkeydown","expanded","asClassNameArray","registerThemingParticipant","theme","collector","addBackgroundColorRule","selector","addRule","getColor","editorFindMatchHighlight","editorFindMatch","editorFindRangeHighlight","editorWidgetBackground","widgetShadowColor","widgetShadow","widgetBorderColor","widgetBorder","findMatchHighlightBorder","editorFindMatchHighlightBorder","isHighContrast","findMatchBorder","editorFindMatchBorder","findRangeHighlightBorder","editorFindRangeHighlightBorder","hcBorder","contrastBorder","foreground","editorWidgetForeground","errorForeground","resizeBorderBackground","editorWidgetResizeBorder","border","editorWidgetBorder","toolbarHoverBackgroundColor","toolbarHoverBackground","focusOutline","focusBorder","CommonFindController_1","SEARCH_STRING_MAX_LENGTH","getSelectionSearchString","seedSearchStringFromNonEmptySelection","wordAtPosition","getConfiguredWordAtPosition","word","getValueLengthInRange","CommonFindController","clipboardService","_findWidgetVisible","loadQueryState","shouldRestartFind","disposeModel","_start","forceRevealReplace","seedSearchStringFromGlobalClipboard","shouldFocus","shouldAnimate","updateSearchScope","saveQueryState","setGlobalBufferTerm","isFindInputFocused","getState","closeFindWidget","toggleCaseSensitive","toggleWholeWords","toggleRegex","togglePreserveCase","toggleSearchScope","setSearchString","stateChanges","selectionSearchString","currentSelections","start","goToMatch","isTooLargeForHeapOperation","globalFindClipboard","readFindText","writeFindText","IStorageService","INotificationService","FindController","_contextViewService","_themeService","_widget","_findOptionsWidget","_super","_createFindWidget","ignoreWhenVisible","IContextViewService","IThemeService","StartFindAction","registerMultiEditorAction","MultiEditorAction","ContextKeyExpr","or","EditorContextKeys","kbExpr","menuOpts","menuId","MenuId","MenubarEditMenu","comment","addImplementation","findArgDescription","regexOverride","findInSelection","StartFindWithArgsAction","matchWholeWord","isCaseSensitive","StartFindWithSelectionAction","MatchFindAction","_run","NextMatchFindAction","secondary","and","PreviousMatchFindAction","MoveToMatchFindAction","_highlightDecorations","notify","severity","Severity","Warning","createInputBox","toFindMatchIndex","parseInt","isNaN","matchCount","updatePickerAndEditor","validationMessage","addDecorations","clearDecorations","onDidChangeValue","onDidAccept","hide","onDidHide","overviewRulerRangeHighlight","Full","SelectionMatchFindAction","NextSelectionMatchFindAction","PreviousSelectionMatchFindAction","StartFindReplaceAction","currentSelection","findInputFocused","FindCommand","bindToContribution","handler","not","win","linux"],"sourceRoot":""}