{"version":3,"file":"static/js/monaco-editor-vendor.dbdc571d.4873b595.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/resizableContentWidget.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/contentHover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/getHover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/marginHover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/markerHoverParticipant.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hoverOperation.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hoverTypes.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/markdownHoverParticipant.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/browser/inPlaceReplaceCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/browser/inPlaceReplace.js","../node_modules/monaco-editor/esm/vs/editor/contrib/indentation/browser/indentUtils.js","../node_modules/monaco-editor/esm/vs/editor/contrib/indentation/browser/indentation.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHints.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsController.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsHover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsContribution.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsLocations.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/commandIds.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionContextKeys.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/utils.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostText.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextWidget.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/provideInlineCompletions.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/singleTextEdit.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsSource.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsModel.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/suggestWidgetInlineCompletionProvider.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsController.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/commands.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/hoverParticipant.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletions.contribution.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsHintsWidget.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineProgress/browser/inlineProgress.js","../node_modules/monaco-editor/esm/vs/editor/contrib/lineSelection/browser/lineSelection.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/copyLinesCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/moveLinesCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/sortLinesCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/linesOperations.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linkedEditing/browser/linkedEditing.js","../node_modules/monaco-editor/esm/vs/editor/contrib/links/browser/getLinks.js","../node_modules/monaco-editor/esm/vs/editor/contrib/links/browser/links.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ResizableHTMLElement } from '../../../../base/browser/ui/resizable/resizable.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport * as dom from '../../../../base/browser/dom.js';\nconst TOP_HEIGHT = 30;\nconst BOTTOM_HEIGHT = 24;\nexport class ResizableContentWidget extends Disposable {\n    constructor(_editor, minimumSize = new dom.Dimension(10, 10)) {\n        super();\n        this._editor = _editor;\n        this.allowEditorOverflow = true;\n        this.suppressMouseDown = false;\n        this._resizableNode = this._register(new ResizableHTMLElement());\n        this._contentPosition = null;\n        this._isResizing = false;\n        this._resizableNode.domNode.style.position = 'absolute';\n        this._resizableNode.minSize = dom.Dimension.lift(minimumSize);\n        this._resizableNode.layout(minimumSize.height, minimumSize.width);\n        this._resizableNode.enableSashes(true, true, true, true);\n        this._register(this._resizableNode.onDidResize(e => {\n            this._resize(new dom.Dimension(e.dimension.width, e.dimension.height));\n            if (e.done) {\n                this._isResizing = false;\n            }\n        }));\n        this._register(this._resizableNode.onDidWillResize(() => {\n            this._isResizing = true;\n        }));\n    }\n    get isResizing() {\n        return this._isResizing;\n    }\n    getDomNode() {\n        return this._resizableNode.domNode;\n    }\n    getPosition() {\n        return this._contentPosition;\n    }\n    get position() {\n        var _a;\n        return ((_a = this._contentPosition) === null || _a === void 0 ? void 0 : _a.position) ? Position.lift(this._contentPosition.position) : undefined;\n    }\n    _availableVerticalSpaceAbove(position) {\n        const editorDomNode = this._editor.getDomNode();\n        const mouseBox = this._editor.getScrolledVisiblePosition(position);\n        if (!editorDomNode || !mouseBox) {\n            return;\n        }\n        const editorBox = dom.getDomNodePagePosition(editorDomNode);\n        return editorBox.top + mouseBox.top - TOP_HEIGHT;\n    }\n    _availableVerticalSpaceBelow(position) {\n        const editorDomNode = this._editor.getDomNode();\n        const mouseBox = this._editor.getScrolledVisiblePosition(position);\n        if (!editorDomNode || !mouseBox) {\n            return;\n        }\n        const editorBox = dom.getDomNodePagePosition(editorDomNode);\n        const bodyBox = dom.getClientArea(editorDomNode.ownerDocument.body);\n        const mouseBottom = editorBox.top + mouseBox.top + mouseBox.height;\n        return bodyBox.height - mouseBottom - BOTTOM_HEIGHT;\n    }\n    _findPositionPreference(widgetHeight, showAtPosition) {\n        var _a, _b;\n        const maxHeightBelow = Math.min((_a = this._availableVerticalSpaceBelow(showAtPosition)) !== null && _a !== void 0 ? _a : Infinity, widgetHeight);\n        const maxHeightAbove = Math.min((_b = this._availableVerticalSpaceAbove(showAtPosition)) !== null && _b !== void 0 ? _b : Infinity, widgetHeight);\n        const maxHeight = Math.min(Math.max(maxHeightAbove, maxHeightBelow), widgetHeight);\n        const height = Math.min(widgetHeight, maxHeight);\n        let renderingAbove;\n        if (this._editor.getOption(60 /* EditorOption.hover */).above) {\n            renderingAbove = height <= maxHeightAbove ? 1 /* ContentWidgetPositionPreference.ABOVE */ : 2 /* ContentWidgetPositionPreference.BELOW */;\n        }\n        else {\n            renderingAbove = height <= maxHeightBelow ? 2 /* ContentWidgetPositionPreference.BELOW */ : 1 /* ContentWidgetPositionPreference.ABOVE */;\n        }\n        if (renderingAbove === 1 /* ContentWidgetPositionPreference.ABOVE */) {\n            this._resizableNode.enableSashes(true, true, false, false);\n        }\n        else {\n            this._resizableNode.enableSashes(false, true, true, false);\n        }\n        return renderingAbove;\n    }\n    _resize(dimension) {\n        this._resizableNode.layout(dimension.height, dimension.width);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar ContentHoverController_1, ContentHoverWidget_1;\nimport * as dom from '../../../../base/browser/dom.js';\nimport { HoverAction, HoverWidget, getHoverAccessibleViewHint } from '../../../../base/browser/ui/hover/hoverWidget.js';\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { TokenizationRegistry } from '../../../common/languages.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { HoverParticipantRegistry, HoverRangeAnchor } from './hoverTypes.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ResizableContentWidget } from './resizableContentWidget.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nconst $ = dom.$;\nlet ContentHoverController = ContentHoverController_1 = class ContentHoverController extends Disposable {\n    constructor(_editor, _instantiationService, _keybindingService) {\n        super();\n        this._editor = _editor;\n        this._instantiationService = _instantiationService;\n        this._keybindingService = _keybindingService;\n        this._currentResult = null;\n        this._widget = this._register(this._instantiationService.createInstance(ContentHoverWidget, this._editor));\n        // Instantiate participants and sort them by `hoverOrdinal` which is relevant for rendering order.\n        this._participants = [];\n        for (const participant of HoverParticipantRegistry.getAll()) {\n            this._participants.push(this._instantiationService.createInstance(participant, this._editor));\n        }\n        this._participants.sort((p1, p2) => p1.hoverOrdinal - p2.hoverOrdinal);\n        this._computer = new ContentHoverComputer(this._editor, this._participants);\n        this._hoverOperation = this._register(new HoverOperation(this._editor, this._computer));\n        this._register(this._hoverOperation.onResult((result) => {\n            if (!this._computer.anchor) {\n                // invalid state, ignore result\n                return;\n            }\n            const messages = (result.hasLoadingMessage ? this._addLoadingMessage(result.value) : result.value);\n            this._withResult(new HoverResult(this._computer.anchor, messages, result.isComplete));\n        }));\n        this._register(dom.addStandardDisposableListener(this._widget.getDomNode(), 'keydown', (e) => {\n            if (e.equals(9 /* KeyCode.Escape */)) {\n                this.hide();\n            }\n        }));\n        this._register(TokenizationRegistry.onDidChange(() => {\n            if (this._widget.position && this._currentResult) {\n                this._setCurrentResult(this._currentResult); // render again\n            }\n        }));\n    }\n    get widget() {\n        return this._widget;\n    }\n    /**\n     * Returns true if the hover shows now or will show.\n     */\n    maybeShowAt(mouseEvent) {\n        if (this._widget.isResizing) {\n            return true;\n        }\n        const anchorCandidates = [];\n        for (const participant of this._participants) {\n            if (participant.suggestHoverAnchor) {\n                const anchor = participant.suggestHoverAnchor(mouseEvent);\n                if (anchor) {\n                    anchorCandidates.push(anchor);\n                }\n            }\n        }\n        const target = mouseEvent.target;\n        if (target.type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n            anchorCandidates.push(new HoverRangeAnchor(0, target.range, mouseEvent.event.posx, mouseEvent.event.posy));\n        }\n        if (target.type === 7 /* MouseTargetType.CONTENT_EMPTY */) {\n            const epsilon = this._editor.getOption(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth / 2;\n            if (!target.detail.isAfterLines && typeof target.detail.horizontalDistanceToText === 'number' && target.detail.horizontalDistanceToText < epsilon) {\n                // Let hover kick in even when the mouse is technically in the empty area after a line, given the distance is small enough\n                anchorCandidates.push(new HoverRangeAnchor(0, target.range, mouseEvent.event.posx, mouseEvent.event.posy));\n            }\n        }\n        if (anchorCandidates.length === 0) {\n            return this._startShowingOrUpdateHover(null, 0 /* HoverStartMode.Delayed */, 0 /* HoverStartSource.Mouse */, false, mouseEvent);\n        }\n        anchorCandidates.sort((a, b) => b.priority - a.priority);\n        return this._startShowingOrUpdateHover(anchorCandidates[0], 0 /* HoverStartMode.Delayed */, 0 /* HoverStartSource.Mouse */, false, mouseEvent);\n    }\n    startShowingAtRange(range, mode, source, focus) {\n        this._startShowingOrUpdateHover(new HoverRangeAnchor(0, range, undefined, undefined), mode, source, focus, null);\n    }\n    /**\n     * Returns true if the hover shows now or will show.\n     */\n    _startShowingOrUpdateHover(anchor, mode, source, focus, mouseEvent) {\n        if (!this._widget.position || !this._currentResult) {\n            // The hover is not visible\n            if (anchor) {\n                this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n                return true;\n            }\n            return false;\n        }\n        // The hover is currently visible\n        const hoverIsSticky = this._editor.getOption(60 /* EditorOption.hover */).sticky;\n        const isGettingCloser = (hoverIsSticky && mouseEvent && this._widget.isMouseGettingCloser(mouseEvent.event.posx, mouseEvent.event.posy));\n        if (isGettingCloser) {\n            // The mouse is getting closer to the hover, so we will keep the hover untouched\n            // But we will kick off a hover update at the new anchor, insisting on keeping the hover visible.\n            if (anchor) {\n                this._startHoverOperationIfNecessary(anchor, mode, source, focus, true);\n            }\n            return true;\n        }\n        if (!anchor) {\n            this._setCurrentResult(null);\n            return false;\n        }\n        if (anchor && this._currentResult.anchor.equals(anchor)) {\n            // The widget is currently showing results for the exact same anchor, so no update is needed\n            return true;\n        }\n        if (!anchor.canAdoptVisibleHover(this._currentResult.anchor, this._widget.position)) {\n            // The new anchor is not compatible with the previous anchor\n            this._setCurrentResult(null);\n            this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n            return true;\n        }\n        // We aren't getting any closer to the hover, so we will filter existing results\n        // and keep those which also apply to the new anchor.\n        this._setCurrentResult(this._currentResult.filter(anchor));\n        this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n        return true;\n    }\n    _startHoverOperationIfNecessary(anchor, mode, source, focus, insistOnKeepingHoverVisible) {\n        if (this._computer.anchor && this._computer.anchor.equals(anchor)) {\n            // We have to start a hover operation at the exact same anchor as before, so no work is needed\n            return;\n        }\n        this._hoverOperation.cancel();\n        this._computer.anchor = anchor;\n        this._computer.shouldFocus = focus;\n        this._computer.source = source;\n        this._computer.insistOnKeepingHoverVisible = insistOnKeepingHoverVisible;\n        this._hoverOperation.start(mode);\n    }\n    _setCurrentResult(hoverResult) {\n        if (this._currentResult === hoverResult) {\n            // avoid updating the DOM to avoid resetting the user selection\n            return;\n        }\n        if (hoverResult && hoverResult.messages.length === 0) {\n            hoverResult = null;\n        }\n        this._currentResult = hoverResult;\n        if (this._currentResult) {\n            this._renderMessages(this._currentResult.anchor, this._currentResult.messages);\n        }\n        else {\n            this._widget.hide();\n        }\n    }\n    hide() {\n        this._computer.anchor = null;\n        this._hoverOperation.cancel();\n        this._setCurrentResult(null);\n    }\n    get isColorPickerVisible() {\n        return this._widget.isColorPickerVisible;\n    }\n    get isVisibleFromKeyboard() {\n        return this._widget.isVisibleFromKeyboard;\n    }\n    get isVisible() {\n        return this._widget.isVisible;\n    }\n    get isFocused() {\n        return this._widget.isFocused;\n    }\n    get isResizing() {\n        return this._widget.isResizing;\n    }\n    containsNode(node) {\n        return (node ? this._widget.getDomNode().contains(node) : false);\n    }\n    _addLoadingMessage(result) {\n        if (this._computer.anchor) {\n            for (const participant of this._participants) {\n                if (participant.createLoadingMessage) {\n                    const loadingMessage = participant.createLoadingMessage(this._computer.anchor);\n                    if (loadingMessage) {\n                        return result.slice(0).concat([loadingMessage]);\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    _withResult(hoverResult) {\n        if (this._widget.position && this._currentResult && this._currentResult.isComplete) {\n            // The hover is visible with a previous complete result.\n            if (!hoverResult.isComplete) {\n                // Instead of rendering the new partial result, we wait for the result to be complete.\n                return;\n            }\n            if (this._computer.insistOnKeepingHoverVisible && hoverResult.messages.length === 0) {\n                // The hover would now hide normally, so we'll keep the previous messages\n                return;\n            }\n        }\n        this._setCurrentResult(hoverResult);\n    }\n    _renderMessages(anchor, messages) {\n        const { showAtPosition, showAtSecondaryPosition, highlightRange } = ContentHoverController_1.computeHoverRanges(this._editor, anchor.range, messages);\n        const disposables = new DisposableStore();\n        const statusBar = disposables.add(new EditorHoverStatusBar(this._keybindingService));\n        const fragment = document.createDocumentFragment();\n        let colorPicker = null;\n        const context = {\n            fragment,\n            statusBar,\n            setColorPicker: (widget) => colorPicker = widget,\n            onContentsChanged: () => this._widget.onContentsChanged(),\n            setMinimumDimensions: (dimensions) => this._widget.setMinimumDimensions(dimensions),\n            hide: () => this.hide()\n        };\n        for (const participant of this._participants) {\n            const hoverParts = messages.filter(msg => msg.owner === participant);\n            if (hoverParts.length > 0) {\n                disposables.add(participant.renderHoverParts(context, hoverParts));\n            }\n        }\n        const isBeforeContent = messages.some(m => m.isBeforeContent);\n        if (statusBar.hasContent) {\n            fragment.appendChild(statusBar.hoverElement);\n        }\n        if (fragment.hasChildNodes()) {\n            if (highlightRange) {\n                const highlightDecoration = this._editor.createDecorationsCollection();\n                highlightDecoration.set([{\n                        range: highlightRange,\n                        options: ContentHoverController_1._DECORATION_OPTIONS\n                    }]);\n                disposables.add(toDisposable(() => {\n                    highlightDecoration.clear();\n                }));\n            }\n            this._widget.showAt(fragment, new ContentHoverVisibleData(colorPicker, showAtPosition, showAtSecondaryPosition, this._editor.getOption(60 /* EditorOption.hover */).above, this._computer.shouldFocus, this._computer.source, isBeforeContent, anchor.initialMousePosX, anchor.initialMousePosY, disposables));\n        }\n        else {\n            disposables.dispose();\n        }\n    }\n    static computeHoverRanges(editor, anchorRange, messages) {\n        let startColumnBoundary = 1;\n        if (editor.hasModel()) {\n            // Ensure the range is on the current view line\n            const viewModel = editor._getViewModel();\n            const coordinatesConverter = viewModel.coordinatesConverter;\n            const anchorViewRange = coordinatesConverter.convertModelRangeToViewRange(anchorRange);\n            const anchorViewRangeStart = new Position(anchorViewRange.startLineNumber, viewModel.getLineMinColumn(anchorViewRange.startLineNumber));\n            startColumnBoundary = coordinatesConverter.convertViewPositionToModelPosition(anchorViewRangeStart).column;\n        }\n        // The anchor range is always on a single line\n        const anchorLineNumber = anchorRange.startLineNumber;\n        let renderStartColumn = anchorRange.startColumn;\n        let highlightRange = messages[0].range;\n        let forceShowAtRange = null;\n        for (const msg of messages) {\n            highlightRange = Range.plusRange(highlightRange, msg.range);\n            if (msg.range.startLineNumber === anchorLineNumber && msg.range.endLineNumber === anchorLineNumber) {\n                // this message has a range that is completely sitting on the line of the anchor\n                renderStartColumn = Math.max(Math.min(renderStartColumn, msg.range.startColumn), startColumnBoundary);\n            }\n            if (msg.forceShowAtRange) {\n                forceShowAtRange = msg.range;\n            }\n        }\n        return {\n            showAtPosition: forceShowAtRange ? forceShowAtRange.getStartPosition() : new Position(anchorLineNumber, anchorRange.startColumn),\n            showAtSecondaryPosition: forceShowAtRange ? forceShowAtRange.getStartPosition() : new Position(anchorLineNumber, renderStartColumn),\n            highlightRange\n        };\n    }\n    focus() {\n        this._widget.focus();\n    }\n    scrollUp() {\n        this._widget.scrollUp();\n    }\n    scrollDown() {\n        this._widget.scrollDown();\n    }\n    scrollLeft() {\n        this._widget.scrollLeft();\n    }\n    scrollRight() {\n        this._widget.scrollRight();\n    }\n    pageUp() {\n        this._widget.pageUp();\n    }\n    pageDown() {\n        this._widget.pageDown();\n    }\n    goToTop() {\n        this._widget.goToTop();\n    }\n    goToBottom() {\n        this._widget.goToBottom();\n    }\n};\nContentHoverController._DECORATION_OPTIONS = ModelDecorationOptions.register({\n    description: 'content-hover-highlight',\n    className: 'hoverHighlight'\n});\nContentHoverController = ContentHoverController_1 = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IKeybindingService)\n], ContentHoverController);\nexport { ContentHoverController };\nclass HoverResult {\n    constructor(anchor, messages, isComplete) {\n        this.anchor = anchor;\n        this.messages = messages;\n        this.isComplete = isComplete;\n    }\n    filter(anchor) {\n        const filteredMessages = this.messages.filter((m) => m.isValidForHoverAnchor(anchor));\n        if (filteredMessages.length === this.messages.length) {\n            return this;\n        }\n        return new FilteredHoverResult(this, this.anchor, filteredMessages, this.isComplete);\n    }\n}\nclass FilteredHoverResult extends HoverResult {\n    constructor(original, anchor, messages, isComplete) {\n        super(anchor, messages, isComplete);\n        this.original = original;\n    }\n    filter(anchor) {\n        return this.original.filter(anchor);\n    }\n}\nclass ContentHoverVisibleData {\n    constructor(colorPicker, showAtPosition, showAtSecondaryPosition, preferAbove, stoleFocus, source, isBeforeContent, initialMousePosX, initialMousePosY, disposables) {\n        this.colorPicker = colorPicker;\n        this.showAtPosition = showAtPosition;\n        this.showAtSecondaryPosition = showAtSecondaryPosition;\n        this.preferAbove = preferAbove;\n        this.stoleFocus = stoleFocus;\n        this.source = source;\n        this.isBeforeContent = isBeforeContent;\n        this.initialMousePosX = initialMousePosX;\n        this.initialMousePosY = initialMousePosY;\n        this.disposables = disposables;\n        this.closestMouseDistance = undefined;\n    }\n}\nconst HORIZONTAL_SCROLLING_BY = 30;\nconst SCROLLBAR_WIDTH = 10;\nconst CONTAINER_HEIGHT_PADDING = 6;\nlet ContentHoverWidget = ContentHoverWidget_1 = class ContentHoverWidget extends ResizableContentWidget {\n    get isColorPickerVisible() {\n        var _a;\n        return Boolean((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.colorPicker);\n    }\n    get isVisibleFromKeyboard() {\n        var _a;\n        return (((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.source) === 1 /* HoverStartSource.Keyboard */);\n    }\n    get isVisible() {\n        var _a;\n        return (_a = this._hoverVisibleKey.get()) !== null && _a !== void 0 ? _a : false;\n    }\n    get isFocused() {\n        var _a;\n        return (_a = this._hoverFocusedKey.get()) !== null && _a !== void 0 ? _a : false;\n    }\n    constructor(editor, contextKeyService, _configurationService, _accessibilityService, _keybindingService) {\n        const minimumHeight = editor.getOption(66 /* EditorOption.lineHeight */) + 8;\n        const minimumWidth = 150;\n        const minimumSize = new dom.Dimension(minimumWidth, minimumHeight);\n        super(editor, minimumSize);\n        this._configurationService = _configurationService;\n        this._accessibilityService = _accessibilityService;\n        this._keybindingService = _keybindingService;\n        this._hover = this._register(new HoverWidget());\n        this._minimumSize = minimumSize;\n        this._hoverVisibleKey = EditorContextKeys.hoverVisible.bindTo(contextKeyService);\n        this._hoverFocusedKey = EditorContextKeys.hoverFocused.bindTo(contextKeyService);\n        dom.append(this._resizableNode.domNode, this._hover.containerDomNode);\n        this._resizableNode.domNode.style.zIndex = '50';\n        this._register(this._editor.onDidLayoutChange(() => this._layout()));\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(50 /* EditorOption.fontInfo */)) {\n                this._updateFont();\n            }\n        }));\n        const focusTracker = this._register(dom.trackFocus(this._resizableNode.domNode));\n        this._register(focusTracker.onDidFocus(() => {\n            this._hoverFocusedKey.set(true);\n        }));\n        this._register(focusTracker.onDidBlur(() => {\n            this._hoverFocusedKey.set(false);\n        }));\n        this._setHoverData(undefined);\n        this._layout();\n        this._editor.addContentWidget(this);\n    }\n    dispose() {\n        var _a;\n        super.dispose();\n        (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.disposables.dispose();\n        this._editor.removeContentWidget(this);\n    }\n    getId() {\n        return ContentHoverWidget_1.ID;\n    }\n    static _applyDimensions(container, width, height) {\n        const transformedWidth = typeof width === 'number' ? `${width}px` : width;\n        const transformedHeight = typeof height === 'number' ? `${height}px` : height;\n        container.style.width = transformedWidth;\n        container.style.height = transformedHeight;\n    }\n    _setContentsDomNodeDimensions(width, height) {\n        const contentsDomNode = this._hover.contentsDomNode;\n        return ContentHoverWidget_1._applyDimensions(contentsDomNode, width, height);\n    }\n    _setContainerDomNodeDimensions(width, height) {\n        const containerDomNode = this._hover.containerDomNode;\n        return ContentHoverWidget_1._applyDimensions(containerDomNode, width, height);\n    }\n    _setHoverWidgetDimensions(width, height) {\n        this._setContentsDomNodeDimensions(width, height);\n        this._setContainerDomNodeDimensions(width, height);\n        this._layoutContentWidget();\n    }\n    static _applyMaxDimensions(container, width, height) {\n        const transformedWidth = typeof width === 'number' ? `${width}px` : width;\n        const transformedHeight = typeof height === 'number' ? `${height}px` : height;\n        container.style.maxWidth = transformedWidth;\n        container.style.maxHeight = transformedHeight;\n    }\n    _setHoverWidgetMaxDimensions(width, height) {\n        ContentHoverWidget_1._applyMaxDimensions(this._hover.contentsDomNode, width, height);\n        ContentHoverWidget_1._applyMaxDimensions(this._hover.containerDomNode, width, height);\n        this._hover.containerDomNode.style.setProperty('--vscode-hover-maxWidth', typeof width === 'number' ? `${width}px` : width);\n        this._layoutContentWidget();\n    }\n    _hasHorizontalScrollbar() {\n        const scrollDimensions = this._hover.scrollbar.getScrollDimensions();\n        const hasHorizontalScrollbar = scrollDimensions.scrollWidth > scrollDimensions.width;\n        return hasHorizontalScrollbar;\n    }\n    _adjustContentsBottomPadding() {\n        const contentsDomNode = this._hover.contentsDomNode;\n        const extraBottomPadding = `${this._hover.scrollbar.options.horizontalScrollbarSize}px`;\n        if (contentsDomNode.style.paddingBottom !== extraBottomPadding) {\n            contentsDomNode.style.paddingBottom = extraBottomPadding;\n        }\n    }\n    _setAdjustedHoverWidgetDimensions(size) {\n        this._setHoverWidgetMaxDimensions('none', 'none');\n        const width = size.width;\n        const height = size.height;\n        this._setHoverWidgetDimensions(width, height);\n        // measure if widget has horizontal scrollbar after setting the dimensions\n        if (this._hasHorizontalScrollbar()) {\n            this._adjustContentsBottomPadding();\n            this._setContentsDomNodeDimensions(width, height - SCROLLBAR_WIDTH);\n        }\n    }\n    _updateResizableNodeMaxDimensions() {\n        var _a, _b;\n        const maxRenderingWidth = (_a = this._findMaximumRenderingWidth()) !== null && _a !== void 0 ? _a : Infinity;\n        const maxRenderingHeight = (_b = this._findMaximumRenderingHeight()) !== null && _b !== void 0 ? _b : Infinity;\n        this._resizableNode.maxSize = new dom.Dimension(maxRenderingWidth, maxRenderingHeight);\n        this._setHoverWidgetMaxDimensions(maxRenderingWidth, maxRenderingHeight);\n    }\n    _resize(size) {\n        var _a, _b;\n        ContentHoverWidget_1._lastDimensions = new dom.Dimension(size.width, size.height);\n        this._setAdjustedHoverWidgetDimensions(size);\n        this._resizableNode.layout(size.height, size.width);\n        this._updateResizableNodeMaxDimensions();\n        this._hover.scrollbar.scanDomNode();\n        this._editor.layoutContentWidget(this);\n        (_b = (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.colorPicker) === null || _b === void 0 ? void 0 : _b.layout();\n    }\n    _findAvailableSpaceVertically() {\n        var _a;\n        const position = (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.showAtPosition;\n        if (!position) {\n            return;\n        }\n        return this._positionPreference === 1 /* ContentWidgetPositionPreference.ABOVE */ ? this._availableVerticalSpaceAbove(position) : this._availableVerticalSpaceBelow(position);\n    }\n    _findMaximumRenderingHeight() {\n        const availableSpace = this._findAvailableSpaceVertically();\n        if (!availableSpace) {\n            return;\n        }\n        // Padding needed in order to stop the resizing down to a smaller height\n        let maximumHeight = CONTAINER_HEIGHT_PADDING;\n        Array.from(this._hover.contentsDomNode.children).forEach((hoverPart) => {\n            maximumHeight += hoverPart.clientHeight;\n        });\n        if (this._hasHorizontalScrollbar()) {\n            maximumHeight += SCROLLBAR_WIDTH;\n        }\n        return Math.min(availableSpace, maximumHeight);\n    }\n    _isHoverTextOverflowing() {\n        // To find out if the text is overflowing, we will disable wrapping, check the widths, and then re-enable wrapping\n        this._hover.containerDomNode.style.setProperty('--vscode-hover-whiteSpace', 'nowrap');\n        this._hover.containerDomNode.style.setProperty('--vscode-hover-sourceWhiteSpace', 'nowrap');\n        const overflowing = Array.from(this._hover.contentsDomNode.children).some((hoverElement) => {\n            return hoverElement.scrollWidth > hoverElement.clientWidth;\n        });\n        this._hover.containerDomNode.style.removeProperty('--vscode-hover-whiteSpace');\n        this._hover.containerDomNode.style.removeProperty('--vscode-hover-sourceWhiteSpace');\n        return overflowing;\n    }\n    _findMaximumRenderingWidth() {\n        if (!this._editor || !this._editor.hasModel()) {\n            return;\n        }\n        const overflowing = this._isHoverTextOverflowing();\n        const initialWidth = (typeof this._contentWidth === 'undefined'\n            ? 0\n            : this._contentWidth - 2 // - 2 for the borders\n        );\n        if (overflowing || this._hover.containerDomNode.clientWidth < initialWidth) {\n            const bodyBoxWidth = dom.getClientArea(this._hover.containerDomNode.ownerDocument.body).width;\n            const horizontalPadding = 14;\n            return bodyBoxWidth - horizontalPadding;\n        }\n        else {\n            return this._hover.containerDomNode.clientWidth + 2;\n        }\n    }\n    isMouseGettingCloser(posx, posy) {\n        if (!this._visibleData) {\n            return false;\n        }\n        if (typeof this._visibleData.initialMousePosX === 'undefined' || typeof this._visibleData.initialMousePosY === 'undefined') {\n            this._visibleData.initialMousePosX = posx;\n            this._visibleData.initialMousePosY = posy;\n            return false;\n        }\n        const widgetRect = dom.getDomNodePagePosition(this.getDomNode());\n        if (typeof this._visibleData.closestMouseDistance === 'undefined') {\n            this._visibleData.closestMouseDistance = computeDistanceFromPointToRectangle(this._visibleData.initialMousePosX, this._visibleData.initialMousePosY, widgetRect.left, widgetRect.top, widgetRect.width, widgetRect.height);\n        }\n        const distance = computeDistanceFromPointToRectangle(posx, posy, widgetRect.left, widgetRect.top, widgetRect.width, widgetRect.height);\n        if (distance > this._visibleData.closestMouseDistance + 4 /* tolerance of 4 pixels */) {\n            // The mouse is getting farther away\n            return false;\n        }\n        this._visibleData.closestMouseDistance = Math.min(this._visibleData.closestMouseDistance, distance);\n        return true;\n    }\n    _setHoverData(hoverData) {\n        var _a;\n        (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.disposables.dispose();\n        this._visibleData = hoverData;\n        this._hoverVisibleKey.set(!!hoverData);\n        this._hover.containerDomNode.classList.toggle('hidden', !hoverData);\n    }\n    _layout() {\n        const { fontSize, lineHeight } = this._editor.getOption(50 /* EditorOption.fontInfo */);\n        const contentsDomNode = this._hover.contentsDomNode;\n        contentsDomNode.style.fontSize = `${fontSize}px`;\n        contentsDomNode.style.lineHeight = `${lineHeight / fontSize}`;\n        this._updateMaxDimensions();\n    }\n    _updateFont() {\n        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n        codeClasses.forEach(node => this._editor.applyFontInfo(node));\n    }\n    _updateContent(node) {\n        const contentsDomNode = this._hover.contentsDomNode;\n        contentsDomNode.style.paddingBottom = '';\n        contentsDomNode.textContent = '';\n        contentsDomNode.appendChild(node);\n    }\n    _layoutContentWidget() {\n        this._editor.layoutContentWidget(this);\n        this._hover.onContentsChanged();\n    }\n    _updateMaxDimensions() {\n        const height = Math.max(this._editor.getLayoutInfo().height / 4, 250, ContentHoverWidget_1._lastDimensions.height);\n        const width = Math.max(this._editor.getLayoutInfo().width * 0.66, 500, ContentHoverWidget_1._lastDimensions.width);\n        this._setHoverWidgetMaxDimensions(width, height);\n    }\n    _render(node, hoverData) {\n        this._setHoverData(hoverData);\n        this._updateFont();\n        this._updateContent(node);\n        this._updateMaxDimensions();\n        this.onContentsChanged();\n        // Simply force a synchronous render on the editor\n        // such that the widget does not really render with left = '0px'\n        this._editor.render();\n    }\n    getPosition() {\n        var _a;\n        if (!this._visibleData) {\n            return null;\n        }\n        return {\n            position: this._visibleData.showAtPosition,\n            secondaryPosition: this._visibleData.showAtSecondaryPosition,\n            positionAffinity: this._visibleData.isBeforeContent ? 3 /* PositionAffinity.LeftOfInjectedText */ : undefined,\n            preference: [(_a = this._positionPreference) !== null && _a !== void 0 ? _a : 1 /* ContentWidgetPositionPreference.ABOVE */]\n        };\n    }\n    showAt(node, hoverData) {\n        var _a, _b, _c, _d;\n        if (!this._editor || !this._editor.hasModel()) {\n            return;\n        }\n        this._render(node, hoverData);\n        const widgetHeight = dom.getTotalHeight(this._hover.containerDomNode);\n        const widgetPosition = hoverData.showAtPosition;\n        this._positionPreference = (_a = this._findPositionPreference(widgetHeight, widgetPosition)) !== null && _a !== void 0 ? _a : 1 /* ContentWidgetPositionPreference.ABOVE */;\n        // See https://github.com/microsoft/vscode/issues/140339\n        // TODO: Doing a second layout of the hover after force rendering the editor\n        this.onContentsChanged();\n        if (hoverData.stoleFocus) {\n            this._hover.containerDomNode.focus();\n        }\n        (_b = hoverData.colorPicker) === null || _b === void 0 ? void 0 : _b.layout();\n        // The aria label overrides the label, so if we add to it, add the contents of the hover\n        const accessibleViewHint = getHoverAccessibleViewHint(this._configurationService.getValue('accessibility.verbosity.hover') === true && this._accessibilityService.isScreenReaderOptimized(), (_d = (_c = this._keybindingService.lookupKeybinding('editor.action.accessibleView')) === null || _c === void 0 ? void 0 : _c.getAriaLabel()) !== null && _d !== void 0 ? _d : '');\n        if (accessibleViewHint) {\n            this._hover.contentsDomNode.ariaLabel = this._hover.contentsDomNode.textContent + ', ' + accessibleViewHint;\n        }\n    }\n    hide() {\n        if (!this._visibleData) {\n            return;\n        }\n        const stoleFocus = this._visibleData.stoleFocus || this._hoverFocusedKey.get();\n        this._setHoverData(undefined);\n        this._resizableNode.maxSize = new dom.Dimension(Infinity, Infinity);\n        this._resizableNode.clearSashHoverState();\n        this._hoverFocusedKey.set(false);\n        this._editor.layoutContentWidget(this);\n        if (stoleFocus) {\n            this._editor.focus();\n        }\n    }\n    _removeConstraintsRenderNormally() {\n        // Added because otherwise the initial size of the hover content is smaller than should be\n        const layoutInfo = this._editor.getLayoutInfo();\n        this._resizableNode.layout(layoutInfo.height, layoutInfo.width);\n        this._setHoverWidgetDimensions('auto', 'auto');\n    }\n    _adjustHoverHeightForScrollbar(height) {\n        var _a;\n        const containerDomNode = this._hover.containerDomNode;\n        const contentsDomNode = this._hover.contentsDomNode;\n        const maxRenderingHeight = (_a = this._findMaximumRenderingHeight()) !== null && _a !== void 0 ? _a : Infinity;\n        this._setContainerDomNodeDimensions(dom.getTotalWidth(containerDomNode), Math.min(maxRenderingHeight, height));\n        this._setContentsDomNodeDimensions(dom.getTotalWidth(contentsDomNode), Math.min(maxRenderingHeight, height - SCROLLBAR_WIDTH));\n    }\n    setMinimumDimensions(dimensions) {\n        // We combine the new minimum dimensions with the previous ones\n        this._minimumSize = new dom.Dimension(Math.max(this._minimumSize.width, dimensions.width), Math.max(this._minimumSize.height, dimensions.height));\n        this._updateMinimumWidth();\n    }\n    _updateMinimumWidth() {\n        const width = (typeof this._contentWidth === 'undefined'\n            ? this._minimumSize.width\n            : Math.min(this._contentWidth, this._minimumSize.width));\n        // We want to avoid that the hover is artificially large, so we use the content width as minimum width\n        this._resizableNode.minSize = new dom.Dimension(width, this._minimumSize.height);\n    }\n    onContentsChanged() {\n        var _a;\n        this._removeConstraintsRenderNormally();\n        const containerDomNode = this._hover.containerDomNode;\n        let height = dom.getTotalHeight(containerDomNode);\n        let width = dom.getTotalWidth(containerDomNode);\n        this._resizableNode.layout(height, width);\n        this._setHoverWidgetDimensions(width, height);\n        height = dom.getTotalHeight(containerDomNode);\n        width = dom.getTotalWidth(containerDomNode);\n        this._contentWidth = width;\n        this._updateMinimumWidth();\n        this._resizableNode.layout(height, width);\n        if (this._hasHorizontalScrollbar()) {\n            this._adjustContentsBottomPadding();\n            this._adjustHoverHeightForScrollbar(height);\n        }\n        if ((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.showAtPosition) {\n            const widgetHeight = dom.getTotalHeight(this._hover.containerDomNode);\n            this._positionPreference = this._findPositionPreference(widgetHeight, this._visibleData.showAtPosition);\n        }\n        this._layoutContentWidget();\n    }\n    focus() {\n        this._hover.containerDomNode.focus();\n    }\n    scrollUp() {\n        const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n        const fontInfo = this._editor.getOption(50 /* EditorOption.fontInfo */);\n        this._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop - fontInfo.lineHeight });\n    }\n    scrollDown() {\n        const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n        const fontInfo = this._editor.getOption(50 /* EditorOption.fontInfo */);\n        this._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop + fontInfo.lineHeight });\n    }\n    scrollLeft() {\n        const scrollLeft = this._hover.scrollbar.getScrollPosition().scrollLeft;\n        this._hover.scrollbar.setScrollPosition({ scrollLeft: scrollLeft - HORIZONTAL_SCROLLING_BY });\n    }\n    scrollRight() {\n        const scrollLeft = this._hover.scrollbar.getScrollPosition().scrollLeft;\n        this._hover.scrollbar.setScrollPosition({ scrollLeft: scrollLeft + HORIZONTAL_SCROLLING_BY });\n    }\n    pageUp() {\n        const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n        const scrollHeight = this._hover.scrollbar.getScrollDimensions().height;\n        this._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop - scrollHeight });\n    }\n    pageDown() {\n        const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n        const scrollHeight = this._hover.scrollbar.getScrollDimensions().height;\n        this._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop + scrollHeight });\n    }\n    goToTop() {\n        this._hover.scrollbar.setScrollPosition({ scrollTop: 0 });\n    }\n    goToBottom() {\n        this._hover.scrollbar.setScrollPosition({ scrollTop: this._hover.scrollbar.getScrollDimensions().scrollHeight });\n    }\n};\nContentHoverWidget.ID = 'editor.contrib.resizableContentHoverWidget';\nContentHoverWidget._lastDimensions = new dom.Dimension(0, 0);\nContentHoverWidget = ContentHoverWidget_1 = __decorate([\n    __param(1, IContextKeyService),\n    __param(2, IConfigurationService),\n    __param(3, IAccessibilityService),\n    __param(4, IKeybindingService)\n], ContentHoverWidget);\nexport { ContentHoverWidget };\nlet EditorHoverStatusBar = class EditorHoverStatusBar extends Disposable {\n    get hasContent() {\n        return this._hasContent;\n    }\n    constructor(_keybindingService) {\n        super();\n        this._keybindingService = _keybindingService;\n        this._hasContent = false;\n        this.hoverElement = $('div.hover-row.status-bar');\n        this.actionsElement = dom.append(this.hoverElement, $('div.actions'));\n    }\n    addAction(actionOptions) {\n        const keybinding = this._keybindingService.lookupKeybinding(actionOptions.commandId);\n        const keybindingLabel = keybinding ? keybinding.getLabel() : null;\n        this._hasContent = true;\n        return this._register(HoverAction.render(this.actionsElement, actionOptions, keybindingLabel));\n    }\n    append(element) {\n        const result = dom.append(this.actionsElement, element);\n        this._hasContent = true;\n        return result;\n    }\n};\nEditorHoverStatusBar = __decorate([\n    __param(0, IKeybindingService)\n], EditorHoverStatusBar);\nexport { EditorHoverStatusBar };\nclass ContentHoverComputer {\n    get anchor() { return this._anchor; }\n    set anchor(value) { this._anchor = value; }\n    get shouldFocus() { return this._shouldFocus; }\n    set shouldFocus(value) { this._shouldFocus = value; }\n    get source() { return this._source; }\n    set source(value) { this._source = value; }\n    get insistOnKeepingHoverVisible() { return this._insistOnKeepingHoverVisible; }\n    set insistOnKeepingHoverVisible(value) { this._insistOnKeepingHoverVisible = value; }\n    constructor(_editor, _participants) {\n        this._editor = _editor;\n        this._participants = _participants;\n        this._anchor = null;\n        this._shouldFocus = false;\n        this._source = 0 /* HoverStartSource.Mouse */;\n        this._insistOnKeepingHoverVisible = false;\n    }\n    static _getLineDecorations(editor, anchor) {\n        if (anchor.type !== 1 /* HoverAnchorType.Range */ && !anchor.supportsMarkerHover) {\n            return [];\n        }\n        const model = editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        if (lineNumber > model.getLineCount()) {\n            // invalid line\n            return [];\n        }\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        return editor.getLineDecorations(lineNumber).filter((d) => {\n            if (d.options.isWholeLine) {\n                return true;\n            }\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            if (d.options.showIfCollapsed) {\n                // Relax check around `showIfCollapsed` decorations to also include +/- 1 character\n                if (startColumn > anchor.range.startColumn + 1 || anchor.range.endColumn - 1 > endColumn) {\n                    return false;\n                }\n            }\n            else {\n                if (startColumn > anchor.range.startColumn || anchor.range.endColumn > endColumn) {\n                    return false;\n                }\n            }\n            return true;\n        });\n    }\n    computeAsync(token) {\n        const anchor = this._anchor;\n        if (!this._editor.hasModel() || !anchor) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, anchor);\n        return AsyncIterableObject.merge(this._participants.map((participant) => {\n            if (!participant.computeAsync) {\n                return AsyncIterableObject.EMPTY;\n            }\n            return participant.computeAsync(anchor, lineDecorations, token);\n        }));\n    }\n    computeSync() {\n        if (!this._editor.hasModel() || !this._anchor) {\n            return [];\n        }\n        const lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, this._anchor);\n        let result = [];\n        for (const participant of this._participants) {\n            result = result.concat(participant.computeSync(this._anchor, lineDecorations));\n        }\n        return coalesce(result);\n    }\n}\nfunction computeDistanceFromPointToRectangle(pointX, pointY, left, top, width, height) {\n    const x = (left + width / 2); // x center of rectangle\n    const y = (top + height / 2); // y center of rectangle\n    const dx = Math.max(Math.abs(pointX - x) - width / 2, 0);\n    const dy = Math.max(Math.abs(pointY - y) - height / 2, 0);\n    return Math.sqrt(dx * dx + dy * dy);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport class HoverProviderResult {\n    constructor(provider, hover, ordinal) {\n        this.provider = provider;\n        this.hover = hover;\n        this.ordinal = ordinal;\n    }\n}\nfunction executeProvider(provider, ordinal, model, position, token) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const result = yield Promise.resolve(provider.provideHover(model, position, token));\n            if (result && isValid(result)) {\n                return new HoverProviderResult(provider, result, ordinal);\n            }\n        }\n        catch (err) {\n            onUnexpectedExternalError(err);\n        }\n        return undefined;\n    });\n}\nexport function getHover(registry, model, position, token) {\n    const providers = registry.ordered(model);\n    const promises = providers.map((provider, index) => executeProvider(provider, index, model, position, token));\n    return AsyncIterableObject.fromPromises(promises).coalesce();\n}\nexport function getHoverPromise(registry, model, position, token) {\n    return getHover(registry, model, position, token).map(item => item.hover).toPromise();\n}\nregisterModelAndPositionCommand('_executeHoverProvider', (accessor, model, position) => {\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    return getHoverPromise(languageFeaturesService.hoverProvider, model, position, CancellationToken.None);\n});\nfunction isValid(result) {\n    const hasRange = (typeof result.range !== 'undefined');\n    const hasHtmlContent = typeof result.contents !== 'undefined' && result.contents && result.contents.length > 0;\n    return hasRange && hasHtmlContent;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray } from '../../../../base/common/arrays.js';\nimport { isEmptyMarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { HoverWidget } from '../../../../base/browser/ui/hover/hoverWidget.js';\nconst $ = dom.$;\nexport class MarginHoverWidget extends Disposable {\n    constructor(editor, languageService, openerService) {\n        super();\n        this._renderDisposeables = this._register(new DisposableStore());\n        this._editor = editor;\n        this._isVisible = false;\n        this._messages = [];\n        this._hover = this._register(new HoverWidget());\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n        this._markdownRenderer = this._register(new MarkdownRenderer({ editor: this._editor }, languageService, openerService));\n        this._computer = new MarginHoverComputer(this._editor);\n        this._hoverOperation = this._register(new HoverOperation(this._editor, this._computer));\n        this._register(this._hoverOperation.onResult((result) => {\n            this._withResult(result.value);\n        }));\n        this._register(this._editor.onDidChangeModelDecorations(() => this._onModelDecorationsChanged()));\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(50 /* EditorOption.fontInfo */)) {\n                this._updateFont();\n            }\n        }));\n        this._editor.addOverlayWidget(this);\n    }\n    dispose() {\n        this._editor.removeOverlayWidget(this);\n        super.dispose();\n    }\n    getId() {\n        return MarginHoverWidget.ID;\n    }\n    getDomNode() {\n        return this._hover.containerDomNode;\n    }\n    getPosition() {\n        return null;\n    }\n    _updateFont() {\n        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n        codeClasses.forEach(node => this._editor.applyFontInfo(node));\n    }\n    _onModelDecorationsChanged() {\n        if (this._isVisible) {\n            // The decorations have changed and the hover is visible,\n            // we need to recompute the displayed text\n            this._hoverOperation.cancel();\n            this._hoverOperation.start(0 /* HoverStartMode.Delayed */);\n        }\n    }\n    startShowingAt(lineNumber) {\n        if (this._computer.lineNumber === lineNumber) {\n            // We have to show the widget at the exact same line number as before, so no work is needed\n            return;\n        }\n        this._hoverOperation.cancel();\n        this.hide();\n        this._computer.lineNumber = lineNumber;\n        this._hoverOperation.start(0 /* HoverStartMode.Delayed */);\n    }\n    hide() {\n        this._computer.lineNumber = -1;\n        this._hoverOperation.cancel();\n        if (!this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n    }\n    _withResult(result) {\n        this._messages = result;\n        if (this._messages.length > 0) {\n            this._renderMessages(this._computer.lineNumber, this._messages);\n        }\n        else {\n            this.hide();\n        }\n    }\n    _renderMessages(lineNumber, messages) {\n        this._renderDisposeables.clear();\n        const fragment = document.createDocumentFragment();\n        for (const msg of messages) {\n            const markdownHoverElement = $('div.hover-row.markdown-hover');\n            const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n            const renderedContents = this._renderDisposeables.add(this._markdownRenderer.render(msg.value));\n            hoverContentsElement.appendChild(renderedContents.element);\n            fragment.appendChild(markdownHoverElement);\n        }\n        this._updateContents(fragment);\n        this._showAt(lineNumber);\n    }\n    _updateContents(node) {\n        this._hover.contentsDomNode.textContent = '';\n        this._hover.contentsDomNode.appendChild(node);\n        this._updateFont();\n    }\n    _showAt(lineNumber) {\n        if (!this._isVisible) {\n            this._isVisible = true;\n            this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n        }\n        const editorLayout = this._editor.getLayoutInfo();\n        const topForLineNumber = this._editor.getTopForLineNumber(lineNumber);\n        const editorScrollTop = this._editor.getScrollTop();\n        const lineHeight = this._editor.getOption(66 /* EditorOption.lineHeight */);\n        const nodeHeight = this._hover.containerDomNode.clientHeight;\n        const top = topForLineNumber - editorScrollTop - ((nodeHeight - lineHeight) / 2);\n        this._hover.containerDomNode.style.left = `${editorLayout.glyphMarginLeft + editorLayout.glyphMarginWidth}px`;\n        this._hover.containerDomNode.style.top = `${Math.max(Math.round(top), 0)}px`;\n    }\n}\nMarginHoverWidget.ID = 'editor.contrib.modesGlyphHoverWidget';\nclass MarginHoverComputer {\n    get lineNumber() {\n        return this._lineNumber;\n    }\n    set lineNumber(value) {\n        this._lineNumber = value;\n    }\n    constructor(_editor) {\n        this._editor = _editor;\n        this._lineNumber = -1;\n    }\n    computeSync() {\n        const toHoverMessage = (contents) => {\n            return {\n                value: contents\n            };\n        };\n        const lineDecorations = this._editor.getLineDecorations(this._lineNumber);\n        const result = [];\n        if (!lineDecorations) {\n            return result;\n        }\n        for (const d of lineDecorations) {\n            if (!d.options.glyphMarginClassName) {\n                continue;\n            }\n            const hoverMessage = d.options.glyphMarginHoverMessage;\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n                continue;\n            }\n            result.push(...asArray(hoverMessage).map(toHoverMessage));\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, disposableTimeout } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { basename } from '../../../../base/common/resources.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { IMarkerDecorationsService } from '../../../common/services/markerDecorations.js';\nimport { getCodeActions, quickFixCommandId } from '../../codeAction/browser/codeAction.js';\nimport { CodeActionController } from '../../codeAction/browser/codeActionController.js';\nimport { CodeActionKind, CodeActionTriggerSource } from '../../codeAction/common/types.js';\nimport { MarkerController, NextMarkerAction } from '../../gotoError/browser/gotoError.js';\nimport * as nls from '../../../../nls.js';\nimport { IMarkerData, MarkerSeverity } from '../../../../platform/markers/common/markers.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { Progress } from '../../../../platform/progress/common/progress.js';\nconst $ = dom.$;\nexport class MarkerHover {\n    constructor(owner, range, marker) {\n        this.owner = owner;\n        this.range = range;\n        this.marker = marker;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n}\nconst markerCodeActionTrigger = {\n    type: 1 /* CodeActionTriggerType.Invoke */,\n    filter: { include: CodeActionKind.QuickFix },\n    triggerAction: CodeActionTriggerSource.QuickFixHover\n};\nlet MarkerHoverParticipant = class MarkerHoverParticipant {\n    constructor(_editor, _markerDecorationsService, _openerService, _languageFeaturesService) {\n        this._editor = _editor;\n        this._markerDecorationsService = _markerDecorationsService;\n        this._openerService = _openerService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this.hoverOrdinal = 1;\n        this.recentMarkerCodeActionsInfo = undefined;\n    }\n    computeSync(anchor, lineDecorations) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */ && !anchor.supportsMarkerHover) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        const result = [];\n        for (const d of lineDecorations) {\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            const marker = this._markerDecorationsService.getMarker(model.uri, d);\n            if (!marker) {\n                continue;\n            }\n            const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\n            result.push(new MarkerHover(this, range, marker));\n        }\n        return result;\n    }\n    renderHoverParts(context, hoverParts) {\n        if (!hoverParts.length) {\n            return Disposable.None;\n        }\n        const disposables = new DisposableStore();\n        hoverParts.forEach(msg => context.fragment.appendChild(this.renderMarkerHover(msg, disposables)));\n        const markerHoverForStatusbar = hoverParts.length === 1 ? hoverParts[0] : hoverParts.sort((a, b) => MarkerSeverity.compare(a.marker.severity, b.marker.severity))[0];\n        this.renderMarkerStatusbar(context, markerHoverForStatusbar, disposables);\n        return disposables;\n    }\n    renderMarkerHover(markerHover, disposables) {\n        const hoverElement = $('div.hover-row');\n        const markerElement = dom.append(hoverElement, $('div.marker.hover-contents'));\n        const { source, message, code, relatedInformation } = markerHover.marker;\n        this._editor.applyFontInfo(markerElement);\n        const messageElement = dom.append(markerElement, $('span'));\n        messageElement.style.whiteSpace = 'pre-wrap';\n        messageElement.innerText = message;\n        if (source || code) {\n            // Code has link\n            if (code && typeof code !== 'string') {\n                const sourceAndCodeElement = $('span');\n                if (source) {\n                    const sourceElement = dom.append(sourceAndCodeElement, $('span'));\n                    sourceElement.innerText = source;\n                }\n                const codeLink = dom.append(sourceAndCodeElement, $('a.code-link'));\n                codeLink.setAttribute('href', code.target.toString());\n                disposables.add(dom.addDisposableListener(codeLink, 'click', (e) => {\n                    this._openerService.open(code.target, { allowCommands: true });\n                    e.preventDefault();\n                    e.stopPropagation();\n                }));\n                const codeElement = dom.append(codeLink, $('span'));\n                codeElement.innerText = code.value;\n                const detailsElement = dom.append(markerElement, sourceAndCodeElement);\n                detailsElement.style.opacity = '0.6';\n                detailsElement.style.paddingLeft = '6px';\n            }\n            else {\n                const detailsElement = dom.append(markerElement, $('span'));\n                detailsElement.style.opacity = '0.6';\n                detailsElement.style.paddingLeft = '6px';\n                detailsElement.innerText = source && code ? `${source}(${code})` : source ? source : `(${code})`;\n            }\n        }\n        if (isNonEmptyArray(relatedInformation)) {\n            for (const { message, resource, startLineNumber, startColumn } of relatedInformation) {\n                const relatedInfoContainer = dom.append(markerElement, $('div'));\n                relatedInfoContainer.style.marginTop = '8px';\n                const a = dom.append(relatedInfoContainer, $('a'));\n                a.innerText = `${basename(resource)}(${startLineNumber}, ${startColumn}): `;\n                a.style.cursor = 'pointer';\n                disposables.add(dom.addDisposableListener(a, 'click', (e) => {\n                    e.stopPropagation();\n                    e.preventDefault();\n                    if (this._openerService) {\n                        this._openerService.open(resource, {\n                            fromUserGesture: true,\n                            editorOptions: { selection: { startLineNumber, startColumn } }\n                        }).catch(onUnexpectedError);\n                    }\n                }));\n                const messageElement = dom.append(relatedInfoContainer, $('span'));\n                messageElement.innerText = message;\n                this._editor.applyFontInfo(messageElement);\n            }\n        }\n        return hoverElement;\n    }\n    renderMarkerStatusbar(context, markerHover, disposables) {\n        if (markerHover.marker.severity === MarkerSeverity.Error || markerHover.marker.severity === MarkerSeverity.Warning || markerHover.marker.severity === MarkerSeverity.Info) {\n            context.statusBar.addAction({\n                label: nls.localize('view problem', \"View Problem\"),\n                commandId: NextMarkerAction.ID,\n                run: () => {\n                    var _a;\n                    context.hide();\n                    (_a = MarkerController.get(this._editor)) === null || _a === void 0 ? void 0 : _a.showAtMarker(markerHover.marker);\n                    this._editor.focus();\n                }\n            });\n        }\n        if (!this._editor.getOption(90 /* EditorOption.readOnly */)) {\n            const quickfixPlaceholderElement = context.statusBar.append($('div'));\n            if (this.recentMarkerCodeActionsInfo) {\n                if (IMarkerData.makeKey(this.recentMarkerCodeActionsInfo.marker) === IMarkerData.makeKey(markerHover.marker)) {\n                    if (!this.recentMarkerCodeActionsInfo.hasCodeActions) {\n                        quickfixPlaceholderElement.textContent = nls.localize('noQuickFixes', \"No quick fixes available\");\n                    }\n                }\n                else {\n                    this.recentMarkerCodeActionsInfo = undefined;\n                }\n            }\n            const updatePlaceholderDisposable = this.recentMarkerCodeActionsInfo && !this.recentMarkerCodeActionsInfo.hasCodeActions ? Disposable.None : disposables.add(disposableTimeout(() => quickfixPlaceholderElement.textContent = nls.localize('checkingForQuickFixes', \"Checking for quick fixes...\"), 200));\n            if (!quickfixPlaceholderElement.textContent) {\n                // Have some content in here to avoid flickering\n                quickfixPlaceholderElement.textContent = String.fromCharCode(0xA0); // &nbsp;\n            }\n            const codeActionsPromise = this.getCodeActions(markerHover.marker);\n            disposables.add(toDisposable(() => codeActionsPromise.cancel()));\n            codeActionsPromise.then(actions => {\n                updatePlaceholderDisposable.dispose();\n                this.recentMarkerCodeActionsInfo = { marker: markerHover.marker, hasCodeActions: actions.validActions.length > 0 };\n                if (!this.recentMarkerCodeActionsInfo.hasCodeActions) {\n                    actions.dispose();\n                    quickfixPlaceholderElement.textContent = nls.localize('noQuickFixes', \"No quick fixes available\");\n                    return;\n                }\n                quickfixPlaceholderElement.style.display = 'none';\n                let showing = false;\n                disposables.add(toDisposable(() => {\n                    if (!showing) {\n                        actions.dispose();\n                    }\n                }));\n                context.statusBar.addAction({\n                    label: nls.localize('quick fixes', \"Quick Fix...\"),\n                    commandId: quickFixCommandId,\n                    run: (target) => {\n                        showing = true;\n                        const controller = CodeActionController.get(this._editor);\n                        const elementPosition = dom.getDomNodePagePosition(target);\n                        // Hide the hover pre-emptively, otherwise the editor can close the code actions\n                        // context menu as well when using keyboard navigation\n                        context.hide();\n                        controller === null || controller === void 0 ? void 0 : controller.showCodeActions(markerCodeActionTrigger, actions, {\n                            x: elementPosition.left,\n                            y: elementPosition.top,\n                            width: elementPosition.width,\n                            height: elementPosition.height\n                        });\n                    }\n                });\n            }, onUnexpectedError);\n        }\n    }\n    getCodeActions(marker) {\n        return createCancelablePromise(cancellationToken => {\n            return getCodeActions(this._languageFeaturesService.codeActionProvider, this._editor.getModel(), new Range(marker.startLineNumber, marker.startColumn, marker.endLineNumber, marker.endColumn), markerCodeActionTrigger, Progress.None, cancellationToken);\n        });\n    }\n};\nMarkerHoverParticipant = __decorate([\n    __param(1, IMarkerDecorationsService),\n    __param(2, IOpenerService),\n    __param(3, ILanguageFeaturesService)\n], MarkerHoverParticipant);\nexport { MarkerHoverParticipant };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar ModesHoverController_1;\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { GotoDefinitionAtPositionEditorContribution } from '../../gotoSymbol/browser/link/goToDefinitionAtPosition.js';\nimport { ContentHoverWidget, ContentHoverController } from './contentHover.js';\nimport { MarginHoverWidget } from './marginHover.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { editorHoverBorder } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { HoverParticipantRegistry } from './hoverTypes.js';\nimport { MarkdownHoverParticipant } from './markdownHoverParticipant.js';\nimport { MarkerHoverParticipant } from './markerHoverParticipant.js';\nimport { InlineSuggestionHintsContentWidget } from '../../inlineCompletions/browser/inlineCompletionsHintsWidget.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport * as nls from '../../../../nls.js';\nimport './hover.css';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\n// sticky hover widget which doesn't disappear on focus out and such\nconst _sticky = false;\nlet ModesHoverController = ModesHoverController_1 = class ModesHoverController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(ModesHoverController_1.ID);\n    }\n    constructor(_editor, _instantiationService, _openerService, _languageService, _keybindingService) {\n        super();\n        this._editor = _editor;\n        this._instantiationService = _instantiationService;\n        this._openerService = _openerService;\n        this._languageService = _languageService;\n        this._keybindingService = _keybindingService;\n        this._toUnhook = new DisposableStore();\n        this._hoverActivatedByColorDecoratorClick = false;\n        this._isMouseDown = false;\n        this._hoverClicked = false;\n        this._contentWidget = null;\n        this._glyphWidget = null;\n        this._reactToEditorMouseMoveRunner = this._register(new RunOnceScheduler(() => this._reactToEditorMouseMove(this._mouseMoveEvent), 0));\n        this._hookEvents();\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(60 /* EditorOption.hover */)) {\n                this._unhookEvents();\n                this._hookEvents();\n            }\n        }));\n        this._register(this._editor.onMouseLeave(() => {\n            this._mouseMoveEvent = undefined;\n            this._reactToEditorMouseMoveRunner.cancel();\n        }));\n    }\n    _hookEvents() {\n        const hideWidgetsEventHandler = () => this._hideWidgets();\n        const hoverOpts = this._editor.getOption(60 /* EditorOption.hover */);\n        this._isHoverEnabled = hoverOpts.enabled;\n        this._isHoverSticky = hoverOpts.sticky;\n        this._hidingDelay = hoverOpts.hidingDelay;\n        if (this._isHoverEnabled) {\n            this._toUnhook.add(this._editor.onMouseDown((e) => this._onEditorMouseDown(e)));\n            this._toUnhook.add(this._editor.onMouseUp((e) => this._onEditorMouseUp(e)));\n            this._toUnhook.add(this._editor.onMouseMove((e) => this._onEditorMouseMove(e)));\n            this._toUnhook.add(this._editor.onKeyDown((e) => this._onKeyDown(e)));\n        }\n        else {\n            this._toUnhook.add(this._editor.onMouseMove((e) => this._onEditorMouseMove(e)));\n            this._toUnhook.add(this._editor.onKeyDown((e) => this._onKeyDown(e)));\n        }\n        this._toUnhook.add(this._editor.onMouseLeave((e) => this._onEditorMouseLeave(e)));\n        this._toUnhook.add(this._editor.onDidChangeModel(hideWidgetsEventHandler));\n        this._toUnhook.add(this._editor.onDidScrollChange((e) => this._onEditorScrollChanged(e)));\n    }\n    _unhookEvents() {\n        this._toUnhook.clear();\n    }\n    _onEditorScrollChanged(e) {\n        if (e.scrollTopChanged || e.scrollLeftChanged) {\n            this._hideWidgets();\n        }\n    }\n    _onEditorMouseDown(mouseEvent) {\n        var _a;\n        this._isMouseDown = true;\n        const target = mouseEvent.target;\n        if (target.type === 9 /* MouseTargetType.CONTENT_WIDGET */ && target.detail === ContentHoverWidget.ID) {\n            this._hoverClicked = true;\n            // mouse down on top of content hover widget\n            return;\n        }\n        if (target.type === 12 /* MouseTargetType.OVERLAY_WIDGET */ && target.detail === MarginHoverWidget.ID) {\n            // mouse down on top of overlay hover widget\n            return;\n        }\n        if (target.type !== 12 /* MouseTargetType.OVERLAY_WIDGET */) {\n            this._hoverClicked = false;\n        }\n        if (!((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.widget.isResizing)) {\n            this._hideWidgets();\n        }\n    }\n    _onEditorMouseUp(mouseEvent) {\n        this._isMouseDown = false;\n    }\n    _onEditorMouseLeave(mouseEvent) {\n        var _a, _b;\n        const targetEm = (mouseEvent.event.browserEvent.relatedTarget);\n        if (((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.widget.isResizing) || ((_b = this._contentWidget) === null || _b === void 0 ? void 0 : _b.containsNode(targetEm))) {\n            // When the content widget is resizing\n            // when the mouse is inside hover widget\n            return;\n        }\n        if (!_sticky) {\n            this._hideWidgets();\n        }\n    }\n    _isMouseOverWidget(mouseEvent) {\n        var _a, _b, _c, _d, _e;\n        const target = mouseEvent.target;\n        if (this._isHoverSticky\n            && target.type === 9 /* MouseTargetType.CONTENT_WIDGET */\n            && target.detail === ContentHoverWidget.ID) {\n            // mouse moved on top of content hover widget\n            return true;\n        }\n        if (this._isHoverSticky\n            && ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.containsNode((_b = mouseEvent.event.browserEvent.view) === null || _b === void 0 ? void 0 : _b.document.activeElement))\n            && !((_d = (_c = mouseEvent.event.browserEvent.view) === null || _c === void 0 ? void 0 : _c.getSelection()) === null || _d === void 0 ? void 0 : _d.isCollapsed)) {\n            // selected text within content hover widget\n            return true;\n        }\n        if (!this._isHoverSticky\n            && target.type === 9 /* MouseTargetType.CONTENT_WIDGET */\n            && target.detail === ContentHoverWidget.ID\n            && ((_e = this._contentWidget) === null || _e === void 0 ? void 0 : _e.isColorPickerVisible)) {\n            // though the hover is not sticky, the color picker needs to.\n            return true;\n        }\n        if (this._isHoverSticky\n            && target.type === 12 /* MouseTargetType.OVERLAY_WIDGET */\n            && target.detail === MarginHoverWidget.ID) {\n            // mouse moved on top of overlay hover widget\n            return true;\n        }\n        return false;\n    }\n    _onEditorMouseMove(mouseEvent) {\n        var _a, _b, _c, _d;\n        this._mouseMoveEvent = mouseEvent;\n        if (((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isFocused) || ((_b = this._contentWidget) === null || _b === void 0 ? void 0 : _b.isResizing)) {\n            return;\n        }\n        if (this._isMouseDown && this._hoverClicked) {\n            return;\n        }\n        if (this._isHoverSticky && ((_c = this._contentWidget) === null || _c === void 0 ? void 0 : _c.isVisibleFromKeyboard)) {\n            // Sticky mode is on and the hover has been shown via keyboard\n            // so moving the mouse has no effect\n            return;\n        }\n        const mouseIsOverWidget = this._isMouseOverWidget(mouseEvent);\n        // If the mouse is over the widget and the hiding timeout is defined, then cancel it\n        if (mouseIsOverWidget) {\n            this._reactToEditorMouseMoveRunner.cancel();\n            return;\n        }\n        // If the mouse is not over the widget, and if sticky is on,\n        // then give it a grace period before reacting to the mouse event\n        if (((_d = this._contentWidget) === null || _d === void 0 ? void 0 : _d.isVisible) && this._isHoverSticky && this._hidingDelay > 0) {\n            if (!this._reactToEditorMouseMoveRunner.isScheduled()) {\n                this._reactToEditorMouseMoveRunner.schedule(this._hidingDelay);\n            }\n            return;\n        }\n        this._reactToEditorMouseMove(mouseEvent);\n    }\n    _reactToEditorMouseMove(mouseEvent) {\n        var _a, _b, _c;\n        if (!mouseEvent) {\n            return;\n        }\n        const target = mouseEvent.target;\n        const mouseOnDecorator = (_a = target.element) === null || _a === void 0 ? void 0 : _a.classList.contains('colorpicker-color-decoration');\n        const decoratorActivatedOn = this._editor.getOption(146 /* EditorOption.colorDecoratorsActivatedOn */);\n        if ((mouseOnDecorator && ((decoratorActivatedOn === 'click' && !this._hoverActivatedByColorDecoratorClick) ||\n            (decoratorActivatedOn === 'hover' && !this._isHoverEnabled && !_sticky) ||\n            (decoratorActivatedOn === 'clickAndHover' && !this._isHoverEnabled && !this._hoverActivatedByColorDecoratorClick)))\n            || !mouseOnDecorator && !this._isHoverEnabled && !this._hoverActivatedByColorDecoratorClick) {\n            this._hideWidgets();\n            return;\n        }\n        const contentWidget = this._getOrCreateContentWidget();\n        if (contentWidget.maybeShowAt(mouseEvent)) {\n            (_b = this._glyphWidget) === null || _b === void 0 ? void 0 : _b.hide();\n            return;\n        }\n        if (target.type === 2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */ && target.position) {\n            (_c = this._contentWidget) === null || _c === void 0 ? void 0 : _c.hide();\n            if (!this._glyphWidget) {\n                this._glyphWidget = new MarginHoverWidget(this._editor, this._languageService, this._openerService);\n            }\n            this._glyphWidget.startShowingAt(target.position.lineNumber);\n            return;\n        }\n        if (_sticky) {\n            return;\n        }\n        this._hideWidgets();\n    }\n    _onKeyDown(e) {\n        var _a;\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        const resolvedKeyboardEvent = this._keybindingService.softDispatch(e, this._editor.getDomNode());\n        // If the beginning of a multi-chord keybinding is pressed, or the command aims to focus the hover, set the variable to true, otherwise false\n        const mightTriggerFocus = (resolvedKeyboardEvent.kind === 1 /* ResultKind.MoreChordsNeeded */ || (resolvedKeyboardEvent.kind === 2 /* ResultKind.KbFound */ && resolvedKeyboardEvent.commandId === 'editor.action.showHover' && ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isVisible)));\n        if (e.keyCode !== 5 /* KeyCode.Ctrl */ && e.keyCode !== 6 /* KeyCode.Alt */ && e.keyCode !== 57 /* KeyCode.Meta */ && e.keyCode !== 4 /* KeyCode.Shift */\n            && !mightTriggerFocus) {\n            // Do not hide hover when a modifier key is pressed\n            this._hideWidgets();\n        }\n    }\n    _hideWidgets() {\n        var _a, _b, _c;\n        if (_sticky) {\n            return;\n        }\n        if ((this._isMouseDown && this._hoverClicked && ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isColorPickerVisible)) || InlineSuggestionHintsContentWidget.dropDownVisible) {\n            return;\n        }\n        this._hoverActivatedByColorDecoratorClick = false;\n        this._hoverClicked = false;\n        (_b = this._glyphWidget) === null || _b === void 0 ? void 0 : _b.hide();\n        (_c = this._contentWidget) === null || _c === void 0 ? void 0 : _c.hide();\n    }\n    _getOrCreateContentWidget() {\n        if (!this._contentWidget) {\n            this._contentWidget = this._instantiationService.createInstance(ContentHoverController, this._editor);\n        }\n        return this._contentWidget;\n    }\n    showContentHover(range, mode, source, focus, activatedByColorDecoratorClick = false) {\n        this._hoverActivatedByColorDecoratorClick = activatedByColorDecoratorClick;\n        this._getOrCreateContentWidget().startShowingAtRange(range, mode, source, focus);\n    }\n    focus() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    scrollUp() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.scrollUp();\n    }\n    scrollDown() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.scrollDown();\n    }\n    scrollLeft() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.scrollLeft();\n    }\n    scrollRight() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.scrollRight();\n    }\n    pageUp() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.pageUp();\n    }\n    pageDown() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.pageDown();\n    }\n    goToTop() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.goToTop();\n    }\n    goToBottom() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.goToBottom();\n    }\n    get isColorPickerVisible() {\n        var _a;\n        return (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isColorPickerVisible;\n    }\n    get isHoverVisible() {\n        var _a;\n        return (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isVisible;\n    }\n    dispose() {\n        var _a, _b;\n        super.dispose();\n        this._unhookEvents();\n        this._toUnhook.dispose();\n        (_a = this._glyphWidget) === null || _a === void 0 ? void 0 : _a.dispose();\n        (_b = this._contentWidget) === null || _b === void 0 ? void 0 : _b.dispose();\n    }\n};\nModesHoverController.ID = 'editor.contrib.hover';\nModesHoverController = ModesHoverController_1 = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IOpenerService),\n    __param(3, ILanguageService),\n    __param(4, IKeybindingService)\n], ModesHoverController);\nexport { ModesHoverController };\nclass ShowOrFocusHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.showHover',\n            label: nls.localize({\n                key: 'showOrFocusHover',\n                comment: [\n                    'Label for action that will trigger the showing/focusing of a hover in the editor.',\n                    'If the hover is not visible, it will show the hover.',\n                    'This allows for users to show the hover without using the mouse.',\n                    'If the hover is already visible, it will take focus.'\n                ]\n            }, \"Show or Focus Hover\"),\n            description: {\n                description: `Show or Focus Hover`,\n                args: [{\n                        name: 'args',\n                        schema: {\n                            type: 'object',\n                            properties: {\n                                'focus': {\n                                    description: 'Controls if when triggered with the keyboard, the hover should take focus immediately.',\n                                    type: 'boolean',\n                                    default: false\n                                }\n                            },\n                        }\n                    }]\n            },\n            alias: 'Show or Focus Hover',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor, args) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const position = editor.getPosition();\n        const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n        const focus = editor.getOption(2 /* EditorOption.accessibilitySupport */) === 2 /* AccessibilitySupport.Enabled */ || !!(args === null || args === void 0 ? void 0 : args.focus);\n        if (controller.isHoverVisible) {\n            controller.focus();\n        }\n        else {\n            controller.showContentHover(range, 1 /* HoverStartMode.Immediate */, 1 /* HoverStartSource.Keyboard */, focus);\n        }\n    }\n}\nclass ShowDefinitionPreviewHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.showDefinitionPreviewHover',\n            label: nls.localize({\n                key: 'showDefinitionPreviewHover',\n                comment: [\n                    'Label for action that will trigger the showing of definition preview hover in the editor.',\n                    'This allows for users to show the definition preview hover without using the mouse.'\n                ]\n            }, \"Show Definition Preview Hover\"),\n            alias: 'Show Definition Preview Hover',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const position = editor.getPosition();\n        if (!position) {\n            return;\n        }\n        const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n        const goto = GotoDefinitionAtPositionEditorContribution.get(editor);\n        if (!goto) {\n            return;\n        }\n        const promise = goto.startFindDefinitionFromCursor(position);\n        promise.then(() => {\n            controller.showContentHover(range, 1 /* HoverStartMode.Immediate */, 1 /* HoverStartSource.Keyboard */, true);\n        });\n    }\n}\nclass ScrollUpHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.scrollUpHover',\n            label: nls.localize({\n                key: 'scrollUpHover',\n                comment: [\n                    'Action that allows to scroll up in the hover widget with the up arrow when the hover widget is focused.'\n                ]\n            }, \"Scroll Up Hover\"),\n            alias: 'Scroll Up Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 16 /* KeyCode.UpArrow */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.scrollUp();\n    }\n}\nclass ScrollDownHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.scrollDownHover',\n            label: nls.localize({\n                key: 'scrollDownHover',\n                comment: [\n                    'Action that allows to scroll down in the hover widget with the up arrow when the hover widget is focused.'\n                ]\n            }, \"Scroll Down Hover\"),\n            alias: 'Scroll Down Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 18 /* KeyCode.DownArrow */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.scrollDown();\n    }\n}\nclass ScrollLeftHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.scrollLeftHover',\n            label: nls.localize({\n                key: 'scrollLeftHover',\n                comment: [\n                    'Action that allows to scroll left in the hover widget with the left arrow when the hover widget is focused.'\n                ]\n            }, \"Scroll Left Hover\"),\n            alias: 'Scroll Left Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 15 /* KeyCode.LeftArrow */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.scrollLeft();\n    }\n}\nclass ScrollRightHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.scrollRightHover',\n            label: nls.localize({\n                key: 'scrollRightHover',\n                comment: [\n                    'Action that allows to scroll right in the hover widget with the right arrow when the hover widget is focused.'\n                ]\n            }, \"Scroll Right Hover\"),\n            alias: 'Scroll Right Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 17 /* KeyCode.RightArrow */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.scrollRight();\n    }\n}\nclass PageUpHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.pageUpHover',\n            label: nls.localize({\n                key: 'pageUpHover',\n                comment: [\n                    'Action that allows to page up in the hover widget with the page up command when the hover widget is focused.'\n                ]\n            }, \"Page Up Hover\"),\n            alias: 'Page Up Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 11 /* KeyCode.PageUp */,\n                secondary: [512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */],\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.pageUp();\n    }\n}\nclass PageDownHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.pageDownHover',\n            label: nls.localize({\n                key: 'pageDownHover',\n                comment: [\n                    'Action that allows to page down in the hover widget with the page down command when the hover widget is focused.'\n                ]\n            }, \"Page Down Hover\"),\n            alias: 'Page Down Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 12 /* KeyCode.PageDown */,\n                secondary: [512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */],\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.pageDown();\n    }\n}\nclass GoToTopHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.goToTopHover',\n            label: nls.localize({\n                key: 'goToTopHover',\n                comment: [\n                    'Action that allows to go to the top of the hover widget with the home command when the hover widget is focused.'\n                ]\n            }, \"Go To Top Hover\"),\n            alias: 'Go To Bottom Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 14 /* KeyCode.Home */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */],\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.goToTop();\n    }\n}\nclass GoToBottomHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.goToBottomHover',\n            label: nls.localize({\n                key: 'goToBottomHover',\n                comment: [\n                    'Action that allows to go to the bottom in the hover widget with the end command when the hover widget is focused.'\n                ]\n            }, \"Go To Bottom Hover\"),\n            alias: 'Go To Bottom Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 13 /* KeyCode.End */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */],\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.goToBottom();\n    }\n}\nregisterEditorContribution(ModesHoverController.ID, ModesHoverController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorAction(ShowOrFocusHoverAction);\nregisterEditorAction(ShowDefinitionPreviewHoverAction);\nregisterEditorAction(ScrollUpHoverAction);\nregisterEditorAction(ScrollDownHoverAction);\nregisterEditorAction(ScrollLeftHoverAction);\nregisterEditorAction(ScrollRightHoverAction);\nregisterEditorAction(PageUpHoverAction);\nregisterEditorAction(PageDownHoverAction);\nregisterEditorAction(GoToTopHoverAction);\nregisterEditorAction(GoToBottomHoverAction);\nHoverParticipantRegistry.register(MarkdownHoverParticipant);\nHoverParticipantRegistry.register(MarkerHoverParticipant);\n// theming\nregisterThemingParticipant((theme, collector) => {\n    const hoverBorder = theme.getColor(editorHoverBorder);\n    if (hoverBorder) {\n        collector.addRule(`.monaco-editor .monaco-hover .hover-row:not(:first-child):not(:empty) { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\n        collector.addRule(`.monaco-editor .monaco-hover hr { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\n        collector.addRule(`.monaco-editor .monaco-hover hr { border-bottom: 0px solid ${hoverBorder.transparent(0.5)}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { createCancelableAsyncIterable, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nexport class HoverResult {\n    constructor(value, isComplete, hasLoadingMessage) {\n        this.value = value;\n        this.isComplete = isComplete;\n        this.hasLoadingMessage = hasLoadingMessage;\n    }\n}\n/**\n * Computing the hover is very fine tuned.\n *\n * Suppose the hover delay is 300ms (the default). Then, when resting the mouse at an anchor:\n * - at 150ms, the async computation is triggered (i.e. semantic hover)\n *   - if async results already come in, they are not rendered yet.\n * - at 300ms, the sync computation is triggered (i.e. decorations, markers)\n *   - if there are sync or async results, they are rendered.\n * - at 900ms, if the async computation hasn't finished, a \"Loading...\" result is added.\n */\nexport class HoverOperation extends Disposable {\n    constructor(_editor, _computer) {\n        super();\n        this._editor = _editor;\n        this._computer = _computer;\n        this._onResult = this._register(new Emitter());\n        this.onResult = this._onResult.event;\n        this._firstWaitScheduler = this._register(new RunOnceScheduler(() => this._triggerAsyncComputation(), 0));\n        this._secondWaitScheduler = this._register(new RunOnceScheduler(() => this._triggerSyncComputation(), 0));\n        this._loadingMessageScheduler = this._register(new RunOnceScheduler(() => this._triggerLoadingMessage(), 0));\n        this._state = 0 /* HoverOperationState.Idle */;\n        this._asyncIterable = null;\n        this._asyncIterableDone = false;\n        this._result = [];\n    }\n    dispose() {\n        if (this._asyncIterable) {\n            this._asyncIterable.cancel();\n            this._asyncIterable = null;\n        }\n        super.dispose();\n    }\n    get _hoverTime() {\n        return this._editor.getOption(60 /* EditorOption.hover */).delay;\n    }\n    get _firstWaitTime() {\n        return this._hoverTime / 2;\n    }\n    get _secondWaitTime() {\n        return this._hoverTime - this._firstWaitTime;\n    }\n    get _loadingMessageTime() {\n        return 3 * this._hoverTime;\n    }\n    _setState(state, fireResult = true) {\n        this._state = state;\n        if (fireResult) {\n            this._fireResult();\n        }\n    }\n    _triggerAsyncComputation() {\n        this._setState(2 /* HoverOperationState.SecondWait */);\n        this._secondWaitScheduler.schedule(this._secondWaitTime);\n        if (this._computer.computeAsync) {\n            this._asyncIterableDone = false;\n            this._asyncIterable = createCancelableAsyncIterable(token => this._computer.computeAsync(token));\n            (() => __awaiter(this, void 0, void 0, function* () {\n                var _a, e_1, _b, _c;\n                try {\n                    try {\n                        for (var _d = true, _e = __asyncValues(this._asyncIterable), _f; _f = yield _e.next(), _a = _f.done, !_a; _d = true) {\n                            _c = _f.value;\n                            _d = false;\n                            const item = _c;\n                            if (item) {\n                                this._result.push(item);\n                                this._fireResult();\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                    this._asyncIterableDone = true;\n                    if (this._state === 3 /* HoverOperationState.WaitingForAsync */ || this._state === 4 /* HoverOperationState.WaitingForAsyncShowingLoading */) {\n                        this._setState(0 /* HoverOperationState.Idle */);\n                    }\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                }\n            }))();\n        }\n        else {\n            this._asyncIterableDone = true;\n        }\n    }\n    _triggerSyncComputation() {\n        if (this._computer.computeSync) {\n            this._result = this._result.concat(this._computer.computeSync());\n        }\n        this._setState(this._asyncIterableDone ? 0 /* HoverOperationState.Idle */ : 3 /* HoverOperationState.WaitingForAsync */);\n    }\n    _triggerLoadingMessage() {\n        if (this._state === 3 /* HoverOperationState.WaitingForAsync */) {\n            this._setState(4 /* HoverOperationState.WaitingForAsyncShowingLoading */);\n        }\n    }\n    _fireResult() {\n        if (this._state === 1 /* HoverOperationState.FirstWait */ || this._state === 2 /* HoverOperationState.SecondWait */) {\n            // Do not send out results before the hover time\n            return;\n        }\n        const isComplete = (this._state === 0 /* HoverOperationState.Idle */);\n        const hasLoadingMessage = (this._state === 4 /* HoverOperationState.WaitingForAsyncShowingLoading */);\n        this._onResult.fire(new HoverResult(this._result.slice(0), isComplete, hasLoadingMessage));\n    }\n    start(mode) {\n        if (mode === 0 /* HoverStartMode.Delayed */) {\n            if (this._state === 0 /* HoverOperationState.Idle */) {\n                this._setState(1 /* HoverOperationState.FirstWait */);\n                this._firstWaitScheduler.schedule(this._firstWaitTime);\n                this._loadingMessageScheduler.schedule(this._loadingMessageTime);\n            }\n        }\n        else {\n            switch (this._state) {\n                case 0 /* HoverOperationState.Idle */:\n                    this._triggerAsyncComputation();\n                    this._secondWaitScheduler.cancel();\n                    this._triggerSyncComputation();\n                    break;\n                case 2 /* HoverOperationState.SecondWait */:\n                    this._secondWaitScheduler.cancel();\n                    this._triggerSyncComputation();\n                    break;\n            }\n        }\n    }\n    cancel() {\n        this._firstWaitScheduler.cancel();\n        this._secondWaitScheduler.cancel();\n        this._loadingMessageScheduler.cancel();\n        if (this._asyncIterable) {\n            this._asyncIterable.cancel();\n            this._asyncIterable = null;\n        }\n        this._result = [];\n        this._setState(0 /* HoverOperationState.Idle */, false);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class HoverRangeAnchor {\n    constructor(priority, range, initialMousePosX, initialMousePosY) {\n        this.priority = priority;\n        this.range = range;\n        this.initialMousePosX = initialMousePosX;\n        this.initialMousePosY = initialMousePosY;\n        this.type = 1 /* HoverAnchorType.Range */;\n    }\n    equals(other) {\n        return (other.type === 1 /* HoverAnchorType.Range */ && this.range.equalsRange(other.range));\n    }\n    canAdoptVisibleHover(lastAnchor, showAtPosition) {\n        return (lastAnchor.type === 1 /* HoverAnchorType.Range */ && showAtPosition.lineNumber === this.range.startLineNumber);\n    }\n}\nexport class HoverForeignElementAnchor {\n    constructor(priority, owner, range, initialMousePosX, initialMousePosY, supportsMarkerHover) {\n        this.priority = priority;\n        this.owner = owner;\n        this.range = range;\n        this.initialMousePosX = initialMousePosX;\n        this.initialMousePosY = initialMousePosY;\n        this.supportsMarkerHover = supportsMarkerHover;\n        this.type = 2 /* HoverAnchorType.ForeignElement */;\n    }\n    equals(other) {\n        return (other.type === 2 /* HoverAnchorType.ForeignElement */ && this.owner === other.owner);\n    }\n    canAdoptVisibleHover(lastAnchor, showAtPosition) {\n        return (lastAnchor.type === 2 /* HoverAnchorType.ForeignElement */ && this.owner === lastAnchor.owner);\n    }\n}\nexport const HoverParticipantRegistry = (new class HoverParticipantRegistry {\n    constructor() {\n        this._participants = [];\n    }\n    register(ctor) {\n        this._participants.push(ctor);\n    }\n    getAll() {\n        return this._participants;\n    }\n}());\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray } from '../../../../base/common/arrays.js';\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { isEmptyMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { getHover } from './getHover.js';\nimport * as nls from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nconst $ = dom.$;\nexport class MarkdownHover {\n    constructor(owner, range, contents, isBeforeContent, ordinal) {\n        this.owner = owner;\n        this.range = range;\n        this.contents = contents;\n        this.isBeforeContent = isBeforeContent;\n        this.ordinal = ordinal;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n}\nlet MarkdownHoverParticipant = class MarkdownHoverParticipant {\n    constructor(_editor, _languageService, _openerService, _configurationService, _languageFeaturesService) {\n        this._editor = _editor;\n        this._languageService = _languageService;\n        this._openerService = _openerService;\n        this._configurationService = _configurationService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this.hoverOrdinal = 3;\n    }\n    createLoadingMessage(anchor) {\n        return new MarkdownHover(this, anchor.range, [new MarkdownString().appendText(nls.localize('modesContentHover.loading', \"Loading...\"))], false, 2000);\n    }\n    computeSync(anchor, lineDecorations) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        const result = [];\n        let index = 1000;\n        const lineLength = model.getLineLength(lineNumber);\n        const languageId = model.getLanguageIdAtPosition(anchor.range.startLineNumber, anchor.range.startColumn);\n        const stopRenderingLineAfter = this._editor.getOption(116 /* EditorOption.stopRenderingLineAfter */);\n        const maxTokenizationLineLength = this._configurationService.getValue('editor.maxTokenizationLineLength', {\n            overrideIdentifier: languageId\n        });\n        let stopRenderingMessage = false;\n        if (stopRenderingLineAfter >= 0 && lineLength > stopRenderingLineAfter && anchor.range.startColumn >= stopRenderingLineAfter) {\n            stopRenderingMessage = true;\n            result.push(new MarkdownHover(this, anchor.range, [{\n                    value: nls.localize('stopped rendering', \"Rendering paused for long line for performance reasons. This can be configured via `editor.stopRenderingLineAfter`.\")\n                }], false, index++));\n        }\n        if (!stopRenderingMessage && typeof maxTokenizationLineLength === 'number' && lineLength >= maxTokenizationLineLength) {\n            result.push(new MarkdownHover(this, anchor.range, [{\n                    value: nls.localize('too many characters', \"Tokenization is skipped for long lines for performance reasons. This can be configured via `editor.maxTokenizationLineLength`.\")\n                }], false, index++));\n        }\n        let isBeforeContent = false;\n        for (const d of lineDecorations) {\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            const hoverMessage = d.options.hoverMessage;\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n                continue;\n            }\n            if (d.options.beforeContentClassName) {\n                isBeforeContent = true;\n            }\n            const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\n            result.push(new MarkdownHover(this, range, asArray(hoverMessage), isBeforeContent, index++));\n        }\n        return result;\n    }\n    computeAsync(anchor, lineDecorations, token) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const model = this._editor.getModel();\n        if (!this._languageFeaturesService.hoverProvider.has(model)) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const position = new Position(anchor.range.startLineNumber, anchor.range.startColumn);\n        return getHover(this._languageFeaturesService.hoverProvider, model, position, token)\n            .filter(item => !isEmptyMarkdownString(item.hover.contents))\n            .map(item => {\n            const rng = item.hover.range ? Range.lift(item.hover.range) : anchor.range;\n            return new MarkdownHover(this, rng, item.hover.contents, false, item.ordinal);\n        });\n    }\n    renderHoverParts(context, hoverParts) {\n        return renderMarkdownHovers(context, hoverParts, this._editor, this._languageService, this._openerService);\n    }\n};\nMarkdownHoverParticipant = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IConfigurationService),\n    __param(4, ILanguageFeaturesService)\n], MarkdownHoverParticipant);\nexport { MarkdownHoverParticipant };\nexport function renderMarkdownHovers(context, hoverParts, editor, languageService, openerService) {\n    // Sort hover parts to keep them stable since they might come in async, out-of-order\n    hoverParts.sort((a, b) => a.ordinal - b.ordinal);\n    const disposables = new DisposableStore();\n    for (const hoverPart of hoverParts) {\n        for (const contents of hoverPart.contents) {\n            if (isEmptyMarkdownString(contents)) {\n                continue;\n            }\n            const markdownHoverElement = $('div.hover-row.markdown-hover');\n            const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n            const renderer = disposables.add(new MarkdownRenderer({ editor }, languageService, openerService));\n            disposables.add(renderer.onDidRenderAsync(() => {\n                hoverContentsElement.className = 'hover-contents code-hover-contents';\n                context.onContentsChanged();\n            }));\n            const renderedContents = disposables.add(renderer.render(contents));\n            hoverContentsElement.appendChild(renderedContents.element);\n            context.fragment.appendChild(markdownHoverElement);\n        }\n    }\n    return disposables;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Selection } from '../../../common/core/selection.js';\nexport class InPlaceReplaceCommand {\n    constructor(editRange, originalSelection, text) {\n        this._editRange = editRange;\n        this._originalSelection = originalSelection;\n        this._text = text;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._editRange, this._text);\n    }\n    computeCursorState(model, helper) {\n        const inverseEditOperations = helper.getInverseEditOperations();\n        const srcRange = inverseEditOperations[0].range;\n        if (!this._originalSelection.isEmpty()) {\n            // Preserve selection and extends to typed text\n            return new Selection(srcRange.endLineNumber, srcRange.endColumn - this._text.length, srcRange.endLineNumber, srcRange.endColumn);\n        }\n        return new Selection(srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn), srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar InPlaceReplaceController_1;\nimport { createCancelablePromise, timeout } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { EditorState } from '../../editorState/browser/editorState.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport * as nls from '../../../../nls.js';\nimport { InPlaceReplaceCommand } from './inPlaceReplaceCommand.js';\nimport './inPlaceReplace.css';\nlet InPlaceReplaceController = InPlaceReplaceController_1 = class InPlaceReplaceController {\n    static get(editor) {\n        return editor.getContribution(InPlaceReplaceController_1.ID);\n    }\n    constructor(editor, editorWorkerService) {\n        this.editor = editor;\n        this.editorWorkerService = editorWorkerService;\n        this.decorations = this.editor.createDecorationsCollection();\n    }\n    dispose() {\n    }\n    run(source, up) {\n        var _a;\n        // cancel any pending request\n        (_a = this.currentRequest) === null || _a === void 0 ? void 0 : _a.cancel();\n        const editorSelection = this.editor.getSelection();\n        const model = this.editor.getModel();\n        if (!model || !editorSelection) {\n            return undefined;\n        }\n        let selection = editorSelection;\n        if (selection.startLineNumber !== selection.endLineNumber) {\n            // Can't accept multiline selection\n            return undefined;\n        }\n        const state = new EditorState(this.editor, 1 /* CodeEditorStateFlag.Value */ | 4 /* CodeEditorStateFlag.Position */);\n        const modelURI = model.uri;\n        if (!this.editorWorkerService.canNavigateValueSet(modelURI)) {\n            return Promise.resolve(undefined);\n        }\n        this.currentRequest = createCancelablePromise(token => this.editorWorkerService.navigateValueSet(modelURI, selection, up));\n        return this.currentRequest.then(result => {\n            var _a;\n            if (!result || !result.range || !result.value) {\n                // No proper result\n                return;\n            }\n            if (!state.validate(this.editor)) {\n                // state has changed\n                return;\n            }\n            // Selection\n            const editRange = Range.lift(result.range);\n            let highlightRange = result.range;\n            const diff = result.value.length - (selection.endColumn - selection.startColumn);\n            // highlight\n            highlightRange = {\n                startLineNumber: highlightRange.startLineNumber,\n                startColumn: highlightRange.startColumn,\n                endLineNumber: highlightRange.endLineNumber,\n                endColumn: highlightRange.startColumn + result.value.length\n            };\n            if (diff > 1) {\n                selection = new Selection(selection.startLineNumber, selection.startColumn, selection.endLineNumber, selection.endColumn + diff - 1);\n            }\n            // Insert new text\n            const command = new InPlaceReplaceCommand(editRange, selection, result.value);\n            this.editor.pushUndoStop();\n            this.editor.executeCommand(source, command);\n            this.editor.pushUndoStop();\n            // add decoration\n            this.decorations.set([{\n                    range: highlightRange,\n                    options: InPlaceReplaceController_1.DECORATION\n                }]);\n            // remove decoration after delay\n            (_a = this.decorationRemover) === null || _a === void 0 ? void 0 : _a.cancel();\n            this.decorationRemover = timeout(350);\n            this.decorationRemover.then(() => this.decorations.clear()).catch(onUnexpectedError);\n        }).catch(onUnexpectedError);\n    }\n};\nInPlaceReplaceController.ID = 'editor.contrib.inPlaceReplaceController';\nInPlaceReplaceController.DECORATION = ModelDecorationOptions.register({\n    description: 'in-place-replace',\n    className: 'valueSetReplacement'\n});\nInPlaceReplaceController = InPlaceReplaceController_1 = __decorate([\n    __param(1, IEditorWorkerService)\n], InPlaceReplaceController);\nclass InPlaceReplaceUp extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inPlaceReplace.up',\n            label: nls.localize('InPlaceReplaceAction.previous.label', \"Replace with Previous Value\"),\n            alias: 'Replace with Previous Value',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 87 /* KeyCode.Comma */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = InPlaceReplaceController.get(editor);\n        if (!controller) {\n            return Promise.resolve(undefined);\n        }\n        return controller.run(this.id, false);\n    }\n}\nclass InPlaceReplaceDown extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inPlaceReplace.down',\n            label: nls.localize('InPlaceReplaceAction.next.label', \"Replace with Next Value\"),\n            alias: 'Replace with Next Value',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 89 /* KeyCode.Period */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = InPlaceReplaceController.get(editor);\n        if (!controller) {\n            return Promise.resolve(undefined);\n        }\n        return controller.run(this.id, true);\n    }\n}\nregisterEditorContribution(InPlaceReplaceController.ID, InPlaceReplaceController, 4 /* EditorContributionInstantiation.Lazy */);\nregisterEditorAction(InPlaceReplaceUp);\nregisterEditorAction(InPlaceReplaceDown);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function getSpaceCnt(str, tabSize) {\n    let spacesCnt = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) === '\\t') {\n            spacesCnt += tabSize;\n        }\n        else {\n            spacesCnt++;\n        }\n    }\n    return spacesCnt;\n}\nexport function generateIndent(spacesCnt, tabSize, insertSpaces) {\n    spacesCnt = spacesCnt < 0 ? 0 : spacesCnt;\n    let result = '';\n    if (!insertSpaces) {\n        const tabsCnt = Math.floor(spacesCnt / tabSize);\n        spacesCnt = spacesCnt % tabSize;\n        for (let i = 0; i < tabsCnt; i++) {\n            result += '\\t';\n        }\n    }\n    for (let i = 0; i < spacesCnt; i++) {\n        result += ' ';\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ShiftCommand } from '../../../common/commands/shiftCommand.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport * as indentUtils from './indentUtils.js';\nimport * as nls from '../../../../nls.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { normalizeIndentation } from '../../../common/core/indentation.js';\nimport { getGoodIndentForLine, getIndentMetadata } from '../../../common/languages/autoIndent.js';\nexport function getReindentEditOperations(model, languageConfigurationService, startLineNumber, endLineNumber, inheritedIndent) {\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n        // Model is empty\n        return [];\n    }\n    const indentationRules = languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).indentationRules;\n    if (!indentationRules) {\n        return [];\n    }\n    endLineNumber = Math.min(endLineNumber, model.getLineCount());\n    // Skip `unIndentedLinePattern` lines\n    while (startLineNumber <= endLineNumber) {\n        if (!indentationRules.unIndentedLinePattern) {\n            break;\n        }\n        const text = model.getLineContent(startLineNumber);\n        if (!indentationRules.unIndentedLinePattern.test(text)) {\n            break;\n        }\n        startLineNumber++;\n    }\n    if (startLineNumber > endLineNumber - 1) {\n        return [];\n    }\n    const { tabSize, indentSize, insertSpaces } = model.getOptions();\n    const shiftIndent = (indentation, count) => {\n        count = count || 1;\n        return ShiftCommand.shiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);\n    };\n    const unshiftIndent = (indentation, count) => {\n        count = count || 1;\n        return ShiftCommand.unshiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);\n    };\n    const indentEdits = [];\n    // indentation being passed to lines below\n    let globalIndent;\n    // Calculate indentation for the first line\n    // If there is no passed-in indentation, we use the indentation of the first line as base.\n    const currentLineText = model.getLineContent(startLineNumber);\n    let adjustedLineContent = currentLineText;\n    if (inheritedIndent !== undefined && inheritedIndent !== null) {\n        globalIndent = inheritedIndent;\n        const oldIndentation = strings.getLeadingWhitespace(currentLineText);\n        adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);\n        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {\n            globalIndent = unshiftIndent(globalIndent);\n            adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);\n        }\n        if (currentLineText !== adjustedLineContent) {\n            indentEdits.push(EditOperation.replaceMove(new Selection(startLineNumber, 1, startLineNumber, oldIndentation.length + 1), normalizeIndentation(globalIndent, indentSize, insertSpaces)));\n        }\n    }\n    else {\n        globalIndent = strings.getLeadingWhitespace(currentLineText);\n    }\n    // idealIndentForNextLine doesn't equal globalIndent when there is a line matching `indentNextLinePattern`.\n    let idealIndentForNextLine = globalIndent;\n    if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {\n        idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n        globalIndent = shiftIndent(globalIndent);\n    }\n    else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) {\n        idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n    }\n    startLineNumber++;\n    // Calculate indentation adjustment for all following lines\n    for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n        const text = model.getLineContent(lineNumber);\n        const oldIndentation = strings.getLeadingWhitespace(text);\n        const adjustedLineContent = idealIndentForNextLine + text.substring(oldIndentation.length);\n        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {\n            idealIndentForNextLine = unshiftIndent(idealIndentForNextLine);\n            globalIndent = unshiftIndent(globalIndent);\n        }\n        if (oldIndentation !== idealIndentForNextLine) {\n            indentEdits.push(EditOperation.replaceMove(new Selection(lineNumber, 1, lineNumber, oldIndentation.length + 1), normalizeIndentation(idealIndentForNextLine, indentSize, insertSpaces)));\n        }\n        // calculate idealIndentForNextLine\n        if (indentationRules.unIndentedLinePattern && indentationRules.unIndentedLinePattern.test(text)) {\n            // In reindent phase, if the line matches `unIndentedLinePattern` we inherit indentation from above lines\n            // but don't change globalIndent and idealIndentForNextLine.\n            continue;\n        }\n        else if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {\n            globalIndent = shiftIndent(globalIndent);\n            idealIndentForNextLine = globalIndent;\n        }\n        else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) {\n            idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n        }\n        else {\n            idealIndentForNextLine = globalIndent;\n        }\n    }\n    return indentEdits;\n}\nexport class IndentationToSpacesAction extends EditorAction {\n    constructor() {\n        super({\n            id: IndentationToSpacesAction.ID,\n            label: nls.localize('indentationToSpaces', \"Convert Indentation to Spaces\"),\n            alias: 'Convert Indentation to Spaces',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const modelOpts = model.getOptions();\n        const selection = editor.getSelection();\n        if (!selection) {\n            return;\n        }\n        const command = new IndentationToSpacesCommand(selection, modelOpts.tabSize);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n        model.updateOptions({\n            insertSpaces: true\n        });\n    }\n}\nIndentationToSpacesAction.ID = 'editor.action.indentationToSpaces';\nexport class IndentationToTabsAction extends EditorAction {\n    constructor() {\n        super({\n            id: IndentationToTabsAction.ID,\n            label: nls.localize('indentationToTabs', \"Convert Indentation to Tabs\"),\n            alias: 'Convert Indentation to Tabs',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const modelOpts = model.getOptions();\n        const selection = editor.getSelection();\n        if (!selection) {\n            return;\n        }\n        const command = new IndentationToTabsCommand(selection, modelOpts.tabSize);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n        model.updateOptions({\n            insertSpaces: false\n        });\n    }\n}\nIndentationToTabsAction.ID = 'editor.action.indentationToTabs';\nexport class ChangeIndentationSizeAction extends EditorAction {\n    constructor(insertSpaces, displaySizeOnly, opts) {\n        super(opts);\n        this.insertSpaces = insertSpaces;\n        this.displaySizeOnly = displaySizeOnly;\n    }\n    run(accessor, editor) {\n        const quickInputService = accessor.get(IQuickInputService);\n        const modelService = accessor.get(IModelService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const creationOpts = modelService.getCreationOptions(model.getLanguageId(), model.uri, model.isForSimpleWidget);\n        const modelOpts = model.getOptions();\n        const picks = [1, 2, 3, 4, 5, 6, 7, 8].map(n => ({\n            id: n.toString(),\n            label: n.toString(),\n            // add description for tabSize value set in the configuration\n            description: (n === creationOpts.tabSize && n === modelOpts.tabSize\n                ? nls.localize('configuredTabSize', \"Configured Tab Size\")\n                : n === creationOpts.tabSize\n                    ? nls.localize('defaultTabSize', \"Default Tab Size\")\n                    : n === modelOpts.tabSize\n                        ? nls.localize('currentTabSize', \"Current Tab Size\")\n                        : undefined)\n        }));\n        // auto focus the tabSize set for the current editor\n        const autoFocusIndex = Math.min(model.getOptions().tabSize - 1, 7);\n        setTimeout(() => {\n            quickInputService.pick(picks, { placeHolder: nls.localize({ key: 'selectTabWidth', comment: ['Tab corresponds to the tab key'] }, \"Select Tab Size for Current File\"), activeItem: picks[autoFocusIndex] }).then(pick => {\n                if (pick) {\n                    if (model && !model.isDisposed()) {\n                        const pickedVal = parseInt(pick.label, 10);\n                        if (this.displaySizeOnly) {\n                            model.updateOptions({\n                                tabSize: pickedVal\n                            });\n                        }\n                        else {\n                            model.updateOptions({\n                                tabSize: pickedVal,\n                                indentSize: pickedVal,\n                                insertSpaces: this.insertSpaces\n                            });\n                        }\n                    }\n                }\n            });\n        }, 50 /* quick input is sensitive to being opened so soon after another */);\n    }\n}\nexport class IndentUsingTabs extends ChangeIndentationSizeAction {\n    constructor() {\n        super(false, false, {\n            id: IndentUsingTabs.ID,\n            label: nls.localize('indentUsingTabs', \"Indent Using Tabs\"),\n            alias: 'Indent Using Tabs',\n            precondition: undefined\n        });\n    }\n}\nIndentUsingTabs.ID = 'editor.action.indentUsingTabs';\nexport class IndentUsingSpaces extends ChangeIndentationSizeAction {\n    constructor() {\n        super(true, false, {\n            id: IndentUsingSpaces.ID,\n            label: nls.localize('indentUsingSpaces', \"Indent Using Spaces\"),\n            alias: 'Indent Using Spaces',\n            precondition: undefined\n        });\n    }\n}\nIndentUsingSpaces.ID = 'editor.action.indentUsingSpaces';\nexport class ChangeTabDisplaySize extends ChangeIndentationSizeAction {\n    constructor() {\n        super(true, true, {\n            id: ChangeTabDisplaySize.ID,\n            label: nls.localize('changeTabDisplaySize', \"Change Tab Display Size\"),\n            alias: 'Change Tab Display Size',\n            precondition: undefined\n        });\n    }\n}\nChangeTabDisplaySize.ID = 'editor.action.changeTabDisplaySize';\nexport class DetectIndentation extends EditorAction {\n    constructor() {\n        super({\n            id: DetectIndentation.ID,\n            label: nls.localize('detectIndentation', \"Detect Indentation from Content\"),\n            alias: 'Detect Indentation from Content',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const modelService = accessor.get(IModelService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const creationOpts = modelService.getCreationOptions(model.getLanguageId(), model.uri, model.isForSimpleWidget);\n        model.detectIndentation(creationOpts.insertSpaces, creationOpts.tabSize);\n    }\n}\nDetectIndentation.ID = 'editor.action.detectIndentation';\nexport class ReindentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.reindentlines',\n            label: nls.localize('editor.reindentlines', \"Reindent Lines\"),\n            alias: 'Reindent Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const edits = getReindentEditOperations(model, languageConfigurationService, 1, model.getLineCount());\n        if (edits.length > 0) {\n            editor.pushUndoStop();\n            editor.executeEdits(this.id, edits);\n            editor.pushUndoStop();\n        }\n    }\n}\nexport class ReindentSelectedLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.reindentselectedlines',\n            label: nls.localize('editor.reindentselectedlines', \"Reindent Selected Lines\"),\n            alias: 'Reindent Selected Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const edits = [];\n        for (const selection of selections) {\n            let startLineNumber = selection.startLineNumber;\n            let endLineNumber = selection.endLineNumber;\n            if (startLineNumber !== endLineNumber && selection.endColumn === 1) {\n                endLineNumber--;\n            }\n            if (startLineNumber === 1) {\n                if (startLineNumber === endLineNumber) {\n                    continue;\n                }\n            }\n            else {\n                startLineNumber--;\n            }\n            const editOperations = getReindentEditOperations(model, languageConfigurationService, startLineNumber, endLineNumber);\n            edits.push(...editOperations);\n        }\n        if (edits.length > 0) {\n            editor.pushUndoStop();\n            editor.executeEdits(this.id, edits);\n            editor.pushUndoStop();\n        }\n    }\n}\nexport class AutoIndentOnPasteCommand {\n    constructor(edits, initialSelection) {\n        this._initialSelection = initialSelection;\n        this._edits = [];\n        this._selectionId = null;\n        for (const edit of edits) {\n            if (edit.range && typeof edit.text === 'string') {\n                this._edits.push(edit);\n            }\n        }\n    }\n    getEditOperations(model, builder) {\n        for (const edit of this._edits) {\n            builder.addEditOperation(Range.lift(edit.range), edit.text);\n        }\n        let selectionIsSet = false;\n        if (Array.isArray(this._edits) && this._edits.length === 1 && this._initialSelection.isEmpty()) {\n            if (this._edits[0].range.startColumn === this._initialSelection.endColumn &&\n                this._edits[0].range.startLineNumber === this._initialSelection.endLineNumber) {\n                selectionIsSet = true;\n                this._selectionId = builder.trackSelection(this._initialSelection, true);\n            }\n            else if (this._edits[0].range.endColumn === this._initialSelection.startColumn &&\n                this._edits[0].range.endLineNumber === this._initialSelection.startLineNumber) {\n                selectionIsSet = true;\n                this._selectionId = builder.trackSelection(this._initialSelection, false);\n            }\n        }\n        if (!selectionIsSet) {\n            this._selectionId = builder.trackSelection(this._initialSelection);\n        }\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this._selectionId);\n    }\n}\nlet AutoIndentOnPaste = class AutoIndentOnPaste {\n    constructor(editor, _languageConfigurationService) {\n        this.editor = editor;\n        this._languageConfigurationService = _languageConfigurationService;\n        this.callOnDispose = new DisposableStore();\n        this.callOnModel = new DisposableStore();\n        this.callOnDispose.add(editor.onDidChangeConfiguration(() => this.update()));\n        this.callOnDispose.add(editor.onDidChangeModel(() => this.update()));\n        this.callOnDispose.add(editor.onDidChangeModelLanguage(() => this.update()));\n    }\n    update() {\n        // clean up\n        this.callOnModel.clear();\n        // we are disabled\n        if (this.editor.getOption(12 /* EditorOption.autoIndent */) < 4 /* EditorAutoIndentStrategy.Full */ || this.editor.getOption(55 /* EditorOption.formatOnPaste */)) {\n            return;\n        }\n        // no model\n        if (!this.editor.hasModel()) {\n            return;\n        }\n        this.callOnModel.add(this.editor.onDidPaste(({ range }) => {\n            this.trigger(range);\n        }));\n    }\n    trigger(range) {\n        const selections = this.editor.getSelections();\n        if (selections === null || selections.length > 1) {\n            return;\n        }\n        const model = this.editor.getModel();\n        if (!model) {\n            return;\n        }\n        if (!model.tokenization.isCheapToTokenize(range.getStartPosition().lineNumber)) {\n            return;\n        }\n        const autoIndent = this.editor.getOption(12 /* EditorOption.autoIndent */);\n        const { tabSize, indentSize, insertSpaces } = model.getOptions();\n        const textEdits = [];\n        const indentConverter = {\n            shiftIndent: (indentation) => {\n                return ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            },\n            unshiftIndent: (indentation) => {\n                return ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            }\n        };\n        let startLineNumber = range.startLineNumber;\n        while (startLineNumber <= range.endLineNumber) {\n            if (this.shouldIgnoreLine(model, startLineNumber)) {\n                startLineNumber++;\n                continue;\n            }\n            break;\n        }\n        if (startLineNumber > range.endLineNumber) {\n            return;\n        }\n        let firstLineText = model.getLineContent(startLineNumber);\n        if (!/\\S/.test(firstLineText.substring(0, range.startColumn - 1))) {\n            const indentOfFirstLine = getGoodIndentForLine(autoIndent, model, model.getLanguageId(), startLineNumber, indentConverter, this._languageConfigurationService);\n            if (indentOfFirstLine !== null) {\n                const oldIndentation = strings.getLeadingWhitespace(firstLineText);\n                const newSpaceCnt = indentUtils.getSpaceCnt(indentOfFirstLine, tabSize);\n                const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                if (newSpaceCnt !== oldSpaceCnt) {\n                    const newIndent = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                    textEdits.push({\n                        range: new Range(startLineNumber, 1, startLineNumber, oldIndentation.length + 1),\n                        text: newIndent\n                    });\n                    firstLineText = newIndent + firstLineText.substr(oldIndentation.length);\n                }\n                else {\n                    const indentMetadata = getIndentMetadata(model, startLineNumber, this._languageConfigurationService);\n                    if (indentMetadata === 0 || indentMetadata === 8 /* IndentConsts.UNINDENT_MASK */) {\n                        // we paste content into a line where only contains whitespaces\n                        // after pasting, the indentation of the first line is already correct\n                        // the first line doesn't match any indentation rule\n                        // then no-op.\n                        return;\n                    }\n                }\n            }\n        }\n        const firstLineNumber = startLineNumber;\n        // ignore empty or ignored lines\n        while (startLineNumber < range.endLineNumber) {\n            if (!/\\S/.test(model.getLineContent(startLineNumber + 1))) {\n                startLineNumber++;\n                continue;\n            }\n            break;\n        }\n        if (startLineNumber !== range.endLineNumber) {\n            const virtualModel = {\n                tokenization: {\n                    getLineTokens: (lineNumber) => {\n                        return model.tokenization.getLineTokens(lineNumber);\n                    },\n                    getLanguageId: () => {\n                        return model.getLanguageId();\n                    },\n                    getLanguageIdAtPosition: (lineNumber, column) => {\n                        return model.getLanguageIdAtPosition(lineNumber, column);\n                    },\n                },\n                getLineContent: (lineNumber) => {\n                    if (lineNumber === firstLineNumber) {\n                        return firstLineText;\n                    }\n                    else {\n                        return model.getLineContent(lineNumber);\n                    }\n                }\n            };\n            const indentOfSecondLine = getGoodIndentForLine(autoIndent, virtualModel, model.getLanguageId(), startLineNumber + 1, indentConverter, this._languageConfigurationService);\n            if (indentOfSecondLine !== null) {\n                const newSpaceCntOfSecondLine = indentUtils.getSpaceCnt(indentOfSecondLine, tabSize);\n                const oldSpaceCntOfSecondLine = indentUtils.getSpaceCnt(strings.getLeadingWhitespace(model.getLineContent(startLineNumber + 1)), tabSize);\n                if (newSpaceCntOfSecondLine !== oldSpaceCntOfSecondLine) {\n                    const spaceCntOffset = newSpaceCntOfSecondLine - oldSpaceCntOfSecondLine;\n                    for (let i = startLineNumber + 1; i <= range.endLineNumber; i++) {\n                        const lineContent = model.getLineContent(i);\n                        const originalIndent = strings.getLeadingWhitespace(lineContent);\n                        const originalSpacesCnt = indentUtils.getSpaceCnt(originalIndent, tabSize);\n                        const newSpacesCnt = originalSpacesCnt + spaceCntOffset;\n                        const newIndent = indentUtils.generateIndent(newSpacesCnt, tabSize, insertSpaces);\n                        if (newIndent !== originalIndent) {\n                            textEdits.push({\n                                range: new Range(i, 1, i, originalIndent.length + 1),\n                                text: newIndent\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        if (textEdits.length > 0) {\n            this.editor.pushUndoStop();\n            const cmd = new AutoIndentOnPasteCommand(textEdits, this.editor.getSelection());\n            this.editor.executeCommand('autoIndentOnPaste', cmd);\n            this.editor.pushUndoStop();\n        }\n    }\n    shouldIgnoreLine(model, lineNumber) {\n        model.tokenization.forceTokenization(lineNumber);\n        const nonWhitespaceColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\n        if (nonWhitespaceColumn === 0) {\n            return true;\n        }\n        const tokens = model.tokenization.getLineTokens(lineNumber);\n        if (tokens.getCount() > 0) {\n            const firstNonWhitespaceTokenIndex = tokens.findTokenIndexAtOffset(nonWhitespaceColumn);\n            if (firstNonWhitespaceTokenIndex >= 0 && tokens.getStandardTokenType(firstNonWhitespaceTokenIndex) === 1 /* StandardTokenType.Comment */) {\n                return true;\n            }\n        }\n        return false;\n    }\n    dispose() {\n        this.callOnDispose.dispose();\n        this.callOnModel.dispose();\n    }\n};\nAutoIndentOnPaste.ID = 'editor.contrib.autoIndentOnPaste';\nAutoIndentOnPaste = __decorate([\n    __param(1, ILanguageConfigurationService)\n], AutoIndentOnPaste);\nexport { AutoIndentOnPaste };\nfunction getIndentationEditOperations(model, builder, tabSize, tabsToSpaces) {\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n        // Model is empty\n        return;\n    }\n    let spaces = '';\n    for (let i = 0; i < tabSize; i++) {\n        spaces += ' ';\n    }\n    const spacesRegExp = new RegExp(spaces, 'gi');\n    for (let lineNumber = 1, lineCount = model.getLineCount(); lineNumber <= lineCount; lineNumber++) {\n        let lastIndentationColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\n        if (lastIndentationColumn === 0) {\n            lastIndentationColumn = model.getLineMaxColumn(lineNumber);\n        }\n        if (lastIndentationColumn === 1) {\n            continue;\n        }\n        const originalIndentationRange = new Range(lineNumber, 1, lineNumber, lastIndentationColumn);\n        const originalIndentation = model.getValueInRange(originalIndentationRange);\n        const newIndentation = (tabsToSpaces\n            ? originalIndentation.replace(/\\t/ig, spaces)\n            : originalIndentation.replace(spacesRegExp, '\\t'));\n        builder.addEditOperation(originalIndentationRange, newIndentation);\n    }\n}\nexport class IndentationToSpacesCommand {\n    constructor(selection, tabSize) {\n        this.selection = selection;\n        this.tabSize = tabSize;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        this.selectionId = builder.trackSelection(this.selection);\n        getIndentationEditOperations(model, builder, this.tabSize, true);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n}\nexport class IndentationToTabsCommand {\n    constructor(selection, tabSize) {\n        this.selection = selection;\n        this.tabSize = tabSize;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        this.selectionId = builder.trackSelection(this.selection);\n        getIndentationEditOperations(model, builder, this.tabSize, false);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n}\nregisterEditorContribution(AutoIndentOnPaste.ID, AutoIndentOnPaste, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorAction(IndentationToSpacesAction);\nregisterEditorAction(IndentationToTabsAction);\nregisterEditorAction(IndentUsingTabs);\nregisterEditorAction(IndentUsingSpaces);\nregisterEditorAction(ChangeTabDisplaySize);\nregisterEditorAction(DetectIndentation);\nregisterEditorAction(ReindentLinesAction);\nregisterEditorAction(ReindentSelectedLinesAction);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CancellationError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { URI } from '../../../../base/common/uri.js';\nexport class InlayHintAnchor {\n    constructor(range, direction) {\n        this.range = range;\n        this.direction = direction;\n    }\n}\nexport class InlayHintItem {\n    constructor(hint, anchor, provider) {\n        this.hint = hint;\n        this.anchor = anchor;\n        this.provider = provider;\n        this._isResolved = false;\n    }\n    with(delta) {\n        const result = new InlayHintItem(this.hint, delta.anchor, this.provider);\n        result._isResolved = this._isResolved;\n        result._currentResolve = this._currentResolve;\n        return result;\n    }\n    resolve(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.provider.resolveInlayHint !== 'function') {\n                return;\n            }\n            if (this._currentResolve) {\n                // wait for an active resolve operation and try again\n                // when that's done.\n                yield this._currentResolve;\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                return this.resolve(token);\n            }\n            if (!this._isResolved) {\n                this._currentResolve = this._doResolve(token)\n                    .finally(() => this._currentResolve = undefined);\n            }\n            yield this._currentResolve;\n        });\n    }\n    _doResolve(token) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const newHint = yield Promise.resolve(this.provider.resolveInlayHint(this.hint, token));\n                this.hint.tooltip = (_a = newHint === null || newHint === void 0 ? void 0 : newHint.tooltip) !== null && _a !== void 0 ? _a : this.hint.tooltip;\n                this.hint.label = (_b = newHint === null || newHint === void 0 ? void 0 : newHint.label) !== null && _b !== void 0 ? _b : this.hint.label;\n                this._isResolved = true;\n            }\n            catch (err) {\n                onUnexpectedExternalError(err);\n                this._isResolved = false;\n            }\n        });\n    }\n}\nexport class InlayHintsFragments {\n    static create(registry, model, ranges, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = [];\n            const promises = registry.ordered(model).reverse().map(provider => ranges.map((range) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const result = yield provider.provideInlayHints(model, range, token);\n                    if (result === null || result === void 0 ? void 0 : result.hints.length) {\n                        data.push([result, provider]);\n                    }\n                }\n                catch (err) {\n                    onUnexpectedExternalError(err);\n                }\n            })));\n            yield Promise.all(promises.flat());\n            if (token.isCancellationRequested || model.isDisposed()) {\n                throw new CancellationError();\n            }\n            return new InlayHintsFragments(ranges, data, model);\n        });\n    }\n    constructor(ranges, data, model) {\n        this._disposables = new DisposableStore();\n        this.ranges = ranges;\n        this.provider = new Set();\n        const items = [];\n        for (const [list, provider] of data) {\n            this._disposables.add(list);\n            this.provider.add(provider);\n            for (const hint of list.hints) {\n                // compute the range to which the item should be attached to\n                const position = model.validatePosition(hint.position);\n                let direction = 'before';\n                const wordRange = InlayHintsFragments._getRangeAtPosition(model, position);\n                let range;\n                if (wordRange.getStartPosition().isBefore(position)) {\n                    range = Range.fromPositions(wordRange.getStartPosition(), position);\n                    direction = 'after';\n                }\n                else {\n                    range = Range.fromPositions(position, wordRange.getEndPosition());\n                    direction = 'before';\n                }\n                items.push(new InlayHintItem(hint, new InlayHintAnchor(range, direction), provider));\n            }\n        }\n        this.items = items.sort((a, b) => Position.compare(a.hint.position, b.hint.position));\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n    static _getRangeAtPosition(model, position) {\n        const line = position.lineNumber;\n        const word = model.getWordAtPosition(position);\n        if (word) {\n            // always prefer the word range\n            return new Range(line, word.startColumn, line, word.endColumn);\n        }\n        model.tokenization.tokenizeIfCheap(line);\n        const tokens = model.tokenization.getLineTokens(line);\n        const offset = position.column - 1;\n        const idx = tokens.findTokenIndexAtOffset(offset);\n        let start = tokens.getStartOffset(idx);\n        let end = tokens.getEndOffset(idx);\n        if (end - start === 1) {\n            // single character token, when at its end try leading/trailing token instead\n            if (start === offset && idx > 1) {\n                // leading token\n                start = tokens.getStartOffset(idx - 1);\n                end = tokens.getEndOffset(idx - 1);\n            }\n            else if (end === offset && idx < tokens.getCount() - 1) {\n                // trailing token\n                start = tokens.getStartOffset(idx + 1);\n                end = tokens.getEndOffset(idx + 1);\n            }\n        }\n        return new Range(line, start + 1, line, end + 1);\n    }\n}\nexport function asCommandLink(command) {\n    return URI.from({\n        scheme: Schemas.command,\n        path: command.id,\n        query: command.arguments && encodeURIComponent(JSON.stringify(command.arguments))\n    }).toString();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar InlayHintsController_1;\nimport { ModifierKeyEmitter } from '../../../../base/browser/dom.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { DynamicCssRules } from '../../../browser/editorDom.js';\nimport { StableEditorScrollState } from '../../../browser/stableEditorScroll.js';\nimport { EDITOR_FONT_DEFAULTS } from '../../../common/config/editorOptions.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport * as languages from '../../../common/languages.js';\nimport { InjectedTextCursorStops } from '../../../common/model.js';\nimport { ModelDecorationInjectedTextOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { ClickLinkGesture } from '../../gotoSymbol/browser/link/clickLinkGesture.js';\nimport { InlayHintAnchor, InlayHintsFragments } from './inlayHints.js';\nimport { goToDefinitionWithLocation, showGoToContextMenu } from './inlayHintsLocations.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator, IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport * as colors from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\n// --- hint caching service (per session)\nclass InlayHintsCache {\n    constructor() {\n        this._entries = new LRUCache(50);\n    }\n    get(model) {\n        const key = InlayHintsCache._key(model);\n        return this._entries.get(key);\n    }\n    set(model, value) {\n        const key = InlayHintsCache._key(model);\n        this._entries.set(key, value);\n    }\n    static _key(model) {\n        return `${model.uri.toString()}/${model.getVersionId()}`;\n    }\n}\nconst IInlayHintsCache = createDecorator('IInlayHintsCache');\nregisterSingleton(IInlayHintsCache, InlayHintsCache, 1 /* InstantiationType.Delayed */);\n// --- rendered label\nexport class RenderedInlayHintLabelPart {\n    constructor(item, index) {\n        this.item = item;\n        this.index = index;\n    }\n    get part() {\n        const label = this.item.hint.label;\n        if (typeof label === 'string') {\n            return { label };\n        }\n        else {\n            return label[this.index];\n        }\n    }\n}\nclass ActiveInlayHintInfo {\n    constructor(part, hasTriggerModifier) {\n        this.part = part;\n        this.hasTriggerModifier = hasTriggerModifier;\n    }\n}\n// --- controller\nlet InlayHintsController = InlayHintsController_1 = class InlayHintsController {\n    static get(editor) {\n        var _a;\n        return (_a = editor.getContribution(InlayHintsController_1.ID)) !== null && _a !== void 0 ? _a : undefined;\n    }\n    constructor(_editor, _languageFeaturesService, _featureDebounce, _inlayHintsCache, _commandService, _notificationService, _instaService) {\n        this._editor = _editor;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._inlayHintsCache = _inlayHintsCache;\n        this._commandService = _commandService;\n        this._notificationService = _notificationService;\n        this._instaService = _instaService;\n        this._disposables = new DisposableStore();\n        this._sessionDisposables = new DisposableStore();\n        this._decorationsMetadata = new Map();\n        this._ruleFactory = new DynamicCssRules(this._editor);\n        this._activeRenderMode = 0 /* RenderMode.Normal */;\n        this._debounceInfo = _featureDebounce.for(_languageFeaturesService.inlayHintsProvider, 'InlayHint', { min: 25 });\n        this._disposables.add(_languageFeaturesService.inlayHintsProvider.onDidChange(() => this._update()));\n        this._disposables.add(_editor.onDidChangeModel(() => this._update()));\n        this._disposables.add(_editor.onDidChangeModelLanguage(() => this._update()));\n        this._disposables.add(_editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(139 /* EditorOption.inlayHints */)) {\n                this._update();\n            }\n        }));\n        this._update();\n    }\n    dispose() {\n        this._sessionDisposables.dispose();\n        this._removeAllDecorations();\n        this._disposables.dispose();\n    }\n    _update() {\n        this._sessionDisposables.clear();\n        this._removeAllDecorations();\n        const options = this._editor.getOption(139 /* EditorOption.inlayHints */);\n        if (options.enabled === 'off') {\n            return;\n        }\n        const model = this._editor.getModel();\n        if (!model || !this._languageFeaturesService.inlayHintsProvider.has(model)) {\n            return;\n        }\n        // iff possible, quickly update from cache\n        const cached = this._inlayHintsCache.get(model);\n        if (cached) {\n            this._updateHintsDecorators([model.getFullModelRange()], cached);\n        }\n        this._sessionDisposables.add(toDisposable(() => {\n            // cache items when switching files etc\n            if (!model.isDisposed()) {\n                this._cacheHintsForFastRestore(model);\n            }\n        }));\n        let cts;\n        const watchedProviders = new Set();\n        const scheduler = new RunOnceScheduler(() => __awaiter(this, void 0, void 0, function* () {\n            const t1 = Date.now();\n            cts === null || cts === void 0 ? void 0 : cts.dispose(true);\n            cts = new CancellationTokenSource();\n            const listener = model.onWillDispose(() => cts === null || cts === void 0 ? void 0 : cts.cancel());\n            try {\n                const myToken = cts.token;\n                const inlayHints = yield InlayHintsFragments.create(this._languageFeaturesService.inlayHintsProvider, model, this._getHintsRanges(), myToken);\n                scheduler.delay = this._debounceInfo.update(model, Date.now() - t1);\n                if (myToken.isCancellationRequested) {\n                    inlayHints.dispose();\n                    return;\n                }\n                // listen to provider changes\n                for (const provider of inlayHints.provider) {\n                    if (typeof provider.onDidChangeInlayHints === 'function' && !watchedProviders.has(provider)) {\n                        watchedProviders.add(provider);\n                        this._sessionDisposables.add(provider.onDidChangeInlayHints(() => {\n                            if (!scheduler.isScheduled()) { // ignore event when request is already scheduled\n                                scheduler.schedule();\n                            }\n                        }));\n                    }\n                }\n                this._sessionDisposables.add(inlayHints);\n                this._updateHintsDecorators(inlayHints.ranges, inlayHints.items);\n                this._cacheHintsForFastRestore(model);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n            finally {\n                cts.dispose();\n                listener.dispose();\n            }\n        }), this._debounceInfo.get(model));\n        this._sessionDisposables.add(scheduler);\n        this._sessionDisposables.add(toDisposable(() => cts === null || cts === void 0 ? void 0 : cts.dispose(true)));\n        scheduler.schedule(0);\n        this._sessionDisposables.add(this._editor.onDidScrollChange((e) => {\n            // update when scroll position changes\n            // uses scrollTopChanged has weak heuristic to differenatiate between scrolling due to\n            // typing or due to \"actual\" scrolling\n            if (e.scrollTopChanged || !scheduler.isScheduled()) {\n                scheduler.schedule();\n            }\n        }));\n        this._sessionDisposables.add(this._editor.onDidChangeModelContent((e) => {\n            // update less aggressive when typing\n            const delay = Math.max(scheduler.delay, 1250);\n            scheduler.schedule(delay);\n        }));\n        if (options.enabled === 'on') {\n            // different \"on\" modes: always\n            this._activeRenderMode = 0 /* RenderMode.Normal */;\n        }\n        else {\n            // different \"on\" modes: offUnlessPressed, or onUnlessPressed\n            let defaultMode;\n            let altMode;\n            if (options.enabled === 'onUnlessPressed') {\n                defaultMode = 0 /* RenderMode.Normal */;\n                altMode = 1 /* RenderMode.Invisible */;\n            }\n            else {\n                defaultMode = 1 /* RenderMode.Invisible */;\n                altMode = 0 /* RenderMode.Normal */;\n            }\n            this._activeRenderMode = defaultMode;\n            this._sessionDisposables.add(ModifierKeyEmitter.getInstance().event(e => {\n                if (!this._editor.hasModel()) {\n                    return;\n                }\n                const newRenderMode = e.altKey && e.ctrlKey && !(e.shiftKey || e.metaKey) ? altMode : defaultMode;\n                if (newRenderMode !== this._activeRenderMode) {\n                    this._activeRenderMode = newRenderMode;\n                    const model = this._editor.getModel();\n                    const copies = this._copyInlayHintsWithCurrentAnchor(model);\n                    this._updateHintsDecorators([model.getFullModelRange()], copies);\n                    scheduler.schedule(0);\n                }\n            }));\n        }\n        // mouse gestures\n        this._sessionDisposables.add(this._installDblClickGesture(() => scheduler.schedule(0)));\n        this._sessionDisposables.add(this._installLinkGesture());\n        this._sessionDisposables.add(this._installContextMenu());\n    }\n    _installLinkGesture() {\n        const store = new DisposableStore();\n        const gesture = store.add(new ClickLinkGesture(this._editor));\n        // let removeHighlight = () => { };\n        const sessionStore = new DisposableStore();\n        store.add(sessionStore);\n        store.add(gesture.onMouseMoveOrRelevantKeyDown(e => {\n            const [mouseEvent] = e;\n            const labelPart = this._getInlayHintLabelPart(mouseEvent);\n            const model = this._editor.getModel();\n            if (!labelPart || !model) {\n                sessionStore.clear();\n                return;\n            }\n            // resolve the item\n            const cts = new CancellationTokenSource();\n            sessionStore.add(toDisposable(() => cts.dispose(true)));\n            labelPart.item.resolve(cts.token);\n            // render link => when the modifier is pressed and when there is a command or location\n            this._activeInlayHintPart = labelPart.part.command || labelPart.part.location\n                ? new ActiveInlayHintInfo(labelPart, mouseEvent.hasTriggerModifier)\n                : undefined;\n            const lineNumber = model.validatePosition(labelPart.item.hint.position).lineNumber;\n            const range = new Range(lineNumber, 1, lineNumber, model.getLineMaxColumn(lineNumber));\n            const lineHints = this._getInlineHintsForRange(range);\n            this._updateHintsDecorators([range], lineHints);\n            sessionStore.add(toDisposable(() => {\n                this._activeInlayHintPart = undefined;\n                this._updateHintsDecorators([range], lineHints);\n            }));\n        }));\n        store.add(gesture.onCancel(() => sessionStore.clear()));\n        store.add(gesture.onExecute((e) => __awaiter(this, void 0, void 0, function* () {\n            const label = this._getInlayHintLabelPart(e);\n            if (label) {\n                const part = label.part;\n                if (part.location) {\n                    // location -> execute go to def\n                    this._instaService.invokeFunction(goToDefinitionWithLocation, e, this._editor, part.location);\n                }\n                else if (languages.Command.is(part.command)) {\n                    // command -> execute it\n                    yield this._invokeCommand(part.command, label.item);\n                }\n            }\n        })));\n        return store;\n    }\n    _getInlineHintsForRange(range) {\n        const lineHints = new Set();\n        for (const data of this._decorationsMetadata.values()) {\n            if (range.containsRange(data.item.anchor.range)) {\n                lineHints.add(data.item);\n            }\n        }\n        return Array.from(lineHints);\n    }\n    _installDblClickGesture(updateInlayHints) {\n        return this._editor.onMouseUp((e) => __awaiter(this, void 0, void 0, function* () {\n            if (e.event.detail !== 2) {\n                return;\n            }\n            const part = this._getInlayHintLabelPart(e);\n            if (!part) {\n                return;\n            }\n            e.event.preventDefault();\n            yield part.item.resolve(CancellationToken.None);\n            if (isNonEmptyArray(part.item.hint.textEdits)) {\n                const edits = part.item.hint.textEdits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text));\n                this._editor.executeEdits('inlayHint.default', edits);\n                updateInlayHints();\n            }\n        }));\n    }\n    _installContextMenu() {\n        return this._editor.onContextMenu((e) => __awaiter(this, void 0, void 0, function* () {\n            if (!(e.event.target instanceof HTMLElement)) {\n                return;\n            }\n            const part = this._getInlayHintLabelPart(e);\n            if (part) {\n                yield this._instaService.invokeFunction(showGoToContextMenu, this._editor, e.event.target, part);\n            }\n        }));\n    }\n    _getInlayHintLabelPart(e) {\n        var _a;\n        if (e.target.type !== 6 /* MouseTargetType.CONTENT_TEXT */) {\n            return undefined;\n        }\n        const options = (_a = e.target.detail.injectedText) === null || _a === void 0 ? void 0 : _a.options;\n        if (options instanceof ModelDecorationInjectedTextOptions && (options === null || options === void 0 ? void 0 : options.attachedData) instanceof RenderedInlayHintLabelPart) {\n            return options.attachedData;\n        }\n        return undefined;\n    }\n    _invokeCommand(command, item) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._commandService.executeCommand(command.id, ...((_a = command.arguments) !== null && _a !== void 0 ? _a : []));\n            }\n            catch (err) {\n                this._notificationService.notify({\n                    severity: Severity.Error,\n                    source: item.provider.displayName,\n                    message: err\n                });\n            }\n        });\n    }\n    _cacheHintsForFastRestore(model) {\n        const hints = this._copyInlayHintsWithCurrentAnchor(model);\n        this._inlayHintsCache.set(model, hints);\n    }\n    // return inlay hints but with an anchor that reflects \"updates\"\n    // that happened after receiving them, e.g adding new lines before a hint\n    _copyInlayHintsWithCurrentAnchor(model) {\n        const items = new Map();\n        for (const [id, obj] of this._decorationsMetadata) {\n            if (items.has(obj.item)) {\n                // an inlay item can be rendered as multiple decorations\n                // but they will all uses the same range\n                continue;\n            }\n            const range = model.getDecorationRange(id);\n            if (range) {\n                // update range with whatever the editor has tweaked it to\n                const anchor = new InlayHintAnchor(range, obj.item.anchor.direction);\n                const copy = obj.item.with({ anchor });\n                items.set(obj.item, copy);\n            }\n        }\n        return Array.from(items.values());\n    }\n    _getHintsRanges() {\n        const extra = 30;\n        const model = this._editor.getModel();\n        const visibleRanges = this._editor.getVisibleRangesPlusViewportAboveBelow();\n        const result = [];\n        for (const range of visibleRanges.sort(Range.compareRangesUsingStarts)) {\n            const extendedRange = model.validateRange(new Range(range.startLineNumber - extra, range.startColumn, range.endLineNumber + extra, range.endColumn));\n            if (result.length === 0 || !Range.areIntersectingOrTouching(result[result.length - 1], extendedRange)) {\n                result.push(extendedRange);\n            }\n            else {\n                result[result.length - 1] = Range.plusRange(result[result.length - 1], extendedRange);\n            }\n        }\n        return result;\n    }\n    _updateHintsDecorators(ranges, items) {\n        var _a, _b;\n        // utils to collect/create injected text decorations\n        const newDecorationsData = [];\n        const addInjectedText = (item, ref, content, cursorStops, attachedData) => {\n            const opts = {\n                content,\n                inlineClassNameAffectsLetterSpacing: true,\n                inlineClassName: ref.className,\n                cursorStops,\n                attachedData\n            };\n            newDecorationsData.push({\n                item,\n                classNameRef: ref,\n                decoration: {\n                    range: item.anchor.range,\n                    options: {\n                        // className: \"rangeHighlight\", // DEBUG highlight to see to what range a hint is attached\n                        description: 'InlayHint',\n                        showIfCollapsed: item.anchor.range.isEmpty(), // \"original\" range is empty\n                        collapseOnReplaceEdit: !item.anchor.range.isEmpty(),\n                        stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */,\n                        [item.anchor.direction]: this._activeRenderMode === 0 /* RenderMode.Normal */ ? opts : undefined\n                    }\n                }\n            });\n        };\n        const addInjectedWhitespace = (item, isLast) => {\n            const marginRule = this._ruleFactory.createClassNameRef({\n                width: `${(fontSize / 3) | 0}px`,\n                display: 'inline-block'\n            });\n            addInjectedText(item, marginRule, '\\u200a', isLast ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None);\n        };\n        //\n        const { fontSize, fontFamily, padding, isUniform } = this._getLayoutInfo();\n        const fontFamilyVar = '--code-editorInlayHintsFontFamily';\n        this._editor.getContainerDomNode().style.setProperty(fontFamilyVar, fontFamily);\n        for (const item of items) {\n            // whitespace leading the actual label\n            if (item.hint.paddingLeft) {\n                addInjectedWhitespace(item, false);\n            }\n            // the label with its parts\n            const parts = typeof item.hint.label === 'string'\n                ? [{ label: item.hint.label }]\n                : item.hint.label;\n            for (let i = 0; i < parts.length; i++) {\n                const part = parts[i];\n                const isFirst = i === 0;\n                const isLast = i === parts.length - 1;\n                const cssProperties = {\n                    fontSize: `${fontSize}px`,\n                    fontFamily: `var(${fontFamilyVar}), ${EDITOR_FONT_DEFAULTS.fontFamily}`,\n                    verticalAlign: isUniform ? 'baseline' : 'middle',\n                    unicodeBidi: 'isolate'\n                };\n                if (isNonEmptyArray(item.hint.textEdits)) {\n                    cssProperties.cursor = 'default';\n                }\n                this._fillInColors(cssProperties, item.hint);\n                if ((part.command || part.location) && ((_a = this._activeInlayHintPart) === null || _a === void 0 ? void 0 : _a.part.item) === item && this._activeInlayHintPart.part.index === i) {\n                    // active link!\n                    cssProperties.textDecoration = 'underline';\n                    if (this._activeInlayHintPart.hasTriggerModifier) {\n                        cssProperties.color = themeColorFromId(colors.editorActiveLinkForeground);\n                        cssProperties.cursor = 'pointer';\n                    }\n                }\n                if (padding) {\n                    if (isFirst && isLast) {\n                        // only element\n                        cssProperties.padding = `1px ${Math.max(1, fontSize / 4) | 0}px`;\n                        cssProperties.borderRadius = `${(fontSize / 4) | 0}px`;\n                    }\n                    else if (isFirst) {\n                        // first element\n                        cssProperties.padding = `1px 0 1px ${Math.max(1, fontSize / 4) | 0}px`;\n                        cssProperties.borderRadius = `${(fontSize / 4) | 0}px 0 0 ${(fontSize / 4) | 0}px`;\n                    }\n                    else if (isLast) {\n                        // last element\n                        cssProperties.padding = `1px ${Math.max(1, fontSize / 4) | 0}px 1px 0`;\n                        cssProperties.borderRadius = `0 ${(fontSize / 4) | 0}px ${(fontSize / 4) | 0}px 0`;\n                    }\n                    else {\n                        cssProperties.padding = `1px 0 1px 0`;\n                    }\n                }\n                addInjectedText(item, this._ruleFactory.createClassNameRef(cssProperties), fixSpace(part.label), isLast && !item.hint.paddingRight ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None, new RenderedInlayHintLabelPart(item, i));\n            }\n            // whitespace trailing the actual label\n            if (item.hint.paddingRight) {\n                addInjectedWhitespace(item, true);\n            }\n            if (newDecorationsData.length > InlayHintsController_1._MAX_DECORATORS) {\n                break;\n            }\n        }\n        // collect all decoration ids that are affected by the ranges\n        // and only update those decorations\n        const decorationIdsToReplace = [];\n        for (const range of ranges) {\n            for (const { id } of (_b = this._editor.getDecorationsInRange(range)) !== null && _b !== void 0 ? _b : []) {\n                const metadata = this._decorationsMetadata.get(id);\n                if (metadata) {\n                    decorationIdsToReplace.push(id);\n                    metadata.classNameRef.dispose();\n                    this._decorationsMetadata.delete(id);\n                }\n            }\n        }\n        const scrollState = StableEditorScrollState.capture(this._editor);\n        this._editor.changeDecorations(accessor => {\n            const newDecorationIds = accessor.deltaDecorations(decorationIdsToReplace, newDecorationsData.map(d => d.decoration));\n            for (let i = 0; i < newDecorationIds.length; i++) {\n                const data = newDecorationsData[i];\n                this._decorationsMetadata.set(newDecorationIds[i], data);\n            }\n        });\n        scrollState.restore(this._editor);\n    }\n    _fillInColors(props, hint) {\n        if (hint.kind === languages.InlayHintKind.Parameter) {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintParameterBackground);\n            props.color = themeColorFromId(colors.editorInlayHintParameterForeground);\n        }\n        else if (hint.kind === languages.InlayHintKind.Type) {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintTypeBackground);\n            props.color = themeColorFromId(colors.editorInlayHintTypeForeground);\n        }\n        else {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintBackground);\n            props.color = themeColorFromId(colors.editorInlayHintForeground);\n        }\n    }\n    _getLayoutInfo() {\n        const options = this._editor.getOption(139 /* EditorOption.inlayHints */);\n        const padding = options.padding;\n        const editorFontSize = this._editor.getOption(52 /* EditorOption.fontSize */);\n        const editorFontFamily = this._editor.getOption(49 /* EditorOption.fontFamily */);\n        let fontSize = options.fontSize;\n        if (!fontSize || fontSize < 5 || fontSize > editorFontSize) {\n            fontSize = editorFontSize;\n        }\n        const fontFamily = options.fontFamily || editorFontFamily;\n        const isUniform = !padding\n            && fontFamily === editorFontFamily\n            && fontSize === editorFontSize;\n        return { fontSize, fontFamily, padding, isUniform };\n    }\n    _removeAllDecorations() {\n        this._editor.removeDecorations(Array.from(this._decorationsMetadata.keys()));\n        for (const obj of this._decorationsMetadata.values()) {\n            obj.classNameRef.dispose();\n        }\n        this._decorationsMetadata.clear();\n    }\n};\nInlayHintsController.ID = 'editor.contrib.InlayHints';\nInlayHintsController._MAX_DECORATORS = 1500;\nInlayHintsController = InlayHintsController_1 = __decorate([\n    __param(1, ILanguageFeaturesService),\n    __param(2, ILanguageFeatureDebounceService),\n    __param(3, IInlayHintsCache),\n    __param(4, ICommandService),\n    __param(5, INotificationService),\n    __param(6, IInstantiationService)\n], InlayHintsController);\nexport { InlayHintsController };\n// Prevents the view from potentially visible whitespace\nfunction fixSpace(str) {\n    const noBreakWhitespace = '\\xa0';\n    return str.replace(/[ \\t]/g, noBreakWhitespace);\n}\nCommandsRegistry.registerCommand('_executeInlayHintProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\n    const [uri, range] = args;\n    assertType(URI.isUri(uri));\n    assertType(Range.isIRange(range));\n    const { inlayHintsProvider } = accessor.get(ILanguageFeaturesService);\n    const ref = yield accessor.get(ITextModelService).createModelReference(uri);\n    try {\n        const model = yield InlayHintsFragments.create(inlayHintsProvider, ref.object.textEditorModel, [Range.lift(range)], CancellationToken.None);\n        const result = model.items.map(i => i.hint);\n        setTimeout(() => model.dispose(), 0); // dispose after sending to ext host\n        return result;\n    }\n    finally {\n        ref.dispose();\n    }\n}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { isEmptyMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ModelDecorationInjectedTextOptions } from '../../../common/model/textModel.js';\nimport { HoverForeignElementAnchor } from '../../hover/browser/hoverTypes.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { getHover } from '../../hover/browser/getHover.js';\nimport { MarkdownHover, MarkdownHoverParticipant } from '../../hover/browser/markdownHoverParticipant.js';\nimport { RenderedInlayHintLabelPart, InlayHintsController } from './inlayHintsController.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { localize } from '../../../../nls.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { asCommandLink } from './inlayHints.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nclass InlayHintsHoverAnchor extends HoverForeignElementAnchor {\n    constructor(part, owner, initialMousePosX, initialMousePosY) {\n        super(10, owner, part.item.anchor.range, initialMousePosX, initialMousePosY, true);\n        this.part = part;\n    }\n}\nlet InlayHintsHover = class InlayHintsHover extends MarkdownHoverParticipant {\n    constructor(editor, languageService, openerService, configurationService, _resolverService, languageFeaturesService) {\n        super(editor, languageService, openerService, configurationService, languageFeaturesService);\n        this._resolverService = _resolverService;\n        this.hoverOrdinal = 6;\n    }\n    suggestHoverAnchor(mouseEvent) {\n        var _a;\n        const controller = InlayHintsController.get(this._editor);\n        if (!controller) {\n            return null;\n        }\n        if (mouseEvent.target.type !== 6 /* MouseTargetType.CONTENT_TEXT */) {\n            return null;\n        }\n        const options = (_a = mouseEvent.target.detail.injectedText) === null || _a === void 0 ? void 0 : _a.options;\n        if (!(options instanceof ModelDecorationInjectedTextOptions && options.attachedData instanceof RenderedInlayHintLabelPart)) {\n            return null;\n        }\n        return new InlayHintsHoverAnchor(options.attachedData, this, mouseEvent.event.posx, mouseEvent.event.posy);\n    }\n    computeSync() {\n        return [];\n    }\n    computeAsync(anchor, _lineDecorations, token) {\n        if (!(anchor instanceof InlayHintsHoverAnchor)) {\n            return AsyncIterableObject.EMPTY;\n        }\n        return new AsyncIterableObject((executor) => __awaiter(this, void 0, void 0, function* () {\n            var _a, e_1, _b, _c;\n            const { part } = anchor;\n            yield part.item.resolve(token);\n            if (token.isCancellationRequested) {\n                return;\n            }\n            // (1) Inlay Tooltip\n            let itemTooltip;\n            if (typeof part.item.hint.tooltip === 'string') {\n                itemTooltip = new MarkdownString().appendText(part.item.hint.tooltip);\n            }\n            else if (part.item.hint.tooltip) {\n                itemTooltip = part.item.hint.tooltip;\n            }\n            if (itemTooltip) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [itemTooltip], false, 0));\n            }\n            // (1.2) Inlay dbl-click gesture\n            if (isNonEmptyArray(part.item.hint.textEdits)) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [new MarkdownString().appendText(localize('hint.dbl', \"Double-click to insert\"))], false, 10001));\n            }\n            // (2) Inlay Label Part Tooltip\n            let partTooltip;\n            if (typeof part.part.tooltip === 'string') {\n                partTooltip = new MarkdownString().appendText(part.part.tooltip);\n            }\n            else if (part.part.tooltip) {\n                partTooltip = part.part.tooltip;\n            }\n            if (partTooltip) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [partTooltip], false, 1));\n            }\n            // (2.2) Inlay Label Part Help Hover\n            if (part.part.location || part.part.command) {\n                let linkHint;\n                const useMetaKey = this._editor.getOption(77 /* EditorOption.multiCursorModifier */) === 'altKey';\n                const kb = useMetaKey\n                    ? platform.isMacintosh\n                        ? localize('links.navigate.kb.meta.mac', \"cmd + click\")\n                        : localize('links.navigate.kb.meta', \"ctrl + click\")\n                    : platform.isMacintosh\n                        ? localize('links.navigate.kb.alt.mac', \"option + click\")\n                        : localize('links.navigate.kb.alt', \"alt + click\");\n                if (part.part.location && part.part.command) {\n                    linkHint = new MarkdownString().appendText(localize('hint.defAndCommand', 'Go to Definition ({0}), right click for more', kb));\n                }\n                else if (part.part.location) {\n                    linkHint = new MarkdownString().appendText(localize('hint.def', 'Go to Definition ({0})', kb));\n                }\n                else if (part.part.command) {\n                    linkHint = new MarkdownString(`[${localize('hint.cmd', \"Execute Command\")}](${asCommandLink(part.part.command)} \"${part.part.command.title}\") (${kb})`, { isTrusted: true });\n                }\n                if (linkHint) {\n                    executor.emitOne(new MarkdownHover(this, anchor.range, [linkHint], false, 10000));\n                }\n            }\n            // (3) Inlay Label Part Location tooltip\n            const iterable = yield this._resolveInlayHintLabelPartHover(part, token);\n            try {\n                for (var _d = true, iterable_1 = __asyncValues(iterable), iterable_1_1; iterable_1_1 = yield iterable_1.next(), _a = iterable_1_1.done, !_a; _d = true) {\n                    _c = iterable_1_1.value;\n                    _d = false;\n                    const item = _c;\n                    executor.emitOne(item);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_1.return)) yield _b.call(iterable_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }));\n    }\n    _resolveInlayHintLabelPartHover(part, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!part.part.location) {\n                return AsyncIterableObject.EMPTY;\n            }\n            const { uri, range } = part.part.location;\n            const ref = yield this._resolverService.createModelReference(uri);\n            try {\n                const model = ref.object.textEditorModel;\n                if (!this._languageFeaturesService.hoverProvider.has(model)) {\n                    return AsyncIterableObject.EMPTY;\n                }\n                return getHover(this._languageFeaturesService.hoverProvider, model, new Position(range.startLineNumber, range.startColumn), token)\n                    .filter(item => !isEmptyMarkdownString(item.hover.contents))\n                    .map(item => new MarkdownHover(this, part.item.anchor.range, item.hover.contents, false, 2 + item.ordinal));\n            }\n            finally {\n                ref.dispose();\n            }\n        });\n    }\n};\nInlayHintsHover = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IConfigurationService),\n    __param(4, ITextModelService),\n    __param(5, ILanguageFeaturesService)\n], InlayHintsHover);\nexport { InlayHintsHover };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { HoverParticipantRegistry } from '../../hover/browser/hoverTypes.js';\nimport { InlayHintsController } from './inlayHintsController.js';\nimport { InlayHintsHover } from './inlayHintsHover.js';\nregisterEditorContribution(InlayHintsController.ID, InlayHintsController, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nHoverParticipantRegistry.register(InlayHintsHover);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Action, Separator } from '../../../../base/common/actions.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { generateUuid } from '../../../../base/common/uuid.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { DefinitionAction, SymbolNavigationAction, SymbolNavigationAnchor } from '../../gotoSymbol/browser/goToCommands.js';\nimport { PeekContext } from '../../peekView/browser/peekView.js';\nimport { isIMenuItem, MenuId, MenuItemAction, MenuRegistry } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nexport function showGoToContextMenu(accessor, editor, anchor, part) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const resolverService = accessor.get(ITextModelService);\n        const contextMenuService = accessor.get(IContextMenuService);\n        const commandService = accessor.get(ICommandService);\n        const instaService = accessor.get(IInstantiationService);\n        const notificationService = accessor.get(INotificationService);\n        yield part.item.resolve(CancellationToken.None);\n        if (!part.part.location) {\n            return;\n        }\n        const location = part.part.location;\n        const menuActions = [];\n        // from all registered (not active) context menu actions select those\n        // that are a symbol navigation actions\n        const filter = new Set(MenuRegistry.getMenuItems(MenuId.EditorContext)\n            .map(item => isIMenuItem(item) ? item.command.id : generateUuid()));\n        for (const delegate of SymbolNavigationAction.all()) {\n            if (filter.has(delegate.desc.id)) {\n                menuActions.push(new Action(delegate.desc.id, MenuItemAction.label(delegate.desc, { renderShortTitle: true }), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                    const ref = yield resolverService.createModelReference(location.uri);\n                    try {\n                        const symbolAnchor = new SymbolNavigationAnchor(ref.object.textEditorModel, Range.getStartPosition(location.range));\n                        const range = part.item.anchor.range;\n                        yield instaService.invokeFunction(delegate.runEditorCommand.bind(delegate), editor, symbolAnchor, range);\n                    }\n                    finally {\n                        ref.dispose();\n                    }\n                })));\n            }\n        }\n        if (part.part.command) {\n            const { command } = part.part;\n            menuActions.push(new Separator());\n            menuActions.push(new Action(command.id, command.title, undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                var _b;\n                try {\n                    yield commandService.executeCommand(command.id, ...((_b = command.arguments) !== null && _b !== void 0 ? _b : []));\n                }\n                catch (err) {\n                    notificationService.notify({\n                        severity: Severity.Error,\n                        source: part.item.provider.displayName,\n                        message: err\n                    });\n                }\n            })));\n        }\n        // show context menu\n        const useShadowDOM = editor.getOption(126 /* EditorOption.useShadowDOM */);\n        contextMenuService.showContextMenu({\n            domForShadowRoot: useShadowDOM ? (_a = editor.getDomNode()) !== null && _a !== void 0 ? _a : undefined : undefined,\n            getAnchor: () => {\n                const box = dom.getDomNodePagePosition(anchor);\n                return { x: box.left, y: box.top + box.height + 8 };\n            },\n            getActions: () => menuActions,\n            onHide: () => {\n                editor.focus();\n            },\n            autoSelectFirstItem: true,\n        });\n    });\n}\nexport function goToDefinitionWithLocation(accessor, event, editor, location) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const resolverService = accessor.get(ITextModelService);\n        const ref = yield resolverService.createModelReference(location.uri);\n        yield editor.invokeWithinContext((accessor) => __awaiter(this, void 0, void 0, function* () {\n            const openToSide = event.hasSideBySideModifier;\n            const contextKeyService = accessor.get(IContextKeyService);\n            const isInPeek = PeekContext.inPeekEditor.getValue(contextKeyService);\n            const canPeek = !openToSide && editor.getOption(87 /* EditorOption.definitionLinkOpensInPeek */) && !isInPeek;\n            const action = new DefinitionAction({ openToSide, openInPeek: canPeek, muteMessage: true }, { title: { value: '', original: '' }, id: '', precondition: undefined });\n            return action.run(accessor, new SymbolNavigationAnchor(ref.object.textEditorModel, Range.getStartPosition(location.range)), Range.lift(location.range));\n        }));\n        ref.dispose();\n    });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const inlineSuggestCommitId = 'editor.action.inlineSuggest.commit';\nexport const showPreviousInlineSuggestionActionId = 'editor.action.inlineSuggest.showPrevious';\nexport const showNextInlineSuggestionActionId = 'editor.action.inlineSuggest.showNext';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { autorun } from '../../../../base/common/observable.js';\nimport { firstNonWhitespaceIndex } from '../../../../base/common/strings.js';\nimport { CursorColumns } from '../../../common/core/cursorColumns.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { localize } from '../../../../nls.js';\nexport class InlineCompletionContextKeys extends Disposable {\n    constructor(contextKeyService, model) {\n        super();\n        this.contextKeyService = contextKeyService;\n        this.model = model;\n        this.inlineCompletionVisible = InlineCompletionContextKeys.inlineSuggestionVisible.bindTo(this.contextKeyService);\n        this.inlineCompletionSuggestsIndentation = InlineCompletionContextKeys.inlineSuggestionHasIndentation.bindTo(this.contextKeyService);\n        this.inlineCompletionSuggestsIndentationLessThanTabSize = InlineCompletionContextKeys.inlineSuggestionHasIndentationLessThanTabSize.bindTo(this.contextKeyService);\n        this.suppressSuggestions = InlineCompletionContextKeys.suppressSuggestions.bindTo(this.contextKeyService);\n        this._register(autorun(reader => {\n            /** @description update context key: inlineCompletionVisible, suppressSuggestions */\n            const model = this.model.read(reader);\n            const state = model === null || model === void 0 ? void 0 : model.state.read(reader);\n            const isInlineCompletionVisible = !!(state === null || state === void 0 ? void 0 : state.inlineCompletion) && (state === null || state === void 0 ? void 0 : state.ghostText) !== undefined && !(state === null || state === void 0 ? void 0 : state.ghostText.isEmpty());\n            this.inlineCompletionVisible.set(isInlineCompletionVisible);\n            if ((state === null || state === void 0 ? void 0 : state.ghostText) && (state === null || state === void 0 ? void 0 : state.inlineCompletion)) {\n                this.suppressSuggestions.set(state.inlineCompletion.inlineCompletion.source.inlineCompletions.suppressSuggestions);\n            }\n        }));\n        this._register(autorun(reader => {\n            /** @description update context key: inlineCompletionSuggestsIndentation, inlineCompletionSuggestsIndentationLessThanTabSize */\n            const model = this.model.read(reader);\n            let startsWithIndentation = false;\n            let startsWithIndentationLessThanTabSize = true;\n            const ghostText = model === null || model === void 0 ? void 0 : model.ghostText.read(reader);\n            if (!!(model === null || model === void 0 ? void 0 : model.selectedSuggestItem) && ghostText && ghostText.parts.length > 0) {\n                const { column, lines } = ghostText.parts[0];\n                const firstLine = lines[0];\n                const indentationEndColumn = model.textModel.getLineIndentColumn(ghostText.lineNumber);\n                const inIndentation = column <= indentationEndColumn;\n                if (inIndentation) {\n                    let firstNonWsIdx = firstNonWhitespaceIndex(firstLine);\n                    if (firstNonWsIdx === -1) {\n                        firstNonWsIdx = firstLine.length - 1;\n                    }\n                    startsWithIndentation = firstNonWsIdx > 0;\n                    const tabSize = model.textModel.getOptions().tabSize;\n                    const visibleColumnIndentation = CursorColumns.visibleColumnFromColumn(firstLine, firstNonWsIdx + 1, tabSize);\n                    startsWithIndentationLessThanTabSize = visibleColumnIndentation < tabSize;\n                }\n            }\n            this.inlineCompletionSuggestsIndentation.set(startsWithIndentation);\n            this.inlineCompletionSuggestsIndentationLessThanTabSize.set(startsWithIndentationLessThanTabSize);\n        }));\n    }\n}\nInlineCompletionContextKeys.inlineSuggestionVisible = new RawContextKey('inlineSuggestionVisible', false, localize('inlineSuggestionVisible', \"Whether an inline suggestion is visible\"));\nInlineCompletionContextKeys.inlineSuggestionHasIndentation = new RawContextKey('inlineSuggestionHasIndentation', false, localize('inlineSuggestionHasIndentation', \"Whether the inline suggestion starts with whitespace\"));\nInlineCompletionContextKeys.inlineSuggestionHasIndentationLessThanTabSize = new RawContextKey('inlineSuggestionHasIndentationLessThanTabSize', true, localize('inlineSuggestionHasIndentationLessThanTabSize', \"Whether the inline suggestion starts with whitespace that is less than what would be inserted by tab\"));\nInlineCompletionContextKeys.suppressSuggestions = new RawContextKey('inlineSuggestionSuppressSuggestions', undefined, localize('suppressSuggestions', \"Whether suggestions should be suppressed for the current suggestion\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BugIndicatingError } from '../../../../base/common/errors.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { autorunOpts } from '../../../../base/common/observable.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nexport function applyEdits(text, edits) {\n    const transformer = new PositionOffsetTransformer(text);\n    const offsetEdits = edits.map(e => {\n        const range = Range.lift(e.range);\n        return ({\n            startOffset: transformer.getOffset(range.getStartPosition()),\n            endOffset: transformer.getOffset(range.getEndPosition()),\n            text: e.text\n        });\n    });\n    offsetEdits.sort((a, b) => b.startOffset - a.startOffset);\n    for (const edit of offsetEdits) {\n        text = text.substring(0, edit.startOffset) + edit.text + text.substring(edit.endOffset);\n    }\n    return text;\n}\nclass PositionOffsetTransformer {\n    constructor(text) {\n        this.lineStartOffsetByLineIdx = [];\n        this.lineStartOffsetByLineIdx.push(0);\n        for (let i = 0; i < text.length; i++) {\n            if (text.charAt(i) === '\\n') {\n                this.lineStartOffsetByLineIdx.push(i + 1);\n            }\n        }\n    }\n    getOffset(position) {\n        return this.lineStartOffsetByLineIdx[position.lineNumber - 1] + position.column - 1;\n    }\n}\nconst array = [];\nexport function getReadonlyEmptyArray() {\n    return array;\n}\nexport class ColumnRange {\n    constructor(startColumn, endColumnExclusive) {\n        this.startColumn = startColumn;\n        this.endColumnExclusive = endColumnExclusive;\n        if (startColumn > endColumnExclusive) {\n            throw new BugIndicatingError(`startColumn ${startColumn} cannot be after endColumnExclusive ${endColumnExclusive}`);\n        }\n    }\n    toRange(lineNumber) {\n        return new Range(lineNumber, this.startColumn, lineNumber, this.endColumnExclusive);\n    }\n    equals(other) {\n        return this.startColumn === other.startColumn\n            && this.endColumnExclusive === other.endColumnExclusive;\n    }\n}\nexport function applyObservableDecorations(editor, decorations) {\n    const d = new DisposableStore();\n    const decorationsCollection = editor.createDecorationsCollection();\n    d.add(autorunOpts({ debugName: () => `Apply decorations from ${decorations.debugName}` }, reader => {\n        const d = decorations.read(reader);\n        decorationsCollection.set(d);\n    }));\n    d.add({\n        dispose: () => {\n            decorationsCollection.clear();\n        }\n    });\n    return d;\n}\nexport function addPositions(pos1, pos2) {\n    return new Position(pos1.lineNumber + pos2.lineNumber - 1, pos2.lineNumber === 1 ? pos1.column + pos2.column - 1 : pos2.column);\n}\nexport function lengthOfText(text) {\n    let line = 1;\n    let column = 1;\n    for (const c of text) {\n        if (c === '\\n') {\n            line++;\n            column = 1;\n        }\n        else {\n            column++;\n        }\n    }\n    return new Position(line, column);\n}\n","import { applyEdits } from './utils.js';\nexport class GhostText {\n    constructor(lineNumber, parts) {\n        this.lineNumber = lineNumber;\n        this.parts = parts;\n    }\n    equals(other) {\n        return this.lineNumber === other.lineNumber &&\n            this.parts.length === other.parts.length &&\n            this.parts.every((part, index) => part.equals(other.parts[index]));\n    }\n    renderForScreenReader(lineText) {\n        if (this.parts.length === 0) {\n            return '';\n        }\n        const lastPart = this.parts[this.parts.length - 1];\n        const cappedLineText = lineText.substr(0, lastPart.column - 1);\n        const text = applyEdits(cappedLineText, this.parts.map(p => ({\n            range: { startLineNumber: 1, endLineNumber: 1, startColumn: p.column, endColumn: p.column },\n            text: p.lines.join('\\n')\n        })));\n        return text.substring(this.parts[0].column - 1);\n    }\n    isEmpty() {\n        return this.parts.every(p => p.lines.length === 0);\n    }\n    get lineCount() {\n        return 1 + this.parts.reduce((r, p) => r + p.lines.length - 1, 0);\n    }\n}\nexport class GhostTextPart {\n    constructor(column, lines, \n    /**\n     * Indicates if this part is a preview of an inline suggestion when a suggestion is previewed.\n    */\n    preview) {\n        this.column = column;\n        this.lines = lines;\n        this.preview = preview;\n    }\n    equals(other) {\n        return this.column === other.column &&\n            this.lines.length === other.lines.length &&\n            this.lines.every((line, index) => line === other.lines[index]);\n    }\n}\nexport class GhostTextReplacement {\n    constructor(lineNumber, columnRange, newLines, additionalReservedLineCount = 0) {\n        this.lineNumber = lineNumber;\n        this.columnRange = columnRange;\n        this.newLines = newLines;\n        this.additionalReservedLineCount = additionalReservedLineCount;\n        this.parts = [\n            new GhostTextPart(this.columnRange.endColumnExclusive, this.newLines, false),\n        ];\n    }\n    renderForScreenReader(_lineText) {\n        return this.newLines.join('\\n');\n    }\n    get lineCount() {\n        return this.newLines.length;\n    }\n    isEmpty() {\n        return this.parts.every(p => p.lines.length === 0);\n    }\n    equals(other) {\n        return this.lineNumber === other.lineNumber &&\n            this.columnRange.equals(other.columnRange) &&\n            this.newLines.length === other.newLines.length &&\n            this.newLines.every((line, index) => line === other.newLines[index]) &&\n            this.additionalReservedLineCount === other.additionalReservedLineCount;\n    }\n}\nexport function ghostTextOrReplacementEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (!a || !b) {\n        return false;\n    }\n    if (a instanceof GhostText && b instanceof GhostText) {\n        return a.equals(b);\n    }\n    if (a instanceof GhostTextReplacement && b instanceof GhostTextReplacement) {\n        return a.equals(b);\n    }\n    return false;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { createTrustedTypesPolicy } from '../../../../base/browser/trustedTypes.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, derived, observableFromEvent, observableSignalFromEvent, observableValue } from '../../../../base/common/observable.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './ghostText.css';\nimport { applyFontInfo } from '../../../browser/config/domFontInfo.js';\nimport { EditorFontLigatures } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { StringBuilder } from '../../../common/core/stringBuilder.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { InjectedTextCursorStops } from '../../../common/model.js';\nimport { LineTokens } from '../../../common/tokens/lineTokens.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { GhostTextReplacement } from './ghostText.js';\nimport { ColumnRange, applyObservableDecorations } from './utils.js';\nexport const GHOST_TEXT_DESCRIPTION = 'ghost-text';\nlet GhostTextWidget = class GhostTextWidget extends Disposable {\n    constructor(editor, model, languageService) {\n        super();\n        this.editor = editor;\n        this.model = model;\n        this.languageService = languageService;\n        this.isDisposed = observableValue(this, false);\n        this.currentTextModel = observableFromEvent(this.editor.onDidChangeModel, () => this.editor.getModel());\n        this.uiState = derived(this, reader => {\n            if (this.isDisposed.read(reader)) {\n                return undefined;\n            }\n            const textModel = this.currentTextModel.read(reader);\n            if (textModel !== this.model.targetTextModel.read(reader)) {\n                return undefined;\n            }\n            const ghostText = this.model.ghostText.read(reader);\n            if (!ghostText) {\n                return undefined;\n            }\n            const replacedRange = ghostText instanceof GhostTextReplacement ? ghostText.columnRange : undefined;\n            const inlineTexts = [];\n            const additionalLines = [];\n            function addToAdditionalLines(lines, className) {\n                if (additionalLines.length > 0) {\n                    const lastLine = additionalLines[additionalLines.length - 1];\n                    if (className) {\n                        lastLine.decorations.push(new LineDecoration(lastLine.content.length + 1, lastLine.content.length + 1 + lines[0].length, className, 0 /* InlineDecorationType.Regular */));\n                    }\n                    lastLine.content += lines[0];\n                    lines = lines.slice(1);\n                }\n                for (const line of lines) {\n                    additionalLines.push({\n                        content: line,\n                        decorations: className ? [new LineDecoration(1, line.length + 1, className, 0 /* InlineDecorationType.Regular */)] : []\n                    });\n                }\n            }\n            const textBufferLine = textModel.getLineContent(ghostText.lineNumber);\n            let hiddenTextStartColumn = undefined;\n            let lastIdx = 0;\n            for (const part of ghostText.parts) {\n                let lines = part.lines;\n                if (hiddenTextStartColumn === undefined) {\n                    inlineTexts.push({\n                        column: part.column,\n                        text: lines[0],\n                        preview: part.preview,\n                    });\n                    lines = lines.slice(1);\n                }\n                else {\n                    addToAdditionalLines([textBufferLine.substring(lastIdx, part.column - 1)], undefined);\n                }\n                if (lines.length > 0) {\n                    addToAdditionalLines(lines, GHOST_TEXT_DESCRIPTION);\n                    if (hiddenTextStartColumn === undefined && part.column <= textBufferLine.length) {\n                        hiddenTextStartColumn = part.column;\n                    }\n                }\n                lastIdx = part.column - 1;\n            }\n            if (hiddenTextStartColumn !== undefined) {\n                addToAdditionalLines([textBufferLine.substring(lastIdx)], undefined);\n            }\n            const hiddenRange = hiddenTextStartColumn !== undefined ? new ColumnRange(hiddenTextStartColumn, textBufferLine.length + 1) : undefined;\n            return {\n                replacedRange,\n                inlineTexts,\n                additionalLines,\n                hiddenRange,\n                lineNumber: ghostText.lineNumber,\n                additionalReservedLineCount: this.model.minReservedLineCount.read(reader),\n                targetTextModel: textModel,\n            };\n        });\n        this.decorations = derived(this, reader => {\n            const uiState = this.uiState.read(reader);\n            if (!uiState) {\n                return [];\n            }\n            const decorations = [];\n            if (uiState.replacedRange) {\n                decorations.push({\n                    range: uiState.replacedRange.toRange(uiState.lineNumber),\n                    options: { inlineClassName: 'inline-completion-text-to-replace', description: 'GhostTextReplacement' }\n                });\n            }\n            if (uiState.hiddenRange) {\n                decorations.push({\n                    range: uiState.hiddenRange.toRange(uiState.lineNumber),\n                    options: { inlineClassName: 'ghost-text-hidden', description: 'ghost-text-hidden', }\n                });\n            }\n            for (const p of uiState.inlineTexts) {\n                decorations.push({\n                    range: Range.fromPositions(new Position(uiState.lineNumber, p.column)),\n                    options: {\n                        description: GHOST_TEXT_DESCRIPTION,\n                        after: { content: p.text, inlineClassName: p.preview ? 'ghost-text-decoration-preview' : 'ghost-text-decoration', cursorStops: InjectedTextCursorStops.Left },\n                        showIfCollapsed: true,\n                    }\n                });\n            }\n            return decorations;\n        });\n        this.additionalLinesWidget = this._register(new AdditionalLinesWidget(this.editor, this.languageService.languageIdCodec, derived(reader => {\n            /** @description lines */\n            const uiState = this.uiState.read(reader);\n            return uiState ? {\n                lineNumber: uiState.lineNumber,\n                additionalLines: uiState.additionalLines,\n                minReservedLineCount: uiState.additionalReservedLineCount,\n                targetTextModel: uiState.targetTextModel,\n            } : undefined;\n        })));\n        this._register(toDisposable(() => { this.isDisposed.set(true, undefined); }));\n        this._register(applyObservableDecorations(this.editor, this.decorations));\n    }\n    ownsViewZone(viewZoneId) {\n        return this.additionalLinesWidget.viewZoneId === viewZoneId;\n    }\n};\nGhostTextWidget = __decorate([\n    __param(2, ILanguageService)\n], GhostTextWidget);\nexport { GhostTextWidget };\nclass AdditionalLinesWidget extends Disposable {\n    get viewZoneId() { return this._viewZoneId; }\n    constructor(editor, languageIdCodec, lines) {\n        super();\n        this.editor = editor;\n        this.languageIdCodec = languageIdCodec;\n        this.lines = lines;\n        this._viewZoneId = undefined;\n        this.editorOptionsChanged = observableSignalFromEvent('editorOptionChanged', Event.filter(this.editor.onDidChangeConfiguration, e => e.hasChanged(33 /* EditorOption.disableMonospaceOptimizations */)\n            || e.hasChanged(116 /* EditorOption.stopRenderingLineAfter */)\n            || e.hasChanged(98 /* EditorOption.renderWhitespace */)\n            || e.hasChanged(93 /* EditorOption.renderControlCharacters */)\n            || e.hasChanged(51 /* EditorOption.fontLigatures */)\n            || e.hasChanged(50 /* EditorOption.fontInfo */)\n            || e.hasChanged(66 /* EditorOption.lineHeight */)));\n        this._register(autorun(reader => {\n            /** @description update view zone */\n            const lines = this.lines.read(reader);\n            this.editorOptionsChanged.read(reader);\n            if (lines) {\n                this.updateLines(lines.lineNumber, lines.additionalLines, lines.minReservedLineCount);\n            }\n            else {\n                this.clear();\n            }\n        }));\n    }\n    dispose() {\n        super.dispose();\n        this.clear();\n    }\n    clear() {\n        this.editor.changeViewZones((changeAccessor) => {\n            if (this._viewZoneId) {\n                changeAccessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n            }\n        });\n    }\n    updateLines(lineNumber, additionalLines, minReservedLineCount) {\n        const textModel = this.editor.getModel();\n        if (!textModel) {\n            return;\n        }\n        const { tabSize } = textModel.getOptions();\n        this.editor.changeViewZones((changeAccessor) => {\n            if (this._viewZoneId) {\n                changeAccessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n            }\n            const heightInLines = Math.max(additionalLines.length, minReservedLineCount);\n            if (heightInLines > 0) {\n                const domNode = document.createElement('div');\n                renderLines(domNode, tabSize, additionalLines, this.editor.getOptions(), this.languageIdCodec);\n                this._viewZoneId = changeAccessor.addZone({\n                    afterLineNumber: lineNumber,\n                    heightInLines: heightInLines,\n                    domNode,\n                    afterColumnAffinity: 1 /* PositionAffinity.Right */\n                });\n            }\n        });\n    }\n}\nfunction renderLines(domNode, tabSize, lines, opts, languageIdCodec) {\n    const disableMonospaceOptimizations = opts.get(33 /* EditorOption.disableMonospaceOptimizations */);\n    const stopRenderingLineAfter = opts.get(116 /* EditorOption.stopRenderingLineAfter */);\n    // To avoid visual confusion, we don't want to render visible whitespace\n    const renderWhitespace = 'none';\n    const renderControlCharacters = opts.get(93 /* EditorOption.renderControlCharacters */);\n    const fontLigatures = opts.get(51 /* EditorOption.fontLigatures */);\n    const fontInfo = opts.get(50 /* EditorOption.fontInfo */);\n    const lineHeight = opts.get(66 /* EditorOption.lineHeight */);\n    const sb = new StringBuilder(10000);\n    sb.appendString('<div class=\"suggest-preview-text\">');\n    for (let i = 0, len = lines.length; i < len; i++) {\n        const lineData = lines[i];\n        const line = lineData.content;\n        sb.appendString('<div class=\"view-line');\n        sb.appendString('\" style=\"top:');\n        sb.appendString(String(i * lineHeight));\n        sb.appendString('px;width:1000000px;\">');\n        const isBasicASCII = strings.isBasicASCII(line);\n        const containsRTL = strings.containsRTL(line);\n        const lineTokens = LineTokens.createEmpty(line, languageIdCodec);\n        renderViewLine(new RenderLineInput((fontInfo.isMonospace && !disableMonospaceOptimizations), fontInfo.canUseHalfwidthRightwardsArrow, line, false, isBasicASCII, containsRTL, 0, lineTokens, lineData.decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null), sb);\n        sb.appendString('</div>');\n    }\n    sb.appendString('</div>');\n    applyFontInfo(domNode, fontInfo);\n    const html = sb.build();\n    const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n    domNode.innerHTML = trustedhtml;\n}\nconst ttPolicy = createTrustedTypesPolicy('editorGhostText', { createHTML: value => value });\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { assertNever } from '../../../../base/common/assert.js';\nimport { DeferredPromise } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { SetMap } from '../../../../base/common/map.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Range } from '../../../common/core/range.js';\nimport { fixBracketsInLine } from '../../../common/model/bracketPairsTextModelPart/fixBrackets.js';\nimport { getReadonlyEmptyArray } from './utils.js';\nimport { SnippetParser, Text } from '../../snippet/browser/snippetParser.js';\nexport function provideInlineCompletions(registry, position, model, context, token = CancellationToken.None, languageConfigurationService) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // Important: Don't use position after the await calls, as the model could have been changed in the meantime!\n        const defaultReplaceRange = getDefaultRange(position, model);\n        const providers = registry.all(model);\n        const multiMap = new SetMap();\n        for (const provider of providers) {\n            if (provider.groupId) {\n                multiMap.add(provider.groupId, provider);\n            }\n        }\n        function getPreferredProviders(provider) {\n            if (!provider.yieldsToGroupIds) {\n                return [];\n            }\n            const result = [];\n            for (const groupId of provider.yieldsToGroupIds || []) {\n                const providers = multiMap.get(groupId);\n                for (const p of providers) {\n                    result.push(p);\n                }\n            }\n            return result;\n        }\n        const states = new Map();\n        const seen = new Set();\n        function findPreferredProviderCircle(provider, stack) {\n            stack = [...stack, provider];\n            if (seen.has(provider)) {\n                return stack;\n            }\n            seen.add(provider);\n            try {\n                const preferred = getPreferredProviders(provider);\n                for (const p of preferred) {\n                    const c = findPreferredProviderCircle(p, stack);\n                    if (c) {\n                        return c;\n                    }\n                }\n            }\n            finally {\n                seen.delete(provider);\n            }\n            return undefined;\n        }\n        function processProvider(provider) {\n            const state = states.get(provider);\n            if (state) {\n                return state;\n            }\n            const circle = findPreferredProviderCircle(provider, []);\n            if (circle) {\n                onUnexpectedExternalError(new Error(`Inline completions: cyclic yield-to dependency detected. Path: ${circle.map(s => s.toString ? s.toString() : ('' + s)).join(' -> ')}`));\n            }\n            const deferredPromise = new DeferredPromise();\n            states.set(provider, deferredPromise.p);\n            (() => __awaiter(this, void 0, void 0, function* () {\n                if (!circle) {\n                    const preferred = getPreferredProviders(provider);\n                    for (const p of preferred) {\n                        const result = yield processProvider(p);\n                        if (result && result.items.length > 0) {\n                            // Skip provider\n                            return undefined;\n                        }\n                    }\n                }\n                try {\n                    const completions = yield provider.provideInlineCompletions(model, position, context, token);\n                    return completions;\n                }\n                catch (e) {\n                    onUnexpectedExternalError(e);\n                    return undefined;\n                }\n            }))().then(c => deferredPromise.complete(c), e => deferredPromise.error(e));\n            return deferredPromise.p;\n        }\n        const providerResults = yield Promise.all(providers.map((provider) => __awaiter(this, void 0, void 0, function* () { return ({ provider, completions: yield processProvider(provider) }); })));\n        const itemsByHash = new Map();\n        const lists = [];\n        for (const result of providerResults) {\n            const completions = result.completions;\n            if (!completions) {\n                continue;\n            }\n            const list = new InlineCompletionList(completions, result.provider);\n            lists.push(list);\n            for (const item of completions.items) {\n                const inlineCompletionItem = InlineCompletionItem.from(item, list, defaultReplaceRange, model, languageConfigurationService);\n                itemsByHash.set(inlineCompletionItem.hash(), inlineCompletionItem);\n            }\n        }\n        return new InlineCompletionProviderResult(Array.from(itemsByHash.values()), new Set(itemsByHash.keys()), lists);\n    });\n}\nexport class InlineCompletionProviderResult {\n    constructor(\n    /**\n     * Free of duplicates.\n     */\n    completions, hashs, providerResults) {\n        this.completions = completions;\n        this.hashs = hashs;\n        this.providerResults = providerResults;\n    }\n    has(item) {\n        return this.hashs.has(item.hash());\n    }\n    dispose() {\n        for (const result of this.providerResults) {\n            result.removeRef();\n        }\n    }\n}\n/**\n * A ref counted pointer to the computed `InlineCompletions` and the `InlineCompletionsProvider` that\n * computed them.\n */\nexport class InlineCompletionList {\n    constructor(inlineCompletions, provider) {\n        this.inlineCompletions = inlineCompletions;\n        this.provider = provider;\n        this.refCount = 1;\n    }\n    addRef() {\n        this.refCount++;\n    }\n    removeRef() {\n        this.refCount--;\n        if (this.refCount === 0) {\n            this.provider.freeInlineCompletions(this.inlineCompletions);\n        }\n    }\n}\nexport class InlineCompletionItem {\n    static from(inlineCompletion, source, defaultReplaceRange, textModel, languageConfigurationService) {\n        let insertText;\n        let snippetInfo;\n        let range = inlineCompletion.range ? Range.lift(inlineCompletion.range) : defaultReplaceRange;\n        if (typeof inlineCompletion.insertText === 'string') {\n            insertText = inlineCompletion.insertText;\n            if (languageConfigurationService && inlineCompletion.completeBracketPairs) {\n                insertText = closeBrackets(insertText, range.getStartPosition(), textModel, languageConfigurationService);\n                // Modify range depending on if brackets are added or removed\n                const diff = insertText.length - inlineCompletion.insertText.length;\n                if (diff !== 0) {\n                    range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn + diff);\n                }\n            }\n            snippetInfo = undefined;\n        }\n        else if ('snippet' in inlineCompletion.insertText) {\n            const preBracketCompletionLength = inlineCompletion.insertText.snippet.length;\n            if (languageConfigurationService && inlineCompletion.completeBracketPairs) {\n                inlineCompletion.insertText.snippet = closeBrackets(inlineCompletion.insertText.snippet, range.getStartPosition(), textModel, languageConfigurationService);\n                // Modify range depending on if brackets are added or removed\n                const diff = inlineCompletion.insertText.snippet.length - preBracketCompletionLength;\n                if (diff !== 0) {\n                    range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn + diff);\n                }\n            }\n            const snippet = new SnippetParser().parse(inlineCompletion.insertText.snippet);\n            if (snippet.children.length === 1 && snippet.children[0] instanceof Text) {\n                insertText = snippet.children[0].value;\n                snippetInfo = undefined;\n            }\n            else {\n                insertText = snippet.toString();\n                snippetInfo = {\n                    snippet: inlineCompletion.insertText.snippet,\n                    range: range\n                };\n            }\n        }\n        else {\n            assertNever(inlineCompletion.insertText);\n        }\n        return new InlineCompletionItem(insertText, inlineCompletion.command, range, insertText, snippetInfo, inlineCompletion.additionalTextEdits || getReadonlyEmptyArray(), inlineCompletion, source);\n    }\n    constructor(filterText, command, range, insertText, snippetInfo, additionalTextEdits, \n    /**\n     * A reference to the original inline completion this inline completion has been constructed from.\n     * Used for event data to ensure referential equality.\n    */\n    sourceInlineCompletion, \n    /**\n     * A reference to the original inline completion list this inline completion has been constructed from.\n     * Used for event data to ensure referential equality.\n    */\n    source) {\n        this.filterText = filterText;\n        this.command = command;\n        this.range = range;\n        this.insertText = insertText;\n        this.snippetInfo = snippetInfo;\n        this.additionalTextEdits = additionalTextEdits;\n        this.sourceInlineCompletion = sourceInlineCompletion;\n        this.source = source;\n        filterText = filterText.replace(/\\r\\n|\\r/g, '\\n');\n        insertText = filterText.replace(/\\r\\n|\\r/g, '\\n');\n    }\n    withRange(updatedRange) {\n        return new InlineCompletionItem(this.filterText, this.command, updatedRange, this.insertText, this.snippetInfo, this.additionalTextEdits, this.sourceInlineCompletion, this.source);\n    }\n    hash() {\n        return JSON.stringify({ insertText: this.insertText, range: this.range.toString() });\n    }\n}\nfunction getDefaultRange(position, model) {\n    const word = model.getWordAtPosition(position);\n    const maxColumn = model.getLineMaxColumn(position.lineNumber);\n    // By default, always replace up until the end of the current line.\n    // This default might be subject to change!\n    return word\n        ? new Range(position.lineNumber, word.startColumn, position.lineNumber, maxColumn)\n        : Range.fromPositions(position, position.with(undefined, maxColumn));\n}\nfunction closeBrackets(text, position, model, languageConfigurationService) {\n    const lineStart = model.getLineContent(position.lineNumber).substring(0, position.column - 1);\n    const newLine = lineStart + text;\n    const newTokens = model.tokenization.tokenizeLineWithEdit(position, newLine.length - (position.column - 1), text);\n    const slicedTokens = newTokens === null || newTokens === void 0 ? void 0 : newTokens.sliceAndInflate(position.column - 1, newLine.length, 0);\n    if (!slicedTokens) {\n        return text;\n    }\n    const newText = fixBracketsInLine(slicedTokens, languageConfigurationService);\n    return newText;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../../base/common/diff/diff.js';\nimport { commonPrefixLength, getLeadingWhitespace, splitLines } from '../../../../base/common/strings.js';\nimport { Range } from '../../../common/core/range.js';\nimport { GhostText, GhostTextPart } from './ghostText.js';\nimport { addPositions, lengthOfText } from './utils.js';\nexport class SingleTextEdit {\n    constructor(range, text) {\n        this.range = range;\n        this.text = text;\n    }\n    removeCommonPrefix(model, validModelRange) {\n        const modelRange = validModelRange ? this.range.intersectRanges(validModelRange) : this.range;\n        if (!modelRange) {\n            return this;\n        }\n        const valueToReplace = model.getValueInRange(modelRange, 1 /* EndOfLinePreference.LF */);\n        const commonPrefixLen = commonPrefixLength(valueToReplace, this.text);\n        const start = addPositions(this.range.getStartPosition(), lengthOfText(valueToReplace.substring(0, commonPrefixLen)));\n        const text = this.text.substring(commonPrefixLen);\n        const range = Range.fromPositions(start, this.range.getEndPosition());\n        return new SingleTextEdit(range, text);\n    }\n    augments(base) {\n        // The augmented completion must replace the base range, but can replace even more\n        return this.text.startsWith(base.text) && rangeExtends(this.range, base.range);\n    }\n    /**\n     * @param previewSuffixLength Sets where to split `inlineCompletion.text`.\n     * \tIf the text is `hello` and the suffix length is 2, the non-preview part is `hel` and the preview-part is `lo`.\n    */\n    computeGhostText(model, mode, cursorPosition, previewSuffixLength = 0) {\n        let edit = this.removeCommonPrefix(model);\n        if (edit.range.endLineNumber !== edit.range.startLineNumber) {\n            // This edit might span multiple lines, but the first lines must be a common prefix.\n            return undefined;\n        }\n        const sourceLine = model.getLineContent(edit.range.startLineNumber);\n        const sourceIndentationLength = getLeadingWhitespace(sourceLine).length;\n        const suggestionTouchesIndentation = edit.range.startColumn - 1 <= sourceIndentationLength;\n        if (suggestionTouchesIndentation) {\n            // source:      ··········[······abc]\n            //                         ^^^^^^^^^ inlineCompletion.range\n            //              ^^^^^^^^^^ ^^^^^^ sourceIndentationLength\n            //                         ^^^^^^ replacedIndentation.length\n            //                               ^^^ rangeThatDoesNotReplaceIndentation\n            // inlineCompletion.text: '··foo'\n            //                         ^^ suggestionAddedIndentationLength\n            const suggestionAddedIndentationLength = getLeadingWhitespace(edit.text).length;\n            const replacedIndentation = sourceLine.substring(edit.range.startColumn - 1, sourceIndentationLength);\n            const [startPosition, endPosition] = [edit.range.getStartPosition(), edit.range.getEndPosition()];\n            const newStartPosition = startPosition.column + replacedIndentation.length <= endPosition.column\n                ? startPosition.delta(0, replacedIndentation.length)\n                : endPosition;\n            const rangeThatDoesNotReplaceIndentation = Range.fromPositions(newStartPosition, endPosition);\n            const suggestionWithoutIndentationChange = edit.text.startsWith(replacedIndentation)\n                // Adds more indentation without changing existing indentation: We can add ghost text for this\n                ? edit.text.substring(replacedIndentation.length)\n                // Changes or removes existing indentation. Only add ghost text for the non-indentation part.\n                : edit.text.substring(suggestionAddedIndentationLength);\n            edit = new SingleTextEdit(rangeThatDoesNotReplaceIndentation, suggestionWithoutIndentationChange);\n        }\n        // This is a single line string\n        const valueToBeReplaced = model.getValueInRange(edit.range);\n        const changes = cachingDiff(valueToBeReplaced, edit.text);\n        if (!changes) {\n            // No ghost text in case the diff would be too slow to compute\n            return undefined;\n        }\n        const lineNumber = edit.range.startLineNumber;\n        const parts = new Array();\n        if (mode === 'prefix') {\n            const filteredChanges = changes.filter(c => c.originalLength === 0);\n            if (filteredChanges.length > 1 || filteredChanges.length === 1 && filteredChanges[0].originalStart !== valueToBeReplaced.length) {\n                // Prefixes only have a single change.\n                return undefined;\n            }\n        }\n        const previewStartInCompletionText = edit.text.length - previewSuffixLength;\n        for (const c of changes) {\n            const insertColumn = edit.range.startColumn + c.originalStart + c.originalLength;\n            if (mode === 'subwordSmart' && cursorPosition && cursorPosition.lineNumber === edit.range.startLineNumber && insertColumn < cursorPosition.column) {\n                // No ghost text before cursor\n                return undefined;\n            }\n            if (c.originalLength > 0) {\n                return undefined;\n            }\n            if (c.modifiedLength === 0) {\n                continue;\n            }\n            const modifiedEnd = c.modifiedStart + c.modifiedLength;\n            const nonPreviewTextEnd = Math.max(c.modifiedStart, Math.min(modifiedEnd, previewStartInCompletionText));\n            const nonPreviewText = edit.text.substring(c.modifiedStart, nonPreviewTextEnd);\n            const italicText = edit.text.substring(nonPreviewTextEnd, Math.max(c.modifiedStart, modifiedEnd));\n            if (nonPreviewText.length > 0) {\n                const lines = splitLines(nonPreviewText);\n                parts.push(new GhostTextPart(insertColumn, lines, false));\n            }\n            if (italicText.length > 0) {\n                const lines = splitLines(italicText);\n                parts.push(new GhostTextPart(insertColumn, lines, true));\n            }\n        }\n        return new GhostText(lineNumber, parts);\n    }\n}\nfunction rangeExtends(extendingRange, rangeToExtend) {\n    return rangeToExtend.getStartPosition().equals(extendingRange.getStartPosition())\n        && rangeToExtend.getEndPosition().isBeforeOrEqual(extendingRange.getEndPosition());\n}\nlet lastRequest = undefined;\nfunction cachingDiff(originalValue, newValue) {\n    if ((lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.originalValue) === originalValue && (lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.newValue) === newValue) {\n        return lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.changes;\n    }\n    else {\n        let changes = smartDiff(originalValue, newValue, true);\n        if (changes) {\n            const deletedChars = deletedCharacters(changes);\n            if (deletedChars > 0) {\n                // For performance reasons, don't compute diff if there is nothing to improve\n                const newChanges = smartDiff(originalValue, newValue, false);\n                if (newChanges && deletedCharacters(newChanges) < deletedChars) {\n                    // Disabling smartness seems to be better here\n                    changes = newChanges;\n                }\n            }\n        }\n        lastRequest = {\n            originalValue,\n            newValue,\n            changes\n        };\n        return changes;\n    }\n}\nfunction deletedCharacters(changes) {\n    let sum = 0;\n    for (const c of changes) {\n        sum += c.originalLength;\n    }\n    return sum;\n}\n/**\n * When matching `if ()` with `if (f() = 1) { g(); }`,\n * align it like this:        `if (       )`\n * Not like this:\t\t\t  `if (  )`\n * Also not like this:\t\t  `if (             )`.\n *\n * The parenthesis are preprocessed to ensure that they match correctly.\n */\nfunction smartDiff(originalValue, newValue, smartBracketMatching) {\n    if (originalValue.length > 5000 || newValue.length > 5000) {\n        // We don't want to work on strings that are too big\n        return undefined;\n    }\n    function getMaxCharCode(val) {\n        let maxCharCode = 0;\n        for (let i = 0, len = val.length; i < len; i++) {\n            const charCode = val.charCodeAt(i);\n            if (charCode > maxCharCode) {\n                maxCharCode = charCode;\n            }\n        }\n        return maxCharCode;\n    }\n    const maxCharCode = Math.max(getMaxCharCode(originalValue), getMaxCharCode(newValue));\n    function getUniqueCharCode(id) {\n        if (id < 0) {\n            throw new Error('unexpected');\n        }\n        return maxCharCode + id + 1;\n    }\n    function getElements(source) {\n        let level = 0;\n        let group = 0;\n        const characters = new Int32Array(source.length);\n        for (let i = 0, len = source.length; i < len; i++) {\n            // TODO support more brackets\n            if (smartBracketMatching && source[i] === '(') {\n                const id = group * 100 + level;\n                characters[i] = getUniqueCharCode(2 * id);\n                level++;\n            }\n            else if (smartBracketMatching && source[i] === ')') {\n                level = Math.max(level - 1, 0);\n                const id = group * 100 + level;\n                characters[i] = getUniqueCharCode(2 * id + 1);\n                if (level === 0) {\n                    group++;\n                }\n            }\n            else {\n                characters[i] = source.charCodeAt(i);\n            }\n        }\n        return characters;\n    }\n    const elements1 = getElements(originalValue);\n    const elements2 = getElements(newValue);\n    return new LcsDiff({ getElements: () => elements1 }, { getElements: () => elements2 }).ComputeDiff(false).changes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { matchesSubString } from '../../../../base/common/filters.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { derived, disposableObservableValue, transaction } from '../../../../base/common/observable.js';\nimport { Position } from '../../../common/core/position.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { provideInlineCompletions } from './provideInlineCompletions.js';\nimport { SingleTextEdit } from './singleTextEdit.js';\nlet InlineCompletionsSource = class InlineCompletionsSource extends Disposable {\n    constructor(textModel, versionId, _debounceValue, languageFeaturesService, languageConfigurationService) {\n        super();\n        this.textModel = textModel;\n        this.versionId = versionId;\n        this._debounceValue = _debounceValue;\n        this.languageFeaturesService = languageFeaturesService;\n        this.languageConfigurationService = languageConfigurationService;\n        this._updateOperation = this._register(new MutableDisposable());\n        this.inlineCompletions = disposableObservableValue('inlineCompletions', undefined);\n        this.suggestWidgetInlineCompletions = disposableObservableValue('suggestWidgetInlineCompletions', undefined);\n        this._register(this.textModel.onDidChangeContent(() => {\n            this._updateOperation.clear();\n        }));\n    }\n    fetch(position, context, activeInlineCompletion) {\n        var _a, _b;\n        const request = new UpdateRequest(position, context, this.textModel.getVersionId());\n        const target = context.selectedSuggestionInfo ? this.suggestWidgetInlineCompletions : this.inlineCompletions;\n        if ((_a = this._updateOperation.value) === null || _a === void 0 ? void 0 : _a.request.satisfies(request)) {\n            return this._updateOperation.value.promise;\n        }\n        else if ((_b = target.get()) === null || _b === void 0 ? void 0 : _b.request.satisfies(request)) {\n            return Promise.resolve(true);\n        }\n        const updateOngoing = !!this._updateOperation.value;\n        this._updateOperation.clear();\n        const source = new CancellationTokenSource();\n        const promise = (() => __awaiter(this, void 0, void 0, function* () {\n            const shouldDebounce = updateOngoing || context.triggerKind === InlineCompletionTriggerKind.Automatic;\n            if (shouldDebounce) {\n                // This debounces the operation\n                yield wait(this._debounceValue.get(this.textModel));\n            }\n            if (source.token.isCancellationRequested || this.textModel.getVersionId() !== request.versionId) {\n                return false;\n            }\n            const startTime = new Date();\n            const updatedCompletions = yield provideInlineCompletions(this.languageFeaturesService.inlineCompletionsProvider, position, this.textModel, context, source.token, this.languageConfigurationService);\n            if (source.token.isCancellationRequested || this.textModel.getVersionId() !== request.versionId) {\n                return false;\n            }\n            const endTime = new Date();\n            this._debounceValue.update(this.textModel, endTime.getTime() - startTime.getTime());\n            const completions = new UpToDateInlineCompletions(updatedCompletions, request, this.textModel, this.versionId);\n            if (activeInlineCompletion) {\n                const asInlineCompletion = activeInlineCompletion.toInlineCompletion(undefined);\n                if (activeInlineCompletion.canBeReused(this.textModel, position) && !updatedCompletions.has(asInlineCompletion)) {\n                    completions.prepend(activeInlineCompletion.inlineCompletion, asInlineCompletion.range, true);\n                }\n            }\n            this._updateOperation.clear();\n            transaction(tx => {\n                /** @description Update completions with provider result */\n                target.set(completions, tx);\n            });\n            return true;\n        }))();\n        const updateOperation = new UpdateOperation(request, source, promise);\n        this._updateOperation.value = updateOperation;\n        return promise;\n    }\n    clear(tx) {\n        this._updateOperation.clear();\n        this.inlineCompletions.set(undefined, tx);\n        this.suggestWidgetInlineCompletions.set(undefined, tx);\n    }\n    clearSuggestWidgetInlineCompletions(tx) {\n        var _a;\n        if ((_a = this._updateOperation.value) === null || _a === void 0 ? void 0 : _a.request.context.selectedSuggestionInfo) {\n            this._updateOperation.clear();\n        }\n        this.suggestWidgetInlineCompletions.set(undefined, tx);\n    }\n    cancelUpdate() {\n        this._updateOperation.clear();\n    }\n};\nInlineCompletionsSource = __decorate([\n    __param(3, ILanguageFeaturesService),\n    __param(4, ILanguageConfigurationService)\n], InlineCompletionsSource);\nexport { InlineCompletionsSource };\nfunction wait(ms, cancellationToken) {\n    return new Promise(resolve => {\n        let d = undefined;\n        const handle = setTimeout(() => {\n            if (d) {\n                d.dispose();\n            }\n            resolve();\n        }, ms);\n        if (cancellationToken) {\n            d = cancellationToken.onCancellationRequested(() => {\n                clearTimeout(handle);\n                if (d) {\n                    d.dispose();\n                }\n                resolve();\n            });\n        }\n    });\n}\nclass UpdateRequest {\n    constructor(position, context, versionId) {\n        this.position = position;\n        this.context = context;\n        this.versionId = versionId;\n    }\n    satisfies(other) {\n        return this.position.equals(other.position)\n            && equals(this.context.selectedSuggestionInfo, other.context.selectedSuggestionInfo, (v1, v2) => v1.equals(v2))\n            && (other.context.triggerKind === InlineCompletionTriggerKind.Automatic\n                || this.context.triggerKind === InlineCompletionTriggerKind.Explicit)\n            && this.versionId === other.versionId;\n    }\n}\nfunction equals(v1, v2, equals) {\n    if (!v1 || !v2) {\n        return v1 === v2;\n    }\n    return equals(v1, v2);\n}\nclass UpdateOperation {\n    constructor(request, cancellationTokenSource, promise) {\n        this.request = request;\n        this.cancellationTokenSource = cancellationTokenSource;\n        this.promise = promise;\n    }\n    dispose() {\n        this.cancellationTokenSource.cancel();\n    }\n}\nexport class UpToDateInlineCompletions {\n    get inlineCompletions() { return this._inlineCompletions; }\n    constructor(inlineCompletionProviderResult, request, textModel, versionId) {\n        this.inlineCompletionProviderResult = inlineCompletionProviderResult;\n        this.request = request;\n        this.textModel = textModel;\n        this.versionId = versionId;\n        this._refCount = 1;\n        this._prependedInlineCompletionItems = [];\n        this._rangeVersionIdValue = 0;\n        this._rangeVersionId = derived(this, reader => {\n            this.versionId.read(reader);\n            let changed = false;\n            for (const i of this._inlineCompletions) {\n                changed = changed || i._updateRange(this.textModel);\n            }\n            if (changed) {\n                this._rangeVersionIdValue++;\n            }\n            return this._rangeVersionIdValue;\n        });\n        const ids = textModel.deltaDecorations([], inlineCompletionProviderResult.completions.map(i => ({\n            range: i.range,\n            options: {\n                description: 'inline-completion-tracking-range'\n            },\n        })));\n        this._inlineCompletions = inlineCompletionProviderResult.completions.map((i, index) => new InlineCompletionWithUpdatedRange(i, ids[index], this._rangeVersionId));\n    }\n    clone() {\n        this._refCount++;\n        return this;\n    }\n    dispose() {\n        this._refCount--;\n        if (this._refCount === 0) {\n            setTimeout(() => {\n                // To fix https://github.com/microsoft/vscode/issues/188348\n                if (!this.textModel.isDisposed()) {\n                    // This is just cleanup. It's ok if it happens with a delay.\n                    this.textModel.deltaDecorations(this._inlineCompletions.map(i => i.decorationId), []);\n                }\n            }, 0);\n            this.inlineCompletionProviderResult.dispose();\n            for (const i of this._prependedInlineCompletionItems) {\n                i.source.removeRef();\n            }\n        }\n    }\n    prepend(inlineCompletion, range, addRefToSource) {\n        if (addRefToSource) {\n            inlineCompletion.source.addRef();\n        }\n        const id = this.textModel.deltaDecorations([], [{\n                range,\n                options: {\n                    description: 'inline-completion-tracking-range'\n                },\n            }])[0];\n        this._inlineCompletions.unshift(new InlineCompletionWithUpdatedRange(inlineCompletion, id, this._rangeVersionId, range));\n        this._prependedInlineCompletionItems.push(inlineCompletion);\n    }\n}\nexport class InlineCompletionWithUpdatedRange {\n    get forwardStable() {\n        var _a;\n        return (_a = this.inlineCompletion.source.inlineCompletions.enableForwardStability) !== null && _a !== void 0 ? _a : false;\n    }\n    constructor(inlineCompletion, decorationId, rangeVersion, initialRange) {\n        this.inlineCompletion = inlineCompletion;\n        this.decorationId = decorationId;\n        this.rangeVersion = rangeVersion;\n        this.semanticId = JSON.stringify([\n            this.inlineCompletion.filterText,\n            this.inlineCompletion.insertText,\n            this.inlineCompletion.range.getStartPosition().toString()\n        ]);\n        this._isValid = true;\n        this._updatedRange = initialRange !== null && initialRange !== void 0 ? initialRange : inlineCompletion.range;\n    }\n    toInlineCompletion(reader) {\n        return this.inlineCompletion.withRange(this._getUpdatedRange(reader));\n    }\n    toSingleTextEdit(reader) {\n        return new SingleTextEdit(this._getUpdatedRange(reader), this.inlineCompletion.insertText);\n    }\n    isVisible(model, cursorPosition, reader) {\n        const minimizedReplacement = this._toFilterTextReplacement(reader).removeCommonPrefix(model);\n        if (!this._isValid\n            || !this.inlineCompletion.range.getStartPosition().equals(this._getUpdatedRange(reader).getStartPosition())\n            || cursorPosition.lineNumber !== minimizedReplacement.range.startLineNumber) {\n            return false;\n        }\n        const originalValue = model.getValueInRange(minimizedReplacement.range, 1 /* EndOfLinePreference.LF */).toLowerCase();\n        const filterText = minimizedReplacement.text.toLowerCase();\n        const cursorPosIndex = Math.max(0, cursorPosition.column - minimizedReplacement.range.startColumn);\n        let filterTextBefore = filterText.substring(0, cursorPosIndex);\n        let filterTextAfter = filterText.substring(cursorPosIndex);\n        let originalValueBefore = originalValue.substring(0, cursorPosIndex);\n        let originalValueAfter = originalValue.substring(cursorPosIndex);\n        const originalValueIndent = model.getLineIndentColumn(minimizedReplacement.range.startLineNumber);\n        if (minimizedReplacement.range.startColumn <= originalValueIndent) {\n            // Remove indentation\n            originalValueBefore = originalValueBefore.trimStart();\n            if (originalValueBefore.length === 0) {\n                originalValueAfter = originalValueAfter.trimStart();\n            }\n            filterTextBefore = filterTextBefore.trimStart();\n            if (filterTextBefore.length === 0) {\n                filterTextAfter = filterTextAfter.trimStart();\n            }\n        }\n        return filterTextBefore.startsWith(originalValueBefore)\n            && !!matchesSubString(originalValueAfter, filterTextAfter);\n    }\n    canBeReused(model, position) {\n        const result = this._isValid\n            && this._getUpdatedRange(undefined).containsPosition(position)\n            && this.isVisible(model, position, undefined)\n            && !this._isSmallerThanOriginal(undefined);\n        return result;\n    }\n    _toFilterTextReplacement(reader) {\n        return new SingleTextEdit(this._getUpdatedRange(reader), this.inlineCompletion.filterText);\n    }\n    _isSmallerThanOriginal(reader) {\n        return length(this._getUpdatedRange(reader)).isBefore(length(this.inlineCompletion.range));\n    }\n    _getUpdatedRange(reader) {\n        this.rangeVersion.read(reader); // This makes sure all the ranges are updated.\n        return this._updatedRange;\n    }\n    _updateRange(textModel) {\n        const range = textModel.getDecorationRange(this.decorationId);\n        if (!range) {\n            // A setValue call might flush all decorations.\n            this._isValid = false;\n            return true;\n        }\n        if (!this._updatedRange.equalsRange(range)) {\n            this._updatedRange = range;\n            return true;\n        }\n        return false;\n    }\n}\nfunction length(range) {\n    if (range.startLineNumber === range.endLineNumber) {\n        return new Position(1, 1 + range.endColumn - range.startColumn);\n    }\n    else {\n        return new Position(1 + range.endLineNumber - range.startLineNumber, range.endColumn);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { mapFindFirst } from '../../../../base/common/arraysFind.js';\nimport { BugIndicatingError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, derived, derivedHandleChanges, derivedOpts, recomputeInitiallyAndOnChange, observableSignal, observableValue, subtransaction, transaction } from '../../../../base/common/observable.js';\nimport { isDefined } from '../../../../base/common/types.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { GhostText, ghostTextOrReplacementEquals } from './ghostText.js';\nimport { InlineCompletionsSource } from './inlineCompletionsSource.js';\nimport { addPositions, lengthOfText } from './utils.js';\nimport { SnippetController2 } from '../../snippet/browser/snippetController2.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nexport var VersionIdChangeReason;\n(function (VersionIdChangeReason) {\n    VersionIdChangeReason[VersionIdChangeReason[\"Undo\"] = 0] = \"Undo\";\n    VersionIdChangeReason[VersionIdChangeReason[\"Redo\"] = 1] = \"Redo\";\n    VersionIdChangeReason[VersionIdChangeReason[\"AcceptWord\"] = 2] = \"AcceptWord\";\n    VersionIdChangeReason[VersionIdChangeReason[\"Other\"] = 3] = \"Other\";\n})(VersionIdChangeReason || (VersionIdChangeReason = {}));\nlet InlineCompletionsModel = class InlineCompletionsModel extends Disposable {\n    get isAcceptingPartially() { return this._isAcceptingPartially; }\n    constructor(textModel, selectedSuggestItem, cursorPosition, textModelVersionId, _debounceValue, _suggestPreviewEnabled, _suggestPreviewMode, _inlineSuggestMode, _enabled, _instantiationService, _commandService, _languageConfigurationService) {\n        super();\n        this.textModel = textModel;\n        this.selectedSuggestItem = selectedSuggestItem;\n        this.cursorPosition = cursorPosition;\n        this.textModelVersionId = textModelVersionId;\n        this._debounceValue = _debounceValue;\n        this._suggestPreviewEnabled = _suggestPreviewEnabled;\n        this._suggestPreviewMode = _suggestPreviewMode;\n        this._inlineSuggestMode = _inlineSuggestMode;\n        this._enabled = _enabled;\n        this._instantiationService = _instantiationService;\n        this._commandService = _commandService;\n        this._languageConfigurationService = _languageConfigurationService;\n        this._source = this._register(this._instantiationService.createInstance(InlineCompletionsSource, this.textModel, this.textModelVersionId, this._debounceValue));\n        this._isActive = observableValue(this, false);\n        this._forceUpdate = observableSignal('forceUpdate');\n        // We use a semantic id to keep the same inline completion selected even if the provider reorders the completions.\n        this._selectedInlineCompletionId = observableValue(this, undefined);\n        this._isAcceptingPartially = false;\n        this._preserveCurrentCompletionReasons = new Set([\n            VersionIdChangeReason.Redo,\n            VersionIdChangeReason.Undo,\n            VersionIdChangeReason.AcceptWord,\n        ]);\n        this._fetchInlineCompletions = derivedHandleChanges({\n            owner: this,\n            createEmptyChangeSummary: () => ({\n                preserveCurrentCompletion: false,\n                inlineCompletionTriggerKind: InlineCompletionTriggerKind.Automatic\n            }),\n            handleChange: (ctx, changeSummary) => {\n                /** @description fetch inline completions */\n                if (ctx.didChange(this.textModelVersionId) && this._preserveCurrentCompletionReasons.has(ctx.change)) {\n                    changeSummary.preserveCurrentCompletion = true;\n                }\n                else if (ctx.didChange(this._forceUpdate)) {\n                    changeSummary.inlineCompletionTriggerKind = ctx.change;\n                }\n                return true;\n            },\n        }, (reader, changeSummary) => {\n            this._forceUpdate.read(reader);\n            const shouldUpdate = (this._enabled.read(reader) && this.selectedSuggestItem.read(reader)) || this._isActive.read(reader);\n            if (!shouldUpdate) {\n                this._source.cancelUpdate();\n                return undefined;\n            }\n            this.textModelVersionId.read(reader); // Refetch on text change\n            const itemToPreserveCandidate = this.selectedInlineCompletion.get();\n            const itemToPreserve = changeSummary.preserveCurrentCompletion || (itemToPreserveCandidate === null || itemToPreserveCandidate === void 0 ? void 0 : itemToPreserveCandidate.forwardStable)\n                ? itemToPreserveCandidate : undefined;\n            const suggestWidgetInlineCompletions = this._source.suggestWidgetInlineCompletions.get();\n            const suggestItem = this.selectedSuggestItem.read(reader);\n            if (suggestWidgetInlineCompletions && !suggestItem) {\n                const inlineCompletions = this._source.inlineCompletions.get();\n                transaction(tx => {\n                    /** @description Seed inline completions with (newer) suggest widget inline completions */\n                    if (inlineCompletions && suggestWidgetInlineCompletions.request.versionId > inlineCompletions.request.versionId) {\n                        this._source.inlineCompletions.set(suggestWidgetInlineCompletions.clone(), tx);\n                    }\n                    this._source.clearSuggestWidgetInlineCompletions(tx);\n                });\n            }\n            const cursorPosition = this.cursorPosition.read(reader);\n            const context = {\n                triggerKind: changeSummary.inlineCompletionTriggerKind,\n                selectedSuggestionInfo: suggestItem === null || suggestItem === void 0 ? void 0 : suggestItem.toSelectedSuggestionInfo(),\n            };\n            return this._source.fetch(cursorPosition, context, itemToPreserve);\n        });\n        this._filteredInlineCompletionItems = derived(this, reader => {\n            const c = this._source.inlineCompletions.read(reader);\n            if (!c) {\n                return [];\n            }\n            const cursorPosition = this.cursorPosition.read(reader);\n            const filteredCompletions = c.inlineCompletions.filter(c => c.isVisible(this.textModel, cursorPosition, reader));\n            return filteredCompletions;\n        });\n        this.selectedInlineCompletionIndex = derived(this, (reader) => {\n            const selectedInlineCompletionId = this._selectedInlineCompletionId.read(reader);\n            const filteredCompletions = this._filteredInlineCompletionItems.read(reader);\n            const idx = this._selectedInlineCompletionId === undefined ? -1\n                : filteredCompletions.findIndex(v => v.semanticId === selectedInlineCompletionId);\n            if (idx === -1) {\n                // Reset the selection so that the selection does not jump back when it appears again\n                this._selectedInlineCompletionId.set(undefined, undefined);\n                return 0;\n            }\n            return idx;\n        });\n        this.selectedInlineCompletion = derived(this, (reader) => {\n            const filteredCompletions = this._filteredInlineCompletionItems.read(reader);\n            const idx = this.selectedInlineCompletionIndex.read(reader);\n            return filteredCompletions[idx];\n        });\n        this.lastTriggerKind = this._source.inlineCompletions.map(v => /** @description lastTriggerKind */ v === null || v === void 0 ? void 0 : v.request.context.triggerKind);\n        this.inlineCompletionsCount = derived(this, reader => {\n            if (this.lastTriggerKind.read(reader) === InlineCompletionTriggerKind.Explicit) {\n                return this._filteredInlineCompletionItems.read(reader).length;\n            }\n            else {\n                return undefined;\n            }\n        });\n        this.state = derivedOpts({\n            owner: this,\n            equalityComparer: (a, b) => {\n                if (!a || !b) {\n                    return a === b;\n                }\n                return ghostTextOrReplacementEquals(a.ghostText, b.ghostText)\n                    && a.inlineCompletion === b.inlineCompletion\n                    && a.suggestItem === b.suggestItem;\n            }\n        }, (reader) => {\n            var _a;\n            const model = this.textModel;\n            const suggestItem = this.selectedSuggestItem.read(reader);\n            if (suggestItem) {\n                const suggestCompletion = suggestItem.toSingleTextEdit().removeCommonPrefix(model);\n                const augmentedCompletion = this._computeAugmentedCompletion(suggestCompletion, reader);\n                const isSuggestionPreviewEnabled = this._suggestPreviewEnabled.read(reader);\n                if (!isSuggestionPreviewEnabled && !augmentedCompletion) {\n                    return undefined;\n                }\n                const edit = (_a = augmentedCompletion === null || augmentedCompletion === void 0 ? void 0 : augmentedCompletion.edit) !== null && _a !== void 0 ? _a : suggestCompletion;\n                const editPreviewLength = augmentedCompletion ? augmentedCompletion.edit.text.length - suggestCompletion.text.length : 0;\n                const mode = this._suggestPreviewMode.read(reader);\n                const cursor = this.cursorPosition.read(reader);\n                const newGhostText = edit.computeGhostText(model, mode, cursor, editPreviewLength);\n                // Show an invisible ghost text to reserve space\n                const ghostText = newGhostText !== null && newGhostText !== void 0 ? newGhostText : new GhostText(edit.range.endLineNumber, []);\n                return { ghostText, inlineCompletion: augmentedCompletion === null || augmentedCompletion === void 0 ? void 0 : augmentedCompletion.completion, suggestItem };\n            }\n            else {\n                if (!this._isActive.read(reader)) {\n                    return undefined;\n                }\n                const item = this.selectedInlineCompletion.read(reader);\n                if (!item) {\n                    return undefined;\n                }\n                const replacement = item.toSingleTextEdit(reader);\n                const mode = this._inlineSuggestMode.read(reader);\n                const cursor = this.cursorPosition.read(reader);\n                const ghostText = replacement.computeGhostText(model, mode, cursor);\n                return ghostText ? { ghostText, inlineCompletion: item, suggestItem: undefined } : undefined;\n            }\n        });\n        this.ghostText = derivedOpts({\n            owner: this,\n            equalityComparer: ghostTextOrReplacementEquals\n        }, reader => {\n            const v = this.state.read(reader);\n            if (!v) {\n                return undefined;\n            }\n            return v.ghostText;\n        });\n        this._register(recomputeInitiallyAndOnChange(this._fetchInlineCompletions));\n        let lastItem = undefined;\n        this._register(autorun(reader => {\n            var _a, _b;\n            /** @description call handleItemDidShow */\n            const item = this.state.read(reader);\n            const completion = item === null || item === void 0 ? void 0 : item.inlineCompletion;\n            if ((completion === null || completion === void 0 ? void 0 : completion.semanticId) !== (lastItem === null || lastItem === void 0 ? void 0 : lastItem.semanticId)) {\n                lastItem = completion;\n                if (completion) {\n                    const i = completion.inlineCompletion;\n                    const src = i.source;\n                    (_b = (_a = src.provider).handleItemDidShow) === null || _b === void 0 ? void 0 : _b.call(_a, src.inlineCompletions, i.sourceInlineCompletion, i.insertText);\n                }\n            }\n        }));\n    }\n    trigger(tx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._isActive.set(true, tx);\n            yield this._fetchInlineCompletions.get();\n        });\n    }\n    triggerExplicitly(tx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            subtransaction(tx, tx => {\n                this._isActive.set(true, tx);\n                this._forceUpdate.trigger(tx, InlineCompletionTriggerKind.Explicit);\n            });\n            yield this._fetchInlineCompletions.get();\n        });\n    }\n    stop(tx) {\n        subtransaction(tx, tx => {\n            this._isActive.set(false, tx);\n            this._source.clear(tx);\n        });\n    }\n    _computeAugmentedCompletion(suggestCompletion, reader) {\n        const model = this.textModel;\n        const suggestWidgetInlineCompletions = this._source.suggestWidgetInlineCompletions.read(reader);\n        const candidateInlineCompletions = suggestWidgetInlineCompletions\n            ? suggestWidgetInlineCompletions.inlineCompletions\n            : [this.selectedInlineCompletion.read(reader)].filter(isDefined);\n        const augmentedCompletion = mapFindFirst(candidateInlineCompletions, completion => {\n            let r = completion.toSingleTextEdit(reader);\n            r = r.removeCommonPrefix(model, Range.fromPositions(r.range.getStartPosition(), suggestCompletion.range.getEndPosition()));\n            return r.augments(suggestCompletion) ? { edit: r, completion } : undefined;\n        });\n        return augmentedCompletion;\n    }\n    _deltaSelectedInlineCompletionIndex(delta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.triggerExplicitly();\n            const completions = this._filteredInlineCompletionItems.get() || [];\n            if (completions.length > 0) {\n                const newIdx = (this.selectedInlineCompletionIndex.get() + delta + completions.length) % completions.length;\n                this._selectedInlineCompletionId.set(completions[newIdx].semanticId, undefined);\n            }\n            else {\n                this._selectedInlineCompletionId.set(undefined, undefined);\n            }\n        });\n    }\n    next() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._deltaSelectedInlineCompletionIndex(1);\n        });\n    }\n    previous() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._deltaSelectedInlineCompletionIndex(-1);\n        });\n    }\n    accept(editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (editor.getModel() !== this.textModel) {\n                throw new BugIndicatingError();\n            }\n            const state = this.state.get();\n            if (!state || state.ghostText.isEmpty() || !state.inlineCompletion) {\n                return;\n            }\n            const completion = state.inlineCompletion.toInlineCompletion(undefined);\n            editor.pushUndoStop();\n            if (completion.snippetInfo) {\n                editor.executeEdits('inlineSuggestion.accept', [\n                    EditOperation.replaceMove(completion.range, ''),\n                    ...completion.additionalTextEdits\n                ]);\n                editor.setPosition(completion.snippetInfo.range.getStartPosition());\n                (_a = SnippetController2.get(editor)) === null || _a === void 0 ? void 0 : _a.insert(completion.snippetInfo.snippet, { undoStopBefore: false });\n            }\n            else {\n                editor.executeEdits('inlineSuggestion.accept', [\n                    EditOperation.replaceMove(completion.range, completion.insertText),\n                    ...completion.additionalTextEdits\n                ]);\n            }\n            if (completion.command) {\n                // Make sure the completion list will not be disposed.\n                completion.source.addRef();\n            }\n            // Reset before invoking the command, since the command might cause a follow up trigger.\n            transaction(tx => {\n                this._source.clear(tx);\n                // Potentially, isActive will get set back to true by the typing or accept inline suggest event\n                // if automatic inline suggestions are enabled.\n                this._isActive.set(false, tx);\n            });\n            if (completion.command) {\n                yield this._commandService\n                    .executeCommand(completion.command.id, ...(completion.command.arguments || []))\n                    .then(undefined, onUnexpectedExternalError);\n                completion.source.removeRef();\n            }\n        });\n    }\n    acceptNextWord(editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._acceptNext(editor, (pos, text) => {\n                const langId = this.textModel.getLanguageIdAtPosition(pos.lineNumber, pos.column);\n                const config = this._languageConfigurationService.getLanguageConfiguration(langId);\n                const wordRegExp = new RegExp(config.wordDefinition.source, config.wordDefinition.flags.replace('g', ''));\n                const m1 = text.match(wordRegExp);\n                let acceptUntilIndexExclusive = 0;\n                if (m1 && m1.index !== undefined) {\n                    if (m1.index === 0) {\n                        acceptUntilIndexExclusive = m1[0].length;\n                    }\n                    else {\n                        acceptUntilIndexExclusive = m1.index;\n                    }\n                }\n                else {\n                    acceptUntilIndexExclusive = text.length;\n                }\n                const wsRegExp = /\\s+/g;\n                const m2 = wsRegExp.exec(text);\n                if (m2 && m2.index !== undefined) {\n                    if (m2.index + m2[0].length < acceptUntilIndexExclusive) {\n                        acceptUntilIndexExclusive = m2.index + m2[0].length;\n                    }\n                }\n                return acceptUntilIndexExclusive;\n            });\n        });\n    }\n    acceptNextLine(editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._acceptNext(editor, (pos, text) => {\n                const m = text.match(/\\n/);\n                if (m && m.index !== undefined) {\n                    return m.index + 1;\n                }\n                return text.length;\n            });\n        });\n    }\n    _acceptNext(editor, getAcceptUntilIndex) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (editor.getModel() !== this.textModel) {\n                throw new BugIndicatingError();\n            }\n            const state = this.state.get();\n            if (!state || state.ghostText.isEmpty() || !state.inlineCompletion) {\n                return;\n            }\n            const ghostText = state.ghostText;\n            const completion = state.inlineCompletion.toInlineCompletion(undefined);\n            if (completion.snippetInfo || completion.filterText !== completion.insertText) {\n                // not in WYSIWYG mode, partial commit might change completion, thus it is not supported\n                yield this.accept(editor);\n                return;\n            }\n            const firstPart = ghostText.parts[0];\n            const position = new Position(ghostText.lineNumber, firstPart.column);\n            const line = firstPart.lines.join('\\n');\n            const acceptUntilIndexExclusive = getAcceptUntilIndex(position, line);\n            if (acceptUntilIndexExclusive === line.length && ghostText.parts.length === 1) {\n                this.accept(editor);\n                return;\n            }\n            const partialText = line.substring(0, acceptUntilIndexExclusive);\n            this._isAcceptingPartially = true;\n            try {\n                editor.pushUndoStop();\n                editor.executeEdits('inlineSuggestion.accept', [\n                    EditOperation.replace(Range.fromPositions(position), partialText),\n                ]);\n                const length = lengthOfText(partialText);\n                editor.setPosition(addPositions(position, length));\n            }\n            finally {\n                this._isAcceptingPartially = false;\n            }\n            if (completion.source.provider.handlePartialAccept) {\n                const acceptedRange = Range.fromPositions(completion.range.getStartPosition(), addPositions(position, lengthOfText(partialText)));\n                // This assumes that the inline completion and the model use the same EOL style.\n                const text = editor.getModel().getValueInRange(acceptedRange, 1 /* EndOfLinePreference.LF */);\n                completion.source.provider.handlePartialAccept(completion.source.inlineCompletions, completion.sourceInlineCompletion, text.length);\n            }\n        });\n    }\n    handleSuggestAccepted(item) {\n        var _a, _b;\n        const itemEdit = item.toSingleTextEdit().removeCommonPrefix(this.textModel);\n        const augmentedCompletion = this._computeAugmentedCompletion(itemEdit, undefined);\n        if (!augmentedCompletion) {\n            return;\n        }\n        const inlineCompletion = augmentedCompletion.completion.inlineCompletion;\n        (_b = (_a = inlineCompletion.source.provider).handlePartialAccept) === null || _b === void 0 ? void 0 : _b.call(_a, inlineCompletion.source.inlineCompletions, inlineCompletion.sourceInlineCompletion, itemEdit.text.length);\n    }\n};\nInlineCompletionsModel = __decorate([\n    __param(9, IInstantiationService),\n    __param(10, ICommandService),\n    __param(11, ILanguageConfigurationService)\n], InlineCompletionsModel);\nexport { InlineCompletionsModel };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { SelectedSuggestionInfo } from '../../../common/languages.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { SnippetSession } from '../../snippet/browser/snippetSession.js';\nimport { SuggestController } from '../../suggest/browser/suggestController.js';\nimport { observableValue, transaction } from '../../../../base/common/observable.js';\nimport { SingleTextEdit } from './singleTextEdit.js';\nimport { compareBy, numberComparator } from '../../../../base/common/arrays.js';\nimport { findFirstMaxBy } from '../../../../base/common/arraysFind.js';\nexport class SuggestWidgetAdaptor extends Disposable {\n    get selectedItem() {\n        return this._selectedItem;\n    }\n    constructor(editor, suggestControllerPreselector, checkModelVersion, onWillAccept) {\n        super();\n        this.editor = editor;\n        this.suggestControllerPreselector = suggestControllerPreselector;\n        this.checkModelVersion = checkModelVersion;\n        this.onWillAccept = onWillAccept;\n        this.isSuggestWidgetVisible = false;\n        this.isShiftKeyPressed = false;\n        this._isActive = false;\n        this._currentSuggestItemInfo = undefined;\n        this._selectedItem = observableValue(this, undefined);\n        // See the command acceptAlternativeSelectedSuggestion that is bound to shift+tab\n        this._register(editor.onKeyDown(e => {\n            if (e.shiftKey && !this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = true;\n                this.update(this._isActive);\n            }\n        }));\n        this._register(editor.onKeyUp(e => {\n            if (e.shiftKey && this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = false;\n                this.update(this._isActive);\n            }\n        }));\n        const suggestController = SuggestController.get(this.editor);\n        if (suggestController) {\n            this._register(suggestController.registerSelector({\n                priority: 100,\n                select: (model, pos, suggestItems) => {\n                    var _a;\n                    transaction(tx => this.checkModelVersion(tx));\n                    const textModel = this.editor.getModel();\n                    if (!textModel) {\n                        // Should not happen\n                        return -1;\n                    }\n                    const itemToPreselect = (_a = this.suggestControllerPreselector()) === null || _a === void 0 ? void 0 : _a.removeCommonPrefix(textModel);\n                    if (!itemToPreselect) {\n                        return -1;\n                    }\n                    const position = Position.lift(pos);\n                    const candidates = suggestItems\n                        .map((suggestItem, index) => {\n                        const suggestItemInfo = SuggestItemInfo.fromSuggestion(suggestController, textModel, position, suggestItem, this.isShiftKeyPressed);\n                        const suggestItemTextEdit = suggestItemInfo.toSingleTextEdit().removeCommonPrefix(textModel);\n                        const valid = itemToPreselect.augments(suggestItemTextEdit);\n                        return { index, valid, prefixLength: suggestItemTextEdit.text.length, suggestItem };\n                    })\n                        .filter(item => item && item.valid && item.prefixLength > 0);\n                    const result = findFirstMaxBy(candidates, compareBy(s => s.prefixLength, numberComparator));\n                    return result ? result.index : -1;\n                }\n            }));\n            let isBoundToSuggestWidget = false;\n            const bindToSuggestWidget = () => {\n                if (isBoundToSuggestWidget) {\n                    return;\n                }\n                isBoundToSuggestWidget = true;\n                this._register(suggestController.widget.value.onDidShow(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n                this._register(suggestController.widget.value.onDidHide(() => {\n                    this.isSuggestWidgetVisible = false;\n                    this.update(false);\n                }));\n                this._register(suggestController.widget.value.onDidFocus(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n            };\n            this._register(Event.once(suggestController.model.onDidTrigger)(e => {\n                bindToSuggestWidget();\n            }));\n            this._register(suggestController.onWillInsertSuggestItem(e => {\n                const position = this.editor.getPosition();\n                const model = this.editor.getModel();\n                if (!position || !model) {\n                    return undefined;\n                }\n                const suggestItemInfo = SuggestItemInfo.fromSuggestion(suggestController, model, position, e.item, this.isShiftKeyPressed);\n                this.onWillAccept(suggestItemInfo);\n            }));\n        }\n        this.update(this._isActive);\n    }\n    update(newActive) {\n        const newInlineCompletion = this.getSuggestItemInfo();\n        if (this._isActive !== newActive || !suggestItemInfoEquals(this._currentSuggestItemInfo, newInlineCompletion)) {\n            this._isActive = newActive;\n            this._currentSuggestItemInfo = newInlineCompletion;\n            transaction(tx => {\n                /** @description Update state from suggest widget */\n                this.checkModelVersion(tx);\n                this._selectedItem.set(this._isActive ? this._currentSuggestItemInfo : undefined, tx);\n            });\n        }\n    }\n    getSuggestItemInfo() {\n        const suggestController = SuggestController.get(this.editor);\n        if (!suggestController || !this.isSuggestWidgetVisible) {\n            return undefined;\n        }\n        const focusedItem = suggestController.widget.value.getFocusedItem();\n        const position = this.editor.getPosition();\n        const model = this.editor.getModel();\n        if (!focusedItem || !position || !model) {\n            return undefined;\n        }\n        return SuggestItemInfo.fromSuggestion(suggestController, model, position, focusedItem.item, this.isShiftKeyPressed);\n    }\n    stopForceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        suggestController === null || suggestController === void 0 ? void 0 : suggestController.stopForceRenderingAbove();\n    }\n    forceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        suggestController === null || suggestController === void 0 ? void 0 : suggestController.forceRenderingAbove();\n    }\n}\nexport class SuggestItemInfo {\n    static fromSuggestion(suggestController, model, position, item, toggleMode) {\n        let { insertText } = item.completion;\n        let isSnippetText = false;\n        if (item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */) {\n            const snippet = new SnippetParser().parse(insertText);\n            if (snippet.children.length < 100) {\n                // Adjust whitespace is expensive.\n                SnippetSession.adjustWhitespace(model, position, true, snippet);\n            }\n            insertText = snippet.toString();\n            isSnippetText = true;\n        }\n        const info = suggestController.getOverwriteInfo(item, toggleMode);\n        return new SuggestItemInfo(Range.fromPositions(position.delta(0, -info.overwriteBefore), position.delta(0, Math.max(info.overwriteAfter, 0))), insertText, item.completion.kind, isSnippetText);\n    }\n    constructor(range, insertText, completionItemKind, isSnippetText) {\n        this.range = range;\n        this.insertText = insertText;\n        this.completionItemKind = completionItemKind;\n        this.isSnippetText = isSnippetText;\n    }\n    equals(other) {\n        return this.range.equalsRange(other.range)\n            && this.insertText === other.insertText\n            && this.completionItemKind === other.completionItemKind\n            && this.isSnippetText === other.isSnippetText;\n    }\n    toSelectedSuggestionInfo() {\n        return new SelectedSuggestionInfo(this.range, this.insertText, this.completionItemKind, this.isSnippetText);\n    }\n    toSingleTextEdit() {\n        return new SingleTextEdit(this.range, this.insertText);\n    }\n}\nfunction suggestItemInfoEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (!a || !b) {\n        return false;\n    }\n    return a.equals(b);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar InlineCompletionsController_1;\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, constObservable, disposableObservableValue, observableFromEvent, observableValue, transaction } from '../../../../base/common/observable.js';\nimport { CoreEditingCommands } from '../../../browser/coreCommands.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { inlineSuggestCommitId } from './commandIds.js';\nimport { GhostTextWidget } from './ghostTextWidget.js';\nimport { InlineCompletionContextKeys } from './inlineCompletionContextKeys.js';\nimport { InlineCompletionsHintsWidget, InlineSuggestionHintsContentWidget } from './inlineCompletionsHintsWidget.js';\nimport { InlineCompletionsModel, VersionIdChangeReason } from './inlineCompletionsModel.js';\nimport { SuggestWidgetAdaptor } from './suggestWidgetInlineCompletionProvider.js';\nimport { localize } from '../../../../nls.js';\nimport { AudioCue, IAudioCueService } from '../../../../platform/audioCues/browser/audioCueService.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nlet InlineCompletionsController = InlineCompletionsController_1 = class InlineCompletionsController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(InlineCompletionsController_1.ID);\n    }\n    constructor(editor, instantiationService, contextKeyService, configurationService, commandService, debounceService, languageFeaturesService, audioCueService, _keybindingService) {\n        super();\n        this.editor = editor;\n        this.instantiationService = instantiationService;\n        this.contextKeyService = contextKeyService;\n        this.configurationService = configurationService;\n        this.commandService = commandService;\n        this.debounceService = debounceService;\n        this.languageFeaturesService = languageFeaturesService;\n        this.audioCueService = audioCueService;\n        this._keybindingService = _keybindingService;\n        this.model = disposableObservableValue('inlineCompletionModel', undefined);\n        this.textModelVersionId = observableValue(this, -1);\n        this.cursorPosition = observableValue(this, new Position(1, 1));\n        this.suggestWidgetAdaptor = this._register(new SuggestWidgetAdaptor(this.editor, () => { var _a, _b; return (_b = (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.selectedInlineCompletion.get()) === null || _b === void 0 ? void 0 : _b.toSingleTextEdit(undefined); }, (tx) => this.updateObservables(tx, VersionIdChangeReason.Other), (item) => {\n            transaction(tx => {\n                var _a;\n                /** @description handleSuggestAccepted */\n                this.updateObservables(tx, VersionIdChangeReason.Other);\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.handleSuggestAccepted(item);\n            });\n        }));\n        this._enabled = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(62 /* EditorOption.inlineSuggest */).enabled);\n        this.ghostTextWidget = this._register(this.instantiationService.createInstance(GhostTextWidget, this.editor, {\n            ghostText: this.model.map((v, reader) => v === null || v === void 0 ? void 0 : v.ghostText.read(reader)),\n            minReservedLineCount: constObservable(0),\n            targetTextModel: this.model.map(v => v === null || v === void 0 ? void 0 : v.textModel),\n        }));\n        this._debounceValue = this.debounceService.for(this.languageFeaturesService.inlineCompletionsProvider, 'InlineCompletionsDebounce', { min: 50, max: 50 });\n        this._register(new InlineCompletionContextKeys(this.contextKeyService, this.model));\n        this._register(Event.runAndSubscribe(editor.onDidChangeModel, () => transaction(tx => {\n            /** @description onDidChangeModel */\n            this.model.set(undefined, tx);\n            this.updateObservables(tx, VersionIdChangeReason.Other);\n            const textModel = editor.getModel();\n            if (textModel) {\n                const model = instantiationService.createInstance(InlineCompletionsModel, textModel, this.suggestWidgetAdaptor.selectedItem, this.cursorPosition, this.textModelVersionId, this._debounceValue, observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(117 /* EditorOption.suggest */).preview), observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(117 /* EditorOption.suggest */).previewMode), observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(62 /* EditorOption.inlineSuggest */).mode), this._enabled);\n                this.model.set(model, tx);\n            }\n        })));\n        const getReason = (e) => {\n            var _a;\n            if (e.isUndoing) {\n                return VersionIdChangeReason.Undo;\n            }\n            if (e.isRedoing) {\n                return VersionIdChangeReason.Redo;\n            }\n            if ((_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.isAcceptingPartially) {\n                return VersionIdChangeReason.AcceptWord;\n            }\n            return VersionIdChangeReason.Other;\n        };\n        this._register(editor.onDidChangeModelContent((e) => transaction(tx => \n        /** @description onDidChangeModelContent */\n        this.updateObservables(tx, getReason(e)))));\n        this._register(editor.onDidChangeCursorPosition(e => transaction(tx => {\n            var _a;\n            /** @description onDidChangeCursorPosition */\n            this.updateObservables(tx, VersionIdChangeReason.Other);\n            if (e.reason === 3 /* CursorChangeReason.Explicit */ || e.source === 'api') {\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\n            }\n        })));\n        this._register(editor.onDidType(() => transaction(tx => {\n            var _a;\n            /** @description onDidType */\n            this.updateObservables(tx, VersionIdChangeReason.Other);\n            if (this._enabled.get()) {\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.trigger(tx);\n            }\n        })));\n        this._register(this.commandService.onDidExecuteCommand((e) => {\n            // These commands don't trigger onDidType.\n            const commands = new Set([\n                CoreEditingCommands.Tab.id,\n                CoreEditingCommands.DeleteLeft.id,\n                CoreEditingCommands.DeleteRight.id,\n                inlineSuggestCommitId,\n                'acceptSelectedSuggestion',\n            ]);\n            if (commands.has(e.commandId) && editor.hasTextFocus() && this._enabled.get()) {\n                transaction(tx => {\n                    var _a;\n                    /** @description onDidExecuteCommand */\n                    (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.trigger(tx);\n                });\n            }\n        }));\n        this._register(this.editor.onDidBlurEditorWidget(() => {\n            // This is a hidden setting very useful for debugging\n            if (this.contextKeyService.getContextKeyValue('accessibleViewIsShown') || this.configurationService.getValue('editor.inlineSuggest.keepOnBlur') ||\n                editor.getOption(62 /* EditorOption.inlineSuggest */).keepOnBlur) {\n                return;\n            }\n            if (InlineSuggestionHintsContentWidget.dropDownVisible) {\n                return;\n            }\n            transaction(tx => {\n                var _a;\n                /** @description onDidBlurEditorWidget */\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\n            });\n        }));\n        this._register(autorun(reader => {\n            var _a;\n            /** @description forceRenderingAbove */\n            const state = (_a = this.model.read(reader)) === null || _a === void 0 ? void 0 : _a.state.read(reader);\n            if (state === null || state === void 0 ? void 0 : state.suggestItem) {\n                if (state.ghostText.lineCount >= 2) {\n                    this.suggestWidgetAdaptor.forceRenderingAbove();\n                }\n            }\n            else {\n                this.suggestWidgetAdaptor.stopForceRenderingAbove();\n            }\n        }));\n        this._register(toDisposable(() => {\n            this.suggestWidgetAdaptor.stopForceRenderingAbove();\n        }));\n        let lastInlineCompletionId = undefined;\n        this._register(autorun(reader => {\n            /** @description play audio cue & read suggestion */\n            const model = this.model.read(reader);\n            const state = model === null || model === void 0 ? void 0 : model.state.read(reader);\n            if (!model || !state || !state.inlineCompletion) {\n                lastInlineCompletionId = undefined;\n                return;\n            }\n            if (state.inlineCompletion.semanticId !== lastInlineCompletionId) {\n                lastInlineCompletionId = state.inlineCompletion.semanticId;\n                const lineText = model.textModel.getLineContent(state.ghostText.lineNumber);\n                this.audioCueService.playAudioCue(AudioCue.inlineSuggestion).then(() => {\n                    if (this.editor.getOption(8 /* EditorOption.screenReaderAnnounceInlineSuggestion */)) {\n                        this.provideScreenReaderUpdate(state.ghostText.renderForScreenReader(lineText));\n                    }\n                });\n            }\n        }));\n        this._register(new InlineCompletionsHintsWidget(this.editor, this.model, this.instantiationService));\n        this._register(this.configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('accessibility.verbosity.inlineCompletions')) {\n                this.editor.updateOptions({ inlineCompletionsAccessibilityVerbose: this.configurationService.getValue('accessibility.verbosity.inlineCompletions') });\n            }\n        }));\n        this.editor.updateOptions({ inlineCompletionsAccessibilityVerbose: this.configurationService.getValue('accessibility.verbosity.inlineCompletions') });\n    }\n    provideScreenReaderUpdate(content) {\n        const accessibleViewShowing = this.contextKeyService.getContextKeyValue('accessibleViewIsShown');\n        const accessibleViewKeybinding = this._keybindingService.lookupKeybinding('editor.action.accessibleView');\n        let hint;\n        if (!accessibleViewShowing && accessibleViewKeybinding && this.editor.getOption(147 /* EditorOption.inlineCompletionsAccessibilityVerbose */)) {\n            hint = localize('showAccessibleViewHint', \"Inspect this in the accessible view ({0})\", accessibleViewKeybinding.getAriaLabel());\n        }\n        hint ? alert(content + ', ' + hint) : alert(content);\n    }\n    /**\n     * Copies over the relevant state from the text model to observables.\n     * This solves all kind of eventing issues, as we make sure we always operate on the latest state,\n     * regardless of who calls into us.\n     */\n    updateObservables(tx, changeReason) {\n        var _a, _b;\n        const newModel = this.editor.getModel();\n        this.textModelVersionId.set((_a = newModel === null || newModel === void 0 ? void 0 : newModel.getVersionId()) !== null && _a !== void 0 ? _a : -1, tx, changeReason);\n        this.cursorPosition.set((_b = this.editor.getPosition()) !== null && _b !== void 0 ? _b : new Position(1, 1), tx);\n    }\n    shouldShowHoverAt(range) {\n        var _a;\n        const ghostText = (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.ghostText.get();\n        if (ghostText) {\n            return ghostText.parts.some(p => range.containsPosition(new Position(ghostText.lineNumber, p.column)));\n        }\n        return false;\n    }\n    shouldShowHoverAtViewZone(viewZoneId) {\n        return this.ghostTextWidget.ownsViewZone(viewZoneId);\n    }\n};\nInlineCompletionsController.ID = 'editor.contrib.inlineCompletionsController';\nInlineCompletionsController = InlineCompletionsController_1 = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IContextKeyService),\n    __param(3, IConfigurationService),\n    __param(4, ICommandService),\n    __param(5, ILanguageFeatureDebounceService),\n    __param(6, ILanguageFeaturesService),\n    __param(7, IAudioCueService),\n    __param(8, IKeybindingService)\n], InlineCompletionsController);\nexport { InlineCompletionsController };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { transaction } from '../../../../base/common/observable.js';\nimport { EditorAction } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { showNextInlineSuggestionActionId, showPreviousInlineSuggestionActionId, inlineSuggestCommitId } from './commandIds.js';\nimport { InlineCompletionContextKeys } from './inlineCompletionContextKeys.js';\nimport { InlineCompletionsController } from './inlineCompletionsController.js';\nimport { Context as SuggestContext } from '../../suggest/browser/suggest.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId, Action2 } from '../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nexport class ShowNextInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: ShowNextInlineSuggestionAction.ID,\n            label: nls.localize('action.inlineSuggest.showNext', \"Show Next Inline Suggestion\"),\n            alias: 'Show Next Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100,\n                primary: 512 /* KeyMod.Alt */ | 94 /* KeyCode.BracketRight */,\n            },\n        });\n    }\n    run(accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = InlineCompletionsController.get(editor);\n            (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.next();\n        });\n    }\n}\nShowNextInlineSuggestionAction.ID = showNextInlineSuggestionActionId;\nexport class ShowPreviousInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: ShowPreviousInlineSuggestionAction.ID,\n            label: nls.localize('action.inlineSuggest.showPrevious', \"Show Previous Inline Suggestion\"),\n            alias: 'Show Previous Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100,\n                primary: 512 /* KeyMod.Alt */ | 92 /* KeyCode.BracketLeft */,\n            },\n        });\n    }\n    run(accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = InlineCompletionsController.get(editor);\n            (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.previous();\n        });\n    }\n}\nShowPreviousInlineSuggestionAction.ID = showPreviousInlineSuggestionActionId;\nexport class TriggerInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inlineSuggest.trigger',\n            label: nls.localize('action.inlineSuggest.trigger', \"Trigger Inline Suggestion\"),\n            alias: 'Trigger Inline Suggestion',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = InlineCompletionsController.get(editor);\n            (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.triggerExplicitly();\n        });\n    }\n}\nexport class AcceptNextWordOfInlineCompletion extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inlineSuggest.acceptNextWord',\n            label: nls.localize('action.inlineSuggest.acceptNextWord', \"Accept Next Word Of Inline Suggestion\"),\n            alias: 'Accept Next Word Of Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */ + 1,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 17 /* KeyCode.RightArrow */,\n                kbExpr: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n            },\n            menuOpts: [{\n                    menuId: MenuId.InlineSuggestionToolbar,\n                    title: nls.localize('acceptWord', 'Accept Word'),\n                    group: 'primary',\n                    order: 2,\n                }],\n        });\n    }\n    run(accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = InlineCompletionsController.get(editor);\n            yield ((_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.acceptNextWord(controller.editor));\n        });\n    }\n}\nexport class AcceptNextLineOfInlineCompletion extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inlineSuggest.acceptNextLine',\n            label: nls.localize('action.inlineSuggest.acceptNextLine', \"Accept Next Line Of Inline Suggestion\"),\n            alias: 'Accept Next Line Of Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */ + 1,\n            },\n            menuOpts: [{\n                    menuId: MenuId.InlineSuggestionToolbar,\n                    title: nls.localize('acceptLine', 'Accept Line'),\n                    group: 'secondary',\n                    order: 2,\n                }],\n        });\n    }\n    run(accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = InlineCompletionsController.get(editor);\n            yield ((_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.acceptNextLine(controller.editor));\n        });\n    }\n}\nexport class AcceptInlineCompletion extends EditorAction {\n    constructor() {\n        super({\n            id: inlineSuggestCommitId,\n            label: nls.localize('action.inlineSuggest.accept', \"Accept Inline Suggestion\"),\n            alias: 'Accept Inline Suggestion',\n            precondition: InlineCompletionContextKeys.inlineSuggestionVisible,\n            menuOpts: [{\n                    menuId: MenuId.InlineSuggestionToolbar,\n                    title: nls.localize('accept', \"Accept\"),\n                    group: 'primary',\n                    order: 1,\n                }],\n            kbOpts: {\n                primary: 2 /* KeyCode.Tab */,\n                weight: 200,\n                kbExpr: ContextKeyExpr.and(InlineCompletionContextKeys.inlineSuggestionVisible, EditorContextKeys.tabMovesFocus.toNegated(), InlineCompletionContextKeys.inlineSuggestionHasIndentationLessThanTabSize, SuggestContext.Visible.toNegated(), EditorContextKeys.hoverFocused.toNegated()),\n            }\n        });\n    }\n    run(accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = InlineCompletionsController.get(editor);\n            if (controller) {\n                (_a = controller.model.get()) === null || _a === void 0 ? void 0 : _a.accept(controller.editor);\n                controller.editor.focus();\n            }\n        });\n    }\n}\nexport class HideInlineCompletion extends EditorAction {\n    constructor() {\n        super({\n            id: HideInlineCompletion.ID,\n            label: nls.localize('action.inlineSuggest.hide', \"Hide Inline Suggestion\"),\n            alias: 'Hide Inline Suggestion',\n            precondition: InlineCompletionContextKeys.inlineSuggestionVisible,\n            kbOpts: {\n                weight: 100,\n                primary: 9 /* KeyCode.Escape */,\n            }\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = InlineCompletionsController.get(editor);\n            transaction(tx => {\n                var _a;\n                (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\n            });\n        });\n    }\n}\nHideInlineCompletion.ID = 'editor.action.inlineSuggest.hide';\nexport class ToggleAlwaysShowInlineSuggestionToolbar extends Action2 {\n    constructor() {\n        super({\n            id: ToggleAlwaysShowInlineSuggestionToolbar.ID,\n            title: nls.localize('action.inlineSuggest.alwaysShowToolbar', \"Always Show Toolbar\"),\n            f1: false,\n            precondition: undefined,\n            menu: [{\n                    id: MenuId.InlineSuggestionToolbar,\n                    group: 'secondary',\n                    order: 10,\n                }],\n            toggled: ContextKeyExpr.equals('config.editor.inlineSuggest.showToolbar', 'always')\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const configService = accessor.get(IConfigurationService);\n            const currentValue = configService.getValue('editor.inlineSuggest.showToolbar');\n            const newValue = currentValue === 'always' ? 'onHover' : 'always';\n            configService.updateValue('editor.inlineSuggest.showToolbar', newValue);\n        });\n    }\n}\nToggleAlwaysShowInlineSuggestionToolbar.ID = 'editor.action.inlineSuggest.toggleAlwaysShowToolbar';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { autorun, constObservable } from '../../../../base/common/observable.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { HoverForeignElementAnchor } from '../../hover/browser/hoverTypes.js';\nimport { InlineCompletionsController } from './inlineCompletionsController.js';\nimport { InlineSuggestionHintsContentWidget } from './inlineCompletionsHintsWidget.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport * as nls from '../../../../nls.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nexport class InlineCompletionsHover {\n    constructor(owner, range, controller) {\n        this.owner = owner;\n        this.range = range;\n        this.controller = controller;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n}\nlet InlineCompletionsHoverParticipant = class InlineCompletionsHoverParticipant {\n    constructor(_editor, _languageService, _openerService, accessibilityService, _instantiationService, _telemetryService) {\n        this._editor = _editor;\n        this._languageService = _languageService;\n        this._openerService = _openerService;\n        this.accessibilityService = accessibilityService;\n        this._instantiationService = _instantiationService;\n        this._telemetryService = _telemetryService;\n        this.hoverOrdinal = 4;\n    }\n    suggestHoverAnchor(mouseEvent) {\n        const controller = InlineCompletionsController.get(this._editor);\n        if (!controller) {\n            return null;\n        }\n        const target = mouseEvent.target;\n        if (target.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */) {\n            // handle the case where the mouse is over the view zone\n            const viewZoneData = target.detail;\n            if (controller.shouldShowHoverAtViewZone(viewZoneData.viewZoneId)) {\n                return new HoverForeignElementAnchor(1000, this, Range.fromPositions(this._editor.getModel().validatePosition(viewZoneData.positionBefore || viewZoneData.position)), mouseEvent.event.posx, mouseEvent.event.posy, false);\n            }\n        }\n        if (target.type === 7 /* MouseTargetType.CONTENT_EMPTY */) {\n            // handle the case where the mouse is over the empty portion of a line following ghost text\n            if (controller.shouldShowHoverAt(target.range)) {\n                return new HoverForeignElementAnchor(1000, this, target.range, mouseEvent.event.posx, mouseEvent.event.posy, false);\n            }\n        }\n        if (target.type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n            // handle the case where the mouse is directly over ghost text\n            const mightBeForeignElement = target.detail.mightBeForeignElement;\n            if (mightBeForeignElement && controller.shouldShowHoverAt(target.range)) {\n                return new HoverForeignElementAnchor(1000, this, target.range, mouseEvent.event.posx, mouseEvent.event.posy, false);\n            }\n        }\n        return null;\n    }\n    computeSync(anchor, lineDecorations) {\n        if (this._editor.getOption(62 /* EditorOption.inlineSuggest */).showToolbar === 'always') {\n            return [];\n        }\n        const controller = InlineCompletionsController.get(this._editor);\n        if (controller && controller.shouldShowHoverAt(anchor.range)) {\n            return [new InlineCompletionsHover(this, anchor.range, controller)];\n        }\n        return [];\n    }\n    renderHoverParts(context, hoverParts) {\n        const disposableStore = new DisposableStore();\n        const part = hoverParts[0];\n        this._telemetryService.publicLog2('inlineCompletionHover.shown');\n        if (this.accessibilityService.isScreenReaderOptimized() && !this._editor.getOption(8 /* EditorOption.screenReaderAnnounceInlineSuggestion */)) {\n            this.renderScreenReaderText(context, part, disposableStore);\n        }\n        const model = part.controller.model.get();\n        const w = this._instantiationService.createInstance(InlineSuggestionHintsContentWidget, this._editor, false, constObservable(null), model.selectedInlineCompletionIndex, model.inlineCompletionsCount, model.selectedInlineCompletion.map(v => { var _a; return (_a = v === null || v === void 0 ? void 0 : v.inlineCompletion.source.inlineCompletions.commands) !== null && _a !== void 0 ? _a : []; }));\n        context.fragment.appendChild(w.getDomNode());\n        model.triggerExplicitly();\n        disposableStore.add(w);\n        return disposableStore;\n    }\n    renderScreenReaderText(context, part, disposableStore) {\n        const $ = dom.$;\n        const markdownHoverElement = $('div.hover-row.markdown-hover');\n        const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents', { ['aria-live']: 'assertive' }));\n        const renderer = disposableStore.add(new MarkdownRenderer({ editor: this._editor }, this._languageService, this._openerService));\n        const render = (code) => {\n            disposableStore.add(renderer.onDidRenderAsync(() => {\n                hoverContentsElement.className = 'hover-contents code-hover-contents';\n                context.onContentsChanged();\n            }));\n            const inlineSuggestionAvailable = nls.localize('inlineSuggestionFollows', \"Suggestion:\");\n            const renderedContents = disposableStore.add(renderer.render(new MarkdownString().appendText(inlineSuggestionAvailable).appendCodeblock('text', code)));\n            hoverContentsElement.replaceChildren(renderedContents.element);\n        };\n        disposableStore.add(autorun(reader => {\n            var _a;\n            /** @description update hover */\n            const ghostText = (_a = part.controller.model.read(reader)) === null || _a === void 0 ? void 0 : _a.ghostText.read(reader);\n            if (ghostText) {\n                const lineText = this._editor.getModel().getLineContent(ghostText.lineNumber);\n                render(ghostText.renderForScreenReader(lineText));\n            }\n            else {\n                dom.reset(hoverContentsElement);\n            }\n        }));\n        context.fragment.appendChild(markdownHoverElement);\n    }\n};\nInlineCompletionsHoverParticipant = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IAccessibilityService),\n    __param(4, IInstantiationService),\n    __param(5, ITelemetryService)\n], InlineCompletionsHoverParticipant);\nexport { InlineCompletionsHoverParticipant };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { HoverParticipantRegistry } from '../../hover/browser/hoverTypes.js';\nimport { TriggerInlineSuggestionAction, ShowNextInlineSuggestionAction, ShowPreviousInlineSuggestionAction, AcceptNextWordOfInlineCompletion, AcceptInlineCompletion, HideInlineCompletion, ToggleAlwaysShowInlineSuggestionToolbar, AcceptNextLineOfInlineCompletion } from './commands.js';\nimport { InlineCompletionsHoverParticipant } from './hoverParticipant.js';\nimport { InlineCompletionsController } from './inlineCompletionsController.js';\nimport { registerAction2 } from '../../../../platform/actions/common/actions.js';\nregisterEditorContribution(InlineCompletionsController.ID, InlineCompletionsController, 3 /* EditorContributionInstantiation.Eventually */);\nregisterEditorAction(TriggerInlineSuggestionAction);\nregisterEditorAction(ShowNextInlineSuggestionAction);\nregisterEditorAction(ShowPreviousInlineSuggestionAction);\nregisterEditorAction(AcceptNextWordOfInlineCompletion);\nregisterEditorAction(AcceptNextLineOfInlineCompletion);\nregisterEditorAction(AcceptInlineCompletion);\nregisterEditorAction(HideInlineCompletion);\nregisterAction2(ToggleAlwaysShowInlineSuggestionToolbar);\nHoverParticipantRegistry.register(InlineCompletionsHoverParticipant);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar InlineSuggestionHintsContentWidget_1;\nimport { h } from '../../../../base/browser/dom.js';\nimport { ActionViewItem } from '../../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { KeybindingLabel, unthemedKeybindingLabelOptions } from '../../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { Action, Separator } from '../../../../base/common/actions.js';\nimport { equals } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, autorunWithStore, derived, observableFromEvent } from '../../../../base/common/observable.js';\nimport { OS } from '../../../../base/common/platform.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport './inlineCompletionsHintsWidget.css';\nimport { Position } from '../../../common/core/position.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { showNextInlineSuggestionActionId, showPreviousInlineSuggestionActionId } from './commandIds.js';\nimport { localize } from '../../../../nls.js';\nimport { MenuEntryActionViewItem, createAndFillInActionBarActions } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { WorkbenchToolBar } from '../../../../platform/actions/browser/toolbar.js';\nimport { IMenuService, MenuId, MenuItemAction } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nlet InlineCompletionsHintsWidget = class InlineCompletionsHintsWidget extends Disposable {\n    constructor(editor, model, instantiationService) {\n        super();\n        this.editor = editor;\n        this.model = model;\n        this.instantiationService = instantiationService;\n        this.alwaysShowToolbar = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(62 /* EditorOption.inlineSuggest */).showToolbar === 'always');\n        this.sessionPosition = undefined;\n        this.position = derived(this, reader => {\n            var _a, _b, _c;\n            const ghostText = (_a = this.model.read(reader)) === null || _a === void 0 ? void 0 : _a.ghostText.read(reader);\n            if (!this.alwaysShowToolbar.read(reader) || !ghostText || ghostText.parts.length === 0) {\n                this.sessionPosition = undefined;\n                return null;\n            }\n            const firstColumn = ghostText.parts[0].column;\n            if (this.sessionPosition && this.sessionPosition.lineNumber !== ghostText.lineNumber) {\n                this.sessionPosition = undefined;\n            }\n            const position = new Position(ghostText.lineNumber, Math.min(firstColumn, (_c = (_b = this.sessionPosition) === null || _b === void 0 ? void 0 : _b.column) !== null && _c !== void 0 ? _c : Number.MAX_SAFE_INTEGER));\n            this.sessionPosition = position;\n            return position;\n        });\n        this._register(autorunWithStore((reader, store) => {\n            /** @description setup content widget */\n            const model = this.model.read(reader);\n            if (!model || !this.alwaysShowToolbar.read(reader)) {\n                return;\n            }\n            const contentWidget = store.add(this.instantiationService.createInstance(InlineSuggestionHintsContentWidget, this.editor, true, this.position, model.selectedInlineCompletionIndex, model.inlineCompletionsCount, model.selectedInlineCompletion.map(v => { var _a; return (_a = v === null || v === void 0 ? void 0 : v.inlineCompletion.source.inlineCompletions.commands) !== null && _a !== void 0 ? _a : []; })));\n            editor.addContentWidget(contentWidget);\n            store.add(toDisposable(() => editor.removeContentWidget(contentWidget)));\n            store.add(autorun(reader => {\n                /** @description request explicit */\n                const position = this.position.read(reader);\n                if (!position) {\n                    return;\n                }\n                if (model.lastTriggerKind.read(reader) !== InlineCompletionTriggerKind.Explicit) {\n                    model.triggerExplicitly();\n                }\n            }));\n        }));\n    }\n};\nInlineCompletionsHintsWidget = __decorate([\n    __param(2, IInstantiationService)\n], InlineCompletionsHintsWidget);\nexport { InlineCompletionsHintsWidget };\nconst inlineSuggestionHintsNextIcon = registerIcon('inline-suggestion-hints-next', Codicon.chevronRight, localize('parameterHintsNextIcon', 'Icon for show next parameter hint.'));\nconst inlineSuggestionHintsPreviousIcon = registerIcon('inline-suggestion-hints-previous', Codicon.chevronLeft, localize('parameterHintsPreviousIcon', 'Icon for show previous parameter hint.'));\nlet InlineSuggestionHintsContentWidget = InlineSuggestionHintsContentWidget_1 = class InlineSuggestionHintsContentWidget extends Disposable {\n    static get dropDownVisible() { return this._dropDownVisible; }\n    createCommandAction(commandId, label, iconClassName) {\n        const action = new Action(commandId, label, iconClassName, true, () => this._commandService.executeCommand(commandId));\n        const kb = this.keybindingService.lookupKeybinding(commandId, this._contextKeyService);\n        let tooltip = label;\n        if (kb) {\n            tooltip = localize({ key: 'content', comment: ['A label', 'A keybinding'] }, '{0} ({1})', label, kb.getLabel());\n        }\n        action.tooltip = tooltip;\n        return action;\n    }\n    constructor(editor, withBorder, _position, _currentSuggestionIdx, _suggestionCount, _extraCommands, _commandService, instantiationService, keybindingService, _contextKeyService, _menuService) {\n        super();\n        this.editor = editor;\n        this.withBorder = withBorder;\n        this._position = _position;\n        this._currentSuggestionIdx = _currentSuggestionIdx;\n        this._suggestionCount = _suggestionCount;\n        this._extraCommands = _extraCommands;\n        this._commandService = _commandService;\n        this.keybindingService = keybindingService;\n        this._contextKeyService = _contextKeyService;\n        this._menuService = _menuService;\n        this.id = `InlineSuggestionHintsContentWidget${InlineSuggestionHintsContentWidget_1.id++}`;\n        this.allowEditorOverflow = true;\n        this.suppressMouseDown = false;\n        this.nodes = h('div.inlineSuggestionsHints', { className: this.withBorder ? '.withBorder' : '' }, [\n            h('div@toolBar'),\n        ]);\n        this.previousAction = this.createCommandAction(showPreviousInlineSuggestionActionId, localize('previous', 'Previous'), ThemeIcon.asClassName(inlineSuggestionHintsPreviousIcon));\n        this.availableSuggestionCountAction = new Action('inlineSuggestionHints.availableSuggestionCount', '', undefined, false);\n        this.nextAction = this.createCommandAction(showNextInlineSuggestionActionId, localize('next', 'Next'), ThemeIcon.asClassName(inlineSuggestionHintsNextIcon));\n        // TODO@hediet: deprecate MenuId.InlineCompletionsActions\n        this.inlineCompletionsActionsMenus = this._register(this._menuService.createMenu(MenuId.InlineCompletionsActions, this._contextKeyService));\n        this.clearAvailableSuggestionCountLabelDebounced = this._register(new RunOnceScheduler(() => {\n            this.availableSuggestionCountAction.label = '';\n        }, 100));\n        this.disableButtonsDebounced = this._register(new RunOnceScheduler(() => {\n            this.previousAction.enabled = this.nextAction.enabled = false;\n        }, 100));\n        this.lastCommands = [];\n        this.toolBar = this._register(instantiationService.createInstance(CustomizedMenuWorkbenchToolBar, this.nodes.toolBar, MenuId.InlineSuggestionToolbar, {\n            menuOptions: { renderShortTitle: true },\n            toolbarOptions: { primaryGroup: g => g.startsWith('primary') },\n            actionViewItemProvider: (action, options) => {\n                if (action instanceof MenuItemAction) {\n                    return instantiationService.createInstance(StatusBarViewItem, action, undefined);\n                }\n                if (action === this.availableSuggestionCountAction) {\n                    const a = new ActionViewItemWithClassName(undefined, action, { label: true, icon: false });\n                    a.setClass('availableSuggestionCount');\n                    return a;\n                }\n                return undefined;\n            },\n            telemetrySource: 'InlineSuggestionToolbar',\n        }));\n        this.toolBar.setPrependedPrimaryActions([\n            this.previousAction,\n            this.availableSuggestionCountAction,\n            this.nextAction,\n        ]);\n        this._register(this.toolBar.onDidChangeDropdownVisibility(e => {\n            InlineSuggestionHintsContentWidget_1._dropDownVisible = e;\n        }));\n        this._register(autorun(reader => {\n            /** @description update position */\n            this._position.read(reader);\n            this.editor.layoutContentWidget(this);\n        }));\n        this._register(autorun(reader => {\n            /** @description counts */\n            const suggestionCount = this._suggestionCount.read(reader);\n            const currentSuggestionIdx = this._currentSuggestionIdx.read(reader);\n            if (suggestionCount !== undefined) {\n                this.clearAvailableSuggestionCountLabelDebounced.cancel();\n                this.availableSuggestionCountAction.label = `${currentSuggestionIdx + 1}/${suggestionCount}`;\n            }\n            else {\n                this.clearAvailableSuggestionCountLabelDebounced.schedule();\n            }\n            if (suggestionCount !== undefined && suggestionCount > 1) {\n                this.disableButtonsDebounced.cancel();\n                this.previousAction.enabled = this.nextAction.enabled = true;\n            }\n            else {\n                this.disableButtonsDebounced.schedule();\n            }\n        }));\n        this._register(autorun(reader => {\n            /** @description extra commands */\n            const extraCommands = this._extraCommands.read(reader);\n            if (equals(this.lastCommands, extraCommands)) {\n                // nothing to update\n                return;\n            }\n            this.lastCommands = extraCommands;\n            const extraActions = extraCommands.map(c => ({\n                class: undefined,\n                id: c.id,\n                enabled: true,\n                tooltip: c.tooltip || '',\n                label: c.title,\n                run: (event) => {\n                    return this._commandService.executeCommand(c.id);\n                },\n            }));\n            for (const [_, group] of this.inlineCompletionsActionsMenus.getActions()) {\n                for (const action of group) {\n                    if (action instanceof MenuItemAction) {\n                        extraActions.push(action);\n                    }\n                }\n            }\n            if (extraActions.length > 0) {\n                extraActions.unshift(new Separator());\n            }\n            this.toolBar.setAdditionalSecondaryActions(extraActions);\n        }));\n    }\n    getId() { return this.id; }\n    getDomNode() {\n        return this.nodes.root;\n    }\n    getPosition() {\n        return {\n            position: this._position.get(),\n            preference: [1 /* ContentWidgetPositionPreference.ABOVE */, 2 /* ContentWidgetPositionPreference.BELOW */],\n            positionAffinity: 3 /* PositionAffinity.LeftOfInjectedText */,\n        };\n    }\n};\nInlineSuggestionHintsContentWidget._dropDownVisible = false;\nInlineSuggestionHintsContentWidget.id = 0;\nInlineSuggestionHintsContentWidget = InlineSuggestionHintsContentWidget_1 = __decorate([\n    __param(6, ICommandService),\n    __param(7, IInstantiationService),\n    __param(8, IKeybindingService),\n    __param(9, IContextKeyService),\n    __param(10, IMenuService)\n], InlineSuggestionHintsContentWidget);\nexport { InlineSuggestionHintsContentWidget };\nclass ActionViewItemWithClassName extends ActionViewItem {\n    constructor() {\n        super(...arguments);\n        this._className = undefined;\n    }\n    setClass(className) {\n        this._className = className;\n    }\n    render(container) {\n        super.render(container);\n        if (this._className) {\n            container.classList.add(this._className);\n        }\n    }\n}\nclass StatusBarViewItem extends MenuEntryActionViewItem {\n    updateLabel() {\n        const kb = this._keybindingService.lookupKeybinding(this._action.id, this._contextKeyService);\n        if (!kb) {\n            return super.updateLabel();\n        }\n        if (this.label) {\n            const div = h('div.keybinding').root;\n            const k = new KeybindingLabel(div, OS, Object.assign({ disableTitle: true }, unthemedKeybindingLabelOptions));\n            k.set(kb);\n            this.label.textContent = this._action.label;\n            this.label.appendChild(div);\n            this.label.classList.add('inlineSuggestionStatusBarItemLabel');\n        }\n    }\n}\nlet CustomizedMenuWorkbenchToolBar = class CustomizedMenuWorkbenchToolBar extends WorkbenchToolBar {\n    constructor(container, menuId, options2, menuService, contextKeyService, contextMenuService, keybindingService, telemetryService) {\n        super(container, Object.assign({ resetMenu: menuId }, options2), menuService, contextKeyService, contextMenuService, keybindingService, telemetryService);\n        this.menuId = menuId;\n        this.options2 = options2;\n        this.menuService = menuService;\n        this.contextKeyService = contextKeyService;\n        this.menu = this._store.add(this.menuService.createMenu(this.menuId, this.contextKeyService, { emitEventsForSubmenuChanges: true }));\n        this.additionalActions = [];\n        this.prependedPrimaryActions = [];\n        this._store.add(this.menu.onDidChange(() => this.updateToolbar()));\n        this.updateToolbar();\n    }\n    updateToolbar() {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const primary = [];\n        const secondary = [];\n        createAndFillInActionBarActions(this.menu, (_a = this.options2) === null || _a === void 0 ? void 0 : _a.menuOptions, { primary, secondary }, (_c = (_b = this.options2) === null || _b === void 0 ? void 0 : _b.toolbarOptions) === null || _c === void 0 ? void 0 : _c.primaryGroup, (_e = (_d = this.options2) === null || _d === void 0 ? void 0 : _d.toolbarOptions) === null || _e === void 0 ? void 0 : _e.shouldInlineSubmenu, (_g = (_f = this.options2) === null || _f === void 0 ? void 0 : _f.toolbarOptions) === null || _g === void 0 ? void 0 : _g.useSeparatorsInPrimaryActions);\n        secondary.push(...this.additionalActions);\n        primary.unshift(...this.prependedPrimaryActions);\n        this.setActions(primary, secondary);\n    }\n    setPrependedPrimaryActions(actions) {\n        if (equals(this.prependedPrimaryActions, actions, (a, b) => a === b)) {\n            return;\n        }\n        this.prependedPrimaryActions = actions;\n        this.updateToolbar();\n    }\n    setAdditionalSecondaryActions(actions) {\n        if (equals(this.additionalActions, actions, (a, b) => a === b)) {\n            return;\n        }\n        this.additionalActions = actions;\n        this.updateToolbar();\n    }\n};\nCustomizedMenuWorkbenchToolBar = __decorate([\n    __param(3, IMenuService),\n    __param(4, IContextKeyService),\n    __param(5, IContextMenuService),\n    __param(6, IKeybindingService),\n    __param(7, ITelemetryService)\n], CustomizedMenuWorkbenchToolBar);\nexport { CustomizedMenuWorkbenchToolBar };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { disposableTimeout } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { noBreakWhitespace } from '../../../../base/common/strings.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport './inlineProgressWidget.css';\nimport { Range } from '../../../common/core/range.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nconst inlineProgressDecoration = ModelDecorationOptions.register({\n    description: 'inline-progress-widget',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    showIfCollapsed: true,\n    after: {\n        content: noBreakWhitespace,\n        inlineClassName: 'inline-editor-progress-decoration',\n        inlineClassNameAffectsLetterSpacing: true,\n    }\n});\nclass InlineProgressWidget extends Disposable {\n    constructor(typeId, editor, range, title, delegate) {\n        super();\n        this.typeId = typeId;\n        this.editor = editor;\n        this.range = range;\n        this.delegate = delegate;\n        this.allowEditorOverflow = false;\n        this.suppressMouseDown = true;\n        this.create(title);\n        this.editor.addContentWidget(this);\n        this.editor.layoutContentWidget(this);\n    }\n    create(title) {\n        this.domNode = dom.$('.inline-progress-widget');\n        this.domNode.role = 'button';\n        this.domNode.title = title;\n        const iconElement = dom.$('span.icon');\n        this.domNode.append(iconElement);\n        iconElement.classList.add(...ThemeIcon.asClassNameArray(Codicon.loading), 'codicon-modifier-spin');\n        const updateSize = () => {\n            const lineHeight = this.editor.getOption(66 /* EditorOption.lineHeight */);\n            this.domNode.style.height = `${lineHeight}px`;\n            this.domNode.style.width = `${Math.ceil(0.8 * lineHeight)}px`;\n        };\n        updateSize();\n        this._register(this.editor.onDidChangeConfiguration(c => {\n            if (c.hasChanged(52 /* EditorOption.fontSize */) || c.hasChanged(66 /* EditorOption.lineHeight */)) {\n                updateSize();\n            }\n        }));\n        this._register(dom.addDisposableListener(this.domNode, dom.EventType.CLICK, e => {\n            this.delegate.cancel();\n        }));\n    }\n    getId() {\n        return InlineProgressWidget.baseId + '.' + this.typeId;\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    getPosition() {\n        return {\n            position: { lineNumber: this.range.startLineNumber, column: this.range.startColumn },\n            preference: [0 /* ContentWidgetPositionPreference.EXACT */]\n        };\n    }\n    dispose() {\n        super.dispose();\n        this.editor.removeContentWidget(this);\n    }\n}\nInlineProgressWidget.baseId = 'editor.widget.inlineProgressWidget';\nlet InlineProgressManager = class InlineProgressManager extends Disposable {\n    constructor(id, _editor, _instantiationService) {\n        super();\n        this.id = id;\n        this._editor = _editor;\n        this._instantiationService = _instantiationService;\n        /** Delay before showing the progress widget */\n        this._showDelay = 500; // ms\n        this._showPromise = this._register(new MutableDisposable());\n        this._currentWidget = new MutableDisposable();\n        this._operationIdPool = 0;\n        this._currentDecorations = _editor.createDecorationsCollection();\n    }\n    showWhile(position, title, promise) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const operationId = this._operationIdPool++;\n            this._currentOperation = operationId;\n            this.clear();\n            this._showPromise.value = disposableTimeout(() => {\n                const range = Range.fromPositions(position);\n                const decorationIds = this._currentDecorations.set([{\n                        range: range,\n                        options: inlineProgressDecoration,\n                    }]);\n                if (decorationIds.length > 0) {\n                    this._currentWidget.value = this._instantiationService.createInstance(InlineProgressWidget, this.id, this._editor, range, title, promise);\n                }\n            }, this._showDelay);\n            try {\n                return yield promise;\n            }\n            finally {\n                if (this._currentOperation === operationId) {\n                    this.clear();\n                    this._currentOperation = undefined;\n                }\n            }\n        });\n    }\n    clear() {\n        this._showPromise.clear();\n        this._currentDecorations.clear();\n        this._currentWidget.clear();\n    }\n};\nInlineProgressManager = __decorate([\n    __param(2, IInstantiationService)\n], InlineProgressManager);\nexport { InlineProgressManager };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { CursorMoveCommands } from '../../../common/cursor/cursorMoveCommands.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport * as nls from '../../../../nls.js';\nexport class ExpandLineSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'expandLineSelection',\n            label: nls.localize('expandLineSelection', \"Expand Line Selection\"),\n            alias: 'Expand Line Selection',\n            precondition: undefined,\n            kbOpts: {\n                weight: 0 /* KeybindingWeight.EditorCore */,\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 42 /* KeyCode.KeyL */\n            },\n        });\n    }\n    run(_accessor, editor, args) {\n        args = args || {};\n        if (!editor.hasModel()) {\n            return;\n        }\n        const viewModel = editor._getViewModel();\n        viewModel.model.pushStackElement();\n        viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.expandLineSelection(viewModel, viewModel.getCursorStates()));\n        viewModel.revealPrimaryCursor(args.source, true);\n    }\n}\nregisterEditorAction(ExpandLineSelectionAction);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class CopyLinesCommand {\n    constructor(selection, isCopyingDown, noop) {\n        this._selection = selection;\n        this._isCopyingDown = isCopyingDown;\n        this._noop = noop || false;\n        this._selectionDirection = 0 /* SelectionDirection.LTR */;\n        this._selectionId = null;\n        this._startLineNumberDelta = 0;\n        this._endLineNumberDelta = 0;\n    }\n    getEditOperations(model, builder) {\n        let s = this._selection;\n        this._startLineNumberDelta = 0;\n        this._endLineNumberDelta = 0;\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n            this._endLineNumberDelta = 1;\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\n        }\n        const sourceLines = [];\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\n            sourceLines.push(model.getLineContent(i));\n        }\n        const sourceText = sourceLines.join('\\n');\n        if (sourceText === '') {\n            // Duplicating empty line\n            if (this._isCopyingDown) {\n                this._startLineNumberDelta++;\n                this._endLineNumberDelta++;\n            }\n        }\n        if (this._noop) {\n            builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber + 1, 1), s.endLineNumber === model.getLineCount() ? '' : '\\n');\n        }\n        else {\n            if (!this._isCopyingDown) {\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + sourceText);\n            }\n            else {\n                builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), sourceText + '\\n');\n            }\n        }\n        this._selectionId = builder.trackSelection(s);\n        this._selectionDirection = this._selection.getDirection();\n    }\n    computeCursorState(model, helper) {\n        let result = helper.getTrackedSelection(this._selectionId);\n        if (this._startLineNumberDelta !== 0 || this._endLineNumberDelta !== 0) {\n            let startLineNumber = result.startLineNumber;\n            let startColumn = result.startColumn;\n            let endLineNumber = result.endLineNumber;\n            let endColumn = result.endColumn;\n            if (this._startLineNumberDelta !== 0) {\n                startLineNumber = startLineNumber + this._startLineNumberDelta;\n                startColumn = 1;\n            }\n            if (this._endLineNumberDelta !== 0) {\n                endLineNumber = endLineNumber + this._endLineNumberDelta;\n                endColumn = 1;\n            }\n            result = Selection.createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, this._selectionDirection);\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as strings from '../../../../base/common/strings.js';\nimport { ShiftCommand } from '../../../common/commands/shiftCommand.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { IndentAction } from '../../../common/languages/languageConfiguration.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport * as indentUtils from '../../indentation/browser/indentUtils.js';\nimport { getGoodIndentForLine, getIndentMetadata } from '../../../common/languages/autoIndent.js';\nimport { getEnterAction } from '../../../common/languages/enterAction.js';\nlet MoveLinesCommand = class MoveLinesCommand {\n    constructor(selection, isMovingDown, autoIndent, _languageConfigurationService) {\n        this._languageConfigurationService = _languageConfigurationService;\n        this._selection = selection;\n        this._isMovingDown = isMovingDown;\n        this._autoIndent = autoIndent;\n        this._selectionId = null;\n        this._moveEndLineSelectionShrink = false;\n    }\n    getEditOperations(model, builder) {\n        const modelLineCount = model.getLineCount();\n        if (this._isMovingDown && this._selection.endLineNumber === modelLineCount) {\n            this._selectionId = builder.trackSelection(this._selection);\n            return;\n        }\n        if (!this._isMovingDown && this._selection.startLineNumber === 1) {\n            this._selectionId = builder.trackSelection(this._selection);\n            return;\n        }\n        this._moveEndPositionDown = false;\n        let s = this._selection;\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n            this._moveEndPositionDown = true;\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\n        }\n        const { tabSize, indentSize, insertSpaces } = model.getOptions();\n        const indentConverter = this.buildIndentConverter(tabSize, indentSize, insertSpaces);\n        const virtualModel = {\n            tokenization: {\n                getLineTokens: (lineNumber) => {\n                    return model.tokenization.getLineTokens(lineNumber);\n                },\n                getLanguageId: () => {\n                    return model.getLanguageId();\n                },\n                getLanguageIdAtPosition: (lineNumber, column) => {\n                    return model.getLanguageIdAtPosition(lineNumber, column);\n                },\n            },\n            getLineContent: null,\n        };\n        if (s.startLineNumber === s.endLineNumber && model.getLineMaxColumn(s.startLineNumber) === 1) {\n            // Current line is empty\n            const lineNumber = s.startLineNumber;\n            const otherLineNumber = (this._isMovingDown ? lineNumber + 1 : lineNumber - 1);\n            if (model.getLineMaxColumn(otherLineNumber) === 1) {\n                // Other line number is empty too, so no editing is needed\n                // Add a no-op to force running by the model\n                builder.addEditOperation(new Range(1, 1, 1, 1), null);\n            }\n            else {\n                // Type content from other line number on line number\n                builder.addEditOperation(new Range(lineNumber, 1, lineNumber, 1), model.getLineContent(otherLineNumber));\n                // Remove content from other line number\n                builder.addEditOperation(new Range(otherLineNumber, 1, otherLineNumber, model.getLineMaxColumn(otherLineNumber)), null);\n            }\n            // Track selection at the other line number\n            s = new Selection(otherLineNumber, 1, otherLineNumber, 1);\n        }\n        else {\n            let movingLineNumber;\n            let movingLineText;\n            if (this._isMovingDown) {\n                movingLineNumber = s.endLineNumber + 1;\n                movingLineText = model.getLineContent(movingLineNumber);\n                // Delete line that needs to be moved\n                builder.addEditOperation(new Range(movingLineNumber - 1, model.getLineMaxColumn(movingLineNumber - 1), movingLineNumber, model.getLineMaxColumn(movingLineNumber)), null);\n                let insertingText = movingLineText;\n                if (this.shouldAutoIndent(model, s)) {\n                    const movingLineMatchResult = this.matchEnterRule(model, indentConverter, tabSize, movingLineNumber, s.startLineNumber - 1);\n                    // if s.startLineNumber - 1 matches onEnter rule, we still honor that.\n                    if (movingLineMatchResult !== null) {\n                        const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(movingLineNumber));\n                        const newSpaceCnt = movingLineMatchResult + indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                        const newIndentation = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                        insertingText = newIndentation + this.trimStart(movingLineText);\n                    }\n                    else {\n                        // no enter rule matches, let's check indentatin rules then.\n                        virtualModel.getLineContent = (lineNumber) => {\n                            if (lineNumber === s.startLineNumber) {\n                                return model.getLineContent(movingLineNumber);\n                            }\n                            else {\n                                return model.getLineContent(lineNumber);\n                            }\n                        };\n                        const indentOfMovingLine = getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber, indentConverter, this._languageConfigurationService);\n                        if (indentOfMovingLine !== null) {\n                            const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(movingLineNumber));\n                            const newSpaceCnt = indentUtils.getSpaceCnt(indentOfMovingLine, tabSize);\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                const newIndentation = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                                insertingText = newIndentation + this.trimStart(movingLineText);\n                            }\n                        }\n                    }\n                    // add edit operations for moving line first to make sure it's executed after we make indentation change\n                    // to s.startLineNumber\n                    builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\\n');\n                    const ret = this.matchEnterRuleMovingDown(model, indentConverter, tabSize, s.startLineNumber, movingLineNumber, insertingText);\n                    // check if the line being moved before matches onEnter rules, if so let's adjust the indentation by onEnter rules.\n                    if (ret !== null) {\n                        if (ret !== 0) {\n                            this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);\n                        }\n                    }\n                    else {\n                        // it doesn't match onEnter rules, let's check indentation rules then.\n                        virtualModel.getLineContent = (lineNumber) => {\n                            if (lineNumber === s.startLineNumber) {\n                                return insertingText;\n                            }\n                            else if (lineNumber >= s.startLineNumber + 1 && lineNumber <= s.endLineNumber + 1) {\n                                return model.getLineContent(lineNumber - 1);\n                            }\n                            else {\n                                return model.getLineContent(lineNumber);\n                            }\n                        };\n                        const newIndentatOfMovingBlock = getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber + 1, indentConverter, this._languageConfigurationService);\n                        if (newIndentatOfMovingBlock !== null) {\n                            const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(s.startLineNumber));\n                            const newSpaceCnt = indentUtils.getSpaceCnt(newIndentatOfMovingBlock, tabSize);\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                const spaceCntOffset = newSpaceCnt - oldSpaceCnt;\n                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);\n                            }\n                        }\n                    }\n                }\n                else {\n                    // Insert line that needs to be moved before\n                    builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\\n');\n                }\n            }\n            else {\n                movingLineNumber = s.startLineNumber - 1;\n                movingLineText = model.getLineContent(movingLineNumber);\n                // Delete line that needs to be moved\n                builder.addEditOperation(new Range(movingLineNumber, 1, movingLineNumber + 1, 1), null);\n                // Insert line that needs to be moved after\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + movingLineText);\n                if (this.shouldAutoIndent(model, s)) {\n                    virtualModel.getLineContent = (lineNumber) => {\n                        if (lineNumber === movingLineNumber) {\n                            return model.getLineContent(s.startLineNumber);\n                        }\n                        else {\n                            return model.getLineContent(lineNumber);\n                        }\n                    };\n                    const ret = this.matchEnterRule(model, indentConverter, tabSize, s.startLineNumber, s.startLineNumber - 2);\n                    // check if s.startLineNumber - 2 matches onEnter rules, if so adjust the moving block by onEnter rules.\n                    if (ret !== null) {\n                        if (ret !== 0) {\n                            this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);\n                        }\n                    }\n                    else {\n                        // it doesn't match any onEnter rule, let's check indentation rules then.\n                        const indentOfFirstLine = getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(s.startLineNumber, 1), movingLineNumber, indentConverter, this._languageConfigurationService);\n                        if (indentOfFirstLine !== null) {\n                            // adjust the indentation of the moving block\n                            const oldIndent = strings.getLeadingWhitespace(model.getLineContent(s.startLineNumber));\n                            const newSpaceCnt = indentUtils.getSpaceCnt(indentOfFirstLine, tabSize);\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndent, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                const spaceCntOffset = newSpaceCnt - oldSpaceCnt;\n                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this._selectionId = builder.trackSelection(s);\n    }\n    buildIndentConverter(tabSize, indentSize, insertSpaces) {\n        return {\n            shiftIndent: (indentation) => {\n                return ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            },\n            unshiftIndent: (indentation) => {\n                return ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            }\n        };\n    }\n    parseEnterResult(model, indentConverter, tabSize, line, enter) {\n        if (enter) {\n            let enterPrefix = enter.indentation;\n            if (enter.indentAction === IndentAction.None) {\n                enterPrefix = enter.indentation + enter.appendText;\n            }\n            else if (enter.indentAction === IndentAction.Indent) {\n                enterPrefix = enter.indentation + enter.appendText;\n            }\n            else if (enter.indentAction === IndentAction.IndentOutdent) {\n                enterPrefix = enter.indentation;\n            }\n            else if (enter.indentAction === IndentAction.Outdent) {\n                enterPrefix = indentConverter.unshiftIndent(enter.indentation) + enter.appendText;\n            }\n            const movingLineText = model.getLineContent(line);\n            if (this.trimStart(movingLineText).indexOf(this.trimStart(enterPrefix)) >= 0) {\n                const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(line));\n                let newIndentation = strings.getLeadingWhitespace(enterPrefix);\n                const indentMetadataOfMovelingLine = getIndentMetadata(model, line, this._languageConfigurationService);\n                if (indentMetadataOfMovelingLine !== null && indentMetadataOfMovelingLine & 2 /* IndentConsts.DECREASE_MASK */) {\n                    newIndentation = indentConverter.unshiftIndent(newIndentation);\n                }\n                const newSpaceCnt = indentUtils.getSpaceCnt(newIndentation, tabSize);\n                const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                return newSpaceCnt - oldSpaceCnt;\n            }\n        }\n        return null;\n    }\n    /**\n     *\n     * @param model\n     * @param indentConverter\n     * @param tabSize\n     * @param line the line moving down\n     * @param futureAboveLineNumber the line which will be at the `line` position\n     * @param futureAboveLineText\n     */\n    matchEnterRuleMovingDown(model, indentConverter, tabSize, line, futureAboveLineNumber, futureAboveLineText) {\n        if (strings.lastNonWhitespaceIndex(futureAboveLineText) >= 0) {\n            // break\n            const maxColumn = model.getLineMaxColumn(futureAboveLineNumber);\n            const enter = getEnterAction(this._autoIndent, model, new Range(futureAboveLineNumber, maxColumn, futureAboveLineNumber, maxColumn), this._languageConfigurationService);\n            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n        }\n        else {\n            // go upwards, starting from `line - 1`\n            let validPrecedingLine = line - 1;\n            while (validPrecedingLine >= 1) {\n                const lineContent = model.getLineContent(validPrecedingLine);\n                const nonWhitespaceIdx = strings.lastNonWhitespaceIndex(lineContent);\n                if (nonWhitespaceIdx >= 0) {\n                    break;\n                }\n                validPrecedingLine--;\n            }\n            if (validPrecedingLine < 1 || line > model.getLineCount()) {\n                return null;\n            }\n            const maxColumn = model.getLineMaxColumn(validPrecedingLine);\n            const enter = getEnterAction(this._autoIndent, model, new Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn), this._languageConfigurationService);\n            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n        }\n    }\n    matchEnterRule(model, indentConverter, tabSize, line, oneLineAbove, previousLineText) {\n        let validPrecedingLine = oneLineAbove;\n        while (validPrecedingLine >= 1) {\n            // ship empty lines as empty lines just inherit indentation\n            let lineContent;\n            if (validPrecedingLine === oneLineAbove && previousLineText !== undefined) {\n                lineContent = previousLineText;\n            }\n            else {\n                lineContent = model.getLineContent(validPrecedingLine);\n            }\n            const nonWhitespaceIdx = strings.lastNonWhitespaceIndex(lineContent);\n            if (nonWhitespaceIdx >= 0) {\n                break;\n            }\n            validPrecedingLine--;\n        }\n        if (validPrecedingLine < 1 || line > model.getLineCount()) {\n            return null;\n        }\n        const maxColumn = model.getLineMaxColumn(validPrecedingLine);\n        const enter = getEnterAction(this._autoIndent, model, new Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn), this._languageConfigurationService);\n        return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n    }\n    trimStart(str) {\n        return str.replace(/^\\s+/, '');\n    }\n    shouldAutoIndent(model, selection) {\n        if (this._autoIndent < 4 /* EditorAutoIndentStrategy.Full */) {\n            return false;\n        }\n        // if it's not easy to tokenize, we stop auto indent.\n        if (!model.tokenization.isCheapToTokenize(selection.startLineNumber)) {\n            return false;\n        }\n        const languageAtSelectionStart = model.getLanguageIdAtPosition(selection.startLineNumber, 1);\n        const languageAtSelectionEnd = model.getLanguageIdAtPosition(selection.endLineNumber, 1);\n        if (languageAtSelectionStart !== languageAtSelectionEnd) {\n            return false;\n        }\n        if (this._languageConfigurationService.getLanguageConfiguration(languageAtSelectionStart).indentRulesSupport === null) {\n            return false;\n        }\n        return true;\n    }\n    getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, offset) {\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\n            const lineContent = model.getLineContent(i);\n            const originalIndent = strings.getLeadingWhitespace(lineContent);\n            const originalSpacesCnt = indentUtils.getSpaceCnt(originalIndent, tabSize);\n            const newSpacesCnt = originalSpacesCnt + offset;\n            const newIndent = indentUtils.generateIndent(newSpacesCnt, tabSize, insertSpaces);\n            if (newIndent !== originalIndent) {\n                builder.addEditOperation(new Range(i, 1, i, originalIndent.length + 1), newIndent);\n                if (i === s.endLineNumber && s.endColumn <= originalIndent.length + 1 && newIndent === '') {\n                    // as users select part of the original indent white spaces\n                    // when we adjust the indentation of endLine, we should adjust the cursor position as well.\n                    this._moveEndLineSelectionShrink = true;\n                }\n            }\n        }\n    }\n    computeCursorState(model, helper) {\n        let result = helper.getTrackedSelection(this._selectionId);\n        if (this._moveEndPositionDown) {\n            result = result.setEndPosition(result.endLineNumber + 1, 1);\n        }\n        if (this._moveEndLineSelectionShrink && result.startLineNumber < result.endLineNumber) {\n            result = result.setEndPosition(result.endLineNumber, 2);\n        }\n        return result;\n    }\n};\nMoveLinesCommand = __decorate([\n    __param(3, ILanguageConfigurationService)\n], MoveLinesCommand);\nexport { MoveLinesCommand };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nexport class SortLinesCommand {\n    static getCollator() {\n        if (!SortLinesCommand._COLLATOR) {\n            SortLinesCommand._COLLATOR = new Intl.Collator();\n        }\n        return SortLinesCommand._COLLATOR;\n    }\n    constructor(selection, descending) {\n        this.selection = selection;\n        this.descending = descending;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        const op = sortLines(model, this.selection, this.descending);\n        if (op) {\n            builder.addEditOperation(op.range, op.text);\n        }\n        this.selectionId = builder.trackSelection(this.selection);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n    static canRun(model, selection, descending) {\n        if (model === null) {\n            return false;\n        }\n        const data = getSortData(model, selection, descending);\n        if (!data) {\n            return false;\n        }\n        for (let i = 0, len = data.before.length; i < len; i++) {\n            if (data.before[i] !== data.after[i]) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nSortLinesCommand._COLLATOR = null;\nfunction getSortData(model, selection, descending) {\n    const startLineNumber = selection.startLineNumber;\n    let endLineNumber = selection.endLineNumber;\n    if (selection.endColumn === 1) {\n        endLineNumber--;\n    }\n    // Nothing to sort if user didn't select anything.\n    if (startLineNumber >= endLineNumber) {\n        return null;\n    }\n    const linesToSort = [];\n    // Get the contents of the selection to be sorted.\n    for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n        linesToSort.push(model.getLineContent(lineNumber));\n    }\n    let sorted = linesToSort.slice(0);\n    sorted.sort(SortLinesCommand.getCollator().compare);\n    // If descending, reverse the order.\n    if (descending === true) {\n        sorted = sorted.reverse();\n    }\n    return {\n        startLineNumber: startLineNumber,\n        endLineNumber: endLineNumber,\n        before: linesToSort,\n        after: sorted\n    };\n}\n/**\n * Generate commands for sorting lines on a model.\n */\nfunction sortLines(model, selection, descending) {\n    const data = getSortData(model, selection, descending);\n    if (!data) {\n        return null;\n    }\n    return EditOperation.replace(new Range(data.startLineNumber, 1, data.endLineNumber, model.getLineMaxColumn(data.endLineNumber)), data.after.join('\\n'));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { CoreEditingCommands } from '../../../browser/coreCommands.js';\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection, ReplaceCommandThatSelectsText } from '../../../common/commands/replaceCommand.js';\nimport { TrimTrailingWhitespaceCommand } from '../../../common/commands/trimTrailingWhitespaceCommand.js';\nimport { TypeOperations } from '../../../common/cursor/cursorTypeOperations.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { CopyLinesCommand } from './copyLinesCommand.js';\nimport { MoveLinesCommand } from './moveLinesCommand.js';\nimport { SortLinesCommand } from './sortLinesCommand.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\n// copy lines\nclass AbstractCopyLinesAction extends EditorAction {\n    constructor(down, opts) {\n        super(opts);\n        this.down = down;\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const selections = editor.getSelections().map((selection, index) => ({ selection, index, ignore: false }));\n        selections.sort((a, b) => Range.compareRangesUsingStarts(a.selection, b.selection));\n        // Remove selections that would result in copying the same line\n        let prev = selections[0];\n        for (let i = 1; i < selections.length; i++) {\n            const curr = selections[i];\n            if (prev.selection.endLineNumber === curr.selection.startLineNumber) {\n                // these two selections would copy the same line\n                if (prev.index < curr.index) {\n                    // prev wins\n                    curr.ignore = true;\n                }\n                else {\n                    // curr wins\n                    prev.ignore = true;\n                    prev = curr;\n                }\n            }\n        }\n        const commands = [];\n        for (const selection of selections) {\n            commands.push(new CopyLinesCommand(selection.selection, this.down, selection.ignore));\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nclass CopyLinesUpAction extends AbstractCopyLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.copyLinesUpAction',\n            label: nls.localize('lines.copyUp', \"Copy Line Up\"),\n            alias: 'Copy Line Up',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */,\n                linux: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miCopyLinesUp', comment: ['&& denotes a mnemonic'] }, \"&&Copy Line Up\"),\n                order: 1\n            }\n        });\n    }\n}\nclass CopyLinesDownAction extends AbstractCopyLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.copyLinesDownAction',\n            label: nls.localize('lines.copyDown', \"Copy Line Down\"),\n            alias: 'Copy Line Down',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */,\n                linux: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miCopyLinesDown', comment: ['&& denotes a mnemonic'] }, \"Co&&py Line Down\"),\n                order: 2\n            }\n        });\n    }\n}\nexport class DuplicateSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.duplicateSelection',\n            label: nls.localize('duplicateSelection', \"Duplicate Selection\"),\n            alias: 'Duplicate Selection',\n            precondition: EditorContextKeys.writable,\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miDuplicateSelection', comment: ['&& denotes a mnemonic'] }, \"&&Duplicate Selection\"),\n                order: 5\n            }\n        });\n    }\n    run(accessor, editor, args) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const commands = [];\n        const selections = editor.getSelections();\n        const model = editor.getModel();\n        for (const selection of selections) {\n            if (selection.isEmpty()) {\n                commands.push(new CopyLinesCommand(selection, true));\n            }\n            else {\n                const insertSelection = new Selection(selection.endLineNumber, selection.endColumn, selection.endLineNumber, selection.endColumn);\n                commands.push(new ReplaceCommandThatSelectsText(insertSelection, model.getValueInRange(selection)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\n// move lines\nclass AbstractMoveLinesAction extends EditorAction {\n    constructor(down, opts) {\n        super(opts);\n        this.down = down;\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const commands = [];\n        const selections = editor.getSelections() || [];\n        const autoIndent = editor.getOption(12 /* EditorOption.autoIndent */);\n        for (const selection of selections) {\n            commands.push(new MoveLinesCommand(selection, this.down, autoIndent, languageConfigurationService));\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nclass MoveLinesUpAction extends AbstractMoveLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.moveLinesUpAction',\n            label: nls.localize('lines.moveUp', \"Move Line Up\"),\n            alias: 'Move Line Up',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */,\n                linux: { primary: 512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miMoveLinesUp', comment: ['&& denotes a mnemonic'] }, \"Mo&&ve Line Up\"),\n                order: 3\n            }\n        });\n    }\n}\nclass MoveLinesDownAction extends AbstractMoveLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.moveLinesDownAction',\n            label: nls.localize('lines.moveDown', \"Move Line Down\"),\n            alias: 'Move Line Down',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */,\n                linux: { primary: 512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miMoveLinesDown', comment: ['&& denotes a mnemonic'] }, \"Move &&Line Down\"),\n                order: 4\n            }\n        });\n    }\n}\nexport class AbstractSortLinesAction extends EditorAction {\n    constructor(descending, opts) {\n        super(opts);\n        this.descending = descending;\n    }\n    run(_accessor, editor) {\n        const selections = editor.getSelections() || [];\n        for (const selection of selections) {\n            if (!SortLinesCommand.canRun(editor.getModel(), selection, this.descending)) {\n                return;\n            }\n        }\n        const commands = [];\n        for (let i = 0, len = selections.length; i < len; i++) {\n            commands[i] = new SortLinesCommand(selections[i], this.descending);\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nexport class SortLinesAscendingAction extends AbstractSortLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.sortLinesAscending',\n            label: nls.localize('lines.sortAscending', \"Sort Lines Ascending\"),\n            alias: 'Sort Lines Ascending',\n            precondition: EditorContextKeys.writable\n        });\n    }\n}\nexport class SortLinesDescendingAction extends AbstractSortLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.sortLinesDescending',\n            label: nls.localize('lines.sortDescending', \"Sort Lines Descending\"),\n            alias: 'Sort Lines Descending',\n            precondition: EditorContextKeys.writable\n        });\n    }\n}\nexport class DeleteDuplicateLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.removeDuplicateLines',\n            label: nls.localize('lines.deleteDuplicates', \"Delete Duplicate Lines\"),\n            alias: 'Delete Duplicate Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const model = editor.getModel();\n        if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n            return;\n        }\n        const edits = [];\n        const endCursorState = [];\n        let linesDeleted = 0;\n        for (const selection of editor.getSelections()) {\n            const uniqueLines = new Set();\n            const lines = [];\n            for (let i = selection.startLineNumber; i <= selection.endLineNumber; i++) {\n                const line = model.getLineContent(i);\n                if (uniqueLines.has(line)) {\n                    continue;\n                }\n                lines.push(line);\n                uniqueLines.add(line);\n            }\n            const selectionToReplace = new Selection(selection.startLineNumber, 1, selection.endLineNumber, model.getLineMaxColumn(selection.endLineNumber));\n            const adjustedSelectionStart = selection.startLineNumber - linesDeleted;\n            const finalSelection = new Selection(adjustedSelectionStart, 1, adjustedSelectionStart + lines.length - 1, lines[lines.length - 1].length);\n            edits.push(EditOperation.replace(selectionToReplace, lines.join('\\n')));\n            endCursorState.push(finalSelection);\n            linesDeleted += (selection.endLineNumber - selection.startLineNumber + 1) - lines.length;\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class TrimTrailingWhitespaceAction extends EditorAction {\n    constructor() {\n        super({\n            id: TrimTrailingWhitespaceAction.ID,\n            label: nls.localize('lines.trimTrailingWhitespace', \"Trim Trailing Whitespace\"),\n            alias: 'Trim Trailing Whitespace',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 54 /* KeyCode.KeyX */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor, args) {\n        let cursors = [];\n        if (args.reason === 'auto-save') {\n            // See https://github.com/editorconfig/editorconfig-vscode/issues/47\n            // It is very convenient for the editor config extension to invoke this action.\n            // So, if we get a reason:'auto-save' passed in, let's preserve cursor positions.\n            cursors = (editor.getSelections() || []).map(s => new Position(s.positionLineNumber, s.positionColumn));\n        }\n        const selection = editor.getSelection();\n        if (selection === null) {\n            return;\n        }\n        const command = new TrimTrailingWhitespaceCommand(selection, cursors);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n    }\n}\nTrimTrailingWhitespaceAction.ID = 'editor.action.trimTrailingWhitespace';\nexport class DeleteLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.deleteLines',\n            label: nls.localize('lines.delete', \"Delete Line\"),\n            alias: 'Delete Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 41 /* KeyCode.KeyK */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const ops = this._getLinesToRemove(editor);\n        const model = editor.getModel();\n        if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n            // Model is empty\n            return;\n        }\n        let linesDeleted = 0;\n        const edits = [];\n        const cursorState = [];\n        for (let i = 0, len = ops.length; i < len; i++) {\n            const op = ops[i];\n            let startLineNumber = op.startLineNumber;\n            let endLineNumber = op.endLineNumber;\n            let startColumn = 1;\n            let endColumn = model.getLineMaxColumn(endLineNumber);\n            if (endLineNumber < model.getLineCount()) {\n                endLineNumber += 1;\n                endColumn = 1;\n            }\n            else if (startLineNumber > 1) {\n                startLineNumber -= 1;\n                startColumn = model.getLineMaxColumn(startLineNumber);\n            }\n            edits.push(EditOperation.replace(new Selection(startLineNumber, startColumn, endLineNumber, endColumn), ''));\n            cursorState.push(new Selection(startLineNumber - linesDeleted, op.positionColumn, startLineNumber - linesDeleted, op.positionColumn));\n            linesDeleted += (op.endLineNumber - op.startLineNumber + 1);\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, cursorState);\n        editor.pushUndoStop();\n    }\n    _getLinesToRemove(editor) {\n        // Construct delete operations\n        const operations = editor.getSelections().map((s) => {\n            let endLineNumber = s.endLineNumber;\n            if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n                endLineNumber -= 1;\n            }\n            return {\n                startLineNumber: s.startLineNumber,\n                selectionStartColumn: s.selectionStartColumn,\n                endLineNumber: endLineNumber,\n                positionColumn: s.positionColumn\n            };\n        });\n        // Sort delete operations\n        operations.sort((a, b) => {\n            if (a.startLineNumber === b.startLineNumber) {\n                return a.endLineNumber - b.endLineNumber;\n            }\n            return a.startLineNumber - b.startLineNumber;\n        });\n        // Merge delete operations which are adjacent or overlapping\n        const mergedOperations = [];\n        let previousOperation = operations[0];\n        for (let i = 1; i < operations.length; i++) {\n            if (previousOperation.endLineNumber + 1 >= operations[i].startLineNumber) {\n                // Merge current operations into the previous one\n                previousOperation.endLineNumber = operations[i].endLineNumber;\n            }\n            else {\n                // Push previous operation\n                mergedOperations.push(previousOperation);\n                previousOperation = operations[i];\n            }\n        }\n        // Push the last operation\n        mergedOperations.push(previousOperation);\n        return mergedOperations;\n    }\n}\nexport class IndentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.indentLines',\n            label: nls.localize('lines.indent', \"Indent Line\"),\n            alias: 'Indent Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 94 /* KeyCode.BracketRight */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.indent(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n        editor.pushUndoStop();\n    }\n}\nclass OutdentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.outdentLines',\n            label: nls.localize('lines.outdent', \"Outdent Line\"),\n            alias: 'Outdent Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 92 /* KeyCode.BracketLeft */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        CoreEditingCommands.Outdent.runEditorCommand(_accessor, editor, null);\n    }\n}\nexport class InsertLineBeforeAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.insertLineBefore',\n            label: nls.localize('lines.insertBefore', \"Insert Line Above\"),\n            alias: 'Insert Line Above',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 3 /* KeyCode.Enter */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.lineInsertBefore(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n    }\n}\nexport class InsertLineAfterAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.insertLineAfter',\n            label: nls.localize('lines.insertAfter', \"Insert Line Below\"),\n            alias: 'Insert Line Below',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.lineInsertAfter(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n    }\n}\nexport class AbstractDeleteAllToBoundaryAction extends EditorAction {\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const primaryCursor = editor.getSelection();\n        const rangesToDelete = this._getRangesToDelete(editor);\n        // merge overlapping selections\n        const effectiveRanges = [];\n        for (let i = 0, count = rangesToDelete.length - 1; i < count; i++) {\n            const range = rangesToDelete[i];\n            const nextRange = rangesToDelete[i + 1];\n            if (Range.intersectRanges(range, nextRange) === null) {\n                effectiveRanges.push(range);\n            }\n            else {\n                rangesToDelete[i + 1] = Range.plusRange(range, nextRange);\n            }\n        }\n        effectiveRanges.push(rangesToDelete[rangesToDelete.length - 1]);\n        const endCursorState = this._getEndCursorState(primaryCursor, effectiveRanges);\n        const edits = effectiveRanges.map(range => {\n            return EditOperation.replace(range, '');\n        });\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class DeleteAllLeftAction extends AbstractDeleteAllToBoundaryAction {\n    constructor() {\n        super({\n            id: 'deleteAllLeft',\n            label: nls.localize('lines.deleteAllLeft', \"Delete All Left\"),\n            alias: 'Delete All Left',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1 /* KeyCode.Backspace */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _getEndCursorState(primaryCursor, rangesToDelete) {\n        let endPrimaryCursor = null;\n        const endCursorState = [];\n        let deletedLines = 0;\n        rangesToDelete.forEach(range => {\n            let endCursor;\n            if (range.endColumn === 1 && deletedLines > 0) {\n                const newStartLine = range.startLineNumber - deletedLines;\n                endCursor = new Selection(newStartLine, range.startColumn, newStartLine, range.startColumn);\n            }\n            else {\n                endCursor = new Selection(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n            }\n            deletedLines += range.endLineNumber - range.startLineNumber;\n            if (range.intersectRanges(primaryCursor)) {\n                endPrimaryCursor = endCursor;\n            }\n            else {\n                endCursorState.push(endCursor);\n            }\n        });\n        if (endPrimaryCursor) {\n            endCursorState.unshift(endPrimaryCursor);\n        }\n        return endCursorState;\n    }\n    _getRangesToDelete(editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return [];\n        }\n        let rangesToDelete = selections;\n        const model = editor.getModel();\n        if (model === null) {\n            return [];\n        }\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\n        rangesToDelete = rangesToDelete.map(selection => {\n            if (selection.isEmpty()) {\n                if (selection.startColumn === 1) {\n                    const deleteFromLine = Math.max(1, selection.startLineNumber - 1);\n                    const deleteFromColumn = selection.startLineNumber === 1 ? 1 : model.getLineLength(deleteFromLine) + 1;\n                    return new Range(deleteFromLine, deleteFromColumn, selection.startLineNumber, 1);\n                }\n                else {\n                    return new Range(selection.startLineNumber, 1, selection.startLineNumber, selection.startColumn);\n                }\n            }\n            else {\n                return new Range(selection.startLineNumber, 1, selection.endLineNumber, selection.endColumn);\n            }\n        });\n        return rangesToDelete;\n    }\n}\nexport class DeleteAllRightAction extends AbstractDeleteAllToBoundaryAction {\n    constructor() {\n        super({\n            id: 'deleteAllRight',\n            label: nls.localize('lines.deleteAllRight', \"Delete All Right\"),\n            alias: 'Delete All Right',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 41 /* KeyCode.KeyK */, secondary: [2048 /* KeyMod.CtrlCmd */ | 20 /* KeyCode.Delete */] },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _getEndCursorState(primaryCursor, rangesToDelete) {\n        let endPrimaryCursor = null;\n        const endCursorState = [];\n        for (let i = 0, len = rangesToDelete.length, offset = 0; i < len; i++) {\n            const range = rangesToDelete[i];\n            const endCursor = new Selection(range.startLineNumber - offset, range.startColumn, range.startLineNumber - offset, range.startColumn);\n            if (range.intersectRanges(primaryCursor)) {\n                endPrimaryCursor = endCursor;\n            }\n            else {\n                endCursorState.push(endCursor);\n            }\n        }\n        if (endPrimaryCursor) {\n            endCursorState.unshift(endPrimaryCursor);\n        }\n        return endCursorState;\n    }\n    _getRangesToDelete(editor) {\n        const model = editor.getModel();\n        if (model === null) {\n            return [];\n        }\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return [];\n        }\n        const rangesToDelete = selections.map((sel) => {\n            if (sel.isEmpty()) {\n                const maxColumn = model.getLineMaxColumn(sel.startLineNumber);\n                if (sel.startColumn === maxColumn) {\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber + 1, 1);\n                }\n                else {\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber, maxColumn);\n                }\n            }\n            return sel;\n        });\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\n        return rangesToDelete;\n    }\n}\nexport class JoinLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.joinLines',\n            label: nls.localize('lines.joinLines', \"Join Lines\"),\n            alias: 'Join Lines',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 0,\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 40 /* KeyCode.KeyJ */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        let primaryCursor = editor.getSelection();\n        if (primaryCursor === null) {\n            return;\n        }\n        selections.sort(Range.compareRangesUsingStarts);\n        const reducedSelections = [];\n        const lastSelection = selections.reduce((previousValue, currentValue) => {\n            if (previousValue.isEmpty()) {\n                if (previousValue.endLineNumber === currentValue.startLineNumber) {\n                    if (primaryCursor.equalsSelection(previousValue)) {\n                        primaryCursor = currentValue;\n                    }\n                    return currentValue;\n                }\n                if (currentValue.startLineNumber > previousValue.endLineNumber + 1) {\n                    reducedSelections.push(previousValue);\n                    return currentValue;\n                }\n                else {\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\n                }\n            }\n            else {\n                if (currentValue.startLineNumber > previousValue.endLineNumber) {\n                    reducedSelections.push(previousValue);\n                    return currentValue;\n                }\n                else {\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\n                }\n            }\n        });\n        reducedSelections.push(lastSelection);\n        const model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        const edits = [];\n        const endCursorState = [];\n        let endPrimaryCursor = primaryCursor;\n        let lineOffset = 0;\n        for (let i = 0, len = reducedSelections.length; i < len; i++) {\n            const selection = reducedSelections[i];\n            const startLineNumber = selection.startLineNumber;\n            const startColumn = 1;\n            let columnDeltaOffset = 0;\n            let endLineNumber, endColumn;\n            const selectionEndPositionOffset = model.getLineLength(selection.endLineNumber) - selection.endColumn;\n            if (selection.isEmpty() || selection.startLineNumber === selection.endLineNumber) {\n                const position = selection.getStartPosition();\n                if (position.lineNumber < model.getLineCount()) {\n                    endLineNumber = startLineNumber + 1;\n                    endColumn = model.getLineMaxColumn(endLineNumber);\n                }\n                else {\n                    endLineNumber = position.lineNumber;\n                    endColumn = model.getLineMaxColumn(position.lineNumber);\n                }\n            }\n            else {\n                endLineNumber = selection.endLineNumber;\n                endColumn = model.getLineMaxColumn(endLineNumber);\n            }\n            let trimmedLinesContent = model.getLineContent(startLineNumber);\n            for (let i = startLineNumber + 1; i <= endLineNumber; i++) {\n                const lineText = model.getLineContent(i);\n                const firstNonWhitespaceIdx = model.getLineFirstNonWhitespaceColumn(i);\n                if (firstNonWhitespaceIdx >= 1) {\n                    let insertSpace = true;\n                    if (trimmedLinesContent === '') {\n                        insertSpace = false;\n                    }\n                    if (insertSpace && (trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === ' ' ||\n                        trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === '\\t')) {\n                        insertSpace = false;\n                        trimmedLinesContent = trimmedLinesContent.replace(/[\\s\\uFEFF\\xA0]+$/g, ' ');\n                    }\n                    const lineTextWithoutIndent = lineText.substr(firstNonWhitespaceIdx - 1);\n                    trimmedLinesContent += (insertSpace ? ' ' : '') + lineTextWithoutIndent;\n                    if (insertSpace) {\n                        columnDeltaOffset = lineTextWithoutIndent.length + 1;\n                    }\n                    else {\n                        columnDeltaOffset = lineTextWithoutIndent.length;\n                    }\n                }\n                else {\n                    columnDeltaOffset = 0;\n                }\n            }\n            const deleteSelection = new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n            if (!deleteSelection.isEmpty()) {\n                let resultSelection;\n                if (selection.isEmpty()) {\n                    edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                    resultSelection = new Selection(deleteSelection.startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1, startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1);\n                }\n                else {\n                    if (selection.startLineNumber === selection.endLineNumber) {\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.endLineNumber - lineOffset, selection.endColumn);\n                    }\n                    else {\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.startLineNumber - lineOffset, trimmedLinesContent.length - selectionEndPositionOffset);\n                    }\n                }\n                if (Range.intersectRanges(deleteSelection, primaryCursor) !== null) {\n                    endPrimaryCursor = resultSelection;\n                }\n                else {\n                    endCursorState.push(resultSelection);\n                }\n            }\n            lineOffset += deleteSelection.endLineNumber - deleteSelection.startLineNumber;\n        }\n        endCursorState.unshift(endPrimaryCursor);\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class TransposeAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.transpose',\n            label: nls.localize('editor.transpose', \"Transpose Characters around the Cursor\"),\n            alias: 'Transpose Characters around the Cursor',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(_accessor, editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        const commands = [];\n        for (let i = 0, len = selections.length; i < len; i++) {\n            const selection = selections[i];\n            if (!selection.isEmpty()) {\n                continue;\n            }\n            const cursor = selection.getStartPosition();\n            const maxColumn = model.getLineMaxColumn(cursor.lineNumber);\n            if (cursor.column >= maxColumn) {\n                if (cursor.lineNumber === model.getLineCount()) {\n                    continue;\n                }\n                // The cursor is at the end of current line and current line is not empty\n                // then we transpose the character before the cursor and the line break if there is any following line.\n                const deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1);\n                const chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\n                commands.push(new ReplaceCommand(new Selection(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1), chars));\n            }\n            else {\n                const deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber, cursor.column + 1);\n                const chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\n                commands.push(new ReplaceCommandThatPreservesSelection(deleteSelection, chars, new Selection(cursor.lineNumber, cursor.column + 1, cursor.lineNumber, cursor.column + 1)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nexport class AbstractCaseAction extends EditorAction {\n    run(_accessor, editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        const wordSeparators = editor.getOption(129 /* EditorOption.wordSeparators */);\n        const textEdits = [];\n        for (const selection of selections) {\n            if (selection.isEmpty()) {\n                const cursor = selection.getStartPosition();\n                const word = editor.getConfiguredWordAtPosition(cursor);\n                if (!word) {\n                    continue;\n                }\n                const wordRange = new Range(cursor.lineNumber, word.startColumn, cursor.lineNumber, word.endColumn);\n                const text = model.getValueInRange(wordRange);\n                textEdits.push(EditOperation.replace(wordRange, this._modifyText(text, wordSeparators)));\n            }\n            else {\n                const text = model.getValueInRange(selection);\n                textEdits.push(EditOperation.replace(selection, this._modifyText(text, wordSeparators)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, textEdits);\n        editor.pushUndoStop();\n    }\n}\nexport class UpperCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToUppercase',\n            label: nls.localize('editor.transformToUppercase', \"Transform to Uppercase\"),\n            alias: 'Transform to Uppercase',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        return text.toLocaleUpperCase();\n    }\n}\nexport class LowerCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToLowercase',\n            label: nls.localize('editor.transformToLowercase', \"Transform to Lowercase\"),\n            alias: 'Transform to Lowercase',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        return text.toLocaleLowerCase();\n    }\n}\nclass BackwardsCompatibleRegExp {\n    constructor(_pattern, _flags) {\n        this._pattern = _pattern;\n        this._flags = _flags;\n        this._actual = null;\n        this._evaluated = false;\n    }\n    get() {\n        if (!this._evaluated) {\n            this._evaluated = true;\n            try {\n                this._actual = new RegExp(this._pattern, this._flags);\n            }\n            catch (err) {\n                // this browser does not support this regular expression\n            }\n        }\n        return this._actual;\n    }\n    isSupported() {\n        return (this.get() !== null);\n    }\n}\nexport class TitleCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToTitlecase',\n            label: nls.localize('editor.transformToTitlecase', \"Transform to Title Case\"),\n            alias: 'Transform to Title Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        const titleBoundary = TitleCaseAction.titleBoundary.get();\n        if (!titleBoundary) {\n            // cannot support this\n            return text;\n        }\n        return text\n            .toLocaleLowerCase()\n            .replace(titleBoundary, (b) => b.toLocaleUpperCase());\n    }\n}\nTitleCaseAction.titleBoundary = new BackwardsCompatibleRegExp('(^|[^\\\\p{L}\\\\p{N}\\']|((^|\\\\P{L})\\'))\\\\p{L}', 'gmu');\nexport class SnakeCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToSnakecase',\n            label: nls.localize('editor.transformToSnakecase', \"Transform to Snake Case\"),\n            alias: 'Transform to Snake Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        const caseBoundary = SnakeCaseAction.caseBoundary.get();\n        const singleLetters = SnakeCaseAction.singleLetters.get();\n        if (!caseBoundary || !singleLetters) {\n            // cannot support this\n            return text;\n        }\n        return (text\n            .replace(caseBoundary, '$1_$2')\n            .replace(singleLetters, '$1_$2$3')\n            .toLocaleLowerCase());\n    }\n}\nSnakeCaseAction.caseBoundary = new BackwardsCompatibleRegExp('(\\\\p{Ll})(\\\\p{Lu})', 'gmu');\nSnakeCaseAction.singleLetters = new BackwardsCompatibleRegExp('(\\\\p{Lu}|\\\\p{N})(\\\\p{Lu})(\\\\p{Ll})', 'gmu');\nexport class CamelCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToCamelcase',\n            label: nls.localize('editor.transformToCamelcase', \"Transform to Camel Case\"),\n            alias: 'Transform to Camel Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        const wordBoundary = CamelCaseAction.wordBoundary.get();\n        if (!wordBoundary) {\n            // cannot support this\n            return text;\n        }\n        const words = text.split(wordBoundary);\n        const firstWord = words.shift();\n        return firstWord + words.map((word) => word.substring(0, 1).toLocaleUpperCase() + word.substring(1))\n            .join('');\n    }\n}\nCamelCaseAction.wordBoundary = new BackwardsCompatibleRegExp('[_\\\\s-]', 'gm');\nexport class KebabCaseAction extends AbstractCaseAction {\n    static isSupported() {\n        const areAllRegexpsSupported = [\n            this.caseBoundary,\n            this.singleLetters,\n            this.underscoreBoundary,\n        ].every((regexp) => regexp.isSupported());\n        return areAllRegexpsSupported;\n    }\n    constructor() {\n        super({\n            id: 'editor.action.transformToKebabcase',\n            label: nls.localize('editor.transformToKebabcase', 'Transform to Kebab Case'),\n            alias: 'Transform to Kebab Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, _) {\n        const caseBoundary = KebabCaseAction.caseBoundary.get();\n        const singleLetters = KebabCaseAction.singleLetters.get();\n        const underscoreBoundary = KebabCaseAction.underscoreBoundary.get();\n        if (!caseBoundary || !singleLetters || !underscoreBoundary) {\n            // one or more regexps aren't supported\n            return text;\n        }\n        return text\n            .replace(underscoreBoundary, '$1-$3')\n            .replace(caseBoundary, '$1-$2')\n            .replace(singleLetters, '$1-$2')\n            .toLocaleLowerCase();\n    }\n}\nKebabCaseAction.caseBoundary = new BackwardsCompatibleRegExp('(\\\\p{Ll})(\\\\p{Lu})', 'gmu');\nKebabCaseAction.singleLetters = new BackwardsCompatibleRegExp('(\\\\p{Lu}|\\\\p{N})(\\\\p{Lu}\\\\p{Ll})', 'gmu');\nKebabCaseAction.underscoreBoundary = new BackwardsCompatibleRegExp('(\\\\S)(_)(\\\\S)', 'gm');\nregisterEditorAction(CopyLinesUpAction);\nregisterEditorAction(CopyLinesDownAction);\nregisterEditorAction(DuplicateSelectionAction);\nregisterEditorAction(MoveLinesUpAction);\nregisterEditorAction(MoveLinesDownAction);\nregisterEditorAction(SortLinesAscendingAction);\nregisterEditorAction(SortLinesDescendingAction);\nregisterEditorAction(DeleteDuplicateLinesAction);\nregisterEditorAction(TrimTrailingWhitespaceAction);\nregisterEditorAction(DeleteLinesAction);\nregisterEditorAction(IndentLinesAction);\nregisterEditorAction(OutdentLinesAction);\nregisterEditorAction(InsertLineBeforeAction);\nregisterEditorAction(InsertLineAfterAction);\nregisterEditorAction(DeleteAllLeftAction);\nregisterEditorAction(DeleteAllRightAction);\nregisterEditorAction(JoinLinesAction);\nregisterEditorAction(TransposeAction);\nregisterEditorAction(UpperCaseAction);\nregisterEditorAction(LowerCaseAction);\nif (SnakeCaseAction.caseBoundary.isSupported() && SnakeCaseAction.singleLetters.isSupported()) {\n    registerEditorAction(SnakeCaseAction);\n}\nif (CamelCaseAction.wordBoundary.isSupported()) {\n    registerEditorAction(CamelCaseAction);\n}\nif (TitleCaseAction.titleBoundary.isSupported()) {\n    registerEditorAction(TitleCaseAction);\n}\nif (KebabCaseAction.isSupported()) {\n    registerEditorAction(KebabCaseAction);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar LinkedEditingContribution_1;\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, Delayer, first } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { isCancellationError, onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution, registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { registerColor } from '../../../../platform/theme/common/colorRegistry.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport './linkedEditing.css';\nexport const CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE = new RawContextKey('LinkedEditingInputVisible', false);\nconst DECORATION_CLASS_NAME = 'linked-editing-decoration';\nlet LinkedEditingContribution = LinkedEditingContribution_1 = class LinkedEditingContribution extends Disposable {\n    static get(editor) {\n        return editor.getContribution(LinkedEditingContribution_1.ID);\n    }\n    constructor(editor, contextKeyService, languageFeaturesService, languageConfigurationService, languageFeatureDebounceService) {\n        super();\n        this.languageConfigurationService = languageConfigurationService;\n        this._syncRangesToken = 0;\n        this._localToDispose = this._register(new DisposableStore());\n        this._editor = editor;\n        this._providers = languageFeaturesService.linkedEditingRangeProvider;\n        this._enabled = false;\n        this._visibleContextKey = CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE.bindTo(contextKeyService);\n        this._debounceInformation = languageFeatureDebounceService.for(this._providers, 'Linked Editing', { max: 200 });\n        this._currentDecorations = this._editor.createDecorationsCollection();\n        this._languageWordPattern = null;\n        this._currentWordPattern = null;\n        this._ignoreChangeEvent = false;\n        this._localToDispose = this._register(new DisposableStore());\n        this._rangeUpdateTriggerPromise = null;\n        this._rangeSyncTriggerPromise = null;\n        this._currentRequest = null;\n        this._currentRequestPosition = null;\n        this._currentRequestModelVersion = null;\n        this._register(this._editor.onDidChangeModel(() => this.reinitialize(true)));\n        this._register(this._editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(69 /* EditorOption.linkedEditing */) || e.hasChanged(92 /* EditorOption.renameOnType */)) {\n                this.reinitialize(false);\n            }\n        }));\n        this._register(this._providers.onDidChange(() => this.reinitialize(false)));\n        this._register(this._editor.onDidChangeModelLanguage(() => this.reinitialize(true)));\n        this.reinitialize(true);\n    }\n    reinitialize(forceRefresh) {\n        const model = this._editor.getModel();\n        const isEnabled = model !== null && (this._editor.getOption(69 /* EditorOption.linkedEditing */) || this._editor.getOption(92 /* EditorOption.renameOnType */)) && this._providers.has(model);\n        if (isEnabled === this._enabled && !forceRefresh) {\n            return;\n        }\n        this._enabled = isEnabled;\n        this.clearRanges();\n        this._localToDispose.clear();\n        if (!isEnabled || model === null) {\n            return;\n        }\n        this._localToDispose.add(Event.runAndSubscribe(model.onDidChangeLanguageConfiguration, () => {\n            this._languageWordPattern = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n        }));\n        const rangeUpdateScheduler = new Delayer(this._debounceInformation.get(model));\n        const triggerRangeUpdate = () => {\n            var _a;\n            this._rangeUpdateTriggerPromise = rangeUpdateScheduler.trigger(() => this.updateRanges(), (_a = this._debounceDuration) !== null && _a !== void 0 ? _a : this._debounceInformation.get(model));\n        };\n        const rangeSyncScheduler = new Delayer(0);\n        const triggerRangeSync = (token) => {\n            this._rangeSyncTriggerPromise = rangeSyncScheduler.trigger(() => this._syncRanges(token));\n        };\n        this._localToDispose.add(this._editor.onDidChangeCursorPosition(() => {\n            triggerRangeUpdate();\n        }));\n        this._localToDispose.add(this._editor.onDidChangeModelContent((e) => {\n            if (!this._ignoreChangeEvent) {\n                if (this._currentDecorations.length > 0) {\n                    const referenceRange = this._currentDecorations.getRange(0);\n                    if (referenceRange && e.changes.every(c => referenceRange.intersectRanges(c.range))) {\n                        triggerRangeSync(this._syncRangesToken);\n                        return;\n                    }\n                }\n            }\n            triggerRangeUpdate();\n        }));\n        this._localToDispose.add({\n            dispose: () => {\n                rangeUpdateScheduler.dispose();\n                rangeSyncScheduler.dispose();\n            }\n        });\n        this.updateRanges();\n    }\n    _syncRanges(token) {\n        // delayed invocation, make sure we're still on\n        if (!this._editor.hasModel() || token !== this._syncRangesToken || this._currentDecorations.length === 0) {\n            // nothing to do\n            return;\n        }\n        const model = this._editor.getModel();\n        const referenceRange = this._currentDecorations.getRange(0);\n        if (!referenceRange || referenceRange.startLineNumber !== referenceRange.endLineNumber) {\n            return this.clearRanges();\n        }\n        const referenceValue = model.getValueInRange(referenceRange);\n        if (this._currentWordPattern) {\n            const match = referenceValue.match(this._currentWordPattern);\n            const matchLength = match ? match[0].length : 0;\n            if (matchLength !== referenceValue.length) {\n                return this.clearRanges();\n            }\n        }\n        const edits = [];\n        for (let i = 1, len = this._currentDecorations.length; i < len; i++) {\n            const mirrorRange = this._currentDecorations.getRange(i);\n            if (!mirrorRange) {\n                continue;\n            }\n            if (mirrorRange.startLineNumber !== mirrorRange.endLineNumber) {\n                edits.push({\n                    range: mirrorRange,\n                    text: referenceValue\n                });\n            }\n            else {\n                let oldValue = model.getValueInRange(mirrorRange);\n                let newValue = referenceValue;\n                let rangeStartColumn = mirrorRange.startColumn;\n                let rangeEndColumn = mirrorRange.endColumn;\n                const commonPrefixLength = strings.commonPrefixLength(oldValue, newValue);\n                rangeStartColumn += commonPrefixLength;\n                oldValue = oldValue.substr(commonPrefixLength);\n                newValue = newValue.substr(commonPrefixLength);\n                const commonSuffixLength = strings.commonSuffixLength(oldValue, newValue);\n                rangeEndColumn -= commonSuffixLength;\n                oldValue = oldValue.substr(0, oldValue.length - commonSuffixLength);\n                newValue = newValue.substr(0, newValue.length - commonSuffixLength);\n                if (rangeStartColumn !== rangeEndColumn || newValue.length !== 0) {\n                    edits.push({\n                        range: new Range(mirrorRange.startLineNumber, rangeStartColumn, mirrorRange.endLineNumber, rangeEndColumn),\n                        text: newValue\n                    });\n                }\n            }\n        }\n        if (edits.length === 0) {\n            return;\n        }\n        try {\n            this._editor.popUndoStop();\n            this._ignoreChangeEvent = true;\n            const prevEditOperationType = this._editor._getViewModel().getPrevEditOperationType();\n            this._editor.executeEdits('linkedEditing', edits);\n            this._editor._getViewModel().setPrevEditOperationType(prevEditOperationType);\n        }\n        finally {\n            this._ignoreChangeEvent = false;\n        }\n    }\n    dispose() {\n        this.clearRanges();\n        super.dispose();\n    }\n    clearRanges() {\n        this._visibleContextKey.set(false);\n        this._currentDecorations.clear();\n        if (this._currentRequest) {\n            this._currentRequest.cancel();\n            this._currentRequest = null;\n            this._currentRequestPosition = null;\n        }\n    }\n    updateRanges(force = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._editor.hasModel()) {\n                this.clearRanges();\n                return;\n            }\n            const position = this._editor.getPosition();\n            if (!this._enabled && !force || this._editor.getSelections().length > 1) {\n                // disabled or multicursor\n                this.clearRanges();\n                return;\n            }\n            const model = this._editor.getModel();\n            const modelVersionId = model.getVersionId();\n            if (this._currentRequestPosition && this._currentRequestModelVersion === modelVersionId) {\n                if (position.equals(this._currentRequestPosition)) {\n                    return; // same position\n                }\n                if (this._currentDecorations.length > 0) {\n                    const range = this._currentDecorations.getRange(0);\n                    if (range && range.containsPosition(position)) {\n                        return; // just moving inside the existing primary range\n                    }\n                }\n            }\n            // Clear existing decorations while we compute new ones\n            this.clearRanges();\n            this._currentRequestPosition = position;\n            this._currentRequestModelVersion = modelVersionId;\n            const request = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const sw = new StopWatch(false);\n                    const response = yield getLinkedEditingRanges(this._providers, model, position, token);\n                    this._debounceInformation.update(model, sw.elapsed());\n                    if (request !== this._currentRequest) {\n                        return;\n                    }\n                    this._currentRequest = null;\n                    if (modelVersionId !== model.getVersionId()) {\n                        return;\n                    }\n                    let ranges = [];\n                    if (response === null || response === void 0 ? void 0 : response.ranges) {\n                        ranges = response.ranges;\n                    }\n                    this._currentWordPattern = (response === null || response === void 0 ? void 0 : response.wordPattern) || this._languageWordPattern;\n                    let foundReferenceRange = false;\n                    for (let i = 0, len = ranges.length; i < len; i++) {\n                        if (Range.containsPosition(ranges[i], position)) {\n                            foundReferenceRange = true;\n                            if (i !== 0) {\n                                const referenceRange = ranges[i];\n                                ranges.splice(i, 1);\n                                ranges.unshift(referenceRange);\n                            }\n                            break;\n                        }\n                    }\n                    if (!foundReferenceRange) {\n                        // Cannot do linked editing if the ranges are not where the cursor is...\n                        this.clearRanges();\n                        return;\n                    }\n                    const decorations = ranges.map(range => ({ range: range, options: LinkedEditingContribution_1.DECORATION }));\n                    this._visibleContextKey.set(true);\n                    this._currentDecorations.set(decorations);\n                    this._syncRangesToken++; // cancel any pending syncRanges call\n                }\n                catch (err) {\n                    if (!isCancellationError(err)) {\n                        onUnexpectedError(err);\n                    }\n                    if (this._currentRequest === request || !this._currentRequest) {\n                        // stop if we are still the latest request\n                        this.clearRanges();\n                    }\n                }\n            }));\n            this._currentRequest = request;\n            return request;\n        });\n    }\n};\nLinkedEditingContribution.ID = 'editor.contrib.linkedEditing';\nLinkedEditingContribution.DECORATION = ModelDecorationOptions.register({\n    description: 'linked-editing',\n    stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */,\n    className: DECORATION_CLASS_NAME\n});\nLinkedEditingContribution = LinkedEditingContribution_1 = __decorate([\n    __param(1, IContextKeyService),\n    __param(2, ILanguageFeaturesService),\n    __param(3, ILanguageConfigurationService),\n    __param(4, ILanguageFeatureDebounceService)\n], LinkedEditingContribution);\nexport { LinkedEditingContribution };\nexport class LinkedEditingAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.linkedEditing',\n            label: nls.localize('linkedEditing.label', \"Start Linked Editing\"),\n            alias: 'Start Linked Editing',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasRenameProvider),\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 60 /* KeyCode.F2 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    runCommand(accessor, args) {\n        const editorService = accessor.get(ICodeEditorService);\n        const [uri, pos] = Array.isArray(args) && args || [undefined, undefined];\n        if (URI.isUri(uri) && Position.isIPosition(pos)) {\n            return editorService.openCodeEditor({ resource: uri }, editorService.getActiveCodeEditor()).then(editor => {\n                if (!editor) {\n                    return;\n                }\n                editor.setPosition(pos);\n                editor.invokeWithinContext(accessor => {\n                    this.reportTelemetry(accessor, editor);\n                    return this.run(accessor, editor);\n                });\n            }, onUnexpectedError);\n        }\n        return super.runCommand(accessor, args);\n    }\n    run(_accessor, editor) {\n        const controller = LinkedEditingContribution.get(editor);\n        if (controller) {\n            return Promise.resolve(controller.updateRanges(true));\n        }\n        return Promise.resolve();\n    }\n}\nconst LinkedEditingCommand = EditorCommand.bindToContribution(LinkedEditingContribution.get);\nregisterEditorCommand(new LinkedEditingCommand({\n    id: 'cancelLinkedEditingInput',\n    precondition: CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE,\n    handler: x => x.clearRanges(),\n    kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 99,\n        primary: 9 /* KeyCode.Escape */,\n        secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n    }\n}));\nfunction getLinkedEditingRanges(providers, model, position, token) {\n    const orderedByScore = providers.ordered(model);\n    // in order of score ask the linked editing range provider\n    // until someone response with a good result\n    // (good = not null)\n    return first(orderedByScore.map(provider => () => __awaiter(this, void 0, void 0, function* () {\n        try {\n            return yield provider.provideLinkedEditingRanges(model, position, token);\n        }\n        catch (e) {\n            onUnexpectedExternalError(e);\n            return undefined;\n        }\n    })), result => !!result && arrays.isNonEmptyArray(result === null || result === void 0 ? void 0 : result.ranges));\n}\nexport const editorLinkedEditingBackground = registerColor('editor.linkedEditingBackground', { dark: Color.fromHex('#f00').transparent(0.3), light: Color.fromHex('#f00').transparent(0.3), hcDark: Color.fromHex('#f00').transparent(0.3), hcLight: Color.white }, nls.localize('editorLinkedEditingBackground', 'Background color when the editor auto renames on type.'));\nregisterModelAndPositionCommand('_executeLinkedEditingProvider', (_accessor, model, position) => {\n    const { linkedEditingRangeProvider } = _accessor.get(ILanguageFeaturesService);\n    return getLinkedEditingRanges(linkedEditingRangeProvider, model, position, CancellationToken.None);\n});\nregisterEditorContribution(LinkedEditingContribution.ID, LinkedEditingContribution, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nregisterEditorAction(LinkedEditingAction);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore, isDisposable } from '../../../../base/common/lifecycle.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Range } from '../../../common/core/range.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport class Link {\n    constructor(link, provider) {\n        this._link = link;\n        this._provider = provider;\n    }\n    toJSON() {\n        return {\n            range: this.range,\n            url: this.url,\n            tooltip: this.tooltip\n        };\n    }\n    get range() {\n        return this._link.range;\n    }\n    get url() {\n        return this._link.url;\n    }\n    get tooltip() {\n        return this._link.tooltip;\n    }\n    resolve(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._link.url) {\n                return this._link.url;\n            }\n            if (typeof this._provider.resolveLink === 'function') {\n                return Promise.resolve(this._provider.resolveLink(this._link, token)).then(value => {\n                    this._link = value || this._link;\n                    if (this._link.url) {\n                        // recurse\n                        return this.resolve(token);\n                    }\n                    return Promise.reject(new Error('missing'));\n                });\n            }\n            return Promise.reject(new Error('missing'));\n        });\n    }\n}\nexport class LinksList {\n    constructor(tuples) {\n        this._disposables = new DisposableStore();\n        let links = [];\n        for (const [list, provider] of tuples) {\n            // merge all links\n            const newLinks = list.links.map(link => new Link(link, provider));\n            links = LinksList._union(links, newLinks);\n            // register disposables\n            if (isDisposable(list)) {\n                this._disposables.add(list);\n            }\n        }\n        this.links = links;\n    }\n    dispose() {\n        this._disposables.dispose();\n        this.links.length = 0;\n    }\n    static _union(oldLinks, newLinks) {\n        // reunite oldLinks with newLinks and remove duplicates\n        const result = [];\n        let oldIndex;\n        let oldLen;\n        let newIndex;\n        let newLen;\n        for (oldIndex = 0, newIndex = 0, oldLen = oldLinks.length, newLen = newLinks.length; oldIndex < oldLen && newIndex < newLen;) {\n            const oldLink = oldLinks[oldIndex];\n            const newLink = newLinks[newIndex];\n            if (Range.areIntersectingOrTouching(oldLink.range, newLink.range)) {\n                // Remove the oldLink\n                oldIndex++;\n                continue;\n            }\n            const comparisonResult = Range.compareRangesUsingStarts(oldLink.range, newLink.range);\n            if (comparisonResult < 0) {\n                // oldLink is before\n                result.push(oldLink);\n                oldIndex++;\n            }\n            else {\n                // newLink is before\n                result.push(newLink);\n                newIndex++;\n            }\n        }\n        for (; oldIndex < oldLen; oldIndex++) {\n            result.push(oldLinks[oldIndex]);\n        }\n        for (; newIndex < newLen; newIndex++) {\n            result.push(newLinks[newIndex]);\n        }\n        return result;\n    }\n}\nexport function getLinks(providers, model, token) {\n    const lists = [];\n    // ask all providers for links in parallel\n    const promises = providers.ordered(model).reverse().map((provider, i) => {\n        return Promise.resolve(provider.provideLinks(model, token)).then(result => {\n            if (result) {\n                lists[i] = [result, provider];\n            }\n        }, onUnexpectedExternalError);\n    });\n    return Promise.all(promises).then(() => {\n        const result = new LinksList(coalesce(lists));\n        if (!token.isCancellationRequested) {\n            return result;\n        }\n        result.dispose();\n        return new LinksList([]);\n    });\n}\nCommandsRegistry.registerCommand('_executeLinkProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\n    let [uri, resolveCount] = args;\n    assertType(uri instanceof URI);\n    if (typeof resolveCount !== 'number') {\n        resolveCount = 0;\n    }\n    const { linkProvider } = accessor.get(ILanguageFeaturesService);\n    const model = accessor.get(IModelService).getModel(uri);\n    if (!model) {\n        return [];\n    }\n    const list = yield getLinks(linkProvider, model, CancellationToken.None);\n    if (!list) {\n        return [];\n    }\n    // resolve links\n    for (let i = 0; i < Math.min(resolveCount, list.links.length); i++) {\n        yield list.links[i].resolve(CancellationToken.None);\n    }\n    const result = list.links.slice(0);\n    list.dispose();\n    return result;\n}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar LinkDetector_1;\nimport { createCancelablePromise, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as resources from '../../../../base/common/resources.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport './links.css';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ClickLinkGesture } from '../../gotoSymbol/browser/link/clickLinkGesture.js';\nimport { getLinks } from './getLinks.js';\nimport * as nls from '../../../../nls.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nlet LinkDetector = LinkDetector_1 = class LinkDetector extends Disposable {\n    static get(editor) {\n        return editor.getContribution(LinkDetector_1.ID);\n    }\n    constructor(editor, openerService, notificationService, languageFeaturesService, languageFeatureDebounceService) {\n        super();\n        this.editor = editor;\n        this.openerService = openerService;\n        this.notificationService = notificationService;\n        this.languageFeaturesService = languageFeaturesService;\n        this.providers = this.languageFeaturesService.linkProvider;\n        this.debounceInformation = languageFeatureDebounceService.for(this.providers, 'Links', { min: 1000, max: 4000 });\n        this.computeLinks = this._register(new RunOnceScheduler(() => this.computeLinksNow(), 1000));\n        this.computePromise = null;\n        this.activeLinksList = null;\n        this.currentOccurrences = {};\n        this.activeLinkDecorationId = null;\n        const clickLinkGesture = this._register(new ClickLinkGesture(editor));\n        this._register(clickLinkGesture.onMouseMoveOrRelevantKeyDown(([mouseEvent, keyboardEvent]) => {\n            this._onEditorMouseMove(mouseEvent, keyboardEvent);\n        }));\n        this._register(clickLinkGesture.onExecute((e) => {\n            this.onEditorMouseUp(e);\n        }));\n        this._register(clickLinkGesture.onCancel((e) => {\n            this.cleanUpActiveLinkDecoration();\n        }));\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (!e.hasChanged(70 /* EditorOption.links */)) {\n                return;\n            }\n            // Remove any links (for the getting disabled case)\n            this.updateDecorations([]);\n            // Stop any computation (for the getting disabled case)\n            this.stop();\n            // Start computing (for the getting enabled case)\n            this.computeLinks.schedule(0);\n        }));\n        this._register(editor.onDidChangeModelContent((e) => {\n            if (!this.editor.hasModel()) {\n                return;\n            }\n            this.computeLinks.schedule(this.debounceInformation.get(this.editor.getModel()));\n        }));\n        this._register(editor.onDidChangeModel((e) => {\n            this.currentOccurrences = {};\n            this.activeLinkDecorationId = null;\n            this.stop();\n            this.computeLinks.schedule(0);\n        }));\n        this._register(editor.onDidChangeModelLanguage((e) => {\n            this.stop();\n            this.computeLinks.schedule(0);\n        }));\n        this._register(this.providers.onDidChange((e) => {\n            this.stop();\n            this.computeLinks.schedule(0);\n        }));\n        this.computeLinks.schedule(0);\n    }\n    computeLinksNow() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.editor.hasModel() || !this.editor.getOption(70 /* EditorOption.links */)) {\n                return;\n            }\n            const model = this.editor.getModel();\n            if (model.isTooLargeForSyncing()) {\n                return;\n            }\n            if (!this.providers.has(model)) {\n                return;\n            }\n            if (this.activeLinksList) {\n                this.activeLinksList.dispose();\n                this.activeLinksList = null;\n            }\n            this.computePromise = createCancelablePromise(token => getLinks(this.providers, model, token));\n            try {\n                const sw = new StopWatch(false);\n                this.activeLinksList = yield this.computePromise;\n                this.debounceInformation.update(model, sw.elapsed());\n                if (model.isDisposed()) {\n                    return;\n                }\n                this.updateDecorations(this.activeLinksList.links);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n            finally {\n                this.computePromise = null;\n            }\n        });\n    }\n    updateDecorations(links) {\n        const useMetaKey = (this.editor.getOption(77 /* EditorOption.multiCursorModifier */) === 'altKey');\n        const oldDecorations = [];\n        const keys = Object.keys(this.currentOccurrences);\n        for (const decorationId of keys) {\n            const occurence = this.currentOccurrences[decorationId];\n            oldDecorations.push(occurence.decorationId);\n        }\n        const newDecorations = [];\n        if (links) {\n            // Not sure why this is sometimes null\n            for (const link of links) {\n                newDecorations.push(LinkOccurrence.decoration(link, useMetaKey));\n            }\n        }\n        this.editor.changeDecorations((changeAccessor) => {\n            const decorations = changeAccessor.deltaDecorations(oldDecorations, newDecorations);\n            this.currentOccurrences = {};\n            this.activeLinkDecorationId = null;\n            for (let i = 0, len = decorations.length; i < len; i++) {\n                const occurence = new LinkOccurrence(links[i], decorations[i]);\n                this.currentOccurrences[occurence.decorationId] = occurence;\n            }\n        });\n    }\n    _onEditorMouseMove(mouseEvent, withKey) {\n        const useMetaKey = (this.editor.getOption(77 /* EditorOption.multiCursorModifier */) === 'altKey');\n        if (this.isEnabled(mouseEvent, withKey)) {\n            this.cleanUpActiveLinkDecoration(); // always remove previous link decoration as their can only be one\n            const occurrence = this.getLinkOccurrence(mouseEvent.target.position);\n            if (occurrence) {\n                this.editor.changeDecorations((changeAccessor) => {\n                    occurrence.activate(changeAccessor, useMetaKey);\n                    this.activeLinkDecorationId = occurrence.decorationId;\n                });\n            }\n        }\n        else {\n            this.cleanUpActiveLinkDecoration();\n        }\n    }\n    cleanUpActiveLinkDecoration() {\n        const useMetaKey = (this.editor.getOption(77 /* EditorOption.multiCursorModifier */) === 'altKey');\n        if (this.activeLinkDecorationId) {\n            const occurrence = this.currentOccurrences[this.activeLinkDecorationId];\n            if (occurrence) {\n                this.editor.changeDecorations((changeAccessor) => {\n                    occurrence.deactivate(changeAccessor, useMetaKey);\n                });\n            }\n            this.activeLinkDecorationId = null;\n        }\n    }\n    onEditorMouseUp(mouseEvent) {\n        if (!this.isEnabled(mouseEvent)) {\n            return;\n        }\n        const occurrence = this.getLinkOccurrence(mouseEvent.target.position);\n        if (!occurrence) {\n            return;\n        }\n        this.openLinkOccurrence(occurrence, mouseEvent.hasSideBySideModifier, true /* from user gesture */);\n    }\n    openLinkOccurrence(occurrence, openToSide, fromUserGesture = false) {\n        if (!this.openerService) {\n            return;\n        }\n        const { link } = occurrence;\n        link.resolve(CancellationToken.None).then(uri => {\n            // Support for relative file URIs of the shape file://./relativeFile.txt or file:///./relativeFile.txt\n            if (typeof uri === 'string' && this.editor.hasModel()) {\n                const modelUri = this.editor.getModel().uri;\n                if (modelUri.scheme === Schemas.file && uri.startsWith(`${Schemas.file}:`)) {\n                    const parsedUri = URI.parse(uri);\n                    if (parsedUri.scheme === Schemas.file) {\n                        const fsPath = resources.originalFSPath(parsedUri);\n                        let relativePath = null;\n                        if (fsPath.startsWith('/./')) {\n                            relativePath = `.${fsPath.substr(1)}`;\n                        }\n                        else if (fsPath.startsWith('//./')) {\n                            relativePath = `.${fsPath.substr(2)}`;\n                        }\n                        if (relativePath) {\n                            uri = resources.joinPath(modelUri, relativePath);\n                        }\n                    }\n                }\n            }\n            return this.openerService.open(uri, { openToSide, fromUserGesture, allowContributedOpeners: true, allowCommands: true, fromWorkspace: true });\n        }, err => {\n            const messageOrError = err instanceof Error ? err.message : err;\n            // different error cases\n            if (messageOrError === 'invalid') {\n                this.notificationService.warn(nls.localize('invalid.url', 'Failed to open this link because it is not well-formed: {0}', link.url.toString()));\n            }\n            else if (messageOrError === 'missing') {\n                this.notificationService.warn(nls.localize('missing.url', 'Failed to open this link because its target is missing.'));\n            }\n            else {\n                onUnexpectedError(err);\n            }\n        });\n    }\n    getLinkOccurrence(position) {\n        if (!this.editor.hasModel() || !position) {\n            return null;\n        }\n        const decorations = this.editor.getModel().getDecorationsInRange({\n            startLineNumber: position.lineNumber,\n            startColumn: position.column,\n            endLineNumber: position.lineNumber,\n            endColumn: position.column\n        }, 0, true);\n        for (const decoration of decorations) {\n            const currentOccurrence = this.currentOccurrences[decoration.id];\n            if (currentOccurrence) {\n                return currentOccurrence;\n            }\n        }\n        return null;\n    }\n    isEnabled(mouseEvent, withKey) {\n        return Boolean((mouseEvent.target.type === 6 /* MouseTargetType.CONTENT_TEXT */)\n            && (mouseEvent.hasTriggerModifier || (withKey && withKey.keyCodeIsTriggerKey)));\n    }\n    stop() {\n        var _a;\n        this.computeLinks.cancel();\n        if (this.activeLinksList) {\n            (_a = this.activeLinksList) === null || _a === void 0 ? void 0 : _a.dispose();\n            this.activeLinksList = null;\n        }\n        if (this.computePromise) {\n            this.computePromise.cancel();\n            this.computePromise = null;\n        }\n    }\n    dispose() {\n        super.dispose();\n        this.stop();\n    }\n};\nLinkDetector.ID = 'editor.linkDetector';\nLinkDetector = LinkDetector_1 = __decorate([\n    __param(1, IOpenerService),\n    __param(2, INotificationService),\n    __param(3, ILanguageFeaturesService),\n    __param(4, ILanguageFeatureDebounceService)\n], LinkDetector);\nexport { LinkDetector };\nconst decoration = {\n    general: ModelDecorationOptions.register({\n        description: 'detected-link',\n        stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n        collapseOnReplaceEdit: true,\n        inlineClassName: 'detected-link'\n    }),\n    active: ModelDecorationOptions.register({\n        description: 'detected-link-active',\n        stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n        collapseOnReplaceEdit: true,\n        inlineClassName: 'detected-link-active'\n    })\n};\nclass LinkOccurrence {\n    static decoration(link, useMetaKey) {\n        return {\n            range: link.range,\n            options: LinkOccurrence._getOptions(link, useMetaKey, false)\n        };\n    }\n    static _getOptions(link, useMetaKey, isActive) {\n        const options = Object.assign({}, (isActive ? decoration.active : decoration.general));\n        options.hoverMessage = getHoverMessage(link, useMetaKey);\n        return options;\n    }\n    constructor(link, decorationId) {\n        this.link = link;\n        this.decorationId = decorationId;\n    }\n    activate(changeAccessor, useMetaKey) {\n        changeAccessor.changeDecorationOptions(this.decorationId, LinkOccurrence._getOptions(this.link, useMetaKey, true));\n    }\n    deactivate(changeAccessor, useMetaKey) {\n        changeAccessor.changeDecorationOptions(this.decorationId, LinkOccurrence._getOptions(this.link, useMetaKey, false));\n    }\n}\nfunction getHoverMessage(link, useMetaKey) {\n    const executeCmd = link.url && /^command:/i.test(link.url.toString());\n    const label = link.tooltip\n        ? link.tooltip\n        : executeCmd\n            ? nls.localize('links.navigate.executeCmd', 'Execute command')\n            : nls.localize('links.navigate.follow', 'Follow link');\n    const kb = useMetaKey\n        ? platform.isMacintosh\n            ? nls.localize('links.navigate.kb.meta.mac', \"cmd + click\")\n            : nls.localize('links.navigate.kb.meta', \"ctrl + click\")\n        : platform.isMacintosh\n            ? nls.localize('links.navigate.kb.alt.mac', \"option + click\")\n            : nls.localize('links.navigate.kb.alt', \"alt + click\");\n    if (link.url) {\n        let nativeLabel = '';\n        if (/^command:/i.test(link.url.toString())) {\n            // Don't show complete command arguments in the native tooltip\n            const match = link.url.toString().match(/^command:([^?#]+)/);\n            if (match) {\n                const commandId = match[1];\n                nativeLabel = nls.localize('tooltip.explanation', \"Execute command {0}\", commandId);\n            }\n        }\n        const hoverMessage = new MarkdownString('', true)\n            .appendLink(link.url.toString(true).replace(/ /g, '%20'), label, nativeLabel)\n            .appendMarkdown(` (${kb})`);\n        return hoverMessage;\n    }\n    else {\n        return new MarkdownString().appendText(`${label} (${kb})`);\n    }\n}\nclass OpenLinkAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.openLink',\n            label: nls.localize('label', \"Open Link\"),\n            alias: 'Open Link',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const linkDetector = LinkDetector.get(editor);\n        if (!linkDetector) {\n            return;\n        }\n        if (!editor.hasModel()) {\n            return;\n        }\n        const selections = editor.getSelections();\n        for (const sel of selections) {\n            const link = linkDetector.getLinkOccurrence(sel.getEndPosition());\n            if (link) {\n                linkDetector.openLinkOccurrence(link, false);\n            }\n        }\n    }\n}\nregisterEditorContribution(LinkDetector.ID, LinkDetector, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nregisterEditorAction(OpenLinkAction);\n"],"names":["ResizableContentWidget","Disposable","constructor","_editor","minimumSize","arguments","length","undefined","dom","super","this","allowEditorOverflow","suppressMouseDown","_resizableNode","_register","ResizableHTMLElement","_contentPosition","_isResizing","domNode","style","position","minSize","lift","layout","height","width","enableSashes","onDidResize","e","_resize","dimension","done","onDidWillResize","isResizing","getDomNode","getPosition","_a","Position","_availableVerticalSpaceAbove","editorDomNode","mouseBox","getScrolledVisiblePosition","top","_availableVerticalSpaceBelow","editorBox","bodyBox","ownerDocument","body","mouseBottom","_findPositionPreference","widgetHeight","showAtPosition","_b","maxHeightBelow","Math","min","Infinity","maxHeightAbove","maxHeight","max","renderingAbove","getOption","above","ContentHoverController_1","ContentHoverWidget_1","__decorate","decorators","target","key","desc","d","c","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","$","ContentHoverController","_instantiationService","_keybindingService","_currentResult","_widget","createInstance","ContentHoverWidget","_participants","participant","HoverParticipantRegistry","getAll","push","sort","p1","p2","hoverOrdinal","_computer","ContentHoverComputer","_hoverOperation","HoverOperation","onResult","result","anchor","messages","hasLoadingMessage","_addLoadingMessage","value","_withResult","HoverResult","isComplete","equals","hide","TokenizationRegistry","onDidChange","_setCurrentResult","widget","maybeShowAt","mouseEvent","anchorCandidates","suggestHoverAnchor","type","HoverRangeAnchor","range","event","posx","posy","epsilon","typicalHalfwidthCharacterWidth","detail","isAfterLines","horizontalDistanceToText","_startShowingOrUpdateHover","a","b","priority","startShowingAtRange","mode","source","focus","_startHoverOperationIfNecessary","sticky","isMouseGettingCloser","canAdoptVisibleHover","filter","insistOnKeepingHoverVisible","cancel","shouldFocus","start","hoverResult","_renderMessages","isColorPickerVisible","isVisibleFromKeyboard","isVisible","isFocused","containsNode","node","contains","createLoadingMessage","loadingMessage","slice","concat","showAtSecondaryPosition","highlightRange","computeHoverRanges","disposables","DisposableStore","statusBar","add","EditorHoverStatusBar","fragment","document","createDocumentFragment","colorPicker","context","setColorPicker","onContentsChanged","setMinimumDimensions","dimensions","hoverParts","msg","owner","renderHoverParts","isBeforeContent","some","m","hasContent","appendChild","hoverElement","hasChildNodes","highlightDecoration","createDecorationsCollection","set","options","_DECORATION_OPTIONS","toDisposable","clear","showAt","ContentHoverVisibleData","initialMousePosX","initialMousePosY","dispose","editor","anchorRange","startColumnBoundary","hasModel","viewModel","_getViewModel","coordinatesConverter","anchorViewRange","convertModelRangeToViewRange","anchorViewRangeStart","startLineNumber","getLineMinColumn","convertViewPositionToModelPosition","column","anchorLineNumber","renderStartColumn","startColumn","forceShowAtRange","Range","plusRange","endLineNumber","getStartPosition","scrollUp","scrollDown","scrollLeft","scrollRight","pageUp","pageDown","goToTop","goToBottom","ModelDecorationOptions","register","description","className","IInstantiationService","IKeybindingService","filteredMessages","isValidForHoverAnchor","FilteredHoverResult","original","preferAbove","stoleFocus","closestMouseDistance","Boolean","_visibleData","_hoverVisibleKey","get","_hoverFocusedKey","contextKeyService","_configurationService","_accessibilityService","minimumHeight","_hover","HoverWidget","_minimumSize","EditorContextKeys","hoverVisible","bindTo","hoverFocused","containerDomNode","zIndex","onDidLayoutChange","_layout","onDidChangeConfiguration","hasChanged","_updateFont","focusTracker","onDidFocus","onDidBlur","_setHoverData","addContentWidget","removeContentWidget","getId","ID","_applyDimensions","container","transformedWidth","transformedHeight","_setContentsDomNodeDimensions","contentsDomNode","_setContainerDomNodeDimensions","_setHoverWidgetDimensions","_layoutContentWidget","_applyMaxDimensions","maxWidth","_setHoverWidgetMaxDimensions","setProperty","_hasHorizontalScrollbar","scrollDimensions","scrollbar","getScrollDimensions","scrollWidth","_adjustContentsBottomPadding","extraBottomPadding","horizontalScrollbarSize","paddingBottom","_setAdjustedHoverWidgetDimensions","size","_updateResizableNodeMaxDimensions","maxRenderingWidth","_findMaximumRenderingWidth","maxRenderingHeight","_findMaximumRenderingHeight","maxSize","_lastDimensions","scanDomNode","layoutContentWidget","_findAvailableSpaceVertically","_positionPreference","availableSpace","maximumHeight","Array","from","children","forEach","hoverPart","clientHeight","_isHoverTextOverflowing","overflowing","clientWidth","removeProperty","initialWidth","_contentWidth","widgetRect","computeDistanceFromPointToRectangle","left","distance","hoverData","classList","toggle","fontSize","lineHeight","_updateMaxDimensions","prototype","call","getElementsByClassName","applyFontInfo","_updateContent","textContent","getLayoutInfo","_render","render","secondaryPosition","positionAffinity","preference","_c","_d","widgetPosition","accessibleViewHint","getHoverAccessibleViewHint","getValue","isScreenReaderOptimized","lookupKeybinding","getAriaLabel","ariaLabel","clearSashHoverState","_removeConstraintsRenderNormally","layoutInfo","_adjustHoverHeightForScrollbar","_updateMinimumWidth","scrollTop","getScrollPosition","fontInfo","setScrollPosition","scrollHeight","IContextKeyService","IConfigurationService","IAccessibilityService","_hasContent","actionsElement","addAction","actionOptions","keybinding","commandId","keybindingLabel","getLabel","HoverAction","append","element","_anchor","_shouldFocus","_source","_insistOnKeepingHoverVisible","_getLineDecorations","supportsMarkerHover","model","getModel","lineNumber","getLineCount","maxColumn","getLineMaxColumn","getLineDecorations","isWholeLine","endColumn","showIfCollapsed","computeAsync","token","AsyncIterableObject","EMPTY","lineDecorations","merge","map","computeSync","coalesce","pointX","pointY","x","y","dx","abs","dy","sqrt","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","then","apply","HoverProviderResult","provider","hover","ordinal","getHover","registry","promises","ordered","index","provideHover","hasRange","hasHtmlContent","contents","isValid","err","onUnexpectedExternalError","executeProvider","fromPromises","registerModelAndPositionCommand","accessor","item","toPromise","getHoverPromise","ILanguageFeaturesService","hoverProvider","CancellationToken","None","MarginHoverWidget","languageService","openerService","_renderDisposeables","_isVisible","_messages","_markdownRenderer","MarkdownRenderer","MarginHoverComputer","onDidChangeModelDecorations","_onModelDecorationsChanged","addOverlayWidget","removeOverlayWidget","startShowingAt","markdownHoverElement","hoverContentsElement","renderedContents","_updateContents","_showAt","editorLayout","topForLineNumber","getTopForLineNumber","editorScrollTop","getScrollTop","glyphMarginLeft","glyphMarginWidth","round","_lineNumber","toHoverMessage","glyphMarginClassName","hoverMessage","glyphMarginHoverMessage","isEmptyMarkdownString","asArray","MarkerHover","marker","markerCodeActionTrigger","include","CodeActionKind","QuickFix","triggerAction","CodeActionTriggerSource","QuickFixHover","MarkerHoverParticipant","_markerDecorationsService","_openerService","_languageFeaturesService","recentMarkerCodeActionsInfo","getMarker","uri","renderMarkerHover","markerHoverForStatusbar","MarkerSeverity","compare","severity","renderMarkerStatusbar","markerHover","markerElement","message","code","relatedInformation","messageElement","whiteSpace","innerText","sourceAndCodeElement","codeLink","setAttribute","toString","open","allowCommands","preventDefault","stopPropagation","detailsElement","opacity","paddingLeft","isNonEmptyArray","resource","relatedInfoContainer","marginTop","basename","cursor","fromUserGesture","editorOptions","selection","catch","onUnexpectedError","Error","Warning","Info","label","nls","NextMarkerAction","run","MarkerController","showAtMarker","quickfixPlaceholderElement","IMarkerData","makeKey","hasCodeActions","updatePlaceholderDisposable","disposableTimeout","String","fromCharCode","codeActionsPromise","getCodeActions","actions","validActions","display","showing","quickFixCommandId","controller","CodeActionController","elementPosition","showCodeActions","createCancelablePromise","cancellationToken","codeActionProvider","Progress","IMarkerDecorationsService","IOpenerService","ModesHoverController_1","_sticky","ModesHoverController","getContribution","_languageService","_toUnhook","_hoverActivatedByColorDecoratorClick","_isMouseDown","_hoverClicked","_contentWidget","_glyphWidget","_reactToEditorMouseMoveRunner","RunOnceScheduler","_reactToEditorMouseMove","_mouseMoveEvent","_hookEvents","_unhookEvents","onMouseLeave","hoverOpts","_isHoverEnabled","enabled","_isHoverSticky","_hidingDelay","hidingDelay","onMouseDown","_onEditorMouseDown","onMouseUp","_onEditorMouseUp","onMouseMove","_onEditorMouseMove","onKeyDown","_onKeyDown","_onEditorMouseLeave","onDidChangeModel","hideWidgetsEventHandler","_hideWidgets","onDidScrollChange","_onEditorScrollChanged","scrollTopChanged","scrollLeftChanged","targetEm","browserEvent","relatedTarget","_isMouseOverWidget","_e","view","activeElement","getSelection","isCollapsed","isScheduled","schedule","mouseOnDecorator","decoratorActivatedOn","_getOrCreateContentWidget","resolvedKeyboardEvent","softDispatch","mightTriggerFocus","kind","keyCode","InlineSuggestionHintsContentWidget","dropDownVisible","showContentHover","activatedByColorDecoratorClick","isHoverVisible","ILanguageService","ShowOrFocusHoverAction","EditorAction","id","comment","args","name","schema","properties","default","alias","precondition","kbOpts","kbExpr","editorTextFocus","primary","KeyChord","weight","ShowDefinitionPreviewHoverAction","goto","GotoDefinitionAtPositionEditorContribution","startFindDefinitionFromCursor","ScrollUpHoverAction","ScrollDownHoverAction","ScrollLeftHoverAction","ScrollRightHoverAction","PageUpHoverAction","secondary","PageDownHoverAction","GoToTopHoverAction","GoToBottomHoverAction","registerEditorContribution","registerEditorAction","MarkdownHoverParticipant","registerThemingParticipant","theme","collector","hoverBorder","getColor","editorHoverBorder","addRule","transparent","__asyncValues","o","Symbol","asyncIterator","TypeError","__values","iterator","verb","n","v","settle","_onResult","Emitter","_firstWaitScheduler","_triggerAsyncComputation","_secondWaitScheduler","_triggerSyncComputation","_loadingMessageScheduler","_triggerLoadingMessage","_state","_asyncIterable","_asyncIterableDone","_result","_hoverTime","delay","_firstWaitTime","_secondWaitTime","_loadingMessageTime","_setState","state","fireResult","_fireResult","createCancelableAsyncIterable","e_1","_f","e_1_1","error","return","fire","other","equalsRange","lastAnchor","HoverForeignElementAnchor","ctor","MarkdownHover","MarkdownString","appendText","lineLength","getLineLength","languageId","getLanguageIdAtPosition","stopRenderingLineAfter","maxTokenizationLineLength","overrideIdentifier","stopRenderingMessage","beforeContentClassName","has","rng","renderMarkdownHovers","renderer","onDidRenderAsync","InPlaceReplaceCommand","editRange","originalSelection","text","_editRange","_originalSelection","_text","getEditOperations","builder","addTrackedEditOperation","computeCursorState","helper","srcRange","getInverseEditOperations","isEmpty","Selection","positionColumn","InPlaceReplaceController_1","InPlaceReplaceController","editorWorkerService","decorations","up","currentRequest","editorSelection","EditorState","modelURI","canNavigateValueSet","navigateValueSet","validate","diff","command","pushUndoStop","executeCommand","DECORATION","decorationRemover","timeout","IEditorWorkerService","InPlaceReplaceUp","writable","InPlaceReplaceDown","getSpaceCnt","str","tabSize","spacesCnt","charAt","generateIndent","insertSpaces","tabsCnt","floor","getReindentEditOperations","languageConfigurationService","inheritedIndent","indentationRules","getLanguageConfiguration","getLanguageId","unIndentedLinePattern","getLineContent","test","indentSize","getOptions","shiftIndent","indentation","count","ShiftCommand","unshiftIndent","indentEdits","globalIndent","currentLineText","adjustedLineContent","oldIndentation","strings","substring","decreaseIndentPattern","EditOperation","replaceMove","normalizeIndentation","idealIndentForNextLine","increaseIndentPattern","indentNextLinePattern","IndentationToSpacesAction","modelOpts","IndentationToSpacesCommand","executeCommands","updateOptions","IndentationToTabsAction","IndentationToTabsCommand","ChangeIndentationSizeAction","displaySizeOnly","opts","quickInputService","IQuickInputService","modelService","IModelService","creationOpts","getCreationOptions","isForSimpleWidget","picks","autoFocusIndex","setTimeout","pick","placeHolder","activeItem","isDisposed","pickedVal","parseInt","IndentUsingTabs","IndentUsingSpaces","ChangeTabDisplaySize","DetectIndentation","detectIndentation","ReindentLinesAction","ILanguageConfigurationService","edits","executeEdits","ReindentSelectedLinesAction","selections","getSelections","editOperations","AutoIndentOnPasteCommand","initialSelection","_initialSelection","_edits","_selectionId","edit","addEditOperation","selectionIsSet","isArray","trackSelection","getTrackedSelection","AutoIndentOnPaste","_languageConfigurationService","callOnDispose","callOnModel","update","onDidChangeModelLanguage","onDidPaste","_ref","trigger","tokenization","isCheapToTokenize","autoIndent","textEdits","indentConverter","shouldIgnoreLine","firstLineText","indentOfFirstLine","getGoodIndentForLine","newSpaceCnt","indentUtils","newIndent","substr","indentMetadata","getIndentMetadata","firstLineNumber","virtualModel","getLineTokens","indentOfSecondLine","newSpaceCntOfSecondLine","oldSpaceCntOfSecondLine","spaceCntOffset","lineContent","originalIndent","newSpacesCnt","cmd","forceTokenization","nonWhitespaceColumn","getLineFirstNonWhitespaceColumn","tokens","getCount","firstNonWhitespaceTokenIndex","findTokenIndexAtOffset","getStandardTokenType","getIndentationEditOperations","tabsToSpaces","spaces","spacesRegExp","RegExp","lineCount","lastIndentationColumn","originalIndentationRange","originalIndentation","getValueInRange","newIndentation","replace","selectionId","InlayHintAnchor","direction","InlayHintItem","hint","_isResolved","with","delta","_currentResolve","resolveInlayHint","isCancellationRequested","_doResolve","finally","newHint","tooltip","InlayHintsFragments","create","ranges","data","reverse","provideInlayHints","hints","all","flat","CancellationError","_disposables","Set","items","list","validatePosition","wordRange","_getRangeAtPosition","isBefore","fromPositions","getEndPosition","line","word","getWordAtPosition","tokenizeIfCheap","offset","idx","getStartOffset","end","getEndOffset","InlayHintsController_1","InlayHintsCache","_entries","LRUCache","_key","getVersionId","IInlayHintsCache","createDecorator","registerSingleton","RenderedInlayHintLabelPart","part","ActiveInlayHintInfo","hasTriggerModifier","InlayHintsController","_featureDebounce","_inlayHintsCache","_commandService","_notificationService","_instaService","_sessionDisposables","_decorationsMetadata","Map","_ruleFactory","DynamicCssRules","_activeRenderMode","_debounceInfo","for","inlayHintsProvider","_update","_removeAllDecorations","cached","cts","_updateHintsDecorators","getFullModelRange","_cacheHintsForFastRestore","watchedProviders","scheduler","t1","Date","now","CancellationTokenSource","listener","onWillDispose","myToken","inlayHints","_getHintsRanges","onDidChangeInlayHints","onDidChangeModelContent","defaultMode","altMode","ModifierKeyEmitter","getInstance","newRenderMode","altKey","ctrlKey","shiftKey","metaKey","copies","_copyInlayHintsWithCurrentAnchor","_installDblClickGesture","_installLinkGesture","_installContextMenu","store","gesture","ClickLinkGesture","sessionStore","onMouseMoveOrRelevantKeyDown","labelPart","_getInlayHintLabelPart","_activeInlayHintPart","location","lineHints","_getInlineHintsForRange","onCancel","onExecute","invokeFunction","goToDefinitionWithLocation","languages","is","_invokeCommand","values","containsRange","updateInlayHints","onContextMenu","HTMLElement","showGoToContextMenu","injectedText","ModelDecorationInjectedTextOptions","attachedData","notify","Severity","displayName","obj","getDecorationRange","copy","visibleRanges","getVisibleRangesPlusViewportAboveBelow","compareRangesUsingStarts","extendedRange","validateRange","areIntersectingOrTouching","newDecorationsData","addInjectedText","ref","content","cursorStops","inlineClassNameAffectsLetterSpacing","inlineClassName","classNameRef","decoration","collapseOnReplaceEdit","stickiness","addInjectedWhitespace","isLast","marginRule","createClassNameRef","InjectedTextCursorStops","Right","fontFamily","padding","isUniform","_getLayoutInfo","fontFamilyVar","getContainerDomNode","parts","isFirst","cssProperties","EDITOR_FONT_DEFAULTS","verticalAlign","unicodeBidi","_fillInColors","textDecoration","color","themeColorFromId","colors","borderRadius","fixSpace","paddingRight","_MAX_DECORATORS","decorationIdsToReplace","getDecorationsInRange","metadata","delete","scrollState","StableEditorScrollState","capture","changeDecorations","newDecorationIds","deltaDecorations","restore","props","Parameter","backgroundColor","Type","editorFontSize","editorFontFamily","removeDecorations","keys","ILanguageFeatureDebounceService","ICommandService","INotificationService","CommandsRegistry","registerCommand","_len","assertType","URI","isUri","isIRange","ITextModelService","createModelReference","object","textEditorModel","InlayHintsHoverAnchor","InlayHintsHover","configurationService","_resolverService","languageFeaturesService","_lineDecorations","executor","itemTooltip","partTooltip","emitOne","localize","linkHint","kb","platform","scheme","Schemas","path","query","encodeURIComponent","JSON","stringify","title","isTrusted","iterable","_resolveInlayHintLabelPartHover","iterable_1_1","iterable_1","resolverService","contextMenuService","IContextMenuService","commandService","instaService","notificationService","menuActions","MenuRegistry","getMenuItems","MenuId","EditorContext","isIMenuItem","generateUuid","delegate","SymbolNavigationAction","Action","MenuItemAction","renderShortTitle","symbolAnchor","SymbolNavigationAnchor","runEditorCommand","bind","Separator","useShadowDOM","showContextMenu","domForShadowRoot","getAnchor","box","getActions","onHide","autoSelectFirstItem","invokeWithinContext","openToSide","hasSideBySideModifier","isInPeek","PeekContext","inPeekEditor","canPeek","DefinitionAction","openInPeek","muteMessage","inlineSuggestCommitId","showPreviousInlineSuggestionActionId","showNextInlineSuggestionActionId","InlineCompletionContextKeys","inlineCompletionVisible","inlineSuggestionVisible","inlineCompletionSuggestsIndentation","inlineSuggestionHasIndentation","inlineCompletionSuggestsIndentationLessThanTabSize","inlineSuggestionHasIndentationLessThanTabSize","suppressSuggestions","autorun","reader","read","isInlineCompletionVisible","inlineCompletion","ghostText","inlineCompletions","startsWithIndentation","startsWithIndentationLessThanTabSize","selectedSuggestItem","lines","firstLine","textModel","getLineIndentColumn","firstNonWsIdx","firstNonWhitespaceIndex","CursorColumns","visibleColumnFromColumn","RawContextKey","PositionOffsetTransformer","lineStartOffsetByLineIdx","getOffset","array","ColumnRange","endColumnExclusive","BugIndicatingError","toRange","addPositions","pos1","pos2","lengthOfText","GhostText","every","renderForScreenReader","lineText","lastPart","transformer","offsetEdits","startOffset","endOffset","applyEdits","p","join","reduce","GhostTextPart","preview","GhostTextReplacement","columnRange","newLines","additionalReservedLineCount","_lineText","ghostTextOrReplacementEquals","GHOST_TEXT_DESCRIPTION","GhostTextWidget","observableValue","currentTextModel","observableFromEvent","uiState","derived","targetTextModel","replacedRange","inlineTexts","additionalLines","addToAdditionalLines","lastLine","LineDecoration","textBufferLine","hiddenTextStartColumn","lastIdx","hiddenRange","minReservedLineCount","after","Left","additionalLinesWidget","AdditionalLinesWidget","languageIdCodec","decorationsCollection","autorunOpts","debugName","applyObservableDecorations","ownsViewZone","viewZoneId","_viewZoneId","editorOptionsChanged","observableSignalFromEvent","Event","updateLines","changeViewZones","changeAccessor","removeZone","heightInLines","createElement","disableMonospaceOptimizations","renderWhitespace","renderControlCharacters","fontLigatures","sb","StringBuilder","appendString","len","lineData","isBasicASCII","containsRTL","lineTokens","LineTokens","createEmpty","renderViewLine","RenderLineInput","isMonospace","canUseHalfwidthRightwardsArrow","spaceWidth","middotWidth","wsmiddotWidth","EditorFontLigatures","OFF","html","build","trustedhtml","ttPolicy","createHTML","innerHTML","renderLines","addZone","afterLineNumber","afterColumnAffinity","createTrustedTypesPolicy","provideInlineCompletions","defaultReplaceRange","getDefaultRange","providers","multiMap","SetMap","groupId","getPreferredProviders","yieldsToGroupIds","states","seen","findPreferredProviderCircle","stack","preferred","processProvider","circle","s","deferredPromise","DeferredPromise","complete","providerResults","completions","itemsByHash","lists","InlineCompletionList","inlineCompletionItem","InlineCompletionItem","hash","InlineCompletionProviderResult","hashs","removeRef","refCount","addRef","freeInlineCompletions","insertText","snippetInfo","completeBracketPairs","closeBrackets","preBracketCompletionLength","snippet","SnippetParser","parse","Text","assertNever","additionalTextEdits","filterText","sourceInlineCompletion","withRange","updatedRange","newLine","newTokens","tokenizeLineWithEdit","slicedTokens","sliceAndInflate","fixBracketsInLine","SingleTextEdit","removeCommonPrefix","validModelRange","modelRange","intersectRanges","valueToReplace","commonPrefixLen","commonPrefixLength","augments","base","startsWith","extendingRange","rangeToExtend","isBeforeOrEqual","computeGhostText","cursorPosition","previewSuffixLength","sourceLine","sourceIndentationLength","getLeadingWhitespace","suggestionAddedIndentationLength","replacedIndentation","startPosition","endPosition","newStartPosition","rangeThatDoesNotReplaceIndentation","suggestionWithoutIndentationChange","valueToBeReplaced","changes","originalValue","newValue","lastRequest","smartDiff","deletedChars","deletedCharacters","newChanges","cachingDiff","filteredChanges","originalLength","originalStart","previewStartInCompletionText","insertColumn","modifiedLength","modifiedEnd","modifiedStart","nonPreviewTextEnd","nonPreviewText","italicText","splitLines","sum","smartBracketMatching","getMaxCharCode","val","maxCharCode","charCode","charCodeAt","getUniqueCharCode","getElements","level","group","characters","Int32Array","elements1","elements2","LcsDiff","ComputeDiff","InlineCompletionsSource","versionId","_debounceValue","_updateOperation","MutableDisposable","disposableObservableValue","suggestWidgetInlineCompletions","onDidChangeContent","fetch","activeInlineCompletion","request","UpdateRequest","selectedSuggestionInfo","satisfies","promise","updateOngoing","ms","triggerKind","InlineCompletionTriggerKind","Automatic","handle","onCancellationRequested","clearTimeout","startTime","updatedCompletions","inlineCompletionsProvider","endTime","getTime","UpToDateInlineCompletions","asInlineCompletion","toInlineCompletion","canBeReused","prepend","transaction","tx","updateOperation","UpdateOperation","clearSuggestWidgetInlineCompletions","cancelUpdate","v1","v2","Explicit","cancellationTokenSource","_inlineCompletions","inlineCompletionProviderResult","_refCount","_prependedInlineCompletionItems","_rangeVersionIdValue","_rangeVersionId","changed","_updateRange","ids","InlineCompletionWithUpdatedRange","clone","decorationId","addRefToSource","unshift","forwardStable","enableForwardStability","rangeVersion","initialRange","semanticId","_isValid","_updatedRange","_getUpdatedRange","toSingleTextEdit","minimizedReplacement","_toFilterTextReplacement","toLowerCase","cursorPosIndex","filterTextBefore","filterTextAfter","originalValueBefore","originalValueAfter","originalValueIndent","trimStart","matchesSubString","containsPosition","_isSmallerThanOriginal","VersionIdChangeReason","InlineCompletionsModel","isAcceptingPartially","_isAcceptingPartially","textModelVersionId","_suggestPreviewEnabled","_suggestPreviewMode","_inlineSuggestMode","_enabled","lastItem","_isActive","_forceUpdate","observableSignal","_selectedInlineCompletionId","_preserveCurrentCompletionReasons","Redo","Undo","AcceptWord","_fetchInlineCompletions","derivedHandleChanges","createEmptyChangeSummary","preserveCurrentCompletion","inlineCompletionTriggerKind","handleChange","ctx","changeSummary","didChange","change","itemToPreserveCandidate","selectedInlineCompletion","itemToPreserve","suggestItem","toSelectedSuggestionInfo","_filteredInlineCompletionItems","filteredCompletions","selectedInlineCompletionIndex","selectedInlineCompletionId","findIndex","lastTriggerKind","inlineCompletionsCount","derivedOpts","equalityComparer","suggestCompletion","augmentedCompletion","_computeAugmentedCompletion","editPreviewLength","newGhostText","completion","replacement","recomputeInitiallyAndOnChange","src","handleItemDidShow","triggerExplicitly","subtransaction","stop","candidateInlineCompletions","isDefined","mapFindFirst","_deltaSelectedInlineCompletionIndex","newIdx","previous","accept","setPosition","SnippetController2","insert","undoStopBefore","acceptNextWord","_acceptNext","pos","langId","config","wordRegExp","wordDefinition","flags","m1","match","acceptUntilIndexExclusive","m2","exec","acceptNextLine","getAcceptUntilIndex","firstPart","partialText","handlePartialAccept","acceptedRange","handleSuggestAccepted","itemEdit","SuggestWidgetAdaptor","selectedItem","_selectedItem","suggestControllerPreselector","checkModelVersion","onWillAccept","isSuggestWidgetVisible","isShiftKeyPressed","_currentSuggestItemInfo","onKeyUp","suggestController","SuggestController","registerSelector","select","suggestItems","itemToPreselect","candidates","suggestItemTextEdit","SuggestItemInfo","fromSuggestion","valid","prefixLength","findFirstMaxBy","compareBy","numberComparator","isBoundToSuggestWidget","bindToSuggestWidget","onDidShow","onDidHide","once","onDidTrigger","onWillInsertSuggestItem","suggestItemInfo","newActive","newInlineCompletion","getSuggestItemInfo","suggestItemInfoEquals","focusedItem","getFocusedItem","stopForceRenderingAbove","forceRenderingAbove","toggleMode","isSnippetText","insertTextRules","SnippetSession","adjustWhitespace","info","getOverwriteInfo","overwriteBefore","overwriteAfter","completionItemKind","SelectedSuggestionInfo","InlineCompletionsController_1","InlineCompletionsController","instantiationService","debounceService","audioCueService","suggestWidgetAdaptor","updateObservables","Other","ghostTextWidget","constObservable","runAndSubscribe","previewMode","getReason","isUndoing","isRedoing","lastInlineCompletionId","onDidChangeCursorPosition","reason","onDidType","onDidExecuteCommand","CoreEditingCommands","Tab","DeleteLeft","DeleteRight","hasTextFocus","onDidBlurEditorWidget","getContextKeyValue","keepOnBlur","playAudioCue","AudioCue","inlineSuggestion","provideScreenReaderUpdate","InlineCompletionsHintsWidget","affectsConfiguration","inlineCompletionsAccessibilityVerbose","accessibleViewShowing","accessibleViewKeybinding","alert","changeReason","newModel","shouldShowHoverAt","shouldShowHoverAtViewZone","IAudioCueService","ShowNextInlineSuggestionAction","ContextKeyExpr","and","ShowPreviousInlineSuggestionAction","TriggerInlineSuggestionAction","AcceptNextWordOfInlineCompletion","menuOpts","menuId","InlineSuggestionToolbar","order","AcceptNextLineOfInlineCompletion","AcceptInlineCompletion","tabMovesFocus","toNegated","SuggestContext","Visible","HideInlineCompletion","ToggleAlwaysShowInlineSuggestionToolbar","Action2","f1","menu","toggled","configService","updateValue","InlineCompletionsHover","InlineCompletionsHoverParticipant","accessibilityService","_telemetryService","viewZoneData","positionBefore","mightBeForeignElement","showToolbar","disposableStore","publicLog2","renderScreenReaderText","w","commands","inlineSuggestionAvailable","appendCodeblock","replaceChildren","ITelemetryService","registerAction2","InlineSuggestionHintsContentWidget_1","alwaysShowToolbar","sessionPosition","firstColumn","Number","MAX_SAFE_INTEGER","autorunWithStore","contentWidget","inlineSuggestionHintsNextIcon","registerIcon","Codicon","chevronRight","inlineSuggestionHintsPreviousIcon","chevronLeft","_dropDownVisible","createCommandAction","iconClassName","action","keybindingService","_contextKeyService","withBorder","_position","_currentSuggestionIdx","_suggestionCount","_extraCommands","_menuService","nodes","h","previousAction","ThemeIcon","asClassName","availableSuggestionCountAction","nextAction","inlineCompletionsActionsMenus","createMenu","InlineCompletionsActions","clearAvailableSuggestionCountLabelDebounced","disableButtonsDebounced","lastCommands","toolBar","CustomizedMenuWorkbenchToolBar","menuOptions","toolbarOptions","primaryGroup","g","actionViewItemProvider","StatusBarViewItem","ActionViewItemWithClassName","icon","setClass","telemetrySource","setPrependedPrimaryActions","onDidChangeDropdownVisibility","suggestionCount","currentSuggestionIdx","extraCommands","extraActions","class","_","setAdditionalSecondaryActions","root","IMenuService","ActionViewItem","_className","MenuEntryActionViewItem","updateLabel","_action","div","KeybindingLabel","OS","assign","disableTitle","unthemedKeybindingLabelOptions","WorkbenchToolBar","options2","menuService","telemetryService","resetMenu","_store","emitEventsForSubmenuChanges","additionalActions","prependedPrimaryActions","updateToolbar","_g","createAndFillInActionBarActions","shouldInlineSubmenu","useSeparatorsInPrimaryActions","setActions","inlineProgressDecoration","noBreakWhitespace","InlineProgressWidget","typeId","role","iconElement","asClassNameArray","loading","updateSize","ceil","CLICK","baseId","InlineProgressManager","_showDelay","_showPromise","_currentWidget","_operationIdPool","_currentDecorations","showWhile","operationId","_currentOperation","ExpandLineSelectionAction","textInputFocus","_accessor","pushStackElement","setCursorStates","CursorMoveCommands","expandLineSelection","getCursorStates","revealPrimaryCursor","CopyLinesCommand","isCopyingDown","noop","_selection","_isCopyingDown","_noop","_selectionDirection","_startLineNumberDelta","_endLineNumberDelta","setEndPosition","sourceLines","sourceText","getDirection","createWithDirection","MoveLinesCommand","isMovingDown","_isMovingDown","_autoIndent","_moveEndLineSelectionShrink","modelLineCount","_moveEndPositionDown","buildIndentConverter","otherLineNumber","movingLineNumber","movingLineText","insertingText","shouldAutoIndent","movingLineMatchResult","matchEnterRule","indentOfMovingLine","ret","matchEnterRuleMovingDown","getIndentEditsOfMovingBlock","newIndentatOfMovingBlock","oldSpaceCnt","oldIndent","parseEnterResult","enter","enterPrefix","indentAction","IndentAction","Indent","IndentOutdent","Outdent","indexOf","indentMetadataOfMovelingLine","futureAboveLineNumber","futureAboveLineText","getEnterAction","validPrecedingLine","oneLineAbove","previousLineText","languageAtSelectionStart","indentRulesSupport","SortLinesCommand","getCollator","_COLLATOR","Intl","Collator","descending","op","getSortData","sortLines","canRun","before","linesToSort","sorted","AbstractCopyLinesAction","down","ignore","prev","curr","DuplicateSelectionAction","MenubarSelectionMenu","insertSelection","ReplaceCommandThatSelectsText","AbstractMoveLinesAction","AbstractSortLinesAction","SortLinesAscendingAction","SortLinesDescendingAction","DeleteDuplicateLinesAction","endCursorState","linesDeleted","uniqueLines","selectionToReplace","adjustedSelectionStart","finalSelection","TrimTrailingWhitespaceAction","cursors","positionLineNumber","TrimTrailingWhitespaceCommand","DeleteLinesAction","ops","_getLinesToRemove","cursorState","operations","selectionStartColumn","mergedOperations","previousOperation","IndentLinesAction","TypeOperations","indent","cursorConfig","OutdentLinesAction","InsertLineBeforeAction","lineInsertBefore","InsertLineAfterAction","lineInsertAfter","AbstractDeleteAllToBoundaryAction","primaryCursor","rangesToDelete","_getRangesToDelete","effectiveRanges","nextRange","_getEndCursorState","DeleteAllLeftAction","mac","endPrimaryCursor","deletedLines","endCursor","newStartLine","deleteFromLine","deleteFromColumn","DeleteAllRightAction","sel","JoinLinesAction","reducedSelections","lastSelection","previousValue","currentValue","equalsSelection","lineOffset","columnDeltaOffset","selectionEndPositionOffset","trimmedLinesContent","firstNonWhitespaceIdx","insertSpace","lineTextWithoutIndent","deleteSelection","resultSelection","TransposeAction","chars","split","ReplaceCommand","ReplaceCommandThatPreservesSelection","AbstractCaseAction","wordSeparators","getConfiguredWordAtPosition","_modifyText","UpperCaseAction","toLocaleUpperCase","LowerCaseAction","toLocaleLowerCase","BackwardsCompatibleRegExp","_pattern","_flags","_actual","_evaluated","isSupported","TitleCaseAction","titleBoundary","SnakeCaseAction","caseBoundary","singleLetters","CamelCaseAction","wordBoundary","words","shift","KebabCaseAction","underscoreBoundary","regexp","linux","LinkedEditingContribution_1","CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE","LinkedEditingContribution","languageFeatureDebounceService","_syncRangesToken","_localToDispose","_providers","linkedEditingRangeProvider","_visibleContextKey","_debounceInformation","_languageWordPattern","_currentWordPattern","_ignoreChangeEvent","_rangeUpdateTriggerPromise","_rangeSyncTriggerPromise","_currentRequest","_currentRequestPosition","_currentRequestModelVersion","reinitialize","forceRefresh","isEnabled","clearRanges","onDidChangeLanguageConfiguration","getWordDefinition","rangeUpdateScheduler","Delayer","triggerRangeUpdate","updateRanges","_debounceDuration","rangeSyncScheduler","triggerRangeSync","_syncRanges","referenceRange","getRange","referenceValue","mirrorRange","oldValue","rangeStartColumn","rangeEndColumn","commonSuffixLength","popUndoStop","prevEditOperationType","getPrevEditOperationType","setPrevEditOperationType","force","modelVersionId","sw","StopWatch","response","getLinkedEditingRanges","elapsed","wordPattern","foundReferenceRange","splice","isCancellationError","LinkedEditingAction","hasRenameProvider","runCommand","editorService","ICodeEditorService","isIPosition","openCodeEditor","getActiveCodeEditor","reportTelemetry","LinkedEditingCommand","EditorCommand","bindToContribution","orderedByScore","first","provideLinkedEditingRanges","arrays","registerEditorCommand","handler","editorLinkedEditingBackground","registerColor","dark","Color","fromHex","light","hcDark","hcLight","white","Link","link","_link","_provider","toJSON","url","resolveLink","LinksList","tuples","links","newLinks","_union","isDisposable","oldLinks","oldIndex","oldLen","newIndex","newLen","oldLink","newLink","getLinks","provideLinks","resolveCount","linkProvider","LinkDetector_1","LinkDetector","debounceInformation","computeLinks","computeLinksNow","computePromise","activeLinksList","currentOccurrences","activeLinkDecorationId","clickLinkGesture","keyboardEvent","onEditorMouseUp","cleanUpActiveLinkDecoration","updateDecorations","isTooLargeForSyncing","useMetaKey","oldDecorations","occurence","newDecorations","LinkOccurrence","withKey","occurrence","getLinkOccurrence","activate","deactivate","openLinkOccurrence","modelUri","file","parsedUri","fsPath","resources","relativePath","allowContributedOpeners","fromWorkspace","messageOrError","warn","currentOccurrence","keyCodeIsTriggerKey","general","active","_getOptions","isActive","executeCmd","nativeLabel","appendLink","appendMarkdown","getHoverMessage","changeDecorationOptions","OpenLinkAction","linkDetector"],"sourceRoot":""}