{"version":3,"file":"static/js/monaco-editor-vendor.11aab2e7.e1e02614.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/editor/browser/config/domFontInfo.js","../node_modules/monaco-editor/esm/vs/editor/browser/config/migrateOptions.js","../node_modules/monaco-editor/esm/vs/editor/browser/config/editorConfiguration.js","../node_modules/monaco-editor/esm/vs/editor/browser/config/elementSizeObserver.js","../node_modules/monaco-editor/esm/vs/editor/browser/config/charWidthReader.js","../node_modules/monaco-editor/esm/vs/editor/browser/config/fontMeasurements.js","../node_modules/monaco-editor/esm/vs/editor/browser/config/tabFocus.js","../node_modules/monaco-editor/esm/vs/editor/browser/controller/mouseTarget.js","../node_modules/monaco-editor/esm/vs/editor/browser/controller/mouseHandler.js","../node_modules/monaco-editor/esm/vs/editor/browser/controller/pointerHandler.js","../node_modules/monaco-editor/esm/vs/editor/browser/controller/textAreaHandler.js","../node_modules/monaco-editor/esm/vs/editor/browser/controller/textAreaInput.js","../node_modules/monaco-editor/esm/vs/editor/browser/controller/textAreaState.js","../node_modules/monaco-editor/esm/vs/editor/browser/coreCommands.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { FastDomNode } from '../../../base/browser/fastDomNode.js';\nexport function applyFontInfo(domNode, fontInfo) {\n    if (domNode instanceof FastDomNode) {\n        domNode.setFontFamily(fontInfo.getMassagedFontFamily());\n        domNode.setFontWeight(fontInfo.fontWeight);\n        domNode.setFontSize(fontInfo.fontSize);\n        domNode.setFontFeatureSettings(fontInfo.fontFeatureSettings);\n        domNode.setFontVariationSettings(fontInfo.fontVariationSettings);\n        domNode.setLineHeight(fontInfo.lineHeight);\n        domNode.setLetterSpacing(fontInfo.letterSpacing);\n    }\n    else {\n        domNode.style.fontFamily = fontInfo.getMassagedFontFamily();\n        domNode.style.fontWeight = fontInfo.fontWeight;\n        domNode.style.fontSize = fontInfo.fontSize + 'px';\n        domNode.style.fontFeatureSettings = fontInfo.fontFeatureSettings;\n        domNode.style.fontVariationSettings = fontInfo.fontVariationSettings;\n        domNode.style.lineHeight = fontInfo.lineHeight + 'px';\n        domNode.style.letterSpacing = fontInfo.letterSpacing + 'px';\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class EditorSettingMigration {\n    constructor(key, migrate) {\n        this.key = key;\n        this.migrate = migrate;\n    }\n    apply(options) {\n        const value = EditorSettingMigration._read(options, this.key);\n        const read = (key) => EditorSettingMigration._read(options, key);\n        const write = (key, value) => EditorSettingMigration._write(options, key, value);\n        this.migrate(value, read, write);\n    }\n    static _read(source, key) {\n        if (typeof source === 'undefined') {\n            return undefined;\n        }\n        const firstDotIndex = key.indexOf('.');\n        if (firstDotIndex >= 0) {\n            const firstSegment = key.substring(0, firstDotIndex);\n            return this._read(source[firstSegment], key.substring(firstDotIndex + 1));\n        }\n        return source[key];\n    }\n    static _write(target, key, value) {\n        const firstDotIndex = key.indexOf('.');\n        if (firstDotIndex >= 0) {\n            const firstSegment = key.substring(0, firstDotIndex);\n            target[firstSegment] = target[firstSegment] || {};\n            this._write(target[firstSegment], key.substring(firstDotIndex + 1), value);\n            return;\n        }\n        target[key] = value;\n    }\n}\nEditorSettingMigration.items = [];\nfunction registerEditorSettingMigration(key, migrate) {\n    EditorSettingMigration.items.push(new EditorSettingMigration(key, migrate));\n}\nfunction registerSimpleEditorSettingMigration(key, values) {\n    registerEditorSettingMigration(key, (value, read, write) => {\n        if (typeof value !== 'undefined') {\n            for (const [oldValue, newValue] of values) {\n                if (value === oldValue) {\n                    write(key, newValue);\n                    return;\n                }\n            }\n        }\n    });\n}\n/**\n * Compatibility with old options\n */\nexport function migrateOptions(options) {\n    EditorSettingMigration.items.forEach(migration => migration.apply(options));\n}\nregisterSimpleEditorSettingMigration('wordWrap', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('lineNumbers', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('cursorBlinking', [['visible', 'solid']]);\nregisterSimpleEditorSettingMigration('renderWhitespace', [[true, 'boundary'], [false, 'none']]);\nregisterSimpleEditorSettingMigration('renderLineHighlight', [[true, 'line'], [false, 'none']]);\nregisterSimpleEditorSettingMigration('acceptSuggestionOnEnter', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('tabCompletion', [[false, 'off'], [true, 'onlySnippets']]);\nregisterSimpleEditorSettingMigration('hover', [[true, { enabled: true }], [false, { enabled: false }]]);\nregisterSimpleEditorSettingMigration('parameterHints', [[true, { enabled: true }], [false, { enabled: false }]]);\nregisterSimpleEditorSettingMigration('autoIndent', [[false, 'advanced'], [true, 'full']]);\nregisterSimpleEditorSettingMigration('matchBrackets', [[true, 'always'], [false, 'never']]);\nregisterSimpleEditorSettingMigration('renderFinalNewline', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('cursorSmoothCaretAnimation', [[true, 'on'], [false, 'off']]);\nregisterEditorSettingMigration('autoClosingBrackets', (value, read, write) => {\n    if (value === false) {\n        write('autoClosingBrackets', 'never');\n        if (typeof read('autoClosingQuotes') === 'undefined') {\n            write('autoClosingQuotes', 'never');\n        }\n        if (typeof read('autoSurround') === 'undefined') {\n            write('autoSurround', 'never');\n        }\n    }\n});\nregisterEditorSettingMigration('renderIndentGuides', (value, read, write) => {\n    if (typeof value !== 'undefined') {\n        write('renderIndentGuides', undefined);\n        if (typeof read('guides.indentation') === 'undefined') {\n            write('guides.indentation', !!value);\n        }\n    }\n});\nregisterEditorSettingMigration('highlightActiveIndentGuide', (value, read, write) => {\n    if (typeof value !== 'undefined') {\n        write('highlightActiveIndentGuide', undefined);\n        if (typeof read('guides.highlightActiveIndentation') === 'undefined') {\n            write('guides.highlightActiveIndentation', !!value);\n        }\n    }\n});\nconst suggestFilteredTypesMapping = {\n    method: 'showMethods',\n    function: 'showFunctions',\n    constructor: 'showConstructors',\n    deprecated: 'showDeprecated',\n    field: 'showFields',\n    variable: 'showVariables',\n    class: 'showClasses',\n    struct: 'showStructs',\n    interface: 'showInterfaces',\n    module: 'showModules',\n    property: 'showProperties',\n    event: 'showEvents',\n    operator: 'showOperators',\n    unit: 'showUnits',\n    value: 'showValues',\n    constant: 'showConstants',\n    enum: 'showEnums',\n    enumMember: 'showEnumMembers',\n    keyword: 'showKeywords',\n    text: 'showWords',\n    color: 'showColors',\n    file: 'showFiles',\n    reference: 'showReferences',\n    folder: 'showFolders',\n    typeParameter: 'showTypeParameters',\n    snippet: 'showSnippets',\n};\nregisterEditorSettingMigration('suggest.filteredTypes', (value, read, write) => {\n    if (value && typeof value === 'object') {\n        for (const entry of Object.entries(suggestFilteredTypesMapping)) {\n            const v = value[entry[0]];\n            if (v === false) {\n                if (typeof read(`suggest.${entry[1]}`) === 'undefined') {\n                    write(`suggest.${entry[1]}`, false);\n                }\n            }\n        }\n        write('suggest.filteredTypes', undefined);\n    }\n});\nregisterEditorSettingMigration('quickSuggestions', (input, read, write) => {\n    if (typeof input === 'boolean') {\n        const value = input ? 'on' : 'off';\n        const newValue = { comments: value, strings: value, other: value };\n        write('quickSuggestions', newValue);\n    }\n});\n// Sticky Scroll\nregisterEditorSettingMigration('experimental.stickyScroll.enabled', (value, read, write) => {\n    if (typeof value === 'boolean') {\n        write('experimental.stickyScroll.enabled', undefined);\n        if (typeof read('stickyScroll.enabled') === 'undefined') {\n            write('stickyScroll.enabled', value);\n        }\n    }\n});\nregisterEditorSettingMigration('experimental.stickyScroll.maxLineCount', (value, read, write) => {\n    if (typeof value === 'number') {\n        write('experimental.stickyScroll.maxLineCount', undefined);\n        if (typeof read('stickyScroll.maxLineCount') === 'undefined') {\n            write('stickyScroll.maxLineCount', value);\n        }\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as browser from '../../../base/browser/browser.js';\nimport * as arrays from '../../../base/common/arrays.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as objects from '../../../base/common/objects.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { ElementSizeObserver } from './elementSizeObserver.js';\nimport { FontMeasurements } from './fontMeasurements.js';\nimport { migrateOptions } from './migrateOptions.js';\nimport { TabFocus } from './tabFocus.js';\nimport { ComputeOptionsMemory, ConfigurationChangedEvent, editorOptionsRegistry } from '../../common/config/editorOptions.js';\nimport { EditorZoom } from '../../common/config/editorZoom.js';\nimport { BareFontInfo } from '../../common/config/fontInfo.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nlet EditorConfiguration = class EditorConfiguration extends Disposable {\n    constructor(isSimpleWidget, options, container, _accessibilityService) {\n        super();\n        this._accessibilityService = _accessibilityService;\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeFast = this._register(new Emitter());\n        this.onDidChangeFast = this._onDidChangeFast.event;\n        this._isDominatedByLongLines = false;\n        this._viewLineCount = 1;\n        this._lineNumbersDigitCount = 1;\n        this._reservedHeight = 0;\n        this._glyphMarginDecorationLaneCount = 1;\n        this._computeOptionsMemory = new ComputeOptionsMemory();\n        this.isSimpleWidget = isSimpleWidget;\n        this._containerObserver = this._register(new ElementSizeObserver(container, options.dimension));\n        this._rawOptions = deepCloneAndMigrateOptions(options);\n        this._validatedOptions = EditorOptionsUtil.validateOptions(this._rawOptions);\n        this.options = this._computeOptions();\n        if (this.options.get(12 /* EditorOption.automaticLayout */)) {\n            this._containerObserver.startObserving();\n        }\n        this._register(EditorZoom.onDidChangeZoomLevel(() => this._recomputeOptions()));\n        this._register(TabFocus.onDidChangeTabFocus(() => this._recomputeOptions()));\n        this._register(this._containerObserver.onDidChange(() => this._recomputeOptions()));\n        this._register(FontMeasurements.onDidChange(() => this._recomputeOptions()));\n        this._register(browser.PixelRatio.onDidChange(() => this._recomputeOptions()));\n        this._register(this._accessibilityService.onDidChangeScreenReaderOptimized(() => this._recomputeOptions()));\n    }\n    _recomputeOptions() {\n        const newOptions = this._computeOptions();\n        const changeEvent = EditorOptionsUtil.checkEquals(this.options, newOptions);\n        if (changeEvent === null) {\n            // nothing changed!\n            return;\n        }\n        this.options = newOptions;\n        this._onDidChangeFast.fire(changeEvent);\n        this._onDidChange.fire(changeEvent);\n    }\n    _computeOptions() {\n        const partialEnv = this._readEnvConfiguration();\n        const bareFontInfo = BareFontInfo.createFromValidatedSettings(this._validatedOptions, partialEnv.pixelRatio, this.isSimpleWidget);\n        const fontInfo = this._readFontInfo(bareFontInfo);\n        const env = {\n            memory: this._computeOptionsMemory,\n            outerWidth: partialEnv.outerWidth,\n            outerHeight: partialEnv.outerHeight - this._reservedHeight,\n            fontInfo: fontInfo,\n            extraEditorClassName: partialEnv.extraEditorClassName,\n            isDominatedByLongLines: this._isDominatedByLongLines,\n            viewLineCount: this._viewLineCount,\n            lineNumbersDigitCount: this._lineNumbersDigitCount,\n            emptySelectionClipboard: partialEnv.emptySelectionClipboard,\n            pixelRatio: partialEnv.pixelRatio,\n            tabFocusMode: TabFocus.getTabFocusMode(\"editorFocus\" /* TabFocusContext.Editor */),\n            accessibilitySupport: partialEnv.accessibilitySupport,\n            glyphMarginDecorationLaneCount: this._glyphMarginDecorationLaneCount\n        };\n        return EditorOptionsUtil.computeOptions(this._validatedOptions, env);\n    }\n    _readEnvConfiguration() {\n        return {\n            extraEditorClassName: getExtraEditorClassName(),\n            outerWidth: this._containerObserver.getWidth(),\n            outerHeight: this._containerObserver.getHeight(),\n            emptySelectionClipboard: browser.isWebKit || browser.isFirefox,\n            pixelRatio: browser.PixelRatio.value,\n            accessibilitySupport: (this._accessibilityService.isScreenReaderOptimized()\n                ? 2 /* AccessibilitySupport.Enabled */\n                : this._accessibilityService.getAccessibilitySupport())\n        };\n    }\n    _readFontInfo(bareFontInfo) {\n        return FontMeasurements.readFontInfo(bareFontInfo);\n    }\n    getRawOptions() {\n        return this._rawOptions;\n    }\n    updateOptions(_newOptions) {\n        const newOptions = deepCloneAndMigrateOptions(_newOptions);\n        const didChange = EditorOptionsUtil.applyUpdate(this._rawOptions, newOptions);\n        if (!didChange) {\n            return;\n        }\n        this._validatedOptions = EditorOptionsUtil.validateOptions(this._rawOptions);\n        this._recomputeOptions();\n    }\n    observeContainer(dimension) {\n        this._containerObserver.observe(dimension);\n    }\n    setIsDominatedByLongLines(isDominatedByLongLines) {\n        if (this._isDominatedByLongLines === isDominatedByLongLines) {\n            return;\n        }\n        this._isDominatedByLongLines = isDominatedByLongLines;\n        this._recomputeOptions();\n    }\n    setModelLineCount(modelLineCount) {\n        const lineNumbersDigitCount = digitCount(modelLineCount);\n        if (this._lineNumbersDigitCount === lineNumbersDigitCount) {\n            return;\n        }\n        this._lineNumbersDigitCount = lineNumbersDigitCount;\n        this._recomputeOptions();\n    }\n    setViewLineCount(viewLineCount) {\n        if (this._viewLineCount === viewLineCount) {\n            return;\n        }\n        this._viewLineCount = viewLineCount;\n        this._recomputeOptions();\n    }\n    setReservedHeight(reservedHeight) {\n        if (this._reservedHeight === reservedHeight) {\n            return;\n        }\n        this._reservedHeight = reservedHeight;\n        this._recomputeOptions();\n    }\n    setGlyphMarginDecorationLaneCount(decorationLaneCount) {\n        if (this._glyphMarginDecorationLaneCount === decorationLaneCount) {\n            return;\n        }\n        this._glyphMarginDecorationLaneCount = decorationLaneCount;\n        this._recomputeOptions();\n    }\n};\nEditorConfiguration = __decorate([\n    __param(3, IAccessibilityService)\n], EditorConfiguration);\nexport { EditorConfiguration };\nfunction digitCount(n) {\n    let r = 0;\n    while (n) {\n        n = Math.floor(n / 10);\n        r++;\n    }\n    return r ? r : 1;\n}\nfunction getExtraEditorClassName() {\n    let extra = '';\n    if (!browser.isSafari && !browser.isWebkitWebView) {\n        // Use user-select: none in all browsers except Safari and native macOS WebView\n        extra += 'no-user-select ';\n    }\n    if (browser.isSafari) {\n        // See https://github.com/microsoft/vscode/issues/108822\n        extra += 'no-minimap-shadow ';\n        extra += 'enable-user-select ';\n    }\n    if (platform.isMacintosh) {\n        extra += 'mac ';\n    }\n    return extra;\n}\nclass ValidatedEditorOptions {\n    constructor() {\n        this._values = [];\n    }\n    _read(option) {\n        return this._values[option];\n    }\n    get(id) {\n        return this._values[id];\n    }\n    _write(option, value) {\n        this._values[option] = value;\n    }\n}\nexport class ComputedEditorOptions {\n    constructor() {\n        this._values = [];\n    }\n    _read(id) {\n        if (id >= this._values.length) {\n            throw new Error('Cannot read uninitialized value');\n        }\n        return this._values[id];\n    }\n    get(id) {\n        return this._read(id);\n    }\n    _write(id, value) {\n        this._values[id] = value;\n    }\n}\nclass EditorOptionsUtil {\n    static validateOptions(options) {\n        const result = new ValidatedEditorOptions();\n        for (const editorOption of editorOptionsRegistry) {\n            const value = (editorOption.name === '_never_' ? undefined : options[editorOption.name]);\n            result._write(editorOption.id, editorOption.validate(value));\n        }\n        return result;\n    }\n    static computeOptions(options, env) {\n        const result = new ComputedEditorOptions();\n        for (const editorOption of editorOptionsRegistry) {\n            result._write(editorOption.id, editorOption.compute(env, result, options._read(editorOption.id)));\n        }\n        return result;\n    }\n    static _deepEquals(a, b) {\n        if (typeof a !== 'object' || typeof b !== 'object' || !a || !b) {\n            return a === b;\n        }\n        if (Array.isArray(a) || Array.isArray(b)) {\n            return (Array.isArray(a) && Array.isArray(b) ? arrays.equals(a, b) : false);\n        }\n        if (Object.keys(a).length !== Object.keys(b).length) {\n            return false;\n        }\n        for (const key in a) {\n            if (!EditorOptionsUtil._deepEquals(a[key], b[key])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static checkEquals(a, b) {\n        const result = [];\n        let somethingChanged = false;\n        for (const editorOption of editorOptionsRegistry) {\n            const changed = !EditorOptionsUtil._deepEquals(a._read(editorOption.id), b._read(editorOption.id));\n            result[editorOption.id] = changed;\n            if (changed) {\n                somethingChanged = true;\n            }\n        }\n        return (somethingChanged ? new ConfigurationChangedEvent(result) : null);\n    }\n    /**\n     * Returns true if something changed.\n     * Modifies `options`.\n    */\n    static applyUpdate(options, update) {\n        let changed = false;\n        for (const editorOption of editorOptionsRegistry) {\n            if (update.hasOwnProperty(editorOption.name)) {\n                const result = editorOption.applyUpdate(options[editorOption.name], update[editorOption.name]);\n                options[editorOption.name] = result.newValue;\n                changed = changed || result.didChange;\n            }\n        }\n        return changed;\n    }\n}\nfunction deepCloneAndMigrateOptions(_options) {\n    const options = objects.deepClone(_options);\n    migrateOptions(options);\n    return options;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Emitter } from '../../../base/common/event.js';\nexport class ElementSizeObserver extends Disposable {\n    constructor(referenceDomElement, dimension) {\n        super();\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this._referenceDomElement = referenceDomElement;\n        this._width = -1;\n        this._height = -1;\n        this._resizeObserver = null;\n        this.measureReferenceDomElement(false, dimension);\n    }\n    dispose() {\n        this.stopObserving();\n        super.dispose();\n    }\n    getWidth() {\n        return this._width;\n    }\n    getHeight() {\n        return this._height;\n    }\n    startObserving() {\n        if (!this._resizeObserver && this._referenceDomElement) {\n            this._resizeObserver = new ResizeObserver((entries) => {\n                if (entries && entries[0] && entries[0].contentRect) {\n                    this.observe({ width: entries[0].contentRect.width, height: entries[0].contentRect.height });\n                }\n                else {\n                    this.observe();\n                }\n            });\n            this._resizeObserver.observe(this._referenceDomElement);\n        }\n    }\n    stopObserving() {\n        if (this._resizeObserver) {\n            this._resizeObserver.disconnect();\n            this._resizeObserver = null;\n        }\n    }\n    observe(dimension) {\n        this.measureReferenceDomElement(true, dimension);\n    }\n    measureReferenceDomElement(emitEvent, dimension) {\n        let observedWidth = 0;\n        let observedHeight = 0;\n        if (dimension) {\n            observedWidth = dimension.width;\n            observedHeight = dimension.height;\n        }\n        else if (this._referenceDomElement) {\n            observedWidth = this._referenceDomElement.clientWidth;\n            observedHeight = this._referenceDomElement.clientHeight;\n        }\n        observedWidth = Math.max(5, observedWidth);\n        observedHeight = Math.max(5, observedHeight);\n        if (this._width !== observedWidth || this._height !== observedHeight) {\n            this._width = observedWidth;\n            this._height = observedHeight;\n            if (emitEvent) {\n                this._onDidChange.fire();\n            }\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { applyFontInfo } from './domFontInfo.js';\nexport class CharWidthRequest {\n    constructor(chr, type) {\n        this.chr = chr;\n        this.type = type;\n        this.width = 0;\n    }\n    fulfill(width) {\n        this.width = width;\n    }\n}\nclass DomCharWidthReader {\n    constructor(bareFontInfo, requests) {\n        this._bareFontInfo = bareFontInfo;\n        this._requests = requests;\n        this._container = null;\n        this._testElements = null;\n    }\n    read() {\n        // Create a test container with all these test elements\n        this._createDomElements();\n        // Add the container to the DOM\n        document.body.appendChild(this._container);\n        // Read character widths\n        this._readFromDomElements();\n        // Remove the container from the DOM\n        document.body.removeChild(this._container);\n        this._container = null;\n        this._testElements = null;\n    }\n    _createDomElements() {\n        const container = document.createElement('div');\n        container.style.position = 'absolute';\n        container.style.top = '-50000px';\n        container.style.width = '50000px';\n        const regularDomNode = document.createElement('div');\n        applyFontInfo(regularDomNode, this._bareFontInfo);\n        container.appendChild(regularDomNode);\n        const boldDomNode = document.createElement('div');\n        applyFontInfo(boldDomNode, this._bareFontInfo);\n        boldDomNode.style.fontWeight = 'bold';\n        container.appendChild(boldDomNode);\n        const italicDomNode = document.createElement('div');\n        applyFontInfo(italicDomNode, this._bareFontInfo);\n        italicDomNode.style.fontStyle = 'italic';\n        container.appendChild(italicDomNode);\n        const testElements = [];\n        for (const request of this._requests) {\n            let parent;\n            if (request.type === 0 /* CharWidthRequestType.Regular */) {\n                parent = regularDomNode;\n            }\n            if (request.type === 2 /* CharWidthRequestType.Bold */) {\n                parent = boldDomNode;\n            }\n            if (request.type === 1 /* CharWidthRequestType.Italic */) {\n                parent = italicDomNode;\n            }\n            parent.appendChild(document.createElement('br'));\n            const testElement = document.createElement('span');\n            DomCharWidthReader._render(testElement, request);\n            parent.appendChild(testElement);\n            testElements.push(testElement);\n        }\n        this._container = container;\n        this._testElements = testElements;\n    }\n    static _render(testElement, request) {\n        if (request.chr === ' ') {\n            let htmlString = '\\u00a0';\n            // Repeat character 256 (2^8) times\n            for (let i = 0; i < 8; i++) {\n                htmlString += htmlString;\n            }\n            testElement.innerText = htmlString;\n        }\n        else {\n            let testString = request.chr;\n            // Repeat character 256 (2^8) times\n            for (let i = 0; i < 8; i++) {\n                testString += testString;\n            }\n            testElement.textContent = testString;\n        }\n    }\n    _readFromDomElements() {\n        for (let i = 0, len = this._requests.length; i < len; i++) {\n            const request = this._requests[i];\n            const testElement = this._testElements[i];\n            request.fulfill(testElement.offsetWidth / 256);\n        }\n    }\n}\nexport function readCharWidths(bareFontInfo, requests) {\n    const reader = new DomCharWidthReader(bareFontInfo, requests);\n    reader.read();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as browser from '../../../base/browser/browser.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { CharWidthRequest, readCharWidths } from './charWidthReader.js';\nimport { EditorFontLigatures } from '../../common/config/editorOptions.js';\nimport { FontInfo } from '../../common/config/fontInfo.js';\nexport class FontMeasurementsImpl extends Disposable {\n    constructor() {\n        super();\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this._cache = new FontMeasurementsCache();\n        this._evictUntrustedReadingsTimeout = -1;\n    }\n    dispose() {\n        if (this._evictUntrustedReadingsTimeout !== -1) {\n            window.clearTimeout(this._evictUntrustedReadingsTimeout);\n            this._evictUntrustedReadingsTimeout = -1;\n        }\n        super.dispose();\n    }\n    /**\n     * Clear all cached font information and trigger a change event.\n     */\n    clearAllFontInfos() {\n        this._cache = new FontMeasurementsCache();\n        this._onDidChange.fire();\n    }\n    _writeToCache(item, value) {\n        this._cache.put(item, value);\n        if (!value.isTrusted && this._evictUntrustedReadingsTimeout === -1) {\n            // Try reading again after some time\n            this._evictUntrustedReadingsTimeout = window.setTimeout(() => {\n                this._evictUntrustedReadingsTimeout = -1;\n                this._evictUntrustedReadings();\n            }, 5000);\n        }\n    }\n    _evictUntrustedReadings() {\n        const values = this._cache.getValues();\n        let somethingRemoved = false;\n        for (const item of values) {\n            if (!item.isTrusted) {\n                somethingRemoved = true;\n                this._cache.remove(item);\n            }\n        }\n        if (somethingRemoved) {\n            this._onDidChange.fire();\n        }\n    }\n    /**\n     * Read font information.\n     */\n    readFontInfo(bareFontInfo) {\n        if (!this._cache.has(bareFontInfo)) {\n            let readConfig = this._actualReadFontInfo(bareFontInfo);\n            if (readConfig.typicalHalfwidthCharacterWidth <= 2 || readConfig.typicalFullwidthCharacterWidth <= 2 || readConfig.spaceWidth <= 2 || readConfig.maxDigitWidth <= 2) {\n                // Hey, it's Bug 14341 ... we couldn't read\n                readConfig = new FontInfo({\n                    pixelRatio: browser.PixelRatio.value,\n                    fontFamily: readConfig.fontFamily,\n                    fontWeight: readConfig.fontWeight,\n                    fontSize: readConfig.fontSize,\n                    fontFeatureSettings: readConfig.fontFeatureSettings,\n                    fontVariationSettings: readConfig.fontVariationSettings,\n                    lineHeight: readConfig.lineHeight,\n                    letterSpacing: readConfig.letterSpacing,\n                    isMonospace: readConfig.isMonospace,\n                    typicalHalfwidthCharacterWidth: Math.max(readConfig.typicalHalfwidthCharacterWidth, 5),\n                    typicalFullwidthCharacterWidth: Math.max(readConfig.typicalFullwidthCharacterWidth, 5),\n                    canUseHalfwidthRightwardsArrow: readConfig.canUseHalfwidthRightwardsArrow,\n                    spaceWidth: Math.max(readConfig.spaceWidth, 5),\n                    middotWidth: Math.max(readConfig.middotWidth, 5),\n                    wsmiddotWidth: Math.max(readConfig.wsmiddotWidth, 5),\n                    maxDigitWidth: Math.max(readConfig.maxDigitWidth, 5),\n                }, false);\n            }\n            this._writeToCache(bareFontInfo, readConfig);\n        }\n        return this._cache.get(bareFontInfo);\n    }\n    _createRequest(chr, type, all, monospace) {\n        const result = new CharWidthRequest(chr, type);\n        all.push(result);\n        monospace === null || monospace === void 0 ? void 0 : monospace.push(result);\n        return result;\n    }\n    _actualReadFontInfo(bareFontInfo) {\n        const all = [];\n        const monospace = [];\n        const typicalHalfwidthCharacter = this._createRequest('n', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const typicalFullwidthCharacter = this._createRequest('\\uff4d', 0 /* CharWidthRequestType.Regular */, all, null);\n        const space = this._createRequest(' ', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit0 = this._createRequest('0', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit1 = this._createRequest('1', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit2 = this._createRequest('2', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit3 = this._createRequest('3', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit4 = this._createRequest('4', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit5 = this._createRequest('5', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit6 = this._createRequest('6', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit7 = this._createRequest('7', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit8 = this._createRequest('8', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit9 = this._createRequest('9', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        // monospace test: used for whitespace rendering\n        const rightwardsArrow = this._createRequest('→', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const halfwidthRightwardsArrow = this._createRequest('￫', 0 /* CharWidthRequestType.Regular */, all, null);\n        // U+00B7 - MIDDLE DOT\n        const middot = this._createRequest('·', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        // U+2E31 - WORD SEPARATOR MIDDLE DOT\n        const wsmiddotWidth = this._createRequest(String.fromCharCode(0x2E31), 0 /* CharWidthRequestType.Regular */, all, null);\n        // monospace test: some characters\n        const monospaceTestChars = '|/-_ilm%';\n        for (let i = 0, len = monospaceTestChars.length; i < len; i++) {\n            this._createRequest(monospaceTestChars.charAt(i), 0 /* CharWidthRequestType.Regular */, all, monospace);\n            this._createRequest(monospaceTestChars.charAt(i), 1 /* CharWidthRequestType.Italic */, all, monospace);\n            this._createRequest(monospaceTestChars.charAt(i), 2 /* CharWidthRequestType.Bold */, all, monospace);\n        }\n        readCharWidths(bareFontInfo, all);\n        const maxDigitWidth = Math.max(digit0.width, digit1.width, digit2.width, digit3.width, digit4.width, digit5.width, digit6.width, digit7.width, digit8.width, digit9.width);\n        let isMonospace = (bareFontInfo.fontFeatureSettings === EditorFontLigatures.OFF);\n        const referenceWidth = monospace[0].width;\n        for (let i = 1, len = monospace.length; isMonospace && i < len; i++) {\n            const diff = referenceWidth - monospace[i].width;\n            if (diff < -0.001 || diff > 0.001) {\n                isMonospace = false;\n                break;\n            }\n        }\n        let canUseHalfwidthRightwardsArrow = true;\n        if (isMonospace && halfwidthRightwardsArrow.width !== referenceWidth) {\n            // using a halfwidth rightwards arrow would break monospace...\n            canUseHalfwidthRightwardsArrow = false;\n        }\n        if (halfwidthRightwardsArrow.width > rightwardsArrow.width) {\n            // using a halfwidth rightwards arrow would paint a larger arrow than a regular rightwards arrow\n            canUseHalfwidthRightwardsArrow = false;\n        }\n        return new FontInfo({\n            pixelRatio: browser.PixelRatio.value,\n            fontFamily: bareFontInfo.fontFamily,\n            fontWeight: bareFontInfo.fontWeight,\n            fontSize: bareFontInfo.fontSize,\n            fontFeatureSettings: bareFontInfo.fontFeatureSettings,\n            fontVariationSettings: bareFontInfo.fontVariationSettings,\n            lineHeight: bareFontInfo.lineHeight,\n            letterSpacing: bareFontInfo.letterSpacing,\n            isMonospace: isMonospace,\n            typicalHalfwidthCharacterWidth: typicalHalfwidthCharacter.width,\n            typicalFullwidthCharacterWidth: typicalFullwidthCharacter.width,\n            canUseHalfwidthRightwardsArrow: canUseHalfwidthRightwardsArrow,\n            spaceWidth: space.width,\n            middotWidth: middot.width,\n            wsmiddotWidth: wsmiddotWidth.width,\n            maxDigitWidth: maxDigitWidth\n        }, true);\n    }\n}\nclass FontMeasurementsCache {\n    constructor() {\n        this._keys = Object.create(null);\n        this._values = Object.create(null);\n    }\n    has(item) {\n        const itemId = item.getId();\n        return !!this._values[itemId];\n    }\n    get(item) {\n        const itemId = item.getId();\n        return this._values[itemId];\n    }\n    put(item, value) {\n        const itemId = item.getId();\n        this._keys[itemId] = item;\n        this._values[itemId] = value;\n    }\n    remove(item) {\n        const itemId = item.getId();\n        delete this._keys[itemId];\n        delete this._values[itemId];\n    }\n    getValues() {\n        return Object.keys(this._keys).map(id => this._values[id]);\n    }\n}\nexport const FontMeasurements = new FontMeasurementsImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nclass TabFocusImpl {\n    constructor() {\n        this._tabFocusTerminal = false;\n        this._tabFocusEditor = false;\n        this._onDidChangeTabFocus = new Emitter();\n        this.onDidChangeTabFocus = this._onDidChangeTabFocus.event;\n    }\n    getTabFocusMode(context) {\n        return context === \"terminalFocus\" /* TabFocusContext.Terminal */ ? this._tabFocusTerminal : this._tabFocusEditor;\n    }\n    setTabFocusMode(tabFocusMode, context) {\n        if (context === \"terminalFocus\" /* TabFocusContext.Terminal */) {\n            this._tabFocusTerminal = tabFocusMode;\n        }\n        else {\n            this._tabFocusEditor = tabFocusMode;\n        }\n        this._onDidChangeTabFocus.fire();\n    }\n}\n/**\n * Control what pressing Tab does.\n * If it is false, pressing Tab or Shift-Tab will be handled by the editor.\n * If it is true, pressing Tab or Shift-Tab will move the browser focus.\n * Defaults to false.\n */\nexport const TabFocus = new TabFocusImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { PageCoordinates } from '../editorDom.js';\nimport { PartFingerprints } from '../view/viewPart.js';\nimport { ViewLine } from '../viewParts/lines/viewLine.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range as EditorRange } from '../../common/core/range.js';\nimport { CursorColumns } from '../../common/core/cursorColumns.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { AtomicTabMoveOperations } from '../../common/cursor/cursorAtomicMoveOperations.js';\nclass UnknownHitTestResult {\n    constructor(hitTarget = null) {\n        this.hitTarget = hitTarget;\n        this.type = 0 /* HitTestResultType.Unknown */;\n    }\n}\nclass ContentHitTestResult {\n    constructor(position, spanNode, injectedText) {\n        this.position = position;\n        this.spanNode = spanNode;\n        this.injectedText = injectedText;\n        this.type = 1 /* HitTestResultType.Content */;\n    }\n}\nvar HitTestResult;\n(function (HitTestResult) {\n    function createFromDOMInfo(ctx, spanNode, offset) {\n        const position = ctx.getPositionFromDOMInfo(spanNode, offset);\n        if (position) {\n            return new ContentHitTestResult(position, spanNode, null);\n        }\n        return new UnknownHitTestResult(spanNode);\n    }\n    HitTestResult.createFromDOMInfo = createFromDOMInfo;\n})(HitTestResult || (HitTestResult = {}));\nexport class PointerHandlerLastRenderData {\n    constructor(lastViewCursorsRenderData, lastTextareaPosition) {\n        this.lastViewCursorsRenderData = lastViewCursorsRenderData;\n        this.lastTextareaPosition = lastTextareaPosition;\n    }\n}\nexport class MouseTarget {\n    static _deduceRage(position, range = null) {\n        if (!range && position) {\n            return new EditorRange(position.lineNumber, position.column, position.lineNumber, position.column);\n        }\n        return range !== null && range !== void 0 ? range : null;\n    }\n    static createUnknown(element, mouseColumn, position) {\n        return { type: 0 /* MouseTargetType.UNKNOWN */, element, mouseColumn, position, range: this._deduceRage(position) };\n    }\n    static createTextarea(element, mouseColumn) {\n        return { type: 1 /* MouseTargetType.TEXTAREA */, element, mouseColumn, position: null, range: null };\n    }\n    static createMargin(type, element, mouseColumn, position, range, detail) {\n        return { type, element, mouseColumn, position, range, detail };\n    }\n    static createViewZone(type, element, mouseColumn, position, detail) {\n        return { type, element, mouseColumn, position, range: this._deduceRage(position), detail };\n    }\n    static createContentText(element, mouseColumn, position, range, detail) {\n        return { type: 6 /* MouseTargetType.CONTENT_TEXT */, element, mouseColumn, position, range: this._deduceRage(position, range), detail };\n    }\n    static createContentEmpty(element, mouseColumn, position, detail) {\n        return { type: 7 /* MouseTargetType.CONTENT_EMPTY */, element, mouseColumn, position, range: this._deduceRage(position), detail };\n    }\n    static createContentWidget(element, mouseColumn, detail) {\n        return { type: 9 /* MouseTargetType.CONTENT_WIDGET */, element, mouseColumn, position: null, range: null, detail };\n    }\n    static createScrollbar(element, mouseColumn, position) {\n        return { type: 11 /* MouseTargetType.SCROLLBAR */, element, mouseColumn, position, range: this._deduceRage(position) };\n    }\n    static createOverlayWidget(element, mouseColumn, detail) {\n        return { type: 12 /* MouseTargetType.OVERLAY_WIDGET */, element, mouseColumn, position: null, range: null, detail };\n    }\n    static createOutsideEditor(mouseColumn, position, outsidePosition, outsideDistance) {\n        return { type: 13 /* MouseTargetType.OUTSIDE_EDITOR */, element: null, mouseColumn, position, range: this._deduceRage(position), outsidePosition, outsideDistance };\n    }\n    static _typeToString(type) {\n        if (type === 1 /* MouseTargetType.TEXTAREA */) {\n            return 'TEXTAREA';\n        }\n        if (type === 2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */) {\n            return 'GUTTER_GLYPH_MARGIN';\n        }\n        if (type === 3 /* MouseTargetType.GUTTER_LINE_NUMBERS */) {\n            return 'GUTTER_LINE_NUMBERS';\n        }\n        if (type === 4 /* MouseTargetType.GUTTER_LINE_DECORATIONS */) {\n            return 'GUTTER_LINE_DECORATIONS';\n        }\n        if (type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */) {\n            return 'GUTTER_VIEW_ZONE';\n        }\n        if (type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n            return 'CONTENT_TEXT';\n        }\n        if (type === 7 /* MouseTargetType.CONTENT_EMPTY */) {\n            return 'CONTENT_EMPTY';\n        }\n        if (type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */) {\n            return 'CONTENT_VIEW_ZONE';\n        }\n        if (type === 9 /* MouseTargetType.CONTENT_WIDGET */) {\n            return 'CONTENT_WIDGET';\n        }\n        if (type === 10 /* MouseTargetType.OVERVIEW_RULER */) {\n            return 'OVERVIEW_RULER';\n        }\n        if (type === 11 /* MouseTargetType.SCROLLBAR */) {\n            return 'SCROLLBAR';\n        }\n        if (type === 12 /* MouseTargetType.OVERLAY_WIDGET */) {\n            return 'OVERLAY_WIDGET';\n        }\n        return 'UNKNOWN';\n    }\n    static toString(target) {\n        return this._typeToString(target.type) + ': ' + target.position + ' - ' + target.range + ' - ' + JSON.stringify(target.detail);\n    }\n}\nclass ElementPath {\n    static isTextArea(path) {\n        return (path.length === 2\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[1] === 6 /* PartFingerprint.TextArea */);\n    }\n    static isChildOfViewLines(path) {\n        return (path.length >= 4\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[3] === 7 /* PartFingerprint.ViewLines */);\n    }\n    static isStrictChildOfViewLines(path) {\n        return (path.length > 4\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[3] === 7 /* PartFingerprint.ViewLines */);\n    }\n    static isChildOfScrollableElement(path) {\n        return (path.length >= 2\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[1] === 5 /* PartFingerprint.ScrollableElement */);\n    }\n    static isChildOfMinimap(path) {\n        return (path.length >= 2\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[1] === 8 /* PartFingerprint.Minimap */);\n    }\n    static isChildOfContentWidgets(path) {\n        return (path.length >= 4\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[3] === 1 /* PartFingerprint.ContentWidgets */);\n    }\n    static isChildOfOverflowingContentWidgets(path) {\n        return (path.length >= 1\n            && path[0] === 2 /* PartFingerprint.OverflowingContentWidgets */);\n    }\n    static isChildOfOverlayWidgets(path) {\n        return (path.length >= 2\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[1] === 4 /* PartFingerprint.OverlayWidgets */);\n    }\n}\nexport class HitTestContext {\n    constructor(context, viewHelper, lastRenderData) {\n        this.viewModel = context.viewModel;\n        const options = context.configuration.options;\n        this.layoutInfo = options.get(142 /* EditorOption.layoutInfo */);\n        this.viewDomNode = viewHelper.viewDomNode;\n        this.lineHeight = options.get(65 /* EditorOption.lineHeight */);\n        this.stickyTabStops = options.get(114 /* EditorOption.stickyTabStops */);\n        this.typicalHalfwidthCharacterWidth = options.get(49 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        this.lastRenderData = lastRenderData;\n        this._context = context;\n        this._viewHelper = viewHelper;\n    }\n    getZoneAtCoord(mouseVerticalOffset) {\n        return HitTestContext.getZoneAtCoord(this._context, mouseVerticalOffset);\n    }\n    static getZoneAtCoord(context, mouseVerticalOffset) {\n        // The target is either a view zone or the empty space after the last view-line\n        const viewZoneWhitespace = context.viewLayout.getWhitespaceAtVerticalOffset(mouseVerticalOffset);\n        if (viewZoneWhitespace) {\n            const viewZoneMiddle = viewZoneWhitespace.verticalOffset + viewZoneWhitespace.height / 2;\n            const lineCount = context.viewModel.getLineCount();\n            let positionBefore = null;\n            let position;\n            let positionAfter = null;\n            if (viewZoneWhitespace.afterLineNumber !== lineCount) {\n                // There are more lines after this view zone\n                positionAfter = new Position(viewZoneWhitespace.afterLineNumber + 1, 1);\n            }\n            if (viewZoneWhitespace.afterLineNumber > 0) {\n                // There are more lines above this view zone\n                positionBefore = new Position(viewZoneWhitespace.afterLineNumber, context.viewModel.getLineMaxColumn(viewZoneWhitespace.afterLineNumber));\n            }\n            if (positionAfter === null) {\n                position = positionBefore;\n            }\n            else if (positionBefore === null) {\n                position = positionAfter;\n            }\n            else if (mouseVerticalOffset < viewZoneMiddle) {\n                position = positionBefore;\n            }\n            else {\n                position = positionAfter;\n            }\n            return {\n                viewZoneId: viewZoneWhitespace.id,\n                afterLineNumber: viewZoneWhitespace.afterLineNumber,\n                positionBefore: positionBefore,\n                positionAfter: positionAfter,\n                position: position\n            };\n        }\n        return null;\n    }\n    getFullLineRangeAtCoord(mouseVerticalOffset) {\n        if (this._context.viewLayout.isAfterLines(mouseVerticalOffset)) {\n            // Below the last line\n            const lineNumber = this._context.viewModel.getLineCount();\n            const maxLineColumn = this._context.viewModel.getLineMaxColumn(lineNumber);\n            return {\n                range: new EditorRange(lineNumber, maxLineColumn, lineNumber, maxLineColumn),\n                isAfterLines: true\n            };\n        }\n        const lineNumber = this._context.viewLayout.getLineNumberAtVerticalOffset(mouseVerticalOffset);\n        const maxLineColumn = this._context.viewModel.getLineMaxColumn(lineNumber);\n        return {\n            range: new EditorRange(lineNumber, 1, lineNumber, maxLineColumn),\n            isAfterLines: false\n        };\n    }\n    getLineNumberAtVerticalOffset(mouseVerticalOffset) {\n        return this._context.viewLayout.getLineNumberAtVerticalOffset(mouseVerticalOffset);\n    }\n    isAfterLines(mouseVerticalOffset) {\n        return this._context.viewLayout.isAfterLines(mouseVerticalOffset);\n    }\n    isInTopPadding(mouseVerticalOffset) {\n        return this._context.viewLayout.isInTopPadding(mouseVerticalOffset);\n    }\n    isInBottomPadding(mouseVerticalOffset) {\n        return this._context.viewLayout.isInBottomPadding(mouseVerticalOffset);\n    }\n    getVerticalOffsetForLineNumber(lineNumber) {\n        return this._context.viewLayout.getVerticalOffsetForLineNumber(lineNumber);\n    }\n    findAttribute(element, attr) {\n        return HitTestContext._findAttribute(element, attr, this._viewHelper.viewDomNode);\n    }\n    static _findAttribute(element, attr, stopAt) {\n        while (element && element !== document.body) {\n            if (element.hasAttribute && element.hasAttribute(attr)) {\n                return element.getAttribute(attr);\n            }\n            if (element === stopAt) {\n                return null;\n            }\n            element = element.parentNode;\n        }\n        return null;\n    }\n    getLineWidth(lineNumber) {\n        return this._viewHelper.getLineWidth(lineNumber);\n    }\n    visibleRangeForPosition(lineNumber, column) {\n        return this._viewHelper.visibleRangeForPosition(lineNumber, column);\n    }\n    getPositionFromDOMInfo(spanNode, offset) {\n        return this._viewHelper.getPositionFromDOMInfo(spanNode, offset);\n    }\n    getCurrentScrollTop() {\n        return this._context.viewLayout.getCurrentScrollTop();\n    }\n    getCurrentScrollLeft() {\n        return this._context.viewLayout.getCurrentScrollLeft();\n    }\n}\nclass BareHitTestRequest {\n    constructor(ctx, editorPos, pos, relativePos) {\n        this.editorPos = editorPos;\n        this.pos = pos;\n        this.relativePos = relativePos;\n        this.mouseVerticalOffset = Math.max(0, ctx.getCurrentScrollTop() + this.relativePos.y);\n        this.mouseContentHorizontalOffset = ctx.getCurrentScrollLeft() + this.relativePos.x - ctx.layoutInfo.contentLeft;\n        this.isInMarginArea = (this.relativePos.x < ctx.layoutInfo.contentLeft && this.relativePos.x >= ctx.layoutInfo.glyphMarginLeft);\n        this.isInContentArea = !this.isInMarginArea;\n        this.mouseColumn = Math.max(0, MouseTargetFactory._getMouseColumn(this.mouseContentHorizontalOffset, ctx.typicalHalfwidthCharacterWidth));\n    }\n}\nclass HitTestRequest extends BareHitTestRequest {\n    constructor(ctx, editorPos, pos, relativePos, target) {\n        super(ctx, editorPos, pos, relativePos);\n        this._ctx = ctx;\n        if (target) {\n            this.target = target;\n            this.targetPath = PartFingerprints.collect(target, ctx.viewDomNode);\n        }\n        else {\n            this.target = null;\n            this.targetPath = new Uint8Array(0);\n        }\n    }\n    toString() {\n        return `pos(${this.pos.x},${this.pos.y}), editorPos(${this.editorPos.x},${this.editorPos.y}), relativePos(${this.relativePos.x},${this.relativePos.y}), mouseVerticalOffset: ${this.mouseVerticalOffset}, mouseContentHorizontalOffset: ${this.mouseContentHorizontalOffset}\\n\\ttarget: ${this.target ? this.target.outerHTML : null}`;\n    }\n    _getMouseColumn(position = null) {\n        if (position && position.column < this._ctx.viewModel.getLineMaxColumn(position.lineNumber)) {\n            // Most likely, the line contains foreign decorations...\n            return CursorColumns.visibleColumnFromColumn(this._ctx.viewModel.getLineContent(position.lineNumber), position.column, this._ctx.viewModel.model.getOptions().tabSize) + 1;\n        }\n        return this.mouseColumn;\n    }\n    fulfillUnknown(position = null) {\n        return MouseTarget.createUnknown(this.target, this._getMouseColumn(position), position);\n    }\n    fulfillTextarea() {\n        return MouseTarget.createTextarea(this.target, this._getMouseColumn());\n    }\n    fulfillMargin(type, position, range, detail) {\n        return MouseTarget.createMargin(type, this.target, this._getMouseColumn(position), position, range, detail);\n    }\n    fulfillViewZone(type, position, detail) {\n        return MouseTarget.createViewZone(type, this.target, this._getMouseColumn(position), position, detail);\n    }\n    fulfillContentText(position, range, detail) {\n        return MouseTarget.createContentText(this.target, this._getMouseColumn(position), position, range, detail);\n    }\n    fulfillContentEmpty(position, detail) {\n        return MouseTarget.createContentEmpty(this.target, this._getMouseColumn(position), position, detail);\n    }\n    fulfillContentWidget(detail) {\n        return MouseTarget.createContentWidget(this.target, this._getMouseColumn(), detail);\n    }\n    fulfillScrollbar(position) {\n        return MouseTarget.createScrollbar(this.target, this._getMouseColumn(position), position);\n    }\n    fulfillOverlayWidget(detail) {\n        return MouseTarget.createOverlayWidget(this.target, this._getMouseColumn(), detail);\n    }\n    withTarget(target) {\n        return new HitTestRequest(this._ctx, this.editorPos, this.pos, this.relativePos, target);\n    }\n}\nconst EMPTY_CONTENT_AFTER_LINES = { isAfterLines: true };\nfunction createEmptyContentDataInLines(horizontalDistanceToText) {\n    return {\n        isAfterLines: false,\n        horizontalDistanceToText: horizontalDistanceToText\n    };\n}\nexport class MouseTargetFactory {\n    constructor(context, viewHelper) {\n        this._context = context;\n        this._viewHelper = viewHelper;\n    }\n    mouseTargetIsWidget(e) {\n        const t = e.target;\n        const path = PartFingerprints.collect(t, this._viewHelper.viewDomNode);\n        // Is it a content widget?\n        if (ElementPath.isChildOfContentWidgets(path) || ElementPath.isChildOfOverflowingContentWidgets(path)) {\n            return true;\n        }\n        // Is it an overlay widget?\n        if (ElementPath.isChildOfOverlayWidgets(path)) {\n            return true;\n        }\n        return false;\n    }\n    createMouseTarget(lastRenderData, editorPos, pos, relativePos, target) {\n        const ctx = new HitTestContext(this._context, this._viewHelper, lastRenderData);\n        const request = new HitTestRequest(ctx, editorPos, pos, relativePos, target);\n        try {\n            const r = MouseTargetFactory._createMouseTarget(ctx, request, false);\n            if (r.type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n                // Snap to the nearest soft tab boundary if atomic soft tabs are enabled.\n                if (ctx.stickyTabStops && r.position !== null) {\n                    const position = MouseTargetFactory._snapToSoftTabBoundary(r.position, ctx.viewModel);\n                    const range = EditorRange.fromPositions(position, position).plusRange(r.range);\n                    return request.fulfillContentText(position, range, r.detail);\n                }\n            }\n            // console.log(MouseTarget.toString(r));\n            return r;\n        }\n        catch (err) {\n            // console.log(err);\n            return request.fulfillUnknown();\n        }\n    }\n    static _createMouseTarget(ctx, request, domHitTestExecuted) {\n        // console.log(`${domHitTestExecuted ? '=>' : ''}CAME IN REQUEST: ${request}`);\n        // First ensure the request has a target\n        if (request.target === null) {\n            if (domHitTestExecuted) {\n                // Still no target... and we have already executed hit test...\n                return request.fulfillUnknown();\n            }\n            const hitTestResult = MouseTargetFactory._doHitTest(ctx, request);\n            if (hitTestResult.type === 1 /* HitTestResultType.Content */) {\n                return MouseTargetFactory.createMouseTargetFromHitTestPosition(ctx, request, hitTestResult.spanNode, hitTestResult.position, hitTestResult.injectedText);\n            }\n            return this._createMouseTarget(ctx, request.withTarget(hitTestResult.hitTarget), true);\n        }\n        // we know for a fact that request.target is not null\n        const resolvedRequest = request;\n        let result = null;\n        result = result || MouseTargetFactory._hitTestContentWidget(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestOverlayWidget(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestMinimap(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestScrollbarSlider(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestViewZone(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestMargin(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestViewCursor(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestTextArea(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestViewLines(ctx, resolvedRequest, domHitTestExecuted);\n        result = result || MouseTargetFactory._hitTestScrollbar(ctx, resolvedRequest);\n        return (result || request.fulfillUnknown());\n    }\n    static _hitTestContentWidget(ctx, request) {\n        // Is it a content widget?\n        if (ElementPath.isChildOfContentWidgets(request.targetPath) || ElementPath.isChildOfOverflowingContentWidgets(request.targetPath)) {\n            const widgetId = ctx.findAttribute(request.target, 'widgetId');\n            if (widgetId) {\n                return request.fulfillContentWidget(widgetId);\n            }\n            else {\n                return request.fulfillUnknown();\n            }\n        }\n        return null;\n    }\n    static _hitTestOverlayWidget(ctx, request) {\n        // Is it an overlay widget?\n        if (ElementPath.isChildOfOverlayWidgets(request.targetPath)) {\n            const widgetId = ctx.findAttribute(request.target, 'widgetId');\n            if (widgetId) {\n                return request.fulfillOverlayWidget(widgetId);\n            }\n            else {\n                return request.fulfillUnknown();\n            }\n        }\n        return null;\n    }\n    static _hitTestViewCursor(ctx, request) {\n        if (request.target) {\n            // Check if we've hit a painted cursor\n            const lastViewCursorsRenderData = ctx.lastRenderData.lastViewCursorsRenderData;\n            for (const d of lastViewCursorsRenderData) {\n                if (request.target === d.domNode) {\n                    return request.fulfillContentText(d.position, null, { mightBeForeignElement: false, injectedText: null });\n                }\n            }\n        }\n        if (request.isInContentArea) {\n            // Edge has a bug when hit-testing the exact position of a cursor,\n            // instead of returning the correct dom node, it returns the\n            // first or last rendered view line dom node, therefore help it out\n            // and first check if we are on top of a cursor\n            const lastViewCursorsRenderData = ctx.lastRenderData.lastViewCursorsRenderData;\n            const mouseContentHorizontalOffset = request.mouseContentHorizontalOffset;\n            const mouseVerticalOffset = request.mouseVerticalOffset;\n            for (const d of lastViewCursorsRenderData) {\n                if (mouseContentHorizontalOffset < d.contentLeft) {\n                    // mouse position is to the left of the cursor\n                    continue;\n                }\n                if (mouseContentHorizontalOffset > d.contentLeft + d.width) {\n                    // mouse position is to the right of the cursor\n                    continue;\n                }\n                const cursorVerticalOffset = ctx.getVerticalOffsetForLineNumber(d.position.lineNumber);\n                if (cursorVerticalOffset <= mouseVerticalOffset\n                    && mouseVerticalOffset <= cursorVerticalOffset + d.height) {\n                    return request.fulfillContentText(d.position, null, { mightBeForeignElement: false, injectedText: null });\n                }\n            }\n        }\n        return null;\n    }\n    static _hitTestViewZone(ctx, request) {\n        const viewZoneData = ctx.getZoneAtCoord(request.mouseVerticalOffset);\n        if (viewZoneData) {\n            const mouseTargetType = (request.isInContentArea ? 8 /* MouseTargetType.CONTENT_VIEW_ZONE */ : 5 /* MouseTargetType.GUTTER_VIEW_ZONE */);\n            return request.fulfillViewZone(mouseTargetType, viewZoneData.position, viewZoneData);\n        }\n        return null;\n    }\n    static _hitTestTextArea(ctx, request) {\n        // Is it the textarea?\n        if (ElementPath.isTextArea(request.targetPath)) {\n            if (ctx.lastRenderData.lastTextareaPosition) {\n                return request.fulfillContentText(ctx.lastRenderData.lastTextareaPosition, null, { mightBeForeignElement: false, injectedText: null });\n            }\n            return request.fulfillTextarea();\n        }\n        return null;\n    }\n    static _hitTestMargin(ctx, request) {\n        if (request.isInMarginArea) {\n            const res = ctx.getFullLineRangeAtCoord(request.mouseVerticalOffset);\n            const pos = res.range.getStartPosition();\n            let offset = Math.abs(request.relativePos.x);\n            const detail = {\n                isAfterLines: res.isAfterLines,\n                glyphMarginLeft: ctx.layoutInfo.glyphMarginLeft,\n                glyphMarginWidth: ctx.layoutInfo.glyphMarginWidth,\n                lineNumbersWidth: ctx.layoutInfo.lineNumbersWidth,\n                offsetX: offset\n            };\n            offset -= ctx.layoutInfo.glyphMarginLeft;\n            if (offset <= ctx.layoutInfo.glyphMarginWidth) {\n                // On the glyph margin\n                return request.fulfillMargin(2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */, pos, res.range, detail);\n            }\n            offset -= ctx.layoutInfo.glyphMarginWidth;\n            if (offset <= ctx.layoutInfo.lineNumbersWidth) {\n                // On the line numbers\n                return request.fulfillMargin(3 /* MouseTargetType.GUTTER_LINE_NUMBERS */, pos, res.range, detail);\n            }\n            offset -= ctx.layoutInfo.lineNumbersWidth;\n            // On the line decorations\n            return request.fulfillMargin(4 /* MouseTargetType.GUTTER_LINE_DECORATIONS */, pos, res.range, detail);\n        }\n        return null;\n    }\n    static _hitTestViewLines(ctx, request, domHitTestExecuted) {\n        if (!ElementPath.isChildOfViewLines(request.targetPath)) {\n            return null;\n        }\n        if (ctx.isInTopPadding(request.mouseVerticalOffset)) {\n            return request.fulfillContentEmpty(new Position(1, 1), EMPTY_CONTENT_AFTER_LINES);\n        }\n        // Check if it is below any lines and any view zones\n        if (ctx.isAfterLines(request.mouseVerticalOffset) || ctx.isInBottomPadding(request.mouseVerticalOffset)) {\n            // This most likely indicates it happened after the last view-line\n            const lineCount = ctx.viewModel.getLineCount();\n            const maxLineColumn = ctx.viewModel.getLineMaxColumn(lineCount);\n            return request.fulfillContentEmpty(new Position(lineCount, maxLineColumn), EMPTY_CONTENT_AFTER_LINES);\n        }\n        if (domHitTestExecuted) {\n            // Check if we are hitting a view-line (can happen in the case of inline decorations on empty lines)\n            // See https://github.com/microsoft/vscode/issues/46942\n            if (ElementPath.isStrictChildOfViewLines(request.targetPath)) {\n                const lineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n                if (ctx.viewModel.getLineLength(lineNumber) === 0) {\n                    const lineWidth = ctx.getLineWidth(lineNumber);\n                    const detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n                    return request.fulfillContentEmpty(new Position(lineNumber, 1), detail);\n                }\n                const lineWidth = ctx.getLineWidth(lineNumber);\n                if (request.mouseContentHorizontalOffset >= lineWidth) {\n                    const detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n                    const pos = new Position(lineNumber, ctx.viewModel.getLineMaxColumn(lineNumber));\n                    return request.fulfillContentEmpty(pos, detail);\n                }\n            }\n            // We have already executed hit test...\n            return request.fulfillUnknown();\n        }\n        const hitTestResult = MouseTargetFactory._doHitTest(ctx, request);\n        if (hitTestResult.type === 1 /* HitTestResultType.Content */) {\n            return MouseTargetFactory.createMouseTargetFromHitTestPosition(ctx, request, hitTestResult.spanNode, hitTestResult.position, hitTestResult.injectedText);\n        }\n        return this._createMouseTarget(ctx, request.withTarget(hitTestResult.hitTarget), true);\n    }\n    static _hitTestMinimap(ctx, request) {\n        if (ElementPath.isChildOfMinimap(request.targetPath)) {\n            const possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n            const maxColumn = ctx.viewModel.getLineMaxColumn(possibleLineNumber);\n            return request.fulfillScrollbar(new Position(possibleLineNumber, maxColumn));\n        }\n        return null;\n    }\n    static _hitTestScrollbarSlider(ctx, request) {\n        if (ElementPath.isChildOfScrollableElement(request.targetPath)) {\n            if (request.target && request.target.nodeType === 1) {\n                const className = request.target.className;\n                if (className && /\\b(slider|scrollbar)\\b/.test(className)) {\n                    const possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n                    const maxColumn = ctx.viewModel.getLineMaxColumn(possibleLineNumber);\n                    return request.fulfillScrollbar(new Position(possibleLineNumber, maxColumn));\n                }\n            }\n        }\n        return null;\n    }\n    static _hitTestScrollbar(ctx, request) {\n        // Is it the overview ruler?\n        // Is it a child of the scrollable element?\n        if (ElementPath.isChildOfScrollableElement(request.targetPath)) {\n            const possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n            const maxColumn = ctx.viewModel.getLineMaxColumn(possibleLineNumber);\n            return request.fulfillScrollbar(new Position(possibleLineNumber, maxColumn));\n        }\n        return null;\n    }\n    getMouseColumn(relativePos) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(142 /* EditorOption.layoutInfo */);\n        const mouseContentHorizontalOffset = this._context.viewLayout.getCurrentScrollLeft() + relativePos.x - layoutInfo.contentLeft;\n        return MouseTargetFactory._getMouseColumn(mouseContentHorizontalOffset, options.get(49 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth);\n    }\n    static _getMouseColumn(mouseContentHorizontalOffset, typicalHalfwidthCharacterWidth) {\n        if (mouseContentHorizontalOffset < 0) {\n            return 1;\n        }\n        const chars = Math.round(mouseContentHorizontalOffset / typicalHalfwidthCharacterWidth);\n        return (chars + 1);\n    }\n    static createMouseTargetFromHitTestPosition(ctx, request, spanNode, pos, injectedText) {\n        const lineNumber = pos.lineNumber;\n        const column = pos.column;\n        const lineWidth = ctx.getLineWidth(lineNumber);\n        if (request.mouseContentHorizontalOffset > lineWidth) {\n            const detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n            return request.fulfillContentEmpty(pos, detail);\n        }\n        const visibleRange = ctx.visibleRangeForPosition(lineNumber, column);\n        if (!visibleRange) {\n            return request.fulfillUnknown(pos);\n        }\n        const columnHorizontalOffset = visibleRange.left;\n        if (Math.abs(request.mouseContentHorizontalOffset - columnHorizontalOffset) < 1) {\n            return request.fulfillContentText(pos, null, { mightBeForeignElement: !!injectedText, injectedText });\n        }\n        const points = [];\n        points.push({ offset: visibleRange.left, column: column });\n        if (column > 1) {\n            const visibleRange = ctx.visibleRangeForPosition(lineNumber, column - 1);\n            if (visibleRange) {\n                points.push({ offset: visibleRange.left, column: column - 1 });\n            }\n        }\n        const lineMaxColumn = ctx.viewModel.getLineMaxColumn(lineNumber);\n        if (column < lineMaxColumn) {\n            const visibleRange = ctx.visibleRangeForPosition(lineNumber, column + 1);\n            if (visibleRange) {\n                points.push({ offset: visibleRange.left, column: column + 1 });\n            }\n        }\n        points.sort((a, b) => a.offset - b.offset);\n        const mouseCoordinates = request.pos.toClientCoordinates();\n        const spanNodeClientRect = spanNode.getBoundingClientRect();\n        const mouseIsOverSpanNode = (spanNodeClientRect.left <= mouseCoordinates.clientX && mouseCoordinates.clientX <= spanNodeClientRect.right);\n        let rng = null;\n        for (let i = 1; i < points.length; i++) {\n            const prev = points[i - 1];\n            const curr = points[i];\n            if (prev.offset <= request.mouseContentHorizontalOffset && request.mouseContentHorizontalOffset <= curr.offset) {\n                rng = new EditorRange(lineNumber, prev.column, lineNumber, curr.column);\n                // See https://github.com/microsoft/vscode/issues/152819\n                // Due to the use of zwj, the browser's hit test result is skewed towards the left\n                // Here we try to correct that if the mouse horizontal offset is closer to the right than the left\n                const prevDelta = Math.abs(prev.offset - request.mouseContentHorizontalOffset);\n                const nextDelta = Math.abs(curr.offset - request.mouseContentHorizontalOffset);\n                pos = (prevDelta < nextDelta\n                    ? new Position(lineNumber, prev.column)\n                    : new Position(lineNumber, curr.column));\n                break;\n            }\n        }\n        return request.fulfillContentText(pos, rng, { mightBeForeignElement: !mouseIsOverSpanNode || !!injectedText, injectedText });\n    }\n    /**\n     * Most probably WebKit browsers and Edge\n     */\n    static _doHitTestWithCaretRangeFromPoint(ctx, request) {\n        // In Chrome, especially on Linux it is possible to click between lines,\n        // so try to adjust the `hity` below so that it lands in the center of a line\n        const lineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n        const lineStartVerticalOffset = ctx.getVerticalOffsetForLineNumber(lineNumber);\n        const lineEndVerticalOffset = lineStartVerticalOffset + ctx.lineHeight;\n        const isBelowLastLine = (lineNumber === ctx.viewModel.getLineCount()\n            && request.mouseVerticalOffset > lineEndVerticalOffset);\n        if (!isBelowLastLine) {\n            const lineCenteredVerticalOffset = Math.floor((lineStartVerticalOffset + lineEndVerticalOffset) / 2);\n            let adjustedPageY = request.pos.y + (lineCenteredVerticalOffset - request.mouseVerticalOffset);\n            if (adjustedPageY <= request.editorPos.y) {\n                adjustedPageY = request.editorPos.y + 1;\n            }\n            if (adjustedPageY >= request.editorPos.y + request.editorPos.height) {\n                adjustedPageY = request.editorPos.y + request.editorPos.height - 1;\n            }\n            const adjustedPage = new PageCoordinates(request.pos.x, adjustedPageY);\n            const r = this._actualDoHitTestWithCaretRangeFromPoint(ctx, adjustedPage.toClientCoordinates());\n            if (r.type === 1 /* HitTestResultType.Content */) {\n                return r;\n            }\n        }\n        // Also try to hit test without the adjustment (for the edge cases that we are near the top or bottom)\n        return this._actualDoHitTestWithCaretRangeFromPoint(ctx, request.pos.toClientCoordinates());\n    }\n    static _actualDoHitTestWithCaretRangeFromPoint(ctx, coords) {\n        const shadowRoot = dom.getShadowRoot(ctx.viewDomNode);\n        let range;\n        if (shadowRoot) {\n            if (typeof shadowRoot.caretRangeFromPoint === 'undefined') {\n                range = shadowCaretRangeFromPoint(shadowRoot, coords.clientX, coords.clientY);\n            }\n            else {\n                range = shadowRoot.caretRangeFromPoint(coords.clientX, coords.clientY);\n            }\n        }\n        else {\n            range = document.caretRangeFromPoint(coords.clientX, coords.clientY);\n        }\n        if (!range || !range.startContainer) {\n            return new UnknownHitTestResult();\n        }\n        // Chrome always hits a TEXT_NODE, while Edge sometimes hits a token span\n        const startContainer = range.startContainer;\n        if (startContainer.nodeType === startContainer.TEXT_NODE) {\n            // startContainer is expected to be the token text\n            const parent1 = startContainer.parentNode; // expected to be the token span\n            const parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line container span\n            const parent3 = parent2 ? parent2.parentNode : null; // expected to be the view line div\n            const parent3ClassName = parent3 && parent3.nodeType === parent3.ELEMENT_NODE ? parent3.className : null;\n            if (parent3ClassName === ViewLine.CLASS_NAME) {\n                return HitTestResult.createFromDOMInfo(ctx, parent1, range.startOffset);\n            }\n            else {\n                return new UnknownHitTestResult(startContainer.parentNode);\n            }\n        }\n        else if (startContainer.nodeType === startContainer.ELEMENT_NODE) {\n            // startContainer is expected to be the token span\n            const parent1 = startContainer.parentNode; // expected to be the view line container span\n            const parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line div\n            const parent2ClassName = parent2 && parent2.nodeType === parent2.ELEMENT_NODE ? parent2.className : null;\n            if (parent2ClassName === ViewLine.CLASS_NAME) {\n                return HitTestResult.createFromDOMInfo(ctx, startContainer, startContainer.textContent.length);\n            }\n            else {\n                return new UnknownHitTestResult(startContainer);\n            }\n        }\n        return new UnknownHitTestResult();\n    }\n    /**\n     * Most probably Gecko\n     */\n    static _doHitTestWithCaretPositionFromPoint(ctx, coords) {\n        const hitResult = document.caretPositionFromPoint(coords.clientX, coords.clientY);\n        if (hitResult.offsetNode.nodeType === hitResult.offsetNode.TEXT_NODE) {\n            // offsetNode is expected to be the token text\n            const parent1 = hitResult.offsetNode.parentNode; // expected to be the token span\n            const parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line container span\n            const parent3 = parent2 ? parent2.parentNode : null; // expected to be the view line div\n            const parent3ClassName = parent3 && parent3.nodeType === parent3.ELEMENT_NODE ? parent3.className : null;\n            if (parent3ClassName === ViewLine.CLASS_NAME) {\n                return HitTestResult.createFromDOMInfo(ctx, hitResult.offsetNode.parentNode, hitResult.offset);\n            }\n            else {\n                return new UnknownHitTestResult(hitResult.offsetNode.parentNode);\n            }\n        }\n        // For inline decorations, Gecko sometimes returns the `<span>` of the line and the offset is the `<span>` with the inline decoration\n        // Some other times, it returns the `<span>` with the inline decoration\n        if (hitResult.offsetNode.nodeType === hitResult.offsetNode.ELEMENT_NODE) {\n            const parent1 = hitResult.offsetNode.parentNode;\n            const parent1ClassName = parent1 && parent1.nodeType === parent1.ELEMENT_NODE ? parent1.className : null;\n            const parent2 = parent1 ? parent1.parentNode : null;\n            const parent2ClassName = parent2 && parent2.nodeType === parent2.ELEMENT_NODE ? parent2.className : null;\n            if (parent1ClassName === ViewLine.CLASS_NAME) {\n                // it returned the `<span>` of the line and the offset is the `<span>` with the inline decoration\n                const tokenSpan = hitResult.offsetNode.childNodes[Math.min(hitResult.offset, hitResult.offsetNode.childNodes.length - 1)];\n                if (tokenSpan) {\n                    return HitTestResult.createFromDOMInfo(ctx, tokenSpan, 0);\n                }\n            }\n            else if (parent2ClassName === ViewLine.CLASS_NAME) {\n                // it returned the `<span>` with the inline decoration\n                return HitTestResult.createFromDOMInfo(ctx, hitResult.offsetNode, 0);\n            }\n        }\n        return new UnknownHitTestResult(hitResult.offsetNode);\n    }\n    static _snapToSoftTabBoundary(position, viewModel) {\n        const lineContent = viewModel.getLineContent(position.lineNumber);\n        const { tabSize } = viewModel.model.getOptions();\n        const newPosition = AtomicTabMoveOperations.atomicPosition(lineContent, position.column - 1, tabSize, 2 /* Direction.Nearest */);\n        if (newPosition !== -1) {\n            return new Position(position.lineNumber, newPosition + 1);\n        }\n        return position;\n    }\n    static _doHitTest(ctx, request) {\n        let result = new UnknownHitTestResult();\n        if (typeof document.caretRangeFromPoint === 'function') {\n            result = this._doHitTestWithCaretRangeFromPoint(ctx, request);\n        }\n        else if (document.caretPositionFromPoint) {\n            result = this._doHitTestWithCaretPositionFromPoint(ctx, request.pos.toClientCoordinates());\n        }\n        if (result.type === 1 /* HitTestResultType.Content */) {\n            const injectedText = ctx.viewModel.getInjectedTextAt(result.position);\n            const normalizedPosition = ctx.viewModel.normalizePosition(result.position, 2 /* PositionAffinity.None */);\n            if (injectedText || !normalizedPosition.equals(result.position)) {\n                result = new ContentHitTestResult(normalizedPosition, result.spanNode, injectedText);\n            }\n        }\n        return result;\n    }\n}\nfunction shadowCaretRangeFromPoint(shadowRoot, x, y) {\n    const range = document.createRange();\n    // Get the element under the point\n    let el = shadowRoot.elementFromPoint(x, y);\n    if (el !== null) {\n        // Get the last child of the element until its firstChild is a text node\n        // This assumes that the pointer is on the right of the line, out of the tokens\n        // and that we want to get the offset of the last token of the line\n        while (el && el.firstChild && el.firstChild.nodeType !== el.firstChild.TEXT_NODE && el.lastChild && el.lastChild.firstChild) {\n            el = el.lastChild;\n        }\n        // Grab its rect\n        const rect = el.getBoundingClientRect();\n        // And its font (the computed shorthand font property might be empty, see #3217)\n        const fontStyle = window.getComputedStyle(el, null).getPropertyValue('font-style');\n        const fontVariant = window.getComputedStyle(el, null).getPropertyValue('font-variant');\n        const fontWeight = window.getComputedStyle(el, null).getPropertyValue('font-weight');\n        const fontSize = window.getComputedStyle(el, null).getPropertyValue('font-size');\n        const lineHeight = window.getComputedStyle(el, null).getPropertyValue('line-height');\n        const fontFamily = window.getComputedStyle(el, null).getPropertyValue('font-family');\n        const font = `${fontStyle} ${fontVariant} ${fontWeight} ${fontSize}/${lineHeight} ${fontFamily}`;\n        // And also its txt content\n        const text = el.innerText;\n        // Position the pixel cursor at the left of the element\n        let pixelCursor = rect.left;\n        let offset = 0;\n        let step;\n        // If the point is on the right of the box put the cursor after the last character\n        if (x > rect.left + rect.width) {\n            offset = text.length;\n        }\n        else {\n            const charWidthReader = CharWidthReader.getInstance();\n            // Goes through all the characters of the innerText, and checks if the x of the point\n            // belongs to the character.\n            for (let i = 0; i < text.length + 1; i++) {\n                // The step is half the width of the character\n                step = charWidthReader.getCharWidth(text.charAt(i), font) / 2;\n                // Move to the center of the character\n                pixelCursor += step;\n                // If the x of the point is smaller that the position of the cursor, the point is over that character\n                if (x < pixelCursor) {\n                    offset = i;\n                    break;\n                }\n                // Move between the current character and the next\n                pixelCursor += step;\n            }\n        }\n        // Creates a range with the text node of the element and set the offset found\n        range.setStart(el.firstChild, offset);\n        range.setEnd(el.firstChild, offset);\n    }\n    return range;\n}\nclass CharWidthReader {\n    static getInstance() {\n        if (!CharWidthReader._INSTANCE) {\n            CharWidthReader._INSTANCE = new CharWidthReader();\n        }\n        return CharWidthReader._INSTANCE;\n    }\n    constructor() {\n        this._cache = {};\n        this._canvas = document.createElement('canvas');\n    }\n    getCharWidth(char, font) {\n        const cacheKey = char + font;\n        if (this._cache[cacheKey]) {\n            return this._cache[cacheKey];\n        }\n        const context = this._canvas.getContext('2d');\n        context.font = font;\n        const metrics = context.measureText(char);\n        const width = metrics.width;\n        this._cache[cacheKey] = width;\n        return width;\n    }\n}\nCharWidthReader._INSTANCE = null;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport { StandardWheelEvent } from '../../../base/browser/mouseEvent.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { HitTestContext, MouseTarget, MouseTargetFactory } from './mouseTarget.js';\nimport { ClientCoordinates, EditorMouseEvent, EditorMouseEventFactory, GlobalEditorPointerMoveMonitor, createEditorPagePosition, createCoordinatesRelativeToEditor, PageCoordinates } from '../editorDom.js';\nimport { EditorZoom } from '../../common/config/editorZoom.js';\nimport { Position } from '../../common/core/position.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { ViewEventHandler } from '../../common/viewEventHandler.js';\nimport { MouseWheelClassifier } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\nexport class MouseHandler extends ViewEventHandler {\n    constructor(context, viewController, viewHelper) {\n        super();\n        this._mouseLeaveMonitor = null;\n        this._context = context;\n        this.viewController = viewController;\n        this.viewHelper = viewHelper;\n        this.mouseTargetFactory = new MouseTargetFactory(this._context, viewHelper);\n        this._mouseDownOperation = this._register(new MouseDownOperation(this._context, this.viewController, this.viewHelper, this.mouseTargetFactory, (e, testEventTarget) => this._createMouseTarget(e, testEventTarget), (e) => this._getMouseColumn(e)));\n        this.lastMouseLeaveTime = -1;\n        this._height = this._context.configuration.options.get(142 /* EditorOption.layoutInfo */).height;\n        const mouseEvents = new EditorMouseEventFactory(this.viewHelper.viewDomNode);\n        this._register(mouseEvents.onContextMenu(this.viewHelper.viewDomNode, (e) => this._onContextMenu(e, true)));\n        this._register(mouseEvents.onMouseMove(this.viewHelper.viewDomNode, (e) => {\n            this._onMouseMove(e);\n            // See https://github.com/microsoft/vscode/issues/138789\n            // When moving the mouse really quickly, the browser sometimes forgets to\n            // send us a `mouseleave` or `mouseout` event. We therefore install here\n            // a global `mousemove` listener to manually recover if the mouse goes outside\n            // the editor. As soon as the mouse leaves outside of the editor, we\n            // remove this listener\n            if (!this._mouseLeaveMonitor) {\n                this._mouseLeaveMonitor = dom.addDisposableListener(document, 'mousemove', (e) => {\n                    if (!this.viewHelper.viewDomNode.contains(e.target)) {\n                        // went outside the editor!\n                        this._onMouseLeave(new EditorMouseEvent(e, false, this.viewHelper.viewDomNode));\n                    }\n                });\n            }\n        }));\n        this._register(mouseEvents.onMouseUp(this.viewHelper.viewDomNode, (e) => this._onMouseUp(e)));\n        this._register(mouseEvents.onMouseLeave(this.viewHelper.viewDomNode, (e) => this._onMouseLeave(e)));\n        // `pointerdown` events can't be used to determine if there's a double click, or triple click\n        // because their `e.detail` is always 0.\n        // We will therefore save the pointer id for the mouse and then reuse it in the `mousedown` event\n        // for `element.setPointerCapture`.\n        let capturePointerId = 0;\n        this._register(mouseEvents.onPointerDown(this.viewHelper.viewDomNode, (e, pointerId) => {\n            capturePointerId = pointerId;\n        }));\n        // The `pointerup` listener registered by `GlobalEditorPointerMoveMonitor` does not get invoked 100% of the times.\n        // I speculate that this is because the `pointerup` listener is only registered during the `mousedown` event, and perhaps\n        // the `pointerup` event is already queued for dispatching, which makes it that the new listener doesn't get fired.\n        // See https://github.com/microsoft/vscode/issues/146486 for repro steps.\n        // To compensate for that, we simply register here a `pointerup` listener and just communicate it.\n        this._register(dom.addDisposableListener(this.viewHelper.viewDomNode, dom.EventType.POINTER_UP, (e) => {\n            this._mouseDownOperation.onPointerUp();\n        }));\n        this._register(mouseEvents.onMouseDown(this.viewHelper.viewDomNode, (e) => this._onMouseDown(e, capturePointerId)));\n        this._setupMouseWheelZoomListener();\n        this._context.addEventHandler(this);\n    }\n    _setupMouseWheelZoomListener() {\n        const classifier = MouseWheelClassifier.INSTANCE;\n        let prevMouseWheelTime = 0;\n        let gestureStartZoomLevel = EditorZoom.getZoomLevel();\n        let gestureHasZoomModifiers = false;\n        let gestureAccumulatedDelta = 0;\n        const onMouseWheel = (browserEvent) => {\n            this.viewController.emitMouseWheel(browserEvent);\n            if (!this._context.configuration.options.get(74 /* EditorOption.mouseWheelZoom */)) {\n                return;\n            }\n            const e = new StandardWheelEvent(browserEvent);\n            classifier.acceptStandardWheelEvent(e);\n            if (classifier.isPhysicalMouseWheel()) {\n                if (hasMouseWheelZoomModifiers(browserEvent)) {\n                    const zoomLevel = EditorZoom.getZoomLevel();\n                    const delta = e.deltaY > 0 ? 1 : -1;\n                    EditorZoom.setZoomLevel(zoomLevel + delta);\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n            }\n            else {\n                // we consider mousewheel events that occur within 50ms of each other to be part of the same gesture\n                // we don't want to consider mouse wheel events where ctrl/cmd is pressed during the inertia phase\n                // we also want to accumulate deltaY values from the same gesture and use that to set the zoom level\n                if (Date.now() - prevMouseWheelTime > 50) {\n                    // reset if more than 50ms have passed\n                    gestureStartZoomLevel = EditorZoom.getZoomLevel();\n                    gestureHasZoomModifiers = hasMouseWheelZoomModifiers(browserEvent);\n                    gestureAccumulatedDelta = 0;\n                }\n                prevMouseWheelTime = Date.now();\n                gestureAccumulatedDelta += e.deltaY;\n                if (gestureHasZoomModifiers) {\n                    EditorZoom.setZoomLevel(gestureStartZoomLevel + gestureAccumulatedDelta / 5);\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n            }\n        };\n        this._register(dom.addDisposableListener(this.viewHelper.viewDomNode, dom.EventType.MOUSE_WHEEL, onMouseWheel, { capture: true, passive: false }));\n        function hasMouseWheelZoomModifiers(browserEvent) {\n            return (platform.isMacintosh\n                // on macOS we support cmd + two fingers scroll (`metaKey` set)\n                // and also the two fingers pinch gesture (`ctrKey` set)\n                ? ((browserEvent.metaKey || browserEvent.ctrlKey) && !browserEvent.shiftKey && !browserEvent.altKey)\n                : (browserEvent.ctrlKey && !browserEvent.metaKey && !browserEvent.shiftKey && !browserEvent.altKey));\n        }\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        if (this._mouseLeaveMonitor) {\n            this._mouseLeaveMonitor.dispose();\n            this._mouseLeaveMonitor = null;\n        }\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        if (e.hasChanged(142 /* EditorOption.layoutInfo */)) {\n            // layout change\n            const height = this._context.configuration.options.get(142 /* EditorOption.layoutInfo */).height;\n            if (this._height !== height) {\n                this._height = height;\n                this._mouseDownOperation.onHeightChanged();\n            }\n        }\n        return false;\n    }\n    onCursorStateChanged(e) {\n        this._mouseDownOperation.onCursorStateChanged(e);\n        return false;\n    }\n    onFocusChanged(e) {\n        return false;\n    }\n    // --- end event handlers\n    getTargetAtClientPoint(clientX, clientY) {\n        const clientPos = new ClientCoordinates(clientX, clientY);\n        const pos = clientPos.toPageCoordinates();\n        const editorPos = createEditorPagePosition(this.viewHelper.viewDomNode);\n        if (pos.y < editorPos.y || pos.y > editorPos.y + editorPos.height || pos.x < editorPos.x || pos.x > editorPos.x + editorPos.width) {\n            return null;\n        }\n        const relativePos = createCoordinatesRelativeToEditor(this.viewHelper.viewDomNode, editorPos, pos);\n        return this.mouseTargetFactory.createMouseTarget(this.viewHelper.getLastRenderData(), editorPos, pos, relativePos, null);\n    }\n    _createMouseTarget(e, testEventTarget) {\n        let target = e.target;\n        if (!this.viewHelper.viewDomNode.contains(target)) {\n            const shadowRoot = dom.getShadowRoot(this.viewHelper.viewDomNode);\n            if (shadowRoot) {\n                target = shadowRoot.elementsFromPoint(e.posx, e.posy).find((el) => this.viewHelper.viewDomNode.contains(el));\n            }\n        }\n        return this.mouseTargetFactory.createMouseTarget(this.viewHelper.getLastRenderData(), e.editorPos, e.pos, e.relativePos, testEventTarget ? target : null);\n    }\n    _getMouseColumn(e) {\n        return this.mouseTargetFactory.getMouseColumn(e.relativePos);\n    }\n    _onContextMenu(e, testEventTarget) {\n        this.viewController.emitContextMenu({\n            event: e,\n            target: this._createMouseTarget(e, testEventTarget)\n        });\n    }\n    _onMouseMove(e) {\n        const targetIsWidget = this.mouseTargetFactory.mouseTargetIsWidget(e);\n        if (!targetIsWidget) {\n            e.preventDefault();\n        }\n        if (this._mouseDownOperation.isActive()) {\n            // In selection/drag operation\n            return;\n        }\n        const actualMouseMoveTime = e.timestamp;\n        if (actualMouseMoveTime < this.lastMouseLeaveTime) {\n            // Due to throttling, this event occurred before the mouse left the editor, therefore ignore it.\n            return;\n        }\n        this.viewController.emitMouseMove({\n            event: e,\n            target: this._createMouseTarget(e, true)\n        });\n    }\n    _onMouseLeave(e) {\n        if (this._mouseLeaveMonitor) {\n            this._mouseLeaveMonitor.dispose();\n            this._mouseLeaveMonitor = null;\n        }\n        this.lastMouseLeaveTime = (new Date()).getTime();\n        this.viewController.emitMouseLeave({\n            event: e,\n            target: null\n        });\n    }\n    _onMouseUp(e) {\n        this.viewController.emitMouseUp({\n            event: e,\n            target: this._createMouseTarget(e, true)\n        });\n    }\n    _onMouseDown(e, pointerId) {\n        const t = this._createMouseTarget(e, true);\n        const targetIsContent = (t.type === 6 /* MouseTargetType.CONTENT_TEXT */ || t.type === 7 /* MouseTargetType.CONTENT_EMPTY */);\n        const targetIsGutter = (t.type === 2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */ || t.type === 3 /* MouseTargetType.GUTTER_LINE_NUMBERS */ || t.type === 4 /* MouseTargetType.GUTTER_LINE_DECORATIONS */);\n        const targetIsLineNumbers = (t.type === 3 /* MouseTargetType.GUTTER_LINE_NUMBERS */);\n        const selectOnLineNumbers = this._context.configuration.options.get(107 /* EditorOption.selectOnLineNumbers */);\n        const targetIsViewZone = (t.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */ || t.type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */);\n        const targetIsWidget = (t.type === 9 /* MouseTargetType.CONTENT_WIDGET */);\n        let shouldHandle = e.leftButton || e.middleButton;\n        if (platform.isMacintosh && e.leftButton && e.ctrlKey) {\n            shouldHandle = false;\n        }\n        const focus = () => {\n            e.preventDefault();\n            this.viewHelper.focusTextArea();\n        };\n        if (shouldHandle && (targetIsContent || (targetIsLineNumbers && selectOnLineNumbers))) {\n            focus();\n            this._mouseDownOperation.start(t.type, e, pointerId);\n        }\n        else if (targetIsGutter) {\n            // Do not steal focus\n            e.preventDefault();\n        }\n        else if (targetIsViewZone) {\n            const viewZoneData = t.detail;\n            if (shouldHandle && this.viewHelper.shouldSuppressMouseDownOnViewZone(viewZoneData.viewZoneId)) {\n                focus();\n                this._mouseDownOperation.start(t.type, e, pointerId);\n                e.preventDefault();\n            }\n        }\n        else if (targetIsWidget && this.viewHelper.shouldSuppressMouseDownOnWidget(t.detail)) {\n            focus();\n            e.preventDefault();\n        }\n        this.viewController.emitMouseDown({\n            event: e,\n            target: t\n        });\n    }\n}\nclass MouseDownOperation extends Disposable {\n    constructor(_context, _viewController, _viewHelper, _mouseTargetFactory, createMouseTarget, getMouseColumn) {\n        super();\n        this._context = _context;\n        this._viewController = _viewController;\n        this._viewHelper = _viewHelper;\n        this._mouseTargetFactory = _mouseTargetFactory;\n        this._createMouseTarget = createMouseTarget;\n        this._getMouseColumn = getMouseColumn;\n        this._mouseMoveMonitor = this._register(new GlobalEditorPointerMoveMonitor(this._viewHelper.viewDomNode));\n        this._topBottomDragScrolling = this._register(new TopBottomDragScrolling(this._context, this._viewHelper, this._mouseTargetFactory, (position, inSelectionMode, revealType) => this._dispatchMouse(position, inSelectionMode, revealType)));\n        this._mouseState = new MouseDownState();\n        this._currentSelection = new Selection(1, 1, 1, 1);\n        this._isActive = false;\n        this._lastMouseEvent = null;\n    }\n    dispose() {\n        super.dispose();\n    }\n    isActive() {\n        return this._isActive;\n    }\n    _onMouseDownThenMove(e) {\n        this._lastMouseEvent = e;\n        this._mouseState.setModifiers(e);\n        const position = this._findMousePosition(e, false);\n        if (!position) {\n            // Ignoring because position is unknown\n            return;\n        }\n        if (this._mouseState.isDragAndDrop) {\n            this._viewController.emitMouseDrag({\n                event: e,\n                target: position\n            });\n        }\n        else {\n            if (position.type === 13 /* MouseTargetType.OUTSIDE_EDITOR */ && (position.outsidePosition === 'above' || position.outsidePosition === 'below')) {\n                this._topBottomDragScrolling.start(position, e);\n            }\n            else {\n                this._topBottomDragScrolling.stop();\n                this._dispatchMouse(position, true, 1 /* NavigationCommandRevealType.Minimal */);\n            }\n        }\n    }\n    start(targetType, e, pointerId) {\n        this._lastMouseEvent = e;\n        this._mouseState.setStartedOnLineNumbers(targetType === 3 /* MouseTargetType.GUTTER_LINE_NUMBERS */);\n        this._mouseState.setStartButtons(e);\n        this._mouseState.setModifiers(e);\n        const position = this._findMousePosition(e, true);\n        if (!position || !position.position) {\n            // Ignoring because position is unknown\n            return;\n        }\n        this._mouseState.trySetCount(e.detail, position.position);\n        // Overwrite the detail of the MouseEvent, as it will be sent out in an event and contributions might rely on it.\n        e.detail = this._mouseState.count;\n        const options = this._context.configuration.options;\n        if (!options.get(89 /* EditorOption.readOnly */)\n            && options.get(34 /* EditorOption.dragAndDrop */)\n            && !options.get(21 /* EditorOption.columnSelection */)\n            && !this._mouseState.altKey // we don't support multiple mouse\n            && e.detail < 2 // only single click on a selection can work\n            && !this._isActive // the mouse is not down yet\n            && !this._currentSelection.isEmpty() // we don't drag single cursor\n            && (position.type === 6 /* MouseTargetType.CONTENT_TEXT */) // single click on text\n            && position.position && this._currentSelection.containsPosition(position.position) // single click on a selection\n        ) {\n            this._mouseState.isDragAndDrop = true;\n            this._isActive = true;\n            this._mouseMoveMonitor.startMonitoring(this._viewHelper.viewLinesDomNode, pointerId, e.buttons, (e) => this._onMouseDownThenMove(e), (browserEvent) => {\n                const position = this._findMousePosition(this._lastMouseEvent, false);\n                if (browserEvent && browserEvent instanceof KeyboardEvent) {\n                    // cancel\n                    this._viewController.emitMouseDropCanceled();\n                }\n                else {\n                    this._viewController.emitMouseDrop({\n                        event: this._lastMouseEvent,\n                        target: (position ? this._createMouseTarget(this._lastMouseEvent, true) : null) // Ignoring because position is unknown, e.g., Content View Zone\n                    });\n                }\n                this._stop();\n            });\n            return;\n        }\n        this._mouseState.isDragAndDrop = false;\n        this._dispatchMouse(position, e.shiftKey, 1 /* NavigationCommandRevealType.Minimal */);\n        if (!this._isActive) {\n            this._isActive = true;\n            this._mouseMoveMonitor.startMonitoring(this._viewHelper.viewLinesDomNode, pointerId, e.buttons, (e) => this._onMouseDownThenMove(e), () => this._stop());\n        }\n    }\n    _stop() {\n        this._isActive = false;\n        this._topBottomDragScrolling.stop();\n    }\n    onHeightChanged() {\n        this._mouseMoveMonitor.stopMonitoring();\n    }\n    onPointerUp() {\n        this._mouseMoveMonitor.stopMonitoring();\n    }\n    onCursorStateChanged(e) {\n        this._currentSelection = e.selections[0];\n    }\n    _getPositionOutsideEditor(e) {\n        const editorContent = e.editorPos;\n        const model = this._context.viewModel;\n        const viewLayout = this._context.viewLayout;\n        const mouseColumn = this._getMouseColumn(e);\n        if (e.posy < editorContent.y) {\n            const outsideDistance = editorContent.y - e.posy;\n            const verticalOffset = Math.max(viewLayout.getCurrentScrollTop() - outsideDistance, 0);\n            const viewZoneData = HitTestContext.getZoneAtCoord(this._context, verticalOffset);\n            if (viewZoneData) {\n                const newPosition = this._helpPositionJumpOverViewZone(viewZoneData);\n                if (newPosition) {\n                    return MouseTarget.createOutsideEditor(mouseColumn, newPosition, 'above', outsideDistance);\n                }\n            }\n            const aboveLineNumber = viewLayout.getLineNumberAtVerticalOffset(verticalOffset);\n            return MouseTarget.createOutsideEditor(mouseColumn, new Position(aboveLineNumber, 1), 'above', outsideDistance);\n        }\n        if (e.posy > editorContent.y + editorContent.height) {\n            const outsideDistance = e.posy - editorContent.y - editorContent.height;\n            const verticalOffset = viewLayout.getCurrentScrollTop() + e.relativePos.y;\n            const viewZoneData = HitTestContext.getZoneAtCoord(this._context, verticalOffset);\n            if (viewZoneData) {\n                const newPosition = this._helpPositionJumpOverViewZone(viewZoneData);\n                if (newPosition) {\n                    return MouseTarget.createOutsideEditor(mouseColumn, newPosition, 'below', outsideDistance);\n                }\n            }\n            const belowLineNumber = viewLayout.getLineNumberAtVerticalOffset(verticalOffset);\n            return MouseTarget.createOutsideEditor(mouseColumn, new Position(belowLineNumber, model.getLineMaxColumn(belowLineNumber)), 'below', outsideDistance);\n        }\n        const possibleLineNumber = viewLayout.getLineNumberAtVerticalOffset(viewLayout.getCurrentScrollTop() + e.relativePos.y);\n        if (e.posx < editorContent.x) {\n            const outsideDistance = editorContent.x - e.posx;\n            return MouseTarget.createOutsideEditor(mouseColumn, new Position(possibleLineNumber, 1), 'left', outsideDistance);\n        }\n        if (e.posx > editorContent.x + editorContent.width) {\n            const outsideDistance = e.posx - editorContent.x - editorContent.width;\n            return MouseTarget.createOutsideEditor(mouseColumn, new Position(possibleLineNumber, model.getLineMaxColumn(possibleLineNumber)), 'right', outsideDistance);\n        }\n        return null;\n    }\n    _findMousePosition(e, testEventTarget) {\n        const positionOutsideEditor = this._getPositionOutsideEditor(e);\n        if (positionOutsideEditor) {\n            return positionOutsideEditor;\n        }\n        const t = this._createMouseTarget(e, testEventTarget);\n        const hintedPosition = t.position;\n        if (!hintedPosition) {\n            return null;\n        }\n        if (t.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */ || t.type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */) {\n            const newPosition = this._helpPositionJumpOverViewZone(t.detail);\n            if (newPosition) {\n                return MouseTarget.createViewZone(t.type, t.element, t.mouseColumn, newPosition, t.detail);\n            }\n        }\n        return t;\n    }\n    _helpPositionJumpOverViewZone(viewZoneData) {\n        // Force position on view zones to go above or below depending on where selection started from\n        const selectionStart = new Position(this._currentSelection.selectionStartLineNumber, this._currentSelection.selectionStartColumn);\n        const positionBefore = viewZoneData.positionBefore;\n        const positionAfter = viewZoneData.positionAfter;\n        if (positionBefore && positionAfter) {\n            if (positionBefore.isBefore(selectionStart)) {\n                return positionBefore;\n            }\n            else {\n                return positionAfter;\n            }\n        }\n        return null;\n    }\n    _dispatchMouse(position, inSelectionMode, revealType) {\n        if (!position.position) {\n            return;\n        }\n        this._viewController.dispatchMouse({\n            position: position.position,\n            mouseColumn: position.mouseColumn,\n            startedOnLineNumbers: this._mouseState.startedOnLineNumbers,\n            revealType,\n            inSelectionMode: inSelectionMode,\n            mouseDownCount: this._mouseState.count,\n            altKey: this._mouseState.altKey,\n            ctrlKey: this._mouseState.ctrlKey,\n            metaKey: this._mouseState.metaKey,\n            shiftKey: this._mouseState.shiftKey,\n            leftButton: this._mouseState.leftButton,\n            middleButton: this._mouseState.middleButton,\n            onInjectedText: position.type === 6 /* MouseTargetType.CONTENT_TEXT */ && position.detail.injectedText !== null\n        });\n    }\n}\nclass TopBottomDragScrolling extends Disposable {\n    constructor(_context, _viewHelper, _mouseTargetFactory, _dispatchMouse) {\n        super();\n        this._context = _context;\n        this._viewHelper = _viewHelper;\n        this._mouseTargetFactory = _mouseTargetFactory;\n        this._dispatchMouse = _dispatchMouse;\n        this._operation = null;\n    }\n    dispose() {\n        super.dispose();\n        this.stop();\n    }\n    start(position, mouseEvent) {\n        if (this._operation) {\n            this._operation.setPosition(position, mouseEvent);\n        }\n        else {\n            this._operation = new TopBottomDragScrollingOperation(this._context, this._viewHelper, this._mouseTargetFactory, this._dispatchMouse, position, mouseEvent);\n        }\n    }\n    stop() {\n        if (this._operation) {\n            this._operation.dispose();\n            this._operation = null;\n        }\n    }\n}\nclass TopBottomDragScrollingOperation extends Disposable {\n    constructor(_context, _viewHelper, _mouseTargetFactory, _dispatchMouse, position, mouseEvent) {\n        super();\n        this._context = _context;\n        this._viewHelper = _viewHelper;\n        this._mouseTargetFactory = _mouseTargetFactory;\n        this._dispatchMouse = _dispatchMouse;\n        this._position = position;\n        this._mouseEvent = mouseEvent;\n        this._lastTime = Date.now();\n        this._animationFrameDisposable = dom.scheduleAtNextAnimationFrame(() => this._execute());\n    }\n    dispose() {\n        this._animationFrameDisposable.dispose();\n    }\n    setPosition(position, mouseEvent) {\n        this._position = position;\n        this._mouseEvent = mouseEvent;\n    }\n    /**\n     * update internal state and return elapsed ms since last time\n     */\n    _tick() {\n        const now = Date.now();\n        const elapsed = now - this._lastTime;\n        this._lastTime = now;\n        return elapsed;\n    }\n    /**\n     * get the number of lines per second to auto-scroll\n     */\n    _getScrollSpeed() {\n        const lineHeight = this._context.configuration.options.get(65 /* EditorOption.lineHeight */);\n        const viewportInLines = this._context.configuration.options.get(142 /* EditorOption.layoutInfo */).height / lineHeight;\n        const outsideDistanceInLines = this._position.outsideDistance / lineHeight;\n        if (outsideDistanceInLines <= 1.5) {\n            return Math.max(30, viewportInLines * (1 + outsideDistanceInLines));\n        }\n        if (outsideDistanceInLines <= 3) {\n            return Math.max(60, viewportInLines * (2 + outsideDistanceInLines));\n        }\n        return Math.max(200, viewportInLines * (7 + outsideDistanceInLines));\n    }\n    _execute() {\n        const lineHeight = this._context.configuration.options.get(65 /* EditorOption.lineHeight */);\n        const scrollSpeedInLines = this._getScrollSpeed();\n        const elapsed = this._tick();\n        const scrollInPixels = scrollSpeedInLines * (elapsed / 1000) * lineHeight;\n        const scrollValue = (this._position.outsidePosition === 'above' ? -scrollInPixels : scrollInPixels);\n        this._context.viewModel.viewLayout.deltaScrollNow(0, scrollValue);\n        this._viewHelper.renderNow();\n        const viewportData = this._context.viewLayout.getLinesViewportData();\n        const edgeLineNumber = (this._position.outsidePosition === 'above' ? viewportData.startLineNumber : viewportData.endLineNumber);\n        // First, try to find a position that matches the horizontal position of the mouse\n        let mouseTarget;\n        {\n            const editorPos = createEditorPagePosition(this._viewHelper.viewDomNode);\n            const horizontalScrollbarHeight = this._context.configuration.options.get(142 /* EditorOption.layoutInfo */).horizontalScrollbarHeight;\n            const pos = new PageCoordinates(this._mouseEvent.pos.x, editorPos.y + editorPos.height - horizontalScrollbarHeight - 0.1);\n            const relativePos = createCoordinatesRelativeToEditor(this._viewHelper.viewDomNode, editorPos, pos);\n            mouseTarget = this._mouseTargetFactory.createMouseTarget(this._viewHelper.getLastRenderData(), editorPos, pos, relativePos, null);\n        }\n        if (!mouseTarget.position || mouseTarget.position.lineNumber !== edgeLineNumber) {\n            if (this._position.outsidePosition === 'above') {\n                mouseTarget = MouseTarget.createOutsideEditor(this._position.mouseColumn, new Position(edgeLineNumber, 1), 'above', this._position.outsideDistance);\n            }\n            else {\n                mouseTarget = MouseTarget.createOutsideEditor(this._position.mouseColumn, new Position(edgeLineNumber, this._context.viewModel.getLineMaxColumn(edgeLineNumber)), 'below', this._position.outsideDistance);\n            }\n        }\n        this._dispatchMouse(mouseTarget, true, 2 /* NavigationCommandRevealType.None */);\n        this._animationFrameDisposable = dom.scheduleAtNextAnimationFrame(() => this._execute());\n    }\n}\nclass MouseDownState {\n    get altKey() { return this._altKey; }\n    get ctrlKey() { return this._ctrlKey; }\n    get metaKey() { return this._metaKey; }\n    get shiftKey() { return this._shiftKey; }\n    get leftButton() { return this._leftButton; }\n    get middleButton() { return this._middleButton; }\n    get startedOnLineNumbers() { return this._startedOnLineNumbers; }\n    constructor() {\n        this._altKey = false;\n        this._ctrlKey = false;\n        this._metaKey = false;\n        this._shiftKey = false;\n        this._leftButton = false;\n        this._middleButton = false;\n        this._startedOnLineNumbers = false;\n        this._lastMouseDownPosition = null;\n        this._lastMouseDownPositionEqualCount = 0;\n        this._lastMouseDownCount = 0;\n        this._lastSetMouseDownCountTime = 0;\n        this.isDragAndDrop = false;\n    }\n    get count() {\n        return this._lastMouseDownCount;\n    }\n    setModifiers(source) {\n        this._altKey = source.altKey;\n        this._ctrlKey = source.ctrlKey;\n        this._metaKey = source.metaKey;\n        this._shiftKey = source.shiftKey;\n    }\n    setStartButtons(source) {\n        this._leftButton = source.leftButton;\n        this._middleButton = source.middleButton;\n    }\n    setStartedOnLineNumbers(startedOnLineNumbers) {\n        this._startedOnLineNumbers = startedOnLineNumbers;\n    }\n    trySetCount(setMouseDownCount, newMouseDownPosition) {\n        // a. Invalidate multiple clicking if too much time has passed (will be hit by IE because the detail field of mouse events contains garbage in IE10)\n        const currentTime = (new Date()).getTime();\n        if (currentTime - this._lastSetMouseDownCountTime > MouseDownState.CLEAR_MOUSE_DOWN_COUNT_TIME) {\n            setMouseDownCount = 1;\n        }\n        this._lastSetMouseDownCountTime = currentTime;\n        // b. Ensure that we don't jump from single click to triple click in one go (will be hit by IE because the detail field of mouse events contains garbage in IE10)\n        if (setMouseDownCount > this._lastMouseDownCount + 1) {\n            setMouseDownCount = this._lastMouseDownCount + 1;\n        }\n        // c. Invalidate multiple clicking if the logical position is different\n        if (this._lastMouseDownPosition && this._lastMouseDownPosition.equals(newMouseDownPosition)) {\n            this._lastMouseDownPositionEqualCount++;\n        }\n        else {\n            this._lastMouseDownPositionEqualCount = 1;\n        }\n        this._lastMouseDownPosition = newMouseDownPosition;\n        // Finally set the lastMouseDownCount\n        this._lastMouseDownCount = Math.min(setMouseDownCount, this._lastMouseDownPositionEqualCount);\n    }\n}\nMouseDownState.CLEAR_MOUSE_DOWN_COUNT_TIME = 400; // ms\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { EventType, Gesture } from '../../../base/browser/touch.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { MouseHandler } from './mouseHandler.js';\nimport { EditorMouseEvent, EditorPointerEventFactory } from '../editorDom.js';\nimport { BrowserFeatures } from '../../../base/browser/canIUse.js';\nimport { TextAreaSyntethicEvents } from './textAreaInput.js';\n/**\n * Currently only tested on iOS 13/ iPadOS.\n */\nexport class PointerEventHandler extends MouseHandler {\n    constructor(context, viewController, viewHelper) {\n        super(context, viewController, viewHelper);\n        this._register(Gesture.addTarget(this.viewHelper.linesContentDomNode));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Tap, (e) => this.onTap(e)));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Change, (e) => this.onChange(e)));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Contextmenu, (e) => this._onContextMenu(new EditorMouseEvent(e, false, this.viewHelper.viewDomNode), false)));\n        this._lastPointerType = 'mouse';\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, 'pointerdown', (e) => {\n            const pointerType = e.pointerType;\n            if (pointerType === 'mouse') {\n                this._lastPointerType = 'mouse';\n                return;\n            }\n            else if (pointerType === 'touch') {\n                this._lastPointerType = 'touch';\n            }\n            else {\n                this._lastPointerType = 'pen';\n            }\n        }));\n        // PonterEvents\n        const pointerEvents = new EditorPointerEventFactory(this.viewHelper.viewDomNode);\n        this._register(pointerEvents.onPointerMove(this.viewHelper.viewDomNode, (e) => this._onMouseMove(e)));\n        this._register(pointerEvents.onPointerUp(this.viewHelper.viewDomNode, (e) => this._onMouseUp(e)));\n        this._register(pointerEvents.onPointerLeave(this.viewHelper.viewDomNode, (e) => this._onMouseLeave(e)));\n        this._register(pointerEvents.onPointerDown(this.viewHelper.viewDomNode, (e, pointerId) => this._onMouseDown(e, pointerId)));\n    }\n    onTap(event) {\n        if (!event.initialTarget || !this.viewHelper.linesContentDomNode.contains(event.initialTarget)) {\n            return;\n        }\n        event.preventDefault();\n        this.viewHelper.focusTextArea();\n        const target = this._createMouseTarget(new EditorMouseEvent(event, false, this.viewHelper.viewDomNode), false);\n        if (target.position) {\n            // this.viewController.moveTo(target.position);\n            this.viewController.dispatchMouse({\n                position: target.position,\n                mouseColumn: target.position.column,\n                startedOnLineNumbers: false,\n                revealType: 1 /* NavigationCommandRevealType.Minimal */,\n                mouseDownCount: event.tapCount,\n                inSelectionMode: false,\n                altKey: false,\n                ctrlKey: false,\n                metaKey: false,\n                shiftKey: false,\n                leftButton: false,\n                middleButton: false,\n                onInjectedText: target.type === 6 /* MouseTargetType.CONTENT_TEXT */ && target.detail.injectedText !== null\n            });\n        }\n    }\n    onChange(e) {\n        if (this._lastPointerType === 'touch') {\n            this._context.viewModel.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\n        }\n    }\n    _onMouseDown(e, pointerId) {\n        if (e.browserEvent.pointerType === 'touch') {\n            return;\n        }\n        super._onMouseDown(e, pointerId);\n    }\n}\nclass TouchHandler extends MouseHandler {\n    constructor(context, viewController, viewHelper) {\n        super(context, viewController, viewHelper);\n        this._register(Gesture.addTarget(this.viewHelper.linesContentDomNode));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Tap, (e) => this.onTap(e)));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Change, (e) => this.onChange(e)));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Contextmenu, (e) => this._onContextMenu(new EditorMouseEvent(e, false, this.viewHelper.viewDomNode), false)));\n    }\n    onTap(event) {\n        event.preventDefault();\n        this.viewHelper.focusTextArea();\n        const target = this._createMouseTarget(new EditorMouseEvent(event, false, this.viewHelper.viewDomNode), false);\n        if (target.position) {\n            // Send the tap event also to the <textarea> (for input purposes)\n            const event = document.createEvent('CustomEvent');\n            event.initEvent(TextAreaSyntethicEvents.Tap, false, true);\n            this.viewHelper.dispatchTextAreaEvent(event);\n            this.viewController.moveTo(target.position, 1 /* NavigationCommandRevealType.Minimal */);\n        }\n    }\n    onChange(e) {\n        this._context.viewModel.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\n    }\n}\nexport class PointerHandler extends Disposable {\n    constructor(context, viewController, viewHelper) {\n        super();\n        if ((platform.isIOS && BrowserFeatures.pointerEvents)) {\n            this.handler = this._register(new PointerEventHandler(context, viewController, viewHelper));\n        }\n        else if (window.TouchEvent) {\n            this.handler = this._register(new TouchHandler(context, viewController, viewHelper));\n        }\n        else {\n            this.handler = this._register(new MouseHandler(context, viewController, viewHelper));\n        }\n    }\n    getTargetAtClientPoint(clientX, clientY) {\n        return this.handler.getTargetAtClientPoint(clientX, clientY);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport './textAreaHandler.css';\nimport * as nls from '../../../nls.js';\nimport * as browser from '../../../base/browser/browser.js';\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport * as platform from '../../../base/common/platform.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { CopyOptions, TextAreaInput, TextAreaWrapper } from './textAreaInput.js';\nimport { PagedScreenReaderStrategy, TextAreaState, _debugComposition } from './textAreaState.js';\nimport { PartFingerprints, ViewPart } from '../view/viewPart.js';\nimport { LineNumbersOverlay } from '../viewParts/lineNumbers/lineNumbers.js';\nimport { Margin } from '../viewParts/margin/margin.js';\nimport { EditorOptions } from '../../common/config/editorOptions.js';\nimport { getMapForWordSeparators } from '../../common/core/wordCharacterClassifier.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../base/browser/ui/mouseCursor/mouseCursor.js';\nimport { TokenizationRegistry } from '../../common/languages.js';\nimport { Color } from '../../../base/common/color.js';\nimport { IME } from '../../../base/common/ime.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nclass VisibleTextAreaData {\n    constructor(_context, modelLineNumber, distanceToModelLineStart, widthOfHiddenLineTextBefore, distanceToModelLineEnd) {\n        this._context = _context;\n        this.modelLineNumber = modelLineNumber;\n        this.distanceToModelLineStart = distanceToModelLineStart;\n        this.widthOfHiddenLineTextBefore = widthOfHiddenLineTextBefore;\n        this.distanceToModelLineEnd = distanceToModelLineEnd;\n        this._visibleTextAreaBrand = undefined;\n        this.startPosition = null;\n        this.endPosition = null;\n        this.visibleTextareaStart = null;\n        this.visibleTextareaEnd = null;\n        /**\n         * When doing composition, the currently composed text might be split up into\n         * multiple tokens, then merged again into a single token, etc. Here we attempt\n         * to keep the presentation of the <textarea> stable by using the previous used\n         * style if multiple tokens come into play. This avoids flickering.\n         */\n        this._previousPresentation = null;\n    }\n    prepareRender(visibleRangeProvider) {\n        const startModelPosition = new Position(this.modelLineNumber, this.distanceToModelLineStart + 1);\n        const endModelPosition = new Position(this.modelLineNumber, this._context.viewModel.model.getLineMaxColumn(this.modelLineNumber) - this.distanceToModelLineEnd);\n        this.startPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(startModelPosition);\n        this.endPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(endModelPosition);\n        if (this.startPosition.lineNumber === this.endPosition.lineNumber) {\n            this.visibleTextareaStart = visibleRangeProvider.visibleRangeForPosition(this.startPosition);\n            this.visibleTextareaEnd = visibleRangeProvider.visibleRangeForPosition(this.endPosition);\n        }\n        else {\n            // TODO: what if the view positions are not on the same line?\n            this.visibleTextareaStart = null;\n            this.visibleTextareaEnd = null;\n        }\n    }\n    definePresentation(tokenPresentation) {\n        if (!this._previousPresentation) {\n            // To avoid flickering, once set, always reuse a presentation throughout the entire IME session\n            if (tokenPresentation) {\n                this._previousPresentation = tokenPresentation;\n            }\n            else {\n                this._previousPresentation = {\n                    foreground: 1 /* ColorId.DefaultForeground */,\n                    italic: false,\n                    bold: false,\n                    underline: false,\n                    strikethrough: false,\n                };\n            }\n        }\n        return this._previousPresentation;\n    }\n}\nconst canUseZeroSizeTextarea = (browser.isFirefox);\nlet TextAreaHandler = class TextAreaHandler extends ViewPart {\n    constructor(context, viewController, visibleRangeProvider, _keybindingService) {\n        super(context);\n        this._keybindingService = _keybindingService;\n        this._primaryCursorPosition = new Position(1, 1);\n        this._primaryCursorVisibleRange = null;\n        this._viewController = viewController;\n        this._visibleRangeProvider = visibleRangeProvider;\n        this._scrollLeft = 0;\n        this._scrollTop = 0;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(142 /* EditorOption.layoutInfo */);\n        this._setAccessibilityOptions(options);\n        this._contentLeft = layoutInfo.contentLeft;\n        this._contentWidth = layoutInfo.contentWidth;\n        this._contentHeight = layoutInfo.height;\n        this._fontInfo = options.get(49 /* EditorOption.fontInfo */);\n        this._lineHeight = options.get(65 /* EditorOption.lineHeight */);\n        this._emptySelectionClipboard = options.get(36 /* EditorOption.emptySelectionClipboard */);\n        this._copyWithSyntaxHighlighting = options.get(24 /* EditorOption.copyWithSyntaxHighlighting */);\n        this._visibleTextArea = null;\n        this._selections = [new Selection(1, 1, 1, 1)];\n        this._modelSelections = [new Selection(1, 1, 1, 1)];\n        this._lastRenderPosition = null;\n        // Text Area (The focus will always be in the textarea when the cursor is blinking)\n        this.textArea = createFastDomNode(document.createElement('textarea'));\n        PartFingerprints.write(this.textArea, 6 /* PartFingerprint.TextArea */);\n        this.textArea.setClassName(`inputarea ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n        this.textArea.setAttribute('wrap', this._textAreaWrapping && !this._visibleTextArea ? 'on' : 'off');\n        const { tabSize } = this._context.viewModel.model.getOptions();\n        this.textArea.domNode.style.tabSize = `${tabSize * this._fontInfo.spaceWidth}px`;\n        this.textArea.setAttribute('autocorrect', 'off');\n        this.textArea.setAttribute('autocapitalize', 'off');\n        this.textArea.setAttribute('autocomplete', 'off');\n        this.textArea.setAttribute('spellcheck', 'false');\n        this.textArea.setAttribute('aria-label', this._getAriaLabel(options));\n        this.textArea.setAttribute('aria-required', options.get(5 /* EditorOption.ariaRequired */) ? 'true' : 'false');\n        this.textArea.setAttribute('tabindex', String(options.get(122 /* EditorOption.tabIndex */)));\n        this.textArea.setAttribute('role', 'textbox');\n        this.textArea.setAttribute('aria-roledescription', nls.localize('editor', \"editor\"));\n        this.textArea.setAttribute('aria-multiline', 'true');\n        this.textArea.setAttribute('aria-haspopup', 'false');\n        this.textArea.setAttribute('aria-autocomplete', 'both');\n        this._ensureReadOnlyAttribute();\n        this.textAreaCover = createFastDomNode(document.createElement('div'));\n        this.textAreaCover.setPosition('absolute');\n        const simpleModel = {\n            getLineCount: () => {\n                return this._context.viewModel.getLineCount();\n            },\n            getLineMaxColumn: (lineNumber) => {\n                return this._context.viewModel.getLineMaxColumn(lineNumber);\n            },\n            getValueInRange: (range, eol) => {\n                return this._context.viewModel.getValueInRange(range, eol);\n            },\n            getValueLengthInRange: (range, eol) => {\n                return this._context.viewModel.getValueLengthInRange(range, eol);\n            },\n            modifyPosition: (position, offset) => {\n                return this._context.viewModel.modifyPosition(position, offset);\n            }\n        };\n        const textAreaInputHost = {\n            getDataToCopy: () => {\n                const rawTextToCopy = this._context.viewModel.getPlainTextToCopy(this._modelSelections, this._emptySelectionClipboard, platform.isWindows);\n                const newLineCharacter = this._context.viewModel.model.getEOL();\n                const isFromEmptySelection = (this._emptySelectionClipboard && this._modelSelections.length === 1 && this._modelSelections[0].isEmpty());\n                const multicursorText = (Array.isArray(rawTextToCopy) ? rawTextToCopy : null);\n                const text = (Array.isArray(rawTextToCopy) ? rawTextToCopy.join(newLineCharacter) : rawTextToCopy);\n                let html = undefined;\n                let mode = null;\n                if (CopyOptions.forceCopyWithSyntaxHighlighting || (this._copyWithSyntaxHighlighting && text.length < 65536)) {\n                    const richText = this._context.viewModel.getRichTextToCopy(this._modelSelections, this._emptySelectionClipboard);\n                    if (richText) {\n                        html = richText.html;\n                        mode = richText.mode;\n                    }\n                }\n                return {\n                    isFromEmptySelection,\n                    multicursorText,\n                    text,\n                    html,\n                    mode\n                };\n            },\n            getScreenReaderContent: () => {\n                if (this._accessibilitySupport === 1 /* AccessibilitySupport.Disabled */) {\n                    // We know for a fact that a screen reader is not attached\n                    // On OSX, we write the character before the cursor to allow for \"long-press\" composition\n                    // Also on OSX, we write the word before the cursor to allow for the Accessibility Keyboard to give good hints\n                    const selection = this._selections[0];\n                    if (platform.isMacintosh && selection.isEmpty()) {\n                        const position = selection.getStartPosition();\n                        let textBefore = this._getWordBeforePosition(position);\n                        if (textBefore.length === 0) {\n                            textBefore = this._getCharacterBeforePosition(position);\n                        }\n                        if (textBefore.length > 0) {\n                            return new TextAreaState(textBefore, textBefore.length, textBefore.length, Range.fromPositions(position), 0);\n                        }\n                    }\n                    // on macOS, write current selection into textarea will allow system text services pick selected text,\n                    // but we still want to limit the amount of text given Chromium handles very poorly text even of a few\n                    // thousand chars\n                    // (https://github.com/microsoft/vscode/issues/27799)\n                    const LIMIT_CHARS = 500;\n                    if (platform.isMacintosh && !selection.isEmpty() && simpleModel.getValueLengthInRange(selection, 0 /* EndOfLinePreference.TextDefined */) < LIMIT_CHARS) {\n                        const text = simpleModel.getValueInRange(selection, 0 /* EndOfLinePreference.TextDefined */);\n                        return new TextAreaState(text, 0, text.length, selection, 0);\n                    }\n                    // on Safari, document.execCommand('cut') and document.execCommand('copy') will just not work\n                    // if the textarea has no content selected. So if there is an editor selection, ensure something\n                    // is selected in the textarea.\n                    if (browser.isSafari && !selection.isEmpty()) {\n                        const placeholderText = 'vscode-placeholder';\n                        return new TextAreaState(placeholderText, 0, placeholderText.length, null, undefined);\n                    }\n                    return TextAreaState.EMPTY;\n                }\n                if (browser.isAndroid) {\n                    // when tapping in the editor on a word, Android enters composition mode.\n                    // in the `compositionstart` event we cannot clear the textarea, because\n                    // it then forgets to ever send a `compositionend`.\n                    // we therefore only write the current word in the textarea\n                    const selection = this._selections[0];\n                    if (selection.isEmpty()) {\n                        const position = selection.getStartPosition();\n                        const [wordAtPosition, positionOffsetInWord] = this._getAndroidWordAtPosition(position);\n                        if (wordAtPosition.length > 0) {\n                            return new TextAreaState(wordAtPosition, positionOffsetInWord, positionOffsetInWord, Range.fromPositions(position), 0);\n                        }\n                    }\n                    return TextAreaState.EMPTY;\n                }\n                return PagedScreenReaderStrategy.fromEditorSelection(simpleModel, this._selections[0], this._accessibilityPageSize, this._accessibilitySupport === 0 /* AccessibilitySupport.Unknown */);\n            },\n            deduceModelPosition: (viewAnchorPosition, deltaOffset, lineFeedCnt) => {\n                return this._context.viewModel.deduceModelPositionRelativeToViewPosition(viewAnchorPosition, deltaOffset, lineFeedCnt);\n            }\n        };\n        const textAreaWrapper = this._register(new TextAreaWrapper(this.textArea.domNode));\n        this._textAreaInput = this._register(new TextAreaInput(textAreaInputHost, textAreaWrapper, platform.OS, {\n            isAndroid: browser.isAndroid,\n            isChrome: browser.isChrome,\n            isFirefox: browser.isFirefox,\n            isSafari: browser.isSafari,\n        }));\n        this._register(this._textAreaInput.onKeyDown((e) => {\n            this._viewController.emitKeyDown(e);\n        }));\n        this._register(this._textAreaInput.onKeyUp((e) => {\n            this._viewController.emitKeyUp(e);\n        }));\n        this._register(this._textAreaInput.onPaste((e) => {\n            let pasteOnNewLine = false;\n            let multicursorText = null;\n            let mode = null;\n            if (e.metadata) {\n                pasteOnNewLine = (this._emptySelectionClipboard && !!e.metadata.isFromEmptySelection);\n                multicursorText = (typeof e.metadata.multicursorText !== 'undefined' ? e.metadata.multicursorText : null);\n                mode = e.metadata.mode;\n            }\n            this._viewController.paste(e.text, pasteOnNewLine, multicursorText, mode);\n        }));\n        this._register(this._textAreaInput.onCut(() => {\n            this._viewController.cut();\n        }));\n        this._register(this._textAreaInput.onType((e) => {\n            if (e.replacePrevCharCnt || e.replaceNextCharCnt || e.positionDelta) {\n                // must be handled through the new command\n                if (_debugComposition) {\n                    console.log(` => compositionType: <<${e.text}>>, ${e.replacePrevCharCnt}, ${e.replaceNextCharCnt}, ${e.positionDelta}`);\n                }\n                this._viewController.compositionType(e.text, e.replacePrevCharCnt, e.replaceNextCharCnt, e.positionDelta);\n            }\n            else {\n                if (_debugComposition) {\n                    console.log(` => type: <<${e.text}>>`);\n                }\n                this._viewController.type(e.text);\n            }\n        }));\n        this._register(this._textAreaInput.onSelectionChangeRequest((modelSelection) => {\n            this._viewController.setSelection(modelSelection);\n        }));\n        this._register(this._textAreaInput.onCompositionStart((e) => {\n            // The textarea might contain some content when composition starts.\n            //\n            // When we make the textarea visible, it always has a height of 1 line,\n            // so we don't need to worry too much about content on lines above or below\n            // the selection.\n            //\n            // However, the text on the current line needs to be made visible because\n            // some IME methods allow to move to other glyphs on the current line\n            // (by pressing arrow keys).\n            //\n            // (1) The textarea might contain only some parts of the current line,\n            // like the word before the selection. Also, the content inside the textarea\n            // can grow or shrink as composition occurs. We therefore anchor the textarea\n            // in terms of distance to a certain line start and line end.\n            //\n            // (2) Also, we should not make \\t characters visible, because their rendering\n            // inside the <textarea> will not align nicely with our rendering. We therefore\n            // will hide (if necessary) some of the leading text on the current line.\n            const ta = this.textArea.domNode;\n            const modelSelection = this._modelSelections[0];\n            const { distanceToModelLineStart, widthOfHiddenTextBefore } = (() => {\n                // Find the text that is on the current line before the selection\n                const textBeforeSelection = ta.value.substring(0, Math.min(ta.selectionStart, ta.selectionEnd));\n                const lineFeedOffset1 = textBeforeSelection.lastIndexOf('\\n');\n                const lineTextBeforeSelection = textBeforeSelection.substring(lineFeedOffset1 + 1);\n                // We now search to see if we should hide some part of it (if it contains \\t)\n                const tabOffset1 = lineTextBeforeSelection.lastIndexOf('\\t');\n                const desiredVisibleBeforeCharCount = lineTextBeforeSelection.length - tabOffset1 - 1;\n                const startModelPosition = modelSelection.getStartPosition();\n                const visibleBeforeCharCount = Math.min(startModelPosition.column - 1, desiredVisibleBeforeCharCount);\n                const distanceToModelLineStart = startModelPosition.column - 1 - visibleBeforeCharCount;\n                const hiddenLineTextBefore = lineTextBeforeSelection.substring(0, lineTextBeforeSelection.length - visibleBeforeCharCount);\n                const { tabSize } = this._context.viewModel.model.getOptions();\n                const widthOfHiddenTextBefore = measureText(hiddenLineTextBefore, this._fontInfo, tabSize);\n                return { distanceToModelLineStart, widthOfHiddenTextBefore };\n            })();\n            const { distanceToModelLineEnd } = (() => {\n                // Find the text that is on the current line after the selection\n                const textAfterSelection = ta.value.substring(Math.max(ta.selectionStart, ta.selectionEnd));\n                const lineFeedOffset2 = textAfterSelection.indexOf('\\n');\n                const lineTextAfterSelection = lineFeedOffset2 === -1 ? textAfterSelection : textAfterSelection.substring(0, lineFeedOffset2);\n                const tabOffset2 = lineTextAfterSelection.indexOf('\\t');\n                const desiredVisibleAfterCharCount = (tabOffset2 === -1 ? lineTextAfterSelection.length : lineTextAfterSelection.length - tabOffset2 - 1);\n                const endModelPosition = modelSelection.getEndPosition();\n                const visibleAfterCharCount = Math.min(this._context.viewModel.model.getLineMaxColumn(endModelPosition.lineNumber) - endModelPosition.column, desiredVisibleAfterCharCount);\n                const distanceToModelLineEnd = this._context.viewModel.model.getLineMaxColumn(endModelPosition.lineNumber) - endModelPosition.column - visibleAfterCharCount;\n                return { distanceToModelLineEnd };\n            })();\n            // Scroll to reveal the location in the editor where composition occurs\n            this._context.viewModel.revealRange('keyboard', true, Range.fromPositions(this._selections[0].getStartPosition()), 0 /* viewEvents.VerticalRevealType.Simple */, 1 /* ScrollType.Immediate */);\n            this._visibleTextArea = new VisibleTextAreaData(this._context, modelSelection.startLineNumber, distanceToModelLineStart, widthOfHiddenTextBefore, distanceToModelLineEnd);\n            // We turn off wrapping if the <textarea> becomes visible for composition\n            this.textArea.setAttribute('wrap', this._textAreaWrapping && !this._visibleTextArea ? 'on' : 'off');\n            this._visibleTextArea.prepareRender(this._visibleRangeProvider);\n            this._render();\n            // Show the textarea\n            this.textArea.setClassName(`inputarea ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME} ime-input`);\n            this._viewController.compositionStart();\n            this._context.viewModel.onCompositionStart();\n        }));\n        this._register(this._textAreaInput.onCompositionUpdate((e) => {\n            if (!this._visibleTextArea) {\n                return;\n            }\n            this._visibleTextArea.prepareRender(this._visibleRangeProvider);\n            this._render();\n        }));\n        this._register(this._textAreaInput.onCompositionEnd(() => {\n            this._visibleTextArea = null;\n            // We turn on wrapping as necessary if the <textarea> hides after composition\n            this.textArea.setAttribute('wrap', this._textAreaWrapping && !this._visibleTextArea ? 'on' : 'off');\n            this._render();\n            this.textArea.setClassName(`inputarea ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n            this._viewController.compositionEnd();\n            this._context.viewModel.onCompositionEnd();\n        }));\n        this._register(this._textAreaInput.onFocus(() => {\n            this._context.viewModel.setHasFocus(true);\n        }));\n        this._register(this._textAreaInput.onBlur(() => {\n            this._context.viewModel.setHasFocus(false);\n        }));\n        this._register(IME.onDidChange(() => {\n            this._ensureReadOnlyAttribute();\n        }));\n    }\n    writeScreenReaderContent(reason) {\n        this._textAreaInput.writeScreenReaderContent(reason);\n    }\n    dispose() {\n        super.dispose();\n    }\n    _getAndroidWordAtPosition(position) {\n        const ANDROID_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\",.<>/?';\n        const lineContent = this._context.viewModel.getLineContent(position.lineNumber);\n        const wordSeparators = getMapForWordSeparators(ANDROID_WORD_SEPARATORS);\n        let goingLeft = true;\n        let startColumn = position.column;\n        let goingRight = true;\n        let endColumn = position.column;\n        let distance = 0;\n        while (distance < 50 && (goingLeft || goingRight)) {\n            if (goingLeft && startColumn <= 1) {\n                goingLeft = false;\n            }\n            if (goingLeft) {\n                const charCode = lineContent.charCodeAt(startColumn - 2);\n                const charClass = wordSeparators.get(charCode);\n                if (charClass !== 0 /* WordCharacterClass.Regular */) {\n                    goingLeft = false;\n                }\n                else {\n                    startColumn--;\n                }\n            }\n            if (goingRight && endColumn > lineContent.length) {\n                goingRight = false;\n            }\n            if (goingRight) {\n                const charCode = lineContent.charCodeAt(endColumn - 1);\n                const charClass = wordSeparators.get(charCode);\n                if (charClass !== 0 /* WordCharacterClass.Regular */) {\n                    goingRight = false;\n                }\n                else {\n                    endColumn++;\n                }\n            }\n            distance++;\n        }\n        return [lineContent.substring(startColumn - 1, endColumn - 1), position.column - startColumn];\n    }\n    _getWordBeforePosition(position) {\n        const lineContent = this._context.viewModel.getLineContent(position.lineNumber);\n        const wordSeparators = getMapForWordSeparators(this._context.configuration.options.get(128 /* EditorOption.wordSeparators */));\n        let column = position.column;\n        let distance = 0;\n        while (column > 1) {\n            const charCode = lineContent.charCodeAt(column - 2);\n            const charClass = wordSeparators.get(charCode);\n            if (charClass !== 0 /* WordCharacterClass.Regular */ || distance > 50) {\n                return lineContent.substring(column - 1, position.column - 1);\n            }\n            distance++;\n            column--;\n        }\n        return lineContent.substring(0, position.column - 1);\n    }\n    _getCharacterBeforePosition(position) {\n        if (position.column > 1) {\n            const lineContent = this._context.viewModel.getLineContent(position.lineNumber);\n            const charBefore = lineContent.charAt(position.column - 2);\n            if (!strings.isHighSurrogate(charBefore.charCodeAt(0))) {\n                return charBefore;\n            }\n        }\n        return '';\n    }\n    _getAriaLabel(options) {\n        var _a, _b, _c;\n        const accessibilitySupport = options.get(2 /* EditorOption.accessibilitySupport */);\n        if (accessibilitySupport === 1 /* AccessibilitySupport.Disabled */) {\n            const toggleKeybindingLabel = (_a = this._keybindingService.lookupKeybinding('editor.action.toggleScreenReaderAccessibilityMode')) === null || _a === void 0 ? void 0 : _a.getAriaLabel();\n            const runCommandKeybindingLabel = (_b = this._keybindingService.lookupKeybinding('workbench.action.showCommands')) === null || _b === void 0 ? void 0 : _b.getAriaLabel();\n            const keybindingEditorKeybindingLabel = (_c = this._keybindingService.lookupKeybinding('workbench.action.openGlobalKeybindings')) === null || _c === void 0 ? void 0 : _c.getAriaLabel();\n            const editorNotAccessibleMessage = nls.localize('accessibilityModeOff', \"The editor is not accessible at this time.\");\n            if (toggleKeybindingLabel) {\n                return nls.localize('accessibilityOffAriaLabel', \"{0} To enable screen reader optimized mode, use {1}\", editorNotAccessibleMessage, toggleKeybindingLabel);\n            }\n            else if (runCommandKeybindingLabel) {\n                return nls.localize('accessibilityOffAriaLabelNoKb', \"{0} To enable screen reader optimized mode, open the quick pick with {1} and run the command Toggle Screen Reader Accessibility Mode, which is currently not triggerable via keyboard.\", editorNotAccessibleMessage, runCommandKeybindingLabel);\n            }\n            else if (keybindingEditorKeybindingLabel) {\n                return nls.localize('accessibilityOffAriaLabelNoKbs', \"{0} Please assign a keybinding for the command Toggle Screen Reader Accessibility Mode by accessing the keybindings editor with {1} and run it.\", editorNotAccessibleMessage, keybindingEditorKeybindingLabel);\n            }\n            else {\n                // SOS\n                return editorNotAccessibleMessage;\n            }\n        }\n        return options.get(4 /* EditorOption.ariaLabel */);\n    }\n    _setAccessibilityOptions(options) {\n        this._accessibilitySupport = options.get(2 /* EditorOption.accessibilitySupport */);\n        const accessibilityPageSize = options.get(3 /* EditorOption.accessibilityPageSize */);\n        if (this._accessibilitySupport === 2 /* AccessibilitySupport.Enabled */ && accessibilityPageSize === EditorOptions.accessibilityPageSize.defaultValue) {\n            // If a screen reader is attached and the default value is not set we should automatically increase the page size to 500 for a better experience\n            this._accessibilityPageSize = 500;\n        }\n        else {\n            this._accessibilityPageSize = accessibilityPageSize;\n        }\n        // When wrapping is enabled and a screen reader might be attached,\n        // we will size the textarea to match the width used for wrapping points computation (see `domLineBreaksComputer.ts`).\n        // This is because screen readers will read the text in the textarea and we'd like that the\n        // wrapping points in the textarea match the wrapping points in the editor.\n        const layoutInfo = options.get(142 /* EditorOption.layoutInfo */);\n        const wrappingColumn = layoutInfo.wrappingColumn;\n        if (wrappingColumn !== -1 && this._accessibilitySupport !== 1 /* AccessibilitySupport.Disabled */) {\n            const fontInfo = options.get(49 /* EditorOption.fontInfo */);\n            this._textAreaWrapping = true;\n            this._textAreaWidth = Math.round(wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n        }\n        else {\n            this._textAreaWrapping = false;\n            this._textAreaWidth = (canUseZeroSizeTextarea ? 0 : 1);\n        }\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(142 /* EditorOption.layoutInfo */);\n        this._setAccessibilityOptions(options);\n        this._contentLeft = layoutInfo.contentLeft;\n        this._contentWidth = layoutInfo.contentWidth;\n        this._contentHeight = layoutInfo.height;\n        this._fontInfo = options.get(49 /* EditorOption.fontInfo */);\n        this._lineHeight = options.get(65 /* EditorOption.lineHeight */);\n        this._emptySelectionClipboard = options.get(36 /* EditorOption.emptySelectionClipboard */);\n        this._copyWithSyntaxHighlighting = options.get(24 /* EditorOption.copyWithSyntaxHighlighting */);\n        this.textArea.setAttribute('wrap', this._textAreaWrapping && !this._visibleTextArea ? 'on' : 'off');\n        const { tabSize } = this._context.viewModel.model.getOptions();\n        this.textArea.domNode.style.tabSize = `${tabSize * this._fontInfo.spaceWidth}px`;\n        this.textArea.setAttribute('aria-label', this._getAriaLabel(options));\n        this.textArea.setAttribute('aria-required', options.get(5 /* EditorOption.ariaRequired */) ? 'true' : 'false');\n        this.textArea.setAttribute('tabindex', String(options.get(122 /* EditorOption.tabIndex */)));\n        if (e.hasChanged(33 /* EditorOption.domReadOnly */) || e.hasChanged(89 /* EditorOption.readOnly */)) {\n            this._ensureReadOnlyAttribute();\n        }\n        if (e.hasChanged(2 /* EditorOption.accessibilitySupport */)) {\n            this._textAreaInput.writeScreenReaderContent('strategy changed');\n        }\n        return true;\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections.slice(0);\n        this._modelSelections = e.modelSelections.slice(0);\n        // We must update the <textarea> synchronously, otherwise long press IME on macos breaks.\n        // See https://github.com/microsoft/vscode/issues/165821\n        this._textAreaInput.writeScreenReaderContent('selection changed');\n        return true;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations that can end up relayouting text\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        this._scrollLeft = e.scrollLeft;\n        this._scrollTop = e.scrollTop;\n        return true;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    // --- begin view API\n    isFocused() {\n        return this._textAreaInput.isFocused();\n    }\n    focusTextArea() {\n        this._textAreaInput.focusTextArea();\n    }\n    getLastRenderData() {\n        return this._lastRenderPosition;\n    }\n    setAriaOptions(options) {\n        if (options.activeDescendant) {\n            this.textArea.setAttribute('aria-haspopup', 'true');\n            this.textArea.setAttribute('aria-autocomplete', 'list');\n            this.textArea.setAttribute('aria-activedescendant', options.activeDescendant);\n        }\n        else {\n            this.textArea.setAttribute('aria-haspopup', 'false');\n            this.textArea.setAttribute('aria-autocomplete', 'both');\n            this.textArea.removeAttribute('aria-activedescendant');\n        }\n        if (options.role) {\n            this.textArea.setAttribute('role', options.role);\n        }\n    }\n    // --- end view API\n    _ensureReadOnlyAttribute() {\n        const options = this._context.configuration.options;\n        // When someone requests to disable IME, we set the \"readonly\" attribute on the <textarea>.\n        // This will prevent composition.\n        const useReadOnly = !IME.enabled || (options.get(33 /* EditorOption.domReadOnly */) && options.get(89 /* EditorOption.readOnly */));\n        if (useReadOnly) {\n            this.textArea.setAttribute('readonly', 'true');\n        }\n        else {\n            this.textArea.removeAttribute('readonly');\n        }\n    }\n    prepareRender(ctx) {\n        var _a;\n        this._primaryCursorPosition = new Position(this._selections[0].positionLineNumber, this._selections[0].positionColumn);\n        this._primaryCursorVisibleRange = ctx.visibleRangeForPosition(this._primaryCursorPosition);\n        (_a = this._visibleTextArea) === null || _a === void 0 ? void 0 : _a.prepareRender(ctx);\n    }\n    render(ctx) {\n        this._textAreaInput.writeScreenReaderContent('render');\n        this._render();\n    }\n    _render() {\n        var _a;\n        if (this._visibleTextArea) {\n            // The text area is visible for composition reasons\n            const visibleStart = this._visibleTextArea.visibleTextareaStart;\n            const visibleEnd = this._visibleTextArea.visibleTextareaEnd;\n            const startPosition = this._visibleTextArea.startPosition;\n            const endPosition = this._visibleTextArea.endPosition;\n            if (startPosition && endPosition && visibleStart && visibleEnd && visibleEnd.left >= this._scrollLeft && visibleStart.left <= this._scrollLeft + this._contentWidth) {\n                const top = (this._context.viewLayout.getVerticalOffsetForLineNumber(this._primaryCursorPosition.lineNumber) - this._scrollTop);\n                const lineCount = this._newlinecount(this.textArea.domNode.value.substr(0, this.textArea.domNode.selectionStart));\n                let scrollLeft = this._visibleTextArea.widthOfHiddenLineTextBefore;\n                let left = (this._contentLeft + visibleStart.left - this._scrollLeft);\n                // See https://github.com/microsoft/vscode/issues/141725#issuecomment-1050670841\n                // Here we are adding +1 to avoid flickering that might be caused by having a width that is too small.\n                // This could be caused by rounding errors that might only show up with certain font families.\n                // In other words, a pixel might be lost when doing something like\n                //      `Math.round(end) - Math.round(start)`\n                // vs\n                //      `Math.round(end - start)`\n                let width = visibleEnd.left - visibleStart.left + 1;\n                if (left < this._contentLeft) {\n                    // the textarea would be rendered on top of the margin,\n                    // so reduce its width. We use the same technique as\n                    // for hiding text before\n                    const delta = (this._contentLeft - left);\n                    left += delta;\n                    scrollLeft += delta;\n                    width -= delta;\n                }\n                if (width > this._contentWidth) {\n                    // the textarea would be wider than the content width,\n                    // so reduce its width.\n                    width = this._contentWidth;\n                }\n                // Try to render the textarea with the color/font style to match the text under it\n                const viewLineData = this._context.viewModel.getViewLineData(startPosition.lineNumber);\n                const startTokenIndex = viewLineData.tokens.findTokenIndexAtOffset(startPosition.column - 1);\n                const endTokenIndex = viewLineData.tokens.findTokenIndexAtOffset(endPosition.column - 1);\n                const textareaSpansSingleToken = (startTokenIndex === endTokenIndex);\n                const presentation = this._visibleTextArea.definePresentation((textareaSpansSingleToken ? viewLineData.tokens.getPresentation(startTokenIndex) : null));\n                this.textArea.domNode.scrollTop = lineCount * this._lineHeight;\n                this.textArea.domNode.scrollLeft = scrollLeft;\n                this._doRender({\n                    lastRenderPosition: null,\n                    top: top,\n                    left: left,\n                    width: width,\n                    height: this._lineHeight,\n                    useCover: false,\n                    color: (TokenizationRegistry.getColorMap() || [])[presentation.foreground],\n                    italic: presentation.italic,\n                    bold: presentation.bold,\n                    underline: presentation.underline,\n                    strikethrough: presentation.strikethrough\n                });\n            }\n            return;\n        }\n        if (!this._primaryCursorVisibleRange) {\n            // The primary cursor is outside the viewport => place textarea to the top left\n            this._renderAtTopLeft();\n            return;\n        }\n        const left = this._contentLeft + this._primaryCursorVisibleRange.left - this._scrollLeft;\n        if (left < this._contentLeft || left > this._contentLeft + this._contentWidth) {\n            // cursor is outside the viewport\n            this._renderAtTopLeft();\n            return;\n        }\n        const top = this._context.viewLayout.getVerticalOffsetForLineNumber(this._selections[0].positionLineNumber) - this._scrollTop;\n        if (top < 0 || top > this._contentHeight) {\n            // cursor is outside the viewport\n            this._renderAtTopLeft();\n            return;\n        }\n        // The primary cursor is in the viewport (at least vertically) => place textarea on the cursor\n        if (platform.isMacintosh) {\n            // For the popup emoji input, we will make the text area as high as the line height\n            // We will also make the fontSize and lineHeight the correct dimensions to help with the placement of these pickers\n            this._doRender({\n                lastRenderPosition: this._primaryCursorPosition,\n                top,\n                left: this._textAreaWrapping ? this._contentLeft : left,\n                width: this._textAreaWidth,\n                height: this._lineHeight,\n                useCover: false\n            });\n            // In case the textarea contains a word, we're going to try to align the textarea's cursor\n            // with our cursor by scrolling the textarea as much as possible\n            this.textArea.domNode.scrollLeft = this._primaryCursorVisibleRange.left;\n            const lineCount = (_a = this._textAreaInput.textAreaState.newlineCountBeforeSelection) !== null && _a !== void 0 ? _a : this._newlinecount(this.textArea.domNode.value.substr(0, this.textArea.domNode.selectionStart));\n            this.textArea.domNode.scrollTop = lineCount * this._lineHeight;\n            return;\n        }\n        this._doRender({\n            lastRenderPosition: this._primaryCursorPosition,\n            top: top,\n            left: this._textAreaWrapping ? this._contentLeft : left,\n            width: this._textAreaWidth,\n            height: (canUseZeroSizeTextarea ? 0 : 1),\n            useCover: false\n        });\n    }\n    _newlinecount(text) {\n        let result = 0;\n        let startIndex = -1;\n        do {\n            startIndex = text.indexOf('\\n', startIndex + 1);\n            if (startIndex === -1) {\n                break;\n            }\n            result++;\n        } while (true);\n        return result;\n    }\n    _renderAtTopLeft() {\n        // (in WebKit the textarea is 1px by 1px because it cannot handle input to a 0x0 textarea)\n        // specifically, when doing Korean IME, setting the textarea to 0x0 breaks IME badly.\n        this._doRender({\n            lastRenderPosition: null,\n            top: 0,\n            left: 0,\n            width: this._textAreaWidth,\n            height: (canUseZeroSizeTextarea ? 0 : 1),\n            useCover: true\n        });\n    }\n    _doRender(renderData) {\n        this._lastRenderPosition = renderData.lastRenderPosition;\n        const ta = this.textArea;\n        const tac = this.textAreaCover;\n        applyFontInfo(ta, this._fontInfo);\n        ta.setTop(renderData.top);\n        ta.setLeft(renderData.left);\n        ta.setWidth(renderData.width);\n        ta.setHeight(renderData.height);\n        ta.setColor(renderData.color ? Color.Format.CSS.formatHex(renderData.color) : '');\n        ta.setFontStyle(renderData.italic ? 'italic' : '');\n        if (renderData.bold) {\n            // fontWeight is also set by `applyFontInfo`, so only overwrite it if necessary\n            ta.setFontWeight('bold');\n        }\n        ta.setTextDecoration(`${renderData.underline ? ' underline' : ''}${renderData.strikethrough ? ' line-through' : ''}`);\n        tac.setTop(renderData.useCover ? renderData.top : 0);\n        tac.setLeft(renderData.useCover ? renderData.left : 0);\n        tac.setWidth(renderData.useCover ? renderData.width : 0);\n        tac.setHeight(renderData.useCover ? renderData.height : 0);\n        const options = this._context.configuration.options;\n        if (options.get(56 /* EditorOption.glyphMargin */)) {\n            tac.setClassName('monaco-editor-background textAreaCover ' + Margin.OUTER_CLASS_NAME);\n        }\n        else {\n            if (options.get(66 /* EditorOption.lineNumbers */).renderType !== 0 /* RenderLineNumbersType.Off */) {\n                tac.setClassName('monaco-editor-background textAreaCover ' + LineNumbersOverlay.CLASS_NAME);\n            }\n            else {\n                tac.setClassName('monaco-editor-background textAreaCover');\n            }\n        }\n    }\n};\nTextAreaHandler = __decorate([\n    __param(3, IKeybindingService)\n], TextAreaHandler);\nexport { TextAreaHandler };\nfunction measureText(text, fontInfo, tabSize) {\n    if (text.length === 0) {\n        return 0;\n    }\n    const container = document.createElement('div');\n    container.style.position = 'absolute';\n    container.style.top = '-50000px';\n    container.style.width = '50000px';\n    const regularDomNode = document.createElement('span');\n    applyFontInfo(regularDomNode, fontInfo);\n    regularDomNode.style.whiteSpace = 'pre'; // just like the textarea\n    regularDomNode.style.tabSize = `${tabSize * fontInfo.spaceWidth}px`; // just like the textarea\n    regularDomNode.append(text);\n    container.appendChild(regularDomNode);\n    document.body.appendChild(container);\n    const res = regularDomNode.offsetWidth;\n    document.body.removeChild(container);\n    return res;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as browser from '../../../base/browser/browser.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { DomEmitter } from '../../../base/browser/event.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { inputLatency } from '../../../base/browser/performance.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Mimes } from '../../../base/common/mime.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { TextAreaState, _debugComposition } from './textAreaState.js';\nimport { Selection } from '../../common/core/selection.js';\nexport var TextAreaSyntethicEvents;\n(function (TextAreaSyntethicEvents) {\n    TextAreaSyntethicEvents.Tap = '-monaco-textarea-synthetic-tap';\n})(TextAreaSyntethicEvents || (TextAreaSyntethicEvents = {}));\nexport const CopyOptions = {\n    forceCopyWithSyntaxHighlighting: false\n};\n/**\n * Every time we write to the clipboard, we record a bit of extra metadata here.\n * Every time we read from the cipboard, if the text matches our last written text,\n * we can fetch the previous metadata.\n */\nexport class InMemoryClipboardMetadataManager {\n    constructor() {\n        this._lastState = null;\n    }\n    set(lastCopiedValue, data) {\n        this._lastState = { lastCopiedValue, data };\n    }\n    get(pastedText) {\n        if (this._lastState && this._lastState.lastCopiedValue === pastedText) {\n            // match!\n            return this._lastState.data;\n        }\n        this._lastState = null;\n        return null;\n    }\n}\nInMemoryClipboardMetadataManager.INSTANCE = new InMemoryClipboardMetadataManager();\nclass CompositionContext {\n    constructor() {\n        this._lastTypeTextLength = 0;\n    }\n    handleCompositionUpdate(text) {\n        text = text || '';\n        const typeInput = {\n            text: text,\n            replacePrevCharCnt: this._lastTypeTextLength,\n            replaceNextCharCnt: 0,\n            positionDelta: 0\n        };\n        this._lastTypeTextLength = text.length;\n        return typeInput;\n    }\n}\n/**\n * Writes screen reader content to the textarea and is able to analyze its input events to generate:\n *  - onCut\n *  - onPaste\n *  - onType\n *\n * Composition events are generated for presentation purposes (composition input is reflected in onType).\n */\nexport class TextAreaInput extends Disposable {\n    get textAreaState() {\n        return this._textAreaState;\n    }\n    constructor(_host, _textArea, _OS, _browser) {\n        super();\n        this._host = _host;\n        this._textArea = _textArea;\n        this._OS = _OS;\n        this._browser = _browser;\n        this._onFocus = this._register(new Emitter());\n        this.onFocus = this._onFocus.event;\n        this._onBlur = this._register(new Emitter());\n        this.onBlur = this._onBlur.event;\n        this._onKeyDown = this._register(new Emitter());\n        this.onKeyDown = this._onKeyDown.event;\n        this._onKeyUp = this._register(new Emitter());\n        this.onKeyUp = this._onKeyUp.event;\n        this._onCut = this._register(new Emitter());\n        this.onCut = this._onCut.event;\n        this._onPaste = this._register(new Emitter());\n        this.onPaste = this._onPaste.event;\n        this._onType = this._register(new Emitter());\n        this.onType = this._onType.event;\n        this._onCompositionStart = this._register(new Emitter());\n        this.onCompositionStart = this._onCompositionStart.event;\n        this._onCompositionUpdate = this._register(new Emitter());\n        this.onCompositionUpdate = this._onCompositionUpdate.event;\n        this._onCompositionEnd = this._register(new Emitter());\n        this.onCompositionEnd = this._onCompositionEnd.event;\n        this._onSelectionChangeRequest = this._register(new Emitter());\n        this.onSelectionChangeRequest = this._onSelectionChangeRequest.event;\n        this._asyncTriggerCut = this._register(new RunOnceScheduler(() => this._onCut.fire(), 0));\n        this._asyncFocusGainWriteScreenReaderContent = this._register(new RunOnceScheduler(() => this.writeScreenReaderContent('asyncFocusGain'), 0));\n        this._textAreaState = TextAreaState.EMPTY;\n        this._selectionChangeListener = null;\n        this.writeScreenReaderContent('ctor');\n        this._hasFocus = false;\n        this._currentComposition = null;\n        let lastKeyDown = null;\n        this._register(this._textArea.onKeyDown((_e) => {\n            const e = new StandardKeyboardEvent(_e);\n            if (e.keyCode === 114 /* KeyCode.KEY_IN_COMPOSITION */\n                || (this._currentComposition && e.keyCode === 1 /* KeyCode.Backspace */)) {\n                // Stop propagation for keyDown events if the IME is processing key input\n                e.stopPropagation();\n            }\n            if (e.equals(9 /* KeyCode.Escape */)) {\n                // Prevent default always for `Esc`, otherwise it will generate a keypress\n                // See https://msdn.microsoft.com/en-us/library/ie/ms536939(v=vs.85).aspx\n                e.preventDefault();\n            }\n            lastKeyDown = e;\n            this._onKeyDown.fire(e);\n        }));\n        this._register(this._textArea.onKeyUp((_e) => {\n            const e = new StandardKeyboardEvent(_e);\n            this._onKeyUp.fire(e);\n        }));\n        this._register(this._textArea.onCompositionStart((e) => {\n            if (_debugComposition) {\n                console.log(`[compositionstart]`, e);\n            }\n            const currentComposition = new CompositionContext();\n            if (this._currentComposition) {\n                // simply reset the composition context\n                this._currentComposition = currentComposition;\n                return;\n            }\n            this._currentComposition = currentComposition;\n            if (this._OS === 2 /* OperatingSystem.Macintosh */\n                && lastKeyDown\n                && lastKeyDown.equals(114 /* KeyCode.KEY_IN_COMPOSITION */)\n                && this._textAreaState.selectionStart === this._textAreaState.selectionEnd\n                && this._textAreaState.selectionStart > 0\n                && this._textAreaState.value.substr(this._textAreaState.selectionStart - 1, 1) === e.data\n                && (lastKeyDown.code === 'ArrowRight' || lastKeyDown.code === 'ArrowLeft')) {\n                // Handling long press case on Chromium/Safari macOS + arrow key => pretend the character was selected\n                if (_debugComposition) {\n                    console.log(`[compositionstart] Handling long press case on macOS + arrow key`, e);\n                }\n                // Pretend the previous character was composed (in order to get it removed by subsequent compositionupdate events)\n                currentComposition.handleCompositionUpdate('x');\n                this._onCompositionStart.fire({ data: e.data });\n                return;\n            }\n            if (this._browser.isAndroid) {\n                // when tapping on the editor, Android enters composition mode to edit the current word\n                // so we cannot clear the textarea on Android and we must pretend the current word was selected\n                this._onCompositionStart.fire({ data: e.data });\n                return;\n            }\n            this._onCompositionStart.fire({ data: e.data });\n        }));\n        this._register(this._textArea.onCompositionUpdate((e) => {\n            if (_debugComposition) {\n                console.log(`[compositionupdate]`, e);\n            }\n            const currentComposition = this._currentComposition;\n            if (!currentComposition) {\n                // should not be possible to receive a 'compositionupdate' without a 'compositionstart'\n                return;\n            }\n            if (this._browser.isAndroid) {\n                // On Android, the data sent with the composition update event is unusable.\n                // For example, if the cursor is in the middle of a word like Mic|osoft\n                // and Microsoft is chosen from the keyboard's suggestions, the e.data will contain \"Microsoft\".\n                // This is not really usable because it doesn't tell us where the edit began and where it ended.\n                const newState = TextAreaState.readFromTextArea(this._textArea, this._textAreaState);\n                const typeInput = TextAreaState.deduceAndroidCompositionInput(this._textAreaState, newState);\n                this._textAreaState = newState;\n                this._onType.fire(typeInput);\n                this._onCompositionUpdate.fire(e);\n                return;\n            }\n            const typeInput = currentComposition.handleCompositionUpdate(e.data);\n            this._textAreaState = TextAreaState.readFromTextArea(this._textArea, this._textAreaState);\n            this._onType.fire(typeInput);\n            this._onCompositionUpdate.fire(e);\n        }));\n        this._register(this._textArea.onCompositionEnd((e) => {\n            if (_debugComposition) {\n                console.log(`[compositionend]`, e);\n            }\n            const currentComposition = this._currentComposition;\n            if (!currentComposition) {\n                // https://github.com/microsoft/monaco-editor/issues/1663\n                // On iOS 13.2, Chinese system IME randomly trigger an additional compositionend event with empty data\n                return;\n            }\n            this._currentComposition = null;\n            if (this._browser.isAndroid) {\n                // On Android, the data sent with the composition update event is unusable.\n                // For example, if the cursor is in the middle of a word like Mic|osoft\n                // and Microsoft is chosen from the keyboard's suggestions, the e.data will contain \"Microsoft\".\n                // This is not really usable because it doesn't tell us where the edit began and where it ended.\n                const newState = TextAreaState.readFromTextArea(this._textArea, this._textAreaState);\n                const typeInput = TextAreaState.deduceAndroidCompositionInput(this._textAreaState, newState);\n                this._textAreaState = newState;\n                this._onType.fire(typeInput);\n                this._onCompositionEnd.fire();\n                return;\n            }\n            const typeInput = currentComposition.handleCompositionUpdate(e.data);\n            this._textAreaState = TextAreaState.readFromTextArea(this._textArea, this._textAreaState);\n            this._onType.fire(typeInput);\n            this._onCompositionEnd.fire();\n        }));\n        this._register(this._textArea.onInput((e) => {\n            if (_debugComposition) {\n                console.log(`[input]`, e);\n            }\n            // Pretend here we touched the text area, as the `input` event will most likely\n            // result in a `selectionchange` event which we want to ignore\n            this._textArea.setIgnoreSelectionChangeTime('received input event');\n            if (this._currentComposition) {\n                return;\n            }\n            const newState = TextAreaState.readFromTextArea(this._textArea, this._textAreaState);\n            const typeInput = TextAreaState.deduceInput(this._textAreaState, newState, /*couldBeEmojiInput*/ this._OS === 2 /* OperatingSystem.Macintosh */);\n            if (typeInput.replacePrevCharCnt === 0 && typeInput.text.length === 1) {\n                // one character was typed\n                if (strings.isHighSurrogate(typeInput.text.charCodeAt(0))\n                    || typeInput.text.charCodeAt(0) === 0x7f /* Delete */) {\n                    // Ignore invalid input but keep it around for next time\n                    return;\n                }\n            }\n            this._textAreaState = newState;\n            if (typeInput.text !== ''\n                || typeInput.replacePrevCharCnt !== 0\n                || typeInput.replaceNextCharCnt !== 0\n                || typeInput.positionDelta !== 0) {\n                this._onType.fire(typeInput);\n            }\n        }));\n        // --- Clipboard operations\n        this._register(this._textArea.onCut((e) => {\n            // Pretend here we touched the text area, as the `cut` event will most likely\n            // result in a `selectionchange` event which we want to ignore\n            this._textArea.setIgnoreSelectionChangeTime('received cut event');\n            this._ensureClipboardGetsEditorSelection(e);\n            this._asyncTriggerCut.schedule();\n        }));\n        this._register(this._textArea.onCopy((e) => {\n            this._ensureClipboardGetsEditorSelection(e);\n        }));\n        this._register(this._textArea.onPaste((e) => {\n            // Pretend here we touched the text area, as the `paste` event will most likely\n            // result in a `selectionchange` event which we want to ignore\n            this._textArea.setIgnoreSelectionChangeTime('received paste event');\n            e.preventDefault();\n            if (!e.clipboardData) {\n                return;\n            }\n            let [text, metadata] = ClipboardEventUtils.getTextData(e.clipboardData);\n            if (!text) {\n                return;\n            }\n            // try the in-memory store\n            metadata = metadata || InMemoryClipboardMetadataManager.INSTANCE.get(text);\n            this._onPaste.fire({\n                text: text,\n                metadata: metadata\n            });\n        }));\n        this._register(this._textArea.onFocus(() => {\n            const hadFocus = this._hasFocus;\n            this._setHasFocus(true);\n            if (this._browser.isSafari && !hadFocus && this._hasFocus) {\n                // When \"tabbing into\" the textarea, immediately after dispatching the 'focus' event,\n                // Safari will always move the selection at offset 0 in the textarea\n                this._asyncFocusGainWriteScreenReaderContent.schedule();\n            }\n        }));\n        this._register(this._textArea.onBlur(() => {\n            if (this._currentComposition) {\n                // See https://github.com/microsoft/vscode/issues/112621\n                // where compositionend is not triggered when the editor\n                // is taken off-dom during a composition\n                // Clear the flag to be able to write to the textarea\n                this._currentComposition = null;\n                // Clear the textarea to avoid an unwanted cursor type\n                this.writeScreenReaderContent('blurWithoutCompositionEnd');\n                // Fire artificial composition end\n                this._onCompositionEnd.fire();\n            }\n            this._setHasFocus(false);\n        }));\n        this._register(this._textArea.onSyntheticTap(() => {\n            if (this._browser.isAndroid && this._currentComposition) {\n                // on Android, tapping does not cancel the current composition, so the\n                // textarea is stuck showing the old composition\n                // Clear the flag to be able to write to the textarea\n                this._currentComposition = null;\n                // Clear the textarea to avoid an unwanted cursor type\n                this.writeScreenReaderContent('tapWithoutCompositionEnd');\n                // Fire artificial composition end\n                this._onCompositionEnd.fire();\n            }\n        }));\n    }\n    _installSelectionChangeListener() {\n        // See https://github.com/microsoft/vscode/issues/27216 and https://github.com/microsoft/vscode/issues/98256\n        // When using a Braille display, it is possible for users to reposition the\n        // system caret. This is reflected in Chrome as a `selectionchange` event.\n        //\n        // The `selectionchange` event appears to be emitted under numerous other circumstances,\n        // so it is quite a challenge to distinguish a `selectionchange` coming in from a user\n        // using a Braille display from all the other cases.\n        //\n        // The problems with the `selectionchange` event are:\n        //  * the event is emitted when the textarea is focused programmatically -- textarea.focus()\n        //  * the event is emitted when the selection is changed in the textarea programmatically -- textarea.setSelectionRange(...)\n        //  * the event is emitted when the value of the textarea is changed programmatically -- textarea.value = '...'\n        //  * the event is emitted when tabbing into the textarea\n        //  * the event is emitted asynchronously (sometimes with a delay as high as a few tens of ms)\n        //  * the event sometimes comes in bursts for a single logical textarea operation\n        // `selectionchange` events often come multiple times for a single logical change\n        // so throttle multiple `selectionchange` events that burst in a short period of time.\n        let previousSelectionChangeEventTime = 0;\n        return dom.addDisposableListener(document, 'selectionchange', (e) => {\n            inputLatency.onSelectionChange();\n            if (!this._hasFocus) {\n                return;\n            }\n            if (this._currentComposition) {\n                return;\n            }\n            if (!this._browser.isChrome) {\n                // Support only for Chrome until testing happens on other browsers\n                return;\n            }\n            const now = Date.now();\n            const delta1 = now - previousSelectionChangeEventTime;\n            previousSelectionChangeEventTime = now;\n            if (delta1 < 5) {\n                // received another `selectionchange` event within 5ms of the previous `selectionchange` event\n                // => ignore it\n                return;\n            }\n            const delta2 = now - this._textArea.getIgnoreSelectionChangeTime();\n            this._textArea.resetSelectionChangeTime();\n            if (delta2 < 100) {\n                // received a `selectionchange` event within 100ms since we touched the textarea\n                // => ignore it, since we caused it\n                return;\n            }\n            if (!this._textAreaState.selection) {\n                // Cannot correlate a position in the textarea with a position in the editor...\n                return;\n            }\n            const newValue = this._textArea.getValue();\n            if (this._textAreaState.value !== newValue) {\n                // Cannot correlate a position in the textarea with a position in the editor...\n                return;\n            }\n            const newSelectionStart = this._textArea.getSelectionStart();\n            const newSelectionEnd = this._textArea.getSelectionEnd();\n            if (this._textAreaState.selectionStart === newSelectionStart && this._textAreaState.selectionEnd === newSelectionEnd) {\n                // Nothing to do...\n                return;\n            }\n            const _newSelectionStartPosition = this._textAreaState.deduceEditorPosition(newSelectionStart);\n            const newSelectionStartPosition = this._host.deduceModelPosition(_newSelectionStartPosition[0], _newSelectionStartPosition[1], _newSelectionStartPosition[2]);\n            const _newSelectionEndPosition = this._textAreaState.deduceEditorPosition(newSelectionEnd);\n            const newSelectionEndPosition = this._host.deduceModelPosition(_newSelectionEndPosition[0], _newSelectionEndPosition[1], _newSelectionEndPosition[2]);\n            const newSelection = new Selection(newSelectionStartPosition.lineNumber, newSelectionStartPosition.column, newSelectionEndPosition.lineNumber, newSelectionEndPosition.column);\n            this._onSelectionChangeRequest.fire(newSelection);\n        });\n    }\n    dispose() {\n        super.dispose();\n        if (this._selectionChangeListener) {\n            this._selectionChangeListener.dispose();\n            this._selectionChangeListener = null;\n        }\n    }\n    focusTextArea() {\n        // Setting this._hasFocus and writing the screen reader content\n        // will result in a focus() and setSelectionRange() in the textarea\n        this._setHasFocus(true);\n        // If the editor is off DOM, focus cannot be really set, so let's double check that we have managed to set the focus\n        this.refreshFocusState();\n    }\n    isFocused() {\n        return this._hasFocus;\n    }\n    refreshFocusState() {\n        this._setHasFocus(this._textArea.hasFocus());\n    }\n    _setHasFocus(newHasFocus) {\n        if (this._hasFocus === newHasFocus) {\n            // no change\n            return;\n        }\n        this._hasFocus = newHasFocus;\n        if (this._selectionChangeListener) {\n            this._selectionChangeListener.dispose();\n            this._selectionChangeListener = null;\n        }\n        if (this._hasFocus) {\n            this._selectionChangeListener = this._installSelectionChangeListener();\n        }\n        if (this._hasFocus) {\n            this.writeScreenReaderContent('focusgain');\n        }\n        if (this._hasFocus) {\n            this._onFocus.fire();\n        }\n        else {\n            this._onBlur.fire();\n        }\n    }\n    _setAndWriteTextAreaState(reason, textAreaState) {\n        if (!this._hasFocus) {\n            textAreaState = textAreaState.collapseSelection();\n        }\n        textAreaState.writeToTextArea(reason, this._textArea, this._hasFocus);\n        this._textAreaState = textAreaState;\n    }\n    writeScreenReaderContent(reason) {\n        if (this._currentComposition) {\n            // Do not write to the text area when doing composition\n            return;\n        }\n        this._setAndWriteTextAreaState(reason, this._host.getScreenReaderContent());\n    }\n    _ensureClipboardGetsEditorSelection(e) {\n        const dataToCopy = this._host.getDataToCopy();\n        const storedMetadata = {\n            version: 1,\n            isFromEmptySelection: dataToCopy.isFromEmptySelection,\n            multicursorText: dataToCopy.multicursorText,\n            mode: dataToCopy.mode\n        };\n        InMemoryClipboardMetadataManager.INSTANCE.set(\n        // When writing \"LINE\\r\\n\" to the clipboard and then pasting,\n        // Firefox pastes \"LINE\\n\", so let's work around this quirk\n        (this._browser.isFirefox ? dataToCopy.text.replace(/\\r\\n/g, '\\n') : dataToCopy.text), storedMetadata);\n        e.preventDefault();\n        if (e.clipboardData) {\n            ClipboardEventUtils.setTextData(e.clipboardData, dataToCopy.text, dataToCopy.html, storedMetadata);\n        }\n    }\n}\nexport const ClipboardEventUtils = {\n    getTextData(clipboardData) {\n        const text = clipboardData.getData(Mimes.text);\n        let metadata = null;\n        const rawmetadata = clipboardData.getData('vscode-editor-data');\n        if (typeof rawmetadata === 'string') {\n            try {\n                metadata = JSON.parse(rawmetadata);\n                if (metadata.version !== 1) {\n                    metadata = null;\n                }\n            }\n            catch (err) {\n                // no problem!\n            }\n        }\n        if (text.length === 0 && metadata === null && clipboardData.files.length > 0) {\n            // no textual data pasted, generate text from file names\n            const files = Array.prototype.slice.call(clipboardData.files, 0);\n            return [files.map(file => file.name).join('\\n'), null];\n        }\n        return [text, metadata];\n    },\n    setTextData(clipboardData, text, html, metadata) {\n        clipboardData.setData(Mimes.text, text);\n        if (typeof html === 'string') {\n            clipboardData.setData('text/html', html);\n        }\n        clipboardData.setData('vscode-editor-data', JSON.stringify(metadata));\n    }\n};\nexport class TextAreaWrapper extends Disposable {\n    constructor(_actual) {\n        super();\n        this._actual = _actual;\n        this.onKeyDown = this._register(new DomEmitter(this._actual, 'keydown')).event;\n        this.onKeyUp = this._register(new DomEmitter(this._actual, 'keyup')).event;\n        this.onCompositionStart = this._register(new DomEmitter(this._actual, 'compositionstart')).event;\n        this.onCompositionUpdate = this._register(new DomEmitter(this._actual, 'compositionupdate')).event;\n        this.onCompositionEnd = this._register(new DomEmitter(this._actual, 'compositionend')).event;\n        this.onBeforeInput = this._register(new DomEmitter(this._actual, 'beforeinput')).event;\n        this.onInput = this._register(new DomEmitter(this._actual, 'input')).event;\n        this.onCut = this._register(new DomEmitter(this._actual, 'cut')).event;\n        this.onCopy = this._register(new DomEmitter(this._actual, 'copy')).event;\n        this.onPaste = this._register(new DomEmitter(this._actual, 'paste')).event;\n        this.onFocus = this._register(new DomEmitter(this._actual, 'focus')).event;\n        this.onBlur = this._register(new DomEmitter(this._actual, 'blur')).event;\n        this._onSyntheticTap = this._register(new Emitter());\n        this.onSyntheticTap = this._onSyntheticTap.event;\n        this._ignoreSelectionChangeTime = 0;\n        this._register(this.onKeyDown(() => inputLatency.onKeyDown()));\n        this._register(this.onBeforeInput(() => inputLatency.onBeforeInput()));\n        this._register(this.onInput(() => inputLatency.onInput()));\n        this._register(this.onKeyUp(() => inputLatency.onKeyUp()));\n        this._register(dom.addDisposableListener(this._actual, TextAreaSyntethicEvents.Tap, () => this._onSyntheticTap.fire()));\n    }\n    hasFocus() {\n        const shadowRoot = dom.getShadowRoot(this._actual);\n        if (shadowRoot) {\n            return shadowRoot.activeElement === this._actual;\n        }\n        else if (dom.isInDOM(this._actual)) {\n            return document.activeElement === this._actual;\n        }\n        else {\n            return false;\n        }\n    }\n    setIgnoreSelectionChangeTime(reason) {\n        this._ignoreSelectionChangeTime = Date.now();\n    }\n    getIgnoreSelectionChangeTime() {\n        return this._ignoreSelectionChangeTime;\n    }\n    resetSelectionChangeTime() {\n        this._ignoreSelectionChangeTime = 0;\n    }\n    getValue() {\n        // console.log('current value: ' + this._textArea.value);\n        return this._actual.value;\n    }\n    setValue(reason, value) {\n        const textArea = this._actual;\n        if (textArea.value === value) {\n            // No change\n            return;\n        }\n        // console.log('reason: ' + reason + ', current value: ' + textArea.value + ' => new value: ' + value);\n        this.setIgnoreSelectionChangeTime('setValue');\n        textArea.value = value;\n    }\n    getSelectionStart() {\n        return this._actual.selectionDirection === 'backward' ? this._actual.selectionEnd : this._actual.selectionStart;\n    }\n    getSelectionEnd() {\n        return this._actual.selectionDirection === 'backward' ? this._actual.selectionStart : this._actual.selectionEnd;\n    }\n    setSelectionRange(reason, selectionStart, selectionEnd) {\n        const textArea = this._actual;\n        let activeElement = null;\n        const shadowRoot = dom.getShadowRoot(textArea);\n        if (shadowRoot) {\n            activeElement = shadowRoot.activeElement;\n        }\n        else {\n            activeElement = document.activeElement;\n        }\n        const currentIsFocused = (activeElement === textArea);\n        const currentSelectionStart = textArea.selectionStart;\n        const currentSelectionEnd = textArea.selectionEnd;\n        if (currentIsFocused && currentSelectionStart === selectionStart && currentSelectionEnd === selectionEnd) {\n            // No change\n            // Firefox iframe bug https://github.com/microsoft/monaco-editor/issues/643#issuecomment-367871377\n            if (browser.isFirefox && window.parent !== window) {\n                textArea.focus();\n            }\n            return;\n        }\n        // console.log('reason: ' + reason + ', setSelectionRange: ' + selectionStart + ' -> ' + selectionEnd);\n        if (currentIsFocused) {\n            // No need to focus, only need to change the selection range\n            this.setIgnoreSelectionChangeTime('setSelectionRange');\n            textArea.setSelectionRange(selectionStart, selectionEnd);\n            if (browser.isFirefox && window.parent !== window) {\n                textArea.focus();\n            }\n            return;\n        }\n        // If the focus is outside the textarea, browsers will try really hard to reveal the textarea.\n        // Here, we try to undo the browser's desperate reveal.\n        try {\n            const scrollState = dom.saveParentsScrollTop(textArea);\n            this.setIgnoreSelectionChangeTime('setSelectionRange');\n            textArea.focus();\n            textArea.setSelectionRange(selectionStart, selectionEnd);\n            dom.restoreParentsScrollTop(textArea, scrollState);\n        }\n        catch (e) {\n            // Sometimes IE throws when setting selection (e.g. textarea is off-DOM)\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\nimport { Range } from '../../common/core/range.js';\nexport const _debugComposition = false;\nexport class TextAreaState {\n    constructor(value, \n    /** the offset where selection starts inside `value` */\n    selectionStart, \n    /** the offset where selection ends inside `value` */\n    selectionEnd, \n    /** the editor range in the view coordinate system that matches the selection inside `value` */\n    selection, \n    /** the visible line count (wrapped, not necessarily matching \\n characters) for the text in `value` before `selectionStart` */\n    newlineCountBeforeSelection) {\n        this.value = value;\n        this.selectionStart = selectionStart;\n        this.selectionEnd = selectionEnd;\n        this.selection = selection;\n        this.newlineCountBeforeSelection = newlineCountBeforeSelection;\n    }\n    toString() {\n        return `[ <${this.value}>, selectionStart: ${this.selectionStart}, selectionEnd: ${this.selectionEnd}]`;\n    }\n    static readFromTextArea(textArea, previousState) {\n        const value = textArea.getValue();\n        const selectionStart = textArea.getSelectionStart();\n        const selectionEnd = textArea.getSelectionEnd();\n        let newlineCountBeforeSelection = undefined;\n        if (previousState) {\n            const valueBeforeSelectionStart = value.substring(0, selectionStart);\n            const previousValueBeforeSelectionStart = previousState.value.substring(0, previousState.selectionStart);\n            if (valueBeforeSelectionStart === previousValueBeforeSelectionStart) {\n                newlineCountBeforeSelection = previousState.newlineCountBeforeSelection;\n            }\n        }\n        return new TextAreaState(value, selectionStart, selectionEnd, null, newlineCountBeforeSelection);\n    }\n    collapseSelection() {\n        if (this.selectionStart === this.value.length) {\n            return this;\n        }\n        return new TextAreaState(this.value, this.value.length, this.value.length, null, undefined);\n    }\n    writeToTextArea(reason, textArea, select) {\n        if (_debugComposition) {\n            console.log(`writeToTextArea ${reason}: ${this.toString()}`);\n        }\n        textArea.setValue(reason, this.value);\n        if (select) {\n            textArea.setSelectionRange(reason, this.selectionStart, this.selectionEnd);\n        }\n    }\n    deduceEditorPosition(offset) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        if (offset <= this.selectionStart) {\n            const str = this.value.substring(offset, this.selectionStart);\n            return this._finishDeduceEditorPosition((_b = (_a = this.selection) === null || _a === void 0 ? void 0 : _a.getStartPosition()) !== null && _b !== void 0 ? _b : null, str, -1);\n        }\n        if (offset >= this.selectionEnd) {\n            const str = this.value.substring(this.selectionEnd, offset);\n            return this._finishDeduceEditorPosition((_d = (_c = this.selection) === null || _c === void 0 ? void 0 : _c.getEndPosition()) !== null && _d !== void 0 ? _d : null, str, 1);\n        }\n        const str1 = this.value.substring(this.selectionStart, offset);\n        if (str1.indexOf(String.fromCharCode(8230)) === -1) {\n            return this._finishDeduceEditorPosition((_f = (_e = this.selection) === null || _e === void 0 ? void 0 : _e.getStartPosition()) !== null && _f !== void 0 ? _f : null, str1, 1);\n        }\n        const str2 = this.value.substring(offset, this.selectionEnd);\n        return this._finishDeduceEditorPosition((_h = (_g = this.selection) === null || _g === void 0 ? void 0 : _g.getEndPosition()) !== null && _h !== void 0 ? _h : null, str2, -1);\n    }\n    _finishDeduceEditorPosition(anchor, deltaText, signum) {\n        let lineFeedCnt = 0;\n        let lastLineFeedIndex = -1;\n        while ((lastLineFeedIndex = deltaText.indexOf('\\n', lastLineFeedIndex + 1)) !== -1) {\n            lineFeedCnt++;\n        }\n        return [anchor, signum * deltaText.length, lineFeedCnt];\n    }\n    static deduceInput(previousState, currentState, couldBeEmojiInput) {\n        if (!previousState) {\n            // This is the EMPTY state\n            return {\n                text: '',\n                replacePrevCharCnt: 0,\n                replaceNextCharCnt: 0,\n                positionDelta: 0\n            };\n        }\n        if (_debugComposition) {\n            console.log('------------------------deduceInput');\n            console.log(`PREVIOUS STATE: ${previousState.toString()}`);\n            console.log(`CURRENT STATE: ${currentState.toString()}`);\n        }\n        const prefixLength = Math.min(strings.commonPrefixLength(previousState.value, currentState.value), previousState.selectionStart, currentState.selectionStart);\n        const suffixLength = Math.min(strings.commonSuffixLength(previousState.value, currentState.value), previousState.value.length - previousState.selectionEnd, currentState.value.length - currentState.selectionEnd);\n        const previousValue = previousState.value.substring(prefixLength, previousState.value.length - suffixLength);\n        const currentValue = currentState.value.substring(prefixLength, currentState.value.length - suffixLength);\n        const previousSelectionStart = previousState.selectionStart - prefixLength;\n        const previousSelectionEnd = previousState.selectionEnd - prefixLength;\n        const currentSelectionStart = currentState.selectionStart - prefixLength;\n        const currentSelectionEnd = currentState.selectionEnd - prefixLength;\n        if (_debugComposition) {\n            console.log(`AFTER DIFFING PREVIOUS STATE: <${previousValue}>, selectionStart: ${previousSelectionStart}, selectionEnd: ${previousSelectionEnd}`);\n            console.log(`AFTER DIFFING CURRENT STATE: <${currentValue}>, selectionStart: ${currentSelectionStart}, selectionEnd: ${currentSelectionEnd}`);\n        }\n        if (currentSelectionStart === currentSelectionEnd) {\n            // no current selection\n            const replacePreviousCharacters = (previousState.selectionStart - prefixLength);\n            if (_debugComposition) {\n                console.log(`REMOVE PREVIOUS: ${replacePreviousCharacters} chars`);\n            }\n            return {\n                text: currentValue,\n                replacePrevCharCnt: replacePreviousCharacters,\n                replaceNextCharCnt: 0,\n                positionDelta: 0\n            };\n        }\n        // there is a current selection => composition case\n        const replacePreviousCharacters = previousSelectionEnd - previousSelectionStart;\n        return {\n            text: currentValue,\n            replacePrevCharCnt: replacePreviousCharacters,\n            replaceNextCharCnt: 0,\n            positionDelta: 0\n        };\n    }\n    static deduceAndroidCompositionInput(previousState, currentState) {\n        if (!previousState) {\n            // This is the EMPTY state\n            return {\n                text: '',\n                replacePrevCharCnt: 0,\n                replaceNextCharCnt: 0,\n                positionDelta: 0\n            };\n        }\n        if (_debugComposition) {\n            console.log('------------------------deduceAndroidCompositionInput');\n            console.log(`PREVIOUS STATE: ${previousState.toString()}`);\n            console.log(`CURRENT STATE: ${currentState.toString()}`);\n        }\n        if (previousState.value === currentState.value) {\n            return {\n                text: '',\n                replacePrevCharCnt: 0,\n                replaceNextCharCnt: 0,\n                positionDelta: currentState.selectionEnd - previousState.selectionEnd\n            };\n        }\n        const prefixLength = Math.min(strings.commonPrefixLength(previousState.value, currentState.value), previousState.selectionEnd);\n        const suffixLength = Math.min(strings.commonSuffixLength(previousState.value, currentState.value), previousState.value.length - previousState.selectionEnd);\n        const previousValue = previousState.value.substring(prefixLength, previousState.value.length - suffixLength);\n        const currentValue = currentState.value.substring(prefixLength, currentState.value.length - suffixLength);\n        const previousSelectionStart = previousState.selectionStart - prefixLength;\n        const previousSelectionEnd = previousState.selectionEnd - prefixLength;\n        const currentSelectionStart = currentState.selectionStart - prefixLength;\n        const currentSelectionEnd = currentState.selectionEnd - prefixLength;\n        if (_debugComposition) {\n            console.log(`AFTER DIFFING PREVIOUS STATE: <${previousValue}>, selectionStart: ${previousSelectionStart}, selectionEnd: ${previousSelectionEnd}`);\n            console.log(`AFTER DIFFING CURRENT STATE: <${currentValue}>, selectionStart: ${currentSelectionStart}, selectionEnd: ${currentSelectionEnd}`);\n        }\n        return {\n            text: currentValue,\n            replacePrevCharCnt: previousSelectionEnd,\n            replaceNextCharCnt: previousValue.length - previousSelectionEnd,\n            positionDelta: currentSelectionEnd - currentValue.length\n        };\n    }\n}\nTextAreaState.EMPTY = new TextAreaState('', 0, 0, null, undefined);\nexport class PagedScreenReaderStrategy {\n    static _getPageOfLine(lineNumber, linesPerPage) {\n        return Math.floor((lineNumber - 1) / linesPerPage);\n    }\n    static _getRangeForPage(page, linesPerPage) {\n        const offset = page * linesPerPage;\n        const startLineNumber = offset + 1;\n        const endLineNumber = offset + linesPerPage;\n        return new Range(startLineNumber, 1, endLineNumber + 1, 1);\n    }\n    static fromEditorSelection(model, selection, linesPerPage, trimLongText) {\n        // Chromium handles very poorly text even of a few thousand chars\n        // Cut text to avoid stalling the entire UI\n        const LIMIT_CHARS = 500;\n        const selectionStartPage = PagedScreenReaderStrategy._getPageOfLine(selection.startLineNumber, linesPerPage);\n        const selectionStartPageRange = PagedScreenReaderStrategy._getRangeForPage(selectionStartPage, linesPerPage);\n        const selectionEndPage = PagedScreenReaderStrategy._getPageOfLine(selection.endLineNumber, linesPerPage);\n        const selectionEndPageRange = PagedScreenReaderStrategy._getRangeForPage(selectionEndPage, linesPerPage);\n        let pretextRange = selectionStartPageRange.intersectRanges(new Range(1, 1, selection.startLineNumber, selection.startColumn));\n        if (trimLongText && model.getValueLengthInRange(pretextRange, 1 /* EndOfLinePreference.LF */) > LIMIT_CHARS) {\n            const pretextStart = model.modifyPosition(pretextRange.getEndPosition(), -LIMIT_CHARS);\n            pretextRange = Range.fromPositions(pretextStart, pretextRange.getEndPosition());\n        }\n        const pretext = model.getValueInRange(pretextRange, 1 /* EndOfLinePreference.LF */);\n        const lastLine = model.getLineCount();\n        const lastLineMaxColumn = model.getLineMaxColumn(lastLine);\n        let posttextRange = selectionEndPageRange.intersectRanges(new Range(selection.endLineNumber, selection.endColumn, lastLine, lastLineMaxColumn));\n        if (trimLongText && model.getValueLengthInRange(posttextRange, 1 /* EndOfLinePreference.LF */) > LIMIT_CHARS) {\n            const posttextEnd = model.modifyPosition(posttextRange.getStartPosition(), LIMIT_CHARS);\n            posttextRange = Range.fromPositions(posttextRange.getStartPosition(), posttextEnd);\n        }\n        const posttext = model.getValueInRange(posttextRange, 1 /* EndOfLinePreference.LF */);\n        let text;\n        if (selectionStartPage === selectionEndPage || selectionStartPage + 1 === selectionEndPage) {\n            // take full selection\n            text = model.getValueInRange(selection, 1 /* EndOfLinePreference.LF */);\n        }\n        else {\n            const selectionRange1 = selectionStartPageRange.intersectRanges(selection);\n            const selectionRange2 = selectionEndPageRange.intersectRanges(selection);\n            text = (model.getValueInRange(selectionRange1, 1 /* EndOfLinePreference.LF */)\n                + String.fromCharCode(8230)\n                + model.getValueInRange(selectionRange2, 1 /* EndOfLinePreference.LF */));\n        }\n        if (trimLongText && text.length > 2 * LIMIT_CHARS) {\n            text = text.substring(0, LIMIT_CHARS) + String.fromCharCode(8230) + text.substring(text.length - LIMIT_CHARS, text.length);\n        }\n        return new TextAreaState(pretext + text + posttext, pretext.length, pretext.length + text.length, selection, pretextRange.endLineNumber - pretextRange.startLineNumber);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nimport { isFirefox } from '../../base/browser/browser.js';\nimport * as types from '../../base/common/types.js';\nimport { status } from '../../base/browser/ui/aria/aria.js';\nimport { Command, EditorCommand, registerEditorCommand, UndoCommand, RedoCommand, SelectAllCommand } from './editorExtensions.js';\nimport { ICodeEditorService } from './services/codeEditorService.js';\nimport { ColumnSelection } from '../common/cursor/cursorColumnSelection.js';\nimport { CursorState } from '../common/cursorCommon.js';\nimport { DeleteOperations } from '../common/cursor/cursorDeleteOperations.js';\nimport { CursorMove as CursorMove_, CursorMoveCommands } from '../common/cursor/cursorMoveCommands.js';\nimport { TypeOperations } from '../common/cursor/cursorTypeOperations.js';\nimport { Position } from '../common/core/position.js';\nimport { Range } from '../common/core/range.js';\nimport { EditorContextKeys } from '../common/editorContextKeys.js';\nimport { ContextKeyExpr } from '../../platform/contextkey/common/contextkey.js';\nimport { KeybindingsRegistry } from '../../platform/keybinding/common/keybindingsRegistry.js';\nconst CORE_WEIGHT = 0 /* KeybindingWeight.EditorCore */;\nexport class CoreEditorCommand extends EditorCommand {\n    runEditorCommand(accessor, editor, args) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            // the editor has no view => has no cursors\n            return;\n        }\n        this.runCoreEditorCommand(viewModel, args || {});\n    }\n}\nexport var EditorScroll_;\n(function (EditorScroll_) {\n    const isEditorScrollArgs = function (arg) {\n        if (!types.isObject(arg)) {\n            return false;\n        }\n        const scrollArg = arg;\n        if (!types.isString(scrollArg.to)) {\n            return false;\n        }\n        if (!types.isUndefined(scrollArg.by) && !types.isString(scrollArg.by)) {\n            return false;\n        }\n        if (!types.isUndefined(scrollArg.value) && !types.isNumber(scrollArg.value)) {\n            return false;\n        }\n        if (!types.isUndefined(scrollArg.revealCursor) && !types.isBoolean(scrollArg.revealCursor)) {\n            return false;\n        }\n        return true;\n    };\n    EditorScroll_.description = {\n        description: 'Scroll editor in the given direction',\n        args: [\n            {\n                name: 'Editor scroll argument object',\n                description: `Property-value pairs that can be passed through this argument:\n\t\t\t\t\t* 'to': A mandatory direction value.\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t\t'up', 'down'\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t* 'by': Unit to move. Default is computed based on 'to' value.\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t\t'line', 'wrappedLine', 'page', 'halfPage', 'editor'\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t* 'value': Number of units to move. Default is '1'.\n\t\t\t\t\t* 'revealCursor': If 'true' reveals the cursor if it is outside view port.\n\t\t\t\t`,\n                constraint: isEditorScrollArgs,\n                schema: {\n                    'type': 'object',\n                    'required': ['to'],\n                    'properties': {\n                        'to': {\n                            'type': 'string',\n                            'enum': ['up', 'down']\n                        },\n                        'by': {\n                            'type': 'string',\n                            'enum': ['line', 'wrappedLine', 'page', 'halfPage', 'editor']\n                        },\n                        'value': {\n                            'type': 'number',\n                            'default': 1\n                        },\n                        'revealCursor': {\n                            'type': 'boolean',\n                        }\n                    }\n                }\n            }\n        ]\n    };\n    /**\n     * Directions in the view for editor scroll command.\n     */\n    EditorScroll_.RawDirection = {\n        Up: 'up',\n        Right: 'right',\n        Down: 'down',\n        Left: 'left'\n    };\n    /**\n     * Units for editor scroll 'by' argument\n     */\n    EditorScroll_.RawUnit = {\n        Line: 'line',\n        WrappedLine: 'wrappedLine',\n        Page: 'page',\n        HalfPage: 'halfPage',\n        Editor: 'editor',\n        Column: 'column'\n    };\n    function parse(args) {\n        let direction;\n        switch (args.to) {\n            case EditorScroll_.RawDirection.Up:\n                direction = 1 /* Direction.Up */;\n                break;\n            case EditorScroll_.RawDirection.Right:\n                direction = 2 /* Direction.Right */;\n                break;\n            case EditorScroll_.RawDirection.Down:\n                direction = 3 /* Direction.Down */;\n                break;\n            case EditorScroll_.RawDirection.Left:\n                direction = 4 /* Direction.Left */;\n                break;\n            default:\n                // Illegal arguments\n                return null;\n        }\n        let unit;\n        switch (args.by) {\n            case EditorScroll_.RawUnit.Line:\n                unit = 1 /* Unit.Line */;\n                break;\n            case EditorScroll_.RawUnit.WrappedLine:\n                unit = 2 /* Unit.WrappedLine */;\n                break;\n            case EditorScroll_.RawUnit.Page:\n                unit = 3 /* Unit.Page */;\n                break;\n            case EditorScroll_.RawUnit.HalfPage:\n                unit = 4 /* Unit.HalfPage */;\n                break;\n            case EditorScroll_.RawUnit.Editor:\n                unit = 5 /* Unit.Editor */;\n                break;\n            case EditorScroll_.RawUnit.Column:\n                unit = 6 /* Unit.Column */;\n                break;\n            default:\n                unit = 2 /* Unit.WrappedLine */;\n        }\n        const value = Math.floor(args.value || 1);\n        const revealCursor = !!args.revealCursor;\n        return {\n            direction: direction,\n            unit: unit,\n            value: value,\n            revealCursor: revealCursor,\n            select: (!!args.select)\n        };\n    }\n    EditorScroll_.parse = parse;\n})(EditorScroll_ || (EditorScroll_ = {}));\nexport var RevealLine_;\n(function (RevealLine_) {\n    const isRevealLineArgs = function (arg) {\n        if (!types.isObject(arg)) {\n            return false;\n        }\n        const reveaLineArg = arg;\n        if (!types.isNumber(reveaLineArg.lineNumber) && !types.isString(reveaLineArg.lineNumber)) {\n            return false;\n        }\n        if (!types.isUndefined(reveaLineArg.at) && !types.isString(reveaLineArg.at)) {\n            return false;\n        }\n        return true;\n    };\n    RevealLine_.description = {\n        description: 'Reveal the given line at the given logical position',\n        args: [\n            {\n                name: 'Reveal line argument object',\n                description: `Property-value pairs that can be passed through this argument:\n\t\t\t\t\t* 'lineNumber': A mandatory line number value.\n\t\t\t\t\t* 'at': Logical position at which line has to be revealed.\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t\t'top', 'center', 'bottom'\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t`,\n                constraint: isRevealLineArgs,\n                schema: {\n                    'type': 'object',\n                    'required': ['lineNumber'],\n                    'properties': {\n                        'lineNumber': {\n                            'type': ['number', 'string'],\n                        },\n                        'at': {\n                            'type': 'string',\n                            'enum': ['top', 'center', 'bottom']\n                        }\n                    }\n                }\n            }\n        ]\n    };\n    /**\n     * Values for reveal line 'at' argument\n     */\n    RevealLine_.RawAtArgument = {\n        Top: 'top',\n        Center: 'center',\n        Bottom: 'bottom'\n    };\n})(RevealLine_ || (RevealLine_ = {}));\nclass EditorOrNativeTextInputCommand {\n    constructor(target) {\n        // 1. handle case when focus is in editor.\n        target.addImplementation(10000, 'code-editor', (accessor, args) => {\n            // Only if editor text focus (i.e. not if editor has widget focus).\n            const focusedEditor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n            if (focusedEditor && focusedEditor.hasTextFocus()) {\n                return this._runEditorCommand(accessor, focusedEditor, args);\n            }\n            return false;\n        });\n        // 2. handle case when focus is in some other `input` / `textarea`.\n        target.addImplementation(1000, 'generic-dom-input-textarea', (accessor, args) => {\n            // Only if focused on an element that allows for entering text\n            const activeElement = document.activeElement;\n            if (activeElement && ['input', 'textarea'].indexOf(activeElement.tagName.toLowerCase()) >= 0) {\n                this.runDOMCommand();\n                return true;\n            }\n            return false;\n        });\n        // 3. (default) handle case when focus is somewhere else.\n        target.addImplementation(0, 'generic-dom', (accessor, args) => {\n            // Redirecting to active editor\n            const activeEditor = accessor.get(ICodeEditorService).getActiveCodeEditor();\n            if (activeEditor) {\n                activeEditor.focus();\n                return this._runEditorCommand(accessor, activeEditor, args);\n            }\n            return false;\n        });\n    }\n    _runEditorCommand(accessor, editor, args) {\n        const result = this.runEditorCommand(accessor, editor, args);\n        if (result) {\n            return result;\n        }\n        return true;\n    }\n}\nexport var CoreNavigationCommands;\n(function (CoreNavigationCommands) {\n    class BaseMoveToCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.position) {\n                return;\n            }\n            viewModel.model.pushStackElement();\n            const cursorStateChanged = viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, [\n                CursorMoveCommands.moveTo(viewModel, viewModel.getPrimaryCursorState(), this._inSelectionMode, args.position, args.viewPosition)\n            ]);\n            if (cursorStateChanged && args.revealType !== 2 /* NavigationCommandRevealType.None */) {\n                viewModel.revealPrimaryCursor(args.source, true, true);\n            }\n        }\n    }\n    CoreNavigationCommands.MoveTo = registerEditorCommand(new BaseMoveToCommand({\n        id: '_moveTo',\n        inSelectionMode: false,\n        precondition: undefined\n    }));\n    CoreNavigationCommands.MoveToSelect = registerEditorCommand(new BaseMoveToCommand({\n        id: '_moveToSelect',\n        inSelectionMode: true,\n        precondition: undefined\n    }));\n    class ColumnSelectCommand extends CoreEditorCommand {\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            const result = this._getColumnSelectResult(viewModel, viewModel.getPrimaryCursorState(), viewModel.getCursorColumnSelectData(), args);\n            if (result === null) {\n                // invalid arguments\n                return;\n            }\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, result.viewStates.map((viewState) => CursorState.fromViewState(viewState)));\n            viewModel.setCursorColumnSelectData({\n                isReal: true,\n                fromViewLineNumber: result.fromLineNumber,\n                fromViewVisualColumn: result.fromVisualColumn,\n                toViewLineNumber: result.toLineNumber,\n                toViewVisualColumn: result.toVisualColumn\n            });\n            if (result.reversed) {\n                viewModel.revealTopMostCursor(args.source);\n            }\n            else {\n                viewModel.revealBottomMostCursor(args.source);\n            }\n        }\n    }\n    CoreNavigationCommands.ColumnSelect = registerEditorCommand(new class extends ColumnSelectCommand {\n        constructor() {\n            super({\n                id: 'columnSelect',\n                precondition: undefined\n            });\n        }\n        _getColumnSelectResult(viewModel, primary, prevColumnSelectData, args) {\n            if (typeof args.position === 'undefined' || typeof args.viewPosition === 'undefined' || typeof args.mouseColumn === 'undefined') {\n                return null;\n            }\n            // validate `args`\n            const validatedPosition = viewModel.model.validatePosition(args.position);\n            const validatedViewPosition = viewModel.coordinatesConverter.validateViewPosition(new Position(args.viewPosition.lineNumber, args.viewPosition.column), validatedPosition);\n            const fromViewLineNumber = args.doColumnSelect ? prevColumnSelectData.fromViewLineNumber : validatedViewPosition.lineNumber;\n            const fromViewVisualColumn = args.doColumnSelect ? prevColumnSelectData.fromViewVisualColumn : args.mouseColumn - 1;\n            return ColumnSelection.columnSelect(viewModel.cursorConfig, viewModel, fromViewLineNumber, fromViewVisualColumn, validatedViewPosition.lineNumber, args.mouseColumn - 1);\n        }\n    });\n    CoreNavigationCommands.CursorColumnSelectLeft = registerEditorCommand(new class extends ColumnSelectCommand {\n        constructor() {\n            super({\n                id: 'cursorColumnSelectLeft',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 15 /* KeyCode.LeftArrow */,\n                    linux: { primary: 0 }\n                }\n            });\n        }\n        _getColumnSelectResult(viewModel, primary, prevColumnSelectData, args) {\n            return ColumnSelection.columnSelectLeft(viewModel.cursorConfig, viewModel, prevColumnSelectData);\n        }\n    });\n    CoreNavigationCommands.CursorColumnSelectRight = registerEditorCommand(new class extends ColumnSelectCommand {\n        constructor() {\n            super({\n                id: 'cursorColumnSelectRight',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 17 /* KeyCode.RightArrow */,\n                    linux: { primary: 0 }\n                }\n            });\n        }\n        _getColumnSelectResult(viewModel, primary, prevColumnSelectData, args) {\n            return ColumnSelection.columnSelectRight(viewModel.cursorConfig, viewModel, prevColumnSelectData);\n        }\n    });\n    class ColumnSelectUpCommand extends ColumnSelectCommand {\n        constructor(opts) {\n            super(opts);\n            this._isPaged = opts.isPaged;\n        }\n        _getColumnSelectResult(viewModel, primary, prevColumnSelectData, args) {\n            return ColumnSelection.columnSelectUp(viewModel.cursorConfig, viewModel, prevColumnSelectData, this._isPaged);\n        }\n    }\n    CoreNavigationCommands.CursorColumnSelectUp = registerEditorCommand(new ColumnSelectUpCommand({\n        isPaged: false,\n        id: 'cursorColumnSelectUp',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */,\n            linux: { primary: 0 }\n        }\n    }));\n    CoreNavigationCommands.CursorColumnSelectPageUp = registerEditorCommand(new ColumnSelectUpCommand({\n        isPaged: true,\n        id: 'cursorColumnSelectPageUp',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 11 /* KeyCode.PageUp */,\n            linux: { primary: 0 }\n        }\n    }));\n    class ColumnSelectDownCommand extends ColumnSelectCommand {\n        constructor(opts) {\n            super(opts);\n            this._isPaged = opts.isPaged;\n        }\n        _getColumnSelectResult(viewModel, primary, prevColumnSelectData, args) {\n            return ColumnSelection.columnSelectDown(viewModel.cursorConfig, viewModel, prevColumnSelectData, this._isPaged);\n        }\n    }\n    CoreNavigationCommands.CursorColumnSelectDown = registerEditorCommand(new ColumnSelectDownCommand({\n        isPaged: false,\n        id: 'cursorColumnSelectDown',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */,\n            linux: { primary: 0 }\n        }\n    }));\n    CoreNavigationCommands.CursorColumnSelectPageDown = registerEditorCommand(new ColumnSelectDownCommand({\n        isPaged: true,\n        id: 'cursorColumnSelectPageDown',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 12 /* KeyCode.PageDown */,\n            linux: { primary: 0 }\n        }\n    }));\n    class CursorMoveImpl extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'cursorMove',\n                precondition: undefined,\n                description: CursorMove_.description\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            const parsed = CursorMove_.parse(args);\n            if (!parsed) {\n                // illegal arguments\n                return;\n            }\n            this._runCursorMove(viewModel, args.source, parsed);\n        }\n        _runCursorMove(viewModel, source, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(source, 3 /* CursorChangeReason.Explicit */, CursorMoveImpl._move(viewModel, viewModel.getCursorStates(), args));\n            viewModel.revealPrimaryCursor(source, true);\n        }\n        static _move(viewModel, cursors, args) {\n            const inSelectionMode = args.select;\n            const value = args.value;\n            switch (args.direction) {\n                case 0 /* CursorMove_.Direction.Left */:\n                case 1 /* CursorMove_.Direction.Right */:\n                case 2 /* CursorMove_.Direction.Up */:\n                case 3 /* CursorMove_.Direction.Down */:\n                case 4 /* CursorMove_.Direction.PrevBlankLine */:\n                case 5 /* CursorMove_.Direction.NextBlankLine */:\n                case 6 /* CursorMove_.Direction.WrappedLineStart */:\n                case 7 /* CursorMove_.Direction.WrappedLineFirstNonWhitespaceCharacter */:\n                case 8 /* CursorMove_.Direction.WrappedLineColumnCenter */:\n                case 9 /* CursorMove_.Direction.WrappedLineEnd */:\n                case 10 /* CursorMove_.Direction.WrappedLineLastNonWhitespaceCharacter */:\n                    return CursorMoveCommands.simpleMove(viewModel, cursors, args.direction, inSelectionMode, value, args.unit);\n                case 11 /* CursorMove_.Direction.ViewPortTop */:\n                case 13 /* CursorMove_.Direction.ViewPortBottom */:\n                case 12 /* CursorMove_.Direction.ViewPortCenter */:\n                case 14 /* CursorMove_.Direction.ViewPortIfOutside */:\n                    return CursorMoveCommands.viewportMove(viewModel, cursors, args.direction, inSelectionMode, value);\n                default:\n                    return null;\n            }\n        }\n    }\n    CoreNavigationCommands.CursorMoveImpl = CursorMoveImpl;\n    CoreNavigationCommands.CursorMove = registerEditorCommand(new CursorMoveImpl());\n    class CursorMoveBasedCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._staticArgs = opts.args;\n        }\n        runCoreEditorCommand(viewModel, dynamicArgs) {\n            let args = this._staticArgs;\n            if (this._staticArgs.value === -1 /* Constants.PAGE_SIZE_MARKER */) {\n                // -1 is a marker for page size\n                args = {\n                    direction: this._staticArgs.direction,\n                    unit: this._staticArgs.unit,\n                    select: this._staticArgs.select,\n                    value: dynamicArgs.pageSize || viewModel.cursorConfig.pageSize\n                };\n            }\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(dynamicArgs.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.simpleMove(viewModel, viewModel.getCursorStates(), args.direction, args.select, args.value, args.unit));\n            viewModel.revealPrimaryCursor(dynamicArgs.source, true);\n        }\n    }\n    CoreNavigationCommands.CursorLeft = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 0 /* CursorMove_.Direction.Left */,\n            unit: 0 /* CursorMove_.Unit.None */,\n            select: false,\n            value: 1\n        },\n        id: 'cursorLeft',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 15 /* KeyCode.LeftArrow */,\n            mac: { primary: 15 /* KeyCode.LeftArrow */, secondary: [256 /* KeyMod.WinCtrl */ | 32 /* KeyCode.KeyB */] }\n        }\n    }));\n    CoreNavigationCommands.CursorLeftSelect = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 0 /* CursorMove_.Direction.Left */,\n            unit: 0 /* CursorMove_.Unit.None */,\n            select: true,\n            value: 1\n        },\n        id: 'cursorLeftSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 15 /* KeyCode.LeftArrow */\n        }\n    }));\n    CoreNavigationCommands.CursorRight = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 1 /* CursorMove_.Direction.Right */,\n            unit: 0 /* CursorMove_.Unit.None */,\n            select: false,\n            value: 1\n        },\n        id: 'cursorRight',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 17 /* KeyCode.RightArrow */,\n            mac: { primary: 17 /* KeyCode.RightArrow */, secondary: [256 /* KeyMod.WinCtrl */ | 36 /* KeyCode.KeyF */] }\n        }\n    }));\n    CoreNavigationCommands.CursorRightSelect = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 1 /* CursorMove_.Direction.Right */,\n            unit: 0 /* CursorMove_.Unit.None */,\n            select: true,\n            value: 1\n        },\n        id: 'cursorRightSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 17 /* KeyCode.RightArrow */\n        }\n    }));\n    CoreNavigationCommands.CursorUp = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 2 /* CursorMove_.Direction.Up */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: false,\n            value: 1\n        },\n        id: 'cursorUp',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 16 /* KeyCode.UpArrow */,\n            mac: { primary: 16 /* KeyCode.UpArrow */, secondary: [256 /* KeyMod.WinCtrl */ | 46 /* KeyCode.KeyP */] }\n        }\n    }));\n    CoreNavigationCommands.CursorUpSelect = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 2 /* CursorMove_.Direction.Up */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: true,\n            value: 1\n        },\n        id: 'cursorUpSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */,\n            secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */],\n            mac: { primary: 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */ },\n            linux: { primary: 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */ }\n        }\n    }));\n    CoreNavigationCommands.CursorPageUp = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 2 /* CursorMove_.Direction.Up */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: false,\n            value: -1 /* Constants.PAGE_SIZE_MARKER */\n        },\n        id: 'cursorPageUp',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 11 /* KeyCode.PageUp */\n        }\n    }));\n    CoreNavigationCommands.CursorPageUpSelect = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 2 /* CursorMove_.Direction.Up */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: true,\n            value: -1 /* Constants.PAGE_SIZE_MARKER */\n        },\n        id: 'cursorPageUpSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 11 /* KeyCode.PageUp */\n        }\n    }));\n    CoreNavigationCommands.CursorDown = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 3 /* CursorMove_.Direction.Down */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: false,\n            value: 1\n        },\n        id: 'cursorDown',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 18 /* KeyCode.DownArrow */,\n            mac: { primary: 18 /* KeyCode.DownArrow */, secondary: [256 /* KeyMod.WinCtrl */ | 44 /* KeyCode.KeyN */] }\n        }\n    }));\n    CoreNavigationCommands.CursorDownSelect = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 3 /* CursorMove_.Direction.Down */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: true,\n            value: 1\n        },\n        id: 'cursorDownSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */,\n            secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */],\n            mac: { primary: 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */ },\n            linux: { primary: 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */ }\n        }\n    }));\n    CoreNavigationCommands.CursorPageDown = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 3 /* CursorMove_.Direction.Down */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: false,\n            value: -1 /* Constants.PAGE_SIZE_MARKER */\n        },\n        id: 'cursorPageDown',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 12 /* KeyCode.PageDown */\n        }\n    }));\n    CoreNavigationCommands.CursorPageDownSelect = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 3 /* CursorMove_.Direction.Down */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: true,\n            value: -1 /* Constants.PAGE_SIZE_MARKER */\n        },\n        id: 'cursorPageDownSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 12 /* KeyCode.PageDown */\n        }\n    }));\n    CoreNavigationCommands.CreateCursor = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'createCursor',\n                precondition: undefined\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.position) {\n                return;\n            }\n            let newState;\n            if (args.wholeLine) {\n                newState = CursorMoveCommands.line(viewModel, viewModel.getPrimaryCursorState(), false, args.position, args.viewPosition);\n            }\n            else {\n                newState = CursorMoveCommands.moveTo(viewModel, viewModel.getPrimaryCursorState(), false, args.position, args.viewPosition);\n            }\n            const states = viewModel.getCursorStates();\n            // Check if we should remove a cursor (sort of like a toggle)\n            if (states.length > 1) {\n                const newModelPosition = (newState.modelState ? newState.modelState.position : null);\n                const newViewPosition = (newState.viewState ? newState.viewState.position : null);\n                for (let i = 0, len = states.length; i < len; i++) {\n                    const state = states[i];\n                    if (newModelPosition && !state.modelState.selection.containsPosition(newModelPosition)) {\n                        continue;\n                    }\n                    if (newViewPosition && !state.viewState.selection.containsPosition(newViewPosition)) {\n                        continue;\n                    }\n                    // => Remove the cursor\n                    states.splice(i, 1);\n                    viewModel.model.pushStackElement();\n                    viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, states);\n                    return;\n                }\n            }\n            // => Add the new cursor\n            states.push(newState);\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, states);\n        }\n    });\n    CoreNavigationCommands.LastCursorMoveToSelect = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: '_lastCursorMoveToSelect',\n                precondition: undefined\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.position) {\n                return;\n            }\n            const lastAddedCursorIndex = viewModel.getLastAddedCursorIndex();\n            const states = viewModel.getCursorStates();\n            const newStates = states.slice(0);\n            newStates[lastAddedCursorIndex] = CursorMoveCommands.moveTo(viewModel, states[lastAddedCursorIndex], true, args.position, args.viewPosition);\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, newStates);\n        }\n    });\n    class HomeCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.moveToBeginningOfLine(viewModel, viewModel.getCursorStates(), this._inSelectionMode));\n            viewModel.revealPrimaryCursor(args.source, true);\n        }\n    }\n    CoreNavigationCommands.CursorHome = registerEditorCommand(new HomeCommand({\n        inSelectionMode: false,\n        id: 'cursorHome',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 14 /* KeyCode.Home */,\n            mac: { primary: 14 /* KeyCode.Home */, secondary: [2048 /* KeyMod.CtrlCmd */ | 15 /* KeyCode.LeftArrow */] }\n        }\n    }));\n    CoreNavigationCommands.CursorHomeSelect = registerEditorCommand(new HomeCommand({\n        inSelectionMode: true,\n        id: 'cursorHomeSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 14 /* KeyCode.Home */,\n            mac: { primary: 1024 /* KeyMod.Shift */ | 14 /* KeyCode.Home */, secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 15 /* KeyCode.LeftArrow */] }\n        }\n    }));\n    class LineStartCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, this._exec(viewModel.getCursorStates()));\n            viewModel.revealPrimaryCursor(args.source, true);\n        }\n        _exec(cursors) {\n            const result = [];\n            for (let i = 0, len = cursors.length; i < len; i++) {\n                const cursor = cursors[i];\n                const lineNumber = cursor.modelState.position.lineNumber;\n                result[i] = CursorState.fromModelState(cursor.modelState.move(this._inSelectionMode, lineNumber, 1, 0));\n            }\n            return result;\n        }\n    }\n    CoreNavigationCommands.CursorLineStart = registerEditorCommand(new LineStartCommand({\n        inSelectionMode: false,\n        id: 'cursorLineStart',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 0,\n            mac: { primary: 256 /* KeyMod.WinCtrl */ | 31 /* KeyCode.KeyA */ }\n        }\n    }));\n    CoreNavigationCommands.CursorLineStartSelect = registerEditorCommand(new LineStartCommand({\n        inSelectionMode: true,\n        id: 'cursorLineStartSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 0,\n            mac: { primary: 256 /* KeyMod.WinCtrl */ | 1024 /* KeyMod.Shift */ | 31 /* KeyCode.KeyA */ }\n        }\n    }));\n    class EndCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.moveToEndOfLine(viewModel, viewModel.getCursorStates(), this._inSelectionMode, args.sticky || false));\n            viewModel.revealPrimaryCursor(args.source, true);\n        }\n    }\n    CoreNavigationCommands.CursorEnd = registerEditorCommand(new EndCommand({\n        inSelectionMode: false,\n        id: 'cursorEnd',\n        precondition: undefined,\n        kbOpts: {\n            args: { sticky: false },\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 13 /* KeyCode.End */,\n            mac: { primary: 13 /* KeyCode.End */, secondary: [2048 /* KeyMod.CtrlCmd */ | 17 /* KeyCode.RightArrow */] }\n        },\n        description: {\n            description: `Go to End`,\n            args: [{\n                    name: 'args',\n                    schema: {\n                        type: 'object',\n                        properties: {\n                            'sticky': {\n                                description: nls.localize('stickydesc', \"Stick to the end even when going to longer lines\"),\n                                type: 'boolean',\n                                default: false\n                            }\n                        }\n                    }\n                }]\n        }\n    }));\n    CoreNavigationCommands.CursorEndSelect = registerEditorCommand(new EndCommand({\n        inSelectionMode: true,\n        id: 'cursorEndSelect',\n        precondition: undefined,\n        kbOpts: {\n            args: { sticky: false },\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 13 /* KeyCode.End */,\n            mac: { primary: 1024 /* KeyMod.Shift */ | 13 /* KeyCode.End */, secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 17 /* KeyCode.RightArrow */] }\n        },\n        description: {\n            description: `Select to End`,\n            args: [{\n                    name: 'args',\n                    schema: {\n                        type: 'object',\n                        properties: {\n                            'sticky': {\n                                description: nls.localize('stickydesc', \"Stick to the end even when going to longer lines\"),\n                                type: 'boolean',\n                                default: false\n                            }\n                        }\n                    }\n                }]\n        }\n    }));\n    class LineEndCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, this._exec(viewModel, viewModel.getCursorStates()));\n            viewModel.revealPrimaryCursor(args.source, true);\n        }\n        _exec(viewModel, cursors) {\n            const result = [];\n            for (let i = 0, len = cursors.length; i < len; i++) {\n                const cursor = cursors[i];\n                const lineNumber = cursor.modelState.position.lineNumber;\n                const maxColumn = viewModel.model.getLineMaxColumn(lineNumber);\n                result[i] = CursorState.fromModelState(cursor.modelState.move(this._inSelectionMode, lineNumber, maxColumn, 0));\n            }\n            return result;\n        }\n    }\n    CoreNavigationCommands.CursorLineEnd = registerEditorCommand(new LineEndCommand({\n        inSelectionMode: false,\n        id: 'cursorLineEnd',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 0,\n            mac: { primary: 256 /* KeyMod.WinCtrl */ | 35 /* KeyCode.KeyE */ }\n        }\n    }));\n    CoreNavigationCommands.CursorLineEndSelect = registerEditorCommand(new LineEndCommand({\n        inSelectionMode: true,\n        id: 'cursorLineEndSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 0,\n            mac: { primary: 256 /* KeyMod.WinCtrl */ | 1024 /* KeyMod.Shift */ | 35 /* KeyCode.KeyE */ }\n        }\n    }));\n    class TopCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.moveToBeginningOfBuffer(viewModel, viewModel.getCursorStates(), this._inSelectionMode));\n            viewModel.revealPrimaryCursor(args.source, true);\n        }\n    }\n    CoreNavigationCommands.CursorTop = registerEditorCommand(new TopCommand({\n        inSelectionMode: false,\n        id: 'cursorTop',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 14 /* KeyCode.Home */,\n            mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */ }\n        }\n    }));\n    CoreNavigationCommands.CursorTopSelect = registerEditorCommand(new TopCommand({\n        inSelectionMode: true,\n        id: 'cursorTopSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 14 /* KeyCode.Home */,\n            mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */ }\n        }\n    }));\n    class BottomCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.moveToEndOfBuffer(viewModel, viewModel.getCursorStates(), this._inSelectionMode));\n            viewModel.revealPrimaryCursor(args.source, true);\n        }\n    }\n    CoreNavigationCommands.CursorBottom = registerEditorCommand(new BottomCommand({\n        inSelectionMode: false,\n        id: 'cursorBottom',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 13 /* KeyCode.End */,\n            mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */ }\n        }\n    }));\n    CoreNavigationCommands.CursorBottomSelect = registerEditorCommand(new BottomCommand({\n        inSelectionMode: true,\n        id: 'cursorBottomSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 13 /* KeyCode.End */,\n            mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */ }\n        }\n    }));\n    class EditorScrollImpl extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'editorScroll',\n                precondition: undefined,\n                description: EditorScroll_.description\n            });\n        }\n        determineScrollMethod(args) {\n            const horizontalUnits = [6 /* EditorScroll_.Unit.Column */];\n            const verticalUnits = [\n                1 /* EditorScroll_.Unit.Line */,\n                2 /* EditorScroll_.Unit.WrappedLine */,\n                3 /* EditorScroll_.Unit.Page */,\n                4 /* EditorScroll_.Unit.HalfPage */,\n                5 /* EditorScroll_.Unit.Editor */,\n                6 /* EditorScroll_.Unit.Column */\n            ];\n            const horizontalDirections = [4 /* EditorScroll_.Direction.Left */, 2 /* EditorScroll_.Direction.Right */];\n            const verticalDirections = [1 /* EditorScroll_.Direction.Up */, 3 /* EditorScroll_.Direction.Down */];\n            if (horizontalUnits.includes(args.unit) && horizontalDirections.includes(args.direction)) {\n                return this._runHorizontalEditorScroll.bind(this);\n            }\n            if (verticalUnits.includes(args.unit) && verticalDirections.includes(args.direction)) {\n                return this._runVerticalEditorScroll.bind(this);\n            }\n            return null;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            const parsed = EditorScroll_.parse(args);\n            if (!parsed) {\n                // illegal arguments\n                return;\n            }\n            const runEditorScroll = this.determineScrollMethod(parsed);\n            if (!runEditorScroll) {\n                // Incompatible unit and direction\n                return;\n            }\n            runEditorScroll(viewModel, args.source, parsed);\n        }\n        _runVerticalEditorScroll(viewModel, source, args) {\n            const desiredScrollTop = this._computeDesiredScrollTop(viewModel, args);\n            if (args.revealCursor) {\n                // must ensure cursor is in new visible range\n                const desiredVisibleViewRange = viewModel.getCompletelyVisibleViewRangeAtScrollTop(desiredScrollTop);\n                viewModel.setCursorStates(source, 3 /* CursorChangeReason.Explicit */, [\n                    CursorMoveCommands.findPositionInViewportIfOutside(viewModel, viewModel.getPrimaryCursorState(), desiredVisibleViewRange, args.select)\n                ]);\n            }\n            viewModel.viewLayout.setScrollPosition({ scrollTop: desiredScrollTop }, 0 /* ScrollType.Smooth */);\n        }\n        _computeDesiredScrollTop(viewModel, args) {\n            if (args.unit === 1 /* EditorScroll_.Unit.Line */) {\n                // scrolling by model lines\n                const futureViewport = viewModel.viewLayout.getFutureViewport();\n                const visibleViewRange = viewModel.getCompletelyVisibleViewRangeAtScrollTop(futureViewport.top);\n                const visibleModelRange = viewModel.coordinatesConverter.convertViewRangeToModelRange(visibleViewRange);\n                let desiredTopModelLineNumber;\n                if (args.direction === 1 /* EditorScroll_.Direction.Up */) {\n                    // must go x model lines up\n                    desiredTopModelLineNumber = Math.max(1, visibleModelRange.startLineNumber - args.value);\n                }\n                else {\n                    // must go x model lines down\n                    desiredTopModelLineNumber = Math.min(viewModel.model.getLineCount(), visibleModelRange.startLineNumber + args.value);\n                }\n                const viewPosition = viewModel.coordinatesConverter.convertModelPositionToViewPosition(new Position(desiredTopModelLineNumber, 1));\n                return viewModel.viewLayout.getVerticalOffsetForLineNumber(viewPosition.lineNumber);\n            }\n            if (args.unit === 5 /* EditorScroll_.Unit.Editor */) {\n                let desiredTopModelLineNumber = 0;\n                if (args.direction === 3 /* EditorScroll_.Direction.Down */) {\n                    desiredTopModelLineNumber = viewModel.model.getLineCount() - viewModel.cursorConfig.pageSize;\n                }\n                return viewModel.viewLayout.getVerticalOffsetForLineNumber(desiredTopModelLineNumber);\n            }\n            let noOfLines;\n            if (args.unit === 3 /* EditorScroll_.Unit.Page */) {\n                noOfLines = viewModel.cursorConfig.pageSize * args.value;\n            }\n            else if (args.unit === 4 /* EditorScroll_.Unit.HalfPage */) {\n                noOfLines = Math.round(viewModel.cursorConfig.pageSize / 2) * args.value;\n            }\n            else {\n                noOfLines = args.value;\n            }\n            const deltaLines = (args.direction === 1 /* EditorScroll_.Direction.Up */ ? -1 : 1) * noOfLines;\n            return viewModel.viewLayout.getCurrentScrollTop() + deltaLines * viewModel.cursorConfig.lineHeight;\n        }\n        _runHorizontalEditorScroll(viewModel, source, args) {\n            const desiredScrollLeft = this._computeDesiredScrollLeft(viewModel, args);\n            viewModel.viewLayout.setScrollPosition({ scrollLeft: desiredScrollLeft }, 0 /* ScrollType.Smooth */);\n        }\n        _computeDesiredScrollLeft(viewModel, args) {\n            const deltaColumns = (args.direction === 4 /* EditorScroll_.Direction.Left */ ? -1 : 1) * args.value;\n            return viewModel.viewLayout.getCurrentScrollLeft() + deltaColumns * viewModel.cursorConfig.typicalHalfwidthCharacterWidth;\n        }\n    }\n    CoreNavigationCommands.EditorScrollImpl = EditorScrollImpl;\n    CoreNavigationCommands.EditorScroll = registerEditorCommand(new EditorScrollImpl());\n    CoreNavigationCommands.ScrollLineUp = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollLineUp',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */,\n                    mac: { primary: 256 /* KeyMod.WinCtrl */ | 11 /* KeyCode.PageUp */ }\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Up,\n                by: EditorScroll_.RawUnit.WrappedLine,\n                value: 1,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    CoreNavigationCommands.ScrollPageUp = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollPageUp',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 11 /* KeyCode.PageUp */,\n                    win: { primary: 512 /* KeyMod.Alt */ | 11 /* KeyCode.PageUp */ },\n                    linux: { primary: 512 /* KeyMod.Alt */ | 11 /* KeyCode.PageUp */ }\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Up,\n                by: EditorScroll_.RawUnit.Page,\n                value: 1,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    CoreNavigationCommands.ScrollEditorTop = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollEditorTop',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Up,\n                by: EditorScroll_.RawUnit.Editor,\n                value: 1,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    CoreNavigationCommands.ScrollLineDown = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollLineDown',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */,\n                    mac: { primary: 256 /* KeyMod.WinCtrl */ | 12 /* KeyCode.PageDown */ }\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Down,\n                by: EditorScroll_.RawUnit.WrappedLine,\n                value: 1,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    CoreNavigationCommands.ScrollPageDown = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollPageDown',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 12 /* KeyCode.PageDown */,\n                    win: { primary: 512 /* KeyMod.Alt */ | 12 /* KeyCode.PageDown */ },\n                    linux: { primary: 512 /* KeyMod.Alt */ | 12 /* KeyCode.PageDown */ }\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Down,\n                by: EditorScroll_.RawUnit.Page,\n                value: 1,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    CoreNavigationCommands.ScrollEditorBottom = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollEditorBottom',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Down,\n                by: EditorScroll_.RawUnit.Editor,\n                value: 1,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    CoreNavigationCommands.ScrollLeft = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollLeft',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Left,\n                by: EditorScroll_.RawUnit.Column,\n                value: 2,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    CoreNavigationCommands.ScrollRight = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollRight',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Right,\n                by: EditorScroll_.RawUnit.Column,\n                value: 2,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    class WordCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.position) {\n                return;\n            }\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, [\n                CursorMoveCommands.word(viewModel, viewModel.getPrimaryCursorState(), this._inSelectionMode, args.position)\n            ]);\n            if (args.revealType !== 2 /* NavigationCommandRevealType.None */) {\n                viewModel.revealPrimaryCursor(args.source, true, true);\n            }\n        }\n    }\n    CoreNavigationCommands.WordSelect = registerEditorCommand(new WordCommand({\n        inSelectionMode: false,\n        id: '_wordSelect',\n        precondition: undefined\n    }));\n    CoreNavigationCommands.WordSelectDrag = registerEditorCommand(new WordCommand({\n        inSelectionMode: true,\n        id: '_wordSelectDrag',\n        precondition: undefined\n    }));\n    CoreNavigationCommands.LastCursorWordSelect = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'lastCursorWordSelect',\n                precondition: undefined\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.position) {\n                return;\n            }\n            const lastAddedCursorIndex = viewModel.getLastAddedCursorIndex();\n            const states = viewModel.getCursorStates();\n            const newStates = states.slice(0);\n            const lastAddedState = states[lastAddedCursorIndex];\n            newStates[lastAddedCursorIndex] = CursorMoveCommands.word(viewModel, lastAddedState, lastAddedState.modelState.hasSelection(), args.position);\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, newStates);\n        }\n    });\n    class LineCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.position) {\n                return;\n            }\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, [\n                CursorMoveCommands.line(viewModel, viewModel.getPrimaryCursorState(), this._inSelectionMode, args.position, args.viewPosition)\n            ]);\n            if (args.revealType !== 2 /* NavigationCommandRevealType.None */) {\n                viewModel.revealPrimaryCursor(args.source, false, true);\n            }\n        }\n    }\n    CoreNavigationCommands.LineSelect = registerEditorCommand(new LineCommand({\n        inSelectionMode: false,\n        id: '_lineSelect',\n        precondition: undefined\n    }));\n    CoreNavigationCommands.LineSelectDrag = registerEditorCommand(new LineCommand({\n        inSelectionMode: true,\n        id: '_lineSelectDrag',\n        precondition: undefined\n    }));\n    class LastCursorLineCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.position) {\n                return;\n            }\n            const lastAddedCursorIndex = viewModel.getLastAddedCursorIndex();\n            const states = viewModel.getCursorStates();\n            const newStates = states.slice(0);\n            newStates[lastAddedCursorIndex] = CursorMoveCommands.line(viewModel, states[lastAddedCursorIndex], this._inSelectionMode, args.position, args.viewPosition);\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, newStates);\n        }\n    }\n    CoreNavigationCommands.LastCursorLineSelect = registerEditorCommand(new LastCursorLineCommand({\n        inSelectionMode: false,\n        id: 'lastCursorLineSelect',\n        precondition: undefined\n    }));\n    CoreNavigationCommands.LastCursorLineSelectDrag = registerEditorCommand(new LastCursorLineCommand({\n        inSelectionMode: true,\n        id: 'lastCursorLineSelectDrag',\n        precondition: undefined\n    }));\n    CoreNavigationCommands.CancelSelection = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'cancelSelection',\n                precondition: EditorContextKeys.hasNonEmptySelection,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 9 /* KeyCode.Escape */,\n                    secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, [\n                CursorMoveCommands.cancelSelection(viewModel, viewModel.getPrimaryCursorState())\n            ]);\n            viewModel.revealPrimaryCursor(args.source, true);\n        }\n    });\n    CoreNavigationCommands.RemoveSecondaryCursors = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'removeSecondaryCursors',\n                precondition: EditorContextKeys.hasMultipleSelections,\n                kbOpts: {\n                    weight: CORE_WEIGHT + 1,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 9 /* KeyCode.Escape */,\n                    secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, [\n                viewModel.getPrimaryCursorState()\n            ]);\n            viewModel.revealPrimaryCursor(args.source, true);\n            status(nls.localize('removedCursor', \"Removed secondary cursors\"));\n        }\n    });\n    CoreNavigationCommands.RevealLine = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'revealLine',\n                precondition: undefined,\n                description: RevealLine_.description\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            const revealLineArg = args;\n            const lineNumberArg = revealLineArg.lineNumber || 0;\n            let lineNumber = typeof lineNumberArg === 'number' ? (lineNumberArg + 1) : (parseInt(lineNumberArg) + 1);\n            if (lineNumber < 1) {\n                lineNumber = 1;\n            }\n            const lineCount = viewModel.model.getLineCount();\n            if (lineNumber > lineCount) {\n                lineNumber = lineCount;\n            }\n            const range = new Range(lineNumber, 1, lineNumber, viewModel.model.getLineMaxColumn(lineNumber));\n            let revealAt = 0 /* VerticalRevealType.Simple */;\n            if (revealLineArg.at) {\n                switch (revealLineArg.at) {\n                    case RevealLine_.RawAtArgument.Top:\n                        revealAt = 3 /* VerticalRevealType.Top */;\n                        break;\n                    case RevealLine_.RawAtArgument.Center:\n                        revealAt = 1 /* VerticalRevealType.Center */;\n                        break;\n                    case RevealLine_.RawAtArgument.Bottom:\n                        revealAt = 4 /* VerticalRevealType.Bottom */;\n                        break;\n                    default:\n                        break;\n                }\n            }\n            const viewRange = viewModel.coordinatesConverter.convertModelRangeToViewRange(range);\n            viewModel.revealRange(args.source, false, viewRange, revealAt, 0 /* ScrollType.Smooth */);\n        }\n    });\n    CoreNavigationCommands.SelectAll = new class extends EditorOrNativeTextInputCommand {\n        constructor() {\n            super(SelectAllCommand);\n        }\n        runDOMCommand() {\n            if (isFirefox) {\n                document.activeElement.focus();\n                document.activeElement.select();\n            }\n            document.execCommand('selectAll');\n        }\n        runEditorCommand(accessor, editor, args) {\n            const viewModel = editor._getViewModel();\n            if (!viewModel) {\n                // the editor has no view => has no cursors\n                return;\n            }\n            this.runCoreEditorCommand(viewModel, args);\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates('keyboard', 3 /* CursorChangeReason.Explicit */, [\n                CursorMoveCommands.selectAll(viewModel, viewModel.getPrimaryCursorState())\n            ]);\n        }\n    }();\n    CoreNavigationCommands.SetSelection = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'setSelection',\n                precondition: undefined\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.selection) {\n                return;\n            }\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, [\n                CursorState.fromModelSelection(args.selection)\n            ]);\n        }\n    });\n})(CoreNavigationCommands || (CoreNavigationCommands = {}));\nconst columnSelectionCondition = ContextKeyExpr.and(EditorContextKeys.textInputFocus, EditorContextKeys.columnSelection);\nfunction registerColumnSelection(id, keybinding) {\n    KeybindingsRegistry.registerKeybindingRule({\n        id: id,\n        primary: keybinding,\n        when: columnSelectionCondition,\n        weight: CORE_WEIGHT + 1\n    });\n}\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectLeft.id, 1024 /* KeyMod.Shift */ | 15 /* KeyCode.LeftArrow */);\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectRight.id, 1024 /* KeyMod.Shift */ | 17 /* KeyCode.RightArrow */);\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectUp.id, 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */);\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectPageUp.id, 1024 /* KeyMod.Shift */ | 11 /* KeyCode.PageUp */);\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectDown.id, 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */);\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectPageDown.id, 1024 /* KeyMod.Shift */ | 12 /* KeyCode.PageDown */);\nfunction registerCommand(command) {\n    command.register();\n    return command;\n}\nexport var CoreEditingCommands;\n(function (CoreEditingCommands) {\n    class CoreEditingCommand extends EditorCommand {\n        runEditorCommand(accessor, editor, args) {\n            const viewModel = editor._getViewModel();\n            if (!viewModel) {\n                // the editor has no view => has no cursors\n                return;\n            }\n            this.runCoreEditingCommand(editor, viewModel, args || {});\n        }\n    }\n    CoreEditingCommands.CoreEditingCommand = CoreEditingCommand;\n    CoreEditingCommands.LineBreakInsert = registerEditorCommand(new class extends CoreEditingCommand {\n        constructor() {\n            super({\n                id: 'lineBreakInsert',\n                precondition: EditorContextKeys.writable,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 0,\n                    mac: { primary: 256 /* KeyMod.WinCtrl */ | 45 /* KeyCode.KeyO */ }\n                }\n            });\n        }\n        runCoreEditingCommand(editor, viewModel, args) {\n            editor.pushUndoStop();\n            editor.executeCommands(this.id, TypeOperations.lineBreakInsert(viewModel.cursorConfig, viewModel.model, viewModel.getCursorStates().map(s => s.modelState.selection)));\n        }\n    });\n    CoreEditingCommands.Outdent = registerEditorCommand(new class extends CoreEditingCommand {\n        constructor() {\n            super({\n                id: 'outdent',\n                precondition: EditorContextKeys.writable,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, EditorContextKeys.tabDoesNotMoveFocus),\n                    primary: 1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */\n                }\n            });\n        }\n        runCoreEditingCommand(editor, viewModel, args) {\n            editor.pushUndoStop();\n            editor.executeCommands(this.id, TypeOperations.outdent(viewModel.cursorConfig, viewModel.model, viewModel.getCursorStates().map(s => s.modelState.selection)));\n            editor.pushUndoStop();\n        }\n    });\n    CoreEditingCommands.Tab = registerEditorCommand(new class extends CoreEditingCommand {\n        constructor() {\n            super({\n                id: 'tab',\n                precondition: EditorContextKeys.writable,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, EditorContextKeys.tabDoesNotMoveFocus),\n                    primary: 2 /* KeyCode.Tab */\n                }\n            });\n        }\n        runCoreEditingCommand(editor, viewModel, args) {\n            editor.pushUndoStop();\n            editor.executeCommands(this.id, TypeOperations.tab(viewModel.cursorConfig, viewModel.model, viewModel.getCursorStates().map(s => s.modelState.selection)));\n            editor.pushUndoStop();\n        }\n    });\n    CoreEditingCommands.DeleteLeft = registerEditorCommand(new class extends CoreEditingCommand {\n        constructor() {\n            super({\n                id: 'deleteLeft',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 1 /* KeyCode.Backspace */,\n                    secondary: [1024 /* KeyMod.Shift */ | 1 /* KeyCode.Backspace */],\n                    mac: { primary: 1 /* KeyCode.Backspace */, secondary: [1024 /* KeyMod.Shift */ | 1 /* KeyCode.Backspace */, 256 /* KeyMod.WinCtrl */ | 38 /* KeyCode.KeyH */, 256 /* KeyMod.WinCtrl */ | 1 /* KeyCode.Backspace */] }\n                }\n            });\n        }\n        runCoreEditingCommand(editor, viewModel, args) {\n            const [shouldPushStackElementBefore, commands] = DeleteOperations.deleteLeft(viewModel.getPrevEditOperationType(), viewModel.cursorConfig, viewModel.model, viewModel.getCursorStates().map(s => s.modelState.selection), viewModel.getCursorAutoClosedCharacters());\n            if (shouldPushStackElementBefore) {\n                editor.pushUndoStop();\n            }\n            editor.executeCommands(this.id, commands);\n            viewModel.setPrevEditOperationType(2 /* EditOperationType.DeletingLeft */);\n        }\n    });\n    CoreEditingCommands.DeleteRight = registerEditorCommand(new class extends CoreEditingCommand {\n        constructor() {\n            super({\n                id: 'deleteRight',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 20 /* KeyCode.Delete */,\n                    mac: { primary: 20 /* KeyCode.Delete */, secondary: [256 /* KeyMod.WinCtrl */ | 34 /* KeyCode.KeyD */, 256 /* KeyMod.WinCtrl */ | 20 /* KeyCode.Delete */] }\n                }\n            });\n        }\n        runCoreEditingCommand(editor, viewModel, args) {\n            const [shouldPushStackElementBefore, commands] = DeleteOperations.deleteRight(viewModel.getPrevEditOperationType(), viewModel.cursorConfig, viewModel.model, viewModel.getCursorStates().map(s => s.modelState.selection));\n            if (shouldPushStackElementBefore) {\n                editor.pushUndoStop();\n            }\n            editor.executeCommands(this.id, commands);\n            viewModel.setPrevEditOperationType(3 /* EditOperationType.DeletingRight */);\n        }\n    });\n    CoreEditingCommands.Undo = new class extends EditorOrNativeTextInputCommand {\n        constructor() {\n            super(UndoCommand);\n        }\n        runDOMCommand() {\n            document.execCommand('undo');\n        }\n        runEditorCommand(accessor, editor, args) {\n            if (!editor.hasModel() || editor.getOption(89 /* EditorOption.readOnly */) === true) {\n                return;\n            }\n            return editor.getModel().undo();\n        }\n    }();\n    CoreEditingCommands.Redo = new class extends EditorOrNativeTextInputCommand {\n        constructor() {\n            super(RedoCommand);\n        }\n        runDOMCommand() {\n            document.execCommand('redo');\n        }\n        runEditorCommand(accessor, editor, args) {\n            if (!editor.hasModel() || editor.getOption(89 /* EditorOption.readOnly */) === true) {\n                return;\n            }\n            return editor.getModel().redo();\n        }\n    }();\n})(CoreEditingCommands || (CoreEditingCommands = {}));\n/**\n * A command that will invoke a command on the focused editor.\n */\nclass EditorHandlerCommand extends Command {\n    constructor(id, handlerId, description) {\n        super({\n            id: id,\n            precondition: undefined,\n            description: description\n        });\n        this._handlerId = handlerId;\n    }\n    runCommand(accessor, args) {\n        const editor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n        if (!editor) {\n            return;\n        }\n        editor.trigger('keyboard', this._handlerId, args);\n    }\n}\nfunction registerOverwritableCommand(handlerId, description) {\n    registerCommand(new EditorHandlerCommand('default:' + handlerId, handlerId));\n    registerCommand(new EditorHandlerCommand(handlerId, handlerId, description));\n}\nregisterOverwritableCommand(\"type\" /* Handler.Type */, {\n    description: `Type`,\n    args: [{\n            name: 'args',\n            schema: {\n                'type': 'object',\n                'required': ['text'],\n                'properties': {\n                    'text': {\n                        'type': 'string'\n                    }\n                },\n            }\n        }]\n});\nregisterOverwritableCommand(\"replacePreviousChar\" /* Handler.ReplacePreviousChar */);\nregisterOverwritableCommand(\"compositionType\" /* Handler.CompositionType */);\nregisterOverwritableCommand(\"compositionStart\" /* Handler.CompositionStart */);\nregisterOverwritableCommand(\"compositionEnd\" /* Handler.CompositionEnd */);\nregisterOverwritableCommand(\"paste\" /* Handler.Paste */);\nregisterOverwritableCommand(\"cut\" /* Handler.Cut */);\n"],"names":["applyFontInfo","domNode","fontInfo","FastDomNode","setFontFamily","getMassagedFontFamily","setFontWeight","fontWeight","setFontSize","fontSize","setFontFeatureSettings","fontFeatureSettings","setFontVariationSettings","fontVariationSettings","setLineHeight","lineHeight","setLetterSpacing","letterSpacing","style","fontFamily","EditorSettingMigration","key","migrate","_classCallCheck","this","_createClass","value","options","_read","_write","source","firstDotIndex","indexOf","firstSegment","substring","target","registerEditorSettingMigration","items","push","registerSimpleEditorSettingMigration","values","read","write","_step","_iterator","_createForOfIteratorHelper","s","n","done","_step$value","_slicedToArray","oldValue","newValue","err","e","f","enabled","undefined","suggestFilteredTypesMapping","method","function","constructor","deprecated","field","variable","class","struct","interface","module","property","event","operator","unit","constant","enum","enumMember","keyword","text","color","file","reference","folder","typeParameter","snippet","_i","_Object$entries","Object","entries","length","entry","concat","input","comments","strings","other","__decorate","decorators","desc","d","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","EditorConfiguration","_Disposable","_inherits","_super","_createSuper","isSimpleWidget","container","_accessibilityService","_this","call","_onDidChange","_register","Emitter","onDidChange","_onDidChangeFast","onDidChangeFast","_isDominatedByLongLines","_viewLineCount","_lineNumbersDigitCount","_reservedHeight","_glyphMarginDecorationLaneCount","_computeOptionsMemory","ComputeOptionsMemory","_containerObserver","ElementSizeObserver","dimension","_rawOptions","deepCloneAndMigrateOptions","_validatedOptions","EditorOptionsUtil","validateOptions","_computeOptions","get","startObserving","EditorZoom","onDidChangeZoomLevel","_recomputeOptions","TabFocus","onDidChangeTabFocus","FontMeasurements","browser","onDidChangeScreenReaderOptimized","newOptions","changeEvent","checkEquals","fire","partialEnv","_readEnvConfiguration","bareFontInfo","BareFontInfo","createFromValidatedSettings","pixelRatio","_readFontInfo","env","memory","outerWidth","outerHeight","extraEditorClassName","isDominatedByLongLines","viewLineCount","lineNumbersDigitCount","emptySelectionClipboard","tabFocusMode","getTabFocusMode","accessibilitySupport","glyphMarginDecorationLaneCount","computeOptions","getExtraEditorClassName","getWidth","getHeight","isScreenReaderOptimized","getAccessibilitySupport","readFontInfo","_newOptions","applyUpdate","observe","modelLineCount","Math","floor","digitCount","reservedHeight","decorationLaneCount","Disposable","extra","platform","IAccessibilityService","ValidatedEditorOptions","_values","option","id","ComputedEditorOptions","Error","result","editorOptionsRegistry","editorOption","name","validate","_step2","_iterator2","compute","a","b","Array","isArray","arrays","keys","_deepEquals","_step3","somethingChanged","_iterator3","changed","ConfigurationChangedEvent","update","_step4","_iterator4","hasOwnProperty","didChange","_options","objects","forEach","migration","apply","migrateOptions","referenceDomElement","_referenceDomElement","_width","_height","_resizeObserver","measureReferenceDomElement","stopObserving","_get","_getPrototypeOf","prototype","_this2","ResizeObserver","contentRect","width","height","disconnect","emitEvent","observedWidth","observedHeight","clientWidth","clientHeight","max","CharWidthRequest","chr","type","DomCharWidthReader","requests","_bareFontInfo","_requests","_container","_testElements","_createDomElements","document","body","appendChild","_readFromDomElements","removeChild","createElement","position","top","regularDomNode","boldDomNode","italicDomNode","fontStyle","testElements","request","parent","testElement","_render","len","fulfill","offsetWidth","htmlString","innerText","testString","textContent","FontMeasurementsImpl","_cache","FontMeasurementsCache","_evictUntrustedReadingsTimeout","window","clearTimeout","item","put","isTrusted","setTimeout","_evictUntrustedReadings","getValues","somethingRemoved","remove","has","readConfig","_actualReadFontInfo","typicalHalfwidthCharacterWidth","typicalFullwidthCharacterWidth","spaceWidth","maxDigitWidth","FontInfo","isMonospace","canUseHalfwidthRightwardsArrow","middotWidth","wsmiddotWidth","_writeToCache","all","monospace","typicalHalfwidthCharacter","_createRequest","typicalFullwidthCharacter","space","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","rightwardsArrow","halfwidthRightwardsArrow","middot","String","fromCharCode","monospaceTestChars","charAt","readCharWidths","EditorFontLigatures","OFF","referenceWidth","diff","_keys","create","itemId","getId","_this3","map","TabFocusImpl","_tabFocusTerminal","_tabFocusEditor","_onDidChangeTabFocus","context","HitTestResult","UnknownHitTestResult","hitTarget","ContentHitTestResult","spanNode","injectedText","createFromDOMInfo","ctx","offset","getPositionFromDOMInfo","PointerHandlerLastRenderData","lastViewCursorsRenderData","lastTextareaPosition","MouseTarget","range","EditorRange","lineNumber","column","element","mouseColumn","_deduceRage","detail","outsidePosition","outsideDistance","_typeToString","JSON","stringify","ElementPath","path","HitTestContext","viewHelper","lastRenderData","viewModel","configuration","layoutInfo","viewDomNode","stickyTabStops","_context","_viewHelper","mouseVerticalOffset","getZoneAtCoord","viewLayout","isAfterLines","getLineCount","maxLineColumn","getLineMaxColumn","getLineNumberAtVerticalOffset","isInTopPadding","isInBottomPadding","getVerticalOffsetForLineNumber","attr","_findAttribute","getLineWidth","visibleRangeForPosition","getCurrentScrollTop","getCurrentScrollLeft","viewZoneWhitespace","getWhitespaceAtVerticalOffset","viewZoneMiddle","verticalOffset","lineCount","positionBefore","positionAfter","afterLineNumber","Position","viewZoneId","stopAt","hasAttribute","getAttribute","parentNode","HitTestRequest","_BareHitTestRequest","editorPos","pos","relativePos","_ctx","targetPath","PartFingerprints","collect","Uint8Array","x","y","mouseContentHorizontalOffset","outerHTML","CursorColumns","visibleColumnFromColumn","getLineContent","model","getOptions","tabSize","createUnknown","_getMouseColumn","createTextarea","createMargin","createViewZone","createContentText","createContentEmpty","createContentWidget","createScrollbar","createOverlayWidget","BareHitTestRequest","contentLeft","isInMarginArea","glyphMarginLeft","isInContentArea","MouseTargetFactory","EMPTY_CONTENT_AFTER_LINES","createEmptyContentDataInLines","horizontalDistanceToText","t","isChildOfContentWidgets","isChildOfOverflowingContentWidgets","isChildOfOverlayWidgets","_createMouseTarget","_snapToSoftTabBoundary","fromPositions","plusRange","fulfillContentText","fulfillUnknown","domHitTestExecuted","hitTestResult","_doHitTest","createMouseTargetFromHitTestPosition","withTarget","resolvedRequest","_hitTestContentWidget","_hitTestOverlayWidget","_hitTestMinimap","_hitTestScrollbarSlider","_hitTestViewZone","_hitTestMargin","_hitTestViewCursor","_hitTestTextArea","_hitTestViewLines","_hitTestScrollbar","widgetId","findAttribute","fulfillContentWidget","fulfillOverlayWidget","mightBeForeignElement","cursorVerticalOffset","viewZoneData","mouseTargetType","fulfillViewZone","isTextArea","fulfillTextarea","res","getFullLineRangeAtCoord","getStartPosition","abs","glyphMarginWidth","lineNumbersWidth","offsetX","fulfillMargin","isChildOfViewLines","fulfillContentEmpty","isStrictChildOfViewLines","getLineLength","lineWidth","isChildOfMinimap","possibleLineNumber","maxColumn","fulfillScrollbar","isChildOfScrollableElement","nodeType","className","test","round","visibleRange","columnHorizontalOffset","left","points","sort","mouseCoordinates","toClientCoordinates","spanNodeClientRect","getBoundingClientRect","mouseIsOverSpanNode","clientX","right","rng","prev","curr","lineStartVerticalOffset","lineEndVerticalOffset","lineCenteredVerticalOffset","adjustedPageY","adjustedPage","PageCoordinates","_actualDoHitTestWithCaretRangeFromPoint","coords","shadowRoot","dom","caretRangeFromPoint","createRange","el","elementFromPoint","firstChild","TEXT_NODE","lastChild","step","rect","getComputedStyle","getPropertyValue","fontVariant","font","pixelCursor","charWidthReader","CharWidthReader","getInstance","getCharWidth","setStart","setEnd","shadowCaretRangeFromPoint","clientY","startContainer","parent1","parent2","parent3","ELEMENT_NODE","ViewLine","CLASS_NAME","startOffset","hitResult","caretPositionFromPoint","offsetNode","parent1ClassName","parent2ClassName","tokenSpan","childNodes","min","lineContent","newPosition","AtomicTabMoveOperations","atomicPosition","_doHitTestWithCaretRangeFromPoint","_doHitTestWithCaretPositionFromPoint","getInjectedTextAt","normalizedPosition","normalizePosition","equals","_canvas","char","cacheKey","getContext","measureText","_INSTANCE","MouseHandler","_ViewEventHandler","viewController","_mouseLeaveMonitor","mouseTargetFactory","_mouseDownOperation","MouseDownOperation","testEventTarget","lastMouseLeaveTime","mouseEvents","EditorMouseEventFactory","onContextMenu","_onContextMenu","onMouseMove","_onMouseMove","addDisposableListener","contains","_onMouseLeave","EditorMouseEvent","onMouseUp","_onMouseUp","onMouseLeave","capturePointerId","onPointerDown","pointerId","EventType","POINTER_UP","onPointerUp","onMouseDown","_onMouseDown","_setupMouseWheelZoomListener","addEventHandler","_assertThisInitialized","classifier","MouseWheelClassifier","INSTANCE","prevMouseWheelTime","gestureStartZoomLevel","getZoomLevel","gestureHasZoomModifiers","gestureAccumulatedDelta","hasMouseWheelZoomModifiers","browserEvent","metaKey","ctrlKey","shiftKey","altKey","MOUSE_WHEEL","emitMouseWheel","StandardWheelEvent","acceptStandardWheelEvent","isPhysicalMouseWheel","zoomLevel","delta","deltaY","setZoomLevel","preventDefault","stopPropagation","Date","now","capture","passive","removeEventHandler","dispose","hasChanged","onHeightChanged","onCursorStateChanged","ClientCoordinates","toPageCoordinates","createEditorPagePosition","createCoordinatesRelativeToEditor","createMouseTarget","getLastRenderData","getShadowRoot","elementsFromPoint","posx","posy","find","getMouseColumn","emitContextMenu","mouseTargetIsWidget","isActive","timestamp","emitMouseMove","getTime","emitMouseLeave","emitMouseUp","_this4","targetIsContent","targetIsGutter","targetIsLineNumbers","selectOnLineNumbers","targetIsViewZone","targetIsWidget","shouldHandle","leftButton","middleButton","focus","focusTextArea","start","shouldSuppressMouseDownOnViewZone","shouldSuppressMouseDownOnWidget","emitMouseDown","ViewEventHandler","_super2","_viewController","_mouseTargetFactory","_this5","_mouseMoveMonitor","GlobalEditorPointerMoveMonitor","_topBottomDragScrolling","TopBottomDragScrolling","inSelectionMode","revealType","_dispatchMouse","_mouseState","MouseDownState","_currentSelection","Selection","_isActive","_lastMouseEvent","setModifiers","_findMousePosition","isDragAndDrop","emitMouseDrag","stop","targetType","_this6","setStartedOnLineNumbers","setStartButtons","trySetCount","count","isEmpty","containsPosition","startMonitoring","viewLinesDomNode","buttons","_onMouseDownThenMove","KeyboardEvent","emitMouseDropCanceled","emitMouseDrop","_stop","stopMonitoring","selections","editorContent","_helpPositionJumpOverViewZone","createOutsideEditor","aboveLineNumber","belowLineNumber","positionOutsideEditor","_getPositionOutsideEditor","selectionStart","selectionStartLineNumber","selectionStartColumn","isBefore","dispatchMouse","startedOnLineNumbers","mouseDownCount","onInjectedText","_Disposable2","_super3","_this7","_operation","mouseEvent","setPosition","TopBottomDragScrollingOperation","_Disposable3","_super4","_this8","_position","_mouseEvent","_lastTime","_animationFrameDisposable","scheduleAtNextAnimationFrame","_execute","elapsed","viewportInLines","outsideDistanceInLines","_this9","scrollInPixels","_getScrollSpeed","_tick","scrollValue","deltaScrollNow","renderNow","mouseTarget","viewportData","getLinesViewportData","edgeLineNumber","startLineNumber","endLineNumber","horizontalScrollbarHeight","_altKey","_ctrlKey","_metaKey","_shiftKey","_leftButton","_middleButton","_startedOnLineNumbers","_lastMouseDownPosition","_lastMouseDownPositionEqualCount","_lastMouseDownCount","_lastSetMouseDownCountTime","setMouseDownCount","newMouseDownPosition","currentTime","CLEAR_MOUSE_DOWN_COUNT_TIME","PointerEventHandler","_MouseHandler","Gesture","addTarget","linesContentDomNode","Tap","onTap","Change","onChange","Contextmenu","_lastPointerType","pointerType","pointerEvents","EditorPointerEventFactory","onPointerMove","onPointerLeave","initialTarget","tapCount","translationX","translationY","TouchHandler","_MouseHandler2","createEvent","initEvent","TextAreaSyntethicEvents","dispatchTextAreaEvent","moveTo","PointerHandler","BrowserFeatures","handler","TouchEvent","getTargetAtClientPoint","VisibleTextAreaData","modelLineNumber","distanceToModelLineStart","widthOfHiddenLineTextBefore","distanceToModelLineEnd","_visibleTextAreaBrand","startPosition","endPosition","visibleTextareaStart","visibleTextareaEnd","_previousPresentation","visibleRangeProvider","startModelPosition","endModelPosition","coordinatesConverter","convertModelPositionToViewPosition","tokenPresentation","foreground","italic","bold","underline","strikethrough","canUseZeroSizeTextarea","TextAreaHandler","_ViewPart","_keybindingService","_primaryCursorPosition","_primaryCursorVisibleRange","_visibleRangeProvider","_scrollLeft","_scrollTop","_setAccessibilityOptions","_contentLeft","_contentWidth","contentWidth","_contentHeight","_fontInfo","_lineHeight","_emptySelectionClipboard","_copyWithSyntaxHighlighting","_visibleTextArea","_selections","_modelSelections","_lastRenderPosition","textArea","createFastDomNode","setClassName","MOUSE_CURSOR_TEXT_CSS_CLASS_NAME","setAttribute","_textAreaWrapping","_getAriaLabel","nls","_ensureReadOnlyAttribute","textAreaCover","simpleModel","getValueInRange","eol","getValueLengthInRange","modifyPosition","textAreaInputHost","getDataToCopy","rawTextToCopy","getPlainTextToCopy","newLineCharacter","getEOL","isFromEmptySelection","multicursorText","join","html","mode","CopyOptions","forceCopyWithSyntaxHighlighting","richText","getRichTextToCopy","getScreenReaderContent","_accessibilitySupport","selection","textBefore","_getWordBeforePosition","_getCharacterBeforePosition","TextAreaState","Range","placeholderText","EMPTY","_this$_getAndroidWord","_getAndroidWordAtPosition","_this$_getAndroidWord2","wordAtPosition","positionOffsetInWord","PagedScreenReaderStrategy","fromEditorSelection","_accessibilityPageSize","deduceModelPosition","viewAnchorPosition","deltaOffset","lineFeedCnt","deduceModelPositionRelativeToViewPosition","textAreaWrapper","TextAreaWrapper","_textAreaInput","TextAreaInput","OS","isAndroid","isChrome","isFirefox","isSafari","onKeyDown","emitKeyDown","onKeyUp","emitKeyUp","onPaste","pasteOnNewLine","metadata","paste","onCut","cut","onType","replacePrevCharCnt","replaceNextCharCnt","positionDelta","_debugComposition","console","log","compositionType","onSelectionChangeRequest","modelSelection","setSelection","onCompositionStart","ta","_ref","textBeforeSelection","selectionEnd","lineFeedOffset1","lastIndexOf","lineTextBeforeSelection","tabOffset1","desiredVisibleBeforeCharCount","visibleBeforeCharCount","hiddenLineTextBefore","widthOfHiddenTextBefore","whiteSpace","append","textAfterSelection","lineFeedOffset2","lineTextAfterSelection","tabOffset2","desiredVisibleAfterCharCount","getEndPosition","visibleAfterCharCount","revealRange","prepareRender","compositionStart","onCompositionUpdate","onCompositionEnd","compositionEnd","onFocus","setHasFocus","onBlur","IME","reason","writeScreenReaderContent","wordSeparators","getMapForWordSeparators","goingLeft","startColumn","goingRight","endColumn","distance","charCode","charCodeAt","charBefore","_a","_b","_c","toggleKeybindingLabel","lookupKeybinding","getAriaLabel","runCommandKeybindingLabel","keybindingEditorKeybindingLabel","editorNotAccessibleMessage","accessibilityPageSize","EditorOptions","defaultValue","wrappingColumn","_textAreaWidth","slice","modelSelections","scrollLeft","scrollTop","isFocused","activeDescendant","removeAttribute","role","positionLineNumber","positionColumn","visibleStart","visibleEnd","_newlinecount","substr","viewLineData","getViewLineData","startTokenIndex","tokens","findTokenIndexAtOffset","textareaSpansSingleToken","presentation","definePresentation","getPresentation","_doRender","lastRenderPosition","useCover","TokenizationRegistry","getColorMap","_renderAtTopLeft","textAreaState","newlineCountBeforeSelection","startIndex","renderData","tac","setTop","setLeft","setWidth","setHeight","setColor","Color","Format","CSS","formatHex","setFontStyle","setTextDecoration","Margin","OUTER_CLASS_NAME","renderType","LineNumbersOverlay","ViewPart","IKeybindingService","InMemoryClipboardMetadataManager","_lastState","lastCopiedValue","data","pastedText","CompositionContext","_lastTypeTextLength","typeInput","_host","_textArea","_OS","_browser","_onFocus","_onBlur","_onKeyDown","_onKeyUp","_onCut","_onPaste","_onType","_onCompositionStart","_onCompositionUpdate","_onCompositionEnd","_onSelectionChangeRequest","_asyncTriggerCut","RunOnceScheduler","_asyncFocusGainWriteScreenReaderContent","_textAreaState","_selectionChangeListener","_hasFocus","_currentComposition","lastKeyDown","_e","StandardKeyboardEvent","keyCode","currentComposition","code","handleCompositionUpdate","newState","readFromTextArea","deduceAndroidCompositionInput","onInput","setIgnoreSelectionChangeTime","deduceInput","_ensureClipboardGetsEditorSelection","schedule","onCopy","clipboardData","_ClipboardEventUtils$","ClipboardEventUtils","getTextData","_ClipboardEventUtils$2","hadFocus","_setHasFocus","onSyntheticTap","previousSelectionChangeEventTime","inputLatency","onSelectionChange","delta1","delta2","getIgnoreSelectionChangeTime","resetSelectionChangeTime","getValue","newSelectionStart","getSelectionStart","newSelectionEnd","getSelectionEnd","_newSelectionStartPosition","deduceEditorPosition","newSelectionStartPosition","_newSelectionEndPosition","newSelectionEndPosition","newSelection","refreshFocusState","hasFocus","newHasFocus","_installSelectionChangeListener","collapseSelection","writeToTextArea","_setAndWriteTextAreaState","dataToCopy","storedMetadata","version","set","replace","setTextData","getData","Mimes","rawmetadata","parse","files","setData","_actual","DomEmitter","onBeforeInput","_onSyntheticTap","_ignoreSelectionChangeTime","activeElement","selectionDirection","currentIsFocused","currentSelectionStart","currentSelectionEnd","setSelectionRange","scrollState","select","toString","setValue","_d","_f","_g","_h","str","_finishDeduceEditorPosition","str1","str2","anchor","deltaText","signum","lastLineFeedIndex","previousState","currentState","couldBeEmojiInput","prefixLength","suffixLength","previousValue","currentValue","previousSelectionStart","previousSelectionEnd","replacePreviousCharacters","linesPerPage","page","trimLongText","LIMIT_CHARS","selectionStartPage","_getPageOfLine","selectionStartPageRange","_getRangeForPage","selectionEndPage","selectionEndPageRange","pretextRange","intersectRanges","pretextStart","pretext","lastLine","lastLineMaxColumn","posttextRange","posttextEnd","posttext","selectionRange1","selectionRange2","EditorScroll_","RevealLine_","CoreEditorCommand","_EditorCommand","accessor","editor","args","_getViewModel","runCoreEditorCommand","EditorCommand","description","constraint","arg","types","scrollArg","to","by","revealCursor","schema","RawDirection","Up","Right","Down","Left","RawUnit","Line","WrappedLine","Page","HalfPage","Editor","Column","direction","reveaLineArg","at","RawAtArgument","Top","Center","Bottom","CoreNavigationCommands","EditorOrNativeTextInputCommand","addImplementation","focusedEditor","ICodeEditorService","getFocusedCodeEditor","hasTextFocus","_runEditorCommand","tagName","toLowerCase","runDOMCommand","activeEditor","getActiveCodeEditor","runEditorCommand","BaseMoveToCommand","_CoreEditorCommand","opts","_inSelectionMode","pushStackElement","setCursorStates","CursorMoveCommands","getPrimaryCursorState","viewPosition","revealPrimaryCursor","MoveTo","registerEditorCommand","precondition","MoveToSelect","ColumnSelectCommand","_CoreEditorCommand2","_getColumnSelectResult","getCursorColumnSelectData","viewStates","viewState","CursorState","fromViewState","setCursorColumnSelectData","isReal","fromViewLineNumber","fromLineNumber","fromViewVisualColumn","fromVisualColumn","toViewLineNumber","toLineNumber","toViewVisualColumn","toVisualColumn","reversed","revealTopMostCursor","revealBottomMostCursor","ColumnSelect","_ColumnSelectCommand","_class","primary","prevColumnSelectData","validatedPosition","validatePosition","validatedViewPosition","validateViewPosition","doColumnSelect","ColumnSelection","columnSelect","cursorConfig","CursorColumnSelectLeft","_ColumnSelectCommand2","_class2","_super5","kbOpts","weight","kbExpr","EditorContextKeys","textInputFocus","linux","columnSelectLeft","CursorColumnSelectRight","_ColumnSelectCommand3","_class3","_super6","columnSelectRight","ColumnSelectUpCommand","_ColumnSelectCommand4","_super7","_isPaged","isPaged","columnSelectUp","CursorColumnSelectUp","CursorColumnSelectPageUp","ColumnSelectDownCommand","_ColumnSelectCommand5","_super8","columnSelectDown","CursorColumnSelectDown","CursorColumnSelectPageDown","CursorMoveImpl","_CoreEditorCommand3","_super9","CursorMove_","parsed","_runCursorMove","_move","getCursorStates","cursors","simpleMove","viewportMove","CursorMove","CursorMoveBasedCommand","_CoreEditorCommand4","_super10","_staticArgs","dynamicArgs","pageSize","CursorLeft","mac","secondary","CursorLeftSelect","CursorRight","CursorRightSelect","CursorUp","CursorUpSelect","CursorPageUp","CursorPageUpSelect","CursorDown","CursorDownSelect","CursorPageDown","CursorPageDownSelect","CreateCursor","_CoreEditorCommand5","_class4","_super11","wholeLine","line","states","newModelPosition","modelState","newViewPosition","state","splice","LastCursorMoveToSelect","_CoreEditorCommand6","_class5","_super12","lastAddedCursorIndex","getLastAddedCursorIndex","newStates","HomeCommand","_CoreEditorCommand7","_super13","moveToBeginningOfLine","CursorHome","CursorHomeSelect","LineStartCommand","_CoreEditorCommand8","_super14","_exec","cursor","fromModelState","move","CursorLineStart","CursorLineStartSelect","EndCommand","_CoreEditorCommand9","_super15","moveToEndOfLine","sticky","CursorEnd","properties","default","CursorEndSelect","LineEndCommand","_CoreEditorCommand10","_super16","CursorLineEnd","CursorLineEndSelect","TopCommand","_CoreEditorCommand11","_super17","_this10","moveToBeginningOfBuffer","CursorTop","CursorTopSelect","BottomCommand","_CoreEditorCommand12","_super18","_this11","moveToEndOfBuffer","CursorBottom","CursorBottomSelect","EditorScrollImpl","_CoreEditorCommand13","_super19","includes","_runHorizontalEditorScroll","bind","_runVerticalEditorScroll","runEditorScroll","determineScrollMethod","desiredScrollTop","_computeDesiredScrollTop","desiredVisibleViewRange","getCompletelyVisibleViewRangeAtScrollTop","findPositionInViewportIfOutside","setScrollPosition","desiredTopModelLineNumber","futureViewport","getFutureViewport","visibleViewRange","visibleModelRange","convertViewRangeToModelRange","noOfLines","deltaLines","desiredScrollLeft","_computeDesiredScrollLeft","deltaColumns","EditorScroll","ScrollLineUp","_CoreEditorCommand14","_class6","_super20","ScrollPageUp","_CoreEditorCommand15","_class7","_super21","win","ScrollEditorTop","_CoreEditorCommand16","_class8","_super22","ScrollLineDown","_CoreEditorCommand17","_class9","_super23","ScrollPageDown","_CoreEditorCommand18","_class10","_super24","ScrollEditorBottom","_CoreEditorCommand19","_class11","_super25","ScrollLeft","_CoreEditorCommand20","_class12","_super26","ScrollRight","_CoreEditorCommand21","_class13","_super27","WordCommand","_CoreEditorCommand22","_super28","_this12","word","WordSelect","WordSelectDrag","LastCursorWordSelect","_CoreEditorCommand23","_class14","_super29","lastAddedState","hasSelection","LineCommand","_CoreEditorCommand24","_super30","_this13","LineSelect","LineSelectDrag","LastCursorLineCommand","_CoreEditorCommand25","_super31","_this14","LastCursorLineSelect","LastCursorLineSelectDrag","CancelSelection","_CoreEditorCommand26","_class15","_super32","hasNonEmptySelection","cancelSelection","RemoveSecondaryCursors","_CoreEditorCommand27","_class16","_super33","hasMultipleSelections","CORE_WEIGHT","status","RevealLine","_CoreEditorCommand28","_class17","_super34","revealLineArg","lineNumberArg","parseInt","revealAt","viewRange","convertModelRangeToViewRange","SelectAll","_EditorOrNativeTextIn","_class18","_super35","SelectAllCommand","execCommand","selectAll","SetSelection","_CoreEditorCommand29","_class19","_super36","fromModelSelection","CoreEditingCommands","columnSelectionCondition","ContextKeyExpr","and","columnSelection","registerColumnSelection","keybinding","KeybindingsRegistry","registerKeybindingRule","when","registerCommand","command","register","CoreEditingCommand","_EditorCommand2","_super37","runCoreEditingCommand","LineBreakInsert","_CoreEditingCommand","_class20","_super38","writable","pushUndoStop","executeCommands","TypeOperations","lineBreakInsert","Outdent","_CoreEditingCommand2","_class21","_super39","editorTextFocus","tabDoesNotMoveFocus","outdent","Tab","_CoreEditingCommand3","_class22","_super40","tab","DeleteLeft","_CoreEditingCommand4","_class23","_super41","_DeleteOperations$del","DeleteOperations","deleteLeft","getPrevEditOperationType","getCursorAutoClosedCharacters","_DeleteOperations$del2","shouldPushStackElementBefore","commands","setPrevEditOperationType","DeleteRight","_CoreEditingCommand5","_class24","_super42","_DeleteOperations$del3","deleteRight","_DeleteOperations$del4","Undo","_EditorOrNativeTextIn2","_class25","_super43","UndoCommand","hasModel","getOption","getModel","undo","Redo","_EditorOrNativeTextIn3","_class26","_super44","RedoCommand","redo","EditorHandlerCommand","_Command","_super45","handlerId","_this15","_handlerId","trigger","Command","registerOverwritableCommand"],"sourceRoot":""}