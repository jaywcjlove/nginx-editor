{"version":3,"file":"static/js/monaco-editor-vendor.de15e873.9ed1da7e.js","mappings":"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","sources":["../../node_modules/monaco-editor/esm/vs/editor/browser/editorBrowser.js","../../node_modules/monaco-editor/esm/vs/editor/browser/editorDom.js","../../node_modules/monaco-editor/esm/vs/editor/browser/editorExtensions.js","../../node_modules/monaco-editor/esm/vs/editor/browser/services/abstractCodeEditorService.js","../../node_modules/monaco-editor/esm/vs/editor/browser/services/bulkEditService.js","../../node_modules/monaco-editor/esm/vs/editor/browser/services/codeEditorService.js","../../node_modules/monaco-editor/esm/vs/editor/browser/services/editorWorkerService.js","../../node_modules/monaco-editor/esm/vs/editor/browser/services/markerDecorations.js","../../node_modules/monaco-editor/esm/vs/editor/browser/services/openerService.js","../../node_modules/monaco-editor/esm/vs/editor/browser/services/webWorker.js","../../node_modules/monaco-editor/esm/vs/editor/browser/stableEditorScroll.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/contentWidgets/contentWidgets.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/currentLineHighlight/currentLineHighlight.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/decorations/decorations.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/editorScrollbar/editorScrollbar.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/indentGuides/indentGuides.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/domReadingContext.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/viewLines.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/glyphMargin/glyphMargin.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/linesDecorations/linesDecorations.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/marginDecorations/marginDecorations.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapCharSheet.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapCharRenderer.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapPreBaked.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapCharRendererFactory.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimap.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overlayWidgets/overlayWidgets.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overviewRuler/decorationsOverviewRuler.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overviewRuler/overviewRuler.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/rulers/rulers.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/scrollDecoration/scrollDecoration.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/selections/selections.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewCursors/viewCursor.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewCursors/viewCursors.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewZones/viewZones.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/blockDecorations/blockDecorations.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/whitespace/whitespace.js","../../node_modules/monaco-editor/esm/vs/editor/browser/view.js","../../node_modules/monaco-editor/esm/vs/editor/browser/view/domLineBreaksComputer.js","../../node_modules/monaco-editor/esm/vs/editor/browser/view/dynamicViewOverlay.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lineNumbers/lineNumbers.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/rangeUtil.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/viewLine.js","../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/margin/margin.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as editorCommon from '../common/editorCommon.js';\n/**\n *@internal\n */\nexport function isCodeEditor(thing) {\n    if (thing && typeof thing.getEditorType === 'function') {\n        return thing.getEditorType() === editorCommon.EditorType.ICodeEditor;\n    }\n    else {\n        return false;\n    }\n}\n/**\n *@internal\n */\nexport function isDiffEditor(thing) {\n    if (thing && typeof thing.getEditorType === 'function') {\n        return thing.getEditorType() === editorCommon.EditorType.IDiffEditor;\n    }\n    else {\n        return false;\n    }\n}\n/**\n *@internal\n */\nexport function isCompositeEditor(thing) {\n    return !!thing\n        && typeof thing === 'object'\n        && typeof thing.onDidChangeActiveEditor === 'function';\n}\n/**\n *@internal\n */\nexport function getCodeEditor(thing) {\n    if (isCodeEditor(thing)) {\n        return thing;\n    }\n    if (isDiffEditor(thing)) {\n        return thing.getModifiedEditor();\n    }\n    if (isCompositeEditor(thing) && isCodeEditor(thing.activeCodeEditor)) {\n        return thing.activeCodeEditor;\n    }\n    return null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../base/browser/dom.js';\nimport { GlobalPointerMoveMonitor } from '../../base/browser/globalPointerMoveMonitor.js';\nimport { StandardMouseEvent } from '../../base/browser/mouseEvent.js';\nimport { RunOnceScheduler } from '../../base/common/async.js';\nimport { Disposable } from '../../base/common/lifecycle.js';\nimport { asCssVariable } from '../../platform/theme/common/colorRegistry.js';\n/**\n * Coordinates relative to the whole document (e.g. mouse event's pageX and pageY)\n */\nexport class PageCoordinates {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this._pageCoordinatesBrand = undefined;\n    }\n    toClientCoordinates() {\n        return new ClientCoordinates(this.x - window.scrollX, this.y - window.scrollY);\n    }\n}\n/**\n * Coordinates within the application's client area (i.e. origin is document's scroll position).\n *\n * For example, clicking in the top-left corner of the client area will\n * always result in a mouse event with a client.x value of 0, regardless\n * of whether the page is scrolled horizontally.\n */\nexport class ClientCoordinates {\n    constructor(clientX, clientY) {\n        this.clientX = clientX;\n        this.clientY = clientY;\n        this._clientCoordinatesBrand = undefined;\n    }\n    toPageCoordinates() {\n        return new PageCoordinates(this.clientX + window.scrollX, this.clientY + window.scrollY);\n    }\n}\n/**\n * The position of the editor in the page.\n */\nexport class EditorPagePosition {\n    constructor(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this._editorPagePositionBrand = undefined;\n    }\n}\n/**\n * Coordinates relative to the the (top;left) of the editor that can be used safely with other internal editor metrics.\n * **NOTE**: This position is obtained by taking page coordinates and transforming them relative to the\n * editor's (top;left) position in a way in which scale transformations are taken into account.\n * **NOTE**: These coordinates could be negative if the mouse position is outside the editor.\n */\nexport class CoordinatesRelativeToEditor {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this._positionRelativeToEditorBrand = undefined;\n    }\n}\nexport function createEditorPagePosition(editorViewDomNode) {\n    const editorPos = dom.getDomNodePagePosition(editorViewDomNode);\n    return new EditorPagePosition(editorPos.left, editorPos.top, editorPos.width, editorPos.height);\n}\nexport function createCoordinatesRelativeToEditor(editorViewDomNode, editorPagePosition, pos) {\n    // The editor's page position is read from the DOM using getBoundingClientRect().\n    //\n    // getBoundingClientRect() returns the actual dimensions, while offsetWidth and offsetHeight\n    // reflect the unscaled size. We can use this difference to detect a transform:scale()\n    // and we will apply the transformation in inverse to get mouse coordinates that make sense inside the editor.\n    //\n    // This could be expanded to cover rotation as well maybe by walking the DOM up from `editorViewDomNode`\n    // and computing the effective transformation matrix using getComputedStyle(element).transform.\n    //\n    const scaleX = editorPagePosition.width / editorViewDomNode.offsetWidth;\n    const scaleY = editorPagePosition.height / editorViewDomNode.offsetHeight;\n    // Adjust mouse offsets if editor appears to be scaled via transforms\n    const relativeX = (pos.x - editorPagePosition.x) / scaleX;\n    const relativeY = (pos.y - editorPagePosition.y) / scaleY;\n    return new CoordinatesRelativeToEditor(relativeX, relativeY);\n}\nexport class EditorMouseEvent extends StandardMouseEvent {\n    constructor(e, isFromPointerCapture, editorViewDomNode) {\n        super(e);\n        this._editorMouseEventBrand = undefined;\n        this.isFromPointerCapture = isFromPointerCapture;\n        this.pos = new PageCoordinates(this.posx, this.posy);\n        this.editorPos = createEditorPagePosition(editorViewDomNode);\n        this.relativePos = createCoordinatesRelativeToEditor(editorViewDomNode, this.editorPos, this.pos);\n    }\n}\nexport class EditorMouseEventFactory {\n    constructor(editorViewDomNode) {\n        this._editorViewDomNode = editorViewDomNode;\n    }\n    _create(e) {\n        return new EditorMouseEvent(e, false, this._editorViewDomNode);\n    }\n    onContextMenu(target, callback) {\n        return dom.addDisposableListener(target, 'contextmenu', (e) => {\n            callback(this._create(e));\n        });\n    }\n    onMouseUp(target, callback) {\n        return dom.addDisposableListener(target, 'mouseup', (e) => {\n            callback(this._create(e));\n        });\n    }\n    onMouseDown(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.MOUSE_DOWN, (e) => {\n            callback(this._create(e));\n        });\n    }\n    onPointerDown(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.POINTER_DOWN, (e) => {\n            callback(this._create(e), e.pointerId);\n        });\n    }\n    onMouseLeave(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.MOUSE_LEAVE, (e) => {\n            callback(this._create(e));\n        });\n    }\n    onMouseMove(target, callback) {\n        return dom.addDisposableListener(target, 'mousemove', (e) => callback(this._create(e)));\n    }\n}\nexport class EditorPointerEventFactory {\n    constructor(editorViewDomNode) {\n        this._editorViewDomNode = editorViewDomNode;\n    }\n    _create(e) {\n        return new EditorMouseEvent(e, false, this._editorViewDomNode);\n    }\n    onPointerUp(target, callback) {\n        return dom.addDisposableListener(target, 'pointerup', (e) => {\n            callback(this._create(e));\n        });\n    }\n    onPointerDown(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.POINTER_DOWN, (e) => {\n            callback(this._create(e), e.pointerId);\n        });\n    }\n    onPointerLeave(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.POINTER_LEAVE, (e) => {\n            callback(this._create(e));\n        });\n    }\n    onPointerMove(target, callback) {\n        return dom.addDisposableListener(target, 'pointermove', (e) => callback(this._create(e)));\n    }\n}\nexport class GlobalEditorPointerMoveMonitor extends Disposable {\n    constructor(editorViewDomNode) {\n        super();\n        this._editorViewDomNode = editorViewDomNode;\n        this._globalPointerMoveMonitor = this._register(new GlobalPointerMoveMonitor());\n        this._keydownListener = null;\n    }\n    startMonitoring(initialElement, pointerId, initialButtons, pointerMoveCallback, onStopCallback) {\n        // Add a <<capture>> keydown event listener that will cancel the monitoring\n        // if something other than a modifier key is pressed\n        this._keydownListener = dom.addStandardDisposableListener(initialElement.ownerDocument, 'keydown', (e) => {\n            const chord = e.toKeyCodeChord();\n            if (chord.isModifierKey()) {\n                // Allow modifier keys\n                return;\n            }\n            this._globalPointerMoveMonitor.stopMonitoring(true, e.browserEvent);\n        }, true);\n        this._globalPointerMoveMonitor.startMonitoring(initialElement, pointerId, initialButtons, (e) => {\n            pointerMoveCallback(new EditorMouseEvent(e, true, this._editorViewDomNode));\n        }, (e) => {\n            this._keydownListener.dispose();\n            onStopCallback(e);\n        });\n    }\n    stopMonitoring() {\n        this._globalPointerMoveMonitor.stopMonitoring(true);\n    }\n}\n/**\n * A helper to create dynamic css rules, bound to a class name.\n * Rules are reused.\n * Reference counting and delayed garbage collection ensure that no rules leak.\n*/\nexport class DynamicCssRules {\n    constructor(_editor) {\n        this._editor = _editor;\n        this._instanceId = ++DynamicCssRules._idPool;\n        this._counter = 0;\n        this._rules = new Map();\n        // We delay garbage collection so that hanging rules can be reused.\n        this._garbageCollectionScheduler = new RunOnceScheduler(() => this.garbageCollect(), 1000);\n    }\n    createClassNameRef(options) {\n        const rule = this.getOrCreateRule(options);\n        rule.increaseRefCount();\n        return {\n            className: rule.className,\n            dispose: () => {\n                rule.decreaseRefCount();\n                this._garbageCollectionScheduler.schedule();\n            }\n        };\n    }\n    getOrCreateRule(properties) {\n        const key = this.computeUniqueKey(properties);\n        let existingRule = this._rules.get(key);\n        if (!existingRule) {\n            const counter = this._counter++;\n            existingRule = new RefCountedCssRule(key, `dyn-rule-${this._instanceId}-${counter}`, dom.isInShadowDOM(this._editor.getContainerDomNode())\n                ? this._editor.getContainerDomNode()\n                : undefined, properties);\n            this._rules.set(key, existingRule);\n        }\n        return existingRule;\n    }\n    computeUniqueKey(properties) {\n        return JSON.stringify(properties);\n    }\n    garbageCollect() {\n        for (const rule of this._rules.values()) {\n            if (!rule.hasReferences()) {\n                this._rules.delete(rule.key);\n                rule.dispose();\n            }\n        }\n    }\n}\nDynamicCssRules._idPool = 0;\nclass RefCountedCssRule {\n    constructor(key, className, _containerElement, properties) {\n        this.key = key;\n        this.className = className;\n        this.properties = properties;\n        this._referenceCount = 0;\n        this._styleElement = dom.createStyleSheet(_containerElement);\n        this._styleElement.textContent = this.getCssText(this.className, this.properties);\n    }\n    getCssText(className, properties) {\n        let str = `.${className} {`;\n        for (const prop in properties) {\n            const value = properties[prop];\n            let cssValue;\n            if (typeof value === 'object') {\n                cssValue = asCssVariable(value.id);\n            }\n            else {\n                cssValue = value;\n            }\n            const cssPropName = camelToDashes(prop);\n            str += `\\n\\t${cssPropName}: ${cssValue};`;\n        }\n        str += `\\n}`;\n        return str;\n    }\n    dispose() {\n        this._styleElement.remove();\n    }\n    increaseRefCount() {\n        this._referenceCount++;\n    }\n    decreaseRefCount() {\n        this._referenceCount--;\n    }\n    hasReferences() {\n        return this._referenceCount > 0;\n    }\n}\nfunction camelToDashes(str) {\n    return str.replace(/(^[A-Z])/, ([first]) => first.toLowerCase())\n        .replace(/([A-Z])/g, ([letter]) => `-${letter.toLowerCase()}`);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nimport { URI } from '../../base/common/uri.js';\nimport { ICodeEditorService } from './services/codeEditorService.js';\nimport { Position } from '../common/core/position.js';\nimport { IModelService } from '../common/services/model.js';\nimport { ITextModelService } from '../common/services/resolverService.js';\nimport { MenuId, MenuRegistry, Action2 } from '../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../platform/instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../platform/keybinding/common/keybindingsRegistry.js';\nimport { Registry } from '../../platform/registry/common/platform.js';\nimport { ITelemetryService } from '../../platform/telemetry/common/telemetry.js';\nimport { assertType } from '../../base/common/types.js';\nimport { ILogService } from '../../platform/log/common/log.js';\nimport { getActiveElement } from '../../base/browser/dom.js';\nexport class Command {\n    constructor(opts) {\n        this.id = opts.id;\n        this.precondition = opts.precondition;\n        this._kbOpts = opts.kbOpts;\n        this._menuOpts = opts.menuOpts;\n        this._description = opts.description;\n    }\n    register() {\n        if (Array.isArray(this._menuOpts)) {\n            this._menuOpts.forEach(this._registerMenuItem, this);\n        }\n        else if (this._menuOpts) {\n            this._registerMenuItem(this._menuOpts);\n        }\n        if (this._kbOpts) {\n            const kbOptsArr = Array.isArray(this._kbOpts) ? this._kbOpts : [this._kbOpts];\n            for (const kbOpts of kbOptsArr) {\n                let kbWhen = kbOpts.kbExpr;\n                if (this.precondition) {\n                    if (kbWhen) {\n                        kbWhen = ContextKeyExpr.and(kbWhen, this.precondition);\n                    }\n                    else {\n                        kbWhen = this.precondition;\n                    }\n                }\n                const desc = {\n                    id: this.id,\n                    weight: kbOpts.weight,\n                    args: kbOpts.args,\n                    when: kbWhen,\n                    primary: kbOpts.primary,\n                    secondary: kbOpts.secondary,\n                    win: kbOpts.win,\n                    linux: kbOpts.linux,\n                    mac: kbOpts.mac,\n                };\n                KeybindingsRegistry.registerKeybindingRule(desc);\n            }\n        }\n        CommandsRegistry.registerCommand({\n            id: this.id,\n            handler: (accessor, args) => this.runCommand(accessor, args),\n            description: this._description\n        });\n    }\n    _registerMenuItem(item) {\n        MenuRegistry.appendMenuItem(item.menuId, {\n            group: item.group,\n            command: {\n                id: this.id,\n                title: item.title,\n                icon: item.icon,\n                precondition: this.precondition\n            },\n            when: item.when,\n            order: item.order\n        });\n    }\n}\nexport class MultiCommand extends Command {\n    constructor() {\n        super(...arguments);\n        this._implementations = [];\n    }\n    /**\n     * A higher priority gets to be looked at first\n     */\n    addImplementation(priority, name, implementation, when) {\n        this._implementations.push({ priority, name, implementation, when });\n        this._implementations.sort((a, b) => b.priority - a.priority);\n        return {\n            dispose: () => {\n                for (let i = 0; i < this._implementations.length; i++) {\n                    if (this._implementations[i].implementation === implementation) {\n                        this._implementations.splice(i, 1);\n                        return;\n                    }\n                }\n            }\n        };\n    }\n    runCommand(accessor, args) {\n        const logService = accessor.get(ILogService);\n        const contextKeyService = accessor.get(IContextKeyService);\n        logService.trace(`Executing Command '${this.id}' which has ${this._implementations.length} bound.`);\n        for (const impl of this._implementations) {\n            if (impl.when) {\n                const context = contextKeyService.getContext(getActiveElement());\n                const value = impl.when.evaluate(context);\n                if (!value) {\n                    continue;\n                }\n            }\n            const result = impl.implementation(accessor, args);\n            if (result) {\n                logService.trace(`Command '${this.id}' was handled by '${impl.name}'.`);\n                if (typeof result === 'boolean') {\n                    return;\n                }\n                return result;\n            }\n        }\n        logService.trace(`The Command '${this.id}' was not handled by any implementation.`);\n    }\n}\n//#endregion\n/**\n * A command that delegates to another command's implementation.\n *\n * This lets different commands be registered but share the same implementation\n */\nexport class ProxyCommand extends Command {\n    constructor(command, opts) {\n        super(opts);\n        this.command = command;\n    }\n    runCommand(accessor, args) {\n        return this.command.runCommand(accessor, args);\n    }\n}\nexport class EditorCommand extends Command {\n    /**\n     * Create a command class that is bound to a certain editor contribution.\n     */\n    static bindToContribution(controllerGetter) {\n        return class EditorControllerCommandImpl extends EditorCommand {\n            constructor(opts) {\n                super(opts);\n                this._callback = opts.handler;\n            }\n            runEditorCommand(accessor, editor, args) {\n                const controller = controllerGetter(editor);\n                if (controller) {\n                    this._callback(controller, args);\n                }\n            }\n        };\n    }\n    static runEditorCommand(accessor, args, precondition, runner) {\n        const codeEditorService = accessor.get(ICodeEditorService);\n        // Find the editor with text focus or active\n        const editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n        if (!editor) {\n            // well, at least we tried...\n            return;\n        }\n        return editor.invokeWithinContext((editorAccessor) => {\n            const kbService = editorAccessor.get(IContextKeyService);\n            if (!kbService.contextMatchesRules(precondition !== null && precondition !== void 0 ? precondition : undefined)) {\n                // precondition does not hold\n                return;\n            }\n            return runner(editorAccessor, editor, args);\n        });\n    }\n    runCommand(accessor, args) {\n        return EditorCommand.runEditorCommand(accessor, args, this.precondition, (accessor, editor, args) => this.runEditorCommand(accessor, editor, args));\n    }\n}\nexport class EditorAction extends EditorCommand {\n    static convertOptions(opts) {\n        let menuOpts;\n        if (Array.isArray(opts.menuOpts)) {\n            menuOpts = opts.menuOpts;\n        }\n        else if (opts.menuOpts) {\n            menuOpts = [opts.menuOpts];\n        }\n        else {\n            menuOpts = [];\n        }\n        function withDefaults(item) {\n            if (!item.menuId) {\n                item.menuId = MenuId.EditorContext;\n            }\n            if (!item.title) {\n                item.title = opts.label;\n            }\n            item.when = ContextKeyExpr.and(opts.precondition, item.when);\n            return item;\n        }\n        if (Array.isArray(opts.contextMenuOpts)) {\n            menuOpts.push(...opts.contextMenuOpts.map(withDefaults));\n        }\n        else if (opts.contextMenuOpts) {\n            menuOpts.push(withDefaults(opts.contextMenuOpts));\n        }\n        opts.menuOpts = menuOpts;\n        return opts;\n    }\n    constructor(opts) {\n        super(EditorAction.convertOptions(opts));\n        this.label = opts.label;\n        this.alias = opts.alias;\n    }\n    runEditorCommand(accessor, editor, args) {\n        this.reportTelemetry(accessor, editor);\n        return this.run(accessor, editor, args || {});\n    }\n    reportTelemetry(accessor, editor) {\n        accessor.get(ITelemetryService).publicLog2('editorActionInvoked', { name: this.label, id: this.id });\n    }\n}\nexport class MultiEditorAction extends EditorAction {\n    constructor() {\n        super(...arguments);\n        this._implementations = [];\n    }\n    /**\n     * A higher priority gets to be looked at first\n     */\n    addImplementation(priority, implementation) {\n        this._implementations.push([priority, implementation]);\n        this._implementations.sort((a, b) => b[0] - a[0]);\n        return {\n            dispose: () => {\n                for (let i = 0; i < this._implementations.length; i++) {\n                    if (this._implementations[i][1] === implementation) {\n                        this._implementations.splice(i, 1);\n                        return;\n                    }\n                }\n            }\n        };\n    }\n    run(accessor, editor, args) {\n        for (const impl of this._implementations) {\n            const result = impl[1](accessor, editor, args);\n            if (result) {\n                if (typeof result === 'boolean') {\n                    return;\n                }\n                return result;\n            }\n        }\n    }\n}\n//#endregion EditorAction\n//#region EditorAction2\nexport class EditorAction2 extends Action2 {\n    run(accessor, ...args) {\n        // Find the editor with text focus or active\n        const codeEditorService = accessor.get(ICodeEditorService);\n        const editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n        if (!editor) {\n            // well, at least we tried...\n            return;\n        }\n        // precondition does hold\n        return editor.invokeWithinContext((editorAccessor) => {\n            var _a, _b;\n            const kbService = editorAccessor.get(IContextKeyService);\n            const logService = editorAccessor.get(ILogService);\n            const enabled = kbService.contextMatchesRules((_a = this.desc.precondition) !== null && _a !== void 0 ? _a : undefined);\n            if (!enabled) {\n                logService.debug(`[EditorAction2] NOT running command because its precondition is FALSE`, this.desc.id, (_b = this.desc.precondition) === null || _b === void 0 ? void 0 : _b.serialize());\n                return;\n            }\n            return this.runEditorCommand(editorAccessor, editor, ...args);\n        });\n    }\n}\n//#endregion\n// --- Registration of commands and actions\nexport function registerModelAndPositionCommand(id, handler) {\n    CommandsRegistry.registerCommand(id, function (accessor, ...args) {\n        const instaService = accessor.get(IInstantiationService);\n        const [resource, position] = args;\n        assertType(URI.isUri(resource));\n        assertType(Position.isIPosition(position));\n        const model = accessor.get(IModelService).getModel(resource);\n        if (model) {\n            const editorPosition = Position.lift(position);\n            return instaService.invokeFunction(handler, model, editorPosition, ...args.slice(2));\n        }\n        return accessor.get(ITextModelService).createModelReference(resource).then(reference => {\n            return new Promise((resolve, reject) => {\n                try {\n                    const result = instaService.invokeFunction(handler, reference.object.textEditorModel, Position.lift(position), args.slice(2));\n                    resolve(result);\n                }\n                catch (err) {\n                    reject(err);\n                }\n            }).finally(() => {\n                reference.dispose();\n            });\n        });\n    });\n}\nexport function registerEditorCommand(editorCommand) {\n    EditorContributionRegistry.INSTANCE.registerEditorCommand(editorCommand);\n    return editorCommand;\n}\nexport function registerEditorAction(ctor) {\n    const action = new ctor();\n    EditorContributionRegistry.INSTANCE.registerEditorAction(action);\n    return action;\n}\nexport function registerMultiEditorAction(action) {\n    EditorContributionRegistry.INSTANCE.registerEditorAction(action);\n    return action;\n}\nexport function registerInstantiatedEditorAction(editorAction) {\n    EditorContributionRegistry.INSTANCE.registerEditorAction(editorAction);\n}\n/**\n * Registers an editor contribution. Editor contributions have a lifecycle which is bound\n * to a specific code editor instance.\n */\nexport function registerEditorContribution(id, ctor, instantiation) {\n    EditorContributionRegistry.INSTANCE.registerEditorContribution(id, ctor, instantiation);\n}\nexport var EditorExtensionsRegistry;\n(function (EditorExtensionsRegistry) {\n    function getEditorCommand(commandId) {\n        return EditorContributionRegistry.INSTANCE.getEditorCommand(commandId);\n    }\n    EditorExtensionsRegistry.getEditorCommand = getEditorCommand;\n    function getEditorActions() {\n        return EditorContributionRegistry.INSTANCE.getEditorActions();\n    }\n    EditorExtensionsRegistry.getEditorActions = getEditorActions;\n    function getEditorContributions() {\n        return EditorContributionRegistry.INSTANCE.getEditorContributions();\n    }\n    EditorExtensionsRegistry.getEditorContributions = getEditorContributions;\n    function getSomeEditorContributions(ids) {\n        return EditorContributionRegistry.INSTANCE.getEditorContributions().filter(c => ids.indexOf(c.id) >= 0);\n    }\n    EditorExtensionsRegistry.getSomeEditorContributions = getSomeEditorContributions;\n    function getDiffEditorContributions() {\n        return EditorContributionRegistry.INSTANCE.getDiffEditorContributions();\n    }\n    EditorExtensionsRegistry.getDiffEditorContributions = getDiffEditorContributions;\n})(EditorExtensionsRegistry || (EditorExtensionsRegistry = {}));\n// Editor extension points\nconst Extensions = {\n    EditorCommonContributions: 'editor.contributions'\n};\nclass EditorContributionRegistry {\n    constructor() {\n        this.editorContributions = [];\n        this.diffEditorContributions = [];\n        this.editorActions = [];\n        this.editorCommands = Object.create(null);\n    }\n    registerEditorContribution(id, ctor, instantiation) {\n        this.editorContributions.push({ id, ctor: ctor, instantiation });\n    }\n    getEditorContributions() {\n        return this.editorContributions.slice(0);\n    }\n    getDiffEditorContributions() {\n        return this.diffEditorContributions.slice(0);\n    }\n    registerEditorAction(action) {\n        action.register();\n        this.editorActions.push(action);\n    }\n    getEditorActions() {\n        return this.editorActions;\n    }\n    registerEditorCommand(editorCommand) {\n        editorCommand.register();\n        this.editorCommands[editorCommand.id] = editorCommand;\n    }\n    getEditorCommand(commandId) {\n        return (this.editorCommands[commandId] || null);\n    }\n}\nEditorContributionRegistry.INSTANCE = new EditorContributionRegistry();\nRegistry.add(Extensions.EditorCommonContributions, EditorContributionRegistry.INSTANCE);\nfunction registerCommand(command) {\n    command.register();\n    return command;\n}\nexport const UndoCommand = registerCommand(new MultiCommand({\n    id: 'undo',\n    precondition: undefined,\n    kbOpts: {\n        weight: 0 /* KeybindingWeight.EditorCore */,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 56 /* KeyCode.KeyZ */\n    },\n    menuOpts: [{\n            menuId: MenuId.MenubarEditMenu,\n            group: '1_do',\n            title: nls.localize({ key: 'miUndo', comment: ['&& denotes a mnemonic'] }, \"&&Undo\"),\n            order: 1\n        }, {\n            menuId: MenuId.CommandPalette,\n            group: '',\n            title: nls.localize('undo', \"Undo\"),\n            order: 1\n        }]\n}));\nregisterCommand(new ProxyCommand(UndoCommand, { id: 'default:undo', precondition: undefined }));\nexport const RedoCommand = registerCommand(new MultiCommand({\n    id: 'redo',\n    precondition: undefined,\n    kbOpts: {\n        weight: 0 /* KeybindingWeight.EditorCore */,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 55 /* KeyCode.KeyY */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 56 /* KeyCode.KeyZ */],\n        mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 56 /* KeyCode.KeyZ */ }\n    },\n    menuOpts: [{\n            menuId: MenuId.MenubarEditMenu,\n            group: '1_do',\n            title: nls.localize({ key: 'miRedo', comment: ['&& denotes a mnemonic'] }, \"&&Redo\"),\n            order: 2\n        }, {\n            menuId: MenuId.CommandPalette,\n            group: '',\n            title: nls.localize('redo', \"Redo\"),\n            order: 1\n        }]\n}));\nregisterCommand(new ProxyCommand(RedoCommand, { id: 'default:redo', precondition: undefined }));\nexport const SelectAllCommand = registerCommand(new MultiCommand({\n    id: 'editor.action.selectAll',\n    precondition: undefined,\n    kbOpts: {\n        weight: 0 /* KeybindingWeight.EditorCore */,\n        kbExpr: null,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 31 /* KeyCode.KeyA */\n    },\n    menuOpts: [{\n            menuId: MenuId.MenubarSelectionMenu,\n            group: '1_basic',\n            title: nls.localize({ key: 'miSelectAll', comment: ['&& denotes a mnemonic'] }, \"&&Select All\"),\n            order: 1\n        }, {\n            menuId: MenuId.CommandPalette,\n            group: '',\n            title: nls.localize('selectAll', \"Select All\"),\n            order: 1\n        }]\n}));\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nlet AbstractCodeEditorService = class AbstractCodeEditorService extends Disposable {\n    constructor(_themeService) {\n        super();\n        this._themeService = _themeService;\n        this._onWillCreateCodeEditor = this._register(new Emitter());\n        this._onCodeEditorAdd = this._register(new Emitter());\n        this.onCodeEditorAdd = this._onCodeEditorAdd.event;\n        this._onCodeEditorRemove = this._register(new Emitter());\n        this.onCodeEditorRemove = this._onCodeEditorRemove.event;\n        this._onWillCreateDiffEditor = this._register(new Emitter());\n        this._onDiffEditorAdd = this._register(new Emitter());\n        this.onDiffEditorAdd = this._onDiffEditorAdd.event;\n        this._onDiffEditorRemove = this._register(new Emitter());\n        this.onDiffEditorRemove = this._onDiffEditorRemove.event;\n        this._decorationOptionProviders = new Map();\n        this._codeEditorOpenHandlers = new LinkedList();\n        this._modelProperties = new Map();\n        this._codeEditors = Object.create(null);\n        this._diffEditors = Object.create(null);\n        this._globalStyleSheet = null;\n    }\n    willCreateCodeEditor() {\n        this._onWillCreateCodeEditor.fire();\n    }\n    addCodeEditor(editor) {\n        this._codeEditors[editor.getId()] = editor;\n        this._onCodeEditorAdd.fire(editor);\n    }\n    removeCodeEditor(editor) {\n        if (delete this._codeEditors[editor.getId()]) {\n            this._onCodeEditorRemove.fire(editor);\n        }\n    }\n    listCodeEditors() {\n        return Object.keys(this._codeEditors).map(id => this._codeEditors[id]);\n    }\n    willCreateDiffEditor() {\n        this._onWillCreateDiffEditor.fire();\n    }\n    addDiffEditor(editor) {\n        this._diffEditors[editor.getId()] = editor;\n        this._onDiffEditorAdd.fire(editor);\n    }\n    listDiffEditors() {\n        return Object.keys(this._diffEditors).map(id => this._diffEditors[id]);\n    }\n    getFocusedCodeEditor() {\n        let editorWithWidgetFocus = null;\n        const editors = this.listCodeEditors();\n        for (const editor of editors) {\n            if (editor.hasTextFocus()) {\n                // bingo!\n                return editor;\n            }\n            if (editor.hasWidgetFocus()) {\n                editorWithWidgetFocus = editor;\n            }\n        }\n        return editorWithWidgetFocus;\n    }\n    removeDecorationType(key) {\n        const provider = this._decorationOptionProviders.get(key);\n        if (provider) {\n            provider.refCount--;\n            if (provider.refCount <= 0) {\n                this._decorationOptionProviders.delete(key);\n                provider.dispose();\n                this.listCodeEditors().forEach((ed) => ed.removeDecorationsByType(key));\n            }\n        }\n    }\n    setModelProperty(resource, key, value) {\n        const key1 = resource.toString();\n        let dest;\n        if (this._modelProperties.has(key1)) {\n            dest = this._modelProperties.get(key1);\n        }\n        else {\n            dest = new Map();\n            this._modelProperties.set(key1, dest);\n        }\n        dest.set(key, value);\n    }\n    getModelProperty(resource, key) {\n        const key1 = resource.toString();\n        if (this._modelProperties.has(key1)) {\n            const innerMap = this._modelProperties.get(key1);\n            return innerMap.get(key);\n        }\n        return undefined;\n    }\n    openCodeEditor(input, source, sideBySide) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const handler of this._codeEditorOpenHandlers) {\n                const candidate = yield handler(input, source, sideBySide);\n                if (candidate !== null) {\n                    return candidate;\n                }\n            }\n            return null;\n        });\n    }\n    registerCodeEditorOpenHandler(handler) {\n        const rm = this._codeEditorOpenHandlers.unshift(handler);\n        return toDisposable(rm);\n    }\n};\nAbstractCodeEditorService = __decorate([\n    __param(0, IThemeService)\n], AbstractCodeEditorService);\nexport { AbstractCodeEditorService };\nexport class GlobalStyleSheet {\n    constructor(styleSheet) {\n        this._styleSheet = styleSheet;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { isObject } from '../../../base/common/types.js';\nexport const IBulkEditService = createDecorator('IWorkspaceEditService');\nexport class ResourceEdit {\n    constructor(metadata) {\n        this.metadata = metadata;\n    }\n    static convert(edit) {\n        return edit.edits.map(edit => {\n            if (ResourceTextEdit.is(edit)) {\n                return ResourceTextEdit.lift(edit);\n            }\n            if (ResourceFileEdit.is(edit)) {\n                return ResourceFileEdit.lift(edit);\n            }\n            throw new Error('Unsupported edit');\n        });\n    }\n}\nexport class ResourceTextEdit extends ResourceEdit {\n    static is(candidate) {\n        if (candidate instanceof ResourceTextEdit) {\n            return true;\n        }\n        return isObject(candidate)\n            && URI.isUri(candidate.resource)\n            && isObject(candidate.textEdit);\n    }\n    static lift(edit) {\n        if (edit instanceof ResourceTextEdit) {\n            return edit;\n        }\n        else {\n            return new ResourceTextEdit(edit.resource, edit.textEdit, edit.versionId, edit.metadata);\n        }\n    }\n    constructor(resource, textEdit, versionId = undefined, metadata) {\n        super(metadata);\n        this.resource = resource;\n        this.textEdit = textEdit;\n        this.versionId = versionId;\n    }\n}\nexport class ResourceFileEdit extends ResourceEdit {\n    static is(candidate) {\n        if (candidate instanceof ResourceFileEdit) {\n            return true;\n        }\n        else {\n            return isObject(candidate)\n                && (Boolean(candidate.newResource) || Boolean(candidate.oldResource));\n        }\n    }\n    static lift(edit) {\n        if (edit instanceof ResourceFileEdit) {\n            return edit;\n        }\n        else {\n            return new ResourceFileEdit(edit.oldResource, edit.newResource, edit.options, edit.metadata);\n        }\n    }\n    constructor(oldResource, newResource, options = {}, metadata) {\n        super(metadata);\n        this.oldResource = oldResource;\n        this.newResource = newResource;\n        this.options = options;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const ICodeEditorService = createDecorator('codeEditorService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { IntervalTimer, timeout } from '../../../base/common/async.js';\nimport { Disposable, dispose, toDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { SimpleWorkerClient, logOnceWebWorkerWarning } from '../../../base/common/worker/simpleWorker.js';\nimport { DefaultWorkerFactory } from '../../../base/browser/defaultWorkerFactory.js';\nimport { Range } from '../../common/core/range.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { EditorSimpleWorker } from '../../common/services/editorSimpleWorker.js';\nimport { IModelService } from '../../common/services/model.js';\nimport { ITextResourceConfigurationService } from '../../common/services/textResourceConfiguration.js';\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { canceled } from '../../../base/common/errors.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\nimport { MovedText } from '../../common/diff/linesDiffComputer.js';\nimport { DetailedLineRangeMapping, RangeMapping, LineRangeMapping } from '../../common/diff/rangeMapping.js';\nimport { LineRange } from '../../common/core/lineRange.js';\n/**\n * Stop syncing a model to the worker if it was not needed for 1 min.\n */\nconst STOP_SYNC_MODEL_DELTA_TIME_MS = 60 * 1000;\n/**\n * Stop the worker if it was not needed for 5 min.\n */\nconst STOP_WORKER_DELTA_TIME_MS = 5 * 60 * 1000;\nfunction canSyncModel(modelService, resource) {\n    const model = modelService.getModel(resource);\n    if (!model) {\n        return false;\n    }\n    if (model.isTooLargeForSyncing()) {\n        return false;\n    }\n    return true;\n}\nlet EditorWorkerService = class EditorWorkerService extends Disposable {\n    constructor(modelService, configurationService, logService, languageConfigurationService, languageFeaturesService) {\n        super();\n        this._modelService = modelService;\n        this._workerManager = this._register(new WorkerManager(this._modelService, languageConfigurationService));\n        this._logService = logService;\n        // register default link-provider and default completions-provider\n        this._register(languageFeaturesService.linkProvider.register({ language: '*', hasAccessToAllModels: true }, {\n            provideLinks: (model, token) => {\n                if (!canSyncModel(this._modelService, model.uri)) {\n                    return Promise.resolve({ links: [] }); // File too large\n                }\n                return this._workerManager.withWorker().then(client => client.computeLinks(model.uri)).then(links => {\n                    return links && { links };\n                });\n            }\n        }));\n        this._register(languageFeaturesService.completionProvider.register('*', new WordBasedCompletionItemProvider(this._workerManager, configurationService, this._modelService, languageConfigurationService)));\n    }\n    dispose() {\n        super.dispose();\n    }\n    canComputeUnicodeHighlights(uri) {\n        return canSyncModel(this._modelService, uri);\n    }\n    computedUnicodeHighlights(uri, options, range) {\n        return this._workerManager.withWorker().then(client => client.computedUnicodeHighlights(uri, options, range));\n    }\n    computeDiff(original, modified, options, algorithm) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this._workerManager.withWorker().then(client => client.computeDiff(original, modified, options, algorithm));\n            if (!result) {\n                return null;\n            }\n            // Convert from space efficient JSON data to rich objects.\n            const diff = {\n                identical: result.identical,\n                quitEarly: result.quitEarly,\n                changes: toLineRangeMappings(result.changes),\n                moves: result.moves.map(m => new MovedText(new LineRangeMapping(new LineRange(m[0], m[1]), new LineRange(m[2], m[3])), toLineRangeMappings(m[4])))\n            };\n            return diff;\n            function toLineRangeMappings(changes) {\n                return changes.map((c) => {\n                    var _a;\n                    return new DetailedLineRangeMapping(new LineRange(c[0], c[1]), new LineRange(c[2], c[3]), (_a = c[4]) === null || _a === void 0 ? void 0 : _a.map((c) => new RangeMapping(new Range(c[0], c[1], c[2], c[3]), new Range(c[4], c[5], c[6], c[7]))));\n                });\n            }\n        });\n    }\n    computeMoreMinimalEdits(resource, edits, pretty = false) {\n        if (isNonEmptyArray(edits)) {\n            if (!canSyncModel(this._modelService, resource)) {\n                return Promise.resolve(edits); // File too large\n            }\n            const sw = StopWatch.create();\n            const result = this._workerManager.withWorker().then(client => client.computeMoreMinimalEdits(resource, edits, pretty));\n            result.finally(() => this._logService.trace('FORMAT#computeMoreMinimalEdits', resource.toString(true), sw.elapsed()));\n            return Promise.race([result, timeout(1000).then(() => edits)]);\n        }\n        else {\n            return Promise.resolve(undefined);\n        }\n    }\n    canNavigateValueSet(resource) {\n        return (canSyncModel(this._modelService, resource));\n    }\n    navigateValueSet(resource, range, up) {\n        return this._workerManager.withWorker().then(client => client.navigateValueSet(resource, range, up));\n    }\n    canComputeWordRanges(resource) {\n        return canSyncModel(this._modelService, resource);\n    }\n    computeWordRanges(resource, range) {\n        return this._workerManager.withWorker().then(client => client.computeWordRanges(resource, range));\n    }\n};\nEditorWorkerService = __decorate([\n    __param(0, IModelService),\n    __param(1, ITextResourceConfigurationService),\n    __param(2, ILogService),\n    __param(3, ILanguageConfigurationService),\n    __param(4, ILanguageFeaturesService)\n], EditorWorkerService);\nexport { EditorWorkerService };\nclass WordBasedCompletionItemProvider {\n    constructor(workerManager, configurationService, modelService, languageConfigurationService) {\n        this.languageConfigurationService = languageConfigurationService;\n        this._debugDisplayName = 'wordbasedCompletions';\n        this._workerManager = workerManager;\n        this._configurationService = configurationService;\n        this._modelService = modelService;\n    }\n    provideCompletionItems(model, position) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const config = this._configurationService.getValue(model.uri, position, 'editor');\n            if (!config.wordBasedSuggestions) {\n                return undefined;\n            }\n            const models = [];\n            if (config.wordBasedSuggestionsMode === 'currentDocument') {\n                // only current file and only if not too large\n                if (canSyncModel(this._modelService, model.uri)) {\n                    models.push(model.uri);\n                }\n            }\n            else {\n                // either all files or files of same language\n                for (const candidate of this._modelService.getModels()) {\n                    if (!canSyncModel(this._modelService, candidate.uri)) {\n                        continue;\n                    }\n                    if (candidate === model) {\n                        models.unshift(candidate.uri);\n                    }\n                    else if (config.wordBasedSuggestionsMode === 'allDocuments' || candidate.getLanguageId() === model.getLanguageId()) {\n                        models.push(candidate.uri);\n                    }\n                }\n            }\n            if (models.length === 0) {\n                return undefined; // File too large, no other files\n            }\n            const wordDefRegExp = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n            const word = model.getWordAtPosition(position);\n            const replace = !word ? Range.fromPositions(position) : new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\n            const insert = replace.setEndPosition(position.lineNumber, position.column);\n            const client = yield this._workerManager.withWorker();\n            const data = yield client.textualSuggest(models, word === null || word === void 0 ? void 0 : word.word, wordDefRegExp);\n            if (!data) {\n                return undefined;\n            }\n            return {\n                duration: data.duration,\n                suggestions: data.words.map((word) => {\n                    return {\n                        kind: 18 /* languages.CompletionItemKind.Text */,\n                        label: word,\n                        insertText: word,\n                        range: { insert, replace }\n                    };\n                }),\n            };\n        });\n    }\n}\nclass WorkerManager extends Disposable {\n    constructor(modelService, languageConfigurationService) {\n        super();\n        this.languageConfigurationService = languageConfigurationService;\n        this._modelService = modelService;\n        this._editorWorkerClient = null;\n        this._lastWorkerUsedTime = (new Date()).getTime();\n        const stopWorkerInterval = this._register(new IntervalTimer());\n        stopWorkerInterval.cancelAndSet(() => this._checkStopIdleWorker(), Math.round(STOP_WORKER_DELTA_TIME_MS / 2));\n        this._register(this._modelService.onModelRemoved(_ => this._checkStopEmptyWorker()));\n    }\n    dispose() {\n        if (this._editorWorkerClient) {\n            this._editorWorkerClient.dispose();\n            this._editorWorkerClient = null;\n        }\n        super.dispose();\n    }\n    /**\n     * Check if the model service has no more models and stop the worker if that is the case.\n     */\n    _checkStopEmptyWorker() {\n        if (!this._editorWorkerClient) {\n            return;\n        }\n        const models = this._modelService.getModels();\n        if (models.length === 0) {\n            // There are no more models => nothing possible for me to do\n            this._editorWorkerClient.dispose();\n            this._editorWorkerClient = null;\n        }\n    }\n    /**\n     * Check if the worker has been idle for a while and then stop it.\n     */\n    _checkStopIdleWorker() {\n        if (!this._editorWorkerClient) {\n            return;\n        }\n        const timeSinceLastWorkerUsedTime = (new Date()).getTime() - this._lastWorkerUsedTime;\n        if (timeSinceLastWorkerUsedTime > STOP_WORKER_DELTA_TIME_MS) {\n            this._editorWorkerClient.dispose();\n            this._editorWorkerClient = null;\n        }\n    }\n    withWorker() {\n        this._lastWorkerUsedTime = (new Date()).getTime();\n        if (!this._editorWorkerClient) {\n            this._editorWorkerClient = new EditorWorkerClient(this._modelService, false, 'editorWorkerService', this.languageConfigurationService);\n        }\n        return Promise.resolve(this._editorWorkerClient);\n    }\n}\nclass EditorModelManager extends Disposable {\n    constructor(proxy, modelService, keepIdleModels) {\n        super();\n        this._syncedModels = Object.create(null);\n        this._syncedModelsLastUsedTime = Object.create(null);\n        this._proxy = proxy;\n        this._modelService = modelService;\n        if (!keepIdleModels) {\n            const timer = new IntervalTimer();\n            timer.cancelAndSet(() => this._checkStopModelSync(), Math.round(STOP_SYNC_MODEL_DELTA_TIME_MS / 2));\n            this._register(timer);\n        }\n    }\n    dispose() {\n        for (const modelUrl in this._syncedModels) {\n            dispose(this._syncedModels[modelUrl]);\n        }\n        this._syncedModels = Object.create(null);\n        this._syncedModelsLastUsedTime = Object.create(null);\n        super.dispose();\n    }\n    ensureSyncedResources(resources, forceLargeModels) {\n        for (const resource of resources) {\n            const resourceStr = resource.toString();\n            if (!this._syncedModels[resourceStr]) {\n                this._beginModelSync(resource, forceLargeModels);\n            }\n            if (this._syncedModels[resourceStr]) {\n                this._syncedModelsLastUsedTime[resourceStr] = (new Date()).getTime();\n            }\n        }\n    }\n    _checkStopModelSync() {\n        const currentTime = (new Date()).getTime();\n        const toRemove = [];\n        for (const modelUrl in this._syncedModelsLastUsedTime) {\n            const elapsedTime = currentTime - this._syncedModelsLastUsedTime[modelUrl];\n            if (elapsedTime > STOP_SYNC_MODEL_DELTA_TIME_MS) {\n                toRemove.push(modelUrl);\n            }\n        }\n        for (const e of toRemove) {\n            this._stopModelSync(e);\n        }\n    }\n    _beginModelSync(resource, forceLargeModels) {\n        const model = this._modelService.getModel(resource);\n        if (!model) {\n            return;\n        }\n        if (!forceLargeModels && model.isTooLargeForSyncing()) {\n            return;\n        }\n        const modelUrl = resource.toString();\n        this._proxy.acceptNewModel({\n            url: model.uri.toString(),\n            lines: model.getLinesContent(),\n            EOL: model.getEOL(),\n            versionId: model.getVersionId()\n        });\n        const toDispose = new DisposableStore();\n        toDispose.add(model.onDidChangeContent((e) => {\n            this._proxy.acceptModelChanged(modelUrl.toString(), e);\n        }));\n        toDispose.add(model.onWillDispose(() => {\n            this._stopModelSync(modelUrl);\n        }));\n        toDispose.add(toDisposable(() => {\n            this._proxy.acceptRemovedModel(modelUrl);\n        }));\n        this._syncedModels[modelUrl] = toDispose;\n    }\n    _stopModelSync(modelUrl) {\n        const toDispose = this._syncedModels[modelUrl];\n        delete this._syncedModels[modelUrl];\n        delete this._syncedModelsLastUsedTime[modelUrl];\n        dispose(toDispose);\n    }\n}\nclass SynchronousWorkerClient {\n    constructor(instance) {\n        this._instance = instance;\n        this._proxyObj = Promise.resolve(this._instance);\n    }\n    dispose() {\n        this._instance.dispose();\n    }\n    getProxyObject() {\n        return this._proxyObj;\n    }\n}\nexport class EditorWorkerHost {\n    constructor(workerClient) {\n        this._workerClient = workerClient;\n    }\n    // foreign host request\n    fhr(method, args) {\n        return this._workerClient.fhr(method, args);\n    }\n}\nexport class EditorWorkerClient extends Disposable {\n    constructor(modelService, keepIdleModels, label, languageConfigurationService) {\n        super();\n        this.languageConfigurationService = languageConfigurationService;\n        this._disposed = false;\n        this._modelService = modelService;\n        this._keepIdleModels = keepIdleModels;\n        this._workerFactory = new DefaultWorkerFactory(label);\n        this._worker = null;\n        this._modelManager = null;\n    }\n    // foreign host request\n    fhr(method, args) {\n        throw new Error(`Not implemented!`);\n    }\n    _getOrCreateWorker() {\n        if (!this._worker) {\n            try {\n                this._worker = this._register(new SimpleWorkerClient(this._workerFactory, 'vs/editor/common/services/editorSimpleWorker', new EditorWorkerHost(this)));\n            }\n            catch (err) {\n                logOnceWebWorkerWarning(err);\n                this._worker = new SynchronousWorkerClient(new EditorSimpleWorker(new EditorWorkerHost(this), null));\n            }\n        }\n        return this._worker;\n    }\n    _getProxy() {\n        return this._getOrCreateWorker().getProxyObject().then(undefined, (err) => {\n            logOnceWebWorkerWarning(err);\n            this._worker = new SynchronousWorkerClient(new EditorSimpleWorker(new EditorWorkerHost(this), null));\n            return this._getOrCreateWorker().getProxyObject();\n        });\n    }\n    _getOrCreateModelManager(proxy) {\n        if (!this._modelManager) {\n            this._modelManager = this._register(new EditorModelManager(proxy, this._modelService, this._keepIdleModels));\n        }\n        return this._modelManager;\n    }\n    _withSyncedResources(resources, forceLargeModels = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._disposed) {\n                return Promise.reject(canceled());\n            }\n            return this._getProxy().then((proxy) => {\n                this._getOrCreateModelManager(proxy).ensureSyncedResources(resources, forceLargeModels);\n                return proxy;\n            });\n        });\n    }\n    computedUnicodeHighlights(uri, options, range) {\n        return this._withSyncedResources([uri]).then(proxy => {\n            return proxy.computeUnicodeHighlights(uri.toString(), options, range);\n        });\n    }\n    computeDiff(original, modified, options, algorithm) {\n        return this._withSyncedResources([original, modified], /* forceLargeModels */ true).then(proxy => {\n            return proxy.computeDiff(original.toString(), modified.toString(), options, algorithm);\n        });\n    }\n    computeMoreMinimalEdits(resource, edits, pretty) {\n        return this._withSyncedResources([resource]).then(proxy => {\n            return proxy.computeMoreMinimalEdits(resource.toString(), edits, pretty);\n        });\n    }\n    computeLinks(resource) {\n        return this._withSyncedResources([resource]).then(proxy => {\n            return proxy.computeLinks(resource.toString());\n        });\n    }\n    computeDefaultDocumentColors(resource) {\n        return this._withSyncedResources([resource]).then(proxy => {\n            return proxy.computeDefaultDocumentColors(resource.toString());\n        });\n    }\n    textualSuggest(resources, leadingWord, wordDefRegExp) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const proxy = yield this._withSyncedResources(resources);\n            const wordDef = wordDefRegExp.source;\n            const wordDefFlags = wordDefRegExp.flags;\n            return proxy.textualSuggest(resources.map(r => r.toString()), leadingWord, wordDef, wordDefFlags);\n        });\n    }\n    computeWordRanges(resource, range) {\n        return this._withSyncedResources([resource]).then(proxy => {\n            const model = this._modelService.getModel(resource);\n            if (!model) {\n                return Promise.resolve(null);\n            }\n            const wordDefRegExp = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n            const wordDef = wordDefRegExp.source;\n            const wordDefFlags = wordDefRegExp.flags;\n            return proxy.computeWordRanges(resource.toString(), range, wordDef, wordDefFlags);\n        });\n    }\n    navigateValueSet(resource, range, up) {\n        return this._withSyncedResources([resource]).then(proxy => {\n            const model = this._modelService.getModel(resource);\n            if (!model) {\n                return null;\n            }\n            const wordDefRegExp = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n            const wordDef = wordDefRegExp.source;\n            const wordDefFlags = wordDefRegExp.flags;\n            return proxy.navigateValueSet(resource.toString(), range, up, wordDef, wordDefFlags);\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._disposed = true;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { IMarkerDecorationsService } from '../../common/services/markerDecorations.js';\nimport { registerEditorContribution } from '../editorExtensions.js';\nlet MarkerDecorationsContribution = class MarkerDecorationsContribution {\n    constructor(_editor, _markerDecorationsService) {\n        // Doesn't do anything, just requires `IMarkerDecorationsService` to make sure it gets instantiated\n    }\n    dispose() {\n    }\n};\nMarkerDecorationsContribution.ID = 'editor.contrib.markerDecorations';\nMarkerDecorationsContribution = __decorate([\n    __param(1, IMarkerDecorationsService)\n], MarkerDecorationsContribution);\nexport { MarkerDecorationsContribution };\nregisterEditorContribution(MarkerDecorationsContribution.ID, MarkerDecorationsContribution, 0 /* EditorContributionInstantiation.Eager */); // eager because it instantiates IMarkerDecorationsService which is responsible for rendering squiggles\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../base/browser/dom.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport { parse } from '../../../base/common/marshalling.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { normalizePath } from '../../../base/common/resources.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { ICodeEditorService } from './codeEditorService.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { EditorOpenSource } from '../../../platform/editor/common/editor.js';\nimport { extractSelection, matchesScheme, matchesSomeScheme } from '../../../platform/opener/common/opener.js';\nlet CommandOpener = class CommandOpener {\n    constructor(_commandService) {\n        this._commandService = _commandService;\n    }\n    open(target, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!matchesScheme(target, Schemas.command)) {\n                return false;\n            }\n            if (!(options === null || options === void 0 ? void 0 : options.allowCommands)) {\n                // silently ignore commands when command-links are disabled, also\n                // suppress other openers by returning TRUE\n                return true;\n            }\n            if (typeof target === 'string') {\n                target = URI.parse(target);\n            }\n            if (Array.isArray(options.allowCommands)) {\n                // Only allow specific commands\n                if (!options.allowCommands.includes(target.path)) {\n                    // Suppress other openers by returning TRUE\n                    return true;\n                }\n            }\n            // execute as command\n            let args = [];\n            try {\n                args = parse(decodeURIComponent(target.query));\n            }\n            catch (_a) {\n                // ignore and retry\n                try {\n                    args = parse(target.query);\n                }\n                catch (_b) {\n                    // ignore error\n                }\n            }\n            if (!Array.isArray(args)) {\n                args = [args];\n            }\n            yield this._commandService.executeCommand(target.path, ...args);\n            return true;\n        });\n    }\n};\nCommandOpener = __decorate([\n    __param(0, ICommandService)\n], CommandOpener);\nlet EditorOpener = class EditorOpener {\n    constructor(_editorService) {\n        this._editorService = _editorService;\n    }\n    open(target, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof target === 'string') {\n                target = URI.parse(target);\n            }\n            const { selection, uri } = extractSelection(target);\n            target = uri;\n            if (target.scheme === Schemas.file) {\n                target = normalizePath(target); // workaround for non-normalized paths (https://github.com/microsoft/vscode/issues/12954)\n            }\n            yield this._editorService.openCodeEditor({\n                resource: target,\n                options: Object.assign({ selection, source: (options === null || options === void 0 ? void 0 : options.fromUserGesture) ? EditorOpenSource.USER : EditorOpenSource.API }, options === null || options === void 0 ? void 0 : options.editorOptions)\n            }, this._editorService.getFocusedCodeEditor(), options === null || options === void 0 ? void 0 : options.openToSide);\n            return true;\n        });\n    }\n};\nEditorOpener = __decorate([\n    __param(0, ICodeEditorService)\n], EditorOpener);\nlet OpenerService = class OpenerService {\n    constructor(editorService, commandService) {\n        this._openers = new LinkedList();\n        this._validators = new LinkedList();\n        this._resolvers = new LinkedList();\n        this._resolvedUriTargets = new ResourceMap(uri => uri.with({ path: null, fragment: null, query: null }).toString());\n        this._externalOpeners = new LinkedList();\n        // Default external opener is going through window.open()\n        this._defaultExternalOpener = {\n            openExternal: (href) => __awaiter(this, void 0, void 0, function* () {\n                // ensure to open HTTP/HTTPS links into new windows\n                // to not trigger a navigation. Any other link is\n                // safe to be set as HREF to prevent a blank window\n                // from opening.\n                if (matchesSomeScheme(href, Schemas.http, Schemas.https)) {\n                    dom.windowOpenNoOpener(href);\n                }\n                else {\n                    window.location.href = href;\n                }\n                return true;\n            })\n        };\n        // Default opener: any external, maito, http(s), command, and catch-all-editors\n        this._openers.push({\n            open: (target, options) => __awaiter(this, void 0, void 0, function* () {\n                if ((options === null || options === void 0 ? void 0 : options.openExternal) || matchesSomeScheme(target, Schemas.mailto, Schemas.http, Schemas.https, Schemas.vsls)) {\n                    // open externally\n                    yield this._doOpenExternal(target, options);\n                    return true;\n                }\n                return false;\n            })\n        });\n        this._openers.push(new CommandOpener(commandService));\n        this._openers.push(new EditorOpener(editorService));\n    }\n    registerOpener(opener) {\n        const remove = this._openers.unshift(opener);\n        return { dispose: remove };\n    }\n    open(target, options) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            // check with contributed validators\n            const targetURI = typeof target === 'string' ? URI.parse(target) : target;\n            // validate against the original URI that this URI resolves to, if one exists\n            const validationTarget = (_a = this._resolvedUriTargets.get(targetURI)) !== null && _a !== void 0 ? _a : target;\n            for (const validator of this._validators) {\n                if (!(yield validator.shouldOpen(validationTarget, options))) {\n                    return false;\n                }\n            }\n            // check with contributed openers\n            for (const opener of this._openers) {\n                const handled = yield opener.open(target, options);\n                if (handled) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    }\n    resolveExternalUri(resource, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const resolver of this._resolvers) {\n                try {\n                    const result = yield resolver.resolveExternalUri(resource, options);\n                    if (result) {\n                        if (!this._resolvedUriTargets.has(result.resolved)) {\n                            this._resolvedUriTargets.set(result.resolved, resource);\n                        }\n                        return result;\n                    }\n                }\n                catch (_a) {\n                    // noop\n                }\n            }\n            throw new Error('Could not resolve external URI: ' + resource.toString());\n        });\n    }\n    _doOpenExternal(resource, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //todo@jrieken IExternalUriResolver should support `uri: URI | string`\n            const uri = typeof resource === 'string' ? URI.parse(resource) : resource;\n            let externalUri;\n            try {\n                externalUri = (yield this.resolveExternalUri(uri, options)).resolved;\n            }\n            catch (_a) {\n                externalUri = uri;\n            }\n            let href;\n            if (typeof resource === 'string' && uri.toString() === externalUri.toString()) {\n                // open the url-string AS IS\n                href = resource;\n            }\n            else {\n                // open URI using the toString(noEncode)+encodeURI-trick\n                href = encodeURI(externalUri.toString(true));\n            }\n            if (options === null || options === void 0 ? void 0 : options.allowContributedOpeners) {\n                const preferredOpenerId = typeof (options === null || options === void 0 ? void 0 : options.allowContributedOpeners) === 'string' ? options === null || options === void 0 ? void 0 : options.allowContributedOpeners : undefined;\n                for (const opener of this._externalOpeners) {\n                    const didOpen = yield opener.openExternal(href, {\n                        sourceUri: uri,\n                        preferredOpenerId,\n                    }, CancellationToken.None);\n                    if (didOpen) {\n                        return true;\n                    }\n                }\n            }\n            return this._defaultExternalOpener.openExternal(href, { sourceUri: uri }, CancellationToken.None);\n        });\n    }\n    dispose() {\n        this._validators.clear();\n    }\n};\nOpenerService = __decorate([\n    __param(0, ICodeEditorService),\n    __param(1, ICommandService)\n], OpenerService);\nexport { OpenerService };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getAllMethodNames } from '../../../base/common/objects.js';\nimport { EditorWorkerClient } from './editorWorkerService.js';\n/**\n * Create a new web worker that has model syncing capabilities built in.\n * Specify an AMD module to load that will `create` an object that will be proxied.\n */\nexport function createWebWorker(modelService, languageConfigurationService, opts) {\n    return new MonacoWebWorkerImpl(modelService, languageConfigurationService, opts);\n}\nclass MonacoWebWorkerImpl extends EditorWorkerClient {\n    constructor(modelService, languageConfigurationService, opts) {\n        super(modelService, opts.keepIdleModels || false, opts.label, languageConfigurationService);\n        this._foreignModuleId = opts.moduleId;\n        this._foreignModuleCreateData = opts.createData || null;\n        this._foreignModuleHost = opts.host || null;\n        this._foreignProxy = null;\n    }\n    // foreign host request\n    fhr(method, args) {\n        if (!this._foreignModuleHost || typeof this._foreignModuleHost[method] !== 'function') {\n            return Promise.reject(new Error('Missing method ' + method + ' or missing main thread foreign host.'));\n        }\n        try {\n            return Promise.resolve(this._foreignModuleHost[method].apply(this._foreignModuleHost, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    _getForeignProxy() {\n        if (!this._foreignProxy) {\n            this._foreignProxy = this._getProxy().then((proxy) => {\n                const foreignHostMethods = this._foreignModuleHost ? getAllMethodNames(this._foreignModuleHost) : [];\n                return proxy.loadForeignModule(this._foreignModuleId, this._foreignModuleCreateData, foreignHostMethods).then((foreignMethods) => {\n                    this._foreignModuleCreateData = null;\n                    const proxyMethodRequest = (method, args) => {\n                        return proxy.fmr(method, args);\n                    };\n                    const createProxyMethod = (method, proxyMethodRequest) => {\n                        return function () {\n                            const args = Array.prototype.slice.call(arguments, 0);\n                            return proxyMethodRequest(method, args);\n                        };\n                    };\n                    const foreignProxy = {};\n                    for (const foreignMethod of foreignMethods) {\n                        foreignProxy[foreignMethod] = createProxyMethod(foreignMethod, proxyMethodRequest);\n                    }\n                    return foreignProxy;\n                });\n            });\n        }\n        return this._foreignProxy;\n    }\n    getProxy() {\n        return this._getForeignProxy();\n    }\n    withSyncedResources(resources) {\n        return this._withSyncedResources(resources).then(_ => this.getProxy());\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class StableEditorScrollState {\n    static capture(editor) {\n        if (editor.getScrollTop() === 0 || editor.hasPendingScrollAnimation()) {\n            // Never mess with the scroll top if the editor is at the top of the file or if there is a pending scroll animation\n            return new StableEditorScrollState(editor.getScrollTop(), editor.getContentHeight(), null, 0, null);\n        }\n        let visiblePosition = null;\n        let visiblePositionScrollDelta = 0;\n        const visibleRanges = editor.getVisibleRanges();\n        if (visibleRanges.length > 0) {\n            visiblePosition = visibleRanges[0].getStartPosition();\n            const visiblePositionScrollTop = editor.getTopForPosition(visiblePosition.lineNumber, visiblePosition.column);\n            visiblePositionScrollDelta = editor.getScrollTop() - visiblePositionScrollTop;\n        }\n        return new StableEditorScrollState(editor.getScrollTop(), editor.getContentHeight(), visiblePosition, visiblePositionScrollDelta, editor.getPosition());\n    }\n    constructor(_initialScrollTop, _initialContentHeight, _visiblePosition, _visiblePositionScrollDelta, _cursorPosition) {\n        this._initialScrollTop = _initialScrollTop;\n        this._initialContentHeight = _initialContentHeight;\n        this._visiblePosition = _visiblePosition;\n        this._visiblePositionScrollDelta = _visiblePositionScrollDelta;\n        this._cursorPosition = _cursorPosition;\n    }\n    restore(editor) {\n        if (this._initialContentHeight === editor.getContentHeight() && this._initialScrollTop === editor.getScrollTop()) {\n            // The editor's content height and scroll top haven't changed, so we don't need to do anything\n            return;\n        }\n        if (this._visiblePosition) {\n            const visiblePositionScrollTop = editor.getTopForPosition(this._visiblePosition.lineNumber, this._visiblePosition.column);\n            editor.setScrollTop(visiblePositionScrollTop + this._visiblePositionScrollDelta);\n        }\n    }\n    restoreRelativeVerticalPositionOfCursor(editor) {\n        if (this._initialContentHeight === editor.getContentHeight() && this._initialScrollTop === editor.getScrollTop()) {\n            // The editor's content height and scroll top haven't changed, so we don't need to do anything\n            return;\n        }\n        const currentCursorPosition = editor.getPosition();\n        if (!this._cursorPosition || !currentCursorPosition) {\n            return;\n        }\n        const offset = editor.getTopForLineNumber(currentCursorPosition.lineNumber) - editor.getTopForLineNumber(this._cursorPosition.lineNumber);\n        editor.setScrollTop(editor.getScrollTop() + offset);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nexport class ViewContentWidgets extends ViewPart {\n    constructor(context, viewDomNode) {\n        super(context);\n        this._viewDomNode = viewDomNode;\n        this._widgets = {};\n        this.domNode = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this.domNode, 1 /* PartFingerprint.ContentWidgets */);\n        this.domNode.setClassName('contentWidgets');\n        this.domNode.setPosition('absolute');\n        this.domNode.setTop(0);\n        this.overflowingContentWidgetsDomNode = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this.overflowingContentWidgetsDomNode, 2 /* PartFingerprint.OverflowingContentWidgets */);\n        this.overflowingContentWidgetsDomNode.setClassName('overflowingContentWidgets');\n    }\n    dispose() {\n        super.dispose();\n        this._widgets = {};\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].onConfigurationChanged(e);\n        }\n        return true;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations that can end up relayouting text\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLineMappingChanged(e) {\n        this._updateAnchorsViewPositions();\n        return true;\n    }\n    onLinesChanged(e) {\n        this._updateAnchorsViewPositions();\n        return true;\n    }\n    onLinesDeleted(e) {\n        this._updateAnchorsViewPositions();\n        return true;\n    }\n    onLinesInserted(e) {\n        this._updateAnchorsViewPositions();\n        return true;\n    }\n    onScrollChanged(e) {\n        return true;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // ---- end view event handlers\n    _updateAnchorsViewPositions() {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].updateAnchorViewPosition();\n        }\n    }\n    addWidget(_widget) {\n        const myWidget = new Widget(this._context, this._viewDomNode, _widget);\n        this._widgets[myWidget.id] = myWidget;\n        if (myWidget.allowEditorOverflow) {\n            this.overflowingContentWidgetsDomNode.appendChild(myWidget.domNode);\n        }\n        else {\n            this.domNode.appendChild(myWidget.domNode);\n        }\n        this.setShouldRender();\n    }\n    setWidgetPosition(widget, primaryAnchor, secondaryAnchor, preference, affinity) {\n        const myWidget = this._widgets[widget.getId()];\n        myWidget.setPosition(primaryAnchor, secondaryAnchor, preference, affinity);\n        this.setShouldRender();\n    }\n    removeWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._widgets.hasOwnProperty(widgetId)) {\n            const myWidget = this._widgets[widgetId];\n            delete this._widgets[widgetId];\n            const domNode = myWidget.domNode.domNode;\n            domNode.parentNode.removeChild(domNode);\n            domNode.removeAttribute('monaco-visible-content-widget');\n            this.setShouldRender();\n        }\n    }\n    shouldSuppressMouseDownOnWidget(widgetId) {\n        if (this._widgets.hasOwnProperty(widgetId)) {\n            return this._widgets[widgetId].suppressMouseDown;\n        }\n        return false;\n    }\n    onBeforeRender(viewportData) {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].onBeforeRender(viewportData);\n        }\n    }\n    prepareRender(ctx) {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].prepareRender(ctx);\n        }\n    }\n    render(ctx) {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].render(ctx);\n        }\n    }\n}\nclass Widget {\n    constructor(context, viewDomNode, actual) {\n        this._primaryAnchor = new PositionPair(null, null);\n        this._secondaryAnchor = new PositionPair(null, null);\n        this._context = context;\n        this._viewDomNode = viewDomNode;\n        this._actual = actual;\n        this.domNode = createFastDomNode(this._actual.getDomNode());\n        this.id = this._actual.getId();\n        this.allowEditorOverflow = this._actual.allowEditorOverflow || false;\n        this.suppressMouseDown = this._actual.suppressMouseDown || false;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this._fixedOverflowWidgets = options.get(42 /* EditorOption.fixedOverflowWidgets */);\n        this._contentWidth = layoutInfo.contentWidth;\n        this._contentLeft = layoutInfo.contentLeft;\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._affinity = null;\n        this._preference = [];\n        this._cachedDomNodeOffsetWidth = -1;\n        this._cachedDomNodeOffsetHeight = -1;\n        this._maxWidth = this._getMaxWidth();\n        this._isVisible = false;\n        this._renderData = null;\n        this.domNode.setPosition((this._fixedOverflowWidgets && this.allowEditorOverflow) ? 'fixed' : 'absolute');\n        this.domNode.setDisplay('none');\n        this.domNode.setVisibility('hidden');\n        this.domNode.setAttribute('widgetId', this.id);\n        this.domNode.setMaxWidth(this._maxWidth);\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        if (e.hasChanged(143 /* EditorOption.layoutInfo */)) {\n            const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n            this._contentLeft = layoutInfo.contentLeft;\n            this._contentWidth = layoutInfo.contentWidth;\n            this._maxWidth = this._getMaxWidth();\n        }\n    }\n    updateAnchorViewPosition() {\n        this._setPosition(this._affinity, this._primaryAnchor.modelPosition, this._secondaryAnchor.modelPosition);\n    }\n    _setPosition(affinity, primaryAnchor, secondaryAnchor) {\n        this._affinity = affinity;\n        this._primaryAnchor = getValidPositionPair(primaryAnchor, this._context.viewModel, this._affinity);\n        this._secondaryAnchor = getValidPositionPair(secondaryAnchor, this._context.viewModel, this._affinity);\n        function getValidPositionPair(position, viewModel, affinity) {\n            if (!position) {\n                return new PositionPair(null, null);\n            }\n            // Do not trust that widgets give a valid position\n            const validModelPosition = viewModel.model.validatePosition(position);\n            if (viewModel.coordinatesConverter.modelPositionIsVisible(validModelPosition)) {\n                const viewPosition = viewModel.coordinatesConverter.convertModelPositionToViewPosition(validModelPosition, affinity !== null && affinity !== void 0 ? affinity : undefined);\n                return new PositionPair(position, viewPosition);\n            }\n            return new PositionPair(position, null);\n        }\n    }\n    _getMaxWidth() {\n        const elDocument = this.domNode.domNode.ownerDocument;\n        const elWindow = elDocument.defaultView;\n        return (this.allowEditorOverflow\n            ? (elWindow === null || elWindow === void 0 ? void 0 : elWindow.innerWidth) || elDocument.documentElement.offsetWidth || elDocument.body.offsetWidth\n            : this._contentWidth);\n    }\n    setPosition(primaryAnchor, secondaryAnchor, preference, affinity) {\n        this._setPosition(affinity, primaryAnchor, secondaryAnchor);\n        this._preference = preference;\n        if (this._primaryAnchor.viewPosition && this._preference && this._preference.length > 0) {\n            // this content widget would like to be visible if possible\n            // we change it from `display:none` to `display:block` even if it\n            // might be outside the viewport such that we can measure its size\n            // in `prepareRender`\n            this.domNode.setDisplay('block');\n        }\n        else {\n            this.domNode.setDisplay('none');\n        }\n        this._cachedDomNodeOffsetWidth = -1;\n        this._cachedDomNodeOffsetHeight = -1;\n    }\n    _layoutBoxInViewport(anchor, width, height, ctx) {\n        // Our visible box is split horizontally by the current line => 2 boxes\n        // a) the box above the line\n        const aboveLineTop = anchor.top;\n        const heightAvailableAboveLine = aboveLineTop;\n        // b) the box under the line\n        const underLineTop = anchor.top + anchor.height;\n        const heightAvailableUnderLine = ctx.viewportHeight - underLineTop;\n        const aboveTop = aboveLineTop - height;\n        const fitsAbove = (heightAvailableAboveLine >= height);\n        const belowTop = underLineTop;\n        const fitsBelow = (heightAvailableUnderLine >= height);\n        // And its left\n        let left = anchor.left;\n        if (left + width > ctx.scrollLeft + ctx.viewportWidth) {\n            left = ctx.scrollLeft + ctx.viewportWidth - width;\n        }\n        if (left < ctx.scrollLeft) {\n            left = ctx.scrollLeft;\n        }\n        return { fitsAbove, aboveTop, fitsBelow, belowTop, left };\n    }\n    _layoutHorizontalSegmentInPage(windowSize, domNodePosition, left, width) {\n        var _a;\n        // Leave some clearance to the left/right\n        const LEFT_PADDING = 15;\n        const RIGHT_PADDING = 15;\n        // Initially, the limits are defined as the dom node limits\n        const MIN_LIMIT = Math.max(LEFT_PADDING, domNodePosition.left - width);\n        const MAX_LIMIT = Math.min(domNodePosition.left + domNodePosition.width + width, windowSize.width - RIGHT_PADDING);\n        const elDocument = this._viewDomNode.domNode.ownerDocument;\n        const elWindow = elDocument.defaultView;\n        let absoluteLeft = domNodePosition.left + left - ((_a = elWindow === null || elWindow === void 0 ? void 0 : elWindow.scrollX) !== null && _a !== void 0 ? _a : 0);\n        if (absoluteLeft + width > MAX_LIMIT) {\n            const delta = absoluteLeft - (MAX_LIMIT - width);\n            absoluteLeft -= delta;\n            left -= delta;\n        }\n        if (absoluteLeft < MIN_LIMIT) {\n            const delta = absoluteLeft - MIN_LIMIT;\n            absoluteLeft -= delta;\n            left -= delta;\n        }\n        return [left, absoluteLeft];\n    }\n    _layoutBoxInPage(anchor, width, height, ctx) {\n        var _a, _b;\n        const aboveTop = anchor.top - height;\n        const belowTop = anchor.top + anchor.height;\n        const domNodePosition = dom.getDomNodePagePosition(this._viewDomNode.domNode);\n        const elDocument = this._viewDomNode.domNode.ownerDocument;\n        const elWindow = elDocument.defaultView;\n        const absoluteAboveTop = domNodePosition.top + aboveTop - ((_a = elWindow === null || elWindow === void 0 ? void 0 : elWindow.scrollY) !== null && _a !== void 0 ? _a : 0);\n        const absoluteBelowTop = domNodePosition.top + belowTop - ((_b = elWindow === null || elWindow === void 0 ? void 0 : elWindow.scrollY) !== null && _b !== void 0 ? _b : 0);\n        const windowSize = dom.getClientArea(elDocument.body);\n        const [left, absoluteAboveLeft] = this._layoutHorizontalSegmentInPage(windowSize, domNodePosition, anchor.left - ctx.scrollLeft + this._contentLeft, width);\n        // Leave some clearance to the top/bottom\n        const TOP_PADDING = 22;\n        const BOTTOM_PADDING = 22;\n        const fitsAbove = (absoluteAboveTop >= TOP_PADDING);\n        const fitsBelow = (absoluteBelowTop + height <= windowSize.height - BOTTOM_PADDING);\n        if (this._fixedOverflowWidgets) {\n            return {\n                fitsAbove,\n                aboveTop: Math.max(absoluteAboveTop, TOP_PADDING),\n                fitsBelow,\n                belowTop: absoluteBelowTop,\n                left: absoluteAboveLeft\n            };\n        }\n        return { fitsAbove, aboveTop, fitsBelow, belowTop, left };\n    }\n    _prepareRenderWidgetAtExactPositionOverflowing(topLeft) {\n        return new Coordinate(topLeft.top, topLeft.left + this._contentLeft);\n    }\n    /**\n     * Compute the coordinates above and below the primary and secondary anchors.\n     * The content widget *must* touch the primary anchor.\n     * The content widget should touch if possible the secondary anchor.\n     */\n    _getAnchorsCoordinates(ctx) {\n        var _a, _b;\n        const primary = getCoordinates(this._primaryAnchor.viewPosition, this._affinity, this._lineHeight);\n        const secondaryViewPosition = (((_a = this._secondaryAnchor.viewPosition) === null || _a === void 0 ? void 0 : _a.lineNumber) === ((_b = this._primaryAnchor.viewPosition) === null || _b === void 0 ? void 0 : _b.lineNumber) ? this._secondaryAnchor.viewPosition : null);\n        const secondary = getCoordinates(secondaryViewPosition, this._affinity, this._lineHeight);\n        return { primary, secondary };\n        function getCoordinates(position, affinity, lineHeight) {\n            if (!position) {\n                return null;\n            }\n            const horizontalPosition = ctx.visibleRangeForPosition(position);\n            if (!horizontalPosition) {\n                return null;\n            }\n            // Left-align widgets that should appear :before content\n            const left = (position.column === 1 && affinity === 3 /* PositionAffinity.LeftOfInjectedText */ ? 0 : horizontalPosition.left);\n            const top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.scrollTop;\n            return new AnchorCoordinate(top, left, lineHeight);\n        }\n    }\n    _reduceAnchorCoordinates(primary, secondary, width) {\n        if (!secondary) {\n            return primary;\n        }\n        const fontInfo = this._context.configuration.options.get(50 /* EditorOption.fontInfo */);\n        let left = secondary.left;\n        if (left < primary.left) {\n            left = Math.max(left, primary.left - width + fontInfo.typicalFullwidthCharacterWidth);\n        }\n        else {\n            left = Math.min(left, primary.left + width - fontInfo.typicalFullwidthCharacterWidth);\n        }\n        return new AnchorCoordinate(primary.top, left, primary.height);\n    }\n    _prepareRenderWidget(ctx) {\n        if (!this._preference || this._preference.length === 0) {\n            return null;\n        }\n        const { primary, secondary } = this._getAnchorsCoordinates(ctx);\n        if (!primary) {\n            return null;\n        }\n        if (this._cachedDomNodeOffsetWidth === -1 || this._cachedDomNodeOffsetHeight === -1) {\n            let preferredDimensions = null;\n            if (typeof this._actual.beforeRender === 'function') {\n                preferredDimensions = safeInvoke(this._actual.beforeRender, this._actual);\n            }\n            if (preferredDimensions) {\n                this._cachedDomNodeOffsetWidth = preferredDimensions.width;\n                this._cachedDomNodeOffsetHeight = preferredDimensions.height;\n            }\n            else {\n                const domNode = this.domNode.domNode;\n                const clientRect = domNode.getBoundingClientRect();\n                this._cachedDomNodeOffsetWidth = Math.round(clientRect.width);\n                this._cachedDomNodeOffsetHeight = Math.round(clientRect.height);\n            }\n        }\n        const anchor = this._reduceAnchorCoordinates(primary, secondary, this._cachedDomNodeOffsetWidth);\n        let placement;\n        if (this.allowEditorOverflow) {\n            placement = this._layoutBoxInPage(anchor, this._cachedDomNodeOffsetWidth, this._cachedDomNodeOffsetHeight, ctx);\n        }\n        else {\n            placement = this._layoutBoxInViewport(anchor, this._cachedDomNodeOffsetWidth, this._cachedDomNodeOffsetHeight, ctx);\n        }\n        // Do two passes, first for perfect fit, second picks first option\n        for (let pass = 1; pass <= 2; pass++) {\n            for (const pref of this._preference) {\n                // placement\n                if (pref === 1 /* ContentWidgetPositionPreference.ABOVE */) {\n                    if (!placement) {\n                        // Widget outside of viewport\n                        return null;\n                    }\n                    if (pass === 2 || placement.fitsAbove) {\n                        return { coordinate: new Coordinate(placement.aboveTop, placement.left), position: 1 /* ContentWidgetPositionPreference.ABOVE */ };\n                    }\n                }\n                else if (pref === 2 /* ContentWidgetPositionPreference.BELOW */) {\n                    if (!placement) {\n                        // Widget outside of viewport\n                        return null;\n                    }\n                    if (pass === 2 || placement.fitsBelow) {\n                        return { coordinate: new Coordinate(placement.belowTop, placement.left), position: 2 /* ContentWidgetPositionPreference.BELOW */ };\n                    }\n                }\n                else {\n                    if (this.allowEditorOverflow) {\n                        return { coordinate: this._prepareRenderWidgetAtExactPositionOverflowing(new Coordinate(anchor.top, anchor.left)), position: 0 /* ContentWidgetPositionPreference.EXACT */ };\n                    }\n                    else {\n                        return { coordinate: new Coordinate(anchor.top, anchor.left), position: 0 /* ContentWidgetPositionPreference.EXACT */ };\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * On this first pass, we ensure that the content widget (if it is in the viewport) has the max width set correctly.\n     */\n    onBeforeRender(viewportData) {\n        if (!this._primaryAnchor.viewPosition || !this._preference) {\n            return;\n        }\n        if (this._primaryAnchor.viewPosition.lineNumber < viewportData.startLineNumber || this._primaryAnchor.viewPosition.lineNumber > viewportData.endLineNumber) {\n            // Outside of viewport\n            return;\n        }\n        this.domNode.setMaxWidth(this._maxWidth);\n    }\n    prepareRender(ctx) {\n        this._renderData = this._prepareRenderWidget(ctx);\n    }\n    render(ctx) {\n        if (!this._renderData) {\n            // This widget should be invisible\n            if (this._isVisible) {\n                this.domNode.removeAttribute('monaco-visible-content-widget');\n                this._isVisible = false;\n                this.domNode.setVisibility('hidden');\n            }\n            if (typeof this._actual.afterRender === 'function') {\n                safeInvoke(this._actual.afterRender, this._actual, null);\n            }\n            return;\n        }\n        // This widget should be visible\n        if (this.allowEditorOverflow) {\n            this.domNode.setTop(this._renderData.coordinate.top);\n            this.domNode.setLeft(this._renderData.coordinate.left);\n        }\n        else {\n            this.domNode.setTop(this._renderData.coordinate.top + ctx.scrollTop - ctx.bigNumbersDelta);\n            this.domNode.setLeft(this._renderData.coordinate.left);\n        }\n        if (!this._isVisible) {\n            this.domNode.setVisibility('inherit');\n            this.domNode.setAttribute('monaco-visible-content-widget', 'true');\n            this._isVisible = true;\n        }\n        if (typeof this._actual.afterRender === 'function') {\n            safeInvoke(this._actual.afterRender, this._actual, this._renderData.position);\n        }\n    }\n}\nclass PositionPair {\n    constructor(modelPosition, viewPosition) {\n        this.modelPosition = modelPosition;\n        this.viewPosition = viewPosition;\n    }\n}\nclass Coordinate {\n    constructor(top, left) {\n        this.top = top;\n        this.left = left;\n        this._coordinateBrand = undefined;\n    }\n}\nclass AnchorCoordinate {\n    constructor(top, left, height) {\n        this.top = top;\n        this.left = left;\n        this.height = height;\n        this._anchorCoordinateBrand = undefined;\n    }\n}\nfunction safeInvoke(fn, thisArg, ...args) {\n    try {\n        return fn.call(thisArg, ...args);\n    }\n    catch (_a) {\n        // ignore\n        return null;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './currentLineHighlight.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorLineHighlight, editorLineHighlightBorder } from '../../../common/core/editorColorRegistry.js';\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nexport class AbstractLineHighlightOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._renderLineHighlight = options.get(95 /* EditorOption.renderLineHighlight */);\n        this._renderLineHighlightOnlyWhenFocus = options.get(96 /* EditorOption.renderLineHighlightOnlyWhenFocus */);\n        this._contentLeft = layoutInfo.contentLeft;\n        this._contentWidth = layoutInfo.contentWidth;\n        this._selectionIsEmpty = true;\n        this._focused = false;\n        this._cursorLineNumbers = [1];\n        this._selections = [new Selection(1, 1, 1, 1)];\n        this._renderData = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        super.dispose();\n    }\n    _readFromSelections() {\n        let hasChanged = false;\n        const cursorsLineNumbers = this._selections.map(s => s.positionLineNumber);\n        cursorsLineNumbers.sort((a, b) => a - b);\n        if (!arrays.equals(this._cursorLineNumbers, cursorsLineNumbers)) {\n            this._cursorLineNumbers = cursorsLineNumbers;\n            hasChanged = true;\n        }\n        const selectionIsEmpty = this._selections.every(s => s.isEmpty());\n        if (this._selectionIsEmpty !== selectionIsEmpty) {\n            this._selectionIsEmpty = selectionIsEmpty;\n            hasChanged = true;\n        }\n        return hasChanged;\n    }\n    // --- begin event handlers\n    onThemeChanged(e) {\n        return this._readFromSelections();\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._renderLineHighlight = options.get(95 /* EditorOption.renderLineHighlight */);\n        this._renderLineHighlightOnlyWhenFocus = options.get(96 /* EditorOption.renderLineHighlightOnlyWhenFocus */);\n        this._contentLeft = layoutInfo.contentLeft;\n        this._contentWidth = layoutInfo.contentWidth;\n        return true;\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections;\n        return this._readFromSelections();\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollWidthChanged || e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    onFocusChanged(e) {\n        if (!this._renderLineHighlightOnlyWhenFocus) {\n            return false;\n        }\n        this._focused = e.isFocused;\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        if (!this._shouldRenderThis()) {\n            this._renderData = null;\n            return;\n        }\n        const renderedLine = this._renderOne(ctx);\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const len = this._cursorLineNumbers.length;\n        let index = 0;\n        const renderData = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            while (index < len && this._cursorLineNumbers[index] < lineNumber) {\n                index++;\n            }\n            if (index < len && this._cursorLineNumbers[index] === lineNumber) {\n                renderData[lineIndex] = renderedLine;\n            }\n            else {\n                renderData[lineIndex] = '';\n            }\n        }\n        this._renderData = renderData;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderData) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex >= this._renderData.length) {\n            return '';\n        }\n        return this._renderData[lineIndex];\n    }\n    _shouldRenderInMargin() {\n        return ((this._renderLineHighlight === 'gutter' || this._renderLineHighlight === 'all')\n            && (!this._renderLineHighlightOnlyWhenFocus || this._focused));\n    }\n    _shouldRenderInContent() {\n        return ((this._renderLineHighlight === 'line' || this._renderLineHighlight === 'all')\n            && this._selectionIsEmpty\n            && (!this._renderLineHighlightOnlyWhenFocus || this._focused));\n    }\n}\nexport class CurrentLineHighlightOverlay extends AbstractLineHighlightOverlay {\n    _renderOne(ctx) {\n        const className = 'current-line' + (this._shouldRenderOther() ? ' current-line-both' : '');\n        return `<div class=\"${className}\" style=\"width:${Math.max(ctx.scrollWidth, this._contentWidth)}px; height:${this._lineHeight}px;\"></div>`;\n    }\n    _shouldRenderThis() {\n        return this._shouldRenderInContent();\n    }\n    _shouldRenderOther() {\n        return this._shouldRenderInMargin();\n    }\n}\nexport class CurrentLineMarginHighlightOverlay extends AbstractLineHighlightOverlay {\n    _renderOne(ctx) {\n        const className = 'current-line' + (this._shouldRenderInMargin() ? ' current-line-margin' : '') + (this._shouldRenderOther() ? ' current-line-margin-both' : '');\n        return `<div class=\"${className}\" style=\"width:${this._contentLeft}px; height:${this._lineHeight}px;\"></div>`;\n    }\n    _shouldRenderThis() {\n        return true;\n    }\n    _shouldRenderOther() {\n        return this._shouldRenderInContent();\n    }\n}\nregisterThemingParticipant((theme, collector) => {\n    const lineHighlight = theme.getColor(editorLineHighlight);\n    if (lineHighlight) {\n        collector.addRule(`.monaco-editor .view-overlays .current-line { background-color: ${lineHighlight}; }`);\n        collector.addRule(`.monaco-editor .margin-view-overlays .current-line-margin { background-color: ${lineHighlight}; border: none; }`);\n    }\n    if (!lineHighlight || lineHighlight.isTransparent() || theme.defines(editorLineHighlightBorder)) {\n        const lineHighlightBorder = theme.getColor(editorLineHighlightBorder);\n        if (lineHighlightBorder) {\n            collector.addRule(`.monaco-editor .view-overlays .current-line { border: 2px solid ${lineHighlightBorder}; }`);\n            collector.addRule(`.monaco-editor .margin-view-overlays .current-line-margin { border: 2px solid ${lineHighlightBorder}; }`);\n            if (isHighContrast(theme.type)) {\n                collector.addRule(`.monaco-editor .view-overlays .current-line { border-width: 1px; }`);\n                collector.addRule(`.monaco-editor .margin-view-overlays .current-line-margin { border-width: 1px; }`);\n            }\n        }\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './decorations.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { HorizontalRange } from '../../view/renderingContext.js';\nimport { Range } from '../../../common/core/range.js';\nexport class DecorationsOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        const options = this._context.configuration.options;\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        return true;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged || e.scrollWidthChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        const _decorations = ctx.getDecorationsInViewport();\n        // Keep only decorations with `className`\n        let decorations = [];\n        let decorationsLen = 0;\n        for (let i = 0, len = _decorations.length; i < len; i++) {\n            const d = _decorations[i];\n            if (d.options.className) {\n                decorations[decorationsLen++] = d;\n            }\n        }\n        // Sort decorations for consistent render output\n        decorations = decorations.sort((a, b) => {\n            if (a.options.zIndex < b.options.zIndex) {\n                return -1;\n            }\n            if (a.options.zIndex > b.options.zIndex) {\n                return 1;\n            }\n            const aClassName = a.options.className;\n            const bClassName = b.options.className;\n            if (aClassName < bClassName) {\n                return -1;\n            }\n            if (aClassName > bClassName) {\n                return 1;\n            }\n            return Range.compareRangesUsingStarts(a.range, b.range);\n        });\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            output[lineIndex] = '';\n        }\n        // Render first whole line decorations and then regular decorations\n        this._renderWholeLineDecorations(ctx, decorations, output);\n        this._renderNormalDecorations(ctx, decorations, output);\n        this._renderResult = output;\n    }\n    _renderWholeLineDecorations(ctx, decorations, output) {\n        const lineHeight = String(this._lineHeight);\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        for (let i = 0, lenI = decorations.length; i < lenI; i++) {\n            const d = decorations[i];\n            if (!d.options.isWholeLine) {\n                continue;\n            }\n            const decorationOutput = ('<div class=\"cdr '\n                + d.options.className\n                + '\" style=\"left:0;width:100%;height:'\n                + lineHeight\n                + 'px;\"></div>');\n            const startLineNumber = Math.max(d.range.startLineNumber, visibleStartLineNumber);\n            const endLineNumber = Math.min(d.range.endLineNumber, visibleEndLineNumber);\n            for (let j = startLineNumber; j <= endLineNumber; j++) {\n                const lineIndex = j - visibleStartLineNumber;\n                output[lineIndex] += decorationOutput;\n            }\n        }\n    }\n    _renderNormalDecorations(ctx, decorations, output) {\n        var _a;\n        const lineHeight = String(this._lineHeight);\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        let prevClassName = null;\n        let prevShowIfCollapsed = false;\n        let prevRange = null;\n        let prevShouldFillLineOnLineBreak = false;\n        for (let i = 0, lenI = decorations.length; i < lenI; i++) {\n            const d = decorations[i];\n            if (d.options.isWholeLine) {\n                continue;\n            }\n            const className = d.options.className;\n            const showIfCollapsed = Boolean(d.options.showIfCollapsed);\n            let range = d.range;\n            if (showIfCollapsed && range.endColumn === 1 && range.endLineNumber !== range.startLineNumber) {\n                range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber - 1, this._context.viewModel.getLineMaxColumn(range.endLineNumber - 1));\n            }\n            if (prevClassName === className && prevShowIfCollapsed === showIfCollapsed && Range.areIntersectingOrTouching(prevRange, range)) {\n                // merge into previous decoration\n                prevRange = Range.plusRange(prevRange, range);\n                continue;\n            }\n            // flush previous decoration\n            if (prevClassName !== null) {\n                this._renderNormalDecoration(ctx, prevRange, prevClassName, prevShouldFillLineOnLineBreak, prevShowIfCollapsed, lineHeight, visibleStartLineNumber, output);\n            }\n            prevClassName = className;\n            prevShowIfCollapsed = showIfCollapsed;\n            prevRange = range;\n            prevShouldFillLineOnLineBreak = (_a = d.options.shouldFillLineOnLineBreak) !== null && _a !== void 0 ? _a : false;\n        }\n        if (prevClassName !== null) {\n            this._renderNormalDecoration(ctx, prevRange, prevClassName, prevShouldFillLineOnLineBreak, prevShowIfCollapsed, lineHeight, visibleStartLineNumber, output);\n        }\n    }\n    _renderNormalDecoration(ctx, range, className, shouldFillLineOnLineBreak, showIfCollapsed, lineHeight, visibleStartLineNumber, output) {\n        const linesVisibleRanges = ctx.linesVisibleRangesForRange(range, /*TODO@Alex*/ className === 'findMatch');\n        if (!linesVisibleRanges) {\n            return;\n        }\n        for (let j = 0, lenJ = linesVisibleRanges.length; j < lenJ; j++) {\n            const lineVisibleRanges = linesVisibleRanges[j];\n            if (lineVisibleRanges.outsideRenderedLine) {\n                continue;\n            }\n            const lineIndex = lineVisibleRanges.lineNumber - visibleStartLineNumber;\n            if (showIfCollapsed && lineVisibleRanges.ranges.length === 1) {\n                const singleVisibleRange = lineVisibleRanges.ranges[0];\n                if (singleVisibleRange.width < this._typicalHalfwidthCharacterWidth) {\n                    // collapsed/very small range case => make the decoration visible by expanding its width\n                    // expand its size on both sides (both to the left and to the right, keeping it centered)\n                    const center = Math.round(singleVisibleRange.left + singleVisibleRange.width / 2);\n                    const left = Math.max(0, Math.round(center - this._typicalHalfwidthCharacterWidth / 2));\n                    lineVisibleRanges.ranges[0] = new HorizontalRange(left, this._typicalHalfwidthCharacterWidth);\n                }\n            }\n            for (let k = 0, lenK = lineVisibleRanges.ranges.length; k < lenK; k++) {\n                const expandToLeft = shouldFillLineOnLineBreak && lineVisibleRanges.continuesOnNextLine && lenK === 1;\n                const visibleRange = lineVisibleRanges.ranges[k];\n                const decorationOutput = ('<div class=\"cdr '\n                    + className\n                    + '\" style=\"left:'\n                    + String(visibleRange.left)\n                    + (expandToLeft ?\n                        'px;width:100%;height:' :\n                        ('px;width:' + String(visibleRange.width) + 'px;height:'))\n                    + lineHeight\n                    + 'px;\"></div>');\n                output[lineIndex] += decorationOutput;\n            }\n        }\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { SmoothScrollableElement } from '../../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { getThemeTypeSelector } from '../../../../platform/theme/common/themeService.js';\nexport class EditorScrollbar extends ViewPart {\n    constructor(context, linesContent, viewDomNode, overflowGuardDomNode) {\n        super(context);\n        const options = this._context.configuration.options;\n        const scrollbar = options.get(102 /* EditorOption.scrollbar */);\n        const mouseWheelScrollSensitivity = options.get(74 /* EditorOption.mouseWheelScrollSensitivity */);\n        const fastScrollSensitivity = options.get(40 /* EditorOption.fastScrollSensitivity */);\n        const scrollPredominantAxis = options.get(105 /* EditorOption.scrollPredominantAxis */);\n        const scrollbarOptions = {\n            listenOnDomNode: viewDomNode.domNode,\n            className: 'editor-scrollable' + ' ' + getThemeTypeSelector(context.theme.type),\n            useShadows: false,\n            lazyRender: true,\n            vertical: scrollbar.vertical,\n            horizontal: scrollbar.horizontal,\n            verticalHasArrows: scrollbar.verticalHasArrows,\n            horizontalHasArrows: scrollbar.horizontalHasArrows,\n            verticalScrollbarSize: scrollbar.verticalScrollbarSize,\n            verticalSliderSize: scrollbar.verticalSliderSize,\n            horizontalScrollbarSize: scrollbar.horizontalScrollbarSize,\n            horizontalSliderSize: scrollbar.horizontalSliderSize,\n            handleMouseWheel: scrollbar.handleMouseWheel,\n            alwaysConsumeMouseWheel: scrollbar.alwaysConsumeMouseWheel,\n            arrowSize: scrollbar.arrowSize,\n            mouseWheelScrollSensitivity: mouseWheelScrollSensitivity,\n            fastScrollSensitivity: fastScrollSensitivity,\n            scrollPredominantAxis: scrollPredominantAxis,\n            scrollByPage: scrollbar.scrollByPage,\n        };\n        this.scrollbar = this._register(new SmoothScrollableElement(linesContent.domNode, scrollbarOptions, this._context.viewLayout.getScrollable()));\n        PartFingerprints.write(this.scrollbar.getDomNode(), 5 /* PartFingerprint.ScrollableElement */);\n        this.scrollbarDomNode = createFastDomNode(this.scrollbar.getDomNode());\n        this.scrollbarDomNode.setPosition('absolute');\n        this._setLayout();\n        // When having a zone widget that calls .focus() on one of its dom elements,\n        // the browser will try desperately to reveal that dom node, unexpectedly\n        // changing the .scrollTop of this.linesContent\n        const onBrowserDesperateReveal = (domNode, lookAtScrollTop, lookAtScrollLeft) => {\n            const newScrollPosition = {};\n            if (lookAtScrollTop) {\n                const deltaTop = domNode.scrollTop;\n                if (deltaTop) {\n                    newScrollPosition.scrollTop = this._context.viewLayout.getCurrentScrollTop() + deltaTop;\n                    domNode.scrollTop = 0;\n                }\n            }\n            if (lookAtScrollLeft) {\n                const deltaLeft = domNode.scrollLeft;\n                if (deltaLeft) {\n                    newScrollPosition.scrollLeft = this._context.viewLayout.getCurrentScrollLeft() + deltaLeft;\n                    domNode.scrollLeft = 0;\n                }\n            }\n            this._context.viewModel.viewLayout.setScrollPosition(newScrollPosition, 1 /* ScrollType.Immediate */);\n        };\n        // I've seen this happen both on the view dom node & on the lines content dom node.\n        this._register(dom.addDisposableListener(viewDomNode.domNode, 'scroll', (e) => onBrowserDesperateReveal(viewDomNode.domNode, true, true)));\n        this._register(dom.addDisposableListener(linesContent.domNode, 'scroll', (e) => onBrowserDesperateReveal(linesContent.domNode, true, false)));\n        this._register(dom.addDisposableListener(overflowGuardDomNode.domNode, 'scroll', (e) => onBrowserDesperateReveal(overflowGuardDomNode.domNode, true, false)));\n        this._register(dom.addDisposableListener(this.scrollbarDomNode.domNode, 'scroll', (e) => onBrowserDesperateReveal(this.scrollbarDomNode.domNode, true, false)));\n    }\n    dispose() {\n        super.dispose();\n    }\n    _setLayout() {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this.scrollbarDomNode.setLeft(layoutInfo.contentLeft);\n        const minimap = options.get(72 /* EditorOption.minimap */);\n        const side = minimap.side;\n        if (side === 'right') {\n            this.scrollbarDomNode.setWidth(layoutInfo.contentWidth + layoutInfo.minimap.minimapWidth);\n        }\n        else {\n            this.scrollbarDomNode.setWidth(layoutInfo.contentWidth);\n        }\n        this.scrollbarDomNode.setHeight(layoutInfo.height);\n    }\n    getOverviewRulerLayoutInfo() {\n        return this.scrollbar.getOverviewRulerLayoutInfo();\n    }\n    getDomNode() {\n        return this.scrollbarDomNode;\n    }\n    delegateVerticalScrollbarPointerDown(browserEvent) {\n        this.scrollbar.delegateVerticalScrollbarPointerDown(browserEvent);\n    }\n    delegateScrollFromMouseWheelEvent(browserEvent) {\n        this.scrollbar.delegateScrollFromMouseWheelEvent(browserEvent);\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        if (e.hasChanged(102 /* EditorOption.scrollbar */)\n            || e.hasChanged(74 /* EditorOption.mouseWheelScrollSensitivity */)\n            || e.hasChanged(40 /* EditorOption.fastScrollSensitivity */)) {\n            const options = this._context.configuration.options;\n            const scrollbar = options.get(102 /* EditorOption.scrollbar */);\n            const mouseWheelScrollSensitivity = options.get(74 /* EditorOption.mouseWheelScrollSensitivity */);\n            const fastScrollSensitivity = options.get(40 /* EditorOption.fastScrollSensitivity */);\n            const scrollPredominantAxis = options.get(105 /* EditorOption.scrollPredominantAxis */);\n            const newOpts = {\n                vertical: scrollbar.vertical,\n                horizontal: scrollbar.horizontal,\n                verticalScrollbarSize: scrollbar.verticalScrollbarSize,\n                horizontalScrollbarSize: scrollbar.horizontalScrollbarSize,\n                scrollByPage: scrollbar.scrollByPage,\n                handleMouseWheel: scrollbar.handleMouseWheel,\n                mouseWheelScrollSensitivity: mouseWheelScrollSensitivity,\n                fastScrollSensitivity: fastScrollSensitivity,\n                scrollPredominantAxis: scrollPredominantAxis\n            };\n            this.scrollbar.updateOptions(newOpts);\n        }\n        if (e.hasChanged(143 /* EditorOption.layoutInfo */)) {\n            this._setLayout();\n        }\n        return true;\n    }\n    onScrollChanged(e) {\n        return true;\n    }\n    onThemeChanged(e) {\n        this.scrollbar.updateClassName('editor-scrollable' + ' ' + getThemeTypeSelector(this._context.theme.type));\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to do\n    }\n    render(ctx) {\n        this.scrollbar.renderNow();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './indentGuides.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorBracketHighlightingForeground1, editorBracketHighlightingForeground2, editorBracketHighlightingForeground3, editorBracketHighlightingForeground4, editorBracketHighlightingForeground5, editorBracketHighlightingForeground6, editorBracketPairGuideActiveBackground1, editorBracketPairGuideActiveBackground2, editorBracketPairGuideActiveBackground3, editorBracketPairGuideActiveBackground4, editorBracketPairGuideActiveBackground5, editorBracketPairGuideActiveBackground6, editorBracketPairGuideBackground1, editorBracketPairGuideBackground2, editorBracketPairGuideBackground3, editorBracketPairGuideBackground4, editorBracketPairGuideBackground5, editorBracketPairGuideBackground6, editorIndentGuide1, editorIndentGuide2, editorIndentGuide3, editorIndentGuide4, editorIndentGuide5, editorIndentGuide6, editorActiveIndentGuide1, editorActiveIndentGuide2, editorActiveIndentGuide3, editorActiveIndentGuide4, editorActiveIndentGuide5, editorActiveIndentGuide6 } from '../../../common/core/editorColorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ArrayQueue } from '../../../../base/common/arrays.js';\nimport { isDefined } from '../../../../base/common/types.js';\nimport { BracketPairGuidesClassNames } from '../../../common/model/guidesTextModelPart.js';\nimport { IndentGuide, HorizontalGuidesState } from '../../../common/textModelGuides.js';\nexport class IndentGuidesOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._primaryPosition = null;\n        const options = this._context.configuration.options;\n        const wrappingInfo = options.get(144 /* EditorOption.wrappingInfo */);\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._spaceWidth = fontInfo.spaceWidth;\n        this._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : (wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n        this._bracketPairGuideOptions = options.get(16 /* EditorOption.guides */);\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const wrappingInfo = options.get(144 /* EditorOption.wrappingInfo */);\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._spaceWidth = fontInfo.spaceWidth;\n        this._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : (wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n        this._bracketPairGuideOptions = options.get(16 /* EditorOption.guides */);\n        return true;\n    }\n    onCursorStateChanged(e) {\n        var _a;\n        const selection = e.selections[0];\n        const newPosition = selection.getPosition();\n        if (!((_a = this._primaryPosition) === null || _a === void 0 ? void 0 : _a.equals(newPosition))) {\n            this._primaryPosition = newPosition;\n            return true;\n        }\n        return false;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged; // || e.scrollWidthChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    onLanguageConfigurationChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        var _a, _b, _c, _d;\n        if (!this._bracketPairGuideOptions.indentation && this._bracketPairGuideOptions.bracketPairs === false) {\n            this._renderResult = null;\n            return;\n        }\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const scrollWidth = ctx.scrollWidth;\n        const lineHeight = this._lineHeight;\n        const activeCursorPosition = this._primaryPosition;\n        const indents = this.getGuidesByLine(visibleStartLineNumber, Math.min(visibleEndLineNumber + 1, this._context.viewModel.getLineCount()), activeCursorPosition);\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const indent = indents[lineIndex];\n            let result = '';\n            const leftOffset = (_b = (_a = ctx.visibleRangeForPosition(new Position(lineNumber, 1))) === null || _a === void 0 ? void 0 : _a.left) !== null && _b !== void 0 ? _b : 0;\n            for (const guide of indent) {\n                const left = guide.column === -1\n                    ? leftOffset + (guide.visibleColumn - 1) * this._spaceWidth\n                    : ctx.visibleRangeForPosition(new Position(lineNumber, guide.column)).left;\n                if (left > scrollWidth || (this._maxIndentLeft > 0 && left > this._maxIndentLeft)) {\n                    break;\n                }\n                const className = guide.horizontalLine ? (guide.horizontalLine.top ? 'horizontal-top' : 'horizontal-bottom') : 'vertical';\n                const width = guide.horizontalLine\n                    ? ((_d = (_c = ctx.visibleRangeForPosition(new Position(lineNumber, guide.horizontalLine.endColumn))) === null || _c === void 0 ? void 0 : _c.left) !== null && _d !== void 0 ? _d : (left + this._spaceWidth)) - left\n                    : this._spaceWidth;\n                result += `<div class=\"core-guide ${guide.className} ${className}\" style=\"left:${left}px;height:${lineHeight}px;width:${width}px\"></div>`;\n            }\n            output[lineIndex] = result;\n        }\n        this._renderResult = output;\n    }\n    getGuidesByLine(visibleStartLineNumber, visibleEndLineNumber, activeCursorPosition) {\n        const bracketGuides = this._bracketPairGuideOptions.bracketPairs !== false\n            ? this._context.viewModel.getBracketGuidesInRangeByLine(visibleStartLineNumber, visibleEndLineNumber, activeCursorPosition, {\n                highlightActive: this._bracketPairGuideOptions.highlightActiveBracketPair,\n                horizontalGuides: this._bracketPairGuideOptions.bracketPairsHorizontal === true\n                    ? HorizontalGuidesState.Enabled\n                    : this._bracketPairGuideOptions.bracketPairsHorizontal === 'active'\n                        ? HorizontalGuidesState.EnabledForActive\n                        : HorizontalGuidesState.Disabled,\n                includeInactive: this._bracketPairGuideOptions.bracketPairs === true,\n            })\n            : null;\n        const indentGuides = this._bracketPairGuideOptions.indentation\n            ? this._context.viewModel.getLinesIndentGuides(visibleStartLineNumber, visibleEndLineNumber)\n            : null;\n        let activeIndentStartLineNumber = 0;\n        let activeIndentEndLineNumber = 0;\n        let activeIndentLevel = 0;\n        if (this._bracketPairGuideOptions.highlightActiveIndentation !== false && activeCursorPosition) {\n            const activeIndentInfo = this._context.viewModel.getActiveIndentGuide(activeCursorPosition.lineNumber, visibleStartLineNumber, visibleEndLineNumber);\n            activeIndentStartLineNumber = activeIndentInfo.startLineNumber;\n            activeIndentEndLineNumber = activeIndentInfo.endLineNumber;\n            activeIndentLevel = activeIndentInfo.indent;\n        }\n        const { indentSize } = this._context.viewModel.model.getOptions();\n        const result = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineGuides = new Array();\n            result.push(lineGuides);\n            const bracketGuidesInLine = bracketGuides ? bracketGuides[lineNumber - visibleStartLineNumber] : [];\n            const bracketGuidesInLineQueue = new ArrayQueue(bracketGuidesInLine);\n            const indentGuidesInLine = indentGuides ? indentGuides[lineNumber - visibleStartLineNumber] : 0;\n            for (let indentLvl = 1; indentLvl <= indentGuidesInLine; indentLvl++) {\n                const indentGuide = (indentLvl - 1) * indentSize + 1;\n                const isActive = \n                // Disable active indent guide if there are bracket guides.\n                (this._bracketPairGuideOptions.highlightActiveIndentation === 'always' || bracketGuidesInLine.length === 0) &&\n                    activeIndentStartLineNumber <= lineNumber &&\n                    lineNumber <= activeIndentEndLineNumber &&\n                    indentLvl === activeIndentLevel;\n                lineGuides.push(...bracketGuidesInLineQueue.takeWhile(g => g.visibleColumn < indentGuide) || []);\n                const peeked = bracketGuidesInLineQueue.peek();\n                if (!peeked || peeked.visibleColumn !== indentGuide || peeked.horizontalLine) {\n                    lineGuides.push(new IndentGuide(indentGuide, -1, `core-guide-indent lvl-${(indentLvl - 1) % 30}` + (isActive ? ' indent-active' : ''), null, -1, -1));\n                }\n            }\n            lineGuides.push(...bracketGuidesInLineQueue.takeWhile(g => true) || []);\n        }\n        return result;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\nfunction transparentToUndefined(color) {\n    if (color && color.isTransparent()) {\n        return undefined;\n    }\n    return color;\n}\nregisterThemingParticipant((theme, collector) => {\n    const colors = [\n        { bracketColor: editorBracketHighlightingForeground1, guideColor: editorBracketPairGuideBackground1, guideColorActive: editorBracketPairGuideActiveBackground1 },\n        { bracketColor: editorBracketHighlightingForeground2, guideColor: editorBracketPairGuideBackground2, guideColorActive: editorBracketPairGuideActiveBackground2 },\n        { bracketColor: editorBracketHighlightingForeground3, guideColor: editorBracketPairGuideBackground3, guideColorActive: editorBracketPairGuideActiveBackground3 },\n        { bracketColor: editorBracketHighlightingForeground4, guideColor: editorBracketPairGuideBackground4, guideColorActive: editorBracketPairGuideActiveBackground4 },\n        { bracketColor: editorBracketHighlightingForeground5, guideColor: editorBracketPairGuideBackground5, guideColorActive: editorBracketPairGuideActiveBackground5 },\n        { bracketColor: editorBracketHighlightingForeground6, guideColor: editorBracketPairGuideBackground6, guideColorActive: editorBracketPairGuideActiveBackground6 }\n    ];\n    const colorProvider = new BracketPairGuidesClassNames();\n    const indentColors = [\n        { indentColor: editorIndentGuide1, indentColorActive: editorActiveIndentGuide1 },\n        { indentColor: editorIndentGuide2, indentColorActive: editorActiveIndentGuide2 },\n        { indentColor: editorIndentGuide3, indentColorActive: editorActiveIndentGuide3 },\n        { indentColor: editorIndentGuide4, indentColorActive: editorActiveIndentGuide4 },\n        { indentColor: editorIndentGuide5, indentColorActive: editorActiveIndentGuide5 },\n        { indentColor: editorIndentGuide6, indentColorActive: editorActiveIndentGuide6 },\n    ];\n    const colorValues = colors\n        .map(c => {\n        var _a, _b;\n        const bracketColor = theme.getColor(c.bracketColor);\n        const guideColor = theme.getColor(c.guideColor);\n        const guideColorActive = theme.getColor(c.guideColorActive);\n        const effectiveGuideColor = transparentToUndefined((_a = transparentToUndefined(guideColor)) !== null && _a !== void 0 ? _a : bracketColor === null || bracketColor === void 0 ? void 0 : bracketColor.transparent(0.3));\n        const effectiveGuideColorActive = transparentToUndefined((_b = transparentToUndefined(guideColorActive)) !== null && _b !== void 0 ? _b : bracketColor);\n        if (!effectiveGuideColor || !effectiveGuideColorActive) {\n            return undefined;\n        }\n        return {\n            guideColor: effectiveGuideColor,\n            guideColorActive: effectiveGuideColorActive,\n        };\n    })\n        .filter(isDefined);\n    const indentColorValues = indentColors\n        .map(c => {\n        const indentColor = theme.getColor(c.indentColor);\n        const indentColorActive = theme.getColor(c.indentColorActive);\n        const effectiveIndentColor = transparentToUndefined(indentColor);\n        const effectiveIndentColorActive = transparentToUndefined(indentColorActive);\n        if (!effectiveIndentColor || !effectiveIndentColorActive) {\n            return undefined;\n        }\n        return {\n            indentColor: effectiveIndentColor,\n            indentColorActive: effectiveIndentColorActive,\n        };\n    })\n        .filter(isDefined);\n    if (colorValues.length > 0) {\n        for (let level = 0; level < 30; level++) {\n            const colors = colorValues[level % colorValues.length];\n            collector.addRule(`.monaco-editor .${colorProvider.getInlineClassNameOfLevel(level).replace(/ /g, '.')} { --guide-color: ${colors.guideColor}; --guide-color-active: ${colors.guideColorActive}; }`);\n        }\n        collector.addRule(`.monaco-editor .vertical { box-shadow: 1px 0 0 0 var(--guide-color) inset; }`);\n        collector.addRule(`.monaco-editor .horizontal-top { border-top: 1px solid var(--guide-color); }`);\n        collector.addRule(`.monaco-editor .horizontal-bottom { border-bottom: 1px solid var(--guide-color); }`);\n        collector.addRule(`.monaco-editor .vertical.${colorProvider.activeClassName} { box-shadow: 1px 0 0 0 var(--guide-color-active) inset; }`);\n        collector.addRule(`.monaco-editor .horizontal-top.${colorProvider.activeClassName} { border-top: 1px solid var(--guide-color-active); }`);\n        collector.addRule(`.monaco-editor .horizontal-bottom.${colorProvider.activeClassName} { border-bottom: 1px solid var(--guide-color-active); }`);\n    }\n    if (indentColorValues.length > 0) {\n        for (let level = 0; level < 30; level++) {\n            const colors = indentColorValues[level % indentColorValues.length];\n            collector.addRule(`.monaco-editor .lines-content .core-guide-indent.lvl-${level} { --indent-color: ${colors.indentColor}; --indent-color-active: ${colors.indentColorActive}; }`);\n        }\n        collector.addRule(`.monaco-editor .lines-content .core-guide-indent { box-shadow: 1px 0 0 0 var(--indent-color) inset; }`);\n        collector.addRule(`.monaco-editor .lines-content .core-guide-indent.indent-active { box-shadow: 1px 0 0 0 var(--indent-color-active) inset; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class DomReadingContext {\n    get didDomLayout() {\n        return this._didDomLayout;\n    }\n    readClientRect() {\n        if (!this._clientRectRead) {\n            this._clientRectRead = true;\n            const rect = this._domNode.getBoundingClientRect();\n            this.markDidDomLayout();\n            this._clientRectDeltaLeft = rect.left;\n            this._clientRectScale = rect.width / this._domNode.offsetWidth;\n        }\n    }\n    get clientRectDeltaLeft() {\n        if (!this._clientRectRead) {\n            this.readClientRect();\n        }\n        return this._clientRectDeltaLeft;\n    }\n    get clientRectScale() {\n        if (!this._clientRectRead) {\n            this.readClientRect();\n        }\n        return this._clientRectScale;\n    }\n    constructor(_domNode, endNode) {\n        this._domNode = _domNode;\n        this.endNode = endNode;\n        this._didDomLayout = false;\n        this._clientRectDeltaLeft = 0;\n        this._clientRectScale = 1;\n        this._clientRectRead = false;\n    }\n    markDidDomLayout() {\n        this._didDomLayout = true;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../../base/browser/ui/mouseCursor/mouseCursor.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport './viewLines.css';\nimport { applyFontInfo } from '../../config/domFontInfo.js';\nimport { HorizontalPosition, HorizontalRange, LineVisibleRanges } from '../../view/renderingContext.js';\nimport { VisibleLinesCollection } from '../../view/viewLayer.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { DomReadingContext } from './domReadingContext.js';\nimport { ViewLine, ViewLineOptions } from './viewLine.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nclass LastRenderedData {\n    constructor() {\n        this._currentVisibleRange = new Range(1, 1, 1, 1);\n    }\n    getCurrentVisibleRange() {\n        return this._currentVisibleRange;\n    }\n    setCurrentVisibleRange(currentVisibleRange) {\n        this._currentVisibleRange = currentVisibleRange;\n    }\n}\nclass HorizontalRevealRangeRequest {\n    constructor(minimalReveal, lineNumber, startColumn, endColumn, startScrollTop, stopScrollTop, scrollType) {\n        this.minimalReveal = minimalReveal;\n        this.lineNumber = lineNumber;\n        this.startColumn = startColumn;\n        this.endColumn = endColumn;\n        this.startScrollTop = startScrollTop;\n        this.stopScrollTop = stopScrollTop;\n        this.scrollType = scrollType;\n        this.type = 'range';\n        this.minLineNumber = lineNumber;\n        this.maxLineNumber = lineNumber;\n    }\n}\nclass HorizontalRevealSelectionsRequest {\n    constructor(minimalReveal, selections, startScrollTop, stopScrollTop, scrollType) {\n        this.minimalReveal = minimalReveal;\n        this.selections = selections;\n        this.startScrollTop = startScrollTop;\n        this.stopScrollTop = stopScrollTop;\n        this.scrollType = scrollType;\n        this.type = 'selections';\n        let minLineNumber = selections[0].startLineNumber;\n        let maxLineNumber = selections[0].endLineNumber;\n        for (let i = 1, len = selections.length; i < len; i++) {\n            const selection = selections[i];\n            minLineNumber = Math.min(minLineNumber, selection.startLineNumber);\n            maxLineNumber = Math.max(maxLineNumber, selection.endLineNumber);\n        }\n        this.minLineNumber = minLineNumber;\n        this.maxLineNumber = maxLineNumber;\n    }\n}\nexport class ViewLines extends ViewPart {\n    constructor(context, linesContent) {\n        super(context);\n        this._linesContent = linesContent;\n        this._textRangeRestingSpot = document.createElement('div');\n        this._visibleLines = new VisibleLinesCollection(this);\n        this.domNode = this._visibleLines.domNode;\n        const conf = this._context.configuration;\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        const wrappingInfo = options.get(144 /* EditorOption.wrappingInfo */);\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this._isViewportWrapping = wrappingInfo.isViewportWrapping;\n        this._revealHorizontalRightPadding = options.get(99 /* EditorOption.revealHorizontalRightPadding */);\n        this._cursorSurroundingLines = options.get(29 /* EditorOption.cursorSurroundingLines */);\n        this._cursorSurroundingLinesStyle = options.get(30 /* EditorOption.cursorSurroundingLinesStyle */);\n        this._canUseLayerHinting = !options.get(32 /* EditorOption.disableLayerHinting */);\n        this._viewLineOptions = new ViewLineOptions(conf, this._context.theme.type);\n        PartFingerprints.write(this.domNode, 7 /* PartFingerprint.ViewLines */);\n        this.domNode.setClassName(`view-lines ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n        applyFontInfo(this.domNode, fontInfo);\n        // --- width & height\n        this._maxLineWidth = 0;\n        this._asyncUpdateLineWidths = new RunOnceScheduler(() => {\n            this._updateLineWidthsSlow();\n        }, 200);\n        this._asyncCheckMonospaceFontAssumptions = new RunOnceScheduler(() => {\n            this._checkMonospaceFontAssumptions();\n        }, 2000);\n        this._lastRenderedData = new LastRenderedData();\n        this._horizontalRevealRequest = null;\n        // sticky scroll widget\n        this._stickyScrollEnabled = options.get(114 /* EditorOption.stickyScroll */).enabled;\n        this._maxNumberStickyLines = options.get(114 /* EditorOption.stickyScroll */).maxLineCount;\n    }\n    dispose() {\n        this._asyncUpdateLineWidths.dispose();\n        this._asyncCheckMonospaceFontAssumptions.dispose();\n        super.dispose();\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    // ---- begin IVisibleLinesHost\n    createVisibleLine() {\n        return new ViewLine(this._viewLineOptions);\n    }\n    // ---- end IVisibleLinesHost\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        this._visibleLines.onConfigurationChanged(e);\n        if (e.hasChanged(144 /* EditorOption.wrappingInfo */)) {\n            this._maxLineWidth = 0;\n        }\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        const wrappingInfo = options.get(144 /* EditorOption.wrappingInfo */);\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this._isViewportWrapping = wrappingInfo.isViewportWrapping;\n        this._revealHorizontalRightPadding = options.get(99 /* EditorOption.revealHorizontalRightPadding */);\n        this._cursorSurroundingLines = options.get(29 /* EditorOption.cursorSurroundingLines */);\n        this._cursorSurroundingLinesStyle = options.get(30 /* EditorOption.cursorSurroundingLinesStyle */);\n        this._canUseLayerHinting = !options.get(32 /* EditorOption.disableLayerHinting */);\n        // sticky scroll\n        this._stickyScrollEnabled = options.get(114 /* EditorOption.stickyScroll */).enabled;\n        this._maxNumberStickyLines = options.get(114 /* EditorOption.stickyScroll */).maxLineCount;\n        applyFontInfo(this.domNode, fontInfo);\n        this._onOptionsMaybeChanged();\n        if (e.hasChanged(143 /* EditorOption.layoutInfo */)) {\n            this._maxLineWidth = 0;\n        }\n        return true;\n    }\n    _onOptionsMaybeChanged() {\n        const conf = this._context.configuration;\n        const newViewLineOptions = new ViewLineOptions(conf, this._context.theme.type);\n        if (!this._viewLineOptions.equals(newViewLineOptions)) {\n            this._viewLineOptions = newViewLineOptions;\n            const startLineNumber = this._visibleLines.getStartLineNumber();\n            const endLineNumber = this._visibleLines.getEndLineNumber();\n            for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n                const line = this._visibleLines.getVisibleLine(lineNumber);\n                line.onOptionsChanged(this._viewLineOptions);\n            }\n            return true;\n        }\n        return false;\n    }\n    onCursorStateChanged(e) {\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        let r = false;\n        for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n            r = this._visibleLines.getVisibleLine(lineNumber).onSelectionChanged() || r;\n        }\n        return r;\n    }\n    onDecorationsChanged(e) {\n        if (true /*e.inlineDecorationsChanged*/) {\n            const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n            const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n            for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n                this._visibleLines.getVisibleLine(lineNumber).onDecorationsChanged();\n            }\n        }\n        return true;\n    }\n    onFlushed(e) {\n        const shouldRender = this._visibleLines.onFlushed(e);\n        this._maxLineWidth = 0;\n        return shouldRender;\n    }\n    onLinesChanged(e) {\n        return this._visibleLines.onLinesChanged(e);\n    }\n    onLinesDeleted(e) {\n        return this._visibleLines.onLinesDeleted(e);\n    }\n    onLinesInserted(e) {\n        return this._visibleLines.onLinesInserted(e);\n    }\n    onRevealRangeRequest(e) {\n        // Using the future viewport here in order to handle multiple\n        // incoming reveal range requests that might all desire to be animated\n        const desiredScrollTop = this._computeScrollTopToRevealRange(this._context.viewLayout.getFutureViewport(), e.source, e.minimalReveal, e.range, e.selections, e.verticalType);\n        if (desiredScrollTop === -1) {\n            // marker to abort the reveal range request\n            return false;\n        }\n        // validate the new desired scroll top\n        let newScrollPosition = this._context.viewLayout.validateScrollPosition({ scrollTop: desiredScrollTop });\n        if (e.revealHorizontal) {\n            if (e.range && e.range.startLineNumber !== e.range.endLineNumber) {\n                // Two or more lines? => scroll to base (That's how you see most of the two lines)\n                newScrollPosition = {\n                    scrollTop: newScrollPosition.scrollTop,\n                    scrollLeft: 0\n                };\n            }\n            else if (e.range) {\n                // We don't necessarily know the horizontal offset of this range since the line might not be in the view...\n                this._horizontalRevealRequest = new HorizontalRevealRangeRequest(e.minimalReveal, e.range.startLineNumber, e.range.startColumn, e.range.endColumn, this._context.viewLayout.getCurrentScrollTop(), newScrollPosition.scrollTop, e.scrollType);\n            }\n            else if (e.selections && e.selections.length > 0) {\n                this._horizontalRevealRequest = new HorizontalRevealSelectionsRequest(e.minimalReveal, e.selections, this._context.viewLayout.getCurrentScrollTop(), newScrollPosition.scrollTop, e.scrollType);\n            }\n        }\n        else {\n            this._horizontalRevealRequest = null;\n        }\n        const scrollTopDelta = Math.abs(this._context.viewLayout.getCurrentScrollTop() - newScrollPosition.scrollTop);\n        const scrollType = (scrollTopDelta <= this._lineHeight ? 1 /* ScrollType.Immediate */ : e.scrollType);\n        this._context.viewModel.viewLayout.setScrollPosition(newScrollPosition, scrollType);\n        return true;\n    }\n    onScrollChanged(e) {\n        if (this._horizontalRevealRequest && e.scrollLeftChanged) {\n            // cancel any outstanding horizontal reveal request if someone else scrolls horizontally.\n            this._horizontalRevealRequest = null;\n        }\n        if (this._horizontalRevealRequest && e.scrollTopChanged) {\n            const min = Math.min(this._horizontalRevealRequest.startScrollTop, this._horizontalRevealRequest.stopScrollTop);\n            const max = Math.max(this._horizontalRevealRequest.startScrollTop, this._horizontalRevealRequest.stopScrollTop);\n            if (e.scrollTop < min || e.scrollTop > max) {\n                // cancel any outstanding horizontal reveal request if someone else scrolls vertically.\n                this._horizontalRevealRequest = null;\n            }\n        }\n        this.domNode.setWidth(e.scrollWidth);\n        return this._visibleLines.onScrollChanged(e) || true;\n    }\n    onTokensChanged(e) {\n        return this._visibleLines.onTokensChanged(e);\n    }\n    onZonesChanged(e) {\n        this._context.viewModel.viewLayout.setMaxLineWidth(this._maxLineWidth);\n        return this._visibleLines.onZonesChanged(e);\n    }\n    onThemeChanged(e) {\n        return this._onOptionsMaybeChanged();\n    }\n    // ---- end view event handlers\n    // ----------- HELPERS FOR OTHERS\n    getPositionFromDOMInfo(spanNode, offset) {\n        const viewLineDomNode = this._getViewLineDomNode(spanNode);\n        if (viewLineDomNode === null) {\n            // Couldn't find view line node\n            return null;\n        }\n        const lineNumber = this._getLineNumberFor(viewLineDomNode);\n        if (lineNumber === -1) {\n            // Couldn't find view line node\n            return null;\n        }\n        if (lineNumber < 1 || lineNumber > this._context.viewModel.getLineCount()) {\n            // lineNumber is outside range\n            return null;\n        }\n        if (this._context.viewModel.getLineMaxColumn(lineNumber) === 1) {\n            // Line is empty\n            return new Position(lineNumber, 1);\n        }\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        if (lineNumber < rendStartLineNumber || lineNumber > rendEndLineNumber) {\n            // Couldn't find line\n            return null;\n        }\n        let column = this._visibleLines.getVisibleLine(lineNumber).getColumnOfNodeOffset(spanNode, offset);\n        const minColumn = this._context.viewModel.getLineMinColumn(lineNumber);\n        if (column < minColumn) {\n            column = minColumn;\n        }\n        return new Position(lineNumber, column);\n    }\n    _getViewLineDomNode(node) {\n        while (node && node.nodeType === 1) {\n            if (node.className === ViewLine.CLASS_NAME) {\n                return node;\n            }\n            node = node.parentElement;\n        }\n        return null;\n    }\n    /**\n     * @returns the line number of this view line dom node.\n     */\n    _getLineNumberFor(domNode) {\n        const startLineNumber = this._visibleLines.getStartLineNumber();\n        const endLineNumber = this._visibleLines.getEndLineNumber();\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const line = this._visibleLines.getVisibleLine(lineNumber);\n            if (domNode === line.getDomNode()) {\n                return lineNumber;\n            }\n        }\n        return -1;\n    }\n    getLineWidth(lineNumber) {\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        if (lineNumber < rendStartLineNumber || lineNumber > rendEndLineNumber) {\n            // Couldn't find line\n            return -1;\n        }\n        const context = new DomReadingContext(this.domNode.domNode, this._textRangeRestingSpot);\n        const result = this._visibleLines.getVisibleLine(lineNumber).getWidth(context);\n        this._updateLineWidthsSlowIfDomDidLayout(context);\n        return result;\n    }\n    linesVisibleRangesForRange(_range, includeNewLines) {\n        if (this.shouldRender()) {\n            // Cannot read from the DOM because it is dirty\n            // i.e. the model & the dom are out of sync, so I'd be reading something stale\n            return null;\n        }\n        const originalEndLineNumber = _range.endLineNumber;\n        const range = Range.intersectRanges(_range, this._lastRenderedData.getCurrentVisibleRange());\n        if (!range) {\n            return null;\n        }\n        const visibleRanges = [];\n        let visibleRangesLen = 0;\n        const domReadingContext = new DomReadingContext(this.domNode.domNode, this._textRangeRestingSpot);\n        let nextLineModelLineNumber = 0;\n        if (includeNewLines) {\n            nextLineModelLineNumber = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(range.startLineNumber, 1)).lineNumber;\n        }\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        for (let lineNumber = range.startLineNumber; lineNumber <= range.endLineNumber; lineNumber++) {\n            if (lineNumber < rendStartLineNumber || lineNumber > rendEndLineNumber) {\n                continue;\n            }\n            const startColumn = lineNumber === range.startLineNumber ? range.startColumn : 1;\n            const continuesInNextLine = lineNumber !== range.endLineNumber;\n            const endColumn = continuesInNextLine ? this._context.viewModel.getLineMaxColumn(lineNumber) : range.endColumn;\n            const visibleRangesForLine = this._visibleLines.getVisibleLine(lineNumber).getVisibleRangesForRange(lineNumber, startColumn, endColumn, domReadingContext);\n            if (!visibleRangesForLine) {\n                continue;\n            }\n            if (includeNewLines && lineNumber < originalEndLineNumber) {\n                const currentLineModelLineNumber = nextLineModelLineNumber;\n                nextLineModelLineNumber = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(lineNumber + 1, 1)).lineNumber;\n                if (currentLineModelLineNumber !== nextLineModelLineNumber) {\n                    visibleRangesForLine.ranges[visibleRangesForLine.ranges.length - 1].width += this._typicalHalfwidthCharacterWidth;\n                }\n            }\n            visibleRanges[visibleRangesLen++] = new LineVisibleRanges(visibleRangesForLine.outsideRenderedLine, lineNumber, HorizontalRange.from(visibleRangesForLine.ranges), continuesInNextLine);\n        }\n        this._updateLineWidthsSlowIfDomDidLayout(domReadingContext);\n        if (visibleRangesLen === 0) {\n            return null;\n        }\n        return visibleRanges;\n    }\n    _visibleRangesForLineRange(lineNumber, startColumn, endColumn) {\n        if (this.shouldRender()) {\n            // Cannot read from the DOM because it is dirty\n            // i.e. the model & the dom are out of sync, so I'd be reading something stale\n            return null;\n        }\n        if (lineNumber < this._visibleLines.getStartLineNumber() || lineNumber > this._visibleLines.getEndLineNumber()) {\n            return null;\n        }\n        const domReadingContext = new DomReadingContext(this.domNode.domNode, this._textRangeRestingSpot);\n        const result = this._visibleLines.getVisibleLine(lineNumber).getVisibleRangesForRange(lineNumber, startColumn, endColumn, domReadingContext);\n        this._updateLineWidthsSlowIfDomDidLayout(domReadingContext);\n        return result;\n    }\n    visibleRangeForPosition(position) {\n        const visibleRanges = this._visibleRangesForLineRange(position.lineNumber, position.column, position.column);\n        if (!visibleRanges) {\n            return null;\n        }\n        return new HorizontalPosition(visibleRanges.outsideRenderedLine, visibleRanges.ranges[0].left);\n    }\n    /**\n     * Updates the max line width if it is fast to compute.\n     * Returns true if all lines were taken into account.\n     * Returns false if some lines need to be reevaluated (in a slow fashion).\n     */\n    _updateLineWidthsFast() {\n        return this._updateLineWidths(true);\n    }\n    _updateLineWidthsSlow() {\n        this._updateLineWidths(false);\n    }\n    /**\n     * Update the line widths using DOM layout information after someone else\n     * has caused a synchronous layout.\n     */\n    _updateLineWidthsSlowIfDomDidLayout(domReadingContext) {\n        if (!domReadingContext.didDomLayout) {\n            // only proceed if we just did a layout\n            return;\n        }\n        if (this._asyncUpdateLineWidths.isScheduled()) {\n            // reading widths is not scheduled => widths are up-to-date\n            return;\n        }\n        this._asyncUpdateLineWidths.cancel();\n        this._updateLineWidthsSlow();\n    }\n    _updateLineWidths(fast) {\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        let localMaxLineWidth = 1;\n        let allWidthsComputed = true;\n        for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n            const visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n            if (fast && !visibleLine.getWidthIsFast()) {\n                // Cannot compute width in a fast way for this line\n                allWidthsComputed = false;\n                continue;\n            }\n            localMaxLineWidth = Math.max(localMaxLineWidth, visibleLine.getWidth(null));\n        }\n        if (allWidthsComputed && rendStartLineNumber === 1 && rendEndLineNumber === this._context.viewModel.getLineCount()) {\n            // we know the max line width for all the lines\n            this._maxLineWidth = 0;\n        }\n        this._ensureMaxLineWidth(localMaxLineWidth);\n        return allWidthsComputed;\n    }\n    _checkMonospaceFontAssumptions() {\n        // Problems with monospace assumptions are more apparent for longer lines,\n        // as small rounding errors start to sum up, so we will select the longest\n        // line for a closer inspection\n        let longestLineNumber = -1;\n        let longestWidth = -1;\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n            const visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n            if (visibleLine.needsMonospaceFontCheck()) {\n                const lineWidth = visibleLine.getWidth(null);\n                if (lineWidth > longestWidth) {\n                    longestWidth = lineWidth;\n                    longestLineNumber = lineNumber;\n                }\n            }\n        }\n        if (longestLineNumber === -1) {\n            return;\n        }\n        if (!this._visibleLines.getVisibleLine(longestLineNumber).monospaceAssumptionsAreValid()) {\n            for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n                const visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n                visibleLine.onMonospaceAssumptionsInvalidated();\n            }\n        }\n    }\n    prepareRender() {\n        throw new Error('Not supported');\n    }\n    render() {\n        throw new Error('Not supported');\n    }\n    renderText(viewportData) {\n        // (1) render lines - ensures lines are in the DOM\n        this._visibleLines.renderLines(viewportData);\n        this._lastRenderedData.setCurrentVisibleRange(viewportData.visibleRange);\n        this.domNode.setWidth(this._context.viewLayout.getScrollWidth());\n        this.domNode.setHeight(Math.min(this._context.viewLayout.getScrollHeight(), 1000000));\n        // (2) compute horizontal scroll position:\n        //  - this must happen after the lines are in the DOM since it might need a line that rendered just now\n        //  - it might change `scrollWidth` and `scrollLeft`\n        if (this._horizontalRevealRequest) {\n            const horizontalRevealRequest = this._horizontalRevealRequest;\n            // Check that we have the line that contains the horizontal range in the viewport\n            if (viewportData.startLineNumber <= horizontalRevealRequest.minLineNumber && horizontalRevealRequest.maxLineNumber <= viewportData.endLineNumber) {\n                this._horizontalRevealRequest = null;\n                // allow `visibleRangesForRange2` to work\n                this.onDidRender();\n                // compute new scroll position\n                const newScrollLeft = this._computeScrollLeftToReveal(horizontalRevealRequest);\n                if (newScrollLeft) {\n                    if (!this._isViewportWrapping) {\n                        // ensure `scrollWidth` is large enough\n                        this._ensureMaxLineWidth(newScrollLeft.maxHorizontalOffset);\n                    }\n                    // set `scrollLeft`\n                    this._context.viewModel.viewLayout.setScrollPosition({\n                        scrollLeft: newScrollLeft.scrollLeft\n                    }, horizontalRevealRequest.scrollType);\n                }\n            }\n        }\n        // Update max line width (not so important, it is just so the horizontal scrollbar doesn't get too small)\n        if (!this._updateLineWidthsFast()) {\n            // Computing the width of some lines would be slow => delay it\n            this._asyncUpdateLineWidths.schedule();\n        }\n        else {\n            this._asyncUpdateLineWidths.cancel();\n        }\n        if (platform.isLinux && !this._asyncCheckMonospaceFontAssumptions.isScheduled()) {\n            const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n            const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n            for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n                const visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n                if (visibleLine.needsMonospaceFontCheck()) {\n                    this._asyncCheckMonospaceFontAssumptions.schedule();\n                    break;\n                }\n            }\n        }\n        // (3) handle scrolling\n        this._linesContent.setLayerHinting(this._canUseLayerHinting);\n        this._linesContent.setContain('strict');\n        const adjustedScrollTop = this._context.viewLayout.getCurrentScrollTop() - viewportData.bigNumbersDelta;\n        this._linesContent.setTop(-adjustedScrollTop);\n        this._linesContent.setLeft(-this._context.viewLayout.getCurrentScrollLeft());\n    }\n    // --- width\n    _ensureMaxLineWidth(lineWidth) {\n        const iLineWidth = Math.ceil(lineWidth);\n        if (this._maxLineWidth < iLineWidth) {\n            this._maxLineWidth = iLineWidth;\n            this._context.viewModel.viewLayout.setMaxLineWidth(this._maxLineWidth);\n        }\n    }\n    _computeScrollTopToRevealRange(viewport, source, minimalReveal, range, selections, verticalType) {\n        const viewportStartY = viewport.top;\n        const viewportHeight = viewport.height;\n        const viewportEndY = viewportStartY + viewportHeight;\n        let boxIsSingleRange;\n        let boxStartY;\n        let boxEndY;\n        if (selections && selections.length > 0) {\n            let minLineNumber = selections[0].startLineNumber;\n            let maxLineNumber = selections[0].endLineNumber;\n            for (let i = 1, len = selections.length; i < len; i++) {\n                const selection = selections[i];\n                minLineNumber = Math.min(minLineNumber, selection.startLineNumber);\n                maxLineNumber = Math.max(maxLineNumber, selection.endLineNumber);\n            }\n            boxIsSingleRange = false;\n            boxStartY = this._context.viewLayout.getVerticalOffsetForLineNumber(minLineNumber);\n            boxEndY = this._context.viewLayout.getVerticalOffsetForLineNumber(maxLineNumber) + this._lineHeight;\n        }\n        else if (range) {\n            boxIsSingleRange = true;\n            boxStartY = this._context.viewLayout.getVerticalOffsetForLineNumber(range.startLineNumber);\n            boxEndY = this._context.viewLayout.getVerticalOffsetForLineNumber(range.endLineNumber) + this._lineHeight;\n        }\n        else {\n            return -1;\n        }\n        const shouldIgnoreScrollOff = (source === 'mouse' || minimalReveal) && this._cursorSurroundingLinesStyle === 'default';\n        let paddingTop = 0;\n        let paddingBottom = 0;\n        if (!shouldIgnoreScrollOff) {\n            const context = Math.min((viewportHeight / this._lineHeight) / 2, this._cursorSurroundingLines);\n            if (this._stickyScrollEnabled) {\n                paddingTop = Math.max(context, this._maxNumberStickyLines) * this._lineHeight;\n            }\n            else {\n                paddingTop = context * this._lineHeight;\n            }\n            paddingBottom = Math.max(0, (context - 1)) * this._lineHeight;\n        }\n        else {\n            if (!minimalReveal) {\n                // Reveal one more line above (this case is hit when dragging)\n                paddingTop = this._lineHeight;\n            }\n        }\n        if (!minimalReveal) {\n            if (verticalType === 0 /* viewEvents.VerticalRevealType.Simple */ || verticalType === 4 /* viewEvents.VerticalRevealType.Bottom */) {\n                // Reveal one line more when the last line would be covered by the scrollbar - arrow down case or revealing a line explicitly at bottom\n                paddingBottom += this._lineHeight;\n            }\n        }\n        boxStartY -= paddingTop;\n        boxEndY += paddingBottom;\n        let newScrollTop;\n        if (boxEndY - boxStartY > viewportHeight) {\n            // the box is larger than the viewport ... scroll to its top\n            if (!boxIsSingleRange) {\n                // do not reveal multiple cursors if there are more than fit the viewport\n                return -1;\n            }\n            newScrollTop = boxStartY;\n        }\n        else if (verticalType === 5 /* viewEvents.VerticalRevealType.NearTop */ || verticalType === 6 /* viewEvents.VerticalRevealType.NearTopIfOutsideViewport */) {\n            if (verticalType === 6 /* viewEvents.VerticalRevealType.NearTopIfOutsideViewport */ && viewportStartY <= boxStartY && boxEndY <= viewportEndY) {\n                // Box is already in the viewport... do nothing\n                newScrollTop = viewportStartY;\n            }\n            else {\n                // We want a gap that is 20% of the viewport, but with a minimum of 5 lines\n                const desiredGapAbove = Math.max(5 * this._lineHeight, viewportHeight * 0.2);\n                // Try to scroll just above the box with the desired gap\n                const desiredScrollTop = boxStartY - desiredGapAbove;\n                // But ensure that the box is not pushed out of viewport\n                const minScrollTop = boxEndY - viewportHeight;\n                newScrollTop = Math.max(minScrollTop, desiredScrollTop);\n            }\n        }\n        else if (verticalType === 1 /* viewEvents.VerticalRevealType.Center */ || verticalType === 2 /* viewEvents.VerticalRevealType.CenterIfOutsideViewport */) {\n            if (verticalType === 2 /* viewEvents.VerticalRevealType.CenterIfOutsideViewport */ && viewportStartY <= boxStartY && boxEndY <= viewportEndY) {\n                // Box is already in the viewport... do nothing\n                newScrollTop = viewportStartY;\n            }\n            else {\n                // Box is outside the viewport... center it\n                const boxMiddleY = (boxStartY + boxEndY) / 2;\n                newScrollTop = Math.max(0, boxMiddleY - viewportHeight / 2);\n            }\n        }\n        else {\n            newScrollTop = this._computeMinimumScrolling(viewportStartY, viewportEndY, boxStartY, boxEndY, verticalType === 3 /* viewEvents.VerticalRevealType.Top */, verticalType === 4 /* viewEvents.VerticalRevealType.Bottom */);\n        }\n        return newScrollTop;\n    }\n    _computeScrollLeftToReveal(horizontalRevealRequest) {\n        const viewport = this._context.viewLayout.getCurrentViewport();\n        const layoutInfo = this._context.configuration.options.get(143 /* EditorOption.layoutInfo */);\n        const viewportStartX = viewport.left;\n        const viewportEndX = viewportStartX + viewport.width - layoutInfo.verticalScrollbarWidth;\n        let boxStartX = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n        let boxEndX = 0;\n        if (horizontalRevealRequest.type === 'range') {\n            const visibleRanges = this._visibleRangesForLineRange(horizontalRevealRequest.lineNumber, horizontalRevealRequest.startColumn, horizontalRevealRequest.endColumn);\n            if (!visibleRanges) {\n                return null;\n            }\n            for (const visibleRange of visibleRanges.ranges) {\n                boxStartX = Math.min(boxStartX, Math.round(visibleRange.left));\n                boxEndX = Math.max(boxEndX, Math.round(visibleRange.left + visibleRange.width));\n            }\n        }\n        else {\n            for (const selection of horizontalRevealRequest.selections) {\n                if (selection.startLineNumber !== selection.endLineNumber) {\n                    return null;\n                }\n                const visibleRanges = this._visibleRangesForLineRange(selection.startLineNumber, selection.startColumn, selection.endColumn);\n                if (!visibleRanges) {\n                    return null;\n                }\n                for (const visibleRange of visibleRanges.ranges) {\n                    boxStartX = Math.min(boxStartX, Math.round(visibleRange.left));\n                    boxEndX = Math.max(boxEndX, Math.round(visibleRange.left + visibleRange.width));\n                }\n            }\n        }\n        if (!horizontalRevealRequest.minimalReveal) {\n            boxStartX = Math.max(0, boxStartX - ViewLines.HORIZONTAL_EXTRA_PX);\n            boxEndX += this._revealHorizontalRightPadding;\n        }\n        if (horizontalRevealRequest.type === 'selections' && boxEndX - boxStartX > viewport.width) {\n            return null;\n        }\n        const newScrollLeft = this._computeMinimumScrolling(viewportStartX, viewportEndX, boxStartX, boxEndX);\n        return {\n            scrollLeft: newScrollLeft,\n            maxHorizontalOffset: boxEndX\n        };\n    }\n    _computeMinimumScrolling(viewportStart, viewportEnd, boxStart, boxEnd, revealAtStart, revealAtEnd) {\n        viewportStart = viewportStart | 0;\n        viewportEnd = viewportEnd | 0;\n        boxStart = boxStart | 0;\n        boxEnd = boxEnd | 0;\n        revealAtStart = !!revealAtStart;\n        revealAtEnd = !!revealAtEnd;\n        const viewportLength = viewportEnd - viewportStart;\n        const boxLength = boxEnd - boxStart;\n        if (boxLength < viewportLength) {\n            // The box would fit in the viewport\n            if (revealAtStart) {\n                return boxStart;\n            }\n            if (revealAtEnd) {\n                return Math.max(0, boxEnd - viewportLength);\n            }\n            if (boxStart < viewportStart) {\n                // The box is above the viewport\n                return boxStart;\n            }\n            else if (boxEnd > viewportEnd) {\n                // The box is below the viewport\n                return Math.max(0, boxEnd - viewportLength);\n            }\n        }\n        else {\n            // The box would not fit in the viewport\n            // Reveal the beginning of the box\n            return boxStart;\n        }\n        return viewportStart;\n    }\n}\n/**\n * Adds this amount of pixels to the right of lines (no-one wants to type near the edge of the viewport)\n */\nViewLines.HORIZONTAL_EXTRA_PX = 30;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ArrayQueue } from '../../../../base/common/arrays.js';\nimport './glyphMargin.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { Range } from '../../../common/core/range.js';\n/**\n * Represents a decoration that should be shown along the lines from `startLineNumber` to `endLineNumber`.\n * This can end up producing multiple `LineDecorationToRender`.\n */\nexport class DecorationToRender {\n    constructor(startLineNumber, endLineNumber, className, zIndex) {\n        this._decorationToRenderBrand = undefined;\n        this.startLineNumber = +startLineNumber;\n        this.endLineNumber = +endLineNumber;\n        this.className = String(className);\n        this.zIndex = zIndex !== null && zIndex !== void 0 ? zIndex : 0;\n    }\n}\n/**\n * A decoration that should be shown along a line.\n */\nexport class LineDecorationToRender {\n    constructor(className, zIndex) {\n        this.className = className;\n        this.zIndex = zIndex;\n    }\n}\n/**\n * Decorations to render on a visible line.\n */\nexport class VisibleLineDecorationsToRender {\n    constructor() {\n        this.decorations = [];\n    }\n    add(decoration) {\n        this.decorations.push(decoration);\n    }\n    getDecorations() {\n        return this.decorations;\n    }\n}\nexport class DedupOverlay extends DynamicViewOverlay {\n    /**\n     * Returns an array with an element for each visible line number.\n     */\n    _render(visibleStartLineNumber, visibleEndLineNumber, decorations) {\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            output[lineIndex] = new VisibleLineDecorationsToRender();\n        }\n        if (decorations.length === 0) {\n            return output;\n        }\n        // Sort decorations by className, then by startLineNumber and then by endLineNumber\n        decorations.sort((a, b) => {\n            if (a.className === b.className) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.endLineNumber - b.endLineNumber;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return (a.className < b.className ? -1 : 1);\n        });\n        let prevClassName = null;\n        let prevEndLineIndex = 0;\n        for (let i = 0, len = decorations.length; i < len; i++) {\n            const d = decorations[i];\n            const className = d.className;\n            const zIndex = d.zIndex;\n            let startLineIndex = Math.max(d.startLineNumber, visibleStartLineNumber) - visibleStartLineNumber;\n            const endLineIndex = Math.min(d.endLineNumber, visibleEndLineNumber) - visibleStartLineNumber;\n            if (prevClassName === className) {\n                // Here we avoid rendering the same className multiple times on the same line\n                startLineIndex = Math.max(prevEndLineIndex + 1, startLineIndex);\n                prevEndLineIndex = Math.max(prevEndLineIndex, endLineIndex);\n            }\n            else {\n                prevClassName = className;\n                prevEndLineIndex = endLineIndex;\n            }\n            for (let i = startLineIndex; i <= prevEndLineIndex; i++) {\n                output[i].add(new LineDecorationToRender(className, zIndex));\n            }\n        }\n        return output;\n    }\n}\nexport class GlyphMarginWidgets extends ViewPart {\n    constructor(context) {\n        super(context);\n        this._widgets = {};\n        this._context = context;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setClassName('glyph-margin-widgets');\n        this.domNode.setPosition('absolute');\n        this.domNode.setTop(0);\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._glyphMargin = options.get(57 /* EditorOption.glyphMargin */);\n        this._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n        this._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n        this._glyphMarginDecorationLaneCount = layoutInfo.glyphMarginDecorationLaneCount;\n        this._managedDomNodes = [];\n        this._decorationGlyphsToRender = [];\n    }\n    dispose() {\n        this._managedDomNodes = [];\n        this._decorationGlyphsToRender = [];\n        this._widgets = {};\n        super.dispose();\n    }\n    getWidgets() {\n        return Object.values(this._widgets);\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._glyphMargin = options.get(57 /* EditorOption.glyphMargin */);\n        this._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n        this._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n        this._glyphMarginDecorationLaneCount = layoutInfo.glyphMarginDecorationLaneCount;\n        return true;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    // --- begin widget management\n    addWidget(widget) {\n        const domNode = createFastDomNode(widget.getDomNode());\n        this._widgets[widget.getId()] = {\n            widget: widget,\n            preference: widget.getPosition(),\n            domNode: domNode,\n            renderInfo: null\n        };\n        domNode.setPosition('absolute');\n        domNode.setDisplay('none');\n        domNode.setAttribute('widgetId', widget.getId());\n        this.domNode.appendChild(domNode);\n        this.setShouldRender();\n    }\n    setWidgetPosition(widget, preference) {\n        const myWidget = this._widgets[widget.getId()];\n        if (myWidget.preference.lane === preference.lane\n            && myWidget.preference.zIndex === preference.zIndex\n            && Range.equalsRange(myWidget.preference.range, preference.range)) {\n            return false;\n        }\n        myWidget.preference = preference;\n        this.setShouldRender();\n        return true;\n    }\n    removeWidget(widget) {\n        var _a;\n        const widgetId = widget.getId();\n        if (this._widgets[widgetId]) {\n            const widgetData = this._widgets[widgetId];\n            const domNode = widgetData.domNode.domNode;\n            delete this._widgets[widgetId];\n            (_a = domNode.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(domNode);\n            this.setShouldRender();\n        }\n    }\n    // --- end widget management\n    _collectDecorationBasedGlyphRenderRequest(ctx, requests) {\n        var _a, _b, _c;\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const decorations = ctx.getDecorationsInViewport();\n        for (const d of decorations) {\n            const glyphMarginClassName = d.options.glyphMarginClassName;\n            if (!glyphMarginClassName) {\n                continue;\n            }\n            const startLineNumber = Math.max(d.range.startLineNumber, visibleStartLineNumber);\n            const endLineNumber = Math.min(d.range.endLineNumber, visibleEndLineNumber);\n            const lane = Math.min((_b = (_a = d.options.glyphMargin) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : 1, this._glyphMarginDecorationLaneCount);\n            const zIndex = (_c = d.options.zIndex) !== null && _c !== void 0 ? _c : 0;\n            for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n                requests.push(new DecorationBasedGlyphRenderRequest(lineNumber, lane, zIndex, glyphMarginClassName));\n            }\n        }\n    }\n    _collectWidgetBasedGlyphRenderRequest(ctx, requests) {\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        for (const widget of Object.values(this._widgets)) {\n            const range = widget.preference.range;\n            if (range.endLineNumber < visibleStartLineNumber || range.startLineNumber > visibleEndLineNumber) {\n                // The widget is not in the viewport\n                continue;\n            }\n            // The widget is in the viewport, find a good line for it\n            const widgetLineNumber = Math.max(range.startLineNumber, visibleStartLineNumber);\n            const lane = Math.min(widget.preference.lane, this._glyphMarginDecorationLaneCount);\n            requests.push(new WidgetBasedGlyphRenderRequest(widgetLineNumber, lane, widget.preference.zIndex, widget));\n        }\n    }\n    _collectSortedGlyphRenderRequests(ctx) {\n        const requests = [];\n        this._collectDecorationBasedGlyphRenderRequest(ctx, requests);\n        this._collectWidgetBasedGlyphRenderRequest(ctx, requests);\n        // sort requests by lineNumber ASC, lane  ASC, zIndex DESC, type DESC (widgets first), className ASC\n        // don't change this sort unless you understand `prepareRender` below.\n        requests.sort((a, b) => {\n            if (a.lineNumber === b.lineNumber) {\n                if (a.lane === b.lane) {\n                    if (a.zIndex === b.zIndex) {\n                        if (b.type === a.type) {\n                            if (a.type === 0 /* GlyphRenderRequestType.Decoration */ && b.type === 0 /* GlyphRenderRequestType.Decoration */) {\n                                return (a.className < b.className ? -1 : 1);\n                            }\n                            return 0;\n                        }\n                        return b.type - a.type;\n                    }\n                    return b.zIndex - a.zIndex;\n                }\n                return a.lane - b.lane;\n            }\n            return a.lineNumber - b.lineNumber;\n        });\n        return requests;\n    }\n    /**\n     * Will store render information in each widget's renderInfo and in `_decorationGlyphsToRender`.\n     */\n    prepareRender(ctx) {\n        if (!this._glyphMargin) {\n            this._decorationGlyphsToRender = [];\n            return;\n        }\n        for (const widget of Object.values(this._widgets)) {\n            widget.renderInfo = null;\n        }\n        const requests = new ArrayQueue(this._collectSortedGlyphRenderRequests(ctx));\n        const decorationGlyphsToRender = [];\n        while (requests.length > 0) {\n            const first = requests.peek();\n            if (!first) {\n                // not possible\n                break;\n            }\n            // Requests are sorted by lineNumber and lane, so we read all requests for this particular location\n            const requestsAtLocation = requests.takeWhile((el) => el.lineNumber === first.lineNumber && el.lane === first.lane);\n            if (!requestsAtLocation || requestsAtLocation.length === 0) {\n                // not possible\n                break;\n            }\n            const winner = requestsAtLocation[0];\n            if (winner.type === 0 /* GlyphRenderRequestType.Decoration */) {\n                // combine all decorations with the same z-index\n                const classNames = [];\n                // requests are sorted by zIndex, type, and className so we can dedup className by looking at the previous one\n                for (const request of requestsAtLocation) {\n                    if (request.zIndex !== winner.zIndex || request.type !== winner.type) {\n                        break;\n                    }\n                    if (classNames.length === 0 || classNames[classNames.length - 1] !== request.className) {\n                        classNames.push(request.className);\n                    }\n                }\n                decorationGlyphsToRender.push(winner.accept(classNames.join(' '))); // TODO@joyceerhl Implement overflow for remaining decorations\n            }\n            else {\n                // widgets cannot be combined\n                winner.widget.renderInfo = {\n                    lineNumber: winner.lineNumber,\n                    lane: winner.lane,\n                };\n            }\n        }\n        this._decorationGlyphsToRender = decorationGlyphsToRender;\n    }\n    render(ctx) {\n        if (!this._glyphMargin) {\n            for (const widget of Object.values(this._widgets)) {\n                widget.domNode.setDisplay('none');\n            }\n            while (this._managedDomNodes.length > 0) {\n                const domNode = this._managedDomNodes.pop();\n                domNode === null || domNode === void 0 ? void 0 : domNode.domNode.remove();\n            }\n            return;\n        }\n        const width = (Math.round(this._glyphMarginWidth / this._glyphMarginDecorationLaneCount));\n        // Render widgets\n        for (const widget of Object.values(this._widgets)) {\n            if (!widget.renderInfo) {\n                // this widget is not visible\n                widget.domNode.setDisplay('none');\n            }\n            else {\n                const top = ctx.viewportData.relativeVerticalOffset[widget.renderInfo.lineNumber - ctx.viewportData.startLineNumber];\n                const left = this._glyphMarginLeft + (widget.renderInfo.lane - 1) * this._lineHeight;\n                widget.domNode.setDisplay('block');\n                widget.domNode.setTop(top);\n                widget.domNode.setLeft(left);\n                widget.domNode.setWidth(width);\n                widget.domNode.setHeight(this._lineHeight);\n            }\n        }\n        // Render decorations, reusing previous dom nodes as possible\n        for (let i = 0; i < this._decorationGlyphsToRender.length; i++) {\n            const dec = this._decorationGlyphsToRender[i];\n            const top = ctx.viewportData.relativeVerticalOffset[dec.lineNumber - ctx.viewportData.startLineNumber];\n            const left = this._glyphMarginLeft + (dec.lane - 1) * this._lineHeight;\n            let domNode;\n            if (i < this._managedDomNodes.length) {\n                domNode = this._managedDomNodes[i];\n            }\n            else {\n                domNode = createFastDomNode(document.createElement('div'));\n                this._managedDomNodes.push(domNode);\n                this.domNode.appendChild(domNode);\n            }\n            domNode.setClassName(`cgmr codicon ` + dec.combinedClassName);\n            domNode.setPosition(`absolute`);\n            domNode.setTop(top);\n            domNode.setLeft(left);\n            domNode.setWidth(width);\n            domNode.setHeight(this._lineHeight);\n        }\n        // remove extra dom nodes\n        while (this._managedDomNodes.length > this._decorationGlyphsToRender.length) {\n            const domNode = this._managedDomNodes.pop();\n            domNode === null || domNode === void 0 ? void 0 : domNode.domNode.remove();\n        }\n    }\n}\n/**\n * A request to render a decoration in the glyph margin at a certain location.\n */\nclass DecorationBasedGlyphRenderRequest {\n    constructor(lineNumber, lane, zIndex, className) {\n        this.lineNumber = lineNumber;\n        this.lane = lane;\n        this.zIndex = zIndex;\n        this.className = className;\n        this.type = 0 /* GlyphRenderRequestType.Decoration */;\n    }\n    accept(combinedClassName) {\n        return new DecorationBasedGlyph(this.lineNumber, this.lane, combinedClassName);\n    }\n}\n/**\n * A request to render a widget in the glyph margin at a certain location.\n */\nclass WidgetBasedGlyphRenderRequest {\n    constructor(lineNumber, lane, zIndex, widget) {\n        this.lineNumber = lineNumber;\n        this.lane = lane;\n        this.zIndex = zIndex;\n        this.widget = widget;\n        this.type = 1 /* GlyphRenderRequestType.Widget */;\n    }\n}\nclass DecorationBasedGlyph {\n    constructor(lineNumber, lane, combinedClassName) {\n        this.lineNumber = lineNumber;\n        this.lane = lane;\n        this.combinedClassName = combinedClassName;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './linesDecorations.css';\nimport { DecorationToRender, DedupOverlay } from '../glyphMargin/glyphMargin.js';\nexport class LinesDecorationsOverlay extends DedupOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this._decorationsLeft = layoutInfo.decorationsLeft;\n        this._decorationsWidth = layoutInfo.decorationsWidth;\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this._decorationsLeft = layoutInfo.decorationsLeft;\n        this._decorationsWidth = layoutInfo.decorationsWidth;\n        return true;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    _getDecorations(ctx) {\n        const decorations = ctx.getDecorationsInViewport();\n        const r = [];\n        let rLen = 0;\n        for (let i = 0, len = decorations.length; i < len; i++) {\n            const d = decorations[i];\n            const linesDecorationsClassName = d.options.linesDecorationsClassName;\n            const zIndex = d.options.zIndex;\n            if (linesDecorationsClassName) {\n                r[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.endLineNumber, linesDecorationsClassName, zIndex);\n            }\n            const firstLineDecorationClassName = d.options.firstLineDecorationClassName;\n            if (firstLineDecorationClassName) {\n                r[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.startLineNumber, firstLineDecorationClassName, zIndex);\n            }\n        }\n        return r;\n    }\n    prepareRender(ctx) {\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const toRender = this._render(visibleStartLineNumber, visibleEndLineNumber, this._getDecorations(ctx));\n        const left = this._decorationsLeft.toString();\n        const width = this._decorationsWidth.toString();\n        const common = '\" style=\"left:' + left + 'px;width:' + width + 'px;\"></div>';\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const decorations = toRender[lineIndex].getDecorations();\n            let lineOutput = '';\n            for (const decoration of decorations) {\n                lineOutput += '<div class=\"cldr ' + decoration.className + common;\n            }\n            output[lineIndex] = lineOutput;\n        }\n        this._renderResult = output;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        return this._renderResult[lineNumber - startLineNumber];\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './marginDecorations.css';\nimport { DecorationToRender, DedupOverlay } from '../glyphMargin/glyphMargin.js';\nexport class MarginViewLineDecorationsOverlay extends DedupOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        return true;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    _getDecorations(ctx) {\n        const decorations = ctx.getDecorationsInViewport();\n        const r = [];\n        let rLen = 0;\n        for (let i = 0, len = decorations.length; i < len; i++) {\n            const d = decorations[i];\n            const marginClassName = d.options.marginClassName;\n            const zIndex = d.options.zIndex;\n            if (marginClassName) {\n                r[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.endLineNumber, marginClassName, zIndex);\n            }\n        }\n        return r;\n    }\n    prepareRender(ctx) {\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const toRender = this._render(visibleStartLineNumber, visibleEndLineNumber, this._getDecorations(ctx));\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const decorations = toRender[lineIndex].getDecorations();\n            let lineOutput = '';\n            for (const decoration of decorations) {\n                lineOutput += '<div class=\"cmdr ' + decoration.className + '\" style=\"\"></div>';\n            }\n            output[lineIndex] = lineOutput;\n        }\n        this._renderResult = output;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        return this._renderResult[lineNumber - startLineNumber];\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const allCharCodes = (() => {\n    const v = [];\n    for (let i = 32 /* Constants.START_CH_CODE */; i <= 126 /* Constants.END_CH_CODE */; i++) {\n        v.push(i);\n    }\n    v.push(65533 /* Constants.UNKNOWN_CODE */);\n    return v;\n})();\nexport const getCharIndex = (chCode, fontScale) => {\n    chCode -= 32 /* Constants.START_CH_CODE */;\n    if (chCode < 0 || chCode > 96 /* Constants.CHAR_COUNT */) {\n        if (fontScale <= 2) {\n            // for smaller scales, we can get away with using any ASCII character...\n            return (chCode + 96 /* Constants.CHAR_COUNT */) % 96 /* Constants.CHAR_COUNT */;\n        }\n        return 96 /* Constants.CHAR_COUNT */ - 1; // unknown symbol\n    }\n    return chCode;\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getCharIndex } from './minimapCharSheet.js';\nimport { toUint8 } from '../../../../base/common/uint.js';\nexport class MinimapCharRenderer {\n    constructor(charData, scale) {\n        this.scale = scale;\n        this._minimapCharRendererBrand = undefined;\n        this.charDataNormal = MinimapCharRenderer.soften(charData, 12 / 15);\n        this.charDataLight = MinimapCharRenderer.soften(charData, 50 / 60);\n    }\n    static soften(input, ratio) {\n        const result = new Uint8ClampedArray(input.length);\n        for (let i = 0, len = input.length; i < len; i++) {\n            result[i] = toUint8(input[i] * ratio);\n        }\n        return result;\n    }\n    renderChar(target, dx, dy, chCode, color, foregroundAlpha, backgroundColor, backgroundAlpha, fontScale, useLighterFont, force1pxHeight) {\n        const charWidth = 1 /* Constants.BASE_CHAR_WIDTH */ * this.scale;\n        const charHeight = 2 /* Constants.BASE_CHAR_HEIGHT */ * this.scale;\n        const renderHeight = (force1pxHeight ? 1 : charHeight);\n        if (dx + charWidth > target.width || dy + renderHeight > target.height) {\n            console.warn('bad render request outside image data');\n            return;\n        }\n        const charData = useLighterFont ? this.charDataLight : this.charDataNormal;\n        const charIndex = getCharIndex(chCode, fontScale);\n        const destWidth = target.width * 4 /* Constants.RGBA_CHANNELS_CNT */;\n        const backgroundR = backgroundColor.r;\n        const backgroundG = backgroundColor.g;\n        const backgroundB = backgroundColor.b;\n        const deltaR = color.r - backgroundR;\n        const deltaG = color.g - backgroundG;\n        const deltaB = color.b - backgroundB;\n        const destAlpha = Math.max(foregroundAlpha, backgroundAlpha);\n        const dest = target.data;\n        let sourceOffset = charIndex * charWidth * charHeight;\n        let row = dy * destWidth + dx * 4 /* Constants.RGBA_CHANNELS_CNT */;\n        for (let y = 0; y < renderHeight; y++) {\n            let column = row;\n            for (let x = 0; x < charWidth; x++) {\n                const c = (charData[sourceOffset++] / 255) * (foregroundAlpha / 255);\n                dest[column++] = backgroundR + deltaR * c;\n                dest[column++] = backgroundG + deltaG * c;\n                dest[column++] = backgroundB + deltaB * c;\n                dest[column++] = destAlpha;\n            }\n            row += destWidth;\n        }\n    }\n    blockRenderChar(target, dx, dy, color, foregroundAlpha, backgroundColor, backgroundAlpha, force1pxHeight) {\n        const charWidth = 1 /* Constants.BASE_CHAR_WIDTH */ * this.scale;\n        const charHeight = 2 /* Constants.BASE_CHAR_HEIGHT */ * this.scale;\n        const renderHeight = (force1pxHeight ? 1 : charHeight);\n        if (dx + charWidth > target.width || dy + renderHeight > target.height) {\n            console.warn('bad render request outside image data');\n            return;\n        }\n        const destWidth = target.width * 4 /* Constants.RGBA_CHANNELS_CNT */;\n        const c = 0.5 * (foregroundAlpha / 255);\n        const backgroundR = backgroundColor.r;\n        const backgroundG = backgroundColor.g;\n        const backgroundB = backgroundColor.b;\n        const deltaR = color.r - backgroundR;\n        const deltaG = color.g - backgroundG;\n        const deltaB = color.b - backgroundB;\n        const colorR = backgroundR + deltaR * c;\n        const colorG = backgroundG + deltaG * c;\n        const colorB = backgroundB + deltaB * c;\n        const destAlpha = Math.max(foregroundAlpha, backgroundAlpha);\n        const dest = target.data;\n        let row = dy * destWidth + dx * 4 /* Constants.RGBA_CHANNELS_CNT */;\n        for (let y = 0; y < renderHeight; y++) {\n            let column = row;\n            for (let x = 0; x < charWidth; x++) {\n                dest[column++] = colorR;\n                dest[column++] = colorG;\n                dest[column++] = colorB;\n                dest[column++] = destAlpha;\n            }\n            row += destWidth;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createSingleCallFunction } from '../../../../base/common/functional.js';\nconst charTable = {\n    '0': 0,\n    '1': 1,\n    '2': 2,\n    '3': 3,\n    '4': 4,\n    '5': 5,\n    '6': 6,\n    '7': 7,\n    '8': 8,\n    '9': 9,\n    A: 10,\n    B: 11,\n    C: 12,\n    D: 13,\n    E: 14,\n    F: 15\n};\nconst decodeData = (str) => {\n    const output = new Uint8ClampedArray(str.length / 2);\n    for (let i = 0; i < str.length; i += 2) {\n        output[i >> 1] = (charTable[str[i]] << 4) | (charTable[str[i + 1]] & 0xF);\n    }\n    return output;\n};\n/*\nconst encodeData = (data: Uint8ClampedArray, length: string) => {\n    const chars = '0123456789ABCDEF';\n    let output = '';\n    for (let i = 0; i < data.length; i++) {\n        output += chars[data[i] >> 4] + chars[data[i] & 0xf];\n    }\n    return output;\n};\n*/\n/**\n * Map of minimap scales to prebaked sample data at those scales. We don't\n * sample much larger data, because then font family becomes visible, which\n * is use-configurable.\n */\nexport const prebakedMiniMaps = {\n    1: createSingleCallFunction(() => decodeData('0000511D6300CF609C709645A78432005642574171487021003C451900274D35D762755E8B629C5BA856AF57BA649530C167D1512A272A3F6038604460398526BCA2A968DB6F8957C768BE5FBE2FB467CF5D8D5B795DC7625B5DFF50DE64C466DB2FC47CD860A65E9A2EB96CB54CE06DA763AB2EA26860524D3763536601005116008177A8705E53AB738E6A982F88BAA35B5F5B626D9C636B449B737E5B7B678598869A662F6B5B8542706C704C80736A607578685B70594A49715A4522E792')),\n    2: createSingleCallFunction(() => decodeDatan};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { MinimapCharRenderer } from './minimapCharRenderer.js';\nimport { allCharCodes } from './minimapCharSheet.js';\nimport { prebakedMiniMaps } from './minimapPreBaked.js';\nimport { toUint8 } from '../../../../base/common/uint.js';\n/**\n * Creates character renderers. It takes a 'scale' that determines how large\n * characters should be drawn. Using this, it draws data into a canvas and\n * then downsamples the characters as necessary for the current display.\n * This makes rendering more efficient, rather than drawing a full (tiny)\n * font, or downsampling in real-time.\n */\nexport class MinimapCharRendererFactory {\n    /**\n     * Creates a new character renderer factory with the given scale.\n     */\n    static create(scale, fontFamily) {\n        // renderers are immutable. By default we'll 'create' a new minimap\n        // character renderer whenever we switch editors, no need to do extra work.\n        if (this.lastCreated && scale === this.lastCreated.scale && fontFamily === this.lastFontFamily) {\n            return this.lastCreated;\n        }\n        let factory;\n        if (prebakedMiniMaps[scale]) {\n            factory = new MinimapCharRenderer(prebakedMiniMaps[scale](), scale);\n        }\n        else {\n            factory = MinimapCharRendererFactory.createFromSampleData(MinimapCharRendererFactory.createSampleData(fontFamily).data, scale);\n        }\n        this.lastFontFamily = fontFamily;\n        this.lastCreated = factory;\n        return factory;\n    }\n    /**\n     * Creates the font sample data, writing to a canvas.\n     */\n    static createSampleData(fontFamily) {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.style.height = `${16 /* Constants.SAMPLED_CHAR_HEIGHT */}px`;\n        canvas.height = 16 /* Constants.SAMPLED_CHAR_HEIGHT */;\n        canvas.width = 96 /* Constants.CHAR_COUNT */ * 10 /* Constants.SAMPLED_CHAR_WIDTH */;\n        canvas.style.width = 96 /* Constants.CHAR_COUNT */ * 10 /* Constants.SAMPLED_CHAR_WIDTH */ + 'px';\n        ctx.fillStyle = '#ffffff';\n        ctx.font = `bold ${16 /* Constants.SAMPLED_CHAR_HEIGHT */}px ${fontFamily}`;\n        ctx.textBaseline = 'middle';\n        let x = 0;\n        for (const code of allCharCodes) {\n            ctx.fillText(String.fromCharCode(code), x, 16 /* Constants.SAMPLED_CHAR_HEIGHT */ / 2);\n            x += 10 /* Constants.SAMPLED_CHAR_WIDTH */;\n        }\n        return ctx.getImageData(0, 0, 96 /* Constants.CHAR_COUNT */ * 10 /* Constants.SAMPLED_CHAR_WIDTH */, 16 /* Constants.SAMPLED_CHAR_HEIGHT */);\n    }\n    /**\n     * Creates a character renderer from the canvas sample data.\n     */\n    static createFromSampleData(source, scale) {\n        const expectedLength = 16 /* Constants.SAMPLED_CHAR_HEIGHT */ * 10 /* Constants.SAMPLED_CHAR_WIDTH */ * 4 /* Constants.RGBA_CHANNELS_CNT */ * 96 /* Constants.CHAR_COUNT */;\n        if (source.length !== expectedLength) {\n            throw new Error('Unexpected source in MinimapCharRenderer');\n        }\n        const charData = MinimapCharRendererFactory._downsample(source, scale);\n        return new MinimapCharRenderer(charData, scale);\n    }\n    static _downsampleChar(source, sourceOffset, dest, destOffset, scale) {\n        const width = 1 /* Constants.BASE_CHAR_WIDTH */ * scale;\n        const height = 2 /* Constants.BASE_CHAR_HEIGHT */ * scale;\n        let targetIndex = destOffset;\n        let brightest = 0;\n        // This is essentially an ad-hoc rescaling algorithm. Standard approaches\n        // like bicubic interpolation are awesome for scaling between image sizes,\n        // but don't work so well when scaling to very small pixel values, we end\n        // up with blurry, indistinct forms.\n        //\n        // The approach taken here is simply mapping each source pixel to the target\n        // pixels, and taking the weighted values for all pixels in each, and then\n        // averaging them out. Finally we apply an intensity boost in _downsample,\n        // since when scaling to the smallest pixel sizes there's more black space\n        // which causes characters to be much less distinct.\n        for (let y = 0; y < height; y++) {\n            // 1. For this destination pixel, get the source pixels we're sampling\n            // from (x1, y1) to the next pixel (x2, y2)\n            const sourceY1 = (y / height) * 16 /* Constants.SAMPLED_CHAR_HEIGHT */;\n            const sourceY2 = ((y + 1) / height) * 16 /* Constants.SAMPLED_CHAR_HEIGHT */;\n            for (let x = 0; x < width; x++) {\n                const sourceX1 = (x / width) * 10 /* Constants.SAMPLED_CHAR_WIDTH */;\n                const sourceX2 = ((x + 1) / width) * 10 /* Constants.SAMPLED_CHAR_WIDTH */;\n                // 2. Sample all of them, summing them up and weighting them. Similar\n                // to bilinear interpolation.\n                let value = 0;\n                let samples = 0;\n                for (let sy = sourceY1; sy < sourceY2; sy++) {\n                    const sourceRow = sourceOffset + Math.floor(sy) * 3840 /* Constants.RGBA_SAMPLED_ROW_WIDTH */;\n                    const yBalance = 1 - (sy - Math.floor(sy));\n                    for (let sx = sourceX1; sx < sourceX2; sx++) {\n                        const xBalance = 1 - (sx - Math.floor(sx));\n                        const sourceIndex = sourceRow + Math.floor(sx) * 4 /* Constants.RGBA_CHANNELS_CNT */;\n                        const weight = xBalance * yBalance;\n                        samples += weight;\n                        value += ((source[sourceIndex] * source[sourceIndex + 3]) / 255) * weight;\n                    }\n                }\n                const final = value / samples;\n                brightest = Math.max(brightest, final);\n                dest[targetIndex++] = toUint8(final);\n            }\n        }\n        return brightest;\n    }\n    static _downsample(data, scale) {\n        const pixelsPerCharacter = 2 /* Constants.BASE_CHAR_HEIGHT */ * scale * 1 /* Constants.BASE_CHAR_WIDTH */ * scale;\n        const resultLen = pixelsPerCharacter * 96 /* Constants.CHAR_COUNT */;\n        const result = new Uint8ClampedArray(resultLen);\n        let resultOffset = 0;\n        let sourceOffset = 0;\n        let brightest = 0;\n        for (let charIndex = 0; charIndex < 96 /* Constants.CHAR_COUNT */; charIndex++) {\n            brightest = Math.max(brightest, this._downsampleChar(data, sourceOffset, result, resultOffset, scale));\n            resultOffset += pixelsPerCharacter;\n            sourceOffset += 10 /* Constants.SAMPLED_CHAR_WIDTH */ * 4 /* Constants.RGBA_CHANNELS_CNT */;\n        }\n        if (brightest > 0) {\n            const adjust = 255 / brightest;\n            for (let i = 0; i < resultLen; i++) {\n                result[i] *= adjust;\n            }\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './minimap.css';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { GlobalPointerMoveMonitor } from '../../../../base/browser/globalPointerMoveMonitor.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { RenderedLinesCollection } from '../../view/viewLayer.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { MINIMAP_GUTTER_WIDTH, EditorLayoutInfoComputer } from '../../../common/config/editorOptions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { RGBA8 } from '../../../common/core/rgba.js';\nimport { MinimapTokensColorTracker } from '../../../common/viewModel/minimapTokensColorTracker.js';\nimport { ViewModelDecoration } from '../../../common/viewModel.js';\nimport { minimapSelection, minimapBackground, minimapForegroundOpacity } from '../../../../platform/theme/common/colorRegistry.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EventType, Gesture } from '../../../../base/browser/touch.js';\nimport { MinimapCharRendererFactory } from './minimapCharRendererFactory.js';\nimport { MinimapPosition } from '../../../common/model.js';\nimport { createSingleCallFunction } from '../../../../base/common/functional.js';\n/**\n * The orthogonal distance to the slider at which dragging \"resets\". This implements \"snapping\"\n */\nconst POINTER_DRAG_RESET_DISTANCE = 140;\nconst GUTTER_DECORATION_WIDTH = 2;\nclass MinimapOptions {\n    constructor(configuration, theme, tokensColorTracker) {\n        const options = configuration.options;\n        const pixelRatio = options.get(141 /* EditorOption.pixelRatio */);\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        const minimapLayout = layoutInfo.minimap;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        const minimapOpts = options.get(72 /* EditorOption.minimap */);\n        this.renderMinimap = minimapLayout.renderMinimap;\n        this.size = minimapOpts.size;\n        this.minimapHeightIsEditorHeight = minimapLayout.minimapHeightIsEditorHeight;\n        this.scrollBeyondLastLine = options.get(104 /* EditorOption.scrollBeyondLastLine */);\n        this.paddingTop = options.get(83 /* EditorOption.padding */).top;\n        this.paddingBottom = options.get(83 /* EditorOption.padding */).bottom;\n        this.showSlider = minimapOpts.showSlider;\n        this.autohide = minimapOpts.autohide;\n        this.pixelRatio = pixelRatio;\n        this.typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this.lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this.minimapLeft = minimapLayout.minimapLeft;\n        this.minimapWidth = minimapLayout.minimapWidth;\n        this.minimapHeight = layoutInfo.height;\n        this.canvasInnerWidth = minimapLayout.minimapCanvasInnerWidth;\n        this.canvasInnerHeight = minimapLayout.minimapCanvasInnerHeight;\n        this.canvasOuterWidth = minimapLayout.minimapCanvasOuterWidth;\n        this.canvasOuterHeight = minimapLayout.minimapCanvasOuterHeight;\n        this.isSampling = minimapLayout.minimapIsSampling;\n        this.editorHeight = layoutInfo.height;\n        this.fontScale = minimapLayout.minimapScale;\n        this.minimapLineHeight = minimapLayout.minimapLineHeight;\n        this.minimapCharWidth = 1 /* Constants.BASE_CHAR_WIDTH */ * this.fontScale;\n        this.charRenderer = createSingleCallFunction(() => MinimapCharRendererFactory.create(this.fontScale, fontInfo.fontFamily));\n        this.defaultBackgroundColor = tokensColorTracker.getColor(2 /* ColorId.DefaultBackground */);\n        this.backgroundColor = MinimapOptions._getMinimapBackground(theme, this.defaultBackgroundColor);\n        this.foregroundAlpha = MinimapOptions._getMinimapForegroundOpacity(theme);\n    }\n    static _getMinimapBackground(theme, defaultBackgroundColor) {\n        const themeColor = theme.getColor(minimapBackground);\n        if (themeColor) {\n            return new RGBA8(themeColor.rgba.r, themeColor.rgba.g, themeColor.rgba.b, Math.round(255 * themeColor.rgba.a));\n        }\n        return defaultBackgroundColor;\n    }\n    static _getMinimapForegroundOpacity(theme) {\n        const themeColor = theme.getColor(minimapForegroundOpacity);\n        if (themeColor) {\n            return RGBA8._clamp(Math.round(255 * themeColor.rgba.a));\n        }\n        return 255;\n    }\n    equals(other) {\n        return (this.renderMinimap === other.renderMinimap\n            && this.size === other.size\n            && this.minimapHeightIsEditorHeight === other.minimapHeightIsEditorHeight\n            && this.scrollBeyondLastLine === other.scrollBeyondLastLine\n            && this.paddingTop === other.paddingTop\n            && this.paddingBottom === other.paddingBottom\n            && this.showSlider === other.showSlider\n            && this.autohide === other.autohide\n            && this.pixelRatio === other.pixelRatio\n            && this.typicalHalfwidthCharacterWidth === other.typicalHalfwidthCharacterWidth\n            && this.lineHeight === other.lineHeight\n            && this.minimapLeft === other.minimapLeft\n            && this.minimapWidth === other.minimapWidth\n            && this.minimapHeight === other.minimapHeight\n            && this.canvasInnerWidth === other.canvasInnerWidth\n            && this.canvasInnerHeight === other.canvasInnerHeight\n            && this.canvasOuterWidth === other.canvasOuterWidth\n            && this.canvasOuterHeight === other.canvasOuterHeight\n            && this.isSampling === other.isSampling\n            && this.editorHeight === other.editorHeight\n            && this.fontScale === other.fontScale\n            && this.minimapLineHeight === other.minimapLineHeight\n            && this.minimapCharWidth === other.minimapCharWidth\n            && this.defaultBackgroundColor && this.defaultBackgroundColor.equals(other.defaultBackgroundColor)\n            && this.backgroundColor && this.backgroundColor.equals(other.backgroundColor)\n            && this.foregroundAlpha === other.foregroundAlpha);\n    }\n}\nclass MinimapLayout {\n    constructor(\n    /**\n     * The given editor scrollTop (input).\n     */\n    scrollTop, \n    /**\n     * The given editor scrollHeight (input).\n     */\n    scrollHeight, sliderNeeded, _computedSliderRatio, \n    /**\n     * slider dom node top (in CSS px)\n     */\n    sliderTop, \n    /**\n     * slider dom node height (in CSS px)\n     */\n    sliderHeight, \n    /**\n     * empty lines to reserve at the top of the minimap.\n     */\n    topPaddingLineCount, \n    /**\n     * minimap render start line number.\n     */\n    startLineNumber, \n    /**\n     * minimap render end line number.\n     */\n    endLineNumber) {\n        this.scrollTop = scrollTop;\n        this.scrollHeight = scrollHeight;\n        this.sliderNeeded = sliderNeeded;\n        this._computedSliderRatio = _computedSliderRatio;\n        this.sliderTop = sliderTop;\n        this.sliderHeight = sliderHeight;\n        this.topPaddingLineCount = topPaddingLineCount;\n        this.startLineNumber = startLineNumber;\n        this.endLineNumber = endLineNumber;\n    }\n    /**\n     * Compute a desired `scrollPosition` such that the slider moves by `delta`.\n     */\n    getDesiredScrollTopFromDelta(delta) {\n        return Math.round(this.scrollTop + delta / this._computedSliderRatio);\n    }\n    getDesiredScrollTopFromTouchLocation(pageY) {\n        return Math.round((pageY - this.sliderHeight / 2) / this._computedSliderRatio);\n    }\n    /**\n     * Intersect a line range with `this.startLineNumber` and `this.endLineNumber`.\n     */\n    intersectWithViewport(range) {\n        const startLineNumber = Math.max(this.startLineNumber, range.startLineNumber);\n        const endLineNumber = Math.min(this.endLineNumber, range.endLineNumber);\n        if (startLineNumber > endLineNumber) {\n            // entirely outside minimap's viewport\n            return null;\n        }\n        return [startLineNumber, endLineNumber];\n    }\n    /**\n     * Get the inner minimap y coordinate for a line number.\n     */\n    getYForLineNumber(lineNumber, minimapLineHeight) {\n        return +(lineNumber - this.startLineNumber + this.topPaddingLineCount) * minimapLineHeight;\n    }\n    static create(options, viewportStartLineNumber, viewportEndLineNumber, viewportStartLineNumberVerticalOffset, viewportHeight, viewportContainsWhitespaceGaps, lineCount, realLineCount, scrollTop, scrollHeight, previousLayout) {\n        const pixelRatio = options.pixelRatio;\n        const minimapLineHeight = options.minimapLineHeight;\n        const minimapLinesFitting = Math.floor(options.canvasInnerHeight / minimapLineHeight);\n        const lineHeight = options.lineHeight;\n        if (options.minimapHeightIsEditorHeight) {\n            let logicalScrollHeight = (realLineCount * options.lineHeight\n                + options.paddingTop\n                + options.paddingBottom);\n            if (options.scrollBeyondLastLine) {\n                logicalScrollHeight += Math.max(0, viewportHeight - options.lineHeight - options.paddingBottom);\n            }\n            const sliderHeight = Math.max(1, Math.floor(viewportHeight * viewportHeight / logicalScrollHeight));\n            const maxMinimapSliderTop = Math.max(0, options.minimapHeight - sliderHeight);\n            // The slider can move from 0 to `maxMinimapSliderTop`\n            // in the same way `scrollTop` can move from 0 to `scrollHeight` - `viewportHeight`.\n            const computedSliderRatio = (maxMinimapSliderTop) / (scrollHeight - viewportHeight);\n            const sliderTop = (scrollTop * computedSliderRatio);\n            const sliderNeeded = (maxMinimapSliderTop > 0);\n            const maxLinesFitting = Math.floor(options.canvasInnerHeight / options.minimapLineHeight);\n            const topPaddingLineCount = Math.floor(options.paddingTop / options.lineHeight);\n            return new MinimapLayout(scrollTop, scrollHeight, sliderNeeded, computedSliderRatio, sliderTop, sliderHeight, topPaddingLineCount, 1, Math.min(lineCount, maxLinesFitting));\n        }\n        // The visible line count in a viewport can change due to a number of reasons:\n        //  a) with the same viewport width, different scroll positions can result in partial lines being visible:\n        //    e.g. for a line height of 20, and a viewport height of 600\n        //          * scrollTop = 0  => visible lines are [1, 30]\n        //          * scrollTop = 10 => visible lines are [1, 31] (with lines 1 and 31 partially visible)\n        //          * scrollTop = 20 => visible lines are [2, 31]\n        //  b) whitespace gaps might make their way in the viewport (which results in a decrease in the visible line count)\n        //  c) we could be in the scroll beyond last line case (which also results in a decrease in the visible line count, down to possibly only one line being visible)\n        // We must first establish a desirable slider height.\n        let sliderHeight;\n        if (viewportContainsWhitespaceGaps && viewportEndLineNumber !== lineCount) {\n            // case b) from above: there are whitespace gaps in the viewport.\n            // In this case, the height of the slider directly reflects the visible line count.\n            const viewportLineCount = viewportEndLineNumber - viewportStartLineNumber + 1;\n            sliderHeight = Math.floor(viewportLineCount * minimapLineHeight / pixelRatio);\n        }\n        else {\n            // The slider has a stable height\n            const expectedViewportLineCount = viewportHeight / lineHeight;\n            sliderHeight = Math.floor(expectedViewportLineCount * minimapLineHeight / pixelRatio);\n        }\n        const extraLinesAtTheTop = Math.floor(options.paddingTop / lineHeight);\n        let extraLinesAtTheBottom = Math.floor(options.paddingBottom / lineHeight);\n        if (options.scrollBeyondLastLine) {\n            const expectedViewportLineCount = viewportHeight / lineHeight;\n            extraLinesAtTheBottom = Math.max(extraLinesAtTheBottom, expectedViewportLineCount - 1);\n        }\n        let maxMinimapSliderTop;\n        if (extraLinesAtTheBottom > 0) {\n            const expectedViewportLineCount = viewportHeight / lineHeight;\n            // The minimap slider, when dragged all the way down, will contain the last line at its top\n            maxMinimapSliderTop = (extraLinesAtTheTop + lineCount + extraLinesAtTheBottom - expectedViewportLineCount - 1) * minimapLineHeight / pixelRatio;\n        }\n        else {\n            // The minimap slider, when dragged all the way down, will contain the last line at its bottom\n            maxMinimapSliderTop = Math.max(0, (extraLinesAtTheTop + lineCount) * minimapLineHeight / pixelRatio - sliderHeight);\n        }\n        maxMinimapSliderTop = Math.min(options.minimapHeight - sliderHeight, maxMinimapSliderTop);\n        // The slider can move from 0 to `maxMinimapSliderTop`\n        // in the same way `scrollTop` can move from 0 to `scrollHeight` - `viewportHeight`.\n        const computedSliderRatio = (maxMinimapSliderTop) / (scrollHeight - viewportHeight);\n        const sliderTop = (scrollTop * computedSliderRatio);\n        if (minimapLinesFitting >= extraLinesAtTheTop + lineCount + extraLinesAtTheBottom) {\n            // All lines fit in the minimap\n            const sliderNeeded = (maxMinimapSliderTop > 0);\n            return new MinimapLayout(scrollTop, scrollHeight, sliderNeeded, computedSliderRatio, sliderTop, sliderHeight, extraLinesAtTheTop, 1, lineCount);\n        }\n        else {\n            let consideringStartLineNumber;\n            if (viewportStartLineNumber > 1) {\n                consideringStartLineNumber = viewportStartLineNumber + extraLinesAtTheTop;\n            }\n            else {\n                consideringStartLineNumber = Math.max(1, scrollTop / lineHeight);\n            }\n            let topPaddingLineCount;\n            let startLineNumber = Math.max(1, Math.floor(consideringStartLineNumber - sliderTop * pixelRatio / minimapLineHeight));\n            if (startLineNumber < extraLinesAtTheTop) {\n                topPaddingLineCount = extraLinesAtTheTop - startLineNumber + 1;\n                startLineNumber = 1;\n            }\n            else {\n                topPaddingLineCount = 0;\n                startLineNumber = Math.max(1, startLineNumber - extraLinesAtTheTop);\n            }\n            // Avoid flickering caused by a partial viewport start line\n            // by being consistent w.r.t. the previous layout decision\n            if (previousLayout && previousLayout.scrollHeight === scrollHeight) {\n                if (previousLayout.scrollTop > scrollTop) {\n                    // Scrolling up => never increase `startLineNumber`\n                    startLineNumber = Math.min(startLineNumber, previousLayout.startLineNumber);\n                    topPaddingLineCount = Math.max(topPaddingLineCount, previousLayout.topPaddingLineCount);\n                }\n                if (previousLayout.scrollTop < scrollTop) {\n                    // Scrolling down => never decrease `startLineNumber`\n                    startLineNumber = Math.max(startLineNumber, previousLayout.startLineNumber);\n                    topPaddingLineCount = Math.min(topPaddingLineCount, previousLayout.topPaddingLineCount);\n                }\n            }\n            const endLineNumber = Math.min(lineCount, startLineNumber - topPaddingLineCount + minimapLinesFitting - 1);\n            const partialLine = (scrollTop - viewportStartLineNumberVerticalOffset) / lineHeight;\n            let sliderTopAligned;\n            if (scrollTop >= options.paddingTop) {\n                sliderTopAligned = (viewportStartLineNumber - startLineNumber + topPaddingLineCount + partialLine) * minimapLineHeight / pixelRatio;\n            }\n            else {\n                sliderTopAligned = (scrollTop / options.paddingTop) * (topPaddingLineCount + partialLine) * minimapLineHeight / pixelRatio;\n            }\n            return new MinimapLayout(scrollTop, scrollHeight, true, computedSliderRatio, sliderTopAligned, sliderHeight, topPaddingLineCount, startLineNumber, endLineNumber);\n        }\n    }\n}\nclass MinimapLine {\n    constructor(dy) {\n        this.dy = dy;\n    }\n    onContentChanged() {\n        this.dy = -1;\n    }\n    onTokensChanged() {\n        this.dy = -1;\n    }\n}\nMinimapLine.INVALID = new MinimapLine(-1);\nclass RenderData {\n    constructor(renderedLayout, imageData, lines) {\n        this.renderedLayout = renderedLayout;\n        this._imageData = imageData;\n        this._renderedLines = new RenderedLinesCollection(() => MinimapLine.INVALID);\n        this._renderedLines._set(renderedLayout.startLineNumber, lines);\n    }\n    /**\n     * Check if the current RenderData matches accurately the new desired layout and no painting is needed.\n     */\n    linesEquals(layout) {\n        if (!this.scrollEquals(layout)) {\n            return false;\n        }\n        const tmp = this._renderedLines._get();\n        const lines = tmp.lines;\n        for (let i = 0, len = lines.length; i < len; i++) {\n            if (lines[i].dy === -1) {\n                // This line is invalid\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Check if the current RenderData matches the new layout's scroll position\n     */\n    scrollEquals(layout) {\n        return this.renderedLayout.startLineNumber === layout.startLineNumber\n            && this.renderedLayout.endLineNumber === layout.endLineNumber;\n    }\n    _get() {\n        const tmp = this._renderedLines._get();\n        return {\n            imageData: this._imageData,\n            rendLineNumberStart: tmp.rendLineNumberStart,\n            lines: tmp.lines\n        };\n    }\n    onLinesChanged(changeFromLineNumber, changeCount) {\n        return this._renderedLines.onLinesChanged(changeFromLineNumber, changeCount);\n    }\n    onLinesDeleted(deleteFromLineNumber, deleteToLineNumber) {\n        this._renderedLines.onLinesDeleted(deleteFromLineNumber, deleteToLineNumber);\n    }\n    onLinesInserted(insertFromLineNumber, insertToLineNumber) {\n        this._renderedLines.onLinesInserted(insertFromLineNumber, insertToLineNumber);\n    }\n    onTokensChanged(ranges) {\n        return this._renderedLines.onTokensChanged(ranges);\n    }\n}\n/**\n * Some sort of double buffering.\n *\n * Keeps two buffers around that will be rotated for painting.\n * Always gives a buffer that is filled with the background color.\n */\nclass MinimapBuffers {\n    constructor(ctx, WIDTH, HEIGHT, background) {\n        this._backgroundFillData = MinimapBuffers._createBackgroundFillData(WIDTH, HEIGHT, background);\n        this._buffers = [\n            ctx.createImageData(WIDTH, HEIGHT),\n            ctx.createImageData(WIDTH, HEIGHT)\n        ];\n        this._lastUsedBuffer = 0;\n    }\n    getBuffer() {\n        // rotate buffers\n        this._lastUsedBuffer = 1 - this._lastUsedBuffer;\n        const result = this._buffers[this._lastUsedBuffer];\n        // fill with background color\n        result.data.set(this._backgroundFillData);\n        return result;\n    }\n    static _createBackgroundFillData(WIDTH, HEIGHT, background) {\n        const backgroundR = background.r;\n        const backgroundG = background.g;\n        const backgroundB = background.b;\n        const backgroundA = background.a;\n        const result = new Uint8ClampedArray(WIDTH * HEIGHT * 4);\n        let offset = 0;\n        for (let i = 0; i < HEIGHT; i++) {\n            for (let j = 0; j < WIDTH; j++) {\n                result[offset] = backgroundR;\n                result[offset + 1] = backgroundG;\n                result[offset + 2] = backgroundB;\n                result[offset + 3] = backgroundA;\n                offset += 4;\n            }\n        }\n        return result;\n    }\n}\nclass MinimapSamplingState {\n    static compute(options, viewLineCount, oldSamplingState) {\n        if (options.renderMinimap === 0 /* RenderMinimap.None */ || !options.isSampling) {\n            return [null, []];\n        }\n        // ratio is intentionally not part of the layout to avoid the layout changing all the time\n        // so we need to recompute it again...\n        const { minimapLineCount } = EditorLayoutInfoComputer.computeContainedMinimapLineCount({\n            viewLineCount: viewLineCount,\n            scrollBeyondLastLine: options.scrollBeyondLastLine,\n            paddingTop: options.paddingTop,\n            paddingBottom: options.paddingBottom,\n            height: options.editorHeight,\n            lineHeight: options.lineHeight,\n            pixelRatio: options.pixelRatio\n        });\n        const ratio = viewLineCount / minimapLineCount;\n        const halfRatio = ratio / 2;\n        if (!oldSamplingState || oldSamplingState.minimapLines.length === 0) {\n            const result = [];\n            result[0] = 1;\n            if (minimapLineCount > 1) {\n                for (let i = 0, lastIndex = minimapLineCount - 1; i < lastIndex; i++) {\n                    result[i] = Math.round(i * ratio + halfRatio);\n                }\n                result[minimapLineCount - 1] = viewLineCount;\n            }\n            return [new MinimapSamplingState(ratio, result), []];\n        }\n        const oldMinimapLines = oldSamplingState.minimapLines;\n        const oldLength = oldMinimapLines.length;\n        const result = [];\n        let oldIndex = 0;\n        let oldDeltaLineCount = 0;\n        let minViewLineNumber = 1;\n        const MAX_EVENT_COUNT = 10; // generate at most 10 events, if there are more than 10 changes, just flush all previous data\n        let events = [];\n        let lastEvent = null;\n        for (let i = 0; i < minimapLineCount; i++) {\n            const fromViewLineNumber = Math.max(minViewLineNumber, Math.round(i * ratio));\n            const toViewLineNumber = Math.max(fromViewLineNumber, Math.round((i + 1) * ratio));\n            while (oldIndex < oldLength && oldMinimapLines[oldIndex] < fromViewLineNumber) {\n                if (events.length < MAX_EVENT_COUNT) {\n                    const oldMinimapLineNumber = oldIndex + 1 + oldDeltaLineCount;\n                    if (lastEvent && lastEvent.type === 'deleted' && lastEvent._oldIndex === oldIndex - 1) {\n                        lastEvent.deleteToLineNumber++;\n                    }\n                    else {\n                        lastEvent = { type: 'deleted', _oldIndex: oldIndex, deleteFromLineNumber: oldMinimapLineNumber, deleteToLineNumber: oldMinimapLineNumber };\n                        events.push(lastEvent);\n                    }\n                    oldDeltaLineCount--;\n                }\n                oldIndex++;\n            }\n            let selectedViewLineNumber;\n            if (oldIndex < oldLength && oldMinimapLines[oldIndex] <= toViewLineNumber) {\n                // reuse the old sampled line\n                selectedViewLineNumber = oldMinimapLines[oldIndex];\n                oldIndex++;\n            }\n            else {\n                if (i === 0) {\n                    selectedViewLineNumber = 1;\n                }\n                else if (i + 1 === minimapLineCount) {\n                    selectedViewLineNumber = viewLineCount;\n                }\n                else {\n                    selectedViewLineNumber = Math.round(i * ratio + halfRatio);\n                }\n                if (events.length < MAX_EVENT_COUNT) {\n                    const oldMinimapLineNumber = oldIndex + 1 + oldDeltaLineCount;\n                    if (lastEvent && lastEvent.type === 'inserted' && lastEvent._i === i - 1) {\n                        lastEvent.insertToLineNumber++;\n                    }\n                    else {\n                        lastEvent = { type: 'inserted', _i: i, insertFromLineNumber: oldMinimapLineNumber, insertToLineNumber: oldMinimapLineNumber };\n                        events.push(lastEvent);\n                    }\n                    oldDeltaLineCount++;\n                }\n            }\n            result[i] = selectedViewLineNumber;\n            minViewLineNumber = selectedViewLineNumber;\n        }\n        if (events.length < MAX_EVENT_COUNT) {\n            while (oldIndex < oldLength) {\n                const oldMinimapLineNumber = oldIndex + 1 + oldDeltaLineCount;\n                if (lastEvent && lastEvent.type === 'deleted' && lastEvent._oldIndex === oldIndex - 1) {\n                    lastEvent.deleteToLineNumber++;\n                }\n                else {\n                    lastEvent = { type: 'deleted', _oldIndex: oldIndex, deleteFromLineNumber: oldMinimapLineNumber, deleteToLineNumber: oldMinimapLineNumber };\n                    events.push(lastEvent);\n                }\n                oldDeltaLineCount--;\n                oldIndex++;\n            }\n        }\n        else {\n            // too many events, just give up\n            events = [{ type: 'flush' }];\n        }\n        return [new MinimapSamplingState(ratio, result), events];\n    }\n    constructor(samplingRatio, minimapLines) {\n        this.samplingRatio = samplingRatio;\n        this.minimapLines = minimapLines;\n    }\n    modelLineToMinimapLine(lineNumber) {\n        return Math.min(this.minimapLines.length, Math.max(1, Math.round(lineNumber / this.samplingRatio)));\n    }\n    /**\n     * Will return null if the model line ranges are not intersecting with a sampled model line.\n     */\n    modelLineRangeToMinimapLineRange(fromLineNumber, toLineNumber) {\n        let fromLineIndex = this.modelLineToMinimapLine(fromLineNumber) - 1;\n        while (fromLineIndex > 0 && this.minimapLines[fromLineIndex - 1] >= fromLineNumber) {\n            fromLineIndex--;\n        }\n        let toLineIndex = this.modelLineToMinimapLine(toLineNumber) - 1;\n        while (toLineIndex + 1 < this.minimapLines.length && this.minimapLines[toLineIndex + 1] <= toLineNumber) {\n            toLineIndex++;\n        }\n        if (fromLineIndex === toLineIndex) {\n            const sampledLineNumber = this.minimapLines[fromLineIndex];\n            if (sampledLineNumber < fromLineNumber || sampledLineNumber > toLineNumber) {\n                // This line is not part of the sampled lines ==> nothing to do\n                return null;\n            }\n        }\n        return [fromLineIndex + 1, toLineIndex + 1];\n    }\n    /**\n     * Will always return a range, even if it is not intersecting with a sampled model line.\n     */\n    decorationLineRangeToMinimapLineRange(startLineNumber, endLineNumber) {\n        let minimapLineStart = this.modelLineToMinimapLine(startLineNumber);\n        let minimapLineEnd = this.modelLineToMinimapLine(endLineNumber);\n        if (startLineNumber !== endLineNumber && minimapLineEnd === minimapLineStart) {\n            if (minimapLineEnd === this.minimapLines.length) {\n                if (minimapLineStart > 1) {\n                    minimapLineStart--;\n                }\n            }\n            else {\n                minimapLineEnd++;\n            }\n        }\n        return [minimapLineStart, minimapLineEnd];\n    }\n    onLinesDeleted(e) {\n        // have the mapping be sticky\n        const deletedLineCount = e.toLineNumber - e.fromLineNumber + 1;\n        let changeStartIndex = this.minimapLines.length;\n        let changeEndIndex = 0;\n        for (let i = this.minimapLines.length - 1; i >= 0; i--) {\n            if (this.minimapLines[i] < e.fromLineNumber) {\n                break;\n            }\n            if (this.minimapLines[i] <= e.toLineNumber) {\n                // this line got deleted => move to previous available\n                this.minimapLines[i] = Math.max(1, e.fromLineNumber - 1);\n                changeStartIndex = Math.min(changeStartIndex, i);\n                changeEndIndex = Math.max(changeEndIndex, i);\n            }\n            else {\n                this.minimapLines[i] -= deletedLineCount;\n            }\n        }\n        return [changeStartIndex, changeEndIndex];\n    }\n    onLinesInserted(e) {\n        // have the mapping be sticky\n        const insertedLineCount = e.toLineNumber - e.fromLineNumber + 1;\n        for (let i = this.minimapLines.length - 1; i >= 0; i--) {\n            if (this.minimapLines[i] < e.fromLineNumber) {\n                break;\n            }\n            this.minimapLines[i] += insertedLineCount;\n        }\n    }\n}\nexport class Minimap extends ViewPart {\n    constructor(context) {\n        super(context);\n        this.tokensColorTracker = MinimapTokensColorTracker.getInstance();\n        this._selections = [];\n        this._minimapSelections = null;\n        this.options = new MinimapOptions(this._context.configuration, this._context.theme, this.tokensColorTracker);\n        const [samplingState,] = MinimapSamplingState.compute(this.options, this._context.viewModel.getLineCount(), null);\n        this._samplingState = samplingState;\n        this._shouldCheckSampling = false;\n        this._actual = new InnerMinimap(context.theme, this);\n    }\n    dispose() {\n        this._actual.dispose();\n        super.dispose();\n    }\n    getDomNode() {\n        return this._actual.getDomNode();\n    }\n    _onOptionsMaybeChanged() {\n        const opts = new MinimapOptions(this._context.configuration, this._context.theme, this.tokensColorTracker);\n        if (this.options.equals(opts)) {\n            return false;\n        }\n        this.options = opts;\n        this._recreateLineSampling();\n        this._actual.onDidChangeOptions();\n        return true;\n    }\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        return this._onOptionsMaybeChanged();\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections;\n        this._minimapSelections = null;\n        return this._actual.onSelectionChanged();\n    }\n    onDecorationsChanged(e) {\n        if (e.affectsMinimap) {\n            return this._actual.onDecorationsChanged();\n        }\n        return false;\n    }\n    onFlushed(e) {\n        if (this._samplingState) {\n            this._shouldCheckSampling = true;\n        }\n        return this._actual.onFlushed();\n    }\n    onLinesChanged(e) {\n        if (this._samplingState) {\n            const minimapLineRange = this._samplingState.modelLineRangeToMinimapLineRange(e.fromLineNumber, e.fromLineNumber + e.count - 1);\n            if (minimapLineRange) {\n                return this._actual.onLinesChanged(minimapLineRange[0], minimapLineRange[1] - minimapLineRange[0] + 1);\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return this._actual.onLinesChanged(e.fromLineNumber, e.count);\n        }\n    }\n    onLinesDeleted(e) {\n        if (this._samplingState) {\n            const [changeStartIndex, changeEndIndex] = this._samplingState.onLinesDeleted(e);\n            if (changeStartIndex <= changeEndIndex) {\n                this._actual.onLinesChanged(changeStartIndex + 1, changeEndIndex - changeStartIndex + 1);\n            }\n            this._shouldCheckSampling = true;\n            return true;\n        }\n        else {\n            return this._actual.onLinesDeleted(e.fromLineNumber, e.toLineNumber);\n        }\n    }\n    onLinesInserted(e) {\n        if (this._samplingState) {\n            this._samplingState.onLinesInserted(e);\n            this._shouldCheckSampling = true;\n            return true;\n        }\n        else {\n            return this._actual.onLinesInserted(e.fromLineNumber, e.toLineNumber);\n        }\n    }\n    onScrollChanged(e) {\n        return this._actual.onScrollChanged();\n    }\n    onThemeChanged(e) {\n        this._actual.onThemeChanged();\n        this._onOptionsMaybeChanged();\n        return true;\n    }\n    onTokensChanged(e) {\n        if (this._samplingState) {\n            const ranges = [];\n            for (const range of e.ranges) {\n                const minimapLineRange = this._samplingState.modelLineRangeToMinimapLineRange(range.fromLineNumber, range.toLineNumber);\n                if (minimapLineRange) {\n                    ranges.push({ fromLineNumber: minimapLineRange[0], toLineNumber: minimapLineRange[1] });\n                }\n            }\n            if (ranges.length) {\n                return this._actual.onTokensChanged(ranges);\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return this._actual.onTokensChanged(e.ranges);\n        }\n    }\n    onTokensColorsChanged(e) {\n        this._onOptionsMaybeChanged();\n        return this._actual.onTokensColorsChanged();\n    }\n    onZonesChanged(e) {\n        return this._actual.onZonesChanged();\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        if (this._shouldCheckSampling) {\n            this._shouldCheckSampling = false;\n            this._recreateLineSampling();\n        }\n    }\n    render(ctx) {\n        let viewportStartLineNumber = ctx.visibleRange.startLineNumber;\n        let viewportEndLineNumber = ctx.visibleRange.endLineNumber;\n        if (this._samplingState) {\n            viewportStartLineNumber = this._samplingState.modelLineToMinimapLine(viewportStartLineNumber);\n            viewportEndLineNumber = this._samplingState.modelLineToMinimapLine(viewportEndLineNumber);\n        }\n        const minimapCtx = {\n            viewportContainsWhitespaceGaps: (ctx.viewportData.whitespaceViewportData.length > 0),\n            scrollWidth: ctx.scrollWidth,\n            scrollHeight: ctx.scrollHeight,\n            viewportStartLineNumber: viewportStartLineNumber,\n            viewportEndLineNumber: viewportEndLineNumber,\n            viewportStartLineNumberVerticalOffset: ctx.getVerticalOffsetForLineNumber(viewportStartLineNumber),\n            scrollTop: ctx.scrollTop,\n            scrollLeft: ctx.scrollLeft,\n            viewportWidth: ctx.viewportWidth,\n            viewportHeight: ctx.viewportHeight,\n        };\n        this._actual.render(minimapCtx);\n    }\n    //#region IMinimapModel\n    _recreateLineSampling() {\n        this._minimapSelections = null;\n        const wasSampling = Boolean(this._samplingState);\n        const [samplingState, events] = MinimapSamplingState.compute(this.options, this._context.viewModel.getLineCount(), this._samplingState);\n        this._samplingState = samplingState;\n        if (wasSampling && this._samplingState) {\n            // was sampling, is sampling\n            for (const event of events) {\n                switch (event.type) {\n                    case 'deleted':\n                        this._actual.onLinesDeleted(event.deleteFromLineNumber, event.deleteToLineNumber);\n                        break;\n                    case 'inserted':\n                        this._actual.onLinesInserted(event.insertFromLineNumber, event.insertToLineNumber);\n                        break;\n                    case 'flush':\n                        this._actual.onFlushed();\n                        break;\n                }\n            }\n        }\n    }\n    getLineCount() {\n        if (this._samplingState) {\n            return this._samplingState.minimapLines.length;\n        }\n        return this._context.viewModel.getLineCount();\n    }\n    getRealLineCount() {\n        return this._context.viewModel.getLineCount();\n    }\n    getLineContent(lineNumber) {\n        if (this._samplingState) {\n            return this._context.viewModel.getLineContent(this._samplingState.minimapLines[lineNumber - 1]);\n        }\n        return this._context.viewModel.getLineContent(lineNumber);\n    }\n    getLineMaxColumn(lineNumber) {\n        if (this._samplingState) {\n            return this._context.viewModel.getLineMaxColumn(this._samplingState.minimapLines[lineNumber - 1]);\n        }\n        return this._context.viewModel.getLineMaxColumn(lineNumber);\n    }\n    getMinimapLinesRenderingData(startLineNumber, endLineNumber, needed) {\n        if (this._samplingState) {\n            const result = [];\n            for (let lineIndex = 0, lineCount = endLineNumber - startLineNumber + 1; lineIndex < lineCount; lineIndex++) {\n                if (needed[lineIndex]) {\n                    result[lineIndex] = this._context.viewModel.getViewLineData(this._samplingState.minimapLines[startLineNumber + lineIndex - 1]);\n                }\n                else {\n                    result[lineIndex] = null;\n                }\n            }\n            return result;\n        }\n        return this._context.viewModel.getMinimapLinesRenderingData(startLineNumber, endLineNumber, needed).data;\n    }\n    getSelections() {\n        if (this._minimapSelections === null) {\n            if (this._samplingState) {\n                this._minimapSelections = [];\n                for (const selection of this._selections) {\n                    const [minimapLineStart, minimapLineEnd] = this._samplingState.decorationLineRangeToMinimapLineRange(selection.startLineNumber, selection.endLineNumber);\n                    this._minimapSelections.push(new Selection(minimapLineStart, selection.startColumn, minimapLineEnd, selection.endColumn));\n                }\n            }\n            else {\n                this._minimapSelections = this._selections;\n            }\n        }\n        return this._minimapSelections;\n    }\n    getMinimapDecorationsInViewport(startLineNumber, endLineNumber) {\n        let visibleRange;\n        if (this._samplingState) {\n            const modelStartLineNumber = this._samplingState.minimapLines[startLineNumber - 1];\n            const modelEndLineNumber = this._samplingState.minimapLines[endLineNumber - 1];\n            visibleRange = new Range(modelStartLineNumber, 1, modelEndLineNumber, this._context.viewModel.getLineMaxColumn(modelEndLineNumber));\n        }\n        else {\n            visibleRange = new Range(startLineNumber, 1, endLineNumber, this._context.viewModel.getLineMaxColumn(endLineNumber));\n        }\n        const decorations = this._context.viewModel.getMinimapDecorationsInRange(visibleRange);\n        if (this._samplingState) {\n            const result = [];\n            for (const decoration of decorations) {\n                if (!decoration.options.minimap) {\n                    continue;\n                }\n                const range = decoration.range;\n                const minimapStartLineNumber = this._samplingState.modelLineToMinimapLine(range.startLineNumber);\n                const minimapEndLineNumber = this._samplingState.modelLineToMinimapLine(range.endLineNumber);\n                result.push(new ViewModelDecoration(new Range(minimapStartLineNumber, range.startColumn, minimapEndLineNumber, range.endColumn), decoration.options));\n            }\n            return result;\n        }\n        return decorations;\n    }\n    getOptions() {\n        return this._context.viewModel.model.getOptions();\n    }\n    revealLineNumber(lineNumber) {\n        if (this._samplingState) {\n            lineNumber = this._samplingState.minimapLines[lineNumber - 1];\n        }\n        this._context.viewModel.revealRange('mouse', false, new Range(lineNumber, 1, lineNumber, 1), 1 /* viewEvents.VerticalRevealType.Center */, 0 /* ScrollType.Smooth */);\n    }\n    setScrollTop(scrollTop) {\n        this._context.viewModel.viewLayout.setScrollPosition({\n            scrollTop: scrollTop\n        }, 1 /* ScrollType.Immediate */);\n    }\n}\nclass InnerMinimap extends Disposable {\n    constructor(theme, model) {\n        super();\n        this._renderDecorations = false;\n        this._gestureInProgress = false;\n        this._theme = theme;\n        this._model = model;\n        this._lastRenderData = null;\n        this._buffers = null;\n        this._selectionColor = this._theme.getColor(minimapSelection);\n        this._domNode = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this._domNode, 8 /* PartFingerprint.Minimap */);\n        this._domNode.setClassName(this._getMinimapDomNodeClassName());\n        this._domNode.setPosition('absolute');\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        this._shadow = createFastDomNode(document.createElement('div'));\n        this._shadow.setClassName('minimap-shadow-hidden');\n        this._domNode.appendChild(this._shadow);\n        this._canvas = createFastDomNode(document.createElement('canvas'));\n        this._canvas.setPosition('absolute');\n        this._canvas.setLeft(0);\n        this._domNode.appendChild(this._canvas);\n        this._decorationsCanvas = createFastDomNode(document.createElement('canvas'));\n        this._decorationsCanvas.setPosition('absolute');\n        this._decorationsCanvas.setClassName('minimap-decorations-layer');\n        this._decorationsCanvas.setLeft(0);\n        this._domNode.appendChild(this._decorationsCanvas);\n        this._slider = createFastDomNode(document.createElement('div'));\n        this._slider.setPosition('absolute');\n        this._slider.setClassName('minimap-slider');\n        this._slider.setLayerHinting(true);\n        this._slider.setContain('strict');\n        this._domNode.appendChild(this._slider);\n        this._sliderHorizontal = createFastDomNode(document.createElement('div'));\n        this._sliderHorizontal.setPosition('absolute');\n        this._sliderHorizontal.setClassName('minimap-slider-horizontal');\n        this._slider.appendChild(this._sliderHorizontal);\n        this._applyLayout();\n        this._pointerDownListener = dom.addStandardDisposableListener(this._domNode.domNode, dom.EventType.POINTER_DOWN, (e) => {\n            e.preventDefault();\n            const renderMinimap = this._model.options.renderMinimap;\n            if (renderMinimap === 0 /* RenderMinimap.None */) {\n                return;\n            }\n            if (!this._lastRenderData) {\n                return;\n            }\n            if (this._model.options.size !== 'proportional') {\n                if (e.button === 0 && this._lastRenderData) {\n                    // pretend the click occurred in the center of the slider\n                    const position = dom.getDomNodePagePosition(this._slider.domNode);\n                    const initialPosY = position.top + position.height / 2;\n                    this._startSliderDragging(e, initialPosY, this._lastRenderData.renderedLayout);\n                }\n                return;\n            }\n            const minimapLineHeight = this._model.options.minimapLineHeight;\n            const internalOffsetY = (this._model.options.canvasInnerHeight / this._model.options.canvasOuterHeight) * e.offsetY;\n            const lineIndex = Math.floor(internalOffsetY / minimapLineHeight);\n            let lineNumber = lineIndex + this._lastRenderData.renderedLayout.startLineNumber - this._lastRenderData.renderedLayout.topPaddingLineCount;\n            lineNumber = Math.min(lineNumber, this._model.getLineCount());\n            this._model.revealLineNumber(lineNumber);\n        });\n        this._sliderPointerMoveMonitor = new GlobalPointerMoveMonitor();\n        this._sliderPointerDownListener = dom.addStandardDisposableListener(this._slider.domNode, dom.EventType.POINTER_DOWN, (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            if (e.button === 0 && this._lastRenderData) {\n                this._startSliderDragging(e, e.pageY, this._lastRenderData.renderedLayout);\n            }\n        });\n        this._gestureDisposable = Gesture.addTarget(this._domNode.domNode);\n        this._sliderTouchStartListener = dom.addDisposableListener(this._domNode.domNode, EventType.Start, (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            if (this._lastRenderData) {\n                this._slider.toggleClassName('active', true);\n                this._gestureInProgress = true;\n                this.scrollDueToTouchEvent(e);\n            }\n        }, { passive: false });\n        this._sliderTouchMoveListener = dom.addDisposableListener(this._domNode.domNode, EventType.Change, (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            if (this._lastRenderData && this._gestureInProgress) {\n                this.scrollDueToTouchEvent(e);\n            }\n        }, { passive: false });\n        this._sliderTouchEndListener = dom.addStandardDisposableListener(this._domNode.domNode, EventType.End, (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            this._gestureInProgress = false;\n            this._slider.toggleClassName('active', false);\n        });\n    }\n    _startSliderDragging(e, initialPosY, initialSliderState) {\n        if (!e.target || !(e.target instanceof Element)) {\n            return;\n        }\n        const initialPosX = e.pageX;\n        this._slider.toggleClassName('active', true);\n        const handlePointerMove = (posy, posx) => {\n            const minimapPosition = dom.getDomNodePagePosition(this._domNode.domNode);\n            const pointerOrthogonalDelta = Math.min(Math.abs(posx - initialPosX), Math.abs(posx - minimapPosition.left), Math.abs(posx - minimapPosition.left - minimapPosition.width));\n            if (platform.isWindows && pointerOrthogonalDelta > POINTER_DRAG_RESET_DISTANCE) {\n                // The pointer has wondered away from the scrollbar => reset dragging\n                this._model.setScrollTop(initialSliderState.scrollTop);\n                return;\n            }\n            const pointerDelta = posy - initialPosY;\n            this._model.setScrollTop(initialSliderState.getDesiredScrollTopFromDelta(pointerDelta));\n        };\n        if (e.pageY !== initialPosY) {\n            handlePointerMove(e.pageY, initialPosX);\n        }\n        this._sliderPointerMoveMonitor.startMonitoring(e.target, e.pointerId, e.buttons, pointerMoveData => handlePointerMove(pointerMoveData.pageY, pointerMoveData.pageX), () => {\n            this._slider.toggleClassName('active', false);\n        });\n    }\n    scrollDueToTouchEvent(touch) {\n        const startY = this._domNode.domNode.getBoundingClientRect().top;\n        const scrollTop = this._lastRenderData.renderedLayout.getDesiredScrollTopFromTouchLocation(touch.pageY - startY);\n        this._model.setScrollTop(scrollTop);\n    }\n    dispose() {\n        this._pointerDownListener.dispose();\n        this._sliderPointerMoveMonitor.dispose();\n        this._sliderPointerDownListener.dispose();\n        this._gestureDisposable.dispose();\n        this._sliderTouchStartListener.dispose();\n        this._sliderTouchMoveListener.dispose();\n        this._sliderTouchEndListener.dispose();\n        super.dispose();\n    }\n    _getMinimapDomNodeClassName() {\n        const class_ = ['minimap'];\n        if (this._model.options.showSlider === 'always') {\n            class_.push('slider-always');\n        }\n        else {\n            class_.push('slider-mouseover');\n        }\n        if (this._model.options.autohide) {\n            class_.push('autohide');\n        }\n        return class_.join(' ');\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    _applyLayout() {\n        this._domNode.setLeft(this._model.options.minimapLeft);\n        this._domNode.setWidth(this._model.options.minimapWidth);\n        this._domNode.setHeight(this._model.options.minimapHeight);\n        this._shadow.setHeight(this._model.options.minimapHeight);\n        this._canvas.setWidth(this._model.options.canvasOuterWidth);\n        this._canvas.setHeight(this._model.options.canvasOuterHeight);\n        this._canvas.domNode.width = this._model.options.canvasInnerWidth;\n        this._canvas.domNode.height = this._model.options.canvasInnerHeight;\n        this._decorationsCanvas.setWidth(this._model.options.canvasOuterWidth);\n        this._decorationsCanvas.setHeight(this._model.options.canvasOuterHeight);\n        this._decorationsCanvas.domNode.width = this._model.options.canvasInnerWidth;\n        this._decorationsCanvas.domNode.height = this._model.options.canvasInnerHeight;\n        this._slider.setWidth(this._model.options.minimapWidth);\n    }\n    _getBuffer() {\n        if (!this._buffers) {\n            if (this._model.options.canvasInnerWidth > 0 && this._model.options.canvasInnerHeight > 0) {\n                this._buffers = new MinimapBuffers(this._canvas.domNode.getContext('2d'), this._model.options.canvasInnerWidth, this._model.options.canvasInnerHeight, this._model.options.backgroundColor);\n            }\n        }\n        return this._buffers ? this._buffers.getBuffer() : null;\n    }\n    // ---- begin view event handlers\n    onDidChangeOptions() {\n        this._lastRenderData = null;\n        this._buffers = null;\n        this._applyLayout();\n        this._domNode.setClassName(this._getMinimapDomNodeClassName());\n    }\n    onSelectionChanged() {\n        this._renderDecorations = true;\n        return true;\n    }\n    onDecorationsChanged() {\n        this._renderDecorations = true;\n        return true;\n    }\n    onFlushed() {\n        this._lastRenderData = null;\n        return true;\n    }\n    onLinesChanged(changeFromLineNumber, changeCount) {\n        if (this._lastRenderData) {\n            return this._lastRenderData.onLinesChanged(changeFromLineNumber, changeCount);\n        }\n        return false;\n    }\n    onLinesDeleted(deleteFromLineNumber, deleteToLineNumber) {\n        var _a;\n        (_a = this._lastRenderData) === null || _a === void 0 ? void 0 : _a.onLinesDeleted(deleteFromLineNumber, deleteToLineNumber);\n        return true;\n    }\n    onLinesInserted(insertFromLineNumber, insertToLineNumber) {\n        var _a;\n        (_a = this._lastRenderData) === null || _a === void 0 ? void 0 : _a.onLinesInserted(insertFromLineNumber, insertToLineNumber);\n        return true;\n    }\n    onScrollChanged() {\n        this._renderDecorations = true;\n        return true;\n    }\n    onThemeChanged() {\n        this._selectionColor = this._theme.getColor(minimapSelection);\n        this._renderDecorations = true;\n        return true;\n    }\n    onTokensChanged(ranges) {\n        if (this._lastRenderData) {\n            return this._lastRenderData.onTokensChanged(ranges);\n        }\n        return false;\n    }\n    onTokensColorsChanged() {\n        this._lastRenderData = null;\n        this._buffers = null;\n        return true;\n    }\n    onZonesChanged() {\n        this._lastRenderData = null;\n        return true;\n    }\n    // --- end event handlers\n    render(renderingCtx) {\n        const renderMinimap = this._model.options.renderMinimap;\n        if (renderMinimap === 0 /* RenderMinimap.None */) {\n            this._shadow.setClassName('minimap-shadow-hidden');\n            this._sliderHorizontal.setWidth(0);\n            this._sliderHorizontal.setHeight(0);\n            return;\n        }\n        if (renderingCtx.scrollLeft + renderingCtx.viewportWidth >= renderingCtx.scrollWidth) {\n            this._shadow.setClassName('minimap-shadow-hidden');\n        }\n        else {\n            this._shadow.setClassName('minimap-shadow-visible');\n        }\n        const layout = MinimapLayout.create(this._model.options, renderingCtx.viewportStartLineNumber, renderingCtx.viewportEndLineNumber, renderingCtx.viewportStartLineNumberVerticalOffset, renderingCtx.viewportHeight, renderingCtx.viewportContainsWhitespaceGaps, this._model.getLineCount(), this._model.getRealLineCount(), renderingCtx.scrollTop, renderingCtx.scrollHeight, this._lastRenderData ? this._lastRenderData.renderedLayout : null);\n        this._slider.setDisplay(layout.sliderNeeded ? 'block' : 'none');\n        this._slider.setTop(layout.sliderTop);\n        this._slider.setHeight(layout.sliderHeight);\n        // Compute horizontal slider coordinates\n        this._sliderHorizontal.setLeft(0);\n        this._sliderHorizontal.setWidth(this._model.options.minimapWidth);\n        this._sliderHorizontal.setTop(0);\n        this._sliderHorizontal.setHeight(layout.sliderHeight);\n        this.renderDecorations(layout);\n        this._lastRenderData = this.renderLines(layout);\n    }\n    renderDecorations(layout) {\n        if (this._renderDecorations) {\n            this._renderDecorations = false;\n            const selections = this._model.getSelections();\n            selections.sort(Range.compareRangesUsingStarts);\n            const decorations = this._model.getMinimapDecorationsInViewport(layout.startLineNumber, layout.endLineNumber);\n            decorations.sort((a, b) => (a.options.zIndex || 0) - (b.options.zIndex || 0));\n            const { canvasInnerWidth, canvasInnerHeight } = this._model.options;\n            const minimapLineHeight = this._model.options.minimapLineHeight;\n            const minimapCharWidth = this._model.options.minimapCharWidth;\n            const tabSize = this._model.getOptions().tabSize;\n            const canvasContext = this._decorationsCanvas.domNode.getContext('2d');\n            canvasContext.clearRect(0, 0, canvasInnerWidth, canvasInnerHeight);\n            // We first need to render line highlights and then render decorations on top of those.\n            // But we need to pick a single color for each line, and use that as a line highlight.\n            // This needs to be the color of the decoration with the highest `zIndex`, but priority\n            // is given to the selection.\n            const highlightedLines = new ContiguousLineMap(layout.startLineNumber, layout.endLineNumber, false);\n            this._renderSelectionLineHighlights(canvasContext, selections, highlightedLines, layout, minimapLineHeight);\n            this._renderDecorationsLineHighlights(canvasContext, decorations, highlightedLines, layout, minimapLineHeight);\n            const lineOffsetMap = new ContiguousLineMap(layout.startLineNumber, layout.endLineNumber, null);\n            this._renderSelectionsHighlights(canvasContext, selections, lineOffsetMap, layout, minimapLineHeight, tabSize, minimapCharWidth, canvasInnerWidth);\n            this._renderDecorationsHighlights(canvasContext, decorations, lineOffsetMap, layout, minimapLineHeight, tabSize, minimapCharWidth, canvasInnerWidth);\n        }\n    }\n    _renderSelectionLineHighlights(canvasContext, selections, highlightedLines, layout, minimapLineHeight) {\n        if (!this._selectionColor || this._selectionColor.isTransparent()) {\n            return;\n        }\n        canvasContext.fillStyle = this._selectionColor.transparent(0.5).toString();\n        let y1 = 0;\n        let y2 = 0;\n        for (const selection of selections) {\n            const intersection = layout.intersectWithViewport(selection);\n            if (!intersection) {\n                // entirely outside minimap's viewport\n                continue;\n            }\n            const [startLineNumber, endLineNumber] = intersection;\n            for (let line = startLineNumber; line <= endLineNumber; line++) {\n                highlightedLines.set(line, true);\n            }\n            const yy1 = layout.getYForLineNumber(startLineNumber, minimapLineHeight);\n            const yy2 = layout.getYForLineNumber(endLineNumber, minimapLineHeight);\n            if (y2 >= yy1) {\n                // merge into previous\n                y2 = yy2;\n            }\n            else {\n                if (y2 > y1) {\n                    // flush\n                    canvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y1, canvasContext.canvas.width, y2 - y1);\n                }\n                y1 = yy1;\n                y2 = yy2;\n            }\n        }\n        if (y2 > y1) {\n            // flush\n            canvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y1, canvasContext.canvas.width, y2 - y1);\n        }\n    }\n    _renderDecorationsLineHighlights(canvasContext, decorations, highlightedLines, layout, minimapLineHeight) {\n        const highlightColors = new Map();\n        // Loop backwards to hit first decorations with higher `zIndex`\n        for (let i = decorations.length - 1; i >= 0; i--) {\n            const decoration = decorations[i];\n            const minimapOptions = decoration.options.minimap;\n            if (!minimapOptions || minimapOptions.position !== MinimapPosition.Inline) {\n                continue;\n            }\n            const intersection = layout.intersectWithViewport(decoration.range);\n            if (!intersection) {\n                // entirely outside minimap's viewport\n                continue;\n            }\n            const [startLineNumber, endLineNumber] = intersection;\n            const decorationColor = minimapOptions.getColor(this._theme.value);\n            if (!decorationColor || decorationColor.isTransparent()) {\n                continue;\n            }\n            let highlightColor = highlightColors.get(decorationColor.toString());\n            if (!highlightColor) {\n                highlightColor = decorationColor.transparent(0.5).toString();\n                highlightColors.set(decorationColor.toString(), highlightColor);\n            }\n            canvasContext.fillStyle = highlightColor;\n            for (let line = startLineNumber; line <= endLineNumber; line++) {\n                if (highlightedLines.has(line)) {\n                    continue;\n                }\n                highlightedLines.set(line, true);\n                const y = layout.getYForLineNumber(startLineNumber, minimapLineHeight);\n                canvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y, canvasContext.canvas.width, minimapLineHeight);\n            }\n        }\n    }\n    _renderSelectionsHighlights(canvasContext, selections, lineOffsetMap, layout, lineHeight, tabSize, characterWidth, canvasInnerWidth) {\n        if (!this._selectionColor || this._selectionColor.isTransparent()) {\n            return;\n        }\n        for (const selection of selections) {\n            const intersection = layout.intersectWithViewport(selection);\n            if (!intersection) {\n                // entirely outside minimap's viewport\n                continue;\n            }\n            const [startLineNumber, endLineNumber] = intersection;\n            for (let line = startLineNumber; line <= endLineNumber; line++) {\n                this.renderDecorationOnLine(canvasContext, lineOffsetMap, selection, this._selectionColor, layout, line, lineHeight, lineHeight, tabSize, characterWidth, canvasInnerWidth);\n            }\n        }\n    }\n    _renderDecorationsHighlights(canvasContext, decorations, lineOffsetMap, layout, minimapLineHeight, tabSize, characterWidth, canvasInnerWidth) {\n        // Loop forwards to hit first decorations with lower `zIndex`\n        for (const decoration of decorations) {\n            const minimapOptions = decoration.options.minimap;\n            if (!minimapOptions) {\n                continue;\n            }\n            const intersection = layout.intersectWithViewport(decoration.range);\n            if (!intersection) {\n                // entirely outside minimap's viewport\n                continue;\n            }\n            const [startLineNumber, endLineNumber] = intersection;\n            const decorationColor = minimapOptions.getColor(this._theme.value);\n            if (!decorationColor || decorationColor.isTransparent()) {\n                continue;\n            }\n            for (let line = startLineNumber; line <= endLineNumber; line++) {\n                switch (minimapOptions.position) {\n                    case MinimapPosition.Inline:\n                        this.renderDecorationOnLine(canvasContext, lineOffsetMap, decoration.range, decorationColor, layout, line, minimapLineHeight, minimapLineHeight, tabSize, characterWidth, canvasInnerWidth);\n                        continue;\n                    case MinimapPosition.Gutter: {\n                        const y = layout.getYForLineNumber(line, minimapLineHeight);\n                        const x = 2;\n                        this.renderDecoration(canvasContext, decorationColor, x, y, GUTTER_DECORATION_WIDTH, minimapLineHeight);\n                        continue;\n                    }\n                }\n            }\n        }\n    }\n    renderDecorationOnLine(canvasContext, lineOffsetMap, decorationRange, decorationColor, layout, lineNumber, height, minimapLineHeight, tabSize, charWidth, canvasInnerWidth) {\n        const y = layout.getYForLineNumber(lineNumber, minimapLineHeight);\n        // Skip rendering the line if it's vertically outside our viewport\n        if (y + height < 0 || y > this._model.options.canvasInnerHeight) {\n            return;\n        }\n        const { startLineNumber, endLineNumber } = decorationRange;\n        const startColumn = (startLineNumber === lineNumber ? decorationRange.startColumn : 1);\n        const endColumn = (endLineNumber === lineNumber ? decorationRange.endColumn : this._model.getLineMaxColumn(lineNumber));\n        const x1 = this.getXOffsetForPosition(lineOffsetMap, lineNumber, startColumn, tabSize, charWidth, canvasInnerWidth);\n        const x2 = this.getXOffsetForPosition(lineOffsetMap, lineNumber, endColumn, tabSize, charWidth, canvasInnerWidth);\n        this.renderDecoration(canvasContext, decorationColor, x1, y, x2 - x1, height);\n    }\n    getXOffsetForPosition(lineOffsetMap, lineNumber, column, tabSize, charWidth, canvasInnerWidth) {\n        if (column === 1) {\n            return MINIMAP_GUTTER_WIDTH;\n        }\n        const minimumXOffset = (column - 1) * charWidth;\n        if (minimumXOffset >= canvasInnerWidth) {\n            // there is no need to look at actual characters,\n            // as this column is certainly after the minimap width\n            return canvasInnerWidth;\n        }\n        // Cache line offset data so that it is only read once per line\n        let lineIndexToXOffset = lineOffsetMap.get(lineNumber);\n        if (!lineIndexToXOffset) {\n            const lineData = this._model.getLineContent(lineNumber);\n            lineIndexToXOffset = [MINIMAP_GUTTER_WIDTH];\n            let prevx = MINIMAP_GUTTER_WIDTH;\n            for (let i = 1; i < lineData.length + 1; i++) {\n                const charCode = lineData.charCodeAt(i - 1);\n                const dx = charCode === 9 /* CharCode.Tab */\n                    ? tabSize * charWidth\n                    : strings.isFullWidthCharacter(charCode)\n                        ? 2 * charWidth\n                        : charWidth;\n                const x = prevx + dx;\n                if (x >= canvasInnerWidth) {\n                    // no need to keep on going, as we've hit the canvas width\n                    lineIndexToXOffset[i] = canvasInnerWidth;\n                    break;\n                }\n                lineIndexToXOffset[i] = x;\n                prevx = x;\n            }\n            lineOffsetMap.set(lineNumber, lineIndexToXOffset);\n        }\n        if (column - 1 < lineIndexToXOffset.length) {\n            return lineIndexToXOffset[column - 1];\n        }\n        // goes over the canvas width\n        return canvasInnerWidth;\n    }\n    renderDecoration(canvasContext, decorationColor, x, y, width, height) {\n        canvasContext.fillStyle = decorationColor && decorationColor.toString() || '';\n        canvasContext.fillRect(x, y, width, height);\n    }\n    renderLines(layout) {\n        const startLineNumber = layout.startLineNumber;\n        const endLineNumber = layout.endLineNumber;\n        const minimapLineHeight = this._model.options.minimapLineHeight;\n        // Check if nothing changed w.r.t. lines from last frame\n        if (this._lastRenderData && this._lastRenderData.linesEquals(layout)) {\n            const _lastData = this._lastRenderData._get();\n            // Nice!! Nothing changed from last frame\n            return new RenderData(layout, _lastData.imageData, _lastData.lines);\n        }\n        // Oh well!! We need to repaint some lines...\n        const imageData = this._getBuffer();\n        if (!imageData) {\n            // 0 width or 0 height canvas, nothing to do\n            return null;\n        }\n        // Render untouched lines by using last rendered data.\n        const [_dirtyY1, _dirtyY2, needed] = InnerMinimap._renderUntouchedLines(imageData, layout.topPaddingLineCount, startLineNumber, endLineNumber, minimapLineHeight, this._lastRenderData);\n        // Fetch rendering info from view model for rest of lines that need rendering.\n        const lineInfo = this._model.getMinimapLinesRenderingData(startLineNumber, endLineNumber, needed);\n        const tabSize = this._model.getOptions().tabSize;\n        const defaultBackground = this._model.options.defaultBackgroundColor;\n        const background = this._model.options.backgroundColor;\n        const foregroundAlpha = this._model.options.foregroundAlpha;\n        const tokensColorTracker = this._model.tokensColorTracker;\n        const useLighterFont = tokensColorTracker.backgroundIsLight();\n        const renderMinimap = this._model.options.renderMinimap;\n        const charRenderer = this._model.options.charRenderer();\n        const fontScale = this._model.options.fontScale;\n        const minimapCharWidth = this._model.options.minimapCharWidth;\n        const baseCharHeight = (renderMinimap === 1 /* RenderMinimap.Text */ ? 2 /* Constants.BASE_CHAR_HEIGHT */ : 2 /* Constants.BASE_CHAR_HEIGHT */ + 1);\n        const renderMinimapLineHeight = baseCharHeight * fontScale;\n        const innerLinePadding = (minimapLineHeight > renderMinimapLineHeight ? Math.floor((minimapLineHeight - renderMinimapLineHeight) / 2) : 0);\n        // Render the rest of lines\n        const backgroundA = background.a / 255;\n        const renderBackground = new RGBA8(Math.round((background.r - defaultBackground.r) * backgroundA + defaultBackground.r), Math.round((background.g - defaultBackground.g) * backgroundA + defaultBackground.g), Math.round((background.b - defaultBackground.b) * backgroundA + defaultBackground.b), 255);\n        let dy = layout.topPaddingLineCount * minimapLineHeight;\n        const renderedLines = [];\n        for (let lineIndex = 0, lineCount = endLineNumber - startLineNumber + 1; lineIndex < lineCount; lineIndex++) {\n            if (needed[lineIndex]) {\n                InnerMinimap._renderLine(imageData, renderBackground, background.a, useLighterFont, renderMinimap, minimapCharWidth, tokensColorTracker, foregroundAlpha, charRenderer, dy, innerLinePadding, tabSize, lineInfo[lineIndex], fontScale, minimapLineHeight);\n            }\n            renderedLines[lineIndex] = new MinimapLine(dy);\n            dy += minimapLineHeight;\n        }\n        const dirtyY1 = (_dirtyY1 === -1 ? 0 : _dirtyY1);\n        const dirtyY2 = (_dirtyY2 === -1 ? imageData.height : _dirtyY2);\n        const dirtyHeight = dirtyY2 - dirtyY1;\n        // Finally, paint to the canvas\n        const ctx = this._canvas.domNode.getContext('2d');\n        ctx.putImageData(imageData, 0, 0, 0, dirtyY1, imageData.width, dirtyHeight);\n        // Save rendered data for reuse on next frame if possible\n        return new RenderData(layout, imageData, renderedLines);\n    }\n    static _renderUntouchedLines(target, topPaddingLineCount, startLineNumber, endLineNumber, minimapLineHeight, lastRenderData) {\n        const needed = [];\n        if (!lastRenderData) {\n            for (let i = 0, len = endLineNumber - startLineNumber + 1; i < len; i++) {\n                needed[i] = true;\n            }\n            return [-1, -1, needed];\n        }\n        const _lastData = lastRenderData._get();\n        const lastTargetData = _lastData.imageData.data;\n        const lastStartLineNumber = _lastData.rendLineNumberStart;\n        const lastLines = _lastData.lines;\n        const lastLinesLength = lastLines.length;\n        const WIDTH = target.width;\n        const targetData = target.data;\n        const maxDestPixel = (endLineNumber - startLineNumber + 1) * minimapLineHeight * WIDTH * 4;\n        let dirtyPixel1 = -1; // the pixel offset up to which all the data is equal to the prev frame\n        let dirtyPixel2 = -1; // the pixel offset after which all the data is equal to the prev frame\n        let copySourceStart = -1;\n        let copySourceEnd = -1;\n        let copyDestStart = -1;\n        let copyDestEnd = -1;\n        let dest_dy = topPaddingLineCount * minimapLineHeight;\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - startLineNumber;\n            const lastLineIndex = lineNumber - lastStartLineNumber;\n            const source_dy = (lastLineIndex >= 0 && lastLineIndex < lastLinesLength ? lastLines[lastLineIndex].dy : -1);\n            if (source_dy === -1) {\n                needed[lineIndex] = true;\n                dest_dy += minimapLineHeight;\n                continue;\n            }\n            const sourceStart = source_dy * WIDTH * 4;\n            const sourceEnd = (source_dy + minimapLineHeight) * WIDTH * 4;\n            const destStart = dest_dy * WIDTH * 4;\n            const destEnd = (dest_dy + minimapLineHeight) * WIDTH * 4;\n            if (copySourceEnd === sourceStart && copyDestEnd === destStart) {\n                // contiguous zone => extend copy request\n                copySourceEnd = sourceEnd;\n                copyDestEnd = destEnd;\n            }\n            else {\n                if (copySourceStart !== -1) {\n                    // flush existing copy request\n                    targetData.set(lastTargetData.subarray(copySourceStart, copySourceEnd), copyDestStart);\n                    if (dirtyPixel1 === -1 && copySourceStart === 0 && copySourceStart === copyDestStart) {\n                        dirtyPixel1 = copySourceEnd;\n                    }\n                    if (dirtyPixel2 === -1 && copySourceEnd === maxDestPixel && copySourceStart === copyDestStart) {\n                        dirtyPixel2 = copySourceStart;\n                    }\n                }\n                copySourceStart = sourceStart;\n                copySourceEnd = sourceEnd;\n                copyDestStart = destStart;\n                copyDestEnd = destEnd;\n            }\n            needed[lineIndex] = false;\n            dest_dy += minimapLineHeight;\n        }\n        if (copySourceStart !== -1) {\n            // flush existing copy request\n            targetData.set(lastTargetData.subarray(copySourceStart, copySourceEnd), copyDestStart);\n            if (dirtyPixel1 === -1 && copySourceStart === 0 && copySourceStart === copyDestStart) {\n                dirtyPixel1 = copySourceEnd;\n            }\n            if (dirtyPixel2 === -1 && copySourceEnd === maxDestPixel && copySourceStart === copyDestStart) {\n                dirtyPixel2 = copySourceStart;\n            }\n        }\n        const dirtyY1 = (dirtyPixel1 === -1 ? -1 : dirtyPixel1 / (WIDTH * 4));\n        const dirtyY2 = (dirtyPixel2 === -1 ? -1 : dirtyPixel2 / (WIDTH * 4));\n        return [dirtyY1, dirtyY2, needed];\n    }\n    static _renderLine(target, backgroundColor, backgroundAlpha, useLighterFont, renderMinimap, charWidth, colorTracker, foregroundAlpha, minimapCharRenderer, dy, innerLinePadding, tabSize, lineData, fontScale, minimapLineHeight) {\n        const content = lineData.content;\n        const tokens = lineData.tokens;\n        const maxDx = target.width - charWidth;\n        const force1pxHeight = (minimapLineHeight === 1);\n        let dx = MINIMAP_GUTTER_WIDTH;\n        let charIndex = 0;\n        let tabsCharDelta = 0;\n        for (let tokenIndex = 0, tokensLen = tokens.getCount(); tokenIndex < tokensLen; tokenIndex++) {\n            const tokenEndIndex = tokens.getEndOffset(tokenIndex);\n            const tokenColorId = tokens.getForeground(tokenIndex);\n            const tokenColor = colorTracker.getColor(tokenColorId);\n            for (; charIndex < tokenEndIndex; charIndex++) {\n                if (dx > maxDx) {\n                    // hit edge of minimap\n                    return;\n                }\n                const charCode = content.charCodeAt(charIndex);\n                if (charCode === 9 /* CharCode.Tab */) {\n                    const insertSpacesCount = tabSize - (charIndex + tabsCharDelta) % tabSize;\n                    tabsCharDelta += insertSpacesCount - 1;\n                    // No need to render anything since tab is invisible\n                    dx += insertSpacesCount * charWidth;\n                }\n                else if (charCode === 32 /* CharCode.Space */) {\n                    // No need to render anything since space is invisible\n                    dx += charWidth;\n                }\n                else {\n                    // Render twice for a full width character\n                    const count = strings.isFullWidthCharacter(charCode) ? 2 : 1;\n                    for (let i = 0; i < count; i++) {\n                        if (renderMinimap === 2 /* RenderMinimap.Blocks */) {\n                            minimapCharRenderer.blockRenderChar(target, dx, dy + innerLinePadding, tokenColor, foregroundAlpha, backgroundColor, backgroundAlpha, force1pxHeight);\n                        }\n                        else { // RenderMinimap.Text\n                            minimapCharRenderer.renderChar(target, dx, dy + innerLinePadding, charCode, tokenColor, foregroundAlpha, backgroundColor, backgroundAlpha, fontScale, useLighterFont, force1pxHeight);\n                        }\n                        dx += charWidth;\n                        if (dx > maxDx) {\n                            // hit edge of minimap\n                            return;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\nclass ContiguousLineMap {\n    constructor(startLineNumber, endLineNumber, defaultValue) {\n        this._startLineNumber = startLineNumber;\n        this._endLineNumber = endLineNumber;\n        this._defaultValue = defaultValue;\n        this._values = [];\n        for (let i = 0, count = this._endLineNumber - this._startLineNumber + 1; i < count; i++) {\n            this._values[i] = defaultValue;\n        }\n    }\n    has(lineNumber) {\n        return (this.get(lineNumber) !== this._defaultValue);\n    }\n    set(lineNumber, value) {\n        if (lineNumber < this._startLineNumber || lineNumber > this._endLineNumber) {\n            return;\n        }\n        this._values[lineNumber - this._startLineNumber] = value;\n    }\n    get(lineNumber) {\n        if (lineNumber < this._startLineNumber || lineNumber > this._endLineNumber) {\n            return this._defaultValue;\n        }\n        return this._values[lineNumber - this._startLineNumber];\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './overlayWidgets.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nexport class ViewOverlayWidgets extends ViewPart {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this._widgets = {};\n        this._verticalScrollbarWidth = layoutInfo.verticalScrollbarWidth;\n        this._minimapWidth = layoutInfo.minimap.minimapWidth;\n        this._horizontalScrollbarHeight = layoutInfo.horizontalScrollbarHeight;\n        this._editorHeight = layoutInfo.height;\n        this._editorWidth = layoutInfo.width;\n        this._domNode = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this._domNode, 4 /* PartFingerprint.OverlayWidgets */);\n        this._domNode.setClassName('overlayWidgets');\n    }\n    dispose() {\n        super.dispose();\n        this._widgets = {};\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this._verticalScrollbarWidth = layoutInfo.verticalScrollbarWidth;\n        this._minimapWidth = layoutInfo.minimap.minimapWidth;\n        this._horizontalScrollbarHeight = layoutInfo.horizontalScrollbarHeight;\n        this._editorHeight = layoutInfo.height;\n        this._editorWidth = layoutInfo.width;\n        return true;\n    }\n    // ---- end view event handlers\n    addWidget(widget) {\n        const domNode = createFastDomNode(widget.getDomNode());\n        this._widgets[widget.getId()] = {\n            widget: widget,\n            preference: null,\n            domNode: domNode\n        };\n        // This is sync because a widget wants to be in the dom\n        domNode.setPosition('absolute');\n        domNode.setAttribute('widgetId', widget.getId());\n        this._domNode.appendChild(domNode);\n        this.setShouldRender();\n        this._updateMaxMinWidth();\n    }\n    setWidgetPosition(widget, preference) {\n        const widgetData = this._widgets[widget.getId()];\n        if (widgetData.preference === preference) {\n            this._updateMaxMinWidth();\n            return false;\n        }\n        widgetData.preference = preference;\n        this.setShouldRender();\n        this._updateMaxMinWidth();\n        return true;\n    }\n    removeWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._widgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._widgets[widgetId];\n            const domNode = widgetData.domNode.domNode;\n            delete this._widgets[widgetId];\n            domNode.parentNode.removeChild(domNode);\n            this.setShouldRender();\n            this._updateMaxMinWidth();\n        }\n    }\n    _updateMaxMinWidth() {\n        var _a, _b;\n        let maxMinWidth = 0;\n        const keys = Object.keys(this._widgets);\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const widgetId = keys[i];\n            const widget = this._widgets[widgetId];\n            const widgetMinWidthInPx = (_b = (_a = widget.widget).getMinContentWidthInPx) === null || _b === void 0 ? void 0 : _b.call(_a);\n            if (typeof widgetMinWidthInPx !== 'undefined') {\n                maxMinWidth = Math.max(maxMinWidth, widgetMinWidthInPx);\n            }\n        }\n        this._context.viewLayout.setOverlayWidgetsMinWidth(maxMinWidth);\n    }\n    _renderWidget(widgetData) {\n        const domNode = widgetData.domNode;\n        if (widgetData.preference === null) {\n            domNode.setTop('');\n            return;\n        }\n        if (widgetData.preference === 0 /* OverlayWidgetPositionPreference.TOP_RIGHT_CORNER */) {\n            domNode.setTop(0);\n            domNode.setRight((2 * this._verticalScrollbarWidth) + this._minimapWidth);\n        }\n        else if (widgetData.preference === 1 /* OverlayWidgetPositionPreference.BOTTOM_RIGHT_CORNER */) {\n            const widgetHeight = domNode.domNode.clientHeight;\n            domNode.setTop((this._editorHeight - widgetHeight - 2 * this._horizontalScrollbarHeight));\n            domNode.setRight((2 * this._verticalScrollbarWidth) + this._minimapWidth);\n        }\n        else if (widgetData.preference === 2 /* OverlayWidgetPositionPreference.TOP_CENTER */) {\n            domNode.setTop(0);\n            domNode.domNode.style.right = '50%';\n        }\n    }\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(ctx) {\n        this._domNode.setWidth(this._editorWidth);\n        const keys = Object.keys(this._widgets);\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const widgetId = keys[i];\n            this._renderWidget(this._widgets[widgetId]);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { Position } from '../../../common/core/position.js';\nimport { TokenizationRegistry } from '../../../common/languages.js';\nimport { editorCursorForeground, editorOverviewRulerBorder, editorOverviewRulerBackground } from '../../../common/core/editorColorRegistry.js';\nimport { OverviewRulerDecorationsGroup } from '../../../common/viewModel.js';\nimport { equals } from '../../../../base/common/arrays.js';\nclass Settings {\n    constructor(config, theme) {\n        const options = config.options;\n        this.lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this.pixelRatio = options.get(141 /* EditorOption.pixelRatio */);\n        this.overviewRulerLanes = options.get(82 /* EditorOption.overviewRulerLanes */);\n        this.renderBorder = options.get(81 /* EditorOption.overviewRulerBorder */);\n        const borderColor = theme.getColor(editorOverviewRulerBorder);\n        this.borderColor = borderColor ? borderColor.toString() : null;\n        this.hideCursor = options.get(59 /* EditorOption.hideCursorInOverviewRuler */);\n        const cursorColor = theme.getColor(editorCursorForeground);\n        this.cursorColor = cursorColor ? cursorColor.transparent(0.7).toString() : null;\n        this.themeType = theme.type;\n        const minimapOpts = options.get(72 /* EditorOption.minimap */);\n        const minimapEnabled = minimapOpts.enabled;\n        const minimapSide = minimapOpts.side;\n        const themeColor = theme.getColor(editorOverviewRulerBackground);\n        const defaultBackground = TokenizationRegistry.getDefaultBackground();\n        if (themeColor) {\n            this.backgroundColor = themeColor;\n        }\n        else if (minimapEnabled && minimapSide === 'right') {\n            this.backgroundColor = defaultBackground;\n        }\n        else {\n            this.backgroundColor = null;\n        }\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        const position = layoutInfo.overviewRuler;\n        this.top = position.top;\n        this.right = position.right;\n        this.domWidth = position.width;\n        this.domHeight = position.height;\n        if (this.overviewRulerLanes === 0) {\n            // overview ruler is off\n            this.canvasWidth = 0;\n            this.canvasHeight = 0;\n        }\n        else {\n            this.canvasWidth = (this.domWidth * this.pixelRatio) | 0;\n            this.canvasHeight = (this.domHeight * this.pixelRatio) | 0;\n        }\n        const [x, w] = this._initLanes(1, this.canvasWidth, this.overviewRulerLanes);\n        this.x = x;\n        this.w = w;\n    }\n    _initLanes(canvasLeftOffset, canvasWidth, laneCount) {\n        const remainingWidth = canvasWidth - canvasLeftOffset;\n        if (laneCount >= 3) {\n            const leftWidth = Math.floor(remainingWidth / 3);\n            const rightWidth = Math.floor(remainingWidth / 3);\n            const centerWidth = remainingWidth - leftWidth - rightWidth;\n            const leftOffset = canvasLeftOffset;\n            const centerOffset = leftOffset + leftWidth;\n            const rightOffset = leftOffset + leftWidth + centerWidth;\n            return [\n                [\n                    0,\n                    leftOffset, // Left\n                    centerOffset, // Center\n                    leftOffset, // Left | Center\n                    rightOffset, // Right\n                    leftOffset, // Left | Right\n                    centerOffset, // Center | Right\n                    leftOffset, // Left | Center | Right\n                ], [\n                    0,\n                    leftWidth, // Left\n                    centerWidth, // Center\n                    leftWidth + centerWidth, // Left | Center\n                    rightWidth, // Right\n                    leftWidth + centerWidth + rightWidth, // Left | Right\n                    centerWidth + rightWidth, // Center | Right\n                    leftWidth + centerWidth + rightWidth, // Left | Center | Right\n                ]\n            ];\n        }\n        else if (laneCount === 2) {\n            const leftWidth = Math.floor(remainingWidth / 2);\n            const rightWidth = remainingWidth - leftWidth;\n            const leftOffset = canvasLeftOffset;\n            const rightOffset = leftOffset + leftWidth;\n            return [\n                [\n                    0,\n                    leftOffset, // Left\n                    leftOffset, // Center\n                    leftOffset, // Left | Center\n                    rightOffset, // Right\n                    leftOffset, // Left | Right\n                    leftOffset, // Center | Right\n                    leftOffset, // Left | Center | Right\n                ], [\n                    0,\n                    leftWidth, // Left\n                    leftWidth, // Center\n                    leftWidth, // Left | Center\n                    rightWidth, // Right\n                    leftWidth + rightWidth, // Left | Right\n                    leftWidth + rightWidth, // Center | Right\n                    leftWidth + rightWidth, // Left | Center | Right\n                ]\n            ];\n        }\n        else {\n            const offset = canvasLeftOffset;\n            const width = remainingWidth;\n            return [\n                [\n                    0,\n                    offset, // Left\n                    offset, // Center\n                    offset, // Left | Center\n                    offset, // Right\n                    offset, // Left | Right\n                    offset, // Center | Right\n                    offset, // Left | Center | Right\n                ], [\n                    0,\n                    width, // Left\n                    width, // Center\n                    width, // Left | Center\n                    width, // Right\n                    width, // Left | Right\n                    width, // Center | Right\n                    width, // Left | Center | Right\n                ]\n            ];\n        }\n    }\n    equals(other) {\n        return (this.lineHeight === other.lineHeight\n            && this.pixelRatio === other.pixelRatio\n            && this.overviewRulerLanes === other.overviewRulerLanes\n            && this.renderBorder === other.renderBorder\n            && this.borderColor === other.borderColor\n            && this.hideCursor === other.hideCursor\n            && this.cursorColor === other.cursorColor\n            && this.themeType === other.themeType\n            && Color.equals(this.backgroundColor, other.backgroundColor)\n            && this.top === other.top\n            && this.right === other.right\n            && this.domWidth === other.domWidth\n            && this.domHeight === other.domHeight\n            && this.canvasWidth === other.canvasWidth\n            && this.canvasHeight === other.canvasHeight);\n    }\n}\nexport class DecorationsOverviewRuler extends ViewPart {\n    constructor(context) {\n        super(context);\n        this._actualShouldRender = 0 /* ShouldRenderValue.NotNeeded */;\n        this._renderedDecorations = [];\n        this._renderedCursorPositions = [];\n        this._domNode = createFastDomNode(document.createElement('canvas'));\n        this._domNode.setClassName('decorationsOverviewRuler');\n        this._domNode.setPosition('absolute');\n        this._domNode.setLayerHinting(true);\n        this._domNode.setContain('strict');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        this._updateSettings(false);\n        this._tokensColorTrackerListener = TokenizationRegistry.onDidChange((e) => {\n            if (e.changedColorMap) {\n                this._updateSettings(true);\n            }\n        });\n        this._cursorPositions = [];\n    }\n    dispose() {\n        super.dispose();\n        this._tokensColorTrackerListener.dispose();\n    }\n    _updateSettings(renderNow) {\n        const newSettings = new Settings(this._context.configuration, this._context.theme);\n        if (this._settings && this._settings.equals(newSettings)) {\n            // nothing to do\n            return false;\n        }\n        this._settings = newSettings;\n        this._domNode.setTop(this._settings.top);\n        this._domNode.setRight(this._settings.right);\n        this._domNode.setWidth(this._settings.domWidth);\n        this._domNode.setHeight(this._settings.domHeight);\n        this._domNode.domNode.width = this._settings.canvasWidth;\n        this._domNode.domNode.height = this._settings.canvasHeight;\n        if (renderNow) {\n            this._render();\n        }\n        return true;\n    }\n    // ---- begin view event handlers\n    _markRenderingIsNeeded() {\n        this._actualShouldRender = 2 /* ShouldRenderValue.Needed */;\n        return true;\n    }\n    _markRenderingIsMaybeNeeded() {\n        this._actualShouldRender = 1 /* ShouldRenderValue.Maybe */;\n        return true;\n    }\n    onConfigurationChanged(e) {\n        return this._updateSettings(false) ? this._markRenderingIsNeeded() : false;\n    }\n    onCursorStateChanged(e) {\n        this._cursorPositions = [];\n        for (let i = 0, len = e.selections.length; i < len; i++) {\n            this._cursorPositions[i] = e.selections[i].getPosition();\n        }\n        this._cursorPositions.sort(Position.compare);\n        return this._markRenderingIsMaybeNeeded();\n    }\n    onDecorationsChanged(e) {\n        if (e.affectsOverviewRuler) {\n            return this._markRenderingIsMaybeNeeded();\n        }\n        return false;\n    }\n    onFlushed(e) {\n        return this._markRenderingIsNeeded();\n    }\n    onScrollChanged(e) {\n        return e.scrollHeightChanged ? this._markRenderingIsNeeded() : false;\n    }\n    onZonesChanged(e) {\n        return this._markRenderingIsNeeded();\n    }\n    onThemeChanged(e) {\n        return this._updateSettings(false) ? this._markRenderingIsNeeded() : false;\n    }\n    // ---- end view event handlers\n    getDomNode() {\n        return this._domNode.domNode;\n    }\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(editorCtx) {\n        this._render();\n        this._actualShouldRender = 0 /* ShouldRenderValue.NotNeeded */;\n    }\n    _render() {\n        const backgroundColor = this._settings.backgroundColor;\n        if (this._settings.overviewRulerLanes === 0) {\n            // overview ruler is off\n            this._domNode.setBackgroundColor(backgroundColor ? Color.Format.CSS.formatHexA(backgroundColor) : '');\n            this._domNode.setDisplay('none');\n            return;\n        }\n        const decorations = this._context.viewModel.getAllOverviewRulerDecorations(this._context.theme);\n        decorations.sort(OverviewRulerDecorationsGroup.compareByRenderingProps);\n        if (this._actualShouldRender === 1 /* ShouldRenderValue.Maybe */ && !OverviewRulerDecorationsGroup.equalsArr(this._renderedDecorations, decorations)) {\n            this._actualShouldRender = 2 /* ShouldRenderValue.Needed */;\n        }\n        if (this._actualShouldRender === 1 /* ShouldRenderValue.Maybe */ && !equals(this._renderedCursorPositions, this._cursorPositions, (a, b) => a.lineNumber === b.lineNumber)) {\n            this._actualShouldRender = 2 /* ShouldRenderValue.Needed */;\n        }\n        if (this._actualShouldRender === 1 /* ShouldRenderValue.Maybe */) {\n            // both decorations and cursor positions are unchanged, nothing to do\n            return;\n        }\n        this._renderedDecorations = decorations;\n        this._renderedCursorPositions = this._cursorPositions;\n        this._domNode.setDisplay('block');\n        const canvasWidth = this._settings.canvasWidth;\n        const canvasHeight = this._settings.canvasHeight;\n        const lineHeight = this._settings.lineHeight;\n        const viewLayout = this._context.viewLayout;\n        const outerHeight = this._context.viewLayout.getScrollHeight();\n        const heightRatio = canvasHeight / outerHeight;\n        const minDecorationHeight = (6 /* Constants.MIN_DECORATION_HEIGHT */ * this._settings.pixelRatio) | 0;\n        const halfMinDecorationHeight = (minDecorationHeight / 2) | 0;\n        const canvasCtx = this._domNode.domNode.getContext('2d');\n        if (backgroundColor) {\n            if (backgroundColor.isOpaque()) {\n                // We have a background color which is opaque, we can just paint the entire surface with it\n                canvasCtx.fillStyle = Color.Format.CSS.formatHexA(backgroundColor);\n                canvasCtx.fillRect(0, 0, canvasWidth, canvasHeight);\n            }\n            else {\n                // We have a background color which is transparent, we need to first clear the surface and\n                // then fill it\n                canvasCtx.clearRect(0, 0, canvasWidth, canvasHeight);\n                canvasCtx.fillStyle = Color.Format.CSS.formatHexA(backgroundColor);\n                canvasCtx.fillRect(0, 0, canvasWidth, canvasHeight);\n            }\n        }\n        else {\n            // We don't have a background color\n            canvasCtx.clearRect(0, 0, canvasWidth, canvasHeight);\n        }\n        const x = this._settings.x;\n        const w = this._settings.w;\n        for (const decorationGroup of decorations) {\n            const color = decorationGroup.color;\n            const decorationGroupData = decorationGroup.data;\n            canvasCtx.fillStyle = color;\n            let prevLane = 0;\n            let prevY1 = 0;\n            let prevY2 = 0;\n            for (let i = 0, len = decorationGroupData.length / 3; i < len; i++) {\n                const lane = decorationGroupData[3 * i];\n                const startLineNumber = decorationGroupData[3 * i + 1];\n                const endLineNumber = decorationGroupData[3 * i + 2];\n                let y1 = (viewLayout.getVerticalOffsetForLineNumber(startLineNumber) * heightRatio) | 0;\n                let y2 = ((viewLayout.getVerticalOffsetForLineNumber(endLineNumber) + lineHeight) * heightRatio) | 0;\n                const height = y2 - y1;\n                if (height < minDecorationHeight) {\n                    let yCenter = ((y1 + y2) / 2) | 0;\n                    if (yCenter < halfMinDecorationHeight) {\n                        yCenter = halfMinDecorationHeight;\n                    }\n                    else if (yCenter + halfMinDecorationHeight > canvasHeight) {\n                        yCenter = canvasHeight - halfMinDecorationHeight;\n                    }\n                    y1 = yCenter - halfMinDecorationHeight;\n                    y2 = yCenter + halfMinDecorationHeight;\n                }\n                if (y1 > prevY2 + 1 || lane !== prevLane) {\n                    // flush prev\n                    if (i !== 0) {\n                        canvasCtx.fillRect(x[prevLane], prevY1, w[prevLane], prevY2 - prevY1);\n                    }\n                    prevLane = lane;\n                    prevY1 = y1;\n                    prevY2 = y2;\n                }\n                else {\n                    // merge into prev\n                    if (y2 > prevY2) {\n                        prevY2 = y2;\n                    }\n                }\n            }\n            canvasCtx.fillRect(x[prevLane], prevY1, w[prevLane], prevY2 - prevY1);\n        }\n        // Draw cursors\n        if (!this._settings.hideCursor && this._settings.cursorColor) {\n            const cursorHeight = (2 * this._settings.pixelRatio) | 0;\n            const halfCursorHeight = (cursorHeight / 2) | 0;\n            const cursorX = this._settings.x[7 /* OverviewRulerLane.Full */];\n            const cursorW = this._settings.w[7 /* OverviewRulerLane.Full */];\n            canvasCtx.fillStyle = this._settings.cursorColor;\n            let prevY1 = -100;\n            let prevY2 = -100;\n            for (let i = 0, len = this._cursorPositions.length; i < len; i++) {\n                const cursor = this._cursorPositions[i];\n                let yCenter = (viewLayout.getVerticalOffsetForLineNumber(cursor.lineNumber) * heightRatio) | 0;\n                if (yCenter < halfCursorHeight) {\n                    yCenter = halfCursorHeight;\n                }\n                else if (yCenter + halfCursorHeight > canvasHeight) {\n                    yCenter = canvasHeight - halfCursorHeight;\n                }\n                const y1 = yCenter - halfCursorHeight;\n                const y2 = y1 + cursorHeight;\n                if (y1 > prevY2 + 1) {\n                    // flush prev\n                    if (i !== 0) {\n                        canvasCtx.fillRect(cursorX, prevY1, cursorW, prevY2 - prevY1);\n                    }\n                    prevY1 = y1;\n                    prevY2 = y2;\n                }\n                else {\n                    // merge into prev\n                    if (y2 > prevY2) {\n                        prevY2 = y2;\n                    }\n                }\n            }\n            canvasCtx.fillRect(cursorX, prevY1, cursorW, prevY2 - prevY1);\n        }\n        if (this._settings.renderBorder && this._settings.borderColor && this._settings.overviewRulerLanes > 0) {\n            canvasCtx.beginPath();\n            canvasCtx.lineWidth = 1;\n            canvasCtx.strokeStyle = this._settings.borderColor;\n            canvasCtx.moveTo(0, 0);\n            canvasCtx.lineTo(0, canvasHeight);\n            canvasCtx.stroke();\n            canvasCtx.moveTo(0, 0);\n            canvasCtx.lineTo(canvasWidth, 0);\n            canvasCtx.stroke();\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { OverviewZoneManager } from '../../../common/viewModel/overviewZoneManager.js';\nimport { ViewEventHandler } from '../../../common/viewEventHandler.js';\nexport class OverviewRuler extends ViewEventHandler {\n    constructor(context, cssClassName) {\n        super();\n        this._context = context;\n        const options = this._context.configuration.options;\n        this._domNode = createFastDomNode(document.createElement('canvas'));\n        this._domNode.setClassName(cssClassName);\n        this._domNode.setPosition('absolute');\n        this._domNode.setLayerHinting(true);\n        this._domNode.setContain('strict');\n        this._zoneManager = new OverviewZoneManager((lineNumber) => this._context.viewLayout.getVerticalOffsetForLineNumber(lineNumber));\n        this._zoneManager.setDOMWidth(0);\n        this._zoneManager.setDOMHeight(0);\n        this._zoneManager.setOuterHeight(this._context.viewLayout.getScrollHeight());\n        this._zoneManager.setLineHeight(options.get(66 /* EditorOption.lineHeight */));\n        this._zoneManager.setPixelRatio(options.get(141 /* EditorOption.pixelRatio */));\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        super.dispose();\n    }\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        if (e.hasChanged(66 /* EditorOption.lineHeight */)) {\n            this._zoneManager.setLineHeight(options.get(66 /* EditorOption.lineHeight */));\n            this._render();\n        }\n        if (e.hasChanged(141 /* EditorOption.pixelRatio */)) {\n            this._zoneManager.setPixelRatio(options.get(141 /* EditorOption.pixelRatio */));\n            this._domNode.setWidth(this._zoneManager.getDOMWidth());\n            this._domNode.setHeight(this._zoneManager.getDOMHeight());\n            this._domNode.domNode.width = this._zoneManager.getCanvasWidth();\n            this._domNode.domNode.height = this._zoneManager.getCanvasHeight();\n            this._render();\n        }\n        return true;\n    }\n    onFlushed(e) {\n        this._render();\n        return true;\n    }\n    onScrollChanged(e) {\n        if (e.scrollHeightChanged) {\n            this._zoneManager.setOuterHeight(e.scrollHeight);\n            this._render();\n        }\n        return true;\n    }\n    onZonesChanged(e) {\n        this._render();\n        return true;\n    }\n    // ---- end view event handlers\n    getDomNode() {\n        return this._domNode.domNode;\n    }\n    setLayout(position) {\n        this._domNode.setTop(position.top);\n        this._domNode.setRight(position.right);\n        let hasChanged = false;\n        hasChanged = this._zoneManager.setDOMWidth(position.width) || hasChanged;\n        hasChanged = this._zoneManager.setDOMHeight(position.height) || hasChanged;\n        if (hasChanged) {\n            this._domNode.setWidth(this._zoneManager.getDOMWidth());\n            this._domNode.setHeight(this._zoneManager.getDOMHeight());\n            this._domNode.domNode.width = this._zoneManager.getCanvasWidth();\n            this._domNode.domNode.height = this._zoneManager.getCanvasHeight();\n            this._render();\n        }\n    }\n    setZones(zones) {\n        this._zoneManager.setZones(zones);\n        this._render();\n    }\n    _render() {\n        if (this._zoneManager.getOuterHeight() === 0) {\n            return false;\n        }\n        const width = this._zoneManager.getCanvasWidth();\n        const height = this._zoneManager.getCanvasHeight();\n        const colorZones = this._zoneManager.resolveColorZones();\n        const id2Color = this._zoneManager.getId2Color();\n        const ctx = this._domNode.domNode.getContext('2d');\n        ctx.clearRect(0, 0, width, height);\n        if (colorZones.length > 0) {\n            this._renderOneLane(ctx, colorZones, id2Color, width);\n        }\n        return true;\n    }\n    _renderOneLane(ctx, colorZones, id2Color, width) {\n        let currentColorId = 0;\n        let currentFrom = 0;\n        let currentTo = 0;\n        for (const zone of colorZones) {\n            const zoneColorId = zone.colorId;\n            const zoneFrom = zone.from;\n            const zoneTo = zone.to;\n            if (zoneColorId !== currentColorId) {\n                ctx.fillRect(0, currentFrom, width, currentTo - currentFrom);\n                currentColorId = zoneColorId;\n                ctx.fillStyle = id2Color[currentColorId];\n                currentFrom = zoneFrom;\n                currentTo = zoneTo;\n            }\n            else {\n                if (currentTo >= zoneFrom) {\n                    currentTo = Math.max(currentTo, zoneTo);\n                }\n                else {\n                    ctx.fillRect(0, currentFrom, width, currentTo - currentFrom);\n                    currentFrom = zoneFrom;\n                    currentTo = zoneTo;\n                }\n            }\n        }\n        ctx.fillRect(0, currentFrom, width, currentTo - currentFrom);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './rulers.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ViewPart } from '../../view/viewPart.js';\nexport class Rulers extends ViewPart {\n    constructor(context) {\n        super(context);\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setAttribute('role', 'presentation');\n        this.domNode.setAttribute('aria-hidden', 'true');\n        this.domNode.setClassName('view-rulers');\n        this._renderedRulers = [];\n        const options = this._context.configuration.options;\n        this._rulers = options.get(101 /* EditorOption.rulers */);\n        this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n    }\n    dispose() {\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._rulers = options.get(101 /* EditorOption.rulers */);\n        this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollHeightChanged;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    _ensureRulersCount() {\n        const currentCount = this._renderedRulers.length;\n        const desiredCount = this._rulers.length;\n        if (currentCount === desiredCount) {\n            // Nothing to do\n            return;\n        }\n        if (currentCount < desiredCount) {\n            const { tabSize } = this._context.viewModel.model.getOptions();\n            const rulerWidth = tabSize;\n            let addCount = desiredCount - currentCount;\n            while (addCount > 0) {\n                const node = createFastDomNode(document.createElement('div'));\n                node.setClassName('view-ruler');\n                node.setWidth(rulerWidth);\n                this.domNode.appendChild(node);\n                this._renderedRulers.push(node);\n                addCount--;\n            }\n            return;\n        }\n        let removeCount = currentCount - desiredCount;\n        while (removeCount > 0) {\n            const node = this._renderedRulers.pop();\n            this.domNode.removeChild(node);\n            removeCount--;\n        }\n    }\n    render(ctx) {\n        this._ensureRulersCount();\n        for (let i = 0, len = this._rulers.length; i < len; i++) {\n            const node = this._renderedRulers[i];\n            const ruler = this._rulers[i];\n            node.setBoxShadow(ruler.color ? `1px 0 0 0 ${ruler.color} inset` : ``);\n            node.setHeight(Math.min(ctx.scrollHeight, 1000000));\n            node.setLeft(ruler.column * this._typicalHalfwidthCharacterWidth);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './scrollDecoration.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ViewPart } from '../../view/viewPart.js';\nexport class ScrollDecorationViewPart extends ViewPart {\n    constructor(context) {\n        super(context);\n        this._scrollTop = 0;\n        this._width = 0;\n        this._updateWidth();\n        this._shouldShow = false;\n        const options = this._context.configuration.options;\n        const scrollbar = options.get(102 /* EditorOption.scrollbar */);\n        this._useShadows = scrollbar.useShadows;\n        this._domNode = createFastDomNode(document.createElement('div'));\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n    }\n    dispose() {\n        super.dispose();\n    }\n    _updateShouldShow() {\n        const newShouldShow = (this._useShadows && this._scrollTop > 0);\n        if (this._shouldShow !== newShouldShow) {\n            this._shouldShow = newShouldShow;\n            return true;\n        }\n        return false;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    _updateWidth() {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        if (layoutInfo.minimap.renderMinimap === 0 || (layoutInfo.minimap.minimapWidth > 0 && layoutInfo.minimap.minimapLeft === 0)) {\n            this._width = layoutInfo.width;\n        }\n        else {\n            this._width = layoutInfo.width - layoutInfo.verticalScrollbarWidth;\n        }\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const scrollbar = options.get(102 /* EditorOption.scrollbar */);\n        this._useShadows = scrollbar.useShadows;\n        this._updateWidth();\n        this._updateShouldShow();\n        return true;\n    }\n    onScrollChanged(e) {\n        this._scrollTop = e.scrollTop;\n        return this._updateShouldShow();\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(ctx) {\n        this._domNode.setWidth(this._width);\n        this._domNode.setClassName(this._shouldShow ? 'scroll-decoration' : '');\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './selections.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorSelectionForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nclass HorizontalRangeWithStyle {\n    constructor(other) {\n        this.left = other.left;\n        this.width = other.width;\n        this.startStyle = null;\n        this.endStyle = null;\n    }\n}\nclass LineVisibleRangesWithStyle {\n    constructor(lineNumber, ranges) {\n        this.lineNumber = lineNumber;\n        this.ranges = ranges;\n    }\n}\nfunction toStyledRange(item) {\n    return new HorizontalRangeWithStyle(item);\n}\nfunction toStyled(item) {\n    return new LineVisibleRangesWithStyle(item.lineNumber, item.ranges.map(toStyledRange));\n}\nexport class SelectionsOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._previousFrameVisibleRangesWithStyle = [];\n        this._context = context;\n        const options = this._context.configuration.options;\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._roundedSelection = options.get(100 /* EditorOption.roundedSelection */);\n        this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        this._selections = [];\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._roundedSelection = options.get(100 /* EditorOption.roundedSelection */);\n        this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        return true;\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections.slice(0);\n        return true;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations that can end up relayouting text\n        return true; //e.inlineDecorationsChanged;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    _visibleRangesHaveGaps(linesVisibleRanges) {\n        for (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\n            const lineVisibleRanges = linesVisibleRanges[i];\n            if (lineVisibleRanges.ranges.length > 1) {\n                // There are two ranges on the same line\n                return true;\n            }\n        }\n        return false;\n    }\n    _enrichVisibleRangesWithStyle(viewport, linesVisibleRanges, previousFrame) {\n        const epsilon = this._typicalHalfwidthCharacterWidth / 4;\n        let previousFrameTop = null;\n        let previousFrameBottom = null;\n        if (previousFrame && previousFrame.length > 0 && linesVisibleRanges.length > 0) {\n            const topLineNumber = linesVisibleRanges[0].lineNumber;\n            if (topLineNumber === viewport.startLineNumber) {\n                for (let i = 0; !previousFrameTop && i < previousFrame.length; i++) {\n                    if (previousFrame[i].lineNumber === topLineNumber) {\n                        previousFrameTop = previousFrame[i].ranges[0];\n                    }\n                }\n            }\n            const bottomLineNumber = linesVisibleRanges[linesVisibleRanges.length - 1].lineNumber;\n            if (bottomLineNumber === viewport.endLineNumber) {\n                for (let i = previousFrame.length - 1; !previousFrameBottom && i >= 0; i--) {\n                    if (previousFrame[i].lineNumber === bottomLineNumber) {\n                        previousFrameBottom = previousFrame[i].ranges[0];\n                    }\n                }\n            }\n            if (previousFrameTop && !previousFrameTop.startStyle) {\n                previousFrameTop = null;\n            }\n            if (previousFrameBottom && !previousFrameBottom.startStyle) {\n                previousFrameBottom = null;\n            }\n        }\n        for (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\n            // We know for a fact that there is precisely one range on each line\n            const curLineRange = linesVisibleRanges[i].ranges[0];\n            const curLeft = curLineRange.left;\n            const curRight = curLineRange.left + curLineRange.width;\n            const startStyle = {\n                top: 0 /* CornerStyle.EXTERN */,\n                bottom: 0 /* CornerStyle.EXTERN */\n            };\n            const endStyle = {\n                top: 0 /* CornerStyle.EXTERN */,\n                bottom: 0 /* CornerStyle.EXTERN */\n            };\n            if (i > 0) {\n                // Look above\n                const prevLeft = linesVisibleRanges[i - 1].ranges[0].left;\n                const prevRight = linesVisibleRanges[i - 1].ranges[0].left + linesVisibleRanges[i - 1].ranges[0].width;\n                if (abs(curLeft - prevLeft) < epsilon) {\n                    startStyle.top = 2 /* CornerStyle.FLAT */;\n                }\n                else if (curLeft > prevLeft) {\n                    startStyle.top = 1 /* CornerStyle.INTERN */;\n                }\n                if (abs(curRight - prevRight) < epsilon) {\n                    endStyle.top = 2 /* CornerStyle.FLAT */;\n                }\n                else if (prevLeft < curRight && curRight < prevRight) {\n                    endStyle.top = 1 /* CornerStyle.INTERN */;\n                }\n            }\n            else if (previousFrameTop) {\n                // Accept some hiccups near the viewport edges to save on repaints\n                startStyle.top = previousFrameTop.startStyle.top;\n                endStyle.top = previousFrameTop.endStyle.top;\n            }\n            if (i + 1 < len) {\n                // Look below\n                const nextLeft = linesVisibleRanges[i + 1].ranges[0].left;\n                const nextRight = linesVisibleRanges[i + 1].ranges[0].left + linesVisibleRanges[i + 1].ranges[0].width;\n                if (abs(curLeft - nextLeft) < epsilon) {\n                    startStyle.bottom = 2 /* CornerStyle.FLAT */;\n                }\n                else if (nextLeft < curLeft && curLeft < nextRight) {\n                    startStyle.bottom = 1 /* CornerStyle.INTERN */;\n                }\n                if (abs(curRight - nextRight) < epsilon) {\n                    endStyle.bottom = 2 /* CornerStyle.FLAT */;\n                }\n                else if (curRight < nextRight) {\n                    endStyle.bottom = 1 /* CornerStyle.INTERN */;\n                }\n            }\n            else if (previousFrameBottom) {\n                // Accept some hiccups near the viewport edges to save on repaints\n                startStyle.bottom = previousFrameBottom.startStyle.bottom;\n                endStyle.bottom = previousFrameBottom.endStyle.bottom;\n            }\n            curLineRange.startStyle = startStyle;\n            curLineRange.endStyle = endStyle;\n        }\n    }\n    _getVisibleRangesWithStyle(selection, ctx, previousFrame) {\n        const _linesVisibleRanges = ctx.linesVisibleRangesForRange(selection, true) || [];\n        const linesVisibleRanges = _linesVisibleRanges.map(toStyled);\n        const visibleRangesHaveGaps = this._visibleRangesHaveGaps(linesVisibleRanges);\n        if (!visibleRangesHaveGaps && this._roundedSelection) {\n            this._enrichVisibleRangesWithStyle(ctx.visibleRange, linesVisibleRanges, previousFrame);\n        }\n        // The visible ranges are sorted TOP-BOTTOM and LEFT-RIGHT\n        return linesVisibleRanges;\n    }\n    _createSelectionPiece(top, height, className, left, width) {\n        return ('<div class=\"cslr '\n            + className\n            + '\" style=\"top:'\n            + top.toString()\n            + 'px;left:'\n            + left.toString()\n            + 'px;width:'\n            + width.toString()\n            + 'px;height:'\n            + height\n            + 'px;\"></div>');\n    }\n    _actualRenderOneSelection(output2, visibleStartLineNumber, hasMultipleSelections, visibleRanges) {\n        if (visibleRanges.length === 0) {\n            return;\n        }\n        const visibleRangesHaveStyle = !!visibleRanges[0].ranges[0].startStyle;\n        const fullLineHeight = (this._lineHeight).toString();\n        const reducedLineHeight = (this._lineHeight - 1).toString();\n        const firstLineNumber = visibleRanges[0].lineNumber;\n        const lastLineNumber = visibleRanges[visibleRanges.length - 1].lineNumber;\n        for (let i = 0, len = visibleRanges.length; i < len; i++) {\n            const lineVisibleRanges = visibleRanges[i];\n            const lineNumber = lineVisibleRanges.lineNumber;\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const lineHeight = hasMultipleSelections ? (lineNumber === lastLineNumber || lineNumber === firstLineNumber ? reducedLineHeight : fullLineHeight) : fullLineHeight;\n            const top = hasMultipleSelections ? (lineNumber === firstLineNumber ? 1 : 0) : 0;\n            let innerCornerOutput = '';\n            let restOfSelectionOutput = '';\n            for (let j = 0, lenJ = lineVisibleRanges.ranges.length; j < lenJ; j++) {\n                const visibleRange = lineVisibleRanges.ranges[j];\n                if (visibleRangesHaveStyle) {\n                    const startStyle = visibleRange.startStyle;\n                    const endStyle = visibleRange.endStyle;\n                    if (startStyle.top === 1 /* CornerStyle.INTERN */ || startStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                        // Reverse rounded corner to the left\n                        // First comes the selection (blue layer)\n                        innerCornerOutput += this._createSelectionPiece(top, lineHeight, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                        // Second comes the background (white layer) with inverse border radius\n                        let className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n                        if (startStyle.top === 1 /* CornerStyle.INTERN */) {\n                            className += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n                        }\n                        if (startStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                            className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n                        }\n                        innerCornerOutput += this._createSelectionPiece(top, lineHeight, className, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                    }\n                    if (endStyle.top === 1 /* CornerStyle.INTERN */ || endStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                        // Reverse rounded corner to the right\n                        // First comes the selection (blue layer)\n                        innerCornerOutput += this._createSelectionPiece(top, lineHeight, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                        // Second comes the background (white layer) with inverse border radius\n                        let className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n                        if (endStyle.top === 1 /* CornerStyle.INTERN */) {\n                            className += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n                        }\n                        if (endStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                            className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n                        }\n                        innerCornerOutput += this._createSelectionPiece(top, lineHeight, className, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                    }\n                }\n                let className = SelectionsOverlay.SELECTION_CLASS_NAME;\n                if (visibleRangesHaveStyle) {\n                    const startStyle = visibleRange.startStyle;\n                    const endStyle = visibleRange.endStyle;\n                    if (startStyle.top === 0 /* CornerStyle.EXTERN */) {\n                        className += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n                    }\n                    if (startStyle.bottom === 0 /* CornerStyle.EXTERN */) {\n                        className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n                    }\n                    if (endStyle.top === 0 /* CornerStyle.EXTERN */) {\n                        className += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n                    }\n                    if (endStyle.bottom === 0 /* CornerStyle.EXTERN */) {\n                        className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n                    }\n                }\n                restOfSelectionOutput += this._createSelectionPiece(top, lineHeight, className, visibleRange.left, visibleRange.width);\n            }\n            output2[lineIndex][0] += innerCornerOutput;\n            output2[lineIndex][1] += restOfSelectionOutput;\n        }\n    }\n    prepareRender(ctx) {\n        // Build HTML for inner corners separate from HTML for the rest of selections,\n        // as the inner corner HTML can interfere with that of other selections.\n        // In final render, make sure to place the inner corner HTML before the rest of selection HTML. See issue #77777.\n        const output = [];\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            output[lineIndex] = ['', ''];\n        }\n        const thisFrameVisibleRangesWithStyle = [];\n        for (let i = 0, len = this._selections.length; i < len; i++) {\n            const selection = this._selections[i];\n            if (selection.isEmpty()) {\n                thisFrameVisibleRangesWithStyle[i] = null;\n                continue;\n            }\n            const visibleRangesWithStyle = this._getVisibleRangesWithStyle(selection, ctx, this._previousFrameVisibleRangesWithStyle[i]);\n            thisFrameVisibleRangesWithStyle[i] = visibleRangesWithStyle;\n            this._actualRenderOneSelection(output, visibleStartLineNumber, this._selections.length > 1, visibleRangesWithStyle);\n        }\n        this._previousFrameVisibleRangesWithStyle = thisFrameVisibleRangesWithStyle;\n        this._renderResult = output.map(([internalCorners, restOfSelection]) => internalCorners + restOfSelection);\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\nSelectionsOverlay.SELECTION_CLASS_NAME = 'selected-text';\nSelectionsOverlay.SELECTION_TOP_LEFT = 'top-left-radius';\nSelectionsOverlay.SELECTION_BOTTOM_LEFT = 'bottom-left-radius';\nSelectionsOverlay.SELECTION_TOP_RIGHT = 'top-right-radius';\nSelectionsOverlay.SELECTION_BOTTOM_RIGHT = 'bottom-right-radius';\nSelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME = 'monaco-editor-background';\nSelectionsOverlay.ROUNDED_PIECE_WIDTH = 10;\nregisterThemingParticipant((theme, collector) => {\n    const editorSelectionForegroundColor = theme.getColor(editorSelectionForeground);\n    if (editorSelectionForegroundColor && !editorSelectionForegroundColor.isTransparent()) {\n        collector.addRule(`.monaco-editor .view-line span.inline-selected-text { color: ${editorSelectionForegroundColor}; }`);\n    }\n});\nfunction abs(n) {\n    return n < 0 ? -n : n;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { applyFontInfo } from '../../config/domFontInfo.js';\nimport { TextEditorCursorStyle } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../../base/browser/ui/mouseCursor/mouseCursor.js';\nclass ViewCursorRenderData {\n    constructor(top, left, paddingLeft, width, height, textContent, textContentClassName) {\n        this.top = top;\n        this.left = left;\n        this.paddingLeft = paddingLeft;\n        this.width = width;\n        this.height = height;\n        this.textContent = textContent;\n        this.textContentClassName = textContentClassName;\n    }\n}\nexport class ViewCursor {\n    constructor(context) {\n        this._context = context;\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        this._cursorStyle = options.get(28 /* EditorOption.cursorStyle */);\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this._lineCursorWidth = Math.min(options.get(31 /* EditorOption.cursorWidth */), this._typicalHalfwidthCharacterWidth);\n        this._isVisible = true;\n        // Create the dom node\n        this._domNode = createFastDomNode(document.createElement('div'));\n        this._domNode.setClassName(`cursor ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n        this._domNode.setHeight(this._lineHeight);\n        this._domNode.setTop(0);\n        this._domNode.setLeft(0);\n        applyFontInfo(this._domNode, fontInfo);\n        this._domNode.setDisplay('none');\n        this._position = new Position(1, 1);\n        this._lastRenderedContent = '';\n        this._renderData = null;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        return this._position;\n    }\n    show() {\n        if (!this._isVisible) {\n            this._domNode.setVisibility('inherit');\n            this._isVisible = true;\n        }\n    }\n    hide() {\n        if (this._isVisible) {\n            this._domNode.setVisibility('hidden');\n            this._isVisible = false;\n        }\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        this._cursorStyle = options.get(28 /* EditorOption.cursorStyle */);\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this._lineCursorWidth = Math.min(options.get(31 /* EditorOption.cursorWidth */), this._typicalHalfwidthCharacterWidth);\n        applyFontInfo(this._domNode, fontInfo);\n        return true;\n    }\n    onCursorPositionChanged(position, pauseAnimation) {\n        if (pauseAnimation) {\n            this._domNode.domNode.style.transitionProperty = 'none';\n        }\n        else {\n            this._domNode.domNode.style.transitionProperty = '';\n        }\n        this._position = position;\n        return true;\n    }\n    /**\n     * If `this._position` is inside a grapheme, returns the position where the grapheme starts.\n     * Also returns the next grapheme.\n     */\n    _getGraphemeAwarePosition() {\n        const { lineNumber, column } = this._position;\n        const lineContent = this._context.viewModel.getLineContent(lineNumber);\n        const [startOffset, endOffset] = strings.getCharContainingOffset(lineContent, column - 1);\n        return [new Position(lineNumber, startOffset + 1), lineContent.substring(startOffset, endOffset)];\n    }\n    _prepareRender(ctx) {\n        let textContent = '';\n        let textContentClassName = '';\n        const [position, nextGrapheme] = this._getGraphemeAwarePosition();\n        if (this._cursorStyle === TextEditorCursorStyle.Line || this._cursorStyle === TextEditorCursorStyle.LineThin) {\n            const visibleRange = ctx.visibleRangeForPosition(position);\n            if (!visibleRange || visibleRange.outsideRenderedLine) {\n                // Outside viewport\n                return null;\n            }\n            let width;\n            if (this._cursorStyle === TextEditorCursorStyle.Line) {\n                width = dom.computeScreenAwareSize(this._lineCursorWidth > 0 ? this._lineCursorWidth : 2);\n                if (width > 2) {\n                    textContent = nextGrapheme;\n                    textContentClassName = this._getTokenClassName(position);\n                }\n            }\n            else {\n                width = dom.computeScreenAwareSize(1);\n            }\n            let left = visibleRange.left;\n            let paddingLeft = 0;\n            if (width >= 2 && left >= 1) {\n                // shift the cursor a bit between the characters\n                paddingLeft = 1;\n                left -= paddingLeft;\n            }\n            const top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.bigNumbersDelta;\n            return new ViewCursorRenderData(top, left, paddingLeft, width, this._lineHeight, textContent, textContentClassName);\n        }\n        const visibleRangeForCharacter = ctx.linesVisibleRangesForRange(new Range(position.lineNumber, position.column, position.lineNumber, position.column + nextGrapheme.length), false);\n        if (!visibleRangeForCharacter || visibleRangeForCharacter.length === 0) {\n            // Outside viewport\n            return null;\n        }\n        const firstVisibleRangeForCharacter = visibleRangeForCharacter[0];\n        if (firstVisibleRangeForCharacter.outsideRenderedLine || firstVisibleRangeForCharacter.ranges.length === 0) {\n            // Outside viewport\n            return null;\n        }\n        const range = firstVisibleRangeForCharacter.ranges[0];\n        const width = (nextGrapheme === '\\t'\n            ? this._typicalHalfwidthCharacterWidth\n            : (range.width < 1\n                ? this._typicalHalfwidthCharacterWidth\n                : range.width));\n        if (this._cursorStyle === TextEditorCursorStyle.Block) {\n            textContent = nextGrapheme;\n            textContentClassName = this._getTokenClassName(position);\n        }\n        let top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.bigNumbersDelta;\n        let height = this._lineHeight;\n        // Underline might interfere with clicking\n        if (this._cursorStyle === TextEditorCursorStyle.Underline || this._cursorStyle === TextEditorCursorStyle.UnderlineThin) {\n            top += this._lineHeight - 2;\n            height = 2;\n        }\n        return new ViewCursorRenderData(top, range.left, 0, width, height, textContent, textContentClassName);\n    }\n    _getTokenClassName(position) {\n        const lineData = this._context.viewModel.getViewLineData(position.lineNumber);\n        const tokenIndex = lineData.tokens.findTokenIndexAtOffset(position.column - 1);\n        return lineData.tokens.getClassName(tokenIndex);\n    }\n    prepareRender(ctx) {\n        this._renderData = this._prepareRender(ctx);\n    }\n    render(ctx) {\n        if (!this._renderData) {\n            this._domNode.setDisplay('none');\n            return null;\n        }\n        if (this._lastRenderedContent !== this._renderData.textContent) {\n            this._lastRenderedContent = this._renderData.textContent;\n            this._domNode.domNode.textContent = this._lastRenderedContent;\n        }\n        this._domNode.setClassName(`cursor ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME} ${this._renderData.textContentClassName}`);\n        this._domNode.setDisplay('block');\n        this._domNode.setTop(this._renderData.top);\n        this._domNode.setLeft(this._renderData.left);\n        this._domNode.setPaddingLeft(this._renderData.paddingLeft);\n        this._domNode.setWidth(this._renderData.width);\n        this._domNode.setLineHeight(this._renderData.height);\n        this._domNode.setHeight(this._renderData.height);\n        return {\n            domNode: this._domNode.domNode,\n            position: this._position,\n            contentLeft: this._renderData.left,\n            height: this._renderData.height,\n            width: 2\n        };\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './viewCursors.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { IntervalTimer, TimeoutTimer } from '../../../../base/common/async.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { ViewCursor } from './viewCursor.js';\nimport { TextEditorCursorStyle } from '../../../common/config/editorOptions.js';\nimport { editorCursorBackground, editorCursorForeground } from '../../../common/core/editorColorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nexport class ViewCursors extends ViewPart {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        this._readOnly = options.get(90 /* EditorOption.readOnly */);\n        this._cursorBlinking = options.get(26 /* EditorOption.cursorBlinking */);\n        this._cursorStyle = options.get(28 /* EditorOption.cursorStyle */);\n        this._cursorSmoothCaretAnimation = options.get(27 /* EditorOption.cursorSmoothCaretAnimation */);\n        this._selectionIsEmpty = true;\n        this._isComposingInput = false;\n        this._isVisible = false;\n        this._primaryCursor = new ViewCursor(this._context);\n        this._secondaryCursors = [];\n        this._renderData = [];\n        this._domNode = createFastDomNode(document.createElement('div'));\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        this._updateDomClassName();\n        this._domNode.appendChild(this._primaryCursor.getDomNode());\n        this._startCursorBlinkAnimation = new TimeoutTimer();\n        this._cursorFlatBlinkInterval = new IntervalTimer();\n        this._blinkingEnabled = false;\n        this._editorHasFocus = false;\n        this._updateBlinking();\n    }\n    dispose() {\n        super.dispose();\n        this._startCursorBlinkAnimation.dispose();\n        this._cursorFlatBlinkInterval.dispose();\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    // --- begin event handlers\n    onCompositionStart(e) {\n        this._isComposingInput = true;\n        this._updateBlinking();\n        return true;\n    }\n    onCompositionEnd(e) {\n        this._isComposingInput = false;\n        this._updateBlinking();\n        return true;\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._readOnly = options.get(90 /* EditorOption.readOnly */);\n        this._cursorBlinking = options.get(26 /* EditorOption.cursorBlinking */);\n        this._cursorStyle = options.get(28 /* EditorOption.cursorStyle */);\n        this._cursorSmoothCaretAnimation = options.get(27 /* EditorOption.cursorSmoothCaretAnimation */);\n        this._updateBlinking();\n        this._updateDomClassName();\n        this._primaryCursor.onConfigurationChanged(e);\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            this._secondaryCursors[i].onConfigurationChanged(e);\n        }\n        return true;\n    }\n    _onCursorPositionChanged(position, secondaryPositions, reason) {\n        const pauseAnimation = (this._secondaryCursors.length !== secondaryPositions.length\n            || (this._cursorSmoothCaretAnimation === 'explicit' && reason !== 3 /* CursorChangeReason.Explicit */));\n        this._primaryCursor.onCursorPositionChanged(position, pauseAnimation);\n        this._updateBlinking();\n        if (this._secondaryCursors.length < secondaryPositions.length) {\n            // Create new cursors\n            const addCnt = secondaryPositions.length - this._secondaryCursors.length;\n            for (let i = 0; i < addCnt; i++) {\n                const newCursor = new ViewCursor(this._context);\n                this._domNode.domNode.insertBefore(newCursor.getDomNode().domNode, this._primaryCursor.getDomNode().domNode.nextSibling);\n                this._secondaryCursors.push(newCursor);\n            }\n        }\n        else if (this._secondaryCursors.length > secondaryPositions.length) {\n            // Remove some cursors\n            const removeCnt = this._secondaryCursors.length - secondaryPositions.length;\n            for (let i = 0; i < removeCnt; i++) {\n                this._domNode.removeChild(this._secondaryCursors[0].getDomNode());\n                this._secondaryCursors.splice(0, 1);\n            }\n        }\n        for (let i = 0; i < secondaryPositions.length; i++) {\n            this._secondaryCursors[i].onCursorPositionChanged(secondaryPositions[i], pauseAnimation);\n        }\n    }\n    onCursorStateChanged(e) {\n        const positions = [];\n        for (let i = 0, len = e.selections.length; i < len; i++) {\n            positions[i] = e.selections[i].getPosition();\n        }\n        this._onCursorPositionChanged(positions[0], positions.slice(1), e.reason);\n        const selectionIsEmpty = e.selections[0].isEmpty();\n        if (this._selectionIsEmpty !== selectionIsEmpty) {\n            this._selectionIsEmpty = selectionIsEmpty;\n            this._updateDomClassName();\n        }\n        return true;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations that can end up relayouting text\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onFocusChanged(e) {\n        this._editorHasFocus = e.isFocused;\n        this._updateBlinking();\n        return false;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return true;\n    }\n    onTokensChanged(e) {\n        const shouldRender = (position) => {\n            for (let i = 0, len = e.ranges.length; i < len; i++) {\n                if (e.ranges[i].fromLineNumber <= position.lineNumber && position.lineNumber <= e.ranges[i].toLineNumber) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        if (shouldRender(this._primaryCursor.getPosition())) {\n            return true;\n        }\n        for (const secondaryCursor of this._secondaryCursors) {\n            if (shouldRender(secondaryCursor.getPosition())) {\n                return true;\n            }\n        }\n        return false;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    // ---- blinking logic\n    _getCursorBlinking() {\n        if (this._isComposingInput) {\n            // avoid double cursors\n            return 0 /* TextEditorCursorBlinkingStyle.Hidden */;\n        }\n        if (!this._editorHasFocus) {\n            return 0 /* TextEditorCursorBlinkingStyle.Hidden */;\n        }\n        if (this._readOnly) {\n            return 5 /* TextEditorCursorBlinkingStyle.Solid */;\n        }\n        return this._cursorBlinking;\n    }\n    _updateBlinking() {\n        this._startCursorBlinkAnimation.cancel();\n        this._cursorFlatBlinkInterval.cancel();\n        const blinkingStyle = this._getCursorBlinking();\n        // hidden and solid are special as they involve no animations\n        const isHidden = (blinkingStyle === 0 /* TextEditorCursorBlinkingStyle.Hidden */);\n        const isSolid = (blinkingStyle === 5 /* TextEditorCursorBlinkingStyle.Solid */);\n        if (isHidden) {\n            this._hide();\n        }\n        else {\n            this._show();\n        }\n        this._blinkingEnabled = false;\n        this._updateDomClassName();\n        if (!isHidden && !isSolid) {\n            if (blinkingStyle === 1 /* TextEditorCursorBlinkingStyle.Blink */) {\n                // flat blinking is handled by JavaScript to save battery life due to Chromium step timing issue https://bugs.chromium.org/p/chromium/issues/detail?id=361587\n                this._cursorFlatBlinkInterval.cancelAndSet(() => {\n                    if (this._isVisible) {\n                        this._hide();\n                    }\n                    else {\n                        this._show();\n                    }\n                }, ViewCursors.BLINK_INTERVAL);\n            }\n            else {\n                this._startCursorBlinkAnimation.setIfNotSet(() => {\n                    this._blinkingEnabled = true;\n                    this._updateDomClassName();\n                }, ViewCursors.BLINK_INTERVAL);\n            }\n        }\n    }\n    // --- end blinking logic\n    _updateDomClassName() {\n        this._domNode.setClassName(this._getClassName());\n    }\n    _getClassName() {\n        let result = 'cursors-layer';\n        if (!this._selectionIsEmpty) {\n            result += ' has-selection';\n        }\n        switch (this._cursorStyle) {\n            case TextEditorCursorStyle.Line:\n                result += ' cursor-line-style';\n                break;\n            case TextEditorCursorStyle.Block:\n                result += ' cursor-block-style';\n                break;\n            case TextEditorCursorStyle.Underline:\n                result += ' cursor-underline-style';\n                break;\n            case TextEditorCursorStyle.LineThin:\n                result += ' cursor-line-thin-style';\n                break;\n            case TextEditorCursorStyle.BlockOutline:\n                result += ' cursor-block-outline-style';\n                break;\n            case TextEditorCursorStyle.UnderlineThin:\n                result += ' cursor-underline-thin-style';\n                break;\n            default:\n                result += ' cursor-line-style';\n        }\n        if (this._blinkingEnabled) {\n            switch (this._getCursorBlinking()) {\n                case 1 /* TextEditorCursorBlinkingStyle.Blink */:\n                    result += ' cursor-blink';\n                    break;\n                case 2 /* TextEditorCursorBlinkingStyle.Smooth */:\n                    result += ' cursor-smooth';\n                    break;\n                case 3 /* TextEditorCursorBlinkingStyle.Phase */:\n                    result += ' cursor-phase';\n                    break;\n                case 4 /* TextEditorCursorBlinkingStyle.Expand */:\n                    result += ' cursor-expand';\n                    break;\n                case 5 /* TextEditorCursorBlinkingStyle.Solid */:\n                    result += ' cursor-solid';\n                    break;\n                default:\n                    result += ' cursor-solid';\n            }\n        }\n        else {\n            result += ' cursor-solid';\n        }\n        if (this._cursorSmoothCaretAnimation === 'on' || this._cursorSmoothCaretAnimation === 'explicit') {\n            result += ' cursor-smooth-caret-animation';\n        }\n        return result;\n    }\n    _show() {\n        this._primaryCursor.show();\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            this._secondaryCursors[i].show();\n        }\n        this._isVisible = true;\n    }\n    _hide() {\n        this._primaryCursor.hide();\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            this._secondaryCursors[i].hide();\n        }\n        this._isVisible = false;\n    }\n    // ---- IViewPart implementation\n    prepareRender(ctx) {\n        this._primaryCursor.prepareRender(ctx);\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            this._secondaryCursors[i].prepareRender(ctx);\n        }\n    }\n    render(ctx) {\n        const renderData = [];\n        let renderDataLen = 0;\n        const primaryRenderData = this._primaryCursor.render(ctx);\n        if (primaryRenderData) {\n            renderData[renderDataLen++] = primaryRenderData;\n        }\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            const secondaryRenderData = this._secondaryCursors[i].render(ctx);\n            if (secondaryRenderData) {\n                renderData[renderDataLen++] = secondaryRenderData;\n            }\n        }\n        this._renderData = renderData;\n    }\n    getLastRenderData() {\n        return this._renderData;\n    }\n}\nViewCursors.BLINK_INTERVAL = 500;\nregisterThemingParticipant((theme, collector) => {\n    const caret = theme.getColor(editorCursorForeground);\n    if (caret) {\n        let caretBackground = theme.getColor(editorCursorBackground);\n        if (!caretBackground) {\n            caretBackground = caret.opposite();\n        }\n        collector.addRule(`.monaco-editor .cursors-layer .cursor { background-color: ${caret}; border-color: ${caret}; color: ${caretBackground}; }`);\n        if (isHighContrast(theme.type)) {\n            collector.addRule(`.monaco-editor .cursors-layer.has-selection .cursor { border-left: 1px solid ${caretBackground}; border-right: 1px solid ${caretBackground}; }`);\n        }\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { Position } from '../../../common/core/position.js';\nconst invalidFunc = () => { throw new Error(`Invalid change accessor`); };\nexport class ViewZones extends ViewPart {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._contentWidth = layoutInfo.contentWidth;\n        this._contentLeft = layoutInfo.contentLeft;\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setClassName('view-zones');\n        this.domNode.setPosition('absolute');\n        this.domNode.setAttribute('role', 'presentation');\n        this.domNode.setAttribute('aria-hidden', 'true');\n        this.marginDomNode = createFastDomNode(document.createElement('div'));\n        this.marginDomNode.setClassName('margin-view-zones');\n        this.marginDomNode.setPosition('absolute');\n        this.marginDomNode.setAttribute('role', 'presentation');\n        this.marginDomNode.setAttribute('aria-hidden', 'true');\n        this._zones = {};\n    }\n    dispose() {\n        super.dispose();\n        this._zones = {};\n    }\n    // ---- begin view event handlers\n    _recomputeWhitespacesProps() {\n        const whitespaces = this._context.viewLayout.getWhitespaces();\n        const oldWhitespaces = new Map();\n        for (const whitespace of whitespaces) {\n            oldWhitespaces.set(whitespace.id, whitespace);\n        }\n        let hadAChange = false;\n        this._context.viewModel.changeWhitespace((whitespaceAccessor) => {\n            const keys = Object.keys(this._zones);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const id = keys[i];\n                const zone = this._zones[id];\n                const props = this._computeWhitespaceProps(zone.delegate);\n                zone.isInHiddenArea = props.isInHiddenArea;\n                const oldWhitespace = oldWhitespaces.get(id);\n                if (oldWhitespace && (oldWhitespace.afterLineNumber !== props.afterViewLineNumber || oldWhitespace.height !== props.heightInPx)) {\n                    whitespaceAccessor.changeOneWhitespace(id, props.afterViewLineNumber, props.heightInPx);\n                    this._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\n                    hadAChange = true;\n                }\n            }\n        });\n        return hadAChange;\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._contentWidth = layoutInfo.contentWidth;\n        this._contentLeft = layoutInfo.contentLeft;\n        if (e.hasChanged(66 /* EditorOption.lineHeight */)) {\n            this._recomputeWhitespacesProps();\n        }\n        return true;\n    }\n    onLineMappingChanged(e) {\n        return this._recomputeWhitespacesProps();\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged || e.scrollWidthChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    // ---- end view event handlers\n    _getZoneOrdinal(zone) {\n        var _a, _b;\n        return (_b = (_a = zone.ordinal) !== null && _a !== void 0 ? _a : zone.afterColumn) !== null && _b !== void 0 ? _b : 10000;\n    }\n    _computeWhitespaceProps(zone) {\n        if (zone.afterLineNumber === 0) {\n            return {\n                isInHiddenArea: false,\n                afterViewLineNumber: 0,\n                heightInPx: this._heightInPixels(zone),\n                minWidthInPx: this._minWidthInPixels(zone)\n            };\n        }\n        let zoneAfterModelPosition;\n        if (typeof zone.afterColumn !== 'undefined') {\n            zoneAfterModelPosition = this._context.viewModel.model.validatePosition({\n                lineNumber: zone.afterLineNumber,\n                column: zone.afterColumn\n            });\n        }\n        else {\n            const validAfterLineNumber = this._context.viewModel.model.validatePosition({\n                lineNumber: zone.afterLineNumber,\n                column: 1\n            }).lineNumber;\n            zoneAfterModelPosition = new Position(validAfterLineNumber, this._context.viewModel.model.getLineMaxColumn(validAfterLineNumber));\n        }\n        let zoneBeforeModelPosition;\n        if (zoneAfterModelPosition.column === this._context.viewModel.model.getLineMaxColumn(zoneAfterModelPosition.lineNumber)) {\n            zoneBeforeModelPosition = this._context.viewModel.model.validatePosition({\n                lineNumber: zoneAfterModelPosition.lineNumber + 1,\n                column: 1\n            });\n        }\n        else {\n            zoneBeforeModelPosition = this._context.viewModel.model.validatePosition({\n                lineNumber: zoneAfterModelPosition.lineNumber,\n                column: zoneAfterModelPosition.column + 1\n            });\n        }\n        const viewPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(zoneAfterModelPosition, zone.afterColumnAffinity, true);\n        const isVisible = zone.showInHiddenAreas || this._context.viewModel.coordinatesConverter.modelPositionIsVisible(zoneBeforeModelPosition);\n        return {\n            isInHiddenArea: !isVisible,\n            afterViewLineNumber: viewPosition.lineNumber,\n            heightInPx: (isVisible ? this._heightInPixels(zone) : 0),\n            minWidthInPx: this._minWidthInPixels(zone)\n        };\n    }\n    changeViewZones(callback) {\n        let zonesHaveChanged = false;\n        this._context.viewModel.changeWhitespace((whitespaceAccessor) => {\n            const changeAccessor = {\n                addZone: (zone) => {\n                    zonesHaveChanged = true;\n                    return this._addZone(whitespaceAccessor, zone);\n                },\n                removeZone: (id) => {\n                    if (!id) {\n                        return;\n                    }\n                    zonesHaveChanged = this._removeZone(whitespaceAccessor, id) || zonesHaveChanged;\n                },\n                layoutZone: (id) => {\n                    if (!id) {\n                        return;\n                    }\n                    zonesHaveChanged = this._layoutZone(whitespaceAccessor, id) || zonesHaveChanged;\n                }\n            };\n            safeInvoke1Arg(callback, changeAccessor);\n            // Invalidate changeAccessor\n            changeAccessor.addZone = invalidFunc;\n            changeAccessor.removeZone = invalidFunc;\n            changeAccessor.layoutZone = invalidFunc;\n        });\n        return zonesHaveChanged;\n    }\n    _addZone(whitespaceAccessor, zone) {\n        const props = this._computeWhitespaceProps(zone);\n        const whitespaceId = whitespaceAccessor.insertWhitespace(props.afterViewLineNumber, this._getZoneOrdinal(zone), props.heightInPx, props.minWidthInPx);\n        const myZone = {\n            whitespaceId: whitespaceId,\n            delegate: zone,\n            isInHiddenArea: props.isInHiddenArea,\n            isVisible: false,\n            domNode: createFastDomNode(zone.domNode),\n            marginDomNode: zone.marginDomNode ? createFastDomNode(zone.marginDomNode) : null\n        };\n        this._safeCallOnComputedHeight(myZone.delegate, props.heightInPx);\n        myZone.domNode.setPosition('absolute');\n        myZone.domNode.domNode.style.width = '100%';\n        myZone.domNode.setDisplay('none');\n        myZone.domNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\n        this.domNode.appendChild(myZone.domNode);\n        if (myZone.marginDomNode) {\n            myZone.marginDomNode.setPosition('absolute');\n            myZone.marginDomNode.domNode.style.width = '100%';\n            myZone.marginDomNode.setDisplay('none');\n            myZone.marginDomNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\n            this.marginDomNode.appendChild(myZone.marginDomNode);\n        }\n        this._zones[myZone.whitespaceId] = myZone;\n        this.setShouldRender();\n        return myZone.whitespaceId;\n    }\n    _removeZone(whitespaceAccessor, id) {\n        if (this._zones.hasOwnProperty(id)) {\n            const zone = this._zones[id];\n            delete this._zones[id];\n            whitespaceAccessor.removeWhitespace(zone.whitespaceId);\n            zone.domNode.removeAttribute('monaco-visible-view-zone');\n            zone.domNode.removeAttribute('monaco-view-zone');\n            zone.domNode.domNode.parentNode.removeChild(zone.domNode.domNode);\n            if (zone.marginDomNode) {\n                zone.marginDomNode.removeAttribute('monaco-visible-view-zone');\n                zone.marginDomNode.removeAttribute('monaco-view-zone');\n                zone.marginDomNode.domNode.parentNode.removeChild(zone.marginDomNode.domNode);\n            }\n            this.setShouldRender();\n            return true;\n        }\n        return false;\n    }\n    _layoutZone(whitespaceAccessor, id) {\n        if (this._zones.hasOwnProperty(id)) {\n            const zone = this._zones[id];\n            const props = this._computeWhitespaceProps(zone.delegate);\n            zone.isInHiddenArea = props.isInHiddenArea;\n            // const newOrdinal = this._getZoneOrdinal(zone.delegate);\n            whitespaceAccessor.changeOneWhitespace(zone.whitespaceId, props.afterViewLineNumber, props.heightInPx);\n            // TODO@Alex: change `newOrdinal` too\n            this._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\n            this.setShouldRender();\n            return true;\n        }\n        return false;\n    }\n    shouldSuppressMouseDownOnViewZone(id) {\n        if (this._zones.hasOwnProperty(id)) {\n            const zone = this._zones[id];\n            return Boolean(zone.delegate.suppressMouseDown);\n        }\n        return false;\n    }\n    _heightInPixels(zone) {\n        if (typeof zone.heightInPx === 'number') {\n            return zone.heightInPx;\n        }\n        if (typeof zone.heightInLines === 'number') {\n            return this._lineHeight * zone.heightInLines;\n        }\n        return this._lineHeight;\n    }\n    _minWidthInPixels(zone) {\n        if (typeof zone.minWidthInPx === 'number') {\n            return zone.minWidthInPx;\n        }\n        return 0;\n    }\n    _safeCallOnComputedHeight(zone, height) {\n        if (typeof zone.onComputedHeight === 'function') {\n            try {\n                zone.onComputedHeight(height);\n            }\n            catch (e) {\n                onUnexpectedError(e);\n            }\n        }\n    }\n    _safeCallOnDomNodeTop(zone, top) {\n        if (typeof zone.onDomNodeTop === 'function') {\n            try {\n                zone.onDomNodeTop(top);\n            }\n            catch (e) {\n                onUnexpectedError(e);\n            }\n        }\n    }\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(ctx) {\n        const visibleWhitespaces = ctx.viewportData.whitespaceViewportData;\n        const visibleZones = {};\n        let hasVisibleZone = false;\n        for (const visibleWhitespace of visibleWhitespaces) {\n            if (this._zones[visibleWhitespace.id].isInHiddenArea) {\n                continue;\n            }\n            visibleZones[visibleWhitespace.id] = visibleWhitespace;\n            hasVisibleZone = true;\n        }\n        const keys = Object.keys(this._zones);\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const id = keys[i];\n            const zone = this._zones[id];\n            let newTop = 0;\n            let newHeight = 0;\n            let newDisplay = 'none';\n            if (visibleZones.hasOwnProperty(id)) {\n                newTop = visibleZones[id].verticalOffset - ctx.bigNumbersDelta;\n                newHeight = visibleZones[id].height;\n                newDisplay = 'block';\n                // zone is visible\n                if (!zone.isVisible) {\n                    zone.domNode.setAttribute('monaco-visible-view-zone', 'true');\n                    zone.isVisible = true;\n                }\n                this._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(visibleZones[id].verticalOffset));\n            }\n            else {\n                if (zone.isVisible) {\n                    zone.domNode.removeAttribute('monaco-visible-view-zone');\n                    zone.isVisible = false;\n                }\n                this._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(-1000000));\n            }\n            zone.domNode.setTop(newTop);\n            zone.domNode.setHeight(newHeight);\n            zone.domNode.setDisplay(newDisplay);\n            if (zone.marginDomNode) {\n                zone.marginDomNode.setTop(newTop);\n                zone.marginDomNode.setHeight(newHeight);\n                zone.marginDomNode.setDisplay(newDisplay);\n            }\n        }\n        if (hasVisibleZone) {\n            this.domNode.setWidth(Math.max(ctx.scrollWidth, this._contentWidth));\n            this.marginDomNode.setWidth(this._contentLeft);\n        }\n    }\n}\nfunction safeInvoke1Arg(func, arg1) {\n    try {\n        return func(arg1);\n    }\n    catch (e) {\n        onUnexpectedError(e);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport './blockDecorations.css';\nimport { ViewPart } from '../../view/viewPart.js';\nexport class BlockDecorations extends ViewPart {\n    constructor(context) {\n        super(context);\n        this.blocks = [];\n        this.contentWidth = -1;\n        this.contentLeft = 0;\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setAttribute('role', 'presentation');\n        this.domNode.setAttribute('aria-hidden', 'true');\n        this.domNode.setClassName('blockDecorations-container');\n        this.update();\n    }\n    update() {\n        let didChange = false;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        const newContentWidth = layoutInfo.contentWidth - layoutInfo.verticalScrollbarWidth;\n        if (this.contentWidth !== newContentWidth) {\n            this.contentWidth = newContentWidth;\n            didChange = true;\n        }\n        const newContentLeft = layoutInfo.contentLeft;\n        if (this.contentLeft !== newContentLeft) {\n            this.contentLeft = newContentLeft;\n            didChange = true;\n        }\n        return didChange;\n    }\n    dispose() {\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        return this.update();\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged || e.scrollLeftChanged;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(ctx) {\n        var _a;\n        let count = 0;\n        const decorations = ctx.getDecorationsInViewport();\n        for (const decoration of decorations) {\n            if (!decoration.options.blockClassName) {\n                continue;\n            }\n            let block = this.blocks[count];\n            if (!block) {\n                block = this.blocks[count] = createFastDomNode(document.createElement('div'));\n                this.domNode.appendChild(block);\n            }\n            let top;\n            let bottom;\n            if (decoration.options.blockIsAfterEnd) {\n                // range must be empty\n                top = ctx.getVerticalOffsetAfterLineNumber(decoration.range.endLineNumber, false);\n                bottom = ctx.getVerticalOffsetAfterLineNumber(decoration.range.endLineNumber, true);\n            }\n            else {\n                top = ctx.getVerticalOffsetForLineNumber(decoration.range.startLineNumber, true);\n                bottom = decoration.range.isEmpty() && !decoration.options.blockDoesNotCollapse\n                    ? ctx.getVerticalOffsetForLineNumber(decoration.range.startLineNumber, false)\n                    : ctx.getVerticalOffsetAfterLineNumber(decoration.range.endLineNumber, true);\n            }\n            const [paddingTop, paddingRight, paddingBottom, paddingLeft] = (_a = decoration.options.blockPadding) !== null && _a !== void 0 ? _a : [0, 0, 0, 0];\n            block.setClassName('blockDecorations-block ' + decoration.options.blockClassName);\n            block.setLeft(this.contentLeft - paddingLeft);\n            block.setWidth(this.contentWidth + paddingLeft + paddingRight);\n            block.setTop(top - ctx.scrollTop - paddingTop);\n            block.setHeight(bottom - top + paddingTop + paddingBottom);\n            count++;\n        }\n        for (let i = count; i < this.blocks.length; i++) {\n            this.blocks[i].domNode.remove();\n        }\n        this.blocks.length = count;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './whitespace.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { LineRange } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { Position } from '../../../common/core/position.js';\nimport { editorWhitespaces } from '../../../common/core/editorColorRegistry.js';\nexport class WhitespaceOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._options = new WhitespaceOptions(this._context.configuration);\n        this._selection = [];\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const newOptions = new WhitespaceOptions(this._context.configuration);\n        if (this._options.equals(newOptions)) {\n            return e.hasChanged(143 /* EditorOption.layoutInfo */);\n        }\n        this._options = newOptions;\n        return true;\n    }\n    onCursorStateChanged(e) {\n        this._selection = e.selections;\n        if (this._options.renderWhitespace === 'selection') {\n            return true;\n        }\n        return false;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        if (this._options.renderWhitespace === 'none') {\n            this._renderResult = null;\n            return;\n        }\n        const startLineNumber = ctx.visibleRange.startLineNumber;\n        const endLineNumber = ctx.visibleRange.endLineNumber;\n        const lineCount = endLineNumber - startLineNumber + 1;\n        const needed = new Array(lineCount);\n        for (let i = 0; i < lineCount; i++) {\n            needed[i] = true;\n        }\n        const viewportData = this._context.viewModel.getMinimapLinesRenderingData(ctx.viewportData.startLineNumber, ctx.viewportData.endLineNumber, needed);\n        this._renderResult = [];\n        for (let lineNumber = ctx.viewportData.startLineNumber; lineNumber <= ctx.viewportData.endLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - ctx.viewportData.startLineNumber;\n            const lineData = viewportData.data[lineIndex];\n            let selectionsOnLine = null;\n            if (this._options.renderWhitespace === 'selection') {\n                const selections = this._selection;\n                for (const selection of selections) {\n                    if (selection.endLineNumber < lineNumber || selection.startLineNumber > lineNumber) {\n                        // Selection does not intersect line\n                        continue;\n                    }\n                    const startColumn = (selection.startLineNumber === lineNumber ? selection.startColumn : lineData.minColumn);\n                    const endColumn = (selection.endLineNumber === lineNumber ? selection.endColumn : lineData.maxColumn);\n                    if (startColumn < endColumn) {\n                        if (!selectionsOnLine) {\n                            selectionsOnLine = [];\n                        }\n                        selectionsOnLine.push(new LineRange(startColumn - 1, endColumn - 1));\n                    }\n                }\n            }\n            this._renderResult[lineIndex] = this._applyRenderWhitespace(ctx, lineNumber, selectionsOnLine, lineData);\n        }\n    }\n    _applyRenderWhitespace(ctx, lineNumber, selections, lineData) {\n        if (this._options.renderWhitespace === 'selection' && !selections) {\n            return '';\n        }\n        if (this._options.renderWhitespace === 'trailing' && lineData.continuesWithWrappedLine) {\n            return '';\n        }\n        const color = this._context.theme.getColor(editorWhitespaces);\n        const USE_SVG = this._options.renderWithSVG;\n        const lineContent = lineData.content;\n        const len = (this._options.stopRenderingLineAfter === -1 ? lineContent.length : Math.min(this._options.stopRenderingLineAfter, lineContent.length));\n        const continuesWithWrappedLine = lineData.continuesWithWrappedLine;\n        const fauxIndentLength = lineData.minColumn - 1;\n        const onlyBoundary = (this._options.renderWhitespace === 'boundary');\n        const onlyTrailing = (this._options.renderWhitespace === 'trailing');\n        const lineHeight = this._options.lineHeight;\n        const middotWidth = this._options.middotWidth;\n        const wsmiddotWidth = this._options.wsmiddotWidth;\n        const spaceWidth = this._options.spaceWidth;\n        const wsmiddotDiff = Math.abs(wsmiddotWidth - spaceWidth);\n        const middotDiff = Math.abs(middotWidth - spaceWidth);\n        // U+2E31 - WORD SEPARATOR MIDDLE DOT\n        // U+00B7 - MIDDLE DOT\n        const renderSpaceCharCode = (wsmiddotDiff < middotDiff ? 0x2E31 : 0xB7);\n        const canUseHalfwidthRightwardsArrow = this._options.canUseHalfwidthRightwardsArrow;\n        let result = '';\n        let lineIsEmptyOrWhitespace = false;\n        let firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(lineContent);\n        let lastNonWhitespaceIndex;\n        if (firstNonWhitespaceIndex === -1) {\n            lineIsEmptyOrWhitespace = true;\n            firstNonWhitespaceIndex = len;\n            lastNonWhitespaceIndex = len;\n        }\n        else {\n            lastNonWhitespaceIndex = strings.lastNonWhitespaceIndex(lineContent);\n        }\n        let currentSelectionIndex = 0;\n        let currentSelection = selections && selections[currentSelectionIndex];\n        let maxLeft = 0;\n        for (let charIndex = fauxIndentLength; charIndex < len; charIndex++) {\n            const chCode = lineContent.charCodeAt(charIndex);\n            if (currentSelection && charIndex >= currentSelection.endOffset) {\n                currentSelectionIndex++;\n                currentSelection = selections && selections[currentSelectionIndex];\n            }\n            if (chCode !== 9 /* CharCode.Tab */ && chCode !== 32 /* CharCode.Space */) {\n                continue;\n            }\n            if (onlyTrailing && !lineIsEmptyOrWhitespace && charIndex <= lastNonWhitespaceIndex) {\n                // If rendering only trailing whitespace, check that the charIndex points to trailing whitespace.\n                continue;\n            }\n            if (onlyBoundary && charIndex >= firstNonWhitespaceIndex && charIndex <= lastNonWhitespaceIndex && chCode === 32 /* CharCode.Space */) {\n                // rendering only boundary whitespace\n                const prevChCode = (charIndex - 1 >= 0 ? lineContent.charCodeAt(charIndex - 1) : 0 /* CharCode.Null */);\n                const nextChCode = (charIndex + 1 < len ? lineContent.charCodeAt(charIndex + 1) : 0 /* CharCode.Null */);\n                if (prevChCode !== 32 /* CharCode.Space */ && nextChCode !== 32 /* CharCode.Space */) {\n                    continue;\n                }\n            }\n            if (onlyBoundary && continuesWithWrappedLine && charIndex === len - 1) {\n                const prevCharCode = (charIndex - 1 >= 0 ? lineContent.charCodeAt(charIndex - 1) : 0 /* CharCode.Null */);\n                const isSingleTrailingSpace = (chCode === 32 /* CharCode.Space */ && (prevCharCode !== 32 /* CharCode.Space */ && prevCharCode !== 9 /* CharCode.Tab */));\n                if (isSingleTrailingSpace) {\n                    continue;\n                }\n            }\n            if (selections && (!currentSelection || currentSelection.startOffset > charIndex || currentSelection.endOffset <= charIndex)) {\n                // If rendering whitespace on selection, check that the charIndex falls within a selection\n                continue;\n            }\n            const visibleRange = ctx.visibleRangeForPosition(new Position(lineNumber, charIndex + 1));\n            if (!visibleRange) {\n                continue;\n            }\n            if (USE_SVG) {\n                maxLeft = Math.max(maxLeft, visibleRange.left);\n                if (chCode === 9 /* CharCode.Tab */) {\n                    result += this._renderArrow(lineHeight, spaceWidth, visibleRange.left);\n                }\n                else {\n                    result += `<circle cx=\"${(visibleRange.left + spaceWidth / 2).toFixed(2)}\" cy=\"${(lineHeight / 2).toFixed(2)}\" r=\"${(spaceWidth / 7).toFixed(2)}\" />`;\n                }\n            }\n            else {\n                if (chCode === 9 /* CharCode.Tab */) {\n                    result += `<div class=\"mwh\" style=\"left:${visibleRange.left}px;height:${lineHeight}px;\">${canUseHalfwidthRightwardsArrow ? String.fromCharCode(0xFFEB) : String.fromCharCode(0x2192)}</div>`;\n                }\n                else {\n                    result += `<div class=\"mwh\" style=\"left:${visibleRange.left}px;height:${lineHeight}px;\">${String.fromCharCode(renderSpaceCharCode)}</div>`;\n                }\n            }\n        }\n        if (USE_SVG) {\n            maxLeft = Math.round(maxLeft + spaceWidth);\n            return (`<svg style=\"position:absolute;width:${maxLeft}px;height:${lineHeight}px\" viewBox=\"0 0 ${maxLeft} ${lineHeight}\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"${color}\">`\n                + result\n                + `</svg>`);\n        }\n        return result;\n    }\n    _renderArrow(lineHeight, spaceWidth, left) {\n        const strokeWidth = spaceWidth / 7;\n        const width = spaceWidth;\n        const dy = lineHeight / 2;\n        const dx = left;\n        const p1 = { x: 0, y: strokeWidth / 2 };\n        const p2 = { x: 100 / 125 * width, y: p1.y };\n        const p3 = { x: p2.x - 0.2 * p2.x, y: p2.y + 0.2 * p2.x };\n        const p4 = { x: p3.x + 0.1 * p2.x, y: p3.y + 0.1 * p2.x };\n        const p5 = { x: p4.x + 0.35 * p2.x, y: p4.y - 0.35 * p2.x };\n        const p6 = { x: p5.x, y: -p5.y };\n        const p7 = { x: p4.x, y: -p4.y };\n        const p8 = { x: p3.x, y: -p3.y };\n        const p9 = { x: p2.x, y: -p2.y };\n        const p10 = { x: p1.x, y: -p1.y };\n        const p = [p1, p2, p3, p4, p5, p6, p7, p8, p9, p10];\n        const parts = p.map((p) => `${(dx + p.x).toFixed(2)} ${(dy + p.y).toFixed(2)}`).join(' L ');\n        return `<path d=\"M ${parts}\" />`;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\nclass WhitespaceOptions {\n    constructor(config) {\n        const options = config.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        const experimentalWhitespaceRendering = options.get(38 /* EditorOption.experimentalWhitespaceRendering */);\n        if (experimentalWhitespaceRendering === 'off') {\n            // whitespace is rendered in the view line\n            this.renderWhitespace = 'none';\n            this.renderWithSVG = false;\n        }\n        else if (experimentalWhitespaceRendering === 'svg') {\n            this.renderWhitespace = options.get(98 /* EditorOption.renderWhitespace */);\n            this.renderWithSVG = true;\n        }\n        else {\n            this.renderWhitespace = options.get(98 /* EditorOption.renderWhitespace */);\n            this.renderWithSVG = false;\n        }\n        this.spaceWidth = fontInfo.spaceWidth;\n        this.middotWidth = fontInfo.middotWidth;\n        this.wsmiddotWidth = fontInfo.wsmiddotWidth;\n        this.canUseHalfwidthRightwardsArrow = fontInfo.canUseHalfwidthRightwardsArrow;\n        this.lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this.stopRenderingLineAfter = options.get(116 /* EditorOption.stopRenderingLineAfter */);\n    }\n    equals(other) {\n        return (this.renderWhitespace === other.renderWhitespace\n            && this.renderWithSVG === other.renderWithSVG\n            && this.spaceWidth === other.spaceWidth\n            && this.middotWidth === other.middotWidth\n            && this.wsmiddotWidth === other.wsmiddotWidth\n            && this.canUseHalfwidthRightwardsArrow === other.canUseHalfwidthRightwardsArrow\n            && this.lineHeight === other.lineHeight\n            && this.stopRenderingLineAfter === other.stopRenderingLineAfter);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../base/browser/dom.js';\nimport { Selection } from '../common/core/selection.js';\nimport { Range } from '../common/core/range.js';\nimport { createFastDomNode } from '../../base/browser/fastDomNode.js';\nimport { onUnexpectedError } from '../../base/common/errors.js';\nimport { PointerHandler } from './controller/pointerHandler.js';\nimport { TextAreaHandler } from './controller/textAreaHandler.js';\nimport { ViewController } from './view/viewController.js';\nimport { ViewUserInputEvents } from './view/viewUserInputEvents.js';\nimport { ContentViewOverlays, MarginViewOverlays } from './view/viewOverlays.js';\nimport { PartFingerprints } from './view/viewPart.js';\nimport { ViewContentWidgets } from './viewParts/contentWidgets/contentWidgets.js';\nimport { CurrentLineHighlightOverlay, CurrentLineMarginHighlightOverlay } from './viewParts/currentLineHighlight/currentLineHighlight.js';\nimport { DecorationsOverlay } from './viewParts/decorations/decorations.js';\nimport { EditorScrollbar } from './viewParts/editorScrollbar/editorScrollbar.js';\nimport { IndentGuidesOverlay } from './viewParts/indentGuides/indentGuides.js';\nimport { LineNumbersOverlay } from './viewParts/lineNumbers/lineNumbers.js';\nimport { ViewLines } from './viewParts/lines/viewLines.js';\nimport { LinesDecorationsOverlay } from './viewParts/linesDecorations/linesDecorations.js';\nimport { Margin } from './viewParts/margin/margin.js';\nimport { MarginViewLineDecorationsOverlay } from './viewParts/marginDecorations/marginDecorations.js';\nimport { Minimap } from './viewParts/minimap/minimap.js';\nimport { ViewOverlayWidgets } from './viewParts/overlayWidgets/overlayWidgets.js';\nimport { DecorationsOverviewRuler } from './viewParts/overviewRuler/decorationsOverviewRuler.js';\nimport { OverviewRuler } from './viewParts/overviewRuler/overviewRuler.js';\nimport { Rulers } from './viewParts/rulers/rulers.js';\nimport { ScrollDecorationViewPart } from './viewParts/scrollDecoration/scrollDecoration.js';\nimport { SelectionsOverlay } from './viewParts/selections/selections.js';\nimport { ViewCursors } from './viewParts/viewCursors/viewCursors.js';\nimport { ViewZones } from './viewParts/viewZones/viewZones.js';\nimport { Position } from '../common/core/position.js';\nimport { RenderingContext } from './view/renderingContext.js';\nimport { ViewContext } from '../common/viewModel/viewContext.js';\nimport { ViewportData } from '../common/viewLayout/viewLinesViewportData.js';\nimport { ViewEventHandler } from '../common/viewEventHandler.js';\nimport { getThemeTypeSelector } from '../../platform/theme/common/themeService.js';\nimport { PointerHandlerLastRenderData } from './controller/mouseTarget.js';\nimport { BlockDecorations } from './viewParts/blockDecorations/blockDecorations.js';\nimport { inputLatency } from '../../base/browser/performance.js';\nimport { WhitespaceOverlay } from './viewParts/whitespace/whitespace.js';\nimport { GlyphMarginWidgets } from './viewParts/glyphMargin/glyphMargin.js';\nimport { GlyphMarginLane } from '../common/model.js';\nimport { IInstantiationService } from '../../platform/instantiation/common/instantiation.js';\nlet View = class View extends ViewEventHandler {\n    constructor(commandDelegate, configuration, colorTheme, model, userInputEvents, overflowWidgetsDomNode, _instantiationService) {\n        super();\n        this._instantiationService = _instantiationService;\n        // Actual mutable state\n        this._shouldRecomputeGlyphMarginLanes = false;\n        this._selections = [new Selection(1, 1, 1, 1)];\n        this._renderAnimationFrame = null;\n        const viewController = new ViewController(configuration, model, userInputEvents, commandDelegate);\n        // The view context is passed on to most classes (basically to reduce param. counts in ctors)\n        this._context = new ViewContext(configuration, colorTheme, model);\n        // Ensure the view is the first event handler in order to update the layout\n        this._context.addEventHandler(this);\n        this._viewParts = [];\n        // Keyboard handler\n        this._textAreaHandler = this._instantiationService.createInstance(TextAreaHandler, this._context, viewController, this._createTextAreaHandlerHelper());\n        this._viewParts.push(this._textAreaHandler);\n        // These two dom nodes must be constructed up front, since references are needed in the layout provider (scrolling & co.)\n        this._linesContent = createFastDomNode(document.createElement('div'));\n        this._linesContent.setClassName('lines-content' + ' monaco-editor-background');\n        this._linesContent.setPosition('absolute');\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setClassName(this._getEditorClassName());\n        // Set role 'code' for better screen reader support https://github.com/microsoft/vscode/issues/93438\n        this.domNode.setAttribute('role', 'code');\n        this._overflowGuardContainer = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this._overflowGuardContainer, 3 /* PartFingerprint.OverflowGuard */);\n        this._overflowGuardContainer.setClassName('overflow-guard');\n        this._scrollbar = new EditorScrollbar(this._context, this._linesContent, this.domNode, this._overflowGuardContainer);\n        this._viewParts.push(this._scrollbar);\n        // View Lines\n        this._viewLines = new ViewLines(this._context, this._linesContent);\n        // View Zones\n        this._viewZones = new ViewZones(this._context);\n        this._viewParts.push(this._viewZones);\n        // Decorations overview ruler\n        const decorationsOverviewRuler = new DecorationsOverviewRuler(this._context);\n        this._viewParts.push(decorationsOverviewRuler);\n        const scrollDecoration = new ScrollDecorationViewPart(this._context);\n        this._viewParts.push(scrollDecoration);\n        const contentViewOverlays = new ContentViewOverlays(this._context);\n        this._viewParts.push(contentViewOverlays);\n        contentViewOverlays.addDynamicOverlay(new CurrentLineHighlightOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new SelectionsOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new IndentGuidesOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new DecorationsOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new WhitespaceOverlay(this._context));\n        const marginViewOverlays = new MarginViewOverlays(this._context);\n        this._viewParts.push(marginViewOverlays);\n        marginViewOverlays.addDynamicOverlay(new CurrentLineMarginHighlightOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new MarginViewLineDecorationsOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new LinesDecorationsOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new LineNumbersOverlay(this._context));\n        // Glyph margin widgets\n        this._glyphMarginWidgets = new GlyphMarginWidgets(this._context);\n        this._viewParts.push(this._glyphMarginWidgets);\n        const margin = new Margin(this._context);\n        margin.getDomNode().appendChild(this._viewZones.marginDomNode);\n        margin.getDomNode().appendChild(marginViewOverlays.getDomNode());\n        margin.getDomNode().appendChild(this._glyphMarginWidgets.domNode);\n        this._viewParts.push(margin);\n        // Content widgets\n        this._contentWidgets = new ViewContentWidgets(this._context, this.domNode);\n        this._viewParts.push(this._contentWidgets);\n        this._viewCursors = new ViewCursors(this._context);\n        this._viewParts.push(this._viewCursors);\n        // Overlay widgets\n        this._overlayWidgets = new ViewOverlayWidgets(this._context);\n        this._viewParts.push(this._overlayWidgets);\n        const rulers = new Rulers(this._context);\n        this._viewParts.push(rulers);\n        const blockOutline = new BlockDecorations(this._context);\n        this._viewParts.push(blockOutline);\n        const minimap = new Minimap(this._context);\n        this._viewParts.push(minimap);\n        // -------------- Wire dom nodes up\n        if (decorationsOverviewRuler) {\n            const overviewRulerData = this._scrollbar.getOverviewRulerLayoutInfo();\n            overviewRulerData.parent.insertBefore(decorationsOverviewRuler.getDomNode(), overviewRulerData.insertBefore);\n        }\n        this._linesContent.appendChild(contentViewOverlays.getDomNode());\n        this._linesContent.appendChild(rulers.domNode);\n        this._linesContent.appendChild(this._viewZones.domNode);\n        this._linesContent.appendChild(this._viewLines.getDomNode());\n        this._linesContent.appendChild(this._contentWidgets.domNode);\n        this._linesContent.appendChild(this._viewCursors.getDomNode());\n        this._overflowGuardContainer.appendChild(margin.getDomNode());\n        this._overflowGuardContainer.appendChild(this._scrollbar.getDomNode());\n        this._overflowGuardContainer.appendChild(scrollDecoration.getDomNode());\n        this._overflowGuardContainer.appendChild(this._textAreaHandler.textArea);\n        this._overflowGuardContainer.appendChild(this._textAreaHandler.textAreaCover);\n        this._overflowGuardContainer.appendChild(this._overlayWidgets.getDomNode());\n        this._overflowGuardContainer.appendChild(minimap.getDomNode());\n        this._overflowGuardContainer.appendChild(blockOutline.domNode);\n        this.domNode.appendChild(this._overflowGuardContainer);\n        if (overflowWidgetsDomNode) {\n            overflowWidgetsDomNode.appendChild(this._contentWidgets.overflowingContentWidgetsDomNode.domNode);\n        }\n        else {\n            this.domNode.appendChild(this._contentWidgets.overflowingContentWidgetsDomNode);\n        }\n        this._applyLayout();\n        // Pointer handler\n        this._pointerHandler = this._register(new PointerHandler(this._context, viewController, this._createPointerHandlerHelper()));\n    }\n    _flushAccumulatedAndRenderNow() {\n        if (this._shouldRecomputeGlyphMarginLanes) {\n            this._shouldRecomputeGlyphMarginLanes = false;\n            this._context.configuration.setGlyphMarginDecorationLaneCount(this._computeGlyphMarginLaneCount());\n        }\n        inputLatency.onRenderStart();\n        this._renderNow();\n    }\n    _computeGlyphMarginLaneCount() {\n        const model = this._context.viewModel.model;\n        let glyphs = [];\n        // Add all margin decorations\n        glyphs = glyphs.concat(model.getAllMarginDecorations().map((decoration) => {\n            var _a, _b;\n            const lane = (_b = (_a = decoration.options.glyphMargin) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : GlyphMarginLane.Left;\n            return { range: decoration.range, lane };\n        }));\n        // Add all glyph margin widgets\n        glyphs = glyphs.concat(this._glyphMarginWidgets.getWidgets().map((widget) => {\n            const range = model.validateRange(widget.preference.range);\n            return { range, lane: widget.preference.lane };\n        }));\n        // Sorted by their start position\n        glyphs.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\n        let leftDecRange = null;\n        let rightDecRange = null;\n        for (const decoration of glyphs) {\n            if (decoration.lane === GlyphMarginLane.Left && (!leftDecRange || Range.compareRangesUsingEnds(leftDecRange, decoration.range) < 0)) {\n                // assign only if the range of `decoration` ends after, which means it has a higher chance to overlap with the other lane\n                leftDecRange = decoration.range;\n            }\n            if (decoration.lane === GlyphMarginLane.Right && (!rightDecRange || Range.compareRangesUsingEnds(rightDecRange, decoration.range) < 0)) {\n                // assign only if the range of `decoration` ends after, which means it has a higher chance to overlap with the other lane\n                rightDecRange = decoration.range;\n            }\n            if (leftDecRange && rightDecRange) {\n                if (leftDecRange.endLineNumber < rightDecRange.startLineNumber) {\n                    // there's no chance for `leftDecRange` to ever intersect something going further\n                    leftDecRange = null;\n                    continue;\n                }\n                if (rightDecRange.endLineNumber < leftDecRange.startLineNumber) {\n                    // there's no chance for `rightDecRange` to ever intersect something going further\n                    rightDecRange = null;\n                    continue;\n                }\n                // leftDecRange and rightDecRange are intersecting or touching => we need two lanes\n                return 2;\n            }\n        }\n        return 1;\n    }\n    _createPointerHandlerHelper() {\n        return {\n            viewDomNode: this.domNode.domNode,\n            linesContentDomNode: this._linesContent.domNode,\n            viewLinesDomNode: this._viewLines.getDomNode().domNode,\n            focusTextArea: () => {\n                this.focus();\n            },\n            dispatchTextAreaEvent: (event) => {\n                this._textAreaHandler.textArea.domNode.dispatchEvent(event);\n            },\n            getLastRenderData: () => {\n                const lastViewCursorsRenderData = this._viewCursors.getLastRenderData() || [];\n                const lastTextareaPosition = this._textAreaHandler.getLastRenderData();\n                return new PointerHandlerLastRenderData(lastViewCursorsRenderData, lastTextareaPosition);\n            },\n            renderNow: () => {\n                this.render(true, false);\n            },\n            shouldSuppressMouseDownOnViewZone: (viewZoneId) => {\n                return this._viewZones.shouldSuppressMouseDownOnViewZone(viewZoneId);\n            },\n            shouldSuppressMouseDownOnWidget: (widgetId) => {\n                return this._contentWidgets.shouldSuppressMouseDownOnWidget(widgetId);\n            },\n            getPositionFromDOMInfo: (spanNode, offset) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.getPositionFromDOMInfo(spanNode, offset);\n            },\n            visibleRangeForPosition: (lineNumber, column) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.visibleRangeForPosition(new Position(lineNumber, column));\n            },\n            getLineWidth: (lineNumber) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.getLineWidth(lineNumber);\n            }\n        };\n    }\n    _createTextAreaHandlerHelper() {\n        return {\n            visibleRangeForPosition: (position) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.visibleRangeForPosition(position);\n            }\n        };\n    }\n    _applyLayout() {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this.domNode.setWidth(layoutInfo.width);\n        this.domNode.setHeight(layoutInfo.height);\n        this._overflowGuardContainer.setWidth(layoutInfo.width);\n        this._overflowGuardContainer.setHeight(layoutInfo.height);\n        this._linesContent.setWidth(1000000);\n        this._linesContent.setHeight(1000000);\n    }\n    _getEditorClassName() {\n        const focused = this._textAreaHandler.isFocused() ? ' focused' : '';\n        return this._context.configuration.options.get(140 /* EditorOption.editorClassName */) + ' ' + getThemeTypeSelector(this._context.theme.type) + focused;\n    }\n    // --- begin event handlers\n    handleEvents(events) {\n        super.handleEvents(events);\n        this._scheduleRender();\n    }\n    onConfigurationChanged(e) {\n        this.domNode.setClassName(this._getEditorClassName());\n        this._applyLayout();\n        return false;\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections;\n        return false;\n    }\n    onDecorationsChanged(e) {\n        if (e.affectsGlyphMargin) {\n            this._shouldRecomputeGlyphMarginLanes = true;\n        }\n        return false;\n    }\n    onFocusChanged(e) {\n        this.domNode.setClassName(this._getEditorClassName());\n        return false;\n    }\n    onThemeChanged(e) {\n        this._context.theme.update(e.theme);\n        this.domNode.setClassName(this._getEditorClassName());\n        return false;\n    }\n    // --- end event handlers\n    dispose() {\n        if (this._renderAnimationFrame !== null) {\n            this._renderAnimationFrame.dispose();\n            this._renderAnimationFrame = null;\n        }\n        this._contentWidgets.overflowingContentWidgetsDomNode.domNode.remove();\n        this._context.removeEventHandler(this);\n        this._viewLines.dispose();\n        // Destroy view parts\n        for (const viewPart of this._viewParts) {\n            viewPart.dispose();\n        }\n        super.dispose();\n    }\n    _scheduleRender() {\n        if (this._renderAnimationFrame === null) {\n            this._renderAnimationFrame = dom.runAtThisOrScheduleAtNextAnimationFrame(this._onRenderScheduled.bind(this), 100);\n        }\n    }\n    _onRenderScheduled() {\n        this._renderAnimationFrame = null;\n        this._flushAccumulatedAndRenderNow();\n    }\n    _renderNow() {\n        safeInvokeNoArg(() => this._actualRender());\n    }\n    _getViewPartsToRender() {\n        const result = [];\n        let resultLen = 0;\n        for (const viewPart of this._viewParts) {\n            if (viewPart.shouldRender()) {\n                result[resultLen++] = viewPart;\n            }\n        }\n        return result;\n    }\n    _actualRender() {\n        if (!dom.isInDOM(this.domNode.domNode)) {\n            return;\n        }\n        let viewPartsToRender = this._getViewPartsToRender();\n        if (!this._viewLines.shouldRender() && viewPartsToRender.length === 0) {\n            // Nothing to render\n            return;\n        }\n        const partialViewportData = this._context.viewLayout.getLinesViewportData();\n        this._context.viewModel.setViewport(partialViewportData.startLineNumber, partialViewportData.endLineNumber, partialViewportData.centeredLineNumber);\n        const viewportData = new ViewportData(this._selections, partialViewportData, this._context.viewLayout.getWhitespaceViewportData(), this._context.viewModel);\n        if (this._contentWidgets.shouldRender()) {\n            // Give the content widgets a chance to set their max width before a possible synchronous layout\n            this._contentWidgets.onBeforeRender(viewportData);\n        }\n        if (this._viewLines.shouldRender()) {\n            this._viewLines.renderText(viewportData);\n            this._viewLines.onDidRender();\n            // Rendering of viewLines might cause scroll events to occur, so collect view parts to render again\n            viewPartsToRender = this._getViewPartsToRender();\n        }\n        const renderingContext = new RenderingContext(this._context.viewLayout, viewportData, this._viewLines);\n        // Render the rest of the parts\n        for (const viewPart of viewPartsToRender) {\n            viewPart.prepareRender(renderingContext);\n        }\n        for (const viewPart of viewPartsToRender) {\n            viewPart.render(renderingContext);\n            viewPart.onDidRender();\n        }\n    }\n    // --- BEGIN CodeEditor helpers\n    delegateVerticalScrollbarPointerDown(browserEvent) {\n        this._scrollbar.delegateVerticalScrollbarPointerDown(browserEvent);\n    }\n    delegateScrollFromMouseWheelEvent(browserEvent) {\n        this._scrollbar.delegateScrollFromMouseWheelEvent(browserEvent);\n    }\n    restoreState(scrollPosition) {\n        this._context.viewModel.viewLayout.setScrollPosition({\n            scrollTop: scrollPosition.scrollTop,\n            scrollLeft: scrollPosition.scrollLeft\n        }, 1 /* ScrollType.Immediate */);\n        this._context.viewModel.visibleLinesStabilized();\n    }\n    getOffsetForColumn(modelLineNumber, modelColumn) {\n        const modelPosition = this._context.viewModel.model.validatePosition({\n            lineNumber: modelLineNumber,\n            column: modelColumn\n        });\n        const viewPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n        this._flushAccumulatedAndRenderNow();\n        const visibleRange = this._viewLines.visibleRangeForPosition(new Position(viewPosition.lineNumber, viewPosition.column));\n        if (!visibleRange) {\n            return -1;\n        }\n        return visibleRange.left;\n    }\n    getTargetAtClientPoint(clientX, clientY) {\n        const mouseTarget = this._pointerHandler.getTargetAtClientPoint(clientX, clientY);\n        if (!mouseTarget) {\n            return null;\n        }\n        return ViewUserInputEvents.convertViewToModelMouseTarget(mouseTarget, this._context.viewModel.coordinatesConverter);\n    }\n    createOverviewRuler(cssClassName) {\n        return new OverviewRuler(this._context, cssClassName);\n    }\n    change(callback) {\n        this._viewZones.changeViewZones(callback);\n        this._scheduleRender();\n    }\n    render(now, everything) {\n        if (everything) {\n            // Force everything to render...\n            this._viewLines.forceShouldRender();\n            for (const viewPart of this._viewParts) {\n                viewPart.forceShouldRender();\n            }\n        }\n        if (now) {\n            this._flushAccumulatedAndRenderNow();\n        }\n        else {\n            this._scheduleRender();\n        }\n    }\n    writeScreenReaderContent(reason) {\n        this._textAreaHandler.writeScreenReaderContent(reason);\n    }\n    focus() {\n        this._textAreaHandler.focusTextArea();\n    }\n    isFocused() {\n        return this._textAreaHandler.isFocused();\n    }\n    setAriaOptions(options) {\n        this._textAreaHandler.setAriaOptions(options);\n    }\n    addContentWidget(widgetData) {\n        this._contentWidgets.addWidget(widgetData.widget);\n        this.layoutContentWidget(widgetData);\n        this._scheduleRender();\n    }\n    layoutContentWidget(widgetData) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        this._contentWidgets.setWidgetPosition(widgetData.widget, (_b = (_a = widgetData.position) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : null, (_d = (_c = widgetData.position) === null || _c === void 0 ? void 0 : _c.secondaryPosition) !== null && _d !== void 0 ? _d : null, (_f = (_e = widgetData.position) === null || _e === void 0 ? void 0 : _e.preference) !== null && _f !== void 0 ? _f : null, (_h = (_g = widgetData.position) === null || _g === void 0 ? void 0 : _g.positionAffinity) !== null && _h !== void 0 ? _h : null);\n        this._scheduleRender();\n    }\n    removeContentWidget(widgetData) {\n        this._contentWidgets.removeWidget(widgetData.widget);\n        this._scheduleRender();\n    }\n    addOverlayWidget(widgetData) {\n        this._overlayWidgets.addWidget(widgetData.widget);\n        this.layoutOverlayWidget(widgetData);\n        this._scheduleRender();\n    }\n    layoutOverlayWidget(widgetData) {\n        const newPreference = widgetData.position ? widgetData.position.preference : null;\n        const shouldRender = this._overlayWidgets.setWidgetPosition(widgetData.widget, newPreference);\n        if (shouldRender) {\n            this._scheduleRender();\n        }\n    }\n    removeOverlayWidget(widgetData) {\n        this._overlayWidgets.removeWidget(widgetData.widget);\n        this._scheduleRender();\n    }\n    addGlyphMarginWidget(widgetData) {\n        this._glyphMarginWidgets.addWidget(widgetData.widget);\n        this._shouldRecomputeGlyphMarginLanes = true;\n        this._scheduleRender();\n    }\n    layoutGlyphMarginWidget(widgetData) {\n        const newPreference = widgetData.position;\n        const shouldRender = this._glyphMarginWidgets.setWidgetPosition(widgetData.widget, newPreference);\n        if (shouldRender) {\n            this._shouldRecomputeGlyphMarginLanes = true;\n            this._scheduleRender();\n        }\n    }\n    removeGlyphMarginWidget(widgetData) {\n        this._glyphMarginWidgets.removeWidget(widgetData.widget);\n        this._shouldRecomputeGlyphMarginLanes = true;\n        this._scheduleRender();\n    }\n};\nView = __decorate([\n    __param(6, IInstantiationService)\n], View);\nexport { View };\nfunction safeInvokeNoArg(func) {\n    try {\n        return func();\n    }\n    catch (e) {\n        onUnexpectedError(e);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createTrustedTypesPolicy } from '../../../base/browser/trustedTypes.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { StringBuilder } from '../../common/core/stringBuilder.js';\nimport { ModelLineProjectionData } from '../../common/modelLineProjectionData.js';\nimport { LineInjectedText } from '../../common/textModelEvents.js';\nconst ttPolicy = createTrustedTypesPolicy('domLineBreaksComputer', { createHTML: value => value });\nexport class DOMLineBreaksComputerFactory {\n    static create() {\n        return new DOMLineBreaksComputerFactory();\n    }\n    constructor() {\n    }\n    createLineBreaksComputer(fontInfo, tabSize, wrappingColumn, wrappingIndent, wordBreak) {\n        const requests = [];\n        const injectedTexts = [];\n        return {\n            addRequest: (lineText, injectedText, previousLineBreakData) => {\n                requests.push(lineText);\n                injectedTexts.push(injectedText);\n            },\n            finalize: () => {\n                return createLineBreaks(requests, fontInfo, tabSize, wrappingColumn, wrappingIndent, wordBreak, injectedTexts);\n            }\n        };\n    }\n}\nfunction createLineBreaks(requests, fontInfo, tabSize, firstLineBreakColumn, wrappingIndent, wordBreak, injectedTextsPerLine) {\n    var _a;\n    function createEmptyLineBreakWithPossiblyInjectedText(requestIdx) {\n        const injectedTexts = injectedTextsPerLine[requestIdx];\n        if (injectedTexts) {\n            const lineText = LineInjectedText.applyInjectedText(requests[requestIdx], injectedTexts);\n            const injectionOptions = injectedTexts.map(t => t.options);\n            const injectionOffsets = injectedTexts.map(text => text.column - 1);\n            // creating a `LineBreakData` with an invalid `breakOffsetsVisibleColumn` is OK\n            // because `breakOffsetsVisibleColumn` will never be used because it contains injected text\n            return new ModelLineProjectionData(injectionOffsets, injectionOptions, [lineText.length], [], 0);\n        }\n        else {\n            return null;\n        }\n    }\n    if (firstLineBreakColumn === -1) {\n        const result = [];\n        for (let i = 0, len = requests.length; i < len; i++) {\n            result[i] = createEmptyLineBreakWithPossiblyInjectedText(i);\n        }\n        return result;\n    }\n    const overallWidth = Math.round(firstLineBreakColumn * fontInfo.typicalHalfwidthCharacterWidth);\n    const additionalIndent = (wrappingIndent === 3 /* WrappingIndent.DeepIndent */ ? 2 : wrappingIndent === 2 /* WrappingIndent.Indent */ ? 1 : 0);\n    const additionalIndentSize = Math.round(tabSize * additionalIndent);\n    const additionalIndentLength = Math.ceil(fontInfo.spaceWidth * additionalIndentSize);\n    const containerDomNode = document.createElement('div');\n    applyFontInfo(containerDomNode, fontInfo);\n    const sb = new StringBuilder(10000);\n    const firstNonWhitespaceIndices = [];\n    const wrappedTextIndentLengths = [];\n    const renderLineContents = [];\n    const allCharOffsets = [];\n    const allVisibleColumns = [];\n    for (let i = 0; i < requests.length; i++) {\n        const lineContent = LineInjectedText.applyInjectedText(requests[i], injectedTextsPerLine[i]);\n        let firstNonWhitespaceIndex = 0;\n        let wrappedTextIndentLength = 0;\n        let width = overallWidth;\n        if (wrappingIndent !== 0 /* WrappingIndent.None */) {\n            firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(lineContent);\n            if (firstNonWhitespaceIndex === -1) {\n                // all whitespace line\n                firstNonWhitespaceIndex = 0;\n            }\n            else {\n                // Track existing indent\n                for (let i = 0; i < firstNonWhitespaceIndex; i++) {\n                    const charWidth = (lineContent.charCodeAt(i) === 9 /* CharCode.Tab */\n                        ? (tabSize - (wrappedTextIndentLength % tabSize))\n                        : 1);\n                    wrappedTextIndentLength += charWidth;\n                }\n                const indentWidth = Math.ceil(fontInfo.spaceWidth * wrappedTextIndentLength);\n                // Force sticking to beginning of line if no character would fit except for the indentation\n                if (indentWidth + fontInfo.typicalFullwidthCharacterWidth > overallWidth) {\n                    firstNonWhitespaceIndex = 0;\n                    wrappedTextIndentLength = 0;\n                }\n                else {\n                    width = overallWidth - indentWidth;\n                }\n            }\n        }\n        const renderLineContent = lineContent.substr(firstNonWhitespaceIndex);\n        const tmp = renderLine(renderLineContent, wrappedTextIndentLength, tabSize, width, sb, additionalIndentLength);\n        firstNonWhitespaceIndices[i] = firstNonWhitespaceIndex;\n        wrappedTextIndentLengths[i] = wrappedTextIndentLength;\n        renderLineContents[i] = renderLineContent;\n        allCharOffsets[i] = tmp[0];\n        allVisibleColumns[i] = tmp[1];\n    }\n    const html = sb.build();\n    const trustedhtml = (_a = ttPolicy === null || ttPolicy === void 0 ? void 0 : ttPolicy.createHTML(html)) !== null && _a !== void 0 ? _a : html;\n    containerDomNode.innerHTML = trustedhtml;\n    containerDomNode.style.position = 'absolute';\n    containerDomNode.style.top = '10000';\n    if (wordBreak === 'keepAll') {\n        // word-break: keep-all; overflow-wrap: anywhere\n        containerDomNode.style.wordBreak = 'keep-all';\n        containerDomNode.style.overflowWrap = 'anywhere';\n    }\n    else {\n        // overflow-wrap: break-word\n        containerDomNode.style.wordBreak = 'inherit';\n        containerDomNode.style.overflowWrap = 'break-word';\n    }\n    document.body.appendChild(containerDomNode);\n    const range = document.createRange();\n    const lineDomNodes = Array.prototype.slice.call(containerDomNode.children, 0);\n    const result = [];\n    for (let i = 0; i < requests.length; i++) {\n        const lineDomNode = lineDomNodes[i];\n        const breakOffsets = readLineBreaks(range, lineDomNode, renderLineContents[i], allCharOffsets[i]);\n        if (breakOffsets === null) {\n            result[i] = createEmptyLineBreakWithPossiblyInjectedText(i);\n            continue;\n        }\n        const firstNonWhitespaceIndex = firstNonWhitespaceIndices[i];\n        const wrappedTextIndentLength = wrappedTextIndentLengths[i] + additionalIndentSize;\n        const visibleColumns = allVisibleColumns[i];\n        const breakOffsetsVisibleColumn = [];\n        for (let j = 0, len = breakOffsets.length; j < len; j++) {\n            breakOffsetsVisibleColumn[j] = visibleColumns[breakOffsets[j]];\n        }\n        if (firstNonWhitespaceIndex !== 0) {\n            // All break offsets are relative to the renderLineContent, make them absolute again\n            for (let j = 0, len = breakOffsets.length; j < len; j++) {\n                breakOffsets[j] += firstNonWhitespaceIndex;\n            }\n        }\n        let injectionOptions;\n        let injectionOffsets;\n        const curInjectedTexts = injectedTextsPerLine[i];\n        if (curInjectedTexts) {\n            injectionOptions = curInjectedTexts.map(t => t.options);\n            injectionOffsets = curInjectedTexts.map(text => text.column - 1);\n        }\n        else {\n            injectionOptions = null;\n            injectionOffsets = null;\n        }\n        result[i] = new ModelLineProjectionData(injectionOffsets, injectionOptions, breakOffsets, breakOffsetsVisibleColumn, wrappedTextIndentLength);\n    }\n    document.body.removeChild(containerDomNode);\n    return result;\n}\nfunction renderLine(lineContent, initialVisibleColumn, tabSize, width, sb, wrappingIndentLength) {\n    if (wrappingIndentLength !== 0) {\n        const hangingOffset = String(wrappingIndentLength);\n        sb.appendString('<div style=\"text-indent: -');\n        sb.appendString(hangingOffset);\n        sb.appendString('px; padding-left: ');\n        sb.appendString(hangingOffset);\n        sb.appendString('px; box-sizing: border-box; width:');\n    }\n    else {\n        sb.appendString('<div style=\"width:');\n    }\n    sb.appendString(String(width));\n    sb.appendString('px;\">');\n    // if (containsRTL) {\n    // \tsb.appendASCIIString('\" dir=\"ltr');\n    // }\n    const len = lineContent.length;\n    let visibleColumn = initialVisibleColumn;\n    let charOffset = 0;\n    const charOffsets = [];\n    const visibleColumns = [];\n    let nextCharCode = (0 < len ? lineContent.charCodeAt(0) : 0 /* CharCode.Null */);\n    sb.appendString('<span>');\n    for (let charIndex = 0; charIndex < len; charIndex++) {\n        if (charIndex !== 0 && charIndex % 16384 /* Constants.SPAN_MODULO_LIMIT */ === 0) {\n            sb.appendString('</span><span>');\n        }\n        charOffsets[charIndex] = charOffset;\n        visibleColumns[charIndex] = visibleColumn;\n        const charCode = nextCharCode;\n        nextCharCode = (charIndex + 1 < len ? lineContent.charCodeAt(charIndex + 1) : 0 /* CharCode.Null */);\n        let producedCharacters = 1;\n        let charWidth = 1;\n        switch (charCode) {\n            case 9 /* CharCode.Tab */:\n                producedCharacters = (tabSize - (visibleColumn % tabSize));\n                charWidth = producedCharacters;\n                for (let space = 1; space <= producedCharacters; space++) {\n                    if (space < producedCharacters) {\n                        sb.appendCharCode(0xA0); // &nbsp;\n                    }\n                    else {\n                        sb.appendASCIICharCode(32 /* CharCode.Space */);\n                    }\n                }\n                break;\n            case 32 /* CharCode.Space */:\n                if (nextCharCode === 32 /* CharCode.Space */) {\n                    sb.appendCharCode(0xA0); // &nbsp;\n                }\n                else {\n                    sb.appendASCIICharCode(32 /* CharCode.Space */);\n                }\n                break;\n            case 60 /* CharCode.LessThan */:\n                sb.appendString('&lt;');\n                break;\n            case 62 /* CharCode.GreaterThan */:\n                sb.appendString('&gt;');\n                break;\n            case 38 /* CharCode.Ampersand */:\n                sb.appendString('&amp;');\n                break;\n            case 0 /* CharCode.Null */:\n                sb.appendString('&#00;');\n                break;\n            case 65279 /* CharCode.UTF8_BOM */:\n            case 8232 /* CharCode.LINE_SEPARATOR */:\n            case 8233 /* CharCode.PARAGRAPH_SEPARATOR */:\n            case 133 /* CharCode.NEXT_LINE */:\n                sb.appendCharCode(0xFFFD);\n                break;\n            default:\n                if (strings.isFullWidthCharacter(charCode)) {\n                    charWidth++;\n                }\n                if (charCode < 32) {\n                    sb.appendCharCode(9216 + charCode);\n                }\n                else {\n                    sb.appendCharCode(charCode);\n                }\n        }\n        charOffset += producedCharacters;\n        visibleColumn += charWidth;\n    }\n    sb.appendString('</span>');\n    charOffsets[lineContent.length] = charOffset;\n    visibleColumns[lineContent.length] = visibleColumn;\n    sb.appendString('</div>');\n    return [charOffsets, visibleColumns];\n}\nfunction readLineBreaks(range, lineDomNode, lineContent, charOffsets) {\n    if (lineContent.length <= 1) {\n        return null;\n    }\n    const spans = Array.prototype.slice.call(lineDomNode.children, 0);\n    const breakOffsets = [];\n    try {\n        discoverBreaks(range, spans, charOffsets, 0, null, lineContent.length - 1, null, breakOffsets);\n    }\n    catch (err) {\n        console.log(err);\n        return null;\n    }\n    if (breakOffsets.length === 0) {\n        return null;\n    }\n    breakOffsets.push(lineContent.length);\n    return breakOffsets;\n}\nfunction discoverBreaks(range, spans, charOffsets, low, lowRects, high, highRects, result) {\n    if (low === high) {\n        return;\n    }\n    lowRects = lowRects || readClientRect(range, spans, charOffsets[low], charOffsets[low + 1]);\n    highRects = highRects || readClientRect(range, spans, charOffsets[high], charOffsets[high + 1]);\n    if (Math.abs(lowRects[0].top - highRects[0].top) <= 0.1) {\n        // same line\n        return;\n    }\n    // there is at least one line break between these two offsets\n    if (low + 1 === high) {\n        // the two characters are adjacent, so the line break must be exactly between them\n        result.push(high);\n        return;\n    }\n    const mid = low + ((high - low) / 2) | 0;\n    const midRects = readClientRect(range, spans, charOffsets[mid], charOffsets[mid + 1]);\n    discoverBreaks(range, spans, charOffsets, low, lowRects, mid, midRects, result);\n    discoverBreaks(range, spans, charOffsets, mid, midRects, high, highRects, result);\n}\nfunction readClientRect(range, spans, startOffset, endOffset) {\n    range.setStart(spans[(startOffset / 16384 /* Constants.SPAN_MODULO_LIMIT */) | 0].firstChild, startOffset % 16384 /* Constants.SPAN_MODULO_LIMIT */);\n    range.setEnd(spans[(endOffset / 16384 /* Constants.SPAN_MODULO_LIMIT */) | 0].firstChild, endOffset % 16384 /* Constants.SPAN_MODULO_LIMIT */);\n    return range.getClientRects();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ViewEventHandler } from '../../common/viewEventHandler.js';\nexport class DynamicViewOverlay extends ViewEventHandler {\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './lineNumbers.css';\nimport * as platform from '../../../../base/common/platform.js';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { Position } from '../../../common/core/position.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { editorDimmedLineNumber, editorLineNumbers } from '../../../common/core/editorColorRegistry.js';\nexport class LineNumbersOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._readConfig();\n        this._lastCursorModelPosition = new Position(1, 1);\n        this._renderResult = null;\n        this._activeLineNumber = 1;\n        this._context.addEventHandler(this);\n    }\n    _readConfig() {\n        const options = this._context.configuration.options;\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        const lineNumbers = options.get(67 /* EditorOption.lineNumbers */);\n        this._renderLineNumbers = lineNumbers.renderType;\n        this._renderCustomLineNumbers = lineNumbers.renderFn;\n        this._renderFinalNewline = options.get(94 /* EditorOption.renderFinalNewline */);\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this._lineNumbersLeft = layoutInfo.lineNumbersLeft;\n        this._lineNumbersWidth = layoutInfo.lineNumbersWidth;\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        this._readConfig();\n        return true;\n    }\n    onCursorStateChanged(e) {\n        const primaryViewPosition = e.selections[0].getPosition();\n        this._lastCursorModelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(primaryViewPosition);\n        let shouldRender = false;\n        if (this._activeLineNumber !== primaryViewPosition.lineNumber) {\n            this._activeLineNumber = primaryViewPosition.lineNumber;\n            shouldRender = true;\n        }\n        if (this._renderLineNumbers === 2 /* RenderLineNumbersType.Relative */ || this._renderLineNumbers === 3 /* RenderLineNumbersType.Interval */) {\n            shouldRender = true;\n        }\n        return shouldRender;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    _getLineRenderLineNumber(viewLineNumber) {\n        const modelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(viewLineNumber, 1));\n        if (modelPosition.column !== 1) {\n            return '';\n        }\n        const modelLineNumber = modelPosition.lineNumber;\n        if (this._renderCustomLineNumbers) {\n            return this._renderCustomLineNumbers(modelLineNumber);\n        }\n        if (this._renderLineNumbers === 2 /* RenderLineNumbersType.Relative */) {\n            const diff = Math.abs(this._lastCursorModelPosition.lineNumber - modelLineNumber);\n            if (diff === 0) {\n                return '<span class=\"relative-current-line-number\">' + modelLineNumber + '</span>';\n            }\n            return String(diff);\n        }\n        if (this._renderLineNumbers === 3 /* RenderLineNumbersType.Interval */) {\n            if (this._lastCursorModelPosition.lineNumber === modelLineNumber) {\n                return String(modelLineNumber);\n            }\n            if (modelLineNumber % 10 === 0) {\n                return String(modelLineNumber);\n            }\n            return '';\n        }\n        return String(modelLineNumber);\n    }\n    prepareRender(ctx) {\n        if (this._renderLineNumbers === 0 /* RenderLineNumbersType.Off */) {\n            this._renderResult = null;\n            return;\n        }\n        const lineHeightClassName = (platform.isLinux ? (this._lineHeight % 2 === 0 ? ' lh-even' : ' lh-odd') : '');\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const lineCount = this._context.viewModel.getLineCount();\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const renderLineNumber = this._getLineRenderLineNumber(lineNumber);\n            if (!renderLineNumber) {\n                output[lineIndex] = '';\n                continue;\n            }\n            let extraClassName = '';\n            if (lineNumber === lineCount && this._context.viewModel.getLineLength(lineNumber) === 0) {\n                // this is the last line\n                if (this._renderFinalNewline === 'off') {\n                    output[lineIndex] = '';\n                    continue;\n                }\n                if (this._renderFinalNewline === 'dimmed') {\n                    extraClassName = ' dimmed-line-number';\n                }\n            }\n            if (lineNumber === this._activeLineNumber) {\n                extraClassName = ' active-line-number';\n            }\n            output[lineIndex] = (`<div class=\"${LineNumbersOverlay.CLASS_NAME}${lineHeightClassName}${extraClassName}\" style=\"left:${this._lineNumbersLeft}px;width:${this._lineNumbersWidth}px;\">${renderLineNumber}</div>`);\n        }\n        this._renderResult = output;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\nLineNumbersOverlay.CLASS_NAME = 'line-numbers';\nregisterThemingParticipant((theme, collector) => {\n    const editorLineNumbersColor = theme.getColor(editorLineNumbers);\n    const editorDimmedLineNumberColor = theme.getColor(editorDimmedLineNumber);\n    if (editorDimmedLineNumberColor) {\n        collector.addRule(`.monaco-editor .line-numbers.dimmed-line-number { color: ${editorDimmedLineNumberColor}; }`);\n    }\n    else if (editorLineNumbersColor) {\n        collector.addRule(`.monaco-editor .line-numbers.dimmed-line-number { color: ${editorLineNumbersColor.transparent(0.4)}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { FloatHorizontalRange } from '../../view/renderingContext.js';\nexport class RangeUtil {\n    static _createRange() {\n        if (!this._handyReadyRange) {\n            this._handyReadyRange = document.createRange();\n        }\n        return this._handyReadyRange;\n    }\n    static _detachRange(range, endNode) {\n        // Move range out of the span node, IE doesn't like having many ranges in\n        // the same spot and will act badly for lines containing dashes ('-')\n        range.selectNodeContents(endNode);\n    }\n    static _readClientRects(startElement, startOffset, endElement, endOffset, endNode) {\n        const range = this._createRange();\n        try {\n            range.setStart(startElement, startOffset);\n            range.setEnd(endElement, endOffset);\n            return range.getClientRects();\n        }\n        catch (e) {\n            // This is life ...\n            return null;\n        }\n        finally {\n            this._detachRange(range, endNode);\n        }\n    }\n    static _mergeAdjacentRanges(ranges) {\n        if (ranges.length === 1) {\n            // There is nothing to merge\n            return ranges;\n        }\n        ranges.sort(FloatHorizontalRange.compare);\n        const result = [];\n        let resultLen = 0;\n        let prev = ranges[0];\n        for (let i = 1, len = ranges.length; i < len; i++) {\n            const range = ranges[i];\n            if (prev.left + prev.width + 0.9 /* account for browser's rounding errors*/ >= range.left) {\n                prev.width = Math.max(prev.width, range.left + range.width - prev.left);\n            }\n            else {\n                result[resultLen++] = prev;\n                prev = range;\n            }\n        }\n        result[resultLen++] = prev;\n        return result;\n    }\n    static _createHorizontalRangesFromClientRects(clientRects, clientRectDeltaLeft, clientRectScale) {\n        if (!clientRects || clientRects.length === 0) {\n            return null;\n        }\n        // We go through FloatHorizontalRange because it has been observed in bi-di text\n        // that the clientRects are not coming in sorted from the browser\n        const result = [];\n        for (let i = 0, len = clientRects.length; i < len; i++) {\n            const clientRect = clientRects[i];\n            result[i] = new FloatHorizontalRange(Math.max(0, (clientRect.left - clientRectDeltaLeft) / clientRectScale), clientRect.width / clientRectScale);\n        }\n        return this._mergeAdjacentRanges(result);\n    }\n    static readHorizontalRanges(domNode, startChildIndex, startOffset, endChildIndex, endOffset, context) {\n        // Panic check\n        const min = 0;\n        const max = domNode.children.length - 1;\n        if (min > max) {\n            return null;\n        }\n        startChildIndex = Math.min(max, Math.max(min, startChildIndex));\n        endChildIndex = Math.min(max, Math.max(min, endChildIndex));\n        if (startChildIndex === endChildIndex && startOffset === endOffset && startOffset === 0 && !domNode.children[startChildIndex].firstChild) {\n            // We must find the position at the beginning of a <span>\n            // To cover cases of empty <span>s, avoid using a range and use the <span>'s bounding box\n            const clientRects = domNode.children[startChildIndex].getClientRects();\n            context.markDidDomLayout();\n            return this._createHorizontalRangesFromClientRects(clientRects, context.clientRectDeltaLeft, context.clientRectScale);\n        }\n        // If crossing over to a span only to select offset 0, then use the previous span's maximum offset\n        // Chrome is buggy and doesn't handle 0 offsets well sometimes.\n        if (startChildIndex !== endChildIndex) {\n            if (endChildIndex > 0 && endOffset === 0) {\n                endChildIndex--;\n                endOffset = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n            }\n        }\n        let startElement = domNode.children[startChildIndex].firstChild;\n        let endElement = domNode.children[endChildIndex].firstChild;\n        if (!startElement || !endElement) {\n            // When having an empty <span> (without any text content), try to move to the previous <span>\n            if (!startElement && startOffset === 0 && startChildIndex > 0) {\n                startElement = domNode.children[startChildIndex - 1].firstChild;\n                startOffset = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n            }\n            if (!endElement && endOffset === 0 && endChildIndex > 0) {\n                endElement = domNode.children[endChildIndex - 1].firstChild;\n                endOffset = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n            }\n        }\n        if (!startElement || !endElement) {\n            return null;\n        }\n        startOffset = Math.min(startElement.textContent.length, Math.max(0, startOffset));\n        endOffset = Math.min(endElement.textContent.length, Math.max(0, endOffset));\n        const clientRects = this._readClientRects(startElement, startOffset, endElement, endOffset, context.endNode);\n        context.markDidDomLayout();\n        return this._createHorizontalRangesFromClientRects(clientRects, context.clientRectDeltaLeft, context.clientRectScale);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as browser from '../../../../base/browser/browser.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { RangeUtil } from './rangeUtil.js';\nimport { FloatHorizontalRange, VisibleRanges } from '../../view/renderingContext.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine, LineRange, DomPosition } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { EditorFontLigatures } from '../../../common/config/editorOptions.js';\nconst canUseFastRenderedViewLine = (function () {\n    if (platform.isNative) {\n        // In VSCode we know very well when the zoom level changes\n        return true;\n    }\n    if (platform.isLinux || browser.isFirefox || browser.isSafari) {\n        // On Linux, it appears that zooming affects char widths (in pixels), which is unexpected.\n        // --\n        // Even though we read character widths correctly, having read them at a specific zoom level\n        // does not mean they are the same at the current zoom level.\n        // --\n        // This could be improved if we ever figure out how to get an event when browsers zoom,\n        // but until then we have to stick with reading client rects.\n        // --\n        // The same has been observed with Firefox on Windows7\n        // --\n        // The same has been oversved with Safari\n        return false;\n    }\n    return true;\n})();\nlet monospaceAssumptionsAreValid = true;\nexport class ViewLineOptions {\n    constructor(config, themeType) {\n        this.themeType = themeType;\n        const options = config.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        const experimentalWhitespaceRendering = options.get(38 /* EditorOption.experimentalWhitespaceRendering */);\n        if (experimentalWhitespaceRendering === 'off') {\n            this.renderWhitespace = options.get(98 /* EditorOption.renderWhitespace */);\n        }\n        else {\n            // whitespace is rendered in a different layer\n            this.renderWhitespace = 'none';\n        }\n        this.renderControlCharacters = options.get(93 /* EditorOption.renderControlCharacters */);\n        this.spaceWidth = fontInfo.spaceWidth;\n        this.middotWidth = fontInfo.middotWidth;\n        this.wsmiddotWidth = fontInfo.wsmiddotWidth;\n        this.useMonospaceOptimizations = (fontInfo.isMonospace\n            && !options.get(33 /* EditorOption.disableMonospaceOptimizations */));\n        this.canUseHalfwidthRightwardsArrow = fontInfo.canUseHalfwidthRightwardsArrow;\n        this.lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this.stopRenderingLineAfter = options.get(116 /* EditorOption.stopRenderingLineAfter */);\n        this.fontLigatures = options.get(51 /* EditorOption.fontLigatures */);\n    }\n    equals(other) {\n        return (this.themeType === other.themeType\n            && this.renderWhitespace === other.renderWhitespace\n            && this.renderControlCharacters === other.renderControlCharacters\n            && this.spaceWidth === other.spaceWidth\n            && this.middotWidth === other.middotWidth\n            && this.wsmiddotWidth === other.wsmiddotWidth\n            && this.useMonospaceOptimizations === other.useMonospaceOptimizations\n            && this.canUseHalfwidthRightwardsArrow === other.canUseHalfwidthRightwardsArrow\n            && this.lineHeight === other.lineHeight\n            && this.stopRenderingLineAfter === other.stopRenderingLineAfter\n            && this.fontLigatures === other.fontLigatures);\n    }\n}\nexport class ViewLine {\n    constructor(options) {\n        this._options = options;\n        this._isMaybeInvalid = true;\n        this._renderedViewLine = null;\n    }\n    // --- begin IVisibleLineData\n    getDomNode() {\n        if (this._renderedViewLine && this._renderedViewLine.domNode) {\n            return this._renderedViewLine.domNode.domNode;\n        }\n        return null;\n    }\n    setDomNode(domNode) {\n        if (this._renderedViewLine) {\n            this._renderedViewLine.domNode = createFastDomNode(domNode);\n        }\n        else {\n            throw new Error('I have no rendered view line to set the dom node to...');\n        }\n    }\n    onContentChanged() {\n        this._isMaybeInvalid = true;\n    }\n    onTokensChanged() {\n        this._isMaybeInvalid = true;\n    }\n    onDecorationsChanged() {\n        this._isMaybeInvalid = true;\n    }\n    onOptionsChanged(newOptions) {\n        this._isMaybeInvalid = true;\n        this._options = newOptions;\n    }\n    onSelectionChanged() {\n        if (isHighContrast(this._options.themeType) || this._options.renderWhitespace === 'selection') {\n            this._isMaybeInvalid = true;\n            return true;\n        }\n        return false;\n    }\n    renderLine(lineNumber, deltaTop, viewportData, sb) {\n        if (this._isMaybeInvalid === false) {\n            // it appears that nothing relevant has changed\n            return false;\n        }\n        this._isMaybeInvalid = false;\n        const lineData = viewportData.getViewLineRenderingData(lineNumber);\n        const options = this._options;\n        const actualInlineDecorations = LineDecoration.filter(lineData.inlineDecorations, lineNumber, lineData.minColumn, lineData.maxColumn);\n        // Only send selection information when needed for rendering whitespace\n        let selectionsOnLine = null;\n        if (isHighContrast(options.themeType) || this._options.renderWhitespace === 'selection') {\n            const selections = viewportData.selections;\n            for (const selection of selections) {\n                if (selection.endLineNumber < lineNumber || selection.startLineNumber > lineNumber) {\n                    // Selection does not intersect line\n                    continue;\n                }\n                const startColumn = (selection.startLineNumber === lineNumber ? selection.startColumn : lineData.minColumn);\n                const endColumn = (selection.endLineNumber === lineNumber ? selection.endColumn : lineData.maxColumn);\n                if (startColumn < endColumn) {\n                    if (isHighContrast(options.themeType)) {\n                        actualInlineDecorations.push(new LineDecoration(startColumn, endColumn, 'inline-selected-text', 0 /* InlineDecorationType.Regular */));\n                    }\n                    if (this._options.renderWhitespace === 'selection') {\n                        if (!selectionsOnLine) {\n                            selectionsOnLine = [];\n                        }\n                        selectionsOnLine.push(new LineRange(startColumn - 1, endColumn - 1));\n                    }\n                }\n            }\n        }\n        const renderLineInput = new RenderLineInput(options.useMonospaceOptimizations, options.canUseHalfwidthRightwardsArrow, lineData.content, lineData.continuesWithWrappedLine, lineData.isBasicASCII, lineData.containsRTL, lineData.minColumn - 1, lineData.tokens, actualInlineDecorations, lineData.tabSize, lineData.startVisibleColumn, options.spaceWidth, options.middotWidth, options.wsmiddotWidth, options.stopRenderingLineAfter, options.renderWhitespace, options.renderControlCharacters, options.fontLigatures !== EditorFontLigatures.OFF, selectionsOnLine);\n        if (this._renderedViewLine && this._renderedViewLine.input.equals(renderLineInput)) {\n            // no need to do anything, we have the same render input\n            return false;\n        }\n        sb.appendString('<div style=\"top:');\n        sb.appendString(String(deltaTop));\n        sb.appendString('px;height:');\n        sb.appendString(String(this._options.lineHeight));\n        sb.appendString('px;\" class=\"');\n        sb.appendString(ViewLine.CLASS_NAME);\n        sb.appendString('\">');\n        const output = renderViewLine(renderLineInput, sb);\n        sb.appendString('</div>');\n        let renderedViewLine = null;\n        if (monospaceAssumptionsAreValid && canUseFastRenderedViewLine && lineData.isBasicASCII && options.useMonospaceOptimizations && output.containsForeignElements === 0 /* ForeignElementType.None */) {\n            renderedViewLine = new FastRenderedViewLine(this._renderedViewLine ? this._renderedViewLine.domNode : null, renderLineInput, output.characterMapping);\n        }\n        if (!renderedViewLine) {\n            renderedViewLine = createRenderedLine(this._renderedViewLine ? this._renderedViewLine.domNode : null, renderLineInput, output.characterMapping, output.containsRTL, output.containsForeignElements);\n        }\n        this._renderedViewLine = renderedViewLine;\n        return true;\n    }\n    layoutLine(lineNumber, deltaTop) {\n        if (this._renderedViewLine && this._renderedViewLine.domNode) {\n            this._renderedViewLine.domNode.setTop(deltaTop);\n            this._renderedViewLine.domNode.setHeight(this._options.lineHeight);\n        }\n    }\n    // --- end IVisibleLineData\n    getWidth(context) {\n        if (!this._renderedViewLine) {\n            return 0;\n        }\n        return this._renderedViewLine.getWidth(context);\n    }\n    getWidthIsFast() {\n        if (!this._renderedViewLine) {\n            return true;\n        }\n        return this._renderedViewLine.getWidthIsFast();\n    }\n    needsMonospaceFontCheck() {\n        if (!this._renderedViewLine) {\n            return false;\n        }\n        return (this._renderedViewLine instanceof FastRenderedViewLine);\n    }\n    monospaceAssumptionsAreValid() {\n        if (!this._renderedViewLine) {\n            return monospaceAssumptionsAreValid;\n        }\n        if (this._renderedViewLine instanceof FastRenderedViewLine) {\n            return this._renderedViewLine.monospaceAssumptionsAreValid();\n        }\n        return monospaceAssumptionsAreValid;\n    }\n    onMonospaceAssumptionsInvalidated() {\n        if (this._renderedViewLine && this._renderedViewLine instanceof FastRenderedViewLine) {\n            this._renderedViewLine = this._renderedViewLine.toSlowRenderedLine();\n        }\n    }\n    getVisibleRangesForRange(lineNumber, startColumn, endColumn, context) {\n        if (!this._renderedViewLine) {\n            return null;\n        }\n        startColumn = Math.min(this._renderedViewLine.input.lineContent.length + 1, Math.max(1, startColumn));\n        endColumn = Math.min(this._renderedViewLine.input.lineContent.length + 1, Math.max(1, endColumn));\n        const stopRenderingLineAfter = this._renderedViewLine.input.stopRenderingLineAfter;\n        if (stopRenderingLineAfter !== -1 && startColumn > stopRenderingLineAfter + 1 && endColumn > stopRenderingLineAfter + 1) {\n            // This range is obviously not visible\n            return new VisibleRanges(true, [new FloatHorizontalRange(this.getWidth(context), 0)]);\n        }\n        if (stopRenderingLineAfter !== -1 && startColumn > stopRenderingLineAfter + 1) {\n            startColumn = stopRenderingLineAfter + 1;\n        }\n        if (stopRenderingLineAfter !== -1 && endColumn > stopRenderingLineAfter + 1) {\n            endColumn = stopRenderingLineAfter + 1;\n        }\n        const horizontalRanges = this._renderedViewLine.getVisibleRangesForRange(lineNumber, startColumn, endColumn, context);\n        if (horizontalRanges && horizontalRanges.length > 0) {\n            return new VisibleRanges(false, horizontalRanges);\n        }\n        return null;\n    }\n    getColumnOfNodeOffset(spanNode, offset) {\n        if (!this._renderedViewLine) {\n            return 1;\n        }\n        return this._renderedViewLine.getColumnOfNodeOffset(spanNode, offset);\n    }\n}\nViewLine.CLASS_NAME = 'view-line';\n/**\n * A rendered line which is guaranteed to contain only regular ASCII and is rendered with a monospace font.\n */\nclass FastRenderedViewLine {\n    constructor(domNode, renderLineInput, characterMapping) {\n        this._cachedWidth = -1;\n        this.domNode = domNode;\n        this.input = renderLineInput;\n        const keyColumnCount = Math.floor(renderLineInput.lineContent.length / 300 /* Constants.MaxMonospaceDistance */);\n        if (keyColumnCount > 0) {\n            this._keyColumnPixelOffsetCache = new Float32Array(keyColumnCount);\n            for (let i = 0; i < keyColumnCount; i++) {\n                this._keyColumnPixelOffsetCache[i] = -1;\n            }\n        }\n        else {\n            this._keyColumnPixelOffsetCache = null;\n        }\n        this._characterMapping = characterMapping;\n        this._charWidth = renderLineInput.spaceWidth;\n    }\n    getWidth(context) {\n        if (!this.domNode || this.input.lineContent.length < 300 /* Constants.MaxMonospaceDistance */) {\n            const horizontalOffset = this._characterMapping.getHorizontalOffset(this._characterMapping.length);\n            return Math.round(this._charWidth * horizontalOffset);\n        }\n        if (this._cachedWidth === -1) {\n            this._cachedWidth = this._getReadingTarget(this.domNode).offsetWidth;\n            context === null || context === void 0 ? void 0 : context.markDidDomLayout();\n        }\n        return this._cachedWidth;\n    }\n    getWidthIsFast() {\n        return (this.input.lineContent.length < 300 /* Constants.MaxMonospaceDistance */) || this._cachedWidth !== -1;\n    }\n    monospaceAssumptionsAreValid() {\n        if (!this.domNode) {\n            return monospaceAssumptionsAreValid;\n        }\n        if (this.input.lineContent.length < 300 /* Constants.MaxMonospaceDistance */) {\n            const expectedWidth = this.getWidth(null);\n            const actualWidth = this.domNode.domNode.firstChild.offsetWidth;\n            if (Math.abs(expectedWidth - actualWidth) >= 2) {\n                // more than 2px off\n                console.warn(`monospace assumptions have been violated, therefore disabling monospace optimizations!`);\n                monospaceAssumptionsAreValid = false;\n            }\n        }\n        return monospaceAssumptionsAreValid;\n    }\n    toSlowRenderedLine() {\n        return createRenderedLine(this.domNode, this.input, this._characterMapping, false, 0 /* ForeignElementType.None */);\n    }\n    getVisibleRangesForRange(lineNumber, startColumn, endColumn, context) {\n        const startPosition = this._getColumnPixelOffset(lineNumber, startColumn, context);\n        const endPosition = this._getColumnPixelOffset(lineNumber, endColumn, context);\n        return [new FloatHorizontalRange(startPosition, endPosition - startPosition)];\n    }\n    _getColumnPixelOffset(lineNumber, column, context) {\n        if (column <= 300 /* Constants.MaxMonospaceDistance */) {\n            const horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n            return this._charWidth * horizontalOffset;\n        }\n        const keyColumnOrdinal = Math.floor((column - 1) / 300 /* Constants.MaxMonospaceDistance */) - 1;\n        const keyColumn = (keyColumnOrdinal + 1) * 300 /* Constants.MaxMonospaceDistance */ + 1;\n        let keyColumnPixelOffset = -1;\n        if (this._keyColumnPixelOffsetCache) {\n            keyColumnPixelOffset = this._keyColumnPixelOffsetCache[keyColumnOrdinal];\n            if (keyColumnPixelOffset === -1) {\n                keyColumnPixelOffset = this._actualReadPixelOffset(lineNumber, keyColumn, context);\n                this._keyColumnPixelOffsetCache[keyColumnOrdinal] = keyColumnPixelOffset;\n            }\n        }\n        if (keyColumnPixelOffset === -1) {\n            // Could not read actual key column pixel offset\n            const horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n            return this._charWidth * horizontalOffset;\n        }\n        const keyColumnHorizontalOffset = this._characterMapping.getHorizontalOffset(keyColumn);\n        const horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n        return keyColumnPixelOffset + this._charWidth * (horizontalOffset - keyColumnHorizontalOffset);\n    }\n    _getReadingTarget(myDomNode) {\n        return myDomNode.domNode.firstChild;\n    }\n    _actualReadPixelOffset(lineNumber, column, context) {\n        if (!this.domNode) {\n            return -1;\n        }\n        const domPosition = this._characterMapping.getDomPosition(column);\n        const r = RangeUtil.readHorizontalRanges(this._getReadingTarget(this.domNode), domPosition.partIndex, domPosition.charIndex, domPosition.partIndex, domPosition.charIndex, context);\n        if (!r || r.length === 0) {\n            return -1;\n        }\n        return r[0].left;\n    }\n    getColumnOfNodeOffset(spanNode, offset) {\n        return getColumnOfNodeOffset(this._characterMapping, spanNode, offset);\n    }\n}\n/**\n * Every time we render a line, we save what we have rendered in an instance of this class.\n */\nclass RenderedViewLine {\n    constructor(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements) {\n        this.domNode = domNode;\n        this.input = renderLineInput;\n        this._characterMapping = characterMapping;\n        this._isWhitespaceOnly = /^\\s*$/.test(renderLineInput.lineContent);\n        this._containsForeignElements = containsForeignElements;\n        this._cachedWidth = -1;\n        this._pixelOffsetCache = null;\n        if (!containsRTL || this._characterMapping.length === 0 /* the line is empty */) {\n            this._pixelOffsetCache = new Float32Array(Math.max(2, this._characterMapping.length + 1));\n            for (let column = 0, len = this._characterMapping.length; column <= len; column++) {\n                this._pixelOffsetCache[column] = -1;\n            }\n        }\n    }\n    // --- Reading from the DOM methods\n    _getReadingTarget(myDomNode) {\n        return myDomNode.domNode.firstChild;\n    }\n    /**\n     * Width of the line in pixels\n     */\n    getWidth(context) {\n        if (!this.domNode) {\n            return 0;\n        }\n        if (this._cachedWidth === -1) {\n            this._cachedWidth = this._getReadingTarget(this.domNode).offsetWidth;\n            context === null || context === void 0 ? void 0 : context.markDidDomLayout();\n        }\n        return this._cachedWidth;\n    }\n    getWidthIsFast() {\n        if (this._cachedWidth === -1) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Visible ranges for a model range\n     */\n    getVisibleRangesForRange(lineNumber, startColumn, endColumn, context) {\n        if (!this.domNode) {\n            return null;\n        }\n        if (this._pixelOffsetCache !== null) {\n            // the text is LTR\n            const startOffset = this._readPixelOffset(this.domNode, lineNumber, startColumn, context);\n            if (startOffset === -1) {\n                return null;\n            }\n            const endOffset = this._readPixelOffset(this.domNode, lineNumber, endColumn, context);\n            if (endOffset === -1) {\n                return null;\n            }\n            return [new FloatHorizontalRange(startOffset, endOffset - startOffset)];\n        }\n        return this._readVisibleRangesForRange(this.domNode, lineNumber, startColumn, endColumn, context);\n    }\n    _readVisibleRangesForRange(domNode, lineNumber, startColumn, endColumn, context) {\n        if (startColumn === endColumn) {\n            const pixelOffset = this._readPixelOffset(domNode, lineNumber, startColumn, context);\n            if (pixelOffset === -1) {\n                return null;\n            }\n            else {\n                return [new FloatHorizontalRange(pixelOffset, 0)];\n            }\n        }\n        else {\n            return this._readRawVisibleRangesForRange(domNode, startColumn, endColumn, context);\n        }\n    }\n    _readPixelOffset(domNode, lineNumber, column, context) {\n        if (this._characterMapping.length === 0) {\n            // This line has no content\n            if (this._containsForeignElements === 0 /* ForeignElementType.None */) {\n                // We can assume the line is really empty\n                return 0;\n            }\n            if (this._containsForeignElements === 2 /* ForeignElementType.After */) {\n                // We have foreign elements after the (empty) line\n                return 0;\n            }\n            if (this._containsForeignElements === 1 /* ForeignElementType.Before */) {\n                // We have foreign elements before the (empty) line\n                return this.getWidth(context);\n            }\n            // We have foreign elements before & after the (empty) line\n            const readingTarget = this._getReadingTarget(domNode);\n            if (readingTarget.firstChild) {\n                context.markDidDomLayout();\n                return readingTarget.firstChild.offsetWidth;\n            }\n            else {\n                return 0;\n            }\n        }\n        if (this._pixelOffsetCache !== null) {\n            // the text is LTR\n            const cachedPixelOffset = this._pixelOffsetCache[column];\n            if (cachedPixelOffset !== -1) {\n                return cachedPixelOffset;\n            }\n            const result = this._actualReadPixelOffset(domNode, lineNumber, column, context);\n            this._pixelOffsetCache[column] = result;\n            return result;\n        }\n        return this._actualReadPixelOffset(domNode, lineNumber, column, context);\n    }\n    _actualReadPixelOffset(domNode, lineNumber, column, context) {\n        if (this._characterMapping.length === 0) {\n            // This line has no content\n            const r = RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), 0, 0, 0, 0, context);\n            if (!r || r.length === 0) {\n                return -1;\n            }\n            return r[0].left;\n        }\n        if (column === this._characterMapping.length && this._isWhitespaceOnly && this._containsForeignElements === 0 /* ForeignElementType.None */) {\n            // This branch helps in the case of whitespace only lines which have a width set\n            return this.getWidth(context);\n        }\n        const domPosition = this._characterMapping.getDomPosition(column);\n        const r = RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), domPosition.partIndex, domPosition.charIndex, domPosition.partIndex, domPosition.charIndex, context);\n        if (!r || r.length === 0) {\n            return -1;\n        }\n        const result = r[0].left;\n        if (this.input.isBasicASCII) {\n            const horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n            const expectedResult = Math.round(this.input.spaceWidth * horizontalOffset);\n            if (Math.abs(expectedResult - result) <= 1) {\n                return expectedResult;\n            }\n        }\n        return result;\n    }\n    _readRawVisibleRangesForRange(domNode, startColumn, endColumn, context) {\n        if (startColumn === 1 && endColumn === this._characterMapping.length) {\n            // This branch helps IE with bidi text & gives a performance boost to other browsers when reading visible ranges for an entire line\n            return [new FloatHorizontalRange(0, this.getWidth(context))];\n        }\n        const startDomPosition = this._characterMapping.getDomPosition(startColumn);\n        const endDomPosition = this._characterMapping.getDomPosition(endColumn);\n        return RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), startDomPosition.partIndex, startDomPosition.charIndex, endDomPosition.partIndex, endDomPosition.charIndex, context);\n    }\n    /**\n     * Returns the column for the text found at a specific offset inside a rendered dom node\n     */\n    getColumnOfNodeOffset(spanNode, offset) {\n        return getColumnOfNodeOffset(this._characterMapping, spanNode, offset);\n    }\n}\nclass WebKitRenderedViewLine extends RenderedViewLine {\n    _readVisibleRangesForRange(domNode, lineNumber, startColumn, endColumn, context) {\n        const output = super._readVisibleRangesForRange(domNode, lineNumber, startColumn, endColumn, context);\n        if (!output || output.length === 0 || startColumn === endColumn || (startColumn === 1 && endColumn === this._characterMapping.length)) {\n            return output;\n        }\n        // WebKit is buggy and returns an expanded range (to contain words in some cases)\n        // The last client rect is enlarged (I think)\n        if (!this.input.containsRTL) {\n            // This is an attempt to patch things up\n            // Find position of last column\n            const endPixelOffset = this._readPixelOffset(domNode, lineNumber, endColumn, context);\n            if (endPixelOffset !== -1) {\n                const lastRange = output[output.length - 1];\n                if (lastRange.left < endPixelOffset) {\n                    // Trim down the width of the last visible range to not go after the last column's position\n                    lastRange.width = endPixelOffset - lastRange.left;\n                }\n            }\n        }\n        return output;\n    }\n}\nconst createRenderedLine = (function () {\n    if (browser.isWebKit) {\n        return createWebKitRenderedLine;\n    }\n    return createNormalRenderedLine;\n})();\nfunction createWebKitRenderedLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements) {\n    return new WebKitRenderedViewLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements);\n}\nfunction createNormalRenderedLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements) {\n    return new RenderedViewLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements);\n}\nexport function getColumnOfNodeOffset(characterMapping, spanNode, offset) {\n    const spanNodeTextContentLength = spanNode.textContent.length;\n    let spanIndex = -1;\n    while (spanNode) {\n        spanNode = spanNode.previousSibling;\n        spanIndex++;\n    }\n    return characterMapping.getColumn(new DomPosition(spanIndex, offset), spanNodeTextContentLength);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './margin.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ViewPart } from '../../view/viewPart.js';\nexport class Margin extends ViewPart {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this._canUseLayerHinting = !options.get(32 /* EditorOption.disableLayerHinting */);\n        this._contentLeft = layoutInfo.contentLeft;\n        this._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n        this._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n        this._domNode = createFastDomNode(document.createElement('div'));\n        this._domNode.setClassName(Margin.OUTER_CLASS_NAME);\n        this._domNode.setPosition('absolute');\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        this._glyphMarginBackgroundDomNode = createFastDomNode(document.createElement('div'));\n        this._glyphMarginBackgroundDomNode.setClassName(Margin.CLASS_NAME);\n        this._domNode.appendChild(this._glyphMarginBackgroundDomNode);\n    }\n    dispose() {\n        super.dispose();\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this._canUseLayerHinting = !options.get(32 /* EditorOption.disableLayerHinting */);\n        this._contentLeft = layoutInfo.contentLeft;\n        this._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n        this._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n        return true;\n    }\n    onScrollChanged(e) {\n        return super.onScrollChanged(e) || e.scrollTopChanged;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(ctx) {\n        this._domNode.setLayerHinting(this._canUseLayerHinting);\n        this._domNode.setContain('strict');\n        const adjustedScrollTop = ctx.scrollTop - ctx.bigNumbersDelta;\n        this._domNode.setTop(-adjustedScrollTop);\n        const height = Math.min(ctx.scrollHeight, 1000000);\n        this._domNode.setHeight(height);\n        this._domNode.setWidth(this._contentLeft);\n        this._glyphMarginBackgroundDomNode.setLeft(this._glyphMarginLeft);\n        this._glyphMarginBackgroundDomNode.setWidth(this._glyphMarginWidth);\n        this._glyphMarginBackgroundDomNode.setHeight(height);\n    }\n}\nMargin.CLASS_NAME = 'glyph-margin';\nMargin.OUTER_CLASS_NAME = 'margin';\n"],"names":["isCodeEditor","thing","getEditorType","editorCommon","ICodeEditor","isDiffEditor","IDiffEditor","getCodeEditor","getModifiedEditor","onDidChangeActiveEditor","isCompositeEditor","activeCodeEditor","PageCoordinates","constructor","x","y","this","_pageCoordinatesBrand","undefined","toClientCoordinates","ClientCoordinates","window","scrollX","scrollY","clientX","clientY","_clientCoordinatesBrand","toPageCoordinates","EditorPagePosition","width","height","_editorPagePositionBrand","CoordinatesRelativeToEditor","_positionRelativeToEditorBrand","createEditorPagePosition","editorViewDomNode","editorPos","dom","left","top","createCoordinatesRelativeToEditor","editorPagePosition","pos","scaleX","offsetWidth","scaleY","offsetHeight","relativeX","relativeY","EditorMouseEvent","StandardMouseEvent","e","isFromPointerCapture","super","_editorMouseEventBrand","posx","posy","relativePos","EditorMouseEventFactory","_editorViewDomNode","_create","onContextMenu","target","callback","onMouseUp","onMouseDown","MOUSE_DOWN","onPointerDown","POINTER_DOWN","pointerId","onMouseLeave","MOUSE_LEAVE","onMouseMove","EditorPointerEventFactory","onPointerUp","onPointerLeave","POINTER_LEAVE","onPointerMove","GlobalEditorPointerMoveMonitor","Disposable","_globalPointerMoveMonitor","_register","GlobalPointerMoveMonitor","_keydownListener","startMonitoring","initialElement","initialButtons","pointerMoveCallback","onStopCallback","ownerDocument","toKeyCodeChord","isModifierKey","stopMonitoring","browserEvent","dispose","DynamicCssRules","_editor","_instanceId","_idPool","_counter","_rules","Map","_garbageCollectionScheduler","RunOnceScheduler","garbageCollect","createClassNameRef","options","rule","getOrCreateRule","increaseRefCount","className","decreaseRefCount","schedule","properties","key","computeUniqueKey","existingRule","get","counter","RefCountedCssRule","concat","getContainerDomNode","set","JSON","stringify","values","hasReferences","delete","_containerElement","_referenceCount","_styleElement","textContent","getCssText","str","prop","value","cssValue","asCssVariable","id","cssPropName","camelToDashes","remove","replace","_ref","first","toLowerCase","_ref2","letter","EditorExtensionsRegistry","Command","opts","precondition","_kbOpts","kbOpts","_menuOpts","menuOpts","_description","description","register","Array","isArray","forEach","_registerMenuItem","kbOptsArr","kbWhen","kbExpr","ContextKeyExpr","and","desc","weight","args","when","primary","secondary","win","linux","mac","KeybindingsRegistry","registerKeybindingRule","CommandsRegistry","registerCommand","handler","accessor","runCommand","item","MenuRegistry","appendMenuItem","menuId","group","command","title","icon","order","MultiCommand","arguments","_implementations","addImplementation","priority","name","implementation","push","sort","a","b","i","length","splice","logService","ILogService","contextKeyService","IContextKeyService","trace","impl","context","getContext","getActiveElement","evaluate","result","ProxyCommand","EditorCommand","bindToContribution","controllerGetter","_callback","runEditorCommand","editor","controller","runner","codeEditorService","ICodeEditorService","getFocusedCodeEditor","getActiveCodeEditor","invokeWithinContext","editorAccessor","contextMatchesRules","EditorAction","convertOptions","withDefaults","MenuId","EditorContext","label","contextMenuOpts","map","alias","reportTelemetry","run","ITelemetryService","publicLog2","MultiEditorAction","EditorAction2","Action2","_len","_key","_a","_b","kbService","debug","serialize","registerModelAndPositionCommand","_len2","_key2","instaService","IInstantiationService","resource","position","assertType","URI","isUri","Position","isIPosition","model","IModelService","getModel","editorPosition","lift","invokeFunction","slice","ITextModelService","createModelReference","then","reference","Promise","resolve","reject","object","textEditorModel","err","finally","registerEditorCommand","editorCommand","EditorContributionRegistry","INSTANCE","registerEditorAction","ctor","action","registerMultiEditorAction","registerInstantiatedEditorAction","editorAction","registerEditorContribution","instantiation","getEditorCommand","commandId","getEditorActions","getEditorContributions","getSomeEditorContributions","ids","filter","c","indexOf","getDiffEditorContributions","editorContributions","diffEditorContributions","editorActions","editorCommands","Object","create","Registry","add","UndoCommand","MenubarEditMenu","nls","comment","CommandPalette","RedoCommand","SelectAllCommand","MenubarSelectionMenu","__decorate","decorators","d","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","rejected","done","apply","AbstractCodeEditorService","_themeService","_onWillCreateCodeEditor","Emitter","_onCodeEditorAdd","onCodeEditorAdd","event","_onCodeEditorRemove","onCodeEditorRemove","_onWillCreateDiffEditor","_onDiffEditorAdd","onDiffEditorAdd","_onDiffEditorRemove","onDiffEditorRemove","_decorationOptionProviders","_codeEditorOpenHandlers","LinkedList","_modelProperties","_codeEditors","_diffEditors","_globalStyleSheet","willCreateCodeEditor","fire","addCodeEditor","getId","removeCodeEditor","listCodeEditors","keys","willCreateDiffEditor","addDiffEditor","listDiffEditors","editorWithWidgetFocus","editors","hasTextFocus","hasWidgetFocus","removeDecorationType","provider","refCount","ed","removeDecorationsByType","setModelProperty","key1","toString","dest","has","getModelProperty","openCodeEditor","input","source","sideBySide","candidate","registerCodeEditorOpenHandler","rm","unshift","toDisposable","IThemeService","IBulkEditService","createDecorator","ResourceEdit","metadata","convert","edit","edits","ResourceTextEdit","is","ResourceFileEdit","Error","isObject","textEdit","versionId","Boolean","newResource","oldResource","STOP_WORKER_DELTA_TIME_MS","canSyncModel","modelService","isTooLargeForSyncing","EditorWorkerService","configurationService","languageConfigurationService","languageFeaturesService","_modelService","_workerManager","WorkerManager","_logService","linkProvider","language","hasAccessToAllModels","provideLinks","token","uri","withWorker","client","computeLinks","links","completionProvider","WordBasedCompletionItemProvider","canComputeUnicodeHighlights","computedUnicodeHighlights","range","computeDiff","original","modified","algorithm","identical","quitEarly","changes","toLineRangeMappings","moves","m","MovedText","LineRangeMapping","LineRange","DetailedLineRangeMapping","RangeMapping","Range","computeMoreMinimalEdits","pretty","isNonEmptyArray","sw","StopWatch","elapsed","race","timeout","canNavigateValueSet","navigateValueSet","up","canComputeWordRanges","computeWordRanges","ITextResourceConfigurationService","ILanguageConfigurationService","ILanguageFeaturesService","workerManager","_debugDisplayName","_configurationService","provideCompletionItems","config","getValue","wordBasedSuggestions","models","wordBasedSuggestionsMode","getModels","getLanguageId","wordDefRegExp","getLanguageConfiguration","getWordDefinition","word","getWordAtPosition","lineNumber","startColumn","endColumn","fromPositions","insert","setEndPosition","column","data","textualSuggest","duration","suggestions","words","kind","insertText","_editorWorkerClient","_lastWorkerUsedTime","Date","getTime","IntervalTimer","cancelAndSet","_checkStopIdleWorker","Math","round","onModelRemoved","_","_checkStopEmptyWorker","EditorWorkerClient","EditorModelManager","proxy","keepIdleModels","_syncedModels","_syncedModelsLastUsedTime","_proxy","timer","_checkStopModelSync","STOP_SYNC_MODEL_DELTA_TIME_MS","modelUrl","ensureSyncedResources","resources","forceLargeModels","resourceStr","_beginModelSync","currentTime","toRemove","_stopModelSync","acceptNewModel","url","lines","getLinesContent","EOL","getEOL","getVersionId","toDispose","DisposableStore","onDidChangeContent","acceptModelChanged","onWillDispose","acceptRemovedModel","SynchronousWorkerClient","instance","_instance","_proxyObj","getProxyObject","EditorWorkerHost","workerClient","_workerClient","fhr","method","_disposed","_keepIdleModels","_workerFactory","DefaultWorkerFactory","_worker","_modelManager","_getOrCreateWorker","SimpleWorkerClient","logOnceWebWorkerWarning","EditorSimpleWorker","_getProxy","_getOrCreateModelManager","_withSyncedResources","canceled","computeUnicodeHighlights","computeDefaultDocumentColors","leadingWord","wordDef","wordDefFlags","flags","MarkerDecorationsContribution","_markerDecorationsService","ID","IMarkerDecorationsService","CommandOpener","_commandService","open","matchesScheme","Schemas","allowCommands","parse","includes","path","decodeURIComponent","query","executeCommand","ICommandService","EditorOpener","_editorService","selection","extractSelection","scheme","file","normalizePath","assign","fromUserGesture","EditorOpenSource","USER","API","editorOptions","openToSide","OpenerService","editorService","commandService","_openers","_validators","_resolvers","_resolvedUriTargets","ResourceMap","with","fragment","_externalOpeners","_defaultExternalOpener","openExternal","href","matchesSomeScheme","http","https","location","mailto","vsls","_doOpenExternal","registerOpener","opener","targetURI","validationTarget","validator","shouldOpen","resolveExternalUri","resolver","resolved","externalUri","encodeURI","allowContributedOpeners","preferredOpenerId","sourceUri","CancellationToken","None","clear","createWebWorker","MonacoWebWorkerImpl","_foreignModuleId","moduleId","_foreignModuleCreateData","createData","_foreignModuleHost","host","_foreignProxy","_getForeignProxy","foreignHostMethods","getAllMethodNames","loadForeignModule","foreignMethods","proxyMethodRequest","fmr","createProxyMethod","prototype","call","foreignProxy","foreignMethod","getProxy","withSyncedResources","StableEditorScrollState","capture","getScrollTop","hasPendingScrollAnimation","getContentHeight","visiblePosition","visiblePositionScrollDelta","visibleRanges","getVisibleRanges","getStartPosition","visiblePositionScrollTop","getTopForPosition","getPosition","_initialScrollTop","_initialContentHeight","_visiblePosition","_visiblePositionScrollDelta","_cursorPosition","restore","setScrollTop","restoreRelativeVerticalPositionOfCursor","currentCursorPosition","offset","getTopForLineNumber","ViewContentWidgets","ViewPart","viewDomNode","_viewDomNode","_widgets","domNode","createFastDomNode","document","createElement","PartFingerprints","write","setClassName","setPosition","setTop","overflowingContentWidgetsDomNode","onConfigurationChanged","widgetId","onDecorationsChanged","onFlushed","onLineMappingChanged","_updateAnchorsViewPositions","onLinesChanged","onLinesDeleted","onLinesInserted","onScrollChanged","onZonesChanged","updateAnchorViewPosition","addWidget","_widget","myWidget","Widget","_context","allowEditorOverflow","appendChild","setShouldRender","setWidgetPosition","widget","primaryAnchor","secondaryAnchor","preference","affinity","removeWidget","hasOwnProperty","parentNode","removeChild","removeAttribute","shouldSuppressMouseDownOnWidget","suppressMouseDown","onBeforeRender","viewportData","prepareRender","ctx","render","actual","_primaryAnchor","PositionPair","_secondaryAnchor","_actual","getDomNode","configuration","layoutInfo","_fixedOverflowWidgets","_contentWidth","contentWidth","_contentLeft","contentLeft","_lineHeight","_affinity","_preference","_cachedDomNodeOffsetWidth","_cachedDomNodeOffsetHeight","_maxWidth","_getMaxWidth","_isVisible","_renderData","setDisplay","setVisibility","setAttribute","setMaxWidth","hasChanged","_setPosition","modelPosition","getValidPositionPair","viewModel","validModelPosition","validatePosition","coordinatesConverter","modelPositionIsVisible","viewPosition","convertModelPositionToViewPosition","elDocument","elWindow","defaultView","innerWidth","documentElement","body","_layoutBoxInViewport","anchor","aboveLineTop","heightAvailableAboveLine","underLineTop","aboveTop","fitsAbove","belowTop","fitsBelow","viewportHeight","scrollLeft","viewportWidth","_layoutHorizontalSegmentInPage","windowSize","domNodePosition","MIN_LIMIT","max","MAX_LIMIT","min","absoluteLeft","delta","_layoutBoxInPage","absoluteAboveTop","absoluteBelowTop","absoluteAboveLeft","_prepareRenderWidgetAtExactPositionOverflowing","topLeft","Coordinate","_getAnchorsCoordinates","getCoordinates","lineHeight","horizontalPosition","visibleRangeForPosition","getVerticalOffsetForLineNumber","scrollTop","AnchorCoordinate","_reduceAnchorCoordinates","fontInfo","typicalFullwidthCharacterWidth","_prepareRenderWidget","preferredDimensions","beforeRender","safeInvoke","clientRect","getBoundingClientRect","placement","pass","pref","coordinate","startLineNumber","endLineNumber","afterRender","setLeft","bigNumbersDelta","_coordinateBrand","_anchorCoordinateBrand","fn","AbstractLineHighlightOverlay","DynamicViewOverlay","_renderLineHighlight","_renderLineHighlightOnlyWhenFocus","_selectionIsEmpty","_focused","_cursorLineNumbers","_selections","Selection","addEventHandler","removeEventHandler","_readFromSelections","cursorsLineNumbers","s","positionLineNumber","arrays","selectionIsEmpty","every","isEmpty","onThemeChanged","onCursorStateChanged","selections","scrollWidthChanged","scrollTopChanged","onFocusChanged","isFocused","_shouldRenderThis","renderedLine","_renderOne","visibleStartLineNumber","visibleRange","visibleEndLineNumber","len","index","renderData","lineIndex","_shouldRenderInMargin","_shouldRenderInContent","CurrentLineHighlightOverlay","_shouldRenderOther","scrollWidth","CurrentLineMarginHighlightOverlay","registerThemingParticipant","theme","collector","lineHighlight","getColor","editorLineHighlight","addRule","isTransparent","defines","editorLineHighlightBorder","lineHighlightBorder","isHighContrast","type","DecorationsOverlay","_typicalHalfwidthCharacterWidth","typicalHalfwidthCharacterWidth","_renderResult","_decorations","getDecorationsInViewport","decorations","decorationsLen","zIndex","aClassName","bClassName","compareRangesUsingStarts","output","_renderWholeLineDecorations","_renderNormalDecorations","String","lenI","isWholeLine","decorationOutput","j","prevClassName","prevShowIfCollapsed","prevRange","prevShouldFillLineOnLineBreak","showIfCollapsed","getLineMaxColumn","areIntersectingOrTouching","plusRange","_renderNormalDecoration","shouldFillLineOnLineBreak","linesVisibleRanges","linesVisibleRangesForRange","lenJ","lineVisibleRanges","outsideRenderedLine","ranges","singleVisibleRange","center","HorizontalRange","k","lenK","expandToLeft","continuesOnNextLine","EditorScrollbar","linesContent","overflowGuardDomNode","scrollbar","mouseWheelScrollSensitivity","fastScrollSensitivity","scrollPredominantAxis","scrollbarOptions","listenOnDomNode","getThemeTypeSelector","useShadows","lazyRender","vertical","horizontal","verticalHasArrows","horizontalHasArrows","verticalScrollbarSize","verticalSliderSize","horizontalScrollbarSize","horizontalSliderSize","handleMouseWheel","alwaysConsumeMouseWheel","arrowSize","scrollByPage","SmoothScrollableElement","viewLayout","getScrollable","scrollbarDomNode","_setLayout","onBrowserDesperateReveal","lookAtScrollTop","lookAtScrollLeft","newScrollPosition","deltaTop","getCurrentScrollTop","deltaLeft","getCurrentScrollLeft","setScrollPosition","side","setWidth","minimap","minimapWidth","setHeight","getOverviewRulerLayoutInfo","delegateVerticalScrollbarPointerDown","delegateScrollFromMouseWheelEvent","newOpts","updateOptions","updateClassName","renderNow","IndentGuidesOverlay","_primaryPosition","wrappingInfo","_spaceWidth","spaceWidth","_maxIndentLeft","wrappingColumn","_bracketPairGuideOptions","newPosition","equals","onLanguageConfigurationChanged","_c","_d","indentation","bracketPairs","activeCursorPosition","indents","getGuidesByLine","getLineCount","indent","leftOffset","guide","visibleColumn","horizontalLine","bracketGuides","getBracketGuidesInRangeByLine","highlightActive","highlightActiveBracketPair","horizontalGuides","bracketPairsHorizontal","HorizontalGuidesState","Enabled","EnabledForActive","Disabled","includeInactive","indentGuides","getLinesIndentGuides","activeIndentStartLineNumber","activeIndentEndLineNumber","activeIndentLevel","highlightActiveIndentation","activeIndentInfo","getActiveIndentGuide","indentSize","getOptions","lineGuides","bracketGuidesInLine","bracketGuidesInLineQueue","ArrayQueue","indentGuidesInLine","indentLvl","indentGuide","isActive","takeWhile","g","peeked","peek","IndentGuide","transparentToUndefined","color","colors","bracketColor","editorBracketHighlightingForeground1","guideColor","editorBracketPairGuideBackground1","guideColorActive","editorBracketPairGuideActiveBackground1","editorBracketHighlightingForeground2","editorBracketPairGuideBackground2","editorBracketPairGuideActiveBackground2","editorBracketHighlightingForeground3","editorBracketPairGuideBackground3","editorBracketPairGuideActiveBackground3","editorBracketHighlightingForeground4","editorBracketPairGuideBackground4","editorBracketPairGuideActiveBackground4","editorBracketHighlightingForeground5","editorBracketPairGuideBackground5","editorBracketPairGuideActiveBackground5","editorBracketHighlightingForeground6","editorBracketPairGuideBackground6","editorBracketPairGuideActiveBackground6","colorProvider","BracketPairGuidesClassNames","indentColors","indentColor","editorIndentGuide1","indentColorActive","editorActiveIndentGuide1","editorIndentGuide2","editorActiveIndentGuide2","editorIndentGuide3","editorActiveIndentGuide3","editorIndentGuide4","editorActiveIndentGuide4","editorIndentGuide5","editorActiveIndentGuide5","editorIndentGuide6","editorActiveIndentGuide6","colorValues","effectiveGuideColor","transparent","effectiveGuideColorActive","isDefined","indentColorValues","effectiveIndentColor","effectiveIndentColorActive","level","getInlineClassNameOfLevel","activeClassName","DomReadingContext","didDomLayout","_didDomLayout","readClientRect","_clientRectRead","rect","_domNode","markDidDomLayout","_clientRectDeltaLeft","_clientRectScale","clientRectDeltaLeft","clientRectScale","endNode","LastRenderedData","_currentVisibleRange","getCurrentVisibleRange","setCurrentVisibleRange","currentVisibleRange","HorizontalRevealRangeRequest","minimalReveal","startScrollTop","stopScrollTop","scrollType","minLineNumber","maxLineNumber","HorizontalRevealSelectionsRequest","ViewLines","_linesContent","_textRangeRestingSpot","_visibleLines","VisibleLinesCollection","conf","_isViewportWrapping","isViewportWrapping","_revealHorizontalRightPadding","_cursorSurroundingLines","_cursorSurroundingLinesStyle","_canUseLayerHinting","_viewLineOptions","ViewLineOptions","MOUSE_CURSOR_TEXT_CSS_CLASS_NAME","applyFontInfo","_maxLineWidth","_asyncUpdateLineWidths","_updateLineWidthsSlow","_asyncCheckMonospaceFontAssumptions","_checkMonospaceFontAssumptions","_lastRenderedData","_horizontalRevealRequest","_stickyScrollEnabled","enabled","_maxNumberStickyLines","maxLineCount","createVisibleLine","ViewLine","_onOptionsMaybeChanged","newViewLineOptions","getStartLineNumber","getEndLineNumber","getVisibleLine","onOptionsChanged","rendStartLineNumber","rendEndLineNumber","onSelectionChanged","shouldRender","onRevealRangeRequest","desiredScrollTop","_computeScrollTopToRevealRange","getFutureViewport","verticalType","validateScrollPosition","revealHorizontal","abs","scrollLeftChanged","onTokensChanged","setMaxLineWidth","getPositionFromDOMInfo","spanNode","viewLineDomNode","_getViewLineDomNode","_getLineNumberFor","getColumnOfNodeOffset","minColumn","getLineMinColumn","node","nodeType","CLASS_NAME","parentElement","getLineWidth","getWidth","_updateLineWidthsSlowIfDomDidLayout","_range","includeNewLines","originalEndLineNumber","intersectRanges","visibleRangesLen","domReadingContext","nextLineModelLineNumber","convertViewPositionToModelPosition","continuesInNextLine","visibleRangesForLine","getVisibleRangesForRange","currentLineModelLineNumber","LineVisibleRanges","from","_visibleRangesForLineRange","HorizontalPosition","_updateLineWidthsFast","_updateLineWidths","isScheduled","cancel","fast","localMaxLineWidth","allWidthsComputed","visibleLine","getWidthIsFast","_ensureMaxLineWidth","longestLineNumber","longestWidth","needsMonospaceFontCheck","lineWidth","monospaceAssumptionsAreValid","onMonospaceAssumptionsInvalidated","renderText","renderLines","getScrollWidth","getScrollHeight","horizontalRevealRequest","onDidRender","newScrollLeft","_computeScrollLeftToReveal","maxHorizontalOffset","platform","setLayerHinting","setContain","adjustedScrollTop","iLineWidth","ceil","viewport","viewportStartY","viewportEndY","boxIsSingleRange","boxStartY","boxEndY","newScrollTop","paddingTop","paddingBottom","minScrollTop","boxMiddleY","_computeMinimumScrolling","getCurrentViewport","viewportStartX","viewportEndX","verticalScrollbarWidth","boxStartX","boxEndX","HORIZONTAL_EXTRA_PX","viewportStart","viewportEnd","boxStart","boxEnd","revealAtStart","revealAtEnd","viewportLength","DecorationToRender","_decorationToRenderBrand","LineDecorationToRender","VisibleLineDecorationsToRender","decoration","getDecorations","DedupOverlay","_render","prevEndLineIndex","startLineIndex","endLineIndex","GlyphMarginWidgets","_glyphMargin","_glyphMarginLeft","glyphMarginLeft","_glyphMarginWidth","glyphMarginWidth","_glyphMarginDecorationLaneCount","glyphMarginDecorationLaneCount","_managedDomNodes","_decorationGlyphsToRender","getWidgets","renderInfo","lane","equalsRange","_collectDecorationBasedGlyphRenderRequest","requests","glyphMarginClassName","glyphMargin","DecorationBasedGlyphRenderRequest","_collectWidgetBasedGlyphRenderRequest","widgetLineNumber","WidgetBasedGlyphRenderRequest","_collectSortedGlyphRenderRequests","decorationGlyphsToRender","requestsAtLocation","el","winner","classNames","request","accept","join","pop","relativeVerticalOffset","dec","combinedClassName","DecorationBasedGlyph","LinesDecorationsOverlay","_decorationsLeft","decorationsLeft","_decorationsWidth","decorationsWidth","_getDecorations","rLen","linesDecorationsClassName","firstLineDecorationClassName","toRender","common","lineOutput","MarginViewLineDecorationsOverlay","marginClassName","allCharCodes","v","MinimapCharRenderer","charData","scale","_minimapCharRendererBrand","charDataNormal","soften","charDataLight","ratio","Uint8ClampedArray","toUint8","renderChar","dx","dy","chCode","foregroundAlpha","backgroundColor","backgroundAlpha","fontScale","useLighterFont","force1pxHeight","charWidth","charHeight","renderHeight","console","warn","charIndex","getCharIndex","destWidth","backgroundR","backgroundG","backgroundB","deltaR","deltaG","deltaB","destAlpha","sourceOffset","row","blockRenderChar","colorR","colorG","colorB","charTable","A","B","C","D","E","F","decodeData","prebakedMiniMaps","createSingleCallFunction","MinimapCharRendererFactory","fontFamily","lastCreated","lastFontFamily","factory","createFromSampleData","createSampleData","canvas","style","fillStyle","font","textBaseline","code","fillText","fromCharCode","getImageData","_downsample","_downsampleChar","destOffset","targetIndex","brightest","sourceY1","sourceY2","sourceX1","sourceX2","samples","sy","sourceRow","floor","yBalance","sx","xBalance","sourceIndex","final","pixelsPerCharacter","resultLen","resultOffset","adjust","MinimapOptions","tokensColorTracker","pixelRatio","minimapLayout","minimapOpts","renderMinimap","size","minimapHeightIsEditorHeight","scrollBeyondLastLine","bottom","showSlider","autohide","minimapLeft","minimapHeight","canvasInnerWidth","minimapCanvasInnerWidth","canvasInnerHeight","minimapCanvasInnerHeight","canvasOuterWidth","minimapCanvasOuterWidth","canvasOuterHeight","minimapCanvasOuterHeight","isSampling","minimapIsSampling","editorHeight","minimapScale","minimapLineHeight","minimapCharWidth","charRenderer","defaultBackgroundColor","_getMinimapBackground","_getMinimapForegroundOpacity","themeColor","minimapBackground","RGBA8","rgba","minimapForegroundOpacity","_clamp","other","MinimapLayout","scrollHeight","sliderNeeded","_computedSliderRatio","sliderTop","sliderHeight","topPaddingLineCount","getDesiredScrollTopFromDelta","getDesiredScrollTopFromTouchLocation","pageY","intersectWithViewport","getYForLineNumber","viewportStartLineNumber","viewportEndLineNumber","viewportStartLineNumberVerticalOffset","viewportContainsWhitespaceGaps","lineCount","realLineCount","previousLayout","minimapLinesFitting","logicalScrollHeight","maxMinimapSliderTop","computedSliderRatio","maxLinesFitting","viewportLineCount","expectedViewportLineCount","extraLinesAtTheTop","extraLinesAtTheBottom","consideringStartLineNumber","partialLine","sliderTopAligned","MinimapLine","onContentChanged","INVALID","RenderData","renderedLayout","imageData","_imageData","_renderedLines","RenderedLinesCollection","_set","linesEquals","layout","scrollEquals","_get","tmp","rendLineNumberStart","changeFromLineNumber","changeCount","deleteFromLineNumber","deleteToLineNumber","insertFromLineNumber","insertToLineNumber","MinimapBuffers","WIDTH","HEIGHT","background","_backgroundFillData","_createBackgroundFillData","_buffers","createImageData","_lastUsedBuffer","getBuffer","backgroundA","MinimapSamplingState","compute","viewLineCount","oldSamplingState","minimapLineCount","EditorLayoutInfoComputer","computeContainedMinimapLineCount","halfRatio","minimapLines","lastIndex","oldMinimapLines","oldLength","oldIndex","oldDeltaLineCount","minViewLineNumber","events","lastEvent","fromViewLineNumber","toViewLineNumber","oldMinimapLineNumber","_oldIndex","selectedViewLineNumber","_i","samplingRatio","modelLineToMinimapLine","modelLineRangeToMinimapLineRange","fromLineNumber","toLineNumber","fromLineIndex","toLineIndex","sampledLineNumber","decorationLineRangeToMinimapLineRange","minimapLineStart","minimapLineEnd","deletedLineCount","changeStartIndex","changeEndIndex","insertedLineCount","Minimap","MinimapTokensColorTracker","getInstance","_minimapSelections","samplingState","_samplingState","_shouldCheckSampling","InnerMinimap","_recreateLineSampling","onDidChangeOptions","affectsMinimap","minimapLineRange","count","onTokensColorsChanged","minimapCtx","whitespaceViewportData","wasSampling","getRealLineCount","getLineContent","getMinimapLinesRenderingData","needed","getViewLineData","getSelections","getMinimapDecorationsInViewport","modelStartLineNumber","modelEndLineNumber","getMinimapDecorationsInRange","minimapStartLineNumber","minimapEndLineNumber","ViewModelDecoration","revealLineNumber","revealRange","_renderDecorations","_gestureInProgress","_theme","_model","_lastRenderData","_selectionColor","minimapSelection","_getMinimapDomNodeClassName","_shadow","_canvas","_decorationsCanvas","_slider","_sliderHorizontal","_applyLayout","_pointerDownListener","preventDefault","button","initialPosY","_startSliderDragging","internalOffsetY","offsetY","_sliderPointerMoveMonitor","_sliderPointerDownListener","stopPropagation","_gestureDisposable","Gesture","addTarget","_sliderTouchStartListener","EventType","Start","toggleClassName","scrollDueToTouchEvent","passive","_sliderTouchMoveListener","Change","_sliderTouchEndListener","End","initialSliderState","Element","initialPosX","pageX","handlePointerMove","minimapPosition","pointerOrthogonalDelta","pointerDelta","buttons","pointerMoveData","touch","startY","class_","_getBuffer","renderingCtx","renderDecorations","tabSize","canvasContext","clearRect","highlightedLines","ContiguousLineMap","_renderSelectionLineHighlights","_renderDecorationsLineHighlights","lineOffsetMap","_renderSelectionsHighlights","_renderDecorationsHighlights","y1","y2","intersection","line","yy1","yy2","fillRect","MINIMAP_GUTTER_WIDTH","highlightColors","minimapOptions","MinimapPosition","Inline","decorationColor","highlightColor","characterWidth","renderDecorationOnLine","Gutter","renderDecoration","decorationRange","x1","getXOffsetForPosition","x2","lineIndexToXOffset","lineData","prevx","charCode","charCodeAt","strings","_lastData","_dirtyY1","_dirtyY2","_renderUntouchedLines","lineInfo","defaultBackground","backgroundIsLight","renderMinimapLineHeight","innerLinePadding","renderBackground","renderedLines","_renderLine","dirtyY1","dirtyHeight","putImageData","lastRenderData","lastTargetData","lastStartLineNumber","lastLines","lastLinesLength","targetData","maxDestPixel","dirtyPixel1","dirtyPixel2","copySourceStart","copySourceEnd","copyDestStart","copyDestEnd","dest_dy","lastLineIndex","source_dy","sourceStart","sourceEnd","destStart","destEnd","subarray","colorTracker","minimapCharRenderer","content","tokens","maxDx","tabsCharDelta","tokenIndex","tokensLen","getCount","tokenEndIndex","getEndOffset","tokenColorId","getForeground","tokenColor","insertSpacesCount","defaultValue","_startLineNumber","_endLineNumber","_defaultValue","_values","ViewOverlayWidgets","_verticalScrollbarWidth","_minimapWidth","_horizontalScrollbarHeight","horizontalScrollbarHeight","_editorHeight","_editorWidth","_updateMaxMinWidth","widgetData","maxMinWidth","widgetMinWidthInPx","getMinContentWidthInPx","setOverlayWidgetsMinWidth","_renderWidget","setRight","widgetHeight","clientHeight","right","Settings","overviewRulerLanes","renderBorder","borderColor","editorOverviewRulerBorder","hideCursor","cursorColor","editorCursorForeground","themeType","minimapEnabled","minimapSide","editorOverviewRulerBackground","TokenizationRegistry","getDefaultBackground","overviewRuler","domWidth","domHeight","canvasWidth","canvasHeight","w","_initLanes","canvasLeftOffset","laneCount","remainingWidth","leftWidth","rightWidth","centerWidth","centerOffset","Color","DecorationsOverviewRuler","_actualShouldRender","_renderedDecorations","_renderedCursorPositions","_updateSettings","_tokensColorTrackerListener","onDidChange","changedColorMap","_cursorPositions","newSettings","_settings","_markRenderingIsNeeded","_markRenderingIsMaybeNeeded","compare","affectsOverviewRuler","scrollHeightChanged","editorCtx","setBackgroundColor","Format","CSS","formatHexA","getAllOverviewRulerDecorations","OverviewRulerDecorationsGroup","compareByRenderingProps","equalsArr","heightRatio","minDecorationHeight","halfMinDecorationHeight","canvasCtx","isOpaque","decorationGroup","decorationGroupData","prevLane","prevY1","prevY2","yCenter","cursorHeight","halfCursorHeight","cursorX","cursorW","cursor","beginPath","strokeStyle","moveTo","lineTo","stroke","OverviewRuler","ViewEventHandler","cssClassName","_zoneManager","OverviewZoneManager","setDOMWidth","setDOMHeight","setOuterHeight","setLineHeight","setPixelRatio","getDOMWidth","getDOMHeight","getCanvasWidth","getCanvasHeight","setLayout","setZones","zones","getOuterHeight","colorZones","resolveColorZones","id2Color","getId2Color","_renderOneLane","currentColorId","currentFrom","currentTo","zone","zoneColorId","colorId","zoneFrom","zoneTo","to","Rulers","_renderedRulers","_rulers","_ensureRulersCount","currentCount","desiredCount","rulerWidth","addCount","removeCount","ruler","setBoxShadow","ScrollDecorationViewPart","_scrollTop","_width","_updateWidth","_shouldShow","_useShadows","_updateShouldShow","newShouldShow","HorizontalRangeWithStyle","startStyle","endStyle","LineVisibleRangesWithStyle","toStyledRange","toStyled","SelectionsOverlay","_previousFrameVisibleRangesWithStyle","_roundedSelection","_visibleRangesHaveGaps","_enrichVisibleRangesWithStyle","previousFrame","epsilon","previousFrameTop","previousFrameBottom","topLineNumber","bottomLineNumber","curLineRange","curLeft","curRight","prevLeft","prevRight","nextLeft","nextRight","_getVisibleRangesWithStyle","_createSelectionPiece","_actualRenderOneSelection","output2","hasMultipleSelections","visibleRangesHaveStyle","fullLineHeight","reducedLineHeight","firstLineNumber","lastLineNumber","innerCornerOutput","restOfSelectionOutput","SELECTION_CLASS_NAME","ROUNDED_PIECE_WIDTH","EDITOR_BACKGROUND_CLASS_NAME","SELECTION_TOP_RIGHT","SELECTION_BOTTOM_RIGHT","SELECTION_TOP_LEFT","SELECTION_BOTTOM_LEFT","thisFrameVisibleRangesWithStyle","visibleRangesWithStyle","internalCorners","restOfSelection","n","editorSelectionForegroundColor","editorSelectionForeground","ViewCursorRenderData","paddingLeft","textContentClassName","ViewCursor","_cursorStyle","_lineCursorWidth","_position","_lastRenderedContent","show","hide","onCursorPositionChanged","pauseAnimation","transitionProperty","_getGraphemeAwarePosition","lineContent","startOffset","endOffset","substring","_prepareRender","nextGrapheme","TextEditorCursorStyle","Line","LineThin","_getTokenClassName","visibleRangeForCharacter","firstVisibleRangeForCharacter","Block","Underline","UnderlineThin","findTokenIndexAtOffset","getClassName","setPaddingLeft","ViewCursors","_readOnly","_cursorBlinking","_cursorSmoothCaretAnimation","_isComposingInput","_primaryCursor","_secondaryCursors","_updateDomClassName","_startCursorBlinkAnimation","TimeoutTimer","_cursorFlatBlinkInterval","_blinkingEnabled","_editorHasFocus","_updateBlinking","onCompositionStart","onCompositionEnd","_onCursorPositionChanged","secondaryPositions","reason","addCnt","newCursor","insertBefore","nextSibling","removeCnt","positions","secondaryCursor","_getCursorBlinking","blinkingStyle","isHidden","isSolid","_hide","_show","BLINK_INTERVAL","setIfNotSet","_getClassName","BlockOutline","renderDataLen","primaryRenderData","secondaryRenderData","getLastRenderData","caret","caretBackground","editorCursorBackground","opposite","invalidFunc","ViewZones","marginDomNode","_zones","_recomputeWhitespacesProps","whitespaces","getWhitespaces","oldWhitespaces","whitespace","hadAChange","changeWhitespace","whitespaceAccessor","props","_computeWhitespaceProps","delegate","isInHiddenArea","oldWhitespace","afterLineNumber","afterViewLineNumber","heightInPx","changeOneWhitespace","_safeCallOnComputedHeight","_getZoneOrdinal","ordinal","afterColumn","_heightInPixels","minWidthInPx","_minWidthInPixels","zoneAfterModelPosition","zoneBeforeModelPosition","validAfterLineNumber","afterColumnAffinity","isVisible","showInHiddenAreas","changeViewZones","zonesHaveChanged","changeAccessor","addZone","_addZone","removeZone","_removeZone","layoutZone","_layoutZone","func","arg1","onUnexpectedError","safeInvoke1Arg","myZone","whitespaceId","insertWhitespace","removeWhitespace","shouldSuppressMouseDownOnViewZone","heightInLines","onComputedHeight","_safeCallOnDomNodeTop","onDomNodeTop","visibleWhitespaces","visibleZones","hasVisibleZone","visibleWhitespace","newTop","newHeight","newDisplay","verticalOffset","getScrolledTopFromAbsoluteTop","BlockDecorations","blocks","update","didChange","newContentWidth","newContentLeft","blockClassName","block","blockIsAfterEnd","getVerticalOffsetAfterLineNumber","blockDoesNotCollapse","paddingRight","blockPadding","WhitespaceOverlay","_options","WhitespaceOptions","_selection","newOptions","renderWhitespace","selectionsOnLine","maxColumn","_applyRenderWhitespace","continuesWithWrappedLine","editorWhitespaces","USE_SVG","renderWithSVG","stopRenderingLineAfter","fauxIndentLength","onlyBoundary","onlyTrailing","middotWidth","wsmiddotWidth","renderSpaceCharCode","canUseHalfwidthRightwardsArrow","lastNonWhitespaceIndex","lineIsEmptyOrWhitespace","firstNonWhitespaceIndex","currentSelectionIndex","currentSelection","maxLeft","prevChCode","nextChCode","prevCharCode","_renderArrow","toFixed","p1","p2","p3","p4","p5","parts","p","experimentalWhitespaceRendering","View","commandDelegate","colorTheme","userInputEvents","overflowWidgetsDomNode","_instantiationService","_shouldRecomputeGlyphMarginLanes","_renderAnimationFrame","viewController","ViewController","ViewContext","_viewParts","_textAreaHandler","createInstance","TextAreaHandler","_createTextAreaHandlerHelper","_getEditorClassName","_overflowGuardContainer","_scrollbar","_viewLines","_viewZones","decorationsOverviewRuler","scrollDecoration","contentViewOverlays","ContentViewOverlays","addDynamicOverlay","marginViewOverlays","MarginViewOverlays","LineNumbersOverlay","_glyphMarginWidgets","margin","Margin","_contentWidgets","_viewCursors","_overlayWidgets","rulers","blockOutline","overviewRulerData","parent","textArea","textAreaCover","_pointerHandler","PointerHandler","_createPointerHandlerHelper","_flushAccumulatedAndRenderNow","setGlyphMarginDecorationLaneCount","_computeGlyphMarginLaneCount","inputLatency","onRenderStart","_renderNow","glyphs","getAllMarginDecorations","GlyphMarginLane","Left","validateRange","leftDecRange","rightDecRange","compareRangesUsingEnds","Right","linesContentDomNode","viewLinesDomNode","focusTextArea","focus","dispatchTextAreaEvent","dispatchEvent","lastViewCursorsRenderData","lastTextareaPosition","PointerHandlerLastRenderData","viewZoneId","focused","handleEvents","_scheduleRender","affectsGlyphMargin","viewPart","_onRenderScheduled","bind","safeInvokeNoArg","_actualRender","_getViewPartsToRender","viewPartsToRender","partialViewportData","getLinesViewportData","setViewport","centeredLineNumber","ViewportData","getWhitespaceViewportData","renderingContext","RenderingContext","restoreState","scrollPosition","visibleLinesStabilized","getOffsetForColumn","modelLineNumber","modelColumn","getTargetAtClientPoint","mouseTarget","ViewUserInputEvents","convertViewToModelMouseTarget","createOverviewRuler","change","now","everything","forceShouldRender","writeScreenReaderContent","setAriaOptions","addContentWidget","layoutContentWidget","_e","_f","_g","_h","secondaryPosition","positionAffinity","removeContentWidget","addOverlayWidget","layoutOverlayWidget","newPreference","removeOverlayWidget","addGlyphMarginWidget","layoutGlyphMarginWidget","removeGlyphMarginWidget","ttPolicy","createTrustedTypesPolicy","createHTML","DOMLineBreaksComputerFactory","createLineBreaksComputer","wrappingIndent","wordBreak","injectedTexts","addRequest","lineText","injectedText","previousLineBreakData","finalize","firstLineBreakColumn","injectedTextsPerLine","createEmptyLineBreakWithPossiblyInjectedText","requestIdx","LineInjectedText","applyInjectedText","injectionOptions","t","injectionOffsets","text","ModelLineProjectionData","overallWidth","additionalIndent","additionalIndentSize","additionalIndentLength","containerDomNode","sb","StringBuilder","firstNonWhitespaceIndices","wrappedTextIndentLengths","renderLineContents","allCharOffsets","allVisibleColumns","wrappedTextIndentLength","indentWidth","renderLineContent","substr","renderLine","html","build","trustedhtml","innerHTML","overflowWrap","createRange","lineDomNodes","children","breakOffsets","readLineBreaks","visibleColumns","breakOffsetsVisibleColumn","curInjectedTexts","createLineBreaks","initialVisibleColumn","wrappingIndentLength","hangingOffset","appendString","charOffset","charOffsets","nextCharCode","producedCharacters","space","appendCharCode","appendASCIICharCode","lineDomNode","spans","discoverBreaks","log","low","lowRects","high","highRects","mid","midRects","setStart","firstChild","setEnd","getClientRects","_readConfig","_lastCursorModelPosition","_activeLineNumber","lineNumbers","_renderLineNumbers","renderType","_renderCustomLineNumbers","renderFn","_renderFinalNewline","_lineNumbersLeft","lineNumbersLeft","_lineNumbersWidth","lineNumbersWidth","primaryViewPosition","_getLineRenderLineNumber","viewLineNumber","diff","lineHeightClassName","renderLineNumber","extraClassName","getLineLength","editorLineNumbersColor","editorLineNumbers","editorDimmedLineNumberColor","editorDimmedLineNumber","RangeUtil","_createRange","_handyReadyRange","_detachRange","selectNodeContents","_readClientRects","startElement","endElement","_mergeAdjacentRanges","FloatHorizontalRange","prev","_createHorizontalRangesFromClientRects","clientRects","readHorizontalRanges","startChildIndex","endChildIndex","canUseFastRenderedViewLine","browser","renderControlCharacters","useMonospaceOptimizations","isMonospace","fontLigatures","_isMaybeInvalid","_renderedViewLine","setDomNode","getViewLineRenderingData","actualInlineDecorations","LineDecoration","inlineDecorations","renderLineInput","RenderLineInput","isBasicASCII","containsRTL","startVisibleColumn","EditorFontLigatures","OFF","renderViewLine","renderedViewLine","containsForeignElements","FastRenderedViewLine","characterMapping","createRenderedLine","layoutLine","toSlowRenderedLine","VisibleRanges","horizontalRanges","_cachedWidth","keyColumnCount","_keyColumnPixelOffsetCache","Float32Array","_characterMapping","_charWidth","horizontalOffset","getHorizontalOffset","_getReadingTarget","expectedWidth","actualWidth","startPosition","_getColumnPixelOffset","endPosition","keyColumnOrdinal","keyColumn","keyColumnPixelOffset","_actualReadPixelOffset","keyColumnHorizontalOffset","myDomNode","domPosition","getDomPosition","partIndex","RenderedViewLine","_isWhitespaceOnly","test","_containsForeignElements","_pixelOffsetCache","_readPixelOffset","_readVisibleRangesForRange","pixelOffset","_readRawVisibleRangesForRange","readingTarget","cachedPixelOffset","expectedResult","startDomPosition","endDomPosition","WebKitRenderedViewLine","endPixelOffset","lastRange","createWebKitRenderedLine","createNormalRenderedLine","spanNodeTextContentLength","spanIndex","previousSibling","getColumn","DomPosition","OUTER_CLASS_NAME","_glyphMarginBackgroundDomNode"],"sourceRoot":""}