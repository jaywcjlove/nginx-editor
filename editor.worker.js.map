{"version":3,"file":"editor.worker.js","mappings":"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","sources":["../node_modules/process/browser.js","../webpack/bootstrap","../webpack/runtime/global","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/monaco-editor/esm/vs/base/common/errors.js","../node_modules/monaco-editor/esm/vs/base/common/iterator.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/monaco-editor/esm/vs/base/common/functional.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/monaco-editor/esm/vs/base/common/lifecycle.js","../node_modules/monaco-editor/esm/vs/base/common/linkedList.js","../node_modules/monaco-editor/esm/vs/base/common/event.js","../node_modules/monaco-editor/esm/vs/base/common/stopwatch.js","../node_modules/monaco-editor/esm/vs/base/common/objects.js","../node_modules/monaco-editor/esm/vs/nls.js","../node_modules/monaco-editor/esm/vs/base/common/platform.js","../node_modules/monaco-editor/esm/vs/base/common/strings.js","../node_modules/monaco-editor/esm/vs/base/common/cache.js","../node_modules/monaco-editor/esm/vs/base/common/lazy.js","../node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js","../node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js","../node_modules/monaco-editor/esm/vs/base/common/hash.js","../node_modules/monaco-editor/esm/vs/base/common/diff/diff.js","../node_modules/monaco-editor/esm/vs/base/common/process.js","../node_modules/monaco-editor/esm/vs/base/common/path.js","../node_modules/monaco-editor/esm/vs/base/common/uri.js","../node_modules/monaco-editor/esm/vs/editor/common/core/position.js","../node_modules/monaco-editor/esm/vs/base/common/arrays.js","../node_modules/monaco-editor/esm/vs/editor/common/core/range.js","../node_modules/monaco-editor/esm/vs/base/common/uint.js","../node_modules/monaco-editor/esm/vs/editor/common/model/prefixSumComputer.js","../node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js","../node_modules/monaco-editor/esm/vs/editor/common/core/wordHelper.js","../node_modules/monaco-editor/esm/vs/editor/common/core/characterClassifier.js","../node_modules/monaco-editor/esm/vs/editor/common/languages/linkComputer.js","../node_modules/monaco-editor/esm/vs/editor/common/languages/supports/inplaceReplaceSupport.js","../node_modules/monaco-editor/esm/vs/base/common/cancellation.js","../node_modules/monaco-editor/esm/vs/base/common/keyCodes.js","../node_modules/monaco-editor/esm/vs/editor/common/core/selection.js","../node_modules/monaco-editor/esm/vs/base/common/types.js","../node_modules/monaco-editor/esm/vs/base/common/codicons.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/monaco-editor/esm/vs/editor/common/tokenizationRegistry.js","../node_modules/monaco-editor/esm/vs/editor/common/languages.js","../node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneEnums.js","../node_modules/monaco-editor/esm/vs/editor/common/services/editorBaseApi.js","../node_modules/monaco-editor/esm/vs/editor/common/core/wordCharacterClassifier.js","../node_modules/monaco-editor/esm/vs/editor/common/model.js","../node_modules/monaco-editor/esm/vs/editor/common/model/textModelSearch.js","../node_modules/monaco-editor/esm/vs/base/common/assert.js","../node_modules/monaco-editor/esm/vs/editor/common/services/unicodeTextModelHighlighter.js","../node_modules/monaco-editor/esm/vs/editor/common/diff/linesDiffComputer.js","../node_modules/monaco-editor/esm/vs/editor/common/core/offsetRange.js","../node_modules/monaco-editor/esm/vs/base/common/arraysFind.js","../node_modules/monaco-editor/esm/vs/editor/common/core/lineRange.js","../node_modules/monaco-editor/esm/vs/editor/common/diff/rangeMapping.js","../node_modules/monaco-editor/esm/vs/editor/common/diff/legacyLinesDiffComputer.js","../node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/algorithms/diffAlgorithm.js","../node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/utils.js","../node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/algorithms/dynamicProgrammingDiffing.js","../node_modules/monaco-editor/esm/vs/base/common/map.js","../node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/algorithms/myersDiffAlgorithm.js","../node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/linesSliceCharSequence.js","../node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/computeMovedLines.js","../node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/heuristicSequenceOptimizations.js","../node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/lineSequence.js","../node_modules/monaco-editor/esm/vs/editor/common/diff/defaultLinesDiffComputer/defaultLinesDiffComputer.js","../node_modules/monaco-editor/esm/vs/editor/common/diff/linesDiffComputers.js","../node_modules/monaco-editor/esm/vs/base/common/color.js","../node_modules/monaco-editor/esm/vs/editor/common/languages/defaultDocumentColorsComputer.js","../node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js","../node_modules/monaco-editor/esm/vs/editor/editor.worker.js"],"sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  try {\n    return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n  } catch (e) {\n    return typeof fn === \"function\";\n  }\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n    constructor() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(() => {\n                if (e.stack) {\n                    if (ErrorNoTelemetry.isErrorNoTelemetry(e)) {\n                        throw new ErrorNoTelemetry(e.message + '\\n\\n' + e.stack);\n                    }\n                    throw new Error(e.message + '\\n\\n' + e.stack);\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    emit(e) {\n        this.listeners.forEach((listener) => {\n            listener(e);\n        });\n    }\n    onUnexpectedError(e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    }\n    // For external errors, we don't want the listeners to be called\n    onUnexpectedExternalError(e) {\n        this.unexpectedErrorHandler(e);\n    }\n}\nexport const errorHandler = new ErrorHandler();\nexport function onUnexpectedError(e) {\n    // ignore errors from cancelled promises\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nexport function onUnexpectedExternalError(e) {\n    // ignore errors from cancelled promises\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nexport function transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        const { name, message } = error;\n        const stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name,\n            message,\n            stack,\n            noTelemetry: ErrorNoTelemetry.isErrorNoTelemetry(error)\n        };\n    }\n    // return as is\n    return error;\n}\nconst canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isCancellationError(error) {\n    if (error instanceof CancellationError) {\n        return true;\n    }\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n// !!!IMPORTANT!!!\n// Do NOT change this class because it is also used as an API-type.\nexport class CancellationError extends Error {\n    constructor() {\n        super(canceledName);\n        this.name = this.message;\n    }\n}\n/**\n * @deprecated use {@link CancellationError `new CancellationError()`} instead\n */\nexport function canceled() {\n    const error = new Error(canceledName);\n    error.name = error.message;\n    return error;\n}\nexport function illegalArgument(name) {\n    if (name) {\n        return new Error(`Illegal argument: ${name}`);\n    }\n    else {\n        return new Error('Illegal argument');\n    }\n}\nexport function illegalState(name) {\n    if (name) {\n        return new Error(`Illegal state: ${name}`);\n    }\n    else {\n        return new Error('Illegal state');\n    }\n}\nexport class NotSupportedError extends Error {\n    constructor(message) {\n        super('NotSupported');\n        if (message) {\n            this.message = message;\n        }\n    }\n}\n/**\n * Error that when thrown won't be logged in telemetry as an unhandled error.\n */\nexport class ErrorNoTelemetry extends Error {\n    constructor(msg) {\n        super(msg);\n        this.name = 'CodeExpectedError';\n    }\n    static fromError(err) {\n        if (err instanceof ErrorNoTelemetry) {\n            return err;\n        }\n        const result = new ErrorNoTelemetry();\n        result.message = err.message;\n        result.stack = err.stack;\n        return result;\n    }\n    static isErrorNoTelemetry(err) {\n        return err.name === 'CodeExpectedError';\n    }\n}\n/**\n * This error indicates a bug.\n * Do not throw this for invalid user input.\n * Only catch this error to recover gracefully from bugs.\n */\nexport class BugIndicatingError extends Error {\n    constructor(message) {\n        super(message || 'An unexpected bug occurred.');\n        Object.setPrototypeOf(this, BugIndicatingError.prototype);\n        // Because we know for sure only buggy code throws this,\n        // we definitely want to break here and fix the bug.\n        // eslint-disable-next-line no-debugger\n        // debugger;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var Iterable;\n(function (Iterable) {\n    function is(thing) {\n        return thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n    }\n    Iterable.is = is;\n    const _empty = Object.freeze([]);\n    function empty() {\n        return _empty;\n    }\n    Iterable.empty = empty;\n    function* single(element) {\n        yield element;\n    }\n    Iterable.single = single;\n    function wrap(iterableOrElement) {\n        if (is(iterableOrElement)) {\n            return iterableOrElement;\n        }\n        else {\n            return single(iterableOrElement);\n        }\n    }\n    Iterable.wrap = wrap;\n    function from(iterable) {\n        return iterable || _empty;\n    }\n    Iterable.from = from;\n    function* reverse(array) {\n        for (let i = array.length - 1; i >= 0; i--) {\n            yield array[i];\n        }\n    }\n    Iterable.reverse = reverse;\n    function isEmpty(iterable) {\n        return !iterable || iterable[Symbol.iterator]().next().done === true;\n    }\n    Iterable.isEmpty = isEmpty;\n    function first(iterable) {\n        return iterable[Symbol.iterator]().next().value;\n    }\n    Iterable.first = first;\n    function some(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    Iterable.some = some;\n    function find(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return undefined;\n    }\n    Iterable.find = find;\n    function* filter(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                yield element;\n            }\n        }\n    }\n    Iterable.filter = filter;\n    function* map(iterable, fn) {\n        let index = 0;\n        for (const element of iterable) {\n            yield fn(element, index++);\n        }\n    }\n    Iterable.map = map;\n    function* concat(...iterables) {\n        for (const iterable of iterables) {\n            for (const element of iterable) {\n                yield element;\n            }\n        }\n    }\n    Iterable.concat = concat;\n    function reduce(iterable, reducer, initialValue) {\n        let value = initialValue;\n        for (const element of iterable) {\n            value = reducer(value, element);\n        }\n        return value;\n    }\n    Iterable.reduce = reduce;\n    /**\n     * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\n     */\n    function* slice(arr, from, to = arr.length) {\n        if (from < 0) {\n            from += arr.length;\n        }\n        if (to < 0) {\n            to += arr.length;\n        }\n        else if (to > arr.length) {\n            to = arr.length;\n        }\n        for (; from < to; from++) {\n            yield arr[from];\n        }\n    }\n    Iterable.slice = slice;\n    /**\n     * Consumes `atMost` elements from iterable and returns the consumed elements,\n     * and an iterable for the rest of the elements.\n     */\n    function consume(iterable, atMost = Number.POSITIVE_INFINITY) {\n        const consumed = [];\n        if (atMost === 0) {\n            return [consumed, iterable];\n        }\n        const iterator = iterable[Symbol.iterator]();\n        for (let i = 0; i < atMost; i++) {\n            const next = iterator.next();\n            if (next.done) {\n                return [consumed, Iterable.empty()];\n            }\n            consumed.push(next.value);\n        }\n        return [consumed, { [Symbol.iterator]() { return iterator; } }];\n    }\n    Iterable.consume = consume;\n})(Iterable || (Iterable = {}));\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Given a function, returns a function that is only calling that function once.\n */\nexport function createSingleCallFunction(fn) {\n    const _this = this;\n    let didCall = false;\n    let result;\n    return function () {\n        if (didCall) {\n            return result;\n        }\n        didCall = true;\n        result = fn.apply(_this, arguments);\n        return result;\n    };\n}\n","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  };\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw new Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}","import { createSingleCallFunction } from './functional.js';\nimport { Iterable } from './iterator.js';\n// #region Disposable Tracking\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\nlet disposableTracker = null;\nexport function setDisposableTracker(tracker) {\n    disposableTracker = tracker;\n}\nif (TRACK_DISPOSABLES) {\n    const __is_disposable_tracked__ = '__is_disposable_tracked__';\n    setDisposableTracker(new class {\n        trackDisposable(x) {\n            const stack = new Error('Potentially leaked disposable').stack;\n            setTimeout(() => {\n                if (!x[__is_disposable_tracked__]) {\n                    console.log(stack);\n                }\n            }, 3000);\n        }\n        setParent(child, parent) {\n            if (child && child !== Disposable.None) {\n                try {\n                    child[__is_disposable_tracked__] = true;\n                }\n                catch (_a) {\n                    // noop\n                }\n            }\n        }\n        markAsDisposed(disposable) {\n            if (disposable && disposable !== Disposable.None) {\n                try {\n                    disposable[__is_disposable_tracked__] = true;\n                }\n                catch (_a) {\n                    // noop\n                }\n            }\n        }\n        markAsSingleton(disposable) { }\n    });\n}\nexport function trackDisposable(x) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.trackDisposable(x);\n    return x;\n}\nexport function markAsDisposed(disposable) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.markAsDisposed(disposable);\n}\nfunction setParentOfDisposable(child, parent) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.setParent(child, parent);\n}\nfunction setParentOfDisposables(children, parent) {\n    if (!disposableTracker) {\n        return;\n    }\n    for (const child of children) {\n        disposableTracker.setParent(child, parent);\n    }\n}\n/**\n * Indicates that the given object is a singleton which does not need to be disposed.\n*/\nexport function markAsSingleton(singleton) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.markAsSingleton(singleton);\n    return singleton;\n}\n/**\n * Check if `thing` is {@link IDisposable disposable}.\n */\nexport function isDisposable(thing) {\n    return typeof thing.dispose === 'function' && thing.dispose.length === 0;\n}\nexport function dispose(arg) {\n    if (Iterable.is(arg)) {\n        const errors = [];\n        for (const d of arg) {\n            if (d) {\n                try {\n                    d.dispose();\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n            }\n        }\n        if (errors.length === 1) {\n            throw errors[0];\n        }\n        else if (errors.length > 1) {\n            throw new AggregateError(errors, 'Encountered errors while disposing of store');\n        }\n        return Array.isArray(arg) ? [] : arg;\n    }\n    else if (arg) {\n        arg.dispose();\n        return arg;\n    }\n}\n/**\n * Combine multiple disposable values into a single {@link IDisposable}.\n */\nexport function combinedDisposable(...disposables) {\n    const parent = toDisposable(() => dispose(disposables));\n    setParentOfDisposables(disposables, parent);\n    return parent;\n}\n/**\n * Turn a function that implements dispose into an {@link IDisposable}.\n *\n * @param fn Clean up function, guaranteed to be called only **once**.\n */\nexport function toDisposable(fn) {\n    const self = trackDisposable({\n        dispose: createSingleCallFunction(() => {\n            markAsDisposed(self);\n            fn();\n        })\n    });\n    return self;\n}\n/**\n * Manages a collection of disposable values.\n *\n * This is the preferred way to manage multiple disposables. A `DisposableStore` is safer to work with than an\n * `IDisposable[]` as it considers edge cases, such as registering the same value multiple times or adding an item to a\n * store that has already been disposed of.\n */\nexport class DisposableStore {\n    constructor() {\n        this._toDispose = new Set();\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    /**\n     * Dispose of all registered disposables and mark this object as disposed.\n     *\n     * Any future disposables added to this object will be disposed of on `add`.\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clear();\n    }\n    /**\n     * @return `true` if this object has been disposed of.\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Dispose of all registered disposables but do not mark this object as disposed.\n     */\n    clear() {\n        if (this._toDispose.size === 0) {\n            return;\n        }\n        try {\n            dispose(this._toDispose);\n        }\n        finally {\n            this._toDispose.clear();\n        }\n    }\n    /**\n     * Add a new {@link IDisposable disposable} to the collection.\n     */\n    add(o) {\n        if (!o) {\n            return o;\n        }\n        if (o === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        setParentOfDisposable(o, this);\n        if (this._isDisposed) {\n            if (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n                console.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n            }\n        }\n        else {\n            this._toDispose.add(o);\n        }\n        return o;\n    }\n    /**\n     * Deletes the value from the store, but does not dispose it.\n     */\n    deleteAndLeak(o) {\n        if (!o) {\n            return;\n        }\n        if (this._toDispose.has(o)) {\n            this._toDispose.delete(o);\n            setParentOfDisposable(o, null);\n        }\n    }\n}\nDisposableStore.DISABLE_DISPOSED_WARNING = false;\n/**\n * Abstract base class for a {@link IDisposable disposable} object.\n *\n * Subclasses can {@linkcode _register} disposables that will be automatically cleaned up when this object is disposed of.\n */\nexport class Disposable {\n    constructor() {\n        this._store = new DisposableStore();\n        trackDisposable(this);\n        setParentOfDisposable(this._store, this);\n    }\n    dispose() {\n        markAsDisposed(this);\n        this._store.dispose();\n    }\n    /**\n     * Adds `o` to the collection of disposables managed by this object.\n     */\n    _register(o) {\n        if (o === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        return this._store.add(o);\n    }\n}\n/**\n * A disposable that does nothing when it is disposed of.\n *\n * TODO: This should not be a static property.\n */\nDisposable.None = Object.freeze({ dispose() { } });\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable {\n    constructor() {\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    get value() {\n        return this._isDisposed ? undefined : this._value;\n    }\n    set value(value) {\n        var _a;\n        if (this._isDisposed || value === this._value) {\n            return;\n        }\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n        if (value) {\n            setParentOfDisposable(value, this);\n        }\n        this._value = value;\n    }\n    /**\n     * Resets the stored value and disposed of the previously stored value.\n     */\n    clear() {\n        this.value = undefined;\n    }\n    dispose() {\n        var _a;\n        this._isDisposed = true;\n        markAsDisposed(this);\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._value = undefined;\n    }\n}\nexport class RefCountedDisposable {\n    constructor(_disposable) {\n        this._disposable = _disposable;\n        this._counter = 1;\n    }\n    acquire() {\n        this._counter++;\n        return this;\n    }\n    release() {\n        if (--this._counter === 0) {\n            this._disposable.dispose();\n        }\n        return this;\n    }\n}\nexport class ImmortalReference {\n    constructor(object) {\n        this.object = object;\n    }\n    dispose() { }\n}\n/**\n * A map the manages the lifecycle of the values that it stores.\n */\nexport class DisposableMap {\n    constructor() {\n        this._store = new Map();\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    /**\n     * Disposes of all stored values and mark this object as disposed.\n     *\n     * Trying to use this object after it has been disposed of is an error.\n     */\n    dispose() {\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clearAndDisposeAll();\n    }\n    /**\n     * Disposes of all stored values and clear the map, but DO NOT mark this object as disposed.\n     */\n    clearAndDisposeAll() {\n        if (!this._store.size) {\n            return;\n        }\n        try {\n            dispose(this._store.values());\n        }\n        finally {\n            this._store.clear();\n        }\n    }\n    get(key) {\n        return this._store.get(key);\n    }\n    set(key, value, skipDisposeOnOverwrite = false) {\n        var _a;\n        if (this._isDisposed) {\n            console.warn(new Error('Trying to add a disposable to a DisposableMap that has already been disposed of. The added object will be leaked!').stack);\n        }\n        if (!skipDisposeOnOverwrite) {\n            (_a = this._store.get(key)) === null || _a === void 0 ? void 0 : _a.dispose();\n        }\n        this._store.set(key, value);\n    }\n    /**\n     * Delete the value stored for `key` from this map and also dispose of it.\n     */\n    deleteAndDispose(key) {\n        var _a;\n        (_a = this._store.get(key)) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._store.delete(key);\n    }\n    [Symbol.iterator]() {\n        return this._store[Symbol.iterator]();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass Node {\n    constructor(element) {\n        this.element = element;\n        this.next = Node.Undefined;\n        this.prev = Node.Undefined;\n    }\n}\nNode.Undefined = new Node(undefined);\nexport class LinkedList {\n    constructor() {\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    get size() {\n        return this._size;\n    }\n    isEmpty() {\n        return this._first === Node.Undefined;\n    }\n    clear() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            const next = node.next;\n            node.prev = Node.Undefined;\n            node.next = Node.Undefined;\n            node = next;\n        }\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    unshift(element) {\n        return this._insert(element, false);\n    }\n    push(element) {\n        return this._insert(element, true);\n    }\n    _insert(element, atTheEnd) {\n        const newNode = new Node(element);\n        if (this._first === Node.Undefined) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            // push\n            const oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            // unshift\n            const oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        this._size += 1;\n        let didRemove = false;\n        return () => {\n            if (!didRemove) {\n                didRemove = true;\n                this._remove(newNode);\n            }\n        };\n    }\n    shift() {\n        if (this._first === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._first.element;\n            this._remove(this._first);\n            return res;\n        }\n    }\n    pop() {\n        if (this._last === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._last.element;\n            this._remove(this._last);\n            return res;\n        }\n    }\n    _remove(node) {\n        if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n            // middle\n            const anchor = node.prev;\n            anchor.next = node.next;\n            node.next.prev = anchor;\n        }\n        else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n            // only node\n            this._first = Node.Undefined;\n            this._last = Node.Undefined;\n        }\n        else if (node.next === Node.Undefined) {\n            // last\n            this._last = this._last.prev;\n            this._last.next = Node.Undefined;\n        }\n        else if (node.prev === Node.Undefined) {\n            // first\n            this._first = this._first.next;\n            this._first.prev = Node.Undefined;\n        }\n        // done\n        this._size -= 1;\n    }\n    *[Symbol.iterator]() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            yield node.element;\n            node = node.next;\n        }\n    }\n}\n","import { onUnexpectedError } from './errors.js';\nimport { createSingleCallFunction } from './functional.js';\nimport { combinedDisposable, Disposable, DisposableStore, toDisposable } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nimport { StopWatch } from './stopwatch.js';\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever an emitter with listeners is disposed. That is a sign of code smell.\n// -----------------------------------------------------------------------------------------------------------------------\nconst _enableDisposeWithListenerWarning = false;\n// _enableDisposeWithListenerWarning = Boolean(\"TRUE\"); // causes a linter warning so that it cannot be pushed\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever a snapshotted event is used repeatedly without cleanup.\n// See https://github.com/microsoft/vscode/issues/142851\n// -----------------------------------------------------------------------------------------------------------------------\nconst _enableSnapshotPotentialLeakWarning = false;\nexport var Event;\n(function (Event) {\n    Event.None = () => Disposable.None;\n    function _addLeakageTraceLogic(options) {\n        if (_enableSnapshotPotentialLeakWarning) {\n            const { onDidAddListener: origListenerDidAdd } = options;\n            const stack = Stacktrace.create();\n            let count = 0;\n            options.onDidAddListener = () => {\n                if (++count === 2) {\n                    console.warn('snapshotted emitter LIKELY used public and SHOULD HAVE BEEN created with DisposableStore. snapshotted here');\n                    stack.print();\n                }\n                origListenerDidAdd === null || origListenerDidAdd === void 0 ? void 0 : origListenerDidAdd();\n            };\n        }\n    }\n    /**\n     * Given an event, returns another event which debounces calls and defers the listeners to a later task via a shared\n     * `setTimeout`. The event is converted into a signal (`Event<void>`) to avoid additional object creation as a\n     * result of merging events and to try prevent race conditions that could arise when using related deferred and\n     * non-deferred events.\n     *\n     * This is useful for deferring non-critical work (eg. general UI updates) to ensure it does not block critical work\n     * (eg. latency of keypress to text rendered).\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @param event The event source for the new event.\n     * @param disposable A disposable store to add the new EventEmitter to.\n     */\n    function defer(event, disposable) {\n        return debounce(event, () => void 0, 0, undefined, true, undefined, disposable);\n    }\n    Event.defer = defer;\n    /**\n     * Given an event, returns another event which only fires once.\n     *\n     * @param event The event source for the new event.\n     */\n    function once(event) {\n        return (listener, thisArgs = null, disposables) => {\n            // we need this, in case the event fires during the listener call\n            let didFire = false;\n            let result = undefined;\n            result = event(e => {\n                if (didFire) {\n                    return;\n                }\n                else if (result) {\n                    result.dispose();\n                }\n                else {\n                    didFire = true;\n                }\n                return listener.call(thisArgs, e);\n            }, null, disposables);\n            if (didFire) {\n                result.dispose();\n            }\n            return result;\n        };\n    }\n    Event.once = once;\n    /**\n     * Maps an event of one type into an event of another type using a mapping function, similar to how\n     * `Array.prototype.map` works.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @param event The event source for the new event.\n     * @param map The mapping function.\n     * @param disposable A disposable store to add the new EventEmitter to.\n     */\n    function map(event, map, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => listener.call(thisArgs, map(i)), null, disposables), disposable);\n    }\n    Event.map = map;\n    /**\n     * Wraps an event in another event that performs some function on the event object before firing.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @param event The event source for the new event.\n     * @param each The function to perform on the event object.\n     * @param disposable A disposable store to add the new EventEmitter to.\n     */\n    function forEach(event, each, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables), disposable);\n    }\n    Event.forEach = forEach;\n    function filter(event, filter, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables), disposable);\n    }\n    Event.filter = filter;\n    /**\n     * Given an event, returns the same event but typed as `Event<void>`.\n     */\n    function signal(event) {\n        return event;\n    }\n    Event.signal = signal;\n    function any(...events) {\n        return (listener, thisArgs = null, disposables) => {\n            const disposable = combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e))));\n            return addAndReturnDisposable(disposable, disposables);\n        };\n    }\n    Event.any = any;\n    /**\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     */\n    function reduce(event, merge, initial, disposable) {\n        let output = initial;\n        return map(event, e => {\n            output = merge(output, e);\n            return output;\n        }, disposable);\n    }\n    Event.reduce = reduce;\n    function snapshot(event, disposable) {\n        let listener;\n        const options = {\n            onWillAddFirstListener() {\n                listener = event(emitter.fire, emitter);\n            },\n            onDidRemoveLastListener() {\n                listener === null || listener === void 0 ? void 0 : listener.dispose();\n            }\n        };\n        if (!disposable) {\n            _addLeakageTraceLogic(options);\n        }\n        const emitter = new Emitter(options);\n        disposable === null || disposable === void 0 ? void 0 : disposable.add(emitter);\n        return emitter.event;\n    }\n    /**\n     * Adds the IDisposable to the store if it's set, and returns it. Useful to\n     * Event function implementation.\n     */\n    function addAndReturnDisposable(d, store) {\n        if (store instanceof Array) {\n            store.push(d);\n        }\n        else if (store) {\n            store.add(d);\n        }\n        return d;\n    }\n    function debounce(event, merge, delay = 100, leading = false, flushOnListenerRemove = false, leakWarningThreshold, disposable) {\n        let subscription;\n        let output = undefined;\n        let handle = undefined;\n        let numDebouncedCalls = 0;\n        let doFire;\n        const options = {\n            leakWarningThreshold,\n            onWillAddFirstListener() {\n                subscription = event(cur => {\n                    numDebouncedCalls++;\n                    output = merge(output, cur);\n                    if (leading && !handle) {\n                        emitter.fire(output);\n                        output = undefined;\n                    }\n                    doFire = () => {\n                        const _output = output;\n                        output = undefined;\n                        handle = undefined;\n                        if (!leading || numDebouncedCalls > 1) {\n                            emitter.fire(_output);\n                        }\n                        numDebouncedCalls = 0;\n                    };\n                    if (typeof delay === 'number') {\n                        clearTimeout(handle);\n                        handle = setTimeout(doFire, delay);\n                    }\n                    else {\n                        if (handle === undefined) {\n                            handle = 0;\n                            queueMicrotask(doFire);\n                        }\n                    }\n                });\n            },\n            onWillRemoveListener() {\n                if (flushOnListenerRemove && numDebouncedCalls > 0) {\n                    doFire === null || doFire === void 0 ? void 0 : doFire();\n                }\n            },\n            onDidRemoveLastListener() {\n                doFire = undefined;\n                subscription.dispose();\n            }\n        };\n        if (!disposable) {\n            _addLeakageTraceLogic(options);\n        }\n        const emitter = new Emitter(options);\n        disposable === null || disposable === void 0 ? void 0 : disposable.add(emitter);\n        return emitter.event;\n    }\n    Event.debounce = debounce;\n    /**\n     * Debounces an event, firing after some delay (default=0) with an array of all event original objects.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     */\n    function accumulate(event, delay = 0, disposable) {\n        return Event.debounce(event, (last, e) => {\n            if (!last) {\n                return [e];\n            }\n            last.push(e);\n            return last;\n        }, delay, undefined, true, undefined, disposable);\n    }\n    Event.accumulate = accumulate;\n    /**\n     * Filters an event such that some condition is _not_ met more than once in a row, effectively ensuring duplicate\n     * event objects from different sources do not fire the same event object.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @param event The event source for the new event.\n     * @param equals The equality condition.\n     * @param disposable A disposable store to add the new EventEmitter to.\n     *\n     * @example\n     * ```\n     * // Fire only one time when a single window is opened or focused\n     * Event.latch(Event.any(onDidOpenWindow, onDidFocusWindow))\n     * ```\n     */\n    function latch(event, equals = (a, b) => a === b, disposable) {\n        let firstCall = true;\n        let cache;\n        return filter(event, value => {\n            const shouldEmit = firstCall || !equals(value, cache);\n            firstCall = false;\n            cache = value;\n            return shouldEmit;\n        }, disposable);\n    }\n    Event.latch = latch;\n    /**\n     * Splits an event whose parameter is a union type into 2 separate events for each type in the union.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @example\n     * ```\n     * const event = new EventEmitter<number | undefined>().event;\n     * const [numberEvent, undefinedEvent] = Event.split(event, isUndefined);\n     * ```\n     *\n     * @param event The event source for the new event.\n     * @param isT A function that determines what event is of the first type.\n     * @param disposable A disposable store to add the new EventEmitter to.\n     */\n    function split(event, isT, disposable) {\n        return [\n            Event.filter(event, isT, disposable),\n            Event.filter(event, e => !isT(e), disposable),\n        ];\n    }\n    Event.split = split;\n    /**\n     * Buffers an event until it has a listener attached.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @param event The event source for the new event.\n     * @param flushAfterTimeout Determines whether to flush the buffer after a timeout immediately or after a\n     * `setTimeout` when the first event listener is added.\n     * @param _buffer Internal: A source event array used for tests.\n     *\n     * @example\n     * ```\n     * // Start accumulating events, when the first listener is attached, flush\n     * // the event after a timeout such that multiple listeners attached before\n     * // the timeout would receive the event\n     * this.onInstallExtension = Event.buffer(service.onInstallExtension, true);\n     * ```\n     */\n    function buffer(event, flushAfterTimeout = false, _buffer = [], disposable) {\n        let buffer = _buffer.slice();\n        let listener = event(e => {\n            if (buffer) {\n                buffer.push(e);\n            }\n            else {\n                emitter.fire(e);\n            }\n        });\n        if (disposable) {\n            disposable.add(listener);\n        }\n        const flush = () => {\n            buffer === null || buffer === void 0 ? void 0 : buffer.forEach(e => emitter.fire(e));\n            buffer = null;\n        };\n        const emitter = new Emitter({\n            onWillAddFirstListener() {\n                if (!listener) {\n                    listener = event(e => emitter.fire(e));\n                    if (disposable) {\n                        disposable.add(listener);\n                    }\n                }\n            },\n            onDidAddFirstListener() {\n                if (buffer) {\n                    if (flushAfterTimeout) {\n                        setTimeout(flush);\n                    }\n                    else {\n                        flush();\n                    }\n                }\n            },\n            onDidRemoveLastListener() {\n                if (listener) {\n                    listener.dispose();\n                }\n                listener = null;\n            }\n        });\n        if (disposable) {\n            disposable.add(emitter);\n        }\n        return emitter.event;\n    }\n    Event.buffer = buffer;\n    /**\n     * Wraps the event in an {@link IChainableEvent}, allowing a more functional programming style.\n     *\n     * @example\n     * ```\n     * // Normal\n     * const onEnterPressNormal = Event.filter(\n     *   Event.map(onKeyPress.event, e => new StandardKeyboardEvent(e)),\n     *   e.keyCode === KeyCode.Enter\n     * ).event;\n     *\n     * // Using chain\n     * const onEnterPressChain = Event.chain(onKeyPress.event, $ => $\n     *   .map(e => new StandardKeyboardEvent(e))\n     *   .filter(e => e.keyCode === KeyCode.Enter)\n     * );\n     * ```\n     */\n    function chain(event, sythensize) {\n        const fn = (listener, thisArgs, disposables) => {\n            const cs = sythensize(new ChainableSynthesis());\n            return event(function (value) {\n                const result = cs.evaluate(value);\n                if (result !== HaltChainable) {\n                    listener.call(thisArgs, result);\n                }\n            }, undefined, disposables);\n        };\n        return fn;\n    }\n    Event.chain = chain;\n    const HaltChainable = Symbol('HaltChainable');\n    class ChainableSynthesis {\n        constructor() {\n            this.steps = [];\n        }\n        map(fn) {\n            this.steps.push(fn);\n            return this;\n        }\n        forEach(fn) {\n            this.steps.push(v => {\n                fn(v);\n                return v;\n            });\n            return this;\n        }\n        filter(fn) {\n            this.steps.push(v => fn(v) ? v : HaltChainable);\n            return this;\n        }\n        reduce(merge, initial) {\n            let last = initial;\n            this.steps.push(v => {\n                last = merge(last, v);\n                return last;\n            });\n            return this;\n        }\n        latch(equals = (a, b) => a === b) {\n            let firstCall = true;\n            let cache;\n            this.steps.push(value => {\n                const shouldEmit = firstCall || !equals(value, cache);\n                firstCall = false;\n                cache = value;\n                return shouldEmit ? value : HaltChainable;\n            });\n            return this;\n        }\n        evaluate(value) {\n            for (const step of this.steps) {\n                value = step(value);\n                if (value === HaltChainable) {\n                    break;\n                }\n            }\n            return value;\n        }\n    }\n    /**\n     * Creates an {@link Event} from a node event emitter.\n     */\n    function fromNodeEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(map(...args));\n        const onFirstListenerAdd = () => emitter.on(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n        const result = new Emitter({ onWillAddFirstListener: onFirstListenerAdd, onDidRemoveLastListener: onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromNodeEventEmitter = fromNodeEventEmitter;\n    /**\n     * Creates an {@link Event} from a DOM event emitter.\n     */\n    function fromDOMEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(map(...args));\n        const onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n        const result = new Emitter({ onWillAddFirstListener: onFirstListenerAdd, onDidRemoveLastListener: onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromDOMEventEmitter = fromDOMEventEmitter;\n    /**\n     * Creates a promise out of an event, using the {@link Event.once} helper.\n     */\n    function toPromise(event) {\n        return new Promise(resolve => once(event)(resolve));\n    }\n    Event.toPromise = toPromise;\n    /**\n     * Creates an event out of a promise that fires once when the promise is\n     * resolved with the result of the promise or `undefined`.\n     */\n    function fromPromise(promise) {\n        const result = new Emitter();\n        promise.then(res => {\n            result.fire(res);\n        }, () => {\n            result.fire(undefined);\n        }).finally(() => {\n            result.dispose();\n        });\n        return result.event;\n    }\n    Event.fromPromise = fromPromise;\n    /**\n     * Adds a listener to an event and calls the listener immediately with undefined as the event object.\n     *\n     * @example\n     * ```\n     * // Initialize the UI and update it when dataChangeEvent fires\n     * runAndSubscribe(dataChangeEvent, () => this._updateUI());\n     * ```\n     */\n    function runAndSubscribe(event, handler) {\n        handler(undefined);\n        return event(e => handler(e));\n    }\n    Event.runAndSubscribe = runAndSubscribe;\n    /**\n     * Adds a listener to an event and calls the listener immediately with undefined as the event object. A new\n     * {@link DisposableStore} is passed to the listener which is disposed when the returned disposable is disposed.\n     */\n    function runAndSubscribeWithStore(event, handler) {\n        let store = null;\n        function run(e) {\n            store === null || store === void 0 ? void 0 : store.dispose();\n            store = new DisposableStore();\n            handler(e, store);\n        }\n        run(undefined);\n        const disposable = event(e => run(e));\n        return toDisposable(() => {\n            disposable.dispose();\n            store === null || store === void 0 ? void 0 : store.dispose();\n        });\n    }\n    Event.runAndSubscribeWithStore = runAndSubscribeWithStore;\n    class EmitterObserver {\n        constructor(_observable, store) {\n            this._observable = _observable;\n            this._counter = 0;\n            this._hasChanged = false;\n            const options = {\n                onWillAddFirstListener: () => {\n                    _observable.addObserver(this);\n                },\n                onDidRemoveLastListener: () => {\n                    _observable.removeObserver(this);\n                }\n            };\n            if (!store) {\n                _addLeakageTraceLogic(options);\n            }\n            this.emitter = new Emitter(options);\n            if (store) {\n                store.add(this.emitter);\n            }\n        }\n        beginUpdate(_observable) {\n            // assert(_observable === this.obs);\n            this._counter++;\n        }\n        handlePossibleChange(_observable) {\n            // assert(_observable === this.obs);\n        }\n        handleChange(_observable, _change) {\n            // assert(_observable === this.obs);\n            this._hasChanged = true;\n        }\n        endUpdate(_observable) {\n            // assert(_observable === this.obs);\n            this._counter--;\n            if (this._counter === 0) {\n                this._observable.reportChanges();\n                if (this._hasChanged) {\n                    this._hasChanged = false;\n                    this.emitter.fire(this._observable.get());\n                }\n            }\n        }\n    }\n    /**\n     * Creates an event emitter that is fired when the observable changes.\n     * Each listeners subscribes to the emitter.\n     */\n    function fromObservable(obs, store) {\n        const observer = new EmitterObserver(obs, store);\n        return observer.emitter.event;\n    }\n    Event.fromObservable = fromObservable;\n    /**\n     * Each listener is attached to the observable directly.\n     */\n    function fromObservableLight(observable) {\n        return (listener) => {\n            let count = 0;\n            let didChange = false;\n            const observer = {\n                beginUpdate() {\n                    count++;\n                },\n                endUpdate() {\n                    count--;\n                    if (count === 0) {\n                        observable.reportChanges();\n                        if (didChange) {\n                            didChange = false;\n                            listener();\n                        }\n                    }\n                },\n                handlePossibleChange() {\n                    // noop\n                },\n                handleChange() {\n                    didChange = true;\n                }\n            };\n            observable.addObserver(observer);\n            observable.reportChanges();\n            return {\n                dispose() {\n                    observable.removeObserver(observer);\n                }\n            };\n        };\n    }\n    Event.fromObservableLight = fromObservableLight;\n})(Event || (Event = {}));\nexport class EventProfiling {\n    constructor(name) {\n        this.listenerCount = 0;\n        this.invocationCount = 0;\n        this.elapsedOverall = 0;\n        this.durations = [];\n        this.name = `${name}_${EventProfiling._idPool++}`;\n        EventProfiling.all.add(this);\n    }\n    start(listenerCount) {\n        this._stopWatch = new StopWatch();\n        this.listenerCount = listenerCount;\n    }\n    stop() {\n        if (this._stopWatch) {\n            const elapsed = this._stopWatch.elapsed();\n            this.durations.push(elapsed);\n            this.elapsedOverall += elapsed;\n            this.invocationCount += 1;\n            this._stopWatch = undefined;\n        }\n    }\n}\nEventProfiling.all = new Set();\nEventProfiling._idPool = 0;\nlet _globalLeakWarningThreshold = -1;\nclass LeakageMonitor {\n    constructor(threshold, name = Math.random().toString(18).slice(2, 5)) {\n        this.threshold = threshold;\n        this.name = name;\n        this._warnCountdown = 0;\n    }\n    dispose() {\n        var _a;\n        (_a = this._stacks) === null || _a === void 0 ? void 0 : _a.clear();\n    }\n    check(stack, listenerCount) {\n        const threshold = this.threshold;\n        if (threshold <= 0 || listenerCount < threshold) {\n            return undefined;\n        }\n        if (!this._stacks) {\n            this._stacks = new Map();\n        }\n        const count = (this._stacks.get(stack.value) || 0);\n        this._stacks.set(stack.value, count + 1);\n        this._warnCountdown -= 1;\n        if (this._warnCountdown <= 0) {\n            // only warn on first exceed and then every time the limit\n            // is exceeded by 50% again\n            this._warnCountdown = threshold * 0.5;\n            // find most frequent listener and print warning\n            let topStack;\n            let topCount = 0;\n            for (const [stack, count] of this._stacks) {\n                if (!topStack || topCount < count) {\n                    topStack = stack;\n                    topCount = count;\n                }\n            }\n            console.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n            console.warn(topStack);\n        }\n        return () => {\n            const count = (this._stacks.get(stack.value) || 0);\n            this._stacks.set(stack.value, count - 1);\n        };\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn(this.value.split('\\n').slice(2).join('\\n'));\n    }\n}\nclass UniqueContainer {\n    constructor(value) {\n        this.value = value;\n    }\n}\nconst compactionThreshold = 2;\nconst forEachListener = (listeners, fn) => {\n    if (listeners instanceof UniqueContainer) {\n        fn(listeners);\n    }\n    else {\n        for (let i = 0; i < listeners.length; i++) {\n            const l = listeners[i];\n            if (l) {\n                fn(l);\n            }\n        }\n    }\n};\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n    class Document {\n\n        private readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n        public onDidChange = this._onDidChange.event;\n\n        // getter-style\n        // get onDidChange(): Event<(value:string)=>any> {\n        // \treturn this._onDidChange.event;\n        // }\n\n        private _doIt() {\n            //...\n            this._onDidChange.fire(value);\n        }\n    }\n */\nexport class Emitter {\n    constructor(options) {\n        var _a, _b, _c, _d, _e;\n        this._size = 0;\n        this._options = options;\n        this._leakageMon = _globalLeakWarningThreshold > 0 || ((_a = this._options) === null || _a === void 0 ? void 0 : _a.leakWarningThreshold) ? new LeakageMonitor((_c = (_b = this._options) === null || _b === void 0 ? void 0 : _b.leakWarningThreshold) !== null && _c !== void 0 ? _c : _globalLeakWarningThreshold) : undefined;\n        this._perfMon = ((_d = this._options) === null || _d === void 0 ? void 0 : _d._profName) ? new EventProfiling(this._options._profName) : undefined;\n        this._deliveryQueue = (_e = this._options) === null || _e === void 0 ? void 0 : _e.deliveryQueue;\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        if (!this._disposed) {\n            this._disposed = true;\n            // It is bad to have listeners at the time of disposing an emitter, it is worst to have listeners keep the emitter\n            // alive via the reference that's embedded in their disposables. Therefore we loop over all remaining listeners and\n            // unset their subscriptions/disposables. Looping and blaming remaining listeners is done on next tick because the\n            // the following programming pattern is very popular:\n            //\n            // const someModel = this._disposables.add(new ModelObject()); // (1) create and register model\n            // this._disposables.add(someModel.onDidChange(() => { ... }); // (2) subscribe and register model-event listener\n            // ...later...\n            // this._disposables.dispose(); disposes (1) then (2): don't warn after (1) but after the \"overall dispose\" is done\n            if (((_a = this._deliveryQueue) === null || _a === void 0 ? void 0 : _a.current) === this) {\n                this._deliveryQueue.reset();\n            }\n            if (this._listeners) {\n                if (_enableDisposeWithListenerWarning) {\n                    const listeners = this._listeners;\n                    queueMicrotask(() => {\n                        forEachListener(listeners, l => { var _a; return (_a = l.stack) === null || _a === void 0 ? void 0 : _a.print(); });\n                    });\n                }\n                this._listeners = undefined;\n                this._size = 0;\n            }\n            (_c = (_b = this._options) === null || _b === void 0 ? void 0 : _b.onDidRemoveLastListener) === null || _c === void 0 ? void 0 : _c.call(_b);\n            (_d = this._leakageMon) === null || _d === void 0 ? void 0 : _d.dispose();\n        }\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        var _a;\n        (_a = this._event) !== null && _a !== void 0 ? _a : (this._event = (callback, thisArgs, disposables) => {\n            var _a, _b, _c, _d, _e;\n            if (this._leakageMon && this._size > this._leakageMon.threshold * 3) {\n                console.warn(`[${this._leakageMon.name}] REFUSES to accept new listeners because it exceeded its threshold by far`);\n                return Disposable.None;\n            }\n            if (this._disposed) {\n                // todo: should we warn if a listener is added to a disposed emitter? This happens often\n                return Disposable.None;\n            }\n            if (thisArgs) {\n                callback = callback.bind(thisArgs);\n            }\n            const contained = new UniqueContainer(callback);\n            let removeMonitor;\n            let stack;\n            if (this._leakageMon && this._size >= Math.ceil(this._leakageMon.threshold * 0.2)) {\n                // check and record this emitter for potential leakage\n                contained.stack = Stacktrace.create();\n                removeMonitor = this._leakageMon.check(contained.stack, this._size + 1);\n            }\n            if (_enableDisposeWithListenerWarning) {\n                contained.stack = stack !== null && stack !== void 0 ? stack : Stacktrace.create();\n            }\n            if (!this._listeners) {\n                (_b = (_a = this._options) === null || _a === void 0 ? void 0 : _a.onWillAddFirstListener) === null || _b === void 0 ? void 0 : _b.call(_a, this);\n                this._listeners = contained;\n                (_d = (_c = this._options) === null || _c === void 0 ? void 0 : _c.onDidAddFirstListener) === null || _d === void 0 ? void 0 : _d.call(_c, this);\n            }\n            else if (this._listeners instanceof UniqueContainer) {\n                (_e = this._deliveryQueue) !== null && _e !== void 0 ? _e : (this._deliveryQueue = new EventDeliveryQueuePrivate());\n                this._listeners = [this._listeners, contained];\n            }\n            else {\n                this._listeners.push(contained);\n            }\n            this._size++;\n            const result = toDisposable(() => { removeMonitor === null || removeMonitor === void 0 ? void 0 : removeMonitor(); this._removeListener(contained); });\n            if (disposables instanceof DisposableStore) {\n                disposables.add(result);\n            }\n            else if (Array.isArray(disposables)) {\n                disposables.push(result);\n            }\n            return result;\n        });\n        return this._event;\n    }\n    _removeListener(listener) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this._options) === null || _a === void 0 ? void 0 : _a.onWillRemoveListener) === null || _b === void 0 ? void 0 : _b.call(_a, this);\n        if (!this._listeners) {\n            return; // expected if a listener gets disposed\n        }\n        if (this._size === 1) {\n            this._listeners = undefined;\n            (_d = (_c = this._options) === null || _c === void 0 ? void 0 : _c.onDidRemoveLastListener) === null || _d === void 0 ? void 0 : _d.call(_c, this);\n            this._size = 0;\n            return;\n        }\n        // size > 1 which requires that listeners be a list:\n        const listeners = this._listeners;\n        const index = listeners.indexOf(listener);\n        if (index === -1) {\n            console.log('disposed?', this._disposed);\n            console.log('size?', this._size);\n            console.log('arr?', JSON.stringify(this._listeners));\n            throw new Error('Attempted to dispose unknown listener');\n        }\n        this._size--;\n        listeners[index] = undefined;\n        const adjustDeliveryQueue = this._deliveryQueue.current === this;\n        if (this._size * compactionThreshold <= listeners.length) {\n            let n = 0;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listeners[i]) {\n                    listeners[n++] = listeners[i];\n                }\n                else if (adjustDeliveryQueue) {\n                    this._deliveryQueue.end--;\n                    if (n < this._deliveryQueue.i) {\n                        this._deliveryQueue.i--;\n                    }\n                }\n            }\n            listeners.length = n;\n        }\n    }\n    _deliver(listener, value) {\n        var _a;\n        if (!listener) {\n            return;\n        }\n        const errorHandler = ((_a = this._options) === null || _a === void 0 ? void 0 : _a.onListenerError) || onUnexpectedError;\n        if (!errorHandler) {\n            listener.value(value);\n            return;\n        }\n        try {\n            listener.value(value);\n        }\n        catch (e) {\n            errorHandler(e);\n        }\n    }\n    /** Delivers items in the queue. Assumes the queue is ready to go. */\n    _deliverQueue(dq) {\n        const listeners = dq.current._listeners;\n        while (dq.i < dq.end) {\n            // important: dq.i is incremented before calling deliver() because it might reenter deliverQueue()\n            this._deliver(listeners[dq.i++], dq.value);\n        }\n        dq.reset();\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        var _a, _b, _c, _d;\n        if ((_a = this._deliveryQueue) === null || _a === void 0 ? void 0 : _a.current) {\n            this._deliverQueue(this._deliveryQueue);\n            (_b = this._perfMon) === null || _b === void 0 ? void 0 : _b.stop(); // last fire() will have starting perfmon, stop it before starting the next dispatch\n        }\n        (_c = this._perfMon) === null || _c === void 0 ? void 0 : _c.start(this._size);\n        if (!this._listeners) {\n            // no-op\n        }\n        else if (this._listeners instanceof UniqueContainer) {\n            this._deliver(this._listeners, event);\n        }\n        else {\n            const dq = this._deliveryQueue;\n            dq.enqueue(this, event, this._listeners.length);\n            this._deliverQueue(dq);\n        }\n        (_d = this._perfMon) === null || _d === void 0 ? void 0 : _d.stop();\n    }\n    hasListeners() {\n        return this._size > 0;\n    }\n}\nexport const createEventDeliveryQueue = () => new EventDeliveryQueuePrivate();\nclass EventDeliveryQueuePrivate {\n    constructor() {\n        /**\n         * Index in current's listener list.\n         */\n        this.i = -1;\n        /**\n         * The last index in the listener's list to deliver.\n         */\n        this.end = 0;\n    }\n    enqueue(emitter, value, end) {\n        this.i = 0;\n        this.end = end;\n        this.current = emitter;\n        this.value = value;\n    }\n    reset() {\n        this.i = this.end; // force any current emission loop to stop, mainly for during dispose\n        this.current = undefined;\n        this.value = undefined;\n    }\n}\nexport class PauseableEmitter extends Emitter {\n    constructor(options) {\n        super(options);\n        this._isPaused = 0;\n        this._eventQueue = new LinkedList();\n        this._mergeFn = options === null || options === void 0 ? void 0 : options.merge;\n    }\n    pause() {\n        this._isPaused++;\n    }\n    resume() {\n        if (this._isPaused !== 0 && --this._isPaused === 0) {\n            if (this._mergeFn) {\n                // use the merge function to create a single composite\n                // event. make a copy in case firing pauses this emitter\n                if (this._eventQueue.size > 0) {\n                    const events = Array.from(this._eventQueue);\n                    this._eventQueue.clear();\n                    super.fire(this._mergeFn(events));\n                }\n            }\n            else {\n                // no merging, fire each event individually and test\n                // that this emitter isn't paused halfway through\n                while (!this._isPaused && this._eventQueue.size !== 0) {\n                    super.fire(this._eventQueue.shift());\n                }\n            }\n        }\n    }\n    fire(event) {\n        if (this._size) {\n            if (this._isPaused !== 0) {\n                this._eventQueue.push(event);\n            }\n            else {\n                super.fire(event);\n            }\n        }\n    }\n}\nexport class DebounceEmitter extends PauseableEmitter {\n    constructor(options) {\n        var _a;\n        super(options);\n        this._delay = (_a = options.delay) !== null && _a !== void 0 ? _a : 100;\n    }\n    fire(event) {\n        if (!this._handle) {\n            this.pause();\n            this._handle = setTimeout(() => {\n                this._handle = undefined;\n                this.resume();\n            }, this._delay);\n        }\n        super.fire(event);\n    }\n}\n/**\n * An emitter which queue all events and then process them at the\n * end of the event loop.\n */\nexport class MicrotaskEmitter extends Emitter {\n    constructor(options) {\n        super(options);\n        this._queuedEvents = [];\n        this._mergeFn = options === null || options === void 0 ? void 0 : options.merge;\n    }\n    fire(event) {\n        if (!this.hasListeners()) {\n            return;\n        }\n        this._queuedEvents.push(event);\n        if (this._queuedEvents.length === 1) {\n            queueMicrotask(() => {\n                if (this._mergeFn) {\n                    super.fire(this._mergeFn(this._queuedEvents));\n                }\n                else {\n                    this._queuedEvents.forEach(e => super.fire(e));\n                }\n                this._queuedEvents = [];\n            });\n        }\n    }\n}\n/**\n * An event emitter that multiplexes many events into a single event.\n *\n * @example Listen to the `onData` event of all `Thing`s, dynamically adding and removing `Thing`s\n * to the multiplexer as needed.\n *\n * ```typescript\n * const anythingDataMultiplexer = new EventMultiplexer<{ data: string }>();\n *\n * const thingListeners = DisposableMap<Thing, IDisposable>();\n *\n * thingService.onDidAddThing(thing => {\n *   thingListeners.set(thing, anythingDataMultiplexer.add(thing.onData);\n * });\n * thingService.onDidRemoveThing(thing => {\n *   thingListeners.deleteAndDispose(thing);\n * });\n *\n * anythingDataMultiplexer.event(e => {\n *   console.log('Something fired data ' + e.data)\n * });\n * ```\n */\nexport class EventMultiplexer {\n    constructor() {\n        this.hasListeners = false;\n        this.events = [];\n        this.emitter = new Emitter({\n            onWillAddFirstListener: () => this.onFirstListenerAdd(),\n            onDidRemoveLastListener: () => this.onLastListenerRemove()\n        });\n    }\n    get event() {\n        return this.emitter.event;\n    }\n    add(event) {\n        const e = { event: event, listener: null };\n        this.events.push(e);\n        if (this.hasListeners) {\n            this.hook(e);\n        }\n        const dispose = () => {\n            if (this.hasListeners) {\n                this.unhook(e);\n            }\n            const idx = this.events.indexOf(e);\n            this.events.splice(idx, 1);\n        };\n        return toDisposable(createSingleCallFunction(dispose));\n    }\n    onFirstListenerAdd() {\n        this.hasListeners = true;\n        this.events.forEach(e => this.hook(e));\n    }\n    onLastListenerRemove() {\n        this.hasListeners = false;\n        this.events.forEach(e => this.unhook(e));\n    }\n    hook(e) {\n        e.listener = e.event(r => this.emitter.fire(r));\n    }\n    unhook(e) {\n        if (e.listener) {\n            e.listener.dispose();\n        }\n        e.listener = null;\n    }\n    dispose() {\n        this.emitter.dispose();\n    }\n}\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n    constructor() {\n        this.buffers = [];\n    }\n    wrapEvent(event) {\n        return (listener, thisArgs, disposables) => {\n            return event(i => {\n                const buffer = this.buffers[this.buffers.length - 1];\n                if (buffer) {\n                    buffer.push(() => listener.call(thisArgs, i));\n                }\n                else {\n                    listener.call(thisArgs, i);\n                }\n            }, undefined, disposables);\n        };\n    }\n    bufferEvents(fn) {\n        const buffer = [];\n        this.buffers.push(buffer);\n        const r = fn();\n        this.buffers.pop();\n        buffer.forEach(flush => flush());\n        return r;\n    }\n}\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay {\n    constructor() {\n        this.listening = false;\n        this.inputEvent = Event.None;\n        this.inputEventListener = Disposable.None;\n        this.emitter = new Emitter({\n            onDidAddFirstListener: () => {\n                this.listening = true;\n                this.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n            },\n            onDidRemoveLastListener: () => {\n                this.listening = false;\n                this.inputEventListener.dispose();\n            }\n        });\n        this.event = this.emitter.event;\n    }\n    set input(event) {\n        this.inputEvent = event;\n        if (this.listening) {\n            this.inputEventListener.dispose();\n            this.inputEventListener = event(this.emitter.fire, this.emitter);\n        }\n    }\n    dispose() {\n        this.inputEventListener.dispose();\n        this.emitter.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nconst hasPerformanceNow = (globalThis.performance && typeof globalThis.performance.now === 'function');\nexport class StopWatch {\n    static create(highResolution) {\n        return new StopWatch(highResolution);\n    }\n    constructor(highResolution) {\n        this._now = hasPerformanceNow && highResolution === false ? Date.now : globalThis.performance.now.bind(globalThis.performance);\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    stop() {\n        this._stopTime = this._now();\n    }\n    elapsed() {\n        if (this._stopTime !== -1) {\n            return this._stopTime - this._startTime;\n        }\n        return this._now() - this._startTime;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isTypedArray, isObject, isUndefinedOrNull } from './types.js';\nexport function deepClone(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    if (obj instanceof RegExp) {\n        return obj;\n    }\n    const result = Array.isArray(obj) ? [] : {};\n    Object.entries(obj).forEach(([key, value]) => {\n        result[key] = value && typeof value === 'object' ? deepClone(value) : value;\n    });\n    return result;\n}\nexport function deepFreeze(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    const stack = [obj];\n    while (stack.length > 0) {\n        const obj = stack.shift();\n        Object.freeze(obj);\n        for (const key in obj) {\n            if (_hasOwnProperty.call(obj, key)) {\n                const prop = obj[key];\n                if (typeof prop === 'object' && !Object.isFrozen(prop) && !isTypedArray(prop)) {\n                    stack.push(prop);\n                }\n            }\n        }\n    }\n    return obj;\n}\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function cloneAndChange(obj, changer) {\n    return _cloneAndChange(obj, changer, new Set());\n}\nfunction _cloneAndChange(obj, changer, seen) {\n    if (isUndefinedOrNull(obj)) {\n        return obj;\n    }\n    const changed = changer(obj);\n    if (typeof changed !== 'undefined') {\n        return changed;\n    }\n    if (Array.isArray(obj)) {\n        const r1 = [];\n        for (const e of obj) {\n            r1.push(_cloneAndChange(e, changer, seen));\n        }\n        return r1;\n    }\n    if (isObject(obj)) {\n        if (seen.has(obj)) {\n            throw new Error('Cannot clone recursive data-structure');\n        }\n        seen.add(obj);\n        const r2 = {};\n        for (const i2 in obj) {\n            if (_hasOwnProperty.call(obj, i2)) {\n                r2[i2] = _cloneAndChange(obj[i2], changer, seen);\n            }\n        }\n        seen.delete(obj);\n        return r2;\n    }\n    return obj;\n}\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination, source, overwrite = true) {\n    if (!isObject(destination)) {\n        return source;\n    }\n    if (isObject(source)) {\n        Object.keys(source).forEach(key => {\n            if (key in destination) {\n                if (overwrite) {\n                    if (isObject(destination[key]) && isObject(source[key])) {\n                        mixin(destination[key], source[key], overwrite);\n                    }\n                    else {\n                        destination[key] = source[key];\n                    }\n                }\n            }\n            else {\n                destination[key] = source[key];\n            }\n        });\n    }\n    return destination;\n}\nexport function equals(one, other) {\n    if (one === other) {\n        return true;\n    }\n    if (one === null || one === undefined || other === null || other === undefined) {\n        return false;\n    }\n    if (typeof one !== typeof other) {\n        return false;\n    }\n    if (typeof one !== 'object') {\n        return false;\n    }\n    if ((Array.isArray(one)) !== (Array.isArray(other))) {\n        return false;\n    }\n    let i;\n    let key;\n    if (Array.isArray(one)) {\n        if (one.length !== other.length) {\n            return false;\n        }\n        for (i = 0; i < one.length; i++) {\n            if (!equals(one[i], other[i])) {\n                return false;\n            }\n        }\n    }\n    else {\n        const oneKeys = [];\n        for (key in one) {\n            oneKeys.push(key);\n        }\n        oneKeys.sort();\n        const otherKeys = [];\n        for (key in other) {\n            otherKeys.push(key);\n        }\n        otherKeys.sort();\n        if (!equals(oneKeys, otherKeys)) {\n            return false;\n        }\n        for (i = 0; i < oneKeys.length; i++) {\n            if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexport function getAllPropertyNames(obj) {\n    let res = [];\n    while (Object.prototype !== obj) {\n        res = res.concat(Object.getOwnPropertyNames(obj));\n        obj = Object.getPrototypeOf(obj);\n    }\n    return res;\n}\nexport function getAllMethodNames(obj) {\n    const methods = [];\n    for (const prop of getAllPropertyNames(obj)) {\n        if (typeof obj[prop] === 'function') {\n            methods.push(prop);\n        }\n    }\n    return methods;\n}\nexport function createProxyObject(methodNames, invoke) {\n    const createProxyMethod = (method) => {\n        return function () {\n            const args = Array.prototype.slice.call(arguments, 0);\n            return invoke(method, args);\n        };\n    };\n    const result = {};\n    for (const methodName of methodNames) {\n        result[methodName] = createProxyMethod(methodName);\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nlet isPseudo = (typeof document !== 'undefined' && document.location && document.location.hash.indexOf('pseudo=true') >= 0);\nconst DEFAULT_TAG = 'i-default';\nfunction _format(message, args) {\n    let result;\n    if (args.length === 0) {\n        result = message;\n    }\n    else {\n        result = message.replace(/\\{(\\d+)\\}/g, (match, rest) => {\n            const index = rest[0];\n            const arg = args[index];\n            let result = match;\n            if (typeof arg === 'string') {\n                result = arg;\n            }\n            else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\n                result = String(arg);\n            }\n            return result;\n        });\n    }\n    if (isPseudo) {\n        // FF3B and FF3D is the Unicode zenkaku representation for [ and ]\n        result = '\\uFF3B' + result.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n    }\n    return result;\n}\nfunction findLanguageForModule(config, name) {\n    let result = config[name];\n    if (result) {\n        return result;\n    }\n    result = config['*'];\n    if (result) {\n        return result;\n    }\n    return null;\n}\nfunction endWithSlash(path) {\n    if (path.charAt(path.length - 1) === '/') {\n        return path;\n    }\n    return path + '/';\n}\nfunction getMessagesFromTranslationsService(translationServiceUrl, language, name) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const url = endWithSlash(translationServiceUrl) + endWithSlash(language) + 'vscode/' + endWithSlash(name);\n        const res = yield fetch(url);\n        if (res.ok) {\n            const messages = yield res.json();\n            return messages;\n        }\n        throw new Error(`${res.status} - ${res.statusText}`);\n    });\n}\nfunction createScopedLocalize(scope) {\n    return function (idx, defaultValue) {\n        const restArgs = Array.prototype.slice.call(arguments, 2);\n        return _format(scope[idx], restArgs);\n    };\n}\n/**\n * @skipMangle\n */\nexport function localize(data, message, ...args) {\n    return _format(message, args);\n}\n/**\n * @skipMangle\n */\nexport function getConfiguredDefaultLocale(_) {\n    // This returns undefined because this implementation isn't used and is overwritten by the loader\n    // when loaded.\n    return undefined;\n}\n/**\n * @skipMangle\n */\nexport function setPseudoTranslation(value) {\n    isPseudo = value;\n}\n/**\n * Invoked in a built product at run-time\n * @skipMangle\n */\nexport function create(key, data) {\n    var _a;\n    return {\n        localize: createScopedLocalize(data[key]),\n        getConfiguredDefaultLocale: (_a = data.getConfiguredDefaultLocale) !== null && _a !== void 0 ? _a : ((_) => undefined)\n    };\n}\n/**\n * Invoked by the loader at run-time\n * @skipMangle\n */\nexport function load(name, req, load, config) {\n    var _a;\n    const pluginConfig = (_a = config['vs/nls']) !== null && _a !== void 0 ? _a : {};\n    if (!name || name.length === 0) {\n        // TODO: We need to give back the mangled names here\n        return load({\n            localize: localize,\n            getConfiguredDefaultLocale: () => { var _a; return (_a = pluginConfig.availableLanguages) === null || _a === void 0 ? void 0 : _a['*']; }\n        });\n    }\n    const language = pluginConfig.availableLanguages ? findLanguageForModule(pluginConfig.availableLanguages, name) : null;\n    const useDefaultLanguage = language === null || language === DEFAULT_TAG;\n    let suffix = '.nls';\n    if (!useDefaultLanguage) {\n        suffix = suffix + '.' + language;\n    }\n    const messagesLoaded = (messages) => {\n        if (Array.isArray(messages)) {\n            messages.localize = createScopedLocalize(messages);\n        }\n        else {\n            messages.localize = createScopedLocalize(messages[name]);\n        }\n        messages.getConfiguredDefaultLocale = () => { var _a; return (_a = pluginConfig.availableLanguages) === null || _a === void 0 ? void 0 : _a['*']; };\n        load(messages);\n    };\n    if (typeof pluginConfig.loadBundle === 'function') {\n        pluginConfig.loadBundle(name, language, (err, messages) => {\n            // We have an error. Load the English default strings to not fail\n            if (err) {\n                req([name + '.nls'], messagesLoaded);\n            }\n            else {\n                messagesLoaded(messages);\n            }\n        });\n    }\n    else if (pluginConfig.translationServiceUrl && !useDefaultLanguage) {\n        (() => __awaiter(this, void 0, void 0, function* () {\n            var _b;\n            try {\n                const messages = yield getMessagesFromTranslationsService(pluginConfig.translationServiceUrl, language, name);\n                return messagesLoaded(messages);\n            }\n            catch (err) {\n                // Language is already as generic as it gets, so require default messages\n                if (!language.includes('-')) {\n                    console.error(err);\n                    return req([name + '.nls'], messagesLoaded);\n                }\n                try {\n                    // Since there is a dash, the language configured is a specific sub-language of the same generic language.\n                    // Since we were unable to load the specific language, try to load the generic language. Ex. we failed to find a\n                    // Swiss German (de-CH), so try to load the generic German (de) messages instead.\n                    const genericLanguage = language.split('-')[0];\n                    const messages = yield getMessagesFromTranslationsService(pluginConfig.translationServiceUrl, genericLanguage, name);\n                    // We got some messages, so we configure the configuration to use the generic language for this session.\n                    (_b = pluginConfig.availableLanguages) !== null && _b !== void 0 ? _b : (pluginConfig.availableLanguages = {});\n                    pluginConfig.availableLanguages['*'] = genericLanguage;\n                    return messagesLoaded(messages);\n                }\n                catch (err) {\n                    console.error(err);\n                    return req([name + '.nls'], messagesLoaded);\n                }\n            }\n        }))();\n    }\n    else {\n        req([name + suffix], messagesLoaded, (err) => {\n            if (suffix === '.nls') {\n                console.error('Failed trying to load default language strings', err);\n                return;\n            }\n            console.error(`Failed to load message bundle for language ${language}. Falling back to the default language:`, err);\n            req([name + '.nls'], messagesLoaded);\n        });\n    }\n}\n","var _a;\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nexport const LANGUAGE_DEFAULT = 'en';\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isElectron = false;\nlet _isIOS = false;\nlet _isCI = false;\nlet _isMobile = false;\nlet _locale = undefined;\nlet _language = LANGUAGE_DEFAULT;\nlet _platformLocale = LANGUAGE_DEFAULT;\nlet _translationsConfigFile = undefined;\nlet _userAgent = undefined;\n/**\n * @deprecated use `globalThis` instead\n */\nexport const globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\nlet nodeProcess = undefined;\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n    // Native environment (sandboxed)\n    nodeProcess = globals.vscode.process;\n}\nelse if (typeof process !== 'undefined') {\n    // Native environment (non-sandboxed)\n    nodeProcess = process;\n}\nconst isElectronProcess = typeof ((_a = nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.versions) === null || _a === void 0 ? void 0 : _a.electron) === 'string';\nconst isElectronRenderer = isElectronProcess && (nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.type) === 'renderer';\n// Web environment\nif (typeof navigator === 'object' && !isElectronRenderer) {\n    _userAgent = navigator.userAgent;\n    _isWindows = _userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n    _isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n    _isLinux = _userAgent.indexOf('Linux') >= 0;\n    _isMobile = (_userAgent === null || _userAgent === void 0 ? void 0 : _userAgent.indexOf('Mobi')) >= 0;\n    _isWeb = true;\n    const configuredLocale = nls.getConfiguredDefaultLocale(\n    // This call _must_ be done in the file that calls `nls.getConfiguredDefaultLocale`\n    // to ensure that the NLS AMD Loader plugin has been loaded and configured.\n    // This is because the loader plugin decides what the default locale is based on\n    // how it's able to resolve the strings.\n    nls.localize({ key: 'ensureLoaderPluginIsLoaded', comment: ['{Locked}'] }, '_'));\n    _locale = configuredLocale || LANGUAGE_DEFAULT;\n    _language = _locale;\n    _platformLocale = navigator.language;\n}\n// Native environment\nelse if (typeof nodeProcess === 'object') {\n    _isWindows = (nodeProcess.platform === 'win32');\n    _isMacintosh = (nodeProcess.platform === 'darwin');\n    _isLinux = (nodeProcess.platform === 'linux');\n    _isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n    _isElectron = isElectronProcess;\n    _isCI = !!nodeProcess.env['CI'] || !!nodeProcess.env['BUILD_ARTIFACTSTAGINGDIRECTORY'];\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    const rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            const nlsConfig = JSON.parse(rawNlsConfig);\n            const resolved = nlsConfig.availableLanguages['*'];\n            _locale = nlsConfig.locale;\n            _platformLocale = nlsConfig.osLocale;\n            // VSCode's default language is 'en'\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\n// Unknown environment\nelse {\n    console.error('Unable to resolve platform.');\n}\nlet _platform = 0 /* Platform.Web */;\nif (_isMacintosh) {\n    _platform = 1 /* Platform.Mac */;\n}\nelse if (_isWindows) {\n    _platform = 3 /* Platform.Windows */;\n}\nelse if (_isLinux) {\n    _platform = 2 /* Platform.Linux */;\n}\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isWebWorker = (_isWeb && typeof globals.importScripts === 'function');\nexport const isIOS = _isIOS;\nexport const isMobile = _isMobile;\nexport const userAgent = _userAgent;\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\nexport const setTimeout0IsFaster = (typeof globals.postMessage === 'function' && !globals.importScripts);\n/**\n * See https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#:~:text=than%204%2C%20then-,set%20timeout%20to%204,-.\n *\n * Works similarly to `setTimeout(0)` but doesn't suffer from the 4ms artificial delay\n * that browsers set when the nesting level is > 5.\n */\nexport const setTimeout0 = (() => {\n    if (setTimeout0IsFaster) {\n        const pending = [];\n        globals.addEventListener('message', (e) => {\n            if (e.data && e.data.vscodeScheduleAsyncWork) {\n                for (let i = 0, len = pending.length; i < len; i++) {\n                    const candidate = pending[i];\n                    if (candidate.id === e.data.vscodeScheduleAsyncWork) {\n                        pending.splice(i, 1);\n                        candidate.callback();\n                        return;\n                    }\n                }\n            }\n        });\n        let lastId = 0;\n        return (callback) => {\n            const myId = ++lastId;\n            pending.push({\n                id: myId,\n                callback: callback\n            });\n            globals.postMessage({ vscodeScheduleAsyncWork: myId }, '*');\n        };\n    }\n    return (callback) => setTimeout(callback);\n})();\nexport const OS = (_isMacintosh || _isIOS ? 2 /* OperatingSystem.Macintosh */ : (_isWindows ? 1 /* OperatingSystem.Windows */ : 3 /* OperatingSystem.Linux */));\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian() {\n    if (!_isLittleEndianComputed) {\n        _isLittleEndianComputed = true;\n        const test = new Uint8Array(2);\n        test[0] = 1;\n        test[1] = 2;\n        const view = new Uint16Array(test.buffer);\n        _isLittleEndian = (view[0] === (2 << 8) + 1);\n    }\n    return _isLittleEndian;\n}\nexport const isChrome = !!(userAgent && userAgent.indexOf('Chrome') >= 0);\nexport const isFirefox = !!(userAgent && userAgent.indexOf('Firefox') >= 0);\nexport const isSafari = !!(!isChrome && (userAgent && userAgent.indexOf('Safari') >= 0));\nexport const isEdge = !!(userAgent && userAgent.indexOf('Edg/') >= 0);\nexport const isAndroid = !!(userAgent && userAgent.indexOf('Android') >= 0);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nimport { LRUCachedFunction } from './cache.js';\nimport { Lazy } from './lazy.js';\nexport function isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\nconst _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value, ...args) {\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        const idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value) {\n    return value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack, needle = ' ') {\n    const trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    let offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    let offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nexport function stripWildcards(pattern) {\n    return pattern.replace(/\\*/g, '');\n}\nexport function createRegExp(searchString, isRegex, options = {}) {\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    let modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    const match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nexport function splitLines(str) {\n    return str.split(/\\r\\n|\\r|\\n/);\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str) {\n    for (let i = 0, len = str.length; i < len; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str, start = 0, end = str.length) {\n    for (let i = start; i < end; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str, startIndex = str.length - 1) {\n    for (let i = startIndex; i >= 0; i--) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function compareSubstring(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        const codeA = a.charCodeAt(aStart);\n        const codeB = b.charCodeAt(bStart);\n        if (codeA < codeB) {\n            return -1;\n        }\n        else if (codeA > codeB) {\n            return 1;\n        }\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function compareIgnoreCase(a, b) {\n    return compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\nexport function compareSubstringIgnoreCase(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        let codeA = a.charCodeAt(aStart);\n        let codeB = b.charCodeAt(bStart);\n        if (codeA === codeB) {\n            // equal\n            continue;\n        }\n        if (codeA >= 128 || codeB >= 128) {\n            // not ASCII letters -> fallback to lower-casing strings\n            return compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n        }\n        // mapper lower-case ascii letter onto upper-case varinats\n        // [97-122] (lower ascii) --> [65-90] (upper ascii)\n        if (isLowerAsciiLetter(codeA)) {\n            codeA -= 32;\n        }\n        if (isLowerAsciiLetter(codeB)) {\n            codeB -= 32;\n        }\n        // compare both code points\n        const diff = codeA - codeB;\n        if (diff === 0) {\n            continue;\n        }\n        return diff;\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function isAsciiDigit(code) {\n    return code >= 48 /* CharCode.Digit0 */ && code <= 57 /* CharCode.Digit9 */;\n}\nexport function isLowerAsciiLetter(code) {\n    return code >= 97 /* CharCode.a */ && code <= 122 /* CharCode.z */;\n}\nexport function isUpperAsciiLetter(code) {\n    return code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */;\n}\nexport function equalsIgnoreCase(a, b) {\n    return a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\nexport function startsWithIgnoreCase(str, candidate) {\n    const candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    const aLastIndex = a.length - 1;\n    const bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate, lowSurrogate) {\n    return ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str, len, offset) {\n    const charCode = str.charCodeAt(offset);\n    if (isHighSurrogate(charCode) && offset + 1 < len) {\n        const nextCharCode = str.charCodeAt(offset + 1);\n        if (isLowSurrogate(nextCharCode)) {\n            return computeCodePoint(charCode, nextCharCode);\n        }\n    }\n    return charCode;\n}\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str, offset) {\n    const charCode = str.charCodeAt(offset - 1);\n    if (isLowSurrogate(charCode) && offset > 1) {\n        const prevCharCode = str.charCodeAt(offset - 2);\n        if (isHighSurrogate(prevCharCode)) {\n            return computeCodePoint(prevCharCode, charCode);\n        }\n    }\n    return charCode;\n}\nexport class CodePointIterator {\n    get offset() {\n        return this._offset;\n    }\n    constructor(str, offset = 0) {\n        this._str = str;\n        this._len = str.length;\n        this._offset = offset;\n    }\n    setOffset(offset) {\n        this._offset = offset;\n    }\n    prevCodePoint() {\n        const codePoint = getPrevCodePoint(this._str, this._offset);\n        this._offset -= (codePoint >= 65536 /* Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        return codePoint;\n    }\n    nextCodePoint() {\n        const codePoint = getNextCodePoint(this._str, this._len, this._offset);\n        this._offset += (codePoint >= 65536 /* Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        return codePoint;\n    }\n    eol() {\n        return (this._offset >= this._len);\n    }\n}\nexport class GraphemeIterator {\n    get offset() {\n        return this._iterator.offset;\n    }\n    constructor(str, offset = 0) {\n        this._iterator = new CodePointIterator(str, offset);\n    }\n    nextGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n        while (!iterator.eol()) {\n            const offset = iterator.offset;\n            const nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n            if (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n                // move iterator back\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = nextGraphemeBreakType;\n        }\n        return (iterator.offset - initialOffset);\n    }\n    prevGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n        while (iterator.offset > 0) {\n            const offset = iterator.offset;\n            const prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n            if (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n                // move iterator back\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = prevGraphemeBreakType;\n        }\n        return (initialOffset - iterator.offset);\n    }\n    eol() {\n        return this._iterator.eol();\n    }\n}\nexport function nextCharLength(str, initialOffset) {\n    const iterator = new GraphemeIterator(str, initialOffset);\n    return iterator.nextGraphemeLength();\n}\nexport function prevCharLength(str, initialOffset) {\n    const iterator = new GraphemeIterator(str, initialOffset);\n    return iterator.prevGraphemeLength();\n}\nexport function getCharContainingOffset(str, offset) {\n    if (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n        offset--;\n    }\n    const endOffset = offset + nextCharLength(str, offset);\n    const startOffset = endOffset - prevCharLength(str, endOffset);\n    return [startOffset, endOffset];\n}\nlet CONTAINS_RTL = undefined;\nfunction makeContainsRtl() {\n    // Generated using https://github.com/alexdima/unicode-utils/blob/main/rtl-test.js\n    return /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE35\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDD23\\uDE80-\\uDEA9\\uDEAD-\\uDF45\\uDF51-\\uDF81\\uDF86-\\uDFF6]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD4B-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n}\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str) {\n    if (!CONTAINS_RTL) {\n        CONTAINS_RTL = makeContainsRtl();\n    }\n    return CONTAINS_RTL.test(str);\n}\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str) {\n    return UNUSUAL_LINE_TERMINATORS.test(str);\n}\nexport function isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 - 2EFF   CJK Radicals Supplement\n    //          2F00 - 2FDF   Kangxi Radicals\n    //          2FF0 - 2FFF   Ideographic Description Characters\n    //          3000 - 303F   CJK Symbols and Punctuation\n    //          3040 - 309F   Hiragana\n    //          30A0 - 30FF   Katakana\n    //          3100 - 312F   Bopomofo\n    //          3130 - 318F   Hangul Compatibility Jamo\n    //          3190 - 319F   Kanbun\n    //          31A0 - 31BF   Bopomofo Extended\n    //          31F0 - 31FF   Katakana Phonetic Extensions\n    //          3200 - 32FF   Enclosed CJK Letters and Months\n    //          3300 - 33FF   CJK Compatibility\n    //          3400 - 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 - 4DFF   Yijing Hexagram Symbols\n    //          4E00 - 9FFF   CJK Unified Ideographs\n    //          A000 - A48F   Yi Syllables\n    //          A490 - A4CF   Yi Radicals\n    //          AC00 - D7AF   Hangul Syllables\n    // [IGNORE] D800 - DB7F   High Surrogates\n    // [IGNORE] DB80 - DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 - DFFF   Low Surrogates\n    // [IGNORE] E000 - F8FF   Private Use Area\n    //          F900 - FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 - FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 - FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 - FE0F   Variation Selectors\n    // [IGNORE] FE20 - FE2F   Combining Half Marks\n    // [IGNORE] FE30 - FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 - FE6F   Small Form Variants\n    // [IGNORE] FE70 - FEFF   Arabic Presentation Forms-B\n    //          FF00 - FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 - FFFF   Specials\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/emoji-test.js\n */\nexport function isEmojiImprecise(x) {\n    return ((x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n        || (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n        || (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n        || (x >= 128992 && x <= 129008) || (x >= 129280 && x <= 129535)\n        || (x >= 129648 && x <= 129782));\n}\n// -- UTF-8 BOM\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* CharCode.UTF8_BOM */);\nexport function startsWithUTF8BOM(str) {\n    return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* CharCode.UTF8_BOM */);\n}\nexport function containsUppercaseCharacter(target, ignoreEscapedChars = false) {\n    if (!target) {\n        return false;\n    }\n    if (ignoreEscapedChars) {\n        target = target.replace(/\\\\./g, '');\n    }\n    return target.toLowerCase() !== target;\n}\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n) {\n    const LETTERS_CNT = (90 /* CharCode.Z */ - 65 /* CharCode.A */ + 1);\n    n = n % (2 * LETTERS_CNT);\n    if (n < LETTERS_CNT) {\n        return String.fromCharCode(97 /* CharCode.a */ + n);\n    }\n    return String.fromCharCode(65 /* CharCode.A */ + n - LETTERS_CNT);\n}\nfunction breakBetweenGraphemeBreakType(breakTypeA, breakTypeB) {\n    // http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n    // !!! Let's make the common case a bit faster\n    if (breakTypeA === 0 /* GraphemeBreakType.Other */) {\n        // see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n        return (breakTypeB !== 5 /* GraphemeBreakType.Extend */ && breakTypeB !== 7 /* GraphemeBreakType.SpacingMark */);\n    }\n    // Do not break between a CR and LF. Otherwise, break before and after controls.\n    // GB3                                        CR × LF\n    // GB4                       (Control | CR | LF) ÷\n    // GB5                                           ÷ (Control | CR | LF)\n    if (breakTypeA === 2 /* GraphemeBreakType.CR */) {\n        if (breakTypeB === 3 /* GraphemeBreakType.LF */) {\n            return false; // GB3\n        }\n    }\n    if (breakTypeA === 4 /* GraphemeBreakType.Control */ || breakTypeA === 2 /* GraphemeBreakType.CR */ || breakTypeA === 3 /* GraphemeBreakType.LF */) {\n        return true; // GB4\n    }\n    if (breakTypeB === 4 /* GraphemeBreakType.Control */ || breakTypeB === 2 /* GraphemeBreakType.CR */ || breakTypeB === 3 /* GraphemeBreakType.LF */) {\n        return true; // GB5\n    }\n    // Do not break Hangul syllable sequences.\n    // GB6                                         L × (L | V | LV | LVT)\n    // GB7                                  (LV | V) × (V | T)\n    // GB8                                 (LVT | T) × T\n    if (breakTypeA === 8 /* GraphemeBreakType.L */) {\n        if (breakTypeB === 8 /* GraphemeBreakType.L */ || breakTypeB === 9 /* GraphemeBreakType.V */ || breakTypeB === 11 /* GraphemeBreakType.LV */ || breakTypeB === 12 /* GraphemeBreakType.LVT */) {\n            return false; // GB6\n        }\n    }\n    if (breakTypeA === 11 /* GraphemeBreakType.LV */ || breakTypeA === 9 /* GraphemeBreakType.V */) {\n        if (breakTypeB === 9 /* GraphemeBreakType.V */ || breakTypeB === 10 /* GraphemeBreakType.T */) {\n            return false; // GB7\n        }\n    }\n    if (breakTypeA === 12 /* GraphemeBreakType.LVT */ || breakTypeA === 10 /* GraphemeBreakType.T */) {\n        if (breakTypeB === 10 /* GraphemeBreakType.T */) {\n            return false; // GB8\n        }\n    }\n    // Do not break before extending characters or ZWJ.\n    // GB9                                           × (Extend | ZWJ)\n    if (breakTypeB === 5 /* GraphemeBreakType.Extend */ || breakTypeB === 13 /* GraphemeBreakType.ZWJ */) {\n        return false; // GB9\n    }\n    // The GB9a and GB9b rules only apply to extended grapheme clusters:\n    // Do not break before SpacingMarks, or after Prepend characters.\n    // GB9a                                          × SpacingMark\n    // GB9b                                  Prepend ×\n    if (breakTypeB === 7 /* GraphemeBreakType.SpacingMark */) {\n        return false; // GB9a\n    }\n    if (breakTypeA === 1 /* GraphemeBreakType.Prepend */) {\n        return false; // GB9b\n    }\n    // Do not break within emoji modifier sequences or emoji zwj sequences.\n    // GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n    if (breakTypeA === 13 /* GraphemeBreakType.ZWJ */ && breakTypeB === 14 /* GraphemeBreakType.Extended_Pictographic */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB11\n    }\n    // GB12                          sot (RI RI)* RI × RI\n    // GB13                        [^RI] (RI RI)* RI × RI\n    if (breakTypeA === 6 /* GraphemeBreakType.Regional_Indicator */ && breakTypeB === 6 /* GraphemeBreakType.Regional_Indicator */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB12 & GB13\n    }\n    // GB999                                     Any ÷ Any\n    return true;\n}\nclass GraphemeBreakTree {\n    static getInstance() {\n        if (!GraphemeBreakTree._INSTANCE) {\n            GraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n        }\n        return GraphemeBreakTree._INSTANCE;\n    }\n    constructor() {\n        this._data = getGraphemeBreakRawData();\n    }\n    getGraphemeBreakType(codePoint) {\n        // !!! Let's make 7bit ASCII a bit faster: 0..31\n        if (codePoint < 32) {\n            if (codePoint === 10 /* CharCode.LineFeed */) {\n                return 3 /* GraphemeBreakType.LF */;\n            }\n            if (codePoint === 13 /* CharCode.CarriageReturn */) {\n                return 2 /* GraphemeBreakType.CR */;\n            }\n            return 4 /* GraphemeBreakType.Control */;\n        }\n        // !!! Let's make 7bit ASCII a bit faster: 32..126\n        if (codePoint < 127) {\n            return 0 /* GraphemeBreakType.Other */;\n        }\n        const data = this._data;\n        const nodeCount = data.length / 3;\n        let nodeIndex = 1;\n        while (nodeIndex <= nodeCount) {\n            if (codePoint < data[3 * nodeIndex]) {\n                // go left\n                nodeIndex = 2 * nodeIndex;\n            }\n            else if (codePoint > data[3 * nodeIndex + 1]) {\n                // go right\n                nodeIndex = 2 * nodeIndex + 1;\n            }\n            else {\n                // hit\n                return data[3 * nodeIndex + 2];\n            }\n        }\n        return 0 /* GraphemeBreakType.Other */;\n    }\n}\nGraphemeBreakTree._INSTANCE = null;\nfunction getGraphemeBreakRawData() {\n    // generated using https://github.com/alexdima/unicode-utils/blob/main/grapheme-break.js\n    return JSON.parse('[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]');\n}\n//#endregion\n/**\n * Computes the offset after performing a left delete on the given string,\n * while considering unicode grapheme/emoji rules.\n*/\nexport function getLeftDeleteOffset(offset, str) {\n    if (offset === 0) {\n        return 0;\n    }\n    // Try to delete emoji part.\n    const emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n    if (emojiOffset !== undefined) {\n        return emojiOffset;\n    }\n    // Otherwise, just skip a single code point.\n    const iterator = new CodePointIterator(str, offset);\n    iterator.prevCodePoint();\n    return iterator.offset;\n}\nfunction getOffsetBeforeLastEmojiComponent(initialOffset, str) {\n    // See https://www.unicode.org/reports/tr51/tr51-14.html#EBNF_and_Regex for the\n    // structure of emojis.\n    const iterator = new CodePointIterator(str, initialOffset);\n    let codePoint = iterator.prevCodePoint();\n    // Skip modifiers\n    while ((isEmojiModifier(codePoint) || codePoint === 65039 /* CodePoint.emojiVariantSelector */ || codePoint === 8419 /* CodePoint.enclosingKeyCap */)) {\n        if (iterator.offset === 0) {\n            // Cannot skip modifier, no preceding emoji base.\n            return undefined;\n        }\n        codePoint = iterator.prevCodePoint();\n    }\n    // Expect base emoji\n    if (!isEmojiImprecise(codePoint)) {\n        // Unexpected code point, not a valid emoji.\n        return undefined;\n    }\n    let resultOffset = iterator.offset;\n    if (resultOffset > 0) {\n        // Skip optional ZWJ code points that combine multiple emojis.\n        // In theory, we should check if that ZWJ actually combines multiple emojis\n        // to prevent deleting ZWJs in situations we didn't account for.\n        const optionalZwjCodePoint = iterator.prevCodePoint();\n        if (optionalZwjCodePoint === 8205 /* CodePoint.zwj */) {\n            resultOffset = iterator.offset;\n        }\n    }\n    return resultOffset;\n}\nfunction isEmojiModifier(codePoint) {\n    return 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\nexport const noBreakWhitespace = '\\xa0';\nexport class AmbiguousCharacters {\n    static getInstance(locales) {\n        return _a.cache.get(Array.from(locales));\n    }\n    static getLocales() {\n        return _a._locales.value;\n    }\n    constructor(confusableDictionary) {\n        this.confusableDictionary = confusableDictionary;\n    }\n    isAmbiguous(codePoint) {\n        return this.confusableDictionary.has(codePoint);\n    }\n    /**\n     * Returns the non basic ASCII code point that the given code point can be confused,\n     * or undefined if such code point does note exist.\n     */\n    getPrimaryConfusable(codePoint) {\n        return this.confusableDictionary.get(codePoint);\n    }\n    getConfusableCodePoints() {\n        return new Set(this.confusableDictionary.keys());\n    }\n}\n_a = AmbiguousCharacters;\nAmbiguousCharacters.ambiguousCharacterData = new Lazy(() => {\n    // Generated using https://github.com/hediet/vscode-unicode-data\n    // Stored as key1, value1, key2, value2, ...\n    return JSON.parse('{\\\"_common\\\":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125,119846,109],\\\"_default\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"cs\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"de\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"es\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"fr\\\":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"it\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ja\\\":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],\\\"ko\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pl\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pt-BR\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"qps-ploc\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ru\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"tr\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"zh-hans\\\":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],\\\"zh-hant\\\":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}');\n});\nAmbiguousCharacters.cache = new LRUCachedFunction((locales) => {\n    function arrayToMap(arr) {\n        const result = new Map();\n        for (let i = 0; i < arr.length; i += 2) {\n            result.set(arr[i], arr[i + 1]);\n        }\n        return result;\n    }\n    function mergeMaps(map1, map2) {\n        const result = new Map(map1);\n        for (const [key, value] of map2) {\n            result.set(key, value);\n        }\n        return result;\n    }\n    function intersectMaps(map1, map2) {\n        if (!map1) {\n            return map2;\n        }\n        const result = new Map();\n        for (const [key, value] of map1) {\n            if (map2.has(key)) {\n                result.set(key, value);\n            }\n        }\n        return result;\n    }\n    const data = _a.ambiguousCharacterData.value;\n    let filteredLocales = locales.filter((l) => !l.startsWith('_') && l in data);\n    if (filteredLocales.length === 0) {\n        filteredLocales = ['_default'];\n    }\n    let languageSpecificMap = undefined;\n    for (const locale of filteredLocales) {\n        const map = arrayToMap(data[locale]);\n        languageSpecificMap = intersectMaps(languageSpecificMap, map);\n    }\n    const commonMap = arrayToMap(data['_common']);\n    const map = mergeMaps(commonMap, languageSpecificMap);\n    return new _a(map);\n});\nAmbiguousCharacters._locales = new Lazy(() => Object.keys(_a.ambiguousCharacterData.value).filter((k) => !k.startsWith('_')));\nexport class InvisibleCharacters {\n    static getRawData() {\n        // Generated using https://github.com/hediet/vscode-unicode-data\n        return JSON.parse('[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]');\n    }\n    static getData() {\n        if (!this._data) {\n            this._data = new Set(InvisibleCharacters.getRawData());\n        }\n        return this._data;\n    }\n    static isInvisibleCharacter(codePoint) {\n        return InvisibleCharacters.getData().has(codePoint);\n    }\n    static get codePoints() {\n        return InvisibleCharacters.getData();\n    }\n}\nInvisibleCharacters._data = undefined;\n","/**\n * Uses a LRU cache to make a given parametrized function cached.\n * Caches just the last value.\n * The key must be JSON serializable.\n*/\nexport class LRUCachedFunction {\n    constructor(fn) {\n        this.fn = fn;\n        this.lastCache = undefined;\n        this.lastArgKey = undefined;\n    }\n    get(arg) {\n        const key = JSON.stringify(arg);\n        if (this.lastArgKey !== key) {\n            this.lastArgKey = key;\n            this.lastCache = this.fn(arg);\n        }\n        return this.lastCache;\n    }\n}\n/**\n * Uses an unbounded cache (referential equality) to memoize the results of the given function.\n*/\nexport class CachedFunction {\n    get cachedValues() {\n        return this._map;\n    }\n    constructor(fn) {\n        this.fn = fn;\n        this._map = new Map();\n    }\n    get(arg) {\n        if (this._map.has(arg)) {\n            return this._map.get(arg);\n        }\n        const value = this.fn(arg);\n        this._map.set(arg, value);\n        return value;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class Lazy {\n    constructor(executor) {\n        this.executor = executor;\n        this._didRun = false;\n    }\n    /**\n     * Get the wrapped value.\n     *\n     * This will force evaluation of the lazy value if it has not been resolved yet. Lazy values are only\n     * resolved once. `getValue` will re-throw exceptions that are hit while resolving the value\n     */\n    get value() {\n        if (!this._didRun) {\n            try {\n                this._value = this.executor();\n            }\n            catch (err) {\n                this._error = err;\n            }\n            finally {\n                this._didRun = true;\n            }\n        }\n        if (this._error) {\n            throw this._error;\n        }\n        return this._value;\n    }\n    /**\n     * Get the wrapped value without forcing evaluation.\n     */\n    get rawValue() { return this._value; }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { transformErrorForSerialization } from '../errors.js';\nimport { Emitter } from '../event.js';\nimport { Disposable } from '../lifecycle.js';\nimport { getAllMethodNames } from '../objects.js';\nimport { isWeb } from '../platform.js';\nimport * as strings from '../strings.js';\nconst INITIALIZE = '$initialize';\nlet webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err) {\n    if (!isWeb) {\n        // running tests\n        return;\n    }\n    if (!webWorkerWarningLogged) {\n        webWorkerWarningLogged = true;\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/microsoft/monaco-editor#faq');\n    }\n    console.warn(err.message);\n}\nclass RequestMessage {\n    constructor(vsWorker, req, method, args) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.method = method;\n        this.args = args;\n        this.type = 0 /* MessageType.Request */;\n    }\n}\nclass ReplyMessage {\n    constructor(vsWorker, seq, res, err) {\n        this.vsWorker = vsWorker;\n        this.seq = seq;\n        this.res = res;\n        this.err = err;\n        this.type = 1 /* MessageType.Reply */;\n    }\n}\nclass SubscribeEventMessage {\n    constructor(vsWorker, req, eventName, arg) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.eventName = eventName;\n        this.arg = arg;\n        this.type = 2 /* MessageType.SubscribeEvent */;\n    }\n}\nclass EventMessage {\n    constructor(vsWorker, req, event) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.event = event;\n        this.type = 3 /* MessageType.Event */;\n    }\n}\nclass UnsubscribeEventMessage {\n    constructor(vsWorker, req) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.type = 4 /* MessageType.UnsubscribeEvent */;\n    }\n}\nclass SimpleWorkerProtocol {\n    constructor(handler) {\n        this._workerId = -1;\n        this._handler = handler;\n        this._lastSentReq = 0;\n        this._pendingReplies = Object.create(null);\n        this._pendingEmitters = new Map();\n        this._pendingEvents = new Map();\n    }\n    setWorkerId(workerId) {\n        this._workerId = workerId;\n    }\n    sendMessage(method, args) {\n        const req = String(++this._lastSentReq);\n        return new Promise((resolve, reject) => {\n            this._pendingReplies[req] = {\n                resolve: resolve,\n                reject: reject\n            };\n            this._send(new RequestMessage(this._workerId, req, method, args));\n        });\n    }\n    listen(eventName, arg) {\n        let req = null;\n        const emitter = new Emitter({\n            onWillAddFirstListener: () => {\n                req = String(++this._lastSentReq);\n                this._pendingEmitters.set(req, emitter);\n                this._send(new SubscribeEventMessage(this._workerId, req, eventName, arg));\n            },\n            onDidRemoveLastListener: () => {\n                this._pendingEmitters.delete(req);\n                this._send(new UnsubscribeEventMessage(this._workerId, req));\n                req = null;\n            }\n        });\n        return emitter.event;\n    }\n    handleMessage(message) {\n        if (!message || !message.vsWorker) {\n            return;\n        }\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n            return;\n        }\n        this._handleMessage(message);\n    }\n    _handleMessage(msg) {\n        switch (msg.type) {\n            case 1 /* MessageType.Reply */:\n                return this._handleReplyMessage(msg);\n            case 0 /* MessageType.Request */:\n                return this._handleRequestMessage(msg);\n            case 2 /* MessageType.SubscribeEvent */:\n                return this._handleSubscribeEventMessage(msg);\n            case 3 /* MessageType.Event */:\n                return this._handleEventMessage(msg);\n            case 4 /* MessageType.UnsubscribeEvent */:\n                return this._handleUnsubscribeEventMessage(msg);\n        }\n    }\n    _handleReplyMessage(replyMessage) {\n        if (!this._pendingReplies[replyMessage.seq]) {\n            console.warn('Got reply to unknown seq');\n            return;\n        }\n        const reply = this._pendingReplies[replyMessage.seq];\n        delete this._pendingReplies[replyMessage.seq];\n        if (replyMessage.err) {\n            let err = replyMessage.err;\n            if (replyMessage.err.$isError) {\n                err = new Error();\n                err.name = replyMessage.err.name;\n                err.message = replyMessage.err.message;\n                err.stack = replyMessage.err.stack;\n            }\n            reply.reject(err);\n            return;\n        }\n        reply.resolve(replyMessage.res);\n    }\n    _handleRequestMessage(requestMessage) {\n        const req = requestMessage.req;\n        const result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n        result.then((r) => {\n            this._send(new ReplyMessage(this._workerId, req, r, undefined));\n        }, (e) => {\n            if (e.detail instanceof Error) {\n                // Loading errors have a detail property that points to the actual error\n                e.detail = transformErrorForSerialization(e.detail);\n            }\n            this._send(new ReplyMessage(this._workerId, req, undefined, transformErrorForSerialization(e)));\n        });\n    }\n    _handleSubscribeEventMessage(msg) {\n        const req = msg.req;\n        const disposable = this._handler.handleEvent(msg.eventName, msg.arg)((event) => {\n            this._send(new EventMessage(this._workerId, req, event));\n        });\n        this._pendingEvents.set(req, disposable);\n    }\n    _handleEventMessage(msg) {\n        if (!this._pendingEmitters.has(msg.req)) {\n            console.warn('Got event for unknown req');\n            return;\n        }\n        this._pendingEmitters.get(msg.req).fire(msg.event);\n    }\n    _handleUnsubscribeEventMessage(msg) {\n        if (!this._pendingEvents.has(msg.req)) {\n            console.warn('Got unsubscribe for unknown req');\n            return;\n        }\n        this._pendingEvents.get(msg.req).dispose();\n        this._pendingEvents.delete(msg.req);\n    }\n    _send(msg) {\n        const transfer = [];\n        if (msg.type === 0 /* MessageType.Request */) {\n            for (let i = 0; i < msg.args.length; i++) {\n                if (msg.args[i] instanceof ArrayBuffer) {\n                    transfer.push(msg.args[i]);\n                }\n            }\n        }\n        else if (msg.type === 1 /* MessageType.Reply */) {\n            if (msg.res instanceof ArrayBuffer) {\n                transfer.push(msg.res);\n            }\n        }\n        this._handler.sendMessage(msg, transfer);\n    }\n}\n/**\n * Main thread side\n */\nexport class SimpleWorkerClient extends Disposable {\n    constructor(workerFactory, moduleId, host) {\n        super();\n        let lazyProxyReject = null;\n        this._worker = this._register(workerFactory.create('vs/base/common/worker/simpleWorker', (msg) => {\n            this._protocol.handleMessage(msg);\n        }, (err) => {\n            // in Firefox, web workers fail lazily :(\n            // we will reject the proxy\n            lazyProxyReject === null || lazyProxyReject === void 0 ? void 0 : lazyProxyReject(err);\n        }));\n        this._protocol = new SimpleWorkerProtocol({\n            sendMessage: (msg, transfer) => {\n                this._worker.postMessage(msg, transfer);\n            },\n            handleMessage: (method, args) => {\n                if (typeof host[method] !== 'function') {\n                    return Promise.reject(new Error('Missing method ' + method + ' on main thread host.'));\n                }\n                try {\n                    return Promise.resolve(host[method].apply(host, args));\n                }\n                catch (e) {\n                    return Promise.reject(e);\n                }\n            },\n            handleEvent: (eventName, arg) => {\n                if (propertyIsDynamicEvent(eventName)) {\n                    const event = host[eventName].call(host, arg);\n                    if (typeof event !== 'function') {\n                        throw new Error(`Missing dynamic event ${eventName} on main thread host.`);\n                    }\n                    return event;\n                }\n                if (propertyIsEvent(eventName)) {\n                    const event = host[eventName];\n                    if (typeof event !== 'function') {\n                        throw new Error(`Missing event ${eventName} on main thread host.`);\n                    }\n                    return event;\n                }\n                throw new Error(`Malformed event name ${eventName}`);\n            }\n        });\n        this._protocol.setWorkerId(this._worker.getId());\n        // Gather loader configuration\n        let loaderConfiguration = null;\n        const globalRequire = globalThis.require;\n        if (typeof globalRequire !== 'undefined' && typeof globalRequire.getConfig === 'function') {\n            // Get the configuration from the Monaco AMD Loader\n            loaderConfiguration = globalRequire.getConfig();\n        }\n        else if (typeof globalThis.requirejs !== 'undefined') {\n            // Get the configuration from requirejs\n            loaderConfiguration = globalThis.requirejs.s.contexts._.config;\n        }\n        const hostMethods = getAllMethodNames(host);\n        // Send initialize message\n        this._onModuleLoaded = this._protocol.sendMessage(INITIALIZE, [\n            this._worker.getId(),\n            JSON.parse(JSON.stringify(loaderConfiguration)),\n            moduleId,\n            hostMethods,\n        ]);\n        // Create proxy to loaded code\n        const proxyMethodRequest = (method, args) => {\n            return this._request(method, args);\n        };\n        const proxyListen = (eventName, arg) => {\n            return this._protocol.listen(eventName, arg);\n        };\n        this._lazyProxy = new Promise((resolve, reject) => {\n            lazyProxyReject = reject;\n            this._onModuleLoaded.then((availableMethods) => {\n                resolve(createProxyObject(availableMethods, proxyMethodRequest, proxyListen));\n            }, (e) => {\n                reject(e);\n                this._onError('Worker failed to load ' + moduleId, e);\n            });\n        });\n    }\n    getProxyObject() {\n        return this._lazyProxy;\n    }\n    _request(method, args) {\n        return new Promise((resolve, reject) => {\n            this._onModuleLoaded.then(() => {\n                this._protocol.sendMessage(method, args).then(resolve, reject);\n            }, reject);\n        });\n    }\n    _onError(message, error) {\n        console.error(message);\n        console.info(error);\n    }\n}\nfunction propertyIsEvent(name) {\n    // Assume a property is an event if it has a form of \"onSomething\"\n    return name[0] === 'o' && name[1] === 'n' && strings.isUpperAsciiLetter(name.charCodeAt(2));\n}\nfunction propertyIsDynamicEvent(name) {\n    // Assume a property is a dynamic event (a method that returns an event) if it has a form of \"onDynamicSomething\"\n    return /^onDynamic/.test(name) && strings.isUpperAsciiLetter(name.charCodeAt(9));\n}\nfunction createProxyObject(methodNames, invoke, proxyListen) {\n    const createProxyMethod = (method) => {\n        return function () {\n            const args = Array.prototype.slice.call(arguments, 0);\n            return invoke(method, args);\n        };\n    };\n    const createProxyDynamicEvent = (eventName) => {\n        return function (arg) {\n            return proxyListen(eventName, arg);\n        };\n    };\n    const result = {};\n    for (const methodName of methodNames) {\n        if (propertyIsDynamicEvent(methodName)) {\n            result[methodName] = createProxyDynamicEvent(methodName);\n            continue;\n        }\n        if (propertyIsEvent(methodName)) {\n            result[methodName] = proxyListen(methodName, undefined);\n            continue;\n        }\n        result[methodName] = createProxyMethod(methodName);\n    }\n    return result;\n}\n/**\n * Worker side\n */\nexport class SimpleWorkerServer {\n    constructor(postMessage, requestHandlerFactory) {\n        this._requestHandlerFactory = requestHandlerFactory;\n        this._requestHandler = null;\n        this._protocol = new SimpleWorkerProtocol({\n            sendMessage: (msg, transfer) => {\n                postMessage(msg, transfer);\n            },\n            handleMessage: (method, args) => this._handleMessage(method, args),\n            handleEvent: (eventName, arg) => this._handleEvent(eventName, arg)\n        });\n    }\n    onmessage(msg) {\n        this._protocol.handleMessage(msg);\n    }\n    _handleMessage(method, args) {\n        if (method === INITIALIZE) {\n            return this.initialize(args[0], args[1], args[2], args[3]);\n        }\n        if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    _handleEvent(eventName, arg) {\n        if (!this._requestHandler) {\n            throw new Error(`Missing requestHandler`);\n        }\n        if (propertyIsDynamicEvent(eventName)) {\n            const event = this._requestHandler[eventName].call(this._requestHandler, arg);\n            if (typeof event !== 'function') {\n                throw new Error(`Missing dynamic event ${eventName} on request handler.`);\n            }\n            return event;\n        }\n        if (propertyIsEvent(eventName)) {\n            const event = this._requestHandler[eventName];\n            if (typeof event !== 'function') {\n                throw new Error(`Missing event ${eventName} on request handler.`);\n            }\n            return event;\n        }\n        throw new Error(`Malformed event name ${eventName}`);\n    }\n    initialize(workerId, loaderConfig, moduleId, hostMethods) {\n        this._protocol.setWorkerId(workerId);\n        const proxyMethodRequest = (method, args) => {\n            return this._protocol.sendMessage(method, args);\n        };\n        const proxyListen = (eventName, arg) => {\n            return this._protocol.listen(eventName, arg);\n        };\n        const hostProxy = createProxyObject(hostMethods, proxyMethodRequest, proxyListen);\n        if (this._requestHandlerFactory) {\n            // static request handler\n            this._requestHandler = this._requestHandlerFactory(hostProxy);\n            return Promise.resolve(getAllMethodNames(this._requestHandler));\n        }\n        if (loaderConfig) {\n            // Remove 'baseUrl', handling it is beyond scope for now\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\n                delete loaderConfig['baseUrl'];\n            }\n            if (typeof loaderConfig.paths !== 'undefined') {\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\n                    delete loaderConfig.paths['vs'];\n                }\n            }\n            if (typeof loaderConfig.trustedTypesPolicy !== undefined) {\n                // don't use, it has been destroyed during serialize\n                delete loaderConfig['trustedTypesPolicy'];\n            }\n            // Since this is in a web worker, enable catching errors\n            loaderConfig.catchError = true;\n            globalThis.require.config(loaderConfig);\n        }\n        return new Promise((resolve, reject) => {\n            // Use the global require to be sure to get the global config\n            // ESM-comment-begin\n            // \t\t\tconst req = (globalThis.require || require);\n            // ESM-comment-end\n            // ESM-uncomment-begin\n            const req = globalThis.require;\n            // ESM-uncomment-end\n            req([moduleId], (module) => {\n                this._requestHandler = module.create(hostProxy);\n                if (!this._requestHandler) {\n                    reject(new Error(`No RequestHandler!`));\n                    return;\n                }\n                resolve(getAllMethodNames(this._requestHandler));\n            }, reject);\n        });\n    }\n}\n/**\n * Called on the worker side\n * @skipMangle\n */\nexport function create(postMessage) {\n    return new SimpleWorkerServer(postMessage, null);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Represents information about a specific difference between two sequences.\n */\nexport class DiffChange {\n    /**\n     * Constructs a new DiffChange with the given sequence information\n     * and content.\n     */\n    constructor(originalStart, originalLength, modifiedStart, modifiedLength) {\n        //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n        this.originalStart = originalStart;\n        this.originalLength = originalLength;\n        this.modifiedStart = modifiedStart;\n        this.modifiedLength = modifiedLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the original sequence.\n     */\n    getOriginalEnd() {\n        return this.originalStart + this.originalLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the modified sequence.\n     */\n    getModifiedEnd() {\n        return this.modifiedStart + this.modifiedLength;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\n/**\n * Return a hash value for an object.\n */\nexport function hash(obj) {\n    return doHash(obj, 0);\n}\nexport function doHash(obj, hashVal) {\n    switch (typeof obj) {\n        case 'object':\n            if (obj === null) {\n                return numberHash(349, hashVal);\n            }\n            else if (Array.isArray(obj)) {\n                return arrayHash(obj, hashVal);\n            }\n            return objectHash(obj, hashVal);\n        case 'string':\n            return stringHash(obj, hashVal);\n        case 'boolean':\n            return booleanHash(obj, hashVal);\n        case 'number':\n            return numberHash(obj, hashVal);\n        case 'undefined':\n            return numberHash(937, hashVal);\n        default:\n            return numberHash(617, hashVal);\n    }\n}\nexport function numberHash(val, initialHashVal) {\n    return (((initialHashVal << 5) - initialHashVal) + val) | 0; // hashVal * 31 + ch, keep as int32\n}\nfunction booleanHash(b, initialHashVal) {\n    return numberHash(b ? 433 : 863, initialHashVal);\n}\nexport function stringHash(s, hashVal) {\n    hashVal = numberHash(149417, hashVal);\n    for (let i = 0, length = s.length; i < length; i++) {\n        hashVal = numberHash(s.charCodeAt(i), hashVal);\n    }\n    return hashVal;\n}\nfunction arrayHash(arr, initialHashVal) {\n    initialHashVal = numberHash(104579, initialHashVal);\n    return arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\nfunction objectHash(obj, initialHashVal) {\n    initialHashVal = numberHash(181387, initialHashVal);\n    return Object.keys(obj).sort().reduce((hashVal, key) => {\n        hashVal = stringHash(key, hashVal);\n        return doHash(obj[key], hashVal);\n    }, initialHashVal);\n}\nfunction leftRotate(value, bits, totalBits = 32) {\n    // delta + bits = totalBits\n    const delta = totalBits - bits;\n    // All ones, expect `delta` zeros aligned to the right\n    const mask = ~((1 << delta) - 1);\n    // Join (value left-shifted `bits` bits) with (masked value right-shifted `delta` bits)\n    return ((value << bits) | ((mask & value) >>> delta)) >>> 0;\n}\nfunction fill(dest, index = 0, count = dest.byteLength, value = 0) {\n    for (let i = 0; i < count; i++) {\n        dest[index + i] = value;\n    }\n}\nfunction leftPad(value, length, char = '0') {\n    while (value.length < length) {\n        value = char + value;\n    }\n    return value;\n}\nexport function toHexString(bufferOrValue, bitsize = 32) {\n    if (bufferOrValue instanceof ArrayBuffer) {\n        return Array.from(new Uint8Array(bufferOrValue)).map(b => b.toString(16).padStart(2, '0')).join('');\n    }\n    return leftPad((bufferOrValue >>> 0).toString(16), bitsize / 4);\n}\n/**\n * A SHA1 implementation that works with strings and does not allocate.\n */\nexport class StringSHA1 {\n    constructor() {\n        this._h0 = 0x67452301;\n        this._h1 = 0xEFCDAB89;\n        this._h2 = 0x98BADCFE;\n        this._h3 = 0x10325476;\n        this._h4 = 0xC3D2E1F0;\n        this._buff = new Uint8Array(64 /* SHA1Constant.BLOCK_SIZE */ + 3 /* to fit any utf-8 */);\n        this._buffDV = new DataView(this._buff.buffer);\n        this._buffLen = 0;\n        this._totalLen = 0;\n        this._leftoverHighSurrogate = 0;\n        this._finished = false;\n    }\n    update(str) {\n        const strLen = str.length;\n        if (strLen === 0) {\n            return;\n        }\n        const buff = this._buff;\n        let buffLen = this._buffLen;\n        let leftoverHighSurrogate = this._leftoverHighSurrogate;\n        let charCode;\n        let offset;\n        if (leftoverHighSurrogate !== 0) {\n            charCode = leftoverHighSurrogate;\n            offset = -1;\n            leftoverHighSurrogate = 0;\n        }\n        else {\n            charCode = str.charCodeAt(0);\n            offset = 0;\n        }\n        while (true) {\n            let codePoint = charCode;\n            if (strings.isHighSurrogate(charCode)) {\n                if (offset + 1 < strLen) {\n                    const nextCharCode = str.charCodeAt(offset + 1);\n                    if (strings.isLowSurrogate(nextCharCode)) {\n                        offset++;\n                        codePoint = strings.computeCodePoint(charCode, nextCharCode);\n                    }\n                    else {\n                        // illegal => unicode replacement character\n                        codePoint = 65533 /* SHA1Constant.UNICODE_REPLACEMENT */;\n                    }\n                }\n                else {\n                    // last character is a surrogate pair\n                    leftoverHighSurrogate = charCode;\n                    break;\n                }\n            }\n            else if (strings.isLowSurrogate(charCode)) {\n                // illegal => unicode replacement character\n                codePoint = 65533 /* SHA1Constant.UNICODE_REPLACEMENT */;\n            }\n            buffLen = this._push(buff, buffLen, codePoint);\n            offset++;\n            if (offset < strLen) {\n                charCode = str.charCodeAt(offset);\n            }\n            else {\n                break;\n            }\n        }\n        this._buffLen = buffLen;\n        this._leftoverHighSurrogate = leftoverHighSurrogate;\n    }\n    _push(buff, buffLen, codePoint) {\n        if (codePoint < 0x0080) {\n            buff[buffLen++] = codePoint;\n        }\n        else if (codePoint < 0x0800) {\n            buff[buffLen++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else if (codePoint < 0x10000) {\n            buff[buffLen++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else {\n            buff[buffLen++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        if (buffLen >= 64 /* SHA1Constant.BLOCK_SIZE */) {\n            this._step();\n            buffLen -= 64 /* SHA1Constant.BLOCK_SIZE */;\n            this._totalLen += 64 /* SHA1Constant.BLOCK_SIZE */;\n            // take last 3 in case of UTF8 overflow\n            buff[0] = buff[64 /* SHA1Constant.BLOCK_SIZE */ + 0];\n            buff[1] = buff[64 /* SHA1Constant.BLOCK_SIZE */ + 1];\n            buff[2] = buff[64 /* SHA1Constant.BLOCK_SIZE */ + 2];\n        }\n        return buffLen;\n    }\n    digest() {\n        if (!this._finished) {\n            this._finished = true;\n            if (this._leftoverHighSurrogate) {\n                // illegal => unicode replacement character\n                this._leftoverHighSurrogate = 0;\n                this._buffLen = this._push(this._buff, this._buffLen, 65533 /* SHA1Constant.UNICODE_REPLACEMENT */);\n            }\n            this._totalLen += this._buffLen;\n            this._wrapUp();\n        }\n        return toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n    }\n    _wrapUp() {\n        this._buff[this._buffLen++] = 0x80;\n        fill(this._buff, this._buffLen);\n        if (this._buffLen > 56) {\n            this._step();\n            fill(this._buff);\n        }\n        // this will fit because the mantissa can cover up to 52 bits\n        const ml = 8 * this._totalLen;\n        this._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n        this._buffDV.setUint32(60, ml % 4294967296, false);\n        this._step();\n    }\n    _step() {\n        const bigBlock32 = StringSHA1._bigBlock32;\n        const data = this._buffDV;\n        for (let j = 0; j < 64 /* 16*4 */; j += 4) {\n            bigBlock32.setUint32(j, data.getUint32(j, false), false);\n        }\n        for (let j = 64; j < 320 /* 80*4 */; j += 4) {\n            bigBlock32.setUint32(j, leftRotate((bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false)), 1), false);\n        }\n        let a = this._h0;\n        let b = this._h1;\n        let c = this._h2;\n        let d = this._h3;\n        let e = this._h4;\n        let f, k;\n        let temp;\n        for (let j = 0; j < 80; j++) {\n            if (j < 20) {\n                f = (b & c) | ((~b) & d);\n                k = 0x5A827999;\n            }\n            else if (j < 40) {\n                f = b ^ c ^ d;\n                k = 0x6ED9EBA1;\n            }\n            else if (j < 60) {\n                f = (b & c) | (b & d) | (c & d);\n                k = 0x8F1BBCDC;\n            }\n            else {\n                f = b ^ c ^ d;\n                k = 0xCA62C1D6;\n            }\n            temp = (leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false)) & 0xffffffff;\n            e = d;\n            d = c;\n            c = leftRotate(b, 30);\n            b = a;\n            a = temp;\n        }\n        this._h0 = (this._h0 + a) & 0xffffffff;\n        this._h1 = (this._h1 + b) & 0xffffffff;\n        this._h2 = (this._h2 + c) & 0xffffffff;\n        this._h3 = (this._h3 + d) & 0xffffffff;\n        this._h4 = (this._h4 + e) & 0xffffffff;\n    }\n}\nStringSHA1._bigBlock32 = new DataView(new ArrayBuffer(320)); // 80 * 4 = 320\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { DiffChange } from './diffChange.js';\nimport { stringHash } from '../hash.js';\nexport class StringDiffSequence {\n    constructor(source) {\n        this.source = source;\n    }\n    getElements() {\n        const source = this.source;\n        const characters = new Int32Array(source.length);\n        for (let i = 0, len = source.length; i < len; i++) {\n            characters[i] = source.charCodeAt(i);\n        }\n        return characters;\n    }\n}\nexport function stringDiff(original, modified, pretty) {\n    return new LcsDiff(new StringDiffSequence(original), new StringDiffSequence(modified)).ComputeDiff(pretty).changes;\n}\n//\n// The code below has been ported from a C# implementation in VS\n//\nclass Debug {\n    static Assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n}\nclass MyArray {\n    /**\n     * Copies a range of elements from an Array starting at the specified source index and pastes\n     * them to another Array starting at the specified destination index. The length and the indexes\n     * are specified as 64-bit integers.\n     * sourceArray:\n     *\t\tThe Array that contains the data to copy.\n     * sourceIndex:\n     *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n     * destinationArray:\n     *\t\tThe Array that receives the data.\n     * destinationIndex:\n     *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n     * length:\n     *\t\tA 64-bit integer that represents the number of elements to copy.\n     */\n    static Copy(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (let i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    }\n    static Copy2(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (let i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    }\n}\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarkNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nclass DiffChangeHelper {\n    /**\n     * Constructs a new DiffChangeHelper for the given DiffSequences.\n     */\n    constructor() {\n        this.m_changes = [];\n        this.m_originalStart = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n        this.m_modifiedStart = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n    }\n    /**\n     * Marks the beginning of the next change in the set of differences.\n     */\n    MarkNextChange() {\n        // Only add to the list if there is something to add\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Add the new change to our list\n            this.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\n        }\n        // Reset for the next change\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n        this.m_originalStart = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n        this.m_modifiedStart = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n    }\n    /**\n     * Adds the original element at the given position to the elements\n     * affected by the current change. The modified index gives context\n     * to the change position with respect to the original sequence.\n     * @param originalIndex The index of the original element to add.\n     * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n     */\n    AddOriginalElement(originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_originalCount++;\n    }\n    /**\n     * Adds the modified element at the given position to the elements\n     * affected by the current change. The original index gives context\n     * to the change position with respect to the modified sequence.\n     * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n     * @param modifiedIndex The index of the modified element to add.\n     */\n    AddModifiedElement(originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_modifiedCount++;\n    }\n    /**\n     * Retrieves all of the changes marked by the class.\n     */\n    getChanges() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        return this.m_changes;\n    }\n    /**\n     * Retrieves all of the changes marked by the class in the reverse order\n     */\n    getReverseChanges() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        this.m_changes.reverse();\n        return this.m_changes;\n    }\n}\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nexport class LcsDiff {\n    /**\n     * Constructs the DiffFinder\n     */\n    constructor(originalSequence, modifiedSequence, continueProcessingPredicate = null) {\n        this.ContinueProcessingPredicate = continueProcessingPredicate;\n        this._originalSequence = originalSequence;\n        this._modifiedSequence = modifiedSequence;\n        const [originalStringElements, originalElementsOrHash, originalHasStrings] = LcsDiff._getElements(originalSequence);\n        const [modifiedStringElements, modifiedElementsOrHash, modifiedHasStrings] = LcsDiff._getElements(modifiedSequence);\n        this._hasStrings = (originalHasStrings && modifiedHasStrings);\n        this._originalStringElements = originalStringElements;\n        this._originalElementsOrHash = originalElementsOrHash;\n        this._modifiedStringElements = modifiedStringElements;\n        this._modifiedElementsOrHash = modifiedElementsOrHash;\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n    }\n    static _isStringArray(arr) {\n        return (arr.length > 0 && typeof arr[0] === 'string');\n    }\n    static _getElements(sequence) {\n        const elements = sequence.getElements();\n        if (LcsDiff._isStringArray(elements)) {\n            const hashes = new Int32Array(elements.length);\n            for (let i = 0, len = elements.length; i < len; i++) {\n                hashes[i] = stringHash(elements[i], 0);\n            }\n            return [elements, hashes, true];\n        }\n        if (elements instanceof Int32Array) {\n            return [[], elements, false];\n        }\n        return [[], new Int32Array(elements), false];\n    }\n    ElementsAreEqual(originalIndex, newIndex) {\n        if (this._originalElementsOrHash[originalIndex] !== this._modifiedElementsOrHash[newIndex]) {\n            return false;\n        }\n        return (this._hasStrings ? this._originalStringElements[originalIndex] === this._modifiedStringElements[newIndex] : true);\n    }\n    ElementsAreStrictEqual(originalIndex, newIndex) {\n        if (!this.ElementsAreEqual(originalIndex, newIndex)) {\n            return false;\n        }\n        const originalElement = LcsDiff._getStrictElement(this._originalSequence, originalIndex);\n        const modifiedElement = LcsDiff._getStrictElement(this._modifiedSequence, newIndex);\n        return (originalElement === modifiedElement);\n    }\n    static _getStrictElement(sequence, index) {\n        if (typeof sequence.getStrictElement === 'function') {\n            return sequence.getStrictElement(index);\n        }\n        return null;\n    }\n    OriginalElementsAreEqual(index1, index2) {\n        if (this._originalElementsOrHash[index1] !== this._originalElementsOrHash[index2]) {\n            return false;\n        }\n        return (this._hasStrings ? this._originalStringElements[index1] === this._originalStringElements[index2] : true);\n    }\n    ModifiedElementsAreEqual(index1, index2) {\n        if (this._modifiedElementsOrHash[index1] !== this._modifiedElementsOrHash[index2]) {\n            return false;\n        }\n        return (this._hasStrings ? this._modifiedStringElements[index1] === this._modifiedStringElements[index2] : true);\n    }\n    ComputeDiff(pretty) {\n        return this._ComputeDiff(0, this._originalElementsOrHash.length - 1, 0, this._modifiedElementsOrHash.length - 1, pretty);\n    }\n    /**\n     * Computes the differences between the original and modified input\n     * sequences on the bounded range.\n     * @returns An array of the differences between the two input sequences.\n     */\n    _ComputeDiff(originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n        const quitEarlyArr = [false];\n        let changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n        if (pretty) {\n            // We have to clean up the computed diff to be more intuitive\n            // but it turns out this cannot be done correctly until the entire set\n            // of diffs have been computed\n            changes = this.PrettifyChanges(changes);\n        }\n        return {\n            quitEarly: quitEarlyArr[0],\n            changes: changes\n        };\n    }\n    /**\n     * Private helper method which computes the differences on the bounded range\n     * recursively.\n     * @returns An array of the differences between the two input sequences.\n     */\n    ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n        quitEarlyArr[0] = false;\n        // Find the start of the differences\n        while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n            originalStart++;\n            modifiedStart++;\n        }\n        // Find the end of the differences\n        while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n            originalEnd--;\n            modifiedEnd--;\n        }\n        // In the special case where we either have all insertions or all deletions or the sequences are identical\n        if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n            let changes;\n            if (modifiedStart <= modifiedEnd) {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                // All insertions\n                changes = [\n                    new DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n                ];\n            }\n            else if (originalStart <= originalEnd) {\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // All deletions\n                changes = [\n                    new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n                ];\n            }\n            else {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // Identical sequences - No differences\n                changes = [];\n            }\n            return changes;\n        }\n        // This problem can be solved using the Divide-And-Conquer technique.\n        const midOriginalArr = [0];\n        const midModifiedArr = [0];\n        const result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n        const midOriginal = midOriginalArr[0];\n        const midModified = midModifiedArr[0];\n        if (result !== null) {\n            // Result is not-null when there was enough memory to compute the changes while\n            // searching for the recursion point\n            return result;\n        }\n        else if (!quitEarlyArr[0]) {\n            // We can break the problem down recursively by finding the changes in the\n            // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n            // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n            // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n            const leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n            let rightChanges = [];\n            if (!quitEarlyArr[0]) {\n                rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n            }\n            else {\n                // We didn't have time to finish the first half, so we don't have time to compute this half.\n                // Consider the entire rest of the sequence different.\n                rightChanges = [\n                    new DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n                ];\n            }\n            return this.ConcatenateChanges(leftChanges, rightChanges);\n        }\n        // If we hit here, we quit early, and so can't return anything meaningful\n        return [\n            new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n        ];\n    }\n    WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n        let forwardChanges = null;\n        let reverseChanges = null;\n        // First, walk backward through the forward diagonals history\n        let changeHelper = new DiffChangeHelper();\n        let diagonalMin = diagonalForwardStart;\n        let diagonalMax = diagonalForwardEnd;\n        let diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n        let lastOriginalIndex = -1073741824 /* Constants.MIN_SAFE_SMALL_INTEGER */;\n        let historyIndex = this.m_forwardHistory.length - 1;\n        do {\n            // Get the diagonal index from the relative diagonal number\n            const diagonal = diagonalRelative + diagonalForwardBase;\n            // Figure out where we came from\n            if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                // Vertical line (the element is an insert)\n                originalIndex = forwardPoints[diagonal + 1];\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex;\n                changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n                diagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            else {\n                // Horizontal line (the element is a deletion)\n                originalIndex = forwardPoints[diagonal - 1] + 1;\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex - 1;\n                changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n                diagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            if (historyIndex >= 0) {\n                forwardPoints = this.m_forwardHistory[historyIndex];\n                diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n                diagonalMin = 1;\n                diagonalMax = forwardPoints.length - 1;\n            }\n        } while (--historyIndex >= -1);\n        // Ironically, we get the forward changes as the reverse of the\n        // order we added them since we technically added them backwards\n        forwardChanges = changeHelper.getReverseChanges();\n        if (quitEarlyArr[0]) {\n            // TODO: Calculate a partial from the reverse diagonals.\n            //       For now, just assume everything after the midOriginal/midModified point is a diff\n            let originalStartPoint = midOriginalArr[0] + 1;\n            let modifiedStartPoint = midModifiedArr[0] + 1;\n            if (forwardChanges !== null && forwardChanges.length > 0) {\n                const lastForwardChange = forwardChanges[forwardChanges.length - 1];\n                originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n                modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n            }\n            reverseChanges = [\n                new DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n            ];\n        }\n        else {\n            // Now walk backward through the reverse diagonals history\n            changeHelper = new DiffChangeHelper();\n            diagonalMin = diagonalReverseStart;\n            diagonalMax = diagonalReverseEnd;\n            diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n            lastOriginalIndex = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n            historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n            do {\n                // Get the diagonal index from the relative diagonal number\n                const diagonal = diagonalRelative + diagonalReverseBase;\n                // Figure out where we came from\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    // Horizontal line (the element is a deletion))\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex + 1;\n                    changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                else {\n                    // Vertical line (the element is an insertion)\n                    originalIndex = reversePoints[diagonal - 1];\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex;\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                if (historyIndex >= 0) {\n                    reversePoints = this.m_reverseHistory[historyIndex];\n                    diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n                    diagonalMin = 1;\n                    diagonalMax = reversePoints.length - 1;\n                }\n            } while (--historyIndex >= -1);\n            // There are cases where the reverse history will find diffs that\n            // are correct, but not intuitive, so we need shift them.\n            reverseChanges = changeHelper.getChanges();\n        }\n        return this.ConcatenateChanges(forwardChanges, reverseChanges);\n    }\n    /**\n     * Given the range to compute the diff on, this method finds the point:\n     * (midOriginal, midModified)\n     * that exists in the middle of the LCS of the two sequences and\n     * is the point at which the LCS problem may be broken down recursively.\n     * This method will try to keep the LCS trace in memory. If the LCS recursion\n     * point is calculated and the full trace is available in memory, then this method\n     * will return the change list.\n     * @param originalStart The start bound of the original sequence range\n     * @param originalEnd The end bound of the original sequence range\n     * @param modifiedStart The start bound of the modified sequence range\n     * @param modifiedEnd The end bound of the modified sequence range\n     * @param midOriginal The middle point of the original sequence range\n     * @param midModified The middle point of the modified sequence range\n     * @returns The diff changes, if available, otherwise null\n     */\n    ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n        let originalIndex = 0, modifiedIndex = 0;\n        let diagonalForwardStart = 0, diagonalForwardEnd = 0;\n        let diagonalReverseStart = 0, diagonalReverseEnd = 0;\n        // To traverse the edit graph and produce the proper LCS, our actual\n        // start position is just outside the given boundary\n        originalStart--;\n        modifiedStart--;\n        // We set these up to make the compiler happy, but they will\n        // be replaced before we return with the actual recursion point\n        midOriginalArr[0] = 0;\n        midModifiedArr[0] = 0;\n        // Clear out the history\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n        // Each cell in the two arrays corresponds to a diagonal in the edit graph.\n        // The integer value in the cell represents the originalIndex of the furthest\n        // reaching point found so far that ends in that diagonal.\n        // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n        const maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n        const numDiagonals = maxDifferences + 1;\n        const forwardPoints = new Int32Array(numDiagonals);\n        const reversePoints = new Int32Array(numDiagonals);\n        // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n        // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n        const diagonalForwardBase = (modifiedEnd - modifiedStart);\n        const diagonalReverseBase = (originalEnd - originalStart);\n        // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalForwardBase)\n        // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalReverseBase)\n        const diagonalForwardOffset = (originalStart - modifiedStart);\n        const diagonalReverseOffset = (originalEnd - modifiedEnd);\n        // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n        //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n        // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n        const delta = diagonalReverseBase - diagonalForwardBase;\n        const deltaIsEven = (delta % 2 === 0);\n        // Here we set up the start and end points as the furthest points found so far\n        // in both the forward and reverse directions, respectively\n        forwardPoints[diagonalForwardBase] = originalStart;\n        reversePoints[diagonalReverseBase] = originalEnd;\n        // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n        quitEarlyArr[0] = false;\n        // A couple of points:\n        // --With this method, we iterate on the number of differences between the two sequences.\n        //   The more differences there actually are, the longer this will take.\n        // --Also, as the number of differences increases, we have to search on diagonals further\n        //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n        // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n        //   is even and odd diagonals only when numDifferences is odd.\n        for (let numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n            let furthestOriginalIndex = 0;\n            let furthestModifiedIndex = 0;\n            // Run the algorithm in the forward direction\n            diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            for (let diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalStart, modifiedStart)\n                if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                    originalIndex = forwardPoints[diagonal + 1];\n                }\n                else {\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n                // Save the current originalIndex so we can test for false overlap in step 3\n                const tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // so long as the elements are equal.\n                while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n                    originalIndex++;\n                    modifiedIndex++;\n                }\n                forwardPoints[diagonal] = originalIndex;\n                if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n                    furthestOriginalIndex = originalIndex;\n                    furthestModifiedIndex = modifiedIndex;\n                }\n                // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n                // and diagonal is in the range of reverse diagonals computed for numDifferences-1\n                // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n                // then check for overlap.\n                if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n                    if (originalIndex >= reversePoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex <= reversePoints[diagonal] && 1447 /* LocalConstants.MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* LocalConstants.MaxDifferencesHistory */ + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Check to see if we should be quitting early, before moving on to the next iteration.\n            const matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n            if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, matchLengthOfLongest)) {\n                // We can't finish, so skip ahead to generating a result from what we have.\n                quitEarlyArr[0] = true;\n                // Use the furthest distance we got in the forward direction.\n                midOriginalArr[0] = furthestOriginalIndex;\n                midModifiedArr[0] = furthestModifiedIndex;\n                if (matchLengthOfLongest > 0 && 1447 /* LocalConstants.MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* LocalConstants.MaxDifferencesHistory */ + 1)) {\n                    // Enough of the history is in memory to walk it backwards\n                    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                }\n                else {\n                    // We didn't actually remember enough of the history.\n                    //Since we are quitting the diff early, we need to shift back the originalStart and modified start\n                    //back into the boundary limits since we decremented their value above beyond the boundary limit.\n                    originalStart++;\n                    modifiedStart++;\n                    return [\n                        new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n                    ];\n                }\n            }\n            // Run the algorithm in the reverse direction\n            diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            for (let diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalEnd, modifiedEnd)\n                if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n                // Save the current originalIndex so we can test for false overlap\n                const tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // as long as the elements are equal.\n                while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n                    originalIndex--;\n                    modifiedIndex--;\n                }\n                reversePoints[diagonal] = originalIndex;\n                // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n                // and diagonal is in the range of forward diagonals computed for numDifferences\n                // then check for overlap.\n                if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n                    if (originalIndex <= forwardPoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex >= forwardPoints[diagonal] && 1447 /* LocalConstants.MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* LocalConstants.MaxDifferencesHistory */ + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Save current vectors to history before the next iteration\n            if (numDifferences <= 1447 /* LocalConstants.MaxDifferencesHistory */) {\n                // We are allocating space for one extra int, which we fill with\n                // the index of the diagonal base index\n                let temp = new Int32Array(diagonalForwardEnd - diagonalForwardStart + 2);\n                temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n                MyArray.Copy2(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n                this.m_forwardHistory.push(temp);\n                temp = new Int32Array(diagonalReverseEnd - diagonalReverseStart + 2);\n                temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n                MyArray.Copy2(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n                this.m_reverseHistory.push(temp);\n            }\n        }\n        // If we got here, then we have the full trace in history. We just have to convert it to a change list\n        // NOTE: This part is a bit messy\n        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n    }\n    /**\n     * Shifts the given changes to provide a more intuitive diff.\n     * While the first element in a diff matches the first element after the diff,\n     * we shift the diff down.\n     *\n     * @param changes The list of changes to shift\n     * @returns The shifted changes\n     */\n    PrettifyChanges(changes) {\n        // Shift all the changes down first\n        for (let i = 0; i < changes.length; i++) {\n            const change = changes[i];\n            const originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this._originalElementsOrHash.length;\n            const modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this._modifiedElementsOrHash.length;\n            const checkOriginal = change.originalLength > 0;\n            const checkModified = change.modifiedLength > 0;\n            while (change.originalStart + change.originalLength < originalStop\n                && change.modifiedStart + change.modifiedLength < modifiedStop\n                && (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength))\n                && (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n                const startStrictEqual = this.ElementsAreStrictEqual(change.originalStart, change.modifiedStart);\n                const endStrictEqual = this.ElementsAreStrictEqual(change.originalStart + change.originalLength, change.modifiedStart + change.modifiedLength);\n                if (endStrictEqual && !startStrictEqual) {\n                    // moving the change down would create an equal change, but the elements are not strict equal\n                    break;\n                }\n                change.originalStart++;\n                change.modifiedStart++;\n            }\n            const mergedChangeArr = [null];\n            if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n                changes[i] = mergedChangeArr[0];\n                changes.splice(i + 1, 1);\n                i--;\n                continue;\n            }\n        }\n        // Shift changes back up until we hit empty or whitespace-only lines\n        for (let i = changes.length - 1; i >= 0; i--) {\n            const change = changes[i];\n            let originalStop = 0;\n            let modifiedStop = 0;\n            if (i > 0) {\n                const prevChange = changes[i - 1];\n                originalStop = prevChange.originalStart + prevChange.originalLength;\n                modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n            }\n            const checkOriginal = change.originalLength > 0;\n            const checkModified = change.modifiedLength > 0;\n            let bestDelta = 0;\n            let bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n            for (let delta = 1;; delta++) {\n                const originalStart = change.originalStart - delta;\n                const modifiedStart = change.modifiedStart - delta;\n                if (originalStart < originalStop || modifiedStart < modifiedStop) {\n                    break;\n                }\n                if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n                    break;\n                }\n                if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n                    break;\n                }\n                const touchingPreviousChange = (originalStart === originalStop && modifiedStart === modifiedStop);\n                const score = ((touchingPreviousChange ? 5 : 0)\n                    + this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength));\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestDelta = delta;\n                }\n            }\n            change.originalStart -= bestDelta;\n            change.modifiedStart -= bestDelta;\n            const mergedChangeArr = [null];\n            if (i > 0 && this.ChangesOverlap(changes[i - 1], changes[i], mergedChangeArr)) {\n                changes[i - 1] = mergedChangeArr[0];\n                changes.splice(i, 1);\n                i++;\n                continue;\n            }\n        }\n        // There could be multiple longest common substrings.\n        // Give preference to the ones containing longer lines\n        if (this._hasStrings) {\n            for (let i = 1, len = changes.length; i < len; i++) {\n                const aChange = changes[i - 1];\n                const bChange = changes[i];\n                const matchedLength = bChange.originalStart - aChange.originalStart - aChange.originalLength;\n                const aOriginalStart = aChange.originalStart;\n                const bOriginalEnd = bChange.originalStart + bChange.originalLength;\n                const abOriginalLength = bOriginalEnd - aOriginalStart;\n                const aModifiedStart = aChange.modifiedStart;\n                const bModifiedEnd = bChange.modifiedStart + bChange.modifiedLength;\n                const abModifiedLength = bModifiedEnd - aModifiedStart;\n                // Avoid wasting a lot of time with these searches\n                if (matchedLength < 5 && abOriginalLength < 20 && abModifiedLength < 20) {\n                    const t = this._findBetterContiguousSequence(aOriginalStart, abOriginalLength, aModifiedStart, abModifiedLength, matchedLength);\n                    if (t) {\n                        const [originalMatchStart, modifiedMatchStart] = t;\n                        if (originalMatchStart !== aChange.originalStart + aChange.originalLength || modifiedMatchStart !== aChange.modifiedStart + aChange.modifiedLength) {\n                            // switch to another sequence that has a better score\n                            aChange.originalLength = originalMatchStart - aChange.originalStart;\n                            aChange.modifiedLength = modifiedMatchStart - aChange.modifiedStart;\n                            bChange.originalStart = originalMatchStart + matchedLength;\n                            bChange.modifiedStart = modifiedMatchStart + matchedLength;\n                            bChange.originalLength = bOriginalEnd - bChange.originalStart;\n                            bChange.modifiedLength = bModifiedEnd - bChange.modifiedStart;\n                        }\n                    }\n                }\n            }\n        }\n        return changes;\n    }\n    _findBetterContiguousSequence(originalStart, originalLength, modifiedStart, modifiedLength, desiredLength) {\n        if (originalLength < desiredLength || modifiedLength < desiredLength) {\n            return null;\n        }\n        const originalMax = originalStart + originalLength - desiredLength + 1;\n        const modifiedMax = modifiedStart + modifiedLength - desiredLength + 1;\n        let bestScore = 0;\n        let bestOriginalStart = 0;\n        let bestModifiedStart = 0;\n        for (let i = originalStart; i < originalMax; i++) {\n            for (let j = modifiedStart; j < modifiedMax; j++) {\n                const score = this._contiguousSequenceScore(i, j, desiredLength);\n                if (score > 0 && score > bestScore) {\n                    bestScore = score;\n                    bestOriginalStart = i;\n                    bestModifiedStart = j;\n                }\n            }\n        }\n        if (bestScore > 0) {\n            return [bestOriginalStart, bestModifiedStart];\n        }\n        return null;\n    }\n    _contiguousSequenceScore(originalStart, modifiedStart, length) {\n        let score = 0;\n        for (let l = 0; l < length; l++) {\n            if (!this.ElementsAreEqual(originalStart + l, modifiedStart + l)) {\n                return 0;\n            }\n            score += this._originalStringElements[originalStart + l].length;\n        }\n        return score;\n    }\n    _OriginalIsBoundary(index) {\n        if (index <= 0 || index >= this._originalElementsOrHash.length - 1) {\n            return true;\n        }\n        return (this._hasStrings && /^\\s*$/.test(this._originalStringElements[index]));\n    }\n    _OriginalRegionIsBoundary(originalStart, originalLength) {\n        if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n            return true;\n        }\n        if (originalLength > 0) {\n            const originalEnd = originalStart + originalLength;\n            if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    _ModifiedIsBoundary(index) {\n        if (index <= 0 || index >= this._modifiedElementsOrHash.length - 1) {\n            return true;\n        }\n        return (this._hasStrings && /^\\s*$/.test(this._modifiedStringElements[index]));\n    }\n    _ModifiedRegionIsBoundary(modifiedStart, modifiedLength) {\n        if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n            return true;\n        }\n        if (modifiedLength > 0) {\n            const modifiedEnd = modifiedStart + modifiedLength;\n            if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    _boundaryScore(originalStart, originalLength, modifiedStart, modifiedLength) {\n        const originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n        const modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n        return (originalScore + modifiedScore);\n    }\n    /**\n     * Concatenates the two input DiffChange lists and returns the resulting\n     * list.\n     * @param The left changes\n     * @param The right changes\n     * @returns The concatenated list\n     */\n    ConcatenateChanges(left, right) {\n        const mergedChangeArr = [];\n        if (left.length === 0 || right.length === 0) {\n            return (right.length > 0) ? right : left;\n        }\n        else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n            // Since we break the problem down recursively, it is possible that we\n            // might recurse in the middle of a change thereby splitting it into\n            // two changes. Here in the combining stage, we detect and fuse those\n            // changes back together\n            const result = new Array(left.length + right.length - 1);\n            MyArray.Copy(left, 0, result, 0, left.length - 1);\n            result[left.length - 1] = mergedChangeArr[0];\n            MyArray.Copy(right, 1, result, left.length, right.length - 1);\n            return result;\n        }\n        else {\n            const result = new Array(left.length + right.length);\n            MyArray.Copy(left, 0, result, 0, left.length);\n            MyArray.Copy(right, 0, result, left.length, right.length);\n            return result;\n        }\n    }\n    /**\n     * Returns true if the two changes overlap and can be merged into a single\n     * change\n     * @param left The left change\n     * @param right The right change\n     * @param mergedChange The merged change if the two overlap, null otherwise\n     * @returns True if the two changes overlap\n     */\n    ChangesOverlap(left, right, mergedChangeArr) {\n        Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n        Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n        if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n            const originalStart = left.originalStart;\n            let originalLength = left.originalLength;\n            const modifiedStart = left.modifiedStart;\n            let modifiedLength = left.modifiedLength;\n            if (left.originalStart + left.originalLength >= right.originalStart) {\n                originalLength = right.originalStart + right.originalLength - left.originalStart;\n            }\n            if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n            }\n            mergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n            return true;\n        }\n        else {\n            mergedChangeArr[0] = null;\n            return false;\n        }\n    }\n    /**\n     * Helper method used to clip a diagonal index to the range of valid\n     * diagonals. This also decides whether or not the diagonal index,\n     * if it exceeds the boundary, should be clipped to the boundary or clipped\n     * one inside the boundary depending on the Even/Odd status of the boundary\n     * and numDifferences.\n     * @param diagonal The index of the diagonal to clip.\n     * @param numDifferences The current number of differences being iterated upon.\n     * @param diagonalBaseIndex The base reference diagonal.\n     * @param numDiagonals The total number of diagonals.\n     * @returns The clipped diagonal index.\n     */\n    ClipDiagonalBound(diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n        if (diagonal >= 0 && diagonal < numDiagonals) {\n            // Nothing to clip, its in range\n            return diagonal;\n        }\n        // diagonalsBelow: The number of diagonals below the reference diagonal\n        // diagonalsAbove: The number of diagonals above the reference diagonal\n        const diagonalsBelow = diagonalBaseIndex;\n        const diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n        const diffEven = (numDifferences % 2 === 0);\n        if (diagonal < 0) {\n            const lowerBoundEven = (diagonalsBelow % 2 === 0);\n            return (diffEven === lowerBoundEven) ? 0 : 1;\n        }\n        else {\n            const upperBoundEven = (diagonalsAbove % 2 === 0);\n            return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { globals, isMacintosh, isWindows } from './platform.js';\nlet safeProcess;\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n    const sandboxProcess = globals.vscode.process;\n    safeProcess = {\n        get platform() { return sandboxProcess.platform; },\n        get arch() { return sandboxProcess.arch; },\n        get env() { return sandboxProcess.env; },\n        cwd() { return sandboxProcess.cwd(); }\n    };\n}\n// Native node.js environment\nelse if (typeof process !== 'undefined') {\n    safeProcess = {\n        get platform() { return process.platform; },\n        get arch() { return process.arch; },\n        get env() { return process.env; },\n        cwd() { return process.env['VSCODE_CWD'] || process.cwd(); }\n    };\n}\n// Web environment\nelse {\n    safeProcess = {\n        // Supported\n        get platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n        get arch() { return undefined; /* arch is undefined in web */ },\n        // Unsupported\n        get env() { return {}; },\n        cwd() { return '/'; }\n    };\n}\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n *\n * @skipMangle\n */\nexport const cwd = safeProcess.cwd;\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v16.14.2/lib/path.js\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nimport * as process from './process.js';\nconst CHAR_UPPERCASE_A = 65; /* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\nclass ErrorInvalidArgType extends Error {\n    constructor(name, expected, actual) {\n        // determiner: 'must be' or 'must not be'\n        let determiner;\n        if (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n            determiner = 'must not be';\n            expected = expected.replace(/^not /, '');\n        }\n        else {\n            determiner = 'must be';\n        }\n        const type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n        let msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n        msg += `. Received type ${typeof actual}`;\n        super(msg);\n        this.code = 'ERR_INVALID_ARG_TYPE';\n    }\n}\nfunction validateObject(pathObject, name) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n        throw new ErrorInvalidArgType(name, 'Object', pathObject);\n    }\n}\nfunction validateString(value, name) {\n    if (typeof value !== 'string') {\n        throw new ErrorInvalidArgType(name, 'string', value);\n    }\n}\nconst platformIsWin32 = (process.platform === 'win32');\nfunction isPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\nfunction isPosixPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH;\n}\nfunction isWindowsDeviceRoot(code) {\n    return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n        (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\n    let res = '';\n    let lastSegmentLength = 0;\n    let lastSlash = -1;\n    let dots = 0;\n    let code = 0;\n    for (let i = 0; i <= path.length; ++i) {\n        if (i < path.length) {\n            code = path.charCodeAt(i);\n        }\n        else if (isPathSeparator(code)) {\n            break;\n        }\n        else {\n            code = CHAR_FORWARD_SLASH;\n        }\n        if (isPathSeparator(code)) {\n            if (lastSlash === i - 1 || dots === 1) {\n                // NOOP\n            }\n            else if (dots === 2) {\n                if (res.length < 2 || lastSegmentLength !== 2 ||\n                    res.charCodeAt(res.length - 1) !== CHAR_DOT ||\n                    res.charCodeAt(res.length - 2) !== CHAR_DOT) {\n                    if (res.length > 2) {\n                        const lastSlashIndex = res.lastIndexOf(separator);\n                        if (lastSlashIndex === -1) {\n                            res = '';\n                            lastSegmentLength = 0;\n                        }\n                        else {\n                            res = res.slice(0, lastSlashIndex);\n                            lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n                        }\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                    else if (res.length !== 0) {\n                        res = '';\n                        lastSegmentLength = 0;\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot) {\n                    res += res.length > 0 ? `${separator}..` : '..';\n                    lastSegmentLength = 2;\n                }\n            }\n            else {\n                if (res.length > 0) {\n                    res += `${separator}${path.slice(lastSlash + 1, i)}`;\n                }\n                else {\n                    res = path.slice(lastSlash + 1, i);\n                }\n                lastSegmentLength = i - lastSlash - 1;\n            }\n            lastSlash = i;\n            dots = 0;\n        }\n        else if (code === CHAR_DOT && dots !== -1) {\n            ++dots;\n        }\n        else {\n            dots = -1;\n        }\n    }\n    return res;\n}\nfunction _format(sep, pathObject) {\n    validateObject(pathObject, 'pathObject');\n    const dir = pathObject.dir || pathObject.root;\n    const base = pathObject.base ||\n        `${pathObject.name || ''}${pathObject.ext || ''}`;\n    if (!dir) {\n        return base;\n    }\n    return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\nexport const win32 = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedDevice = '';\n        let resolvedTail = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1; i--) {\n            let path;\n            if (i >= 0) {\n                path = pathSegments[i];\n                validateString(path, 'path');\n                // Skip empty entries\n                if (path.length === 0) {\n                    continue;\n                }\n            }\n            else if (resolvedDevice.length === 0) {\n                path = process.cwd();\n            }\n            else {\n                // Windows has the concept of drive-specific current working\n                // directories. If we've resolved a drive letter but not yet an\n                // absolute path, get cwd for that drive, or the process cwd if\n                // the drive cwd is not available. We're sure the device is not\n                // a UNC path at this points, because UNC paths are always absolute.\n                path = process.env[`=${resolvedDevice}`] || process.cwd();\n                // Verify that a cwd was found and that it actually points\n                // to our drive. If not, default to the drive's root.\n                if (path === undefined ||\n                    (path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n                        path.charCodeAt(2) === CHAR_BACKWARD_SLASH)) {\n                    path = `${resolvedDevice}\\\\`;\n                }\n            }\n            const len = path.length;\n            let rootEnd = 0;\n            let device = '';\n            let isAbsolute = false;\n            const code = path.charCodeAt(0);\n            // Try to match a root\n            if (len === 1) {\n                if (isPathSeparator(code)) {\n                    // `path` contains just a path separator\n                    rootEnd = 1;\n                    isAbsolute = true;\n                }\n            }\n            else if (isPathSeparator(code)) {\n                // Possible UNC root\n                // If we started with a separator, we know we at least have an\n                // absolute path of some kind (UNC or otherwise)\n                isAbsolute = true;\n                if (isPathSeparator(path.charCodeAt(1))) {\n                    // Matched double path separator at beginning\n                    let j = 2;\n                    let last = j;\n                    // Match 1 or more non-path separators\n                    while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        const firstPart = path.slice(last, j);\n                        // Matched!\n                        last = j;\n                        // Match 1 or more path separators\n                        while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j < len && j !== last) {\n                            // Matched!\n                            last = j;\n                            // Match 1 or more non-path separators\n                            while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                                j++;\n                            }\n                            if (j === len || j !== last) {\n                                // We matched a UNC root\n                                device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                                rootEnd = j;\n                            }\n                        }\n                    }\n                }\n                else {\n                    rootEnd = 1;\n                }\n            }\n            else if (isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON) {\n                // Possible device root\n                device = path.slice(0, 2);\n                rootEnd = 2;\n                if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                    // Treat separator following drive name as an absolute path\n                    // indicator\n                    isAbsolute = true;\n                    rootEnd = 3;\n                }\n            }\n            if (device.length > 0) {\n                if (resolvedDevice.length > 0) {\n                    if (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n                        // This path points to another device so it is not applicable\n                        continue;\n                    }\n                }\n                else {\n                    resolvedDevice = device;\n                }\n            }\n            if (resolvedAbsolute) {\n                if (resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n            else {\n                resolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n                resolvedAbsolute = isAbsolute;\n                if (isAbsolute && resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n        }\n        // At this point the path should be resolved to a full absolute path,\n        // but handle relative paths to be safe (might happen when process.cwd()\n        // fails)\n        // Normalize the tail path\n        resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\', isPathSeparator);\n        return resolvedAbsolute ?\n            `${resolvedDevice}\\\\${resolvedTail}` :\n            `${resolvedDevice}${resolvedTail}` || '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = 0;\n        let device;\n        let isAbsolute = false;\n        const code = path.charCodeAt(0);\n        // Try to match a root\n        if (len === 1) {\n            // `path` contains just a single char, exit early to avoid\n            // unnecessary work\n            return isPosixPathSeparator(code) ? '\\\\' : path;\n        }\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            // If we started with a separator, we know we at least have an absolute\n            // path of some kind (UNC or otherwise)\n            isAbsolute = true;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    const firstPart = path.slice(last, j);\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            // Return the normalized version of the UNC root since there\n                            // is nothing left to process\n                            return `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                            rootEnd = j;\n                        }\n                    }\n                }\n            }\n            else {\n                rootEnd = 1;\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            device = path.slice(0, 2);\n            rootEnd = 2;\n            if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                // Treat separator following drive name as an absolute path\n                // indicator\n                isAbsolute = true;\n                rootEnd = 3;\n            }\n        }\n        let tail = rootEnd < len ?\n            normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n            '';\n        if (tail.length === 0 && !isAbsolute) {\n            tail = '.';\n        }\n        if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n            tail += '\\\\';\n        }\n        if (device === undefined) {\n            return isAbsolute ? `\\\\${tail}` : tail;\n        }\n        return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return false;\n        }\n        const code = path.charCodeAt(0);\n        return isPathSeparator(code) ||\n            // Possible device root\n            (len > 2 &&\n                isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON &&\n                isPathSeparator(path.charCodeAt(2)));\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        let firstPart;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = firstPart = arg;\n                }\n                else {\n                    joined += `\\\\${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        // Make sure that the joined path doesn't start with two slashes, because\n        // normalize() will mistake it for a UNC path then.\n        //\n        // This step is skipped when it is very clear that the user actually\n        // intended to point at a UNC path. This is assumed when the first\n        // non-empty string arguments starts with exactly two slashes followed by\n        // at least one more non-slash character.\n        //\n        // Note that for normalize() to treat a path as a UNC path it needs to\n        // have at least 2 components, so we don't filter for that here.\n        // This means that the user can use join to construct UNC paths from\n        // a server name and a share name; for example:\n        //   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n        let needsReplace = true;\n        let slashCount = 0;\n        if (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n            ++slashCount;\n            const firstLen = firstPart.length;\n            if (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n                ++slashCount;\n                if (firstLen > 2) {\n                    if (isPathSeparator(firstPart.charCodeAt(2))) {\n                        ++slashCount;\n                    }\n                    else {\n                        // We matched a UNC path in the first part\n                        needsReplace = false;\n                    }\n                }\n            }\n        }\n        if (needsReplace) {\n            // Find any more consecutive slashes we need to replace\n            while (slashCount < joined.length &&\n                isPathSeparator(joined.charCodeAt(slashCount))) {\n                slashCount++;\n            }\n            // Replace the slashes if needed\n            if (slashCount >= 2) {\n                joined = `\\\\${joined.slice(slashCount)}`;\n            }\n        }\n        return win32.normalize(joined);\n    },\n    // It will solve the relative path from `from` to `to`, for instance:\n    //  from = 'C:\\\\orandea\\\\test\\\\aaa'\n    //  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n    // The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        const fromOrig = win32.resolve(from);\n        const toOrig = win32.resolve(to);\n        if (fromOrig === toOrig) {\n            return '';\n        }\n        from = fromOrig.toLowerCase();\n        to = toOrig.toLowerCase();\n        if (from === to) {\n            return '';\n        }\n        // Trim any leading backslashes\n        let fromStart = 0;\n        while (fromStart < from.length &&\n            from.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n            fromStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let fromEnd = from.length;\n        while (fromEnd - 1 > fromStart &&\n            from.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n            fromEnd--;\n        }\n        const fromLen = fromEnd - fromStart;\n        // Trim any leading backslashes\n        let toStart = 0;\n        while (toStart < to.length &&\n            to.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            toStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let toEnd = to.length;\n        while (toEnd - 1 > toStart &&\n            to.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n            toEnd--;\n        }\n        const toLen = toEnd - toStart;\n        // Compare paths to find the longest common path from root\n        const length = fromLen < toLen ? fromLen : toLen;\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_BACKWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        // We found a mismatch before the first common path separator was seen, so\n        // return the original `to`.\n        if (i !== length) {\n            if (lastCommonSep === -1) {\n                return toOrig;\n            }\n        }\n        else {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n                    return toOrig.slice(toStart + i + 1);\n                }\n                if (i === 2) {\n                    // We get here if `from` is the device root.\n                    // For example: from='C:\\\\'; to='C:\\\\foo'\n                    return toOrig.slice(toStart + i);\n                }\n            }\n            if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n                    lastCommonSep = i;\n                }\n                else if (i === 2) {\n                    // We get here if `to` is the device root.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n                    lastCommonSep = 3;\n                }\n            }\n            if (lastCommonSep === -1) {\n                lastCommonSep = 0;\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to` and\n        // `from`\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n                out += out.length === 0 ? '..' : '\\\\..';\n            }\n        }\n        toStart += lastCommonSep;\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts\n        if (out.length > 0) {\n            return `${out}${toOrig.slice(toStart, toEnd)}`;\n        }\n        if (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            ++toStart;\n        }\n        return toOrig.slice(toStart, toEnd);\n    },\n    toNamespacedPath(path) {\n        // Note: this will *probably* throw somewhere.\n        if (typeof path !== 'string' || path.length === 0) {\n            return path;\n        }\n        const resolvedPath = win32.resolve(path);\n        if (resolvedPath.length <= 2) {\n            return path;\n        }\n        if (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n            // Possible UNC root\n            if (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n                const code = resolvedPath.charCodeAt(2);\n                if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n                    // Matched non-long UNC root, convert the path to a long UNC path\n                    return `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n            resolvedPath.charCodeAt(1) === CHAR_COLON &&\n            resolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n            // Matched device root, convert the path to a long UNC path\n            return `\\\\\\\\?\\\\${resolvedPath}`;\n        }\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = -1;\n        let offset = 0;\n        const code = path.charCodeAt(0);\n        if (len === 1) {\n            // `path` contains just a path separator, exit early to avoid\n            // unnecessary work or a dot.\n            return isPathSeparator(code) ? path : '.';\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = offset = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            return path;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            // Offset by 1 to include the separator after the UNC root to\n                            // treat it as a \"normal root\" on top of a (UNC) root\n                            rootEnd = offset = j + 1;\n                        }\n                    }\n                }\n            }\n            // Possible device root\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            rootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n            offset = rootEnd;\n        }\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = len - 1; i >= offset; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            if (rootEnd === -1) {\n                return '.';\n            }\n            end = rootEnd;\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            isWindowsDeviceRoot(path.charCodeAt(0)) &&\n            path.charCodeAt(1) === CHAR_COLON) {\n            start = 2;\n        }\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= start; --i) {\n                const code = path.charCodeAt(i);\n                if (isPathSeparator(code)) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= start; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let start = 0;\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            path.charCodeAt(1) === CHAR_COLON &&\n            isWindowsDeviceRoot(path.charCodeAt(0))) {\n            start = startPart = 2;\n        }\n        for (let i = path.length - 1; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '\\\\'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const len = path.length;\n        let rootEnd = 0;\n        let code = path.charCodeAt(0);\n        if (len === 1) {\n            if (isPathSeparator(code)) {\n                // `path` contains just a path separator, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            ret.base = ret.name = path;\n            return ret;\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            rootEnd = j;\n                        }\n                        else if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            rootEnd = j + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            if (len <= 2) {\n                // `path` contains just a drive root, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            rootEnd = 2;\n            if (isPathSeparator(path.charCodeAt(2))) {\n                if (len === 3) {\n                    // `path` contains just a drive root, exit early to avoid\n                    // unnecessary work\n                    ret.root = ret.dir = path;\n                    return ret;\n                }\n                rootEnd = 3;\n            }\n        }\n        if (rootEnd > 0) {\n            ret.root = path.slice(0, rootEnd);\n        }\n        let startDot = -1;\n        let startPart = rootEnd;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= rootEnd; --i) {\n            code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(startPart, end);\n            }\n            else {\n                ret.name = path.slice(startPart, startDot);\n                ret.base = path.slice(startPart, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        // If the directory is the root, use the entire root as the `dir` including\n        // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n        // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n        if (startPart > 0 && startPart !== rootEnd) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else {\n            ret.dir = ret.root;\n        }\n        return ret;\n    },\n    sep: '\\\\',\n    delimiter: ';',\n    win32: null,\n    posix: null\n};\nconst posixCwd = (() => {\n    if (platformIsWin32) {\n        // Converts Windows' backslash path separators to POSIX forward slashes\n        // and truncates any drive indicator\n        const regexp = /\\\\/g;\n        return () => {\n            const cwd = process.cwd().replace(regexp, '/');\n            return cwd.slice(cwd.indexOf('/'));\n        };\n    }\n    // We're already on POSIX, no need for any transformations\n    return () => process.cwd();\n})();\nexport const posix = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedPath = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            const path = i >= 0 ? pathSegments[i] : posixCwd();\n            validateString(path, 'path');\n            // Skip empty entries\n            if (path.length === 0) {\n                continue;\n            }\n            resolvedPath = `${path}/${resolvedPath}`;\n            resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        // Normalize the path\n        resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/', isPosixPathSeparator);\n        if (resolvedAbsolute) {\n            return `/${resolvedPath}`;\n        }\n        return resolvedPath.length > 0 ? resolvedPath : '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        const trailingSeparator = path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n        // Normalize the path\n        path = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n        if (path.length === 0) {\n            if (isAbsolute) {\n                return '/';\n            }\n            return trailingSeparator ? './' : '.';\n        }\n        if (trailingSeparator) {\n            path += '/';\n        }\n        return isAbsolute ? `/${path}` : path;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = arg;\n                }\n                else {\n                    joined += `/${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        return posix.normalize(joined);\n    },\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        // Trim leading forward slashes.\n        from = posix.resolve(from);\n        to = posix.resolve(to);\n        if (from === to) {\n            return '';\n        }\n        const fromStart = 1;\n        const fromEnd = from.length;\n        const fromLen = fromEnd - fromStart;\n        const toStart = 1;\n        const toLen = to.length - toStart;\n        // Compare paths to find the longest common path from root\n        const length = (fromLen < toLen ? fromLen : toLen);\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_FORWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        if (i === length) {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='/foo/bar'; to='/foo/bar/baz'\n                    return to.slice(toStart + i + 1);\n                }\n                if (i === 0) {\n                    // We get here if `from` is the root\n                    // For example: from='/'; to='/foo'\n                    return to.slice(toStart + i);\n                }\n            }\n            else if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='/foo/bar/baz'; to='/foo/bar'\n                    lastCommonSep = i;\n                }\n                else if (i === 0) {\n                    // We get here if `to` is the root.\n                    // For example: from='/foo/bar'; to='/'\n                    lastCommonSep = 0;\n                }\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to`\n        // and `from`.\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                out += out.length === 0 ? '..' : '/..';\n            }\n        }\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts.\n        return `${out}${to.slice(toStart + lastCommonSep)}`;\n    },\n    toNamespacedPath(path) {\n        // Non-op on posix systems\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = path.length - 1; i >= 1; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            return hasRoot ? '/' : '.';\n        }\n        if (hasRoot && end === 1) {\n            return '//';\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= 0; --i) {\n                const code = path.charCodeAt(i);\n                if (code === CHAR_FORWARD_SLASH) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= 0; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        for (let i = path.length - 1; i >= 0; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '/'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let start;\n        if (isAbsolute) {\n            ret.root = '/';\n            start = 1;\n        }\n        else {\n            start = 0;\n        }\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            const start = startPart === 0 && isAbsolute ? 1 : startPart;\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(start, end);\n            }\n            else {\n                ret.name = path.slice(start, startDot);\n                ret.base = path.slice(start, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        if (startPart > 0) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else if (isAbsolute) {\n            ret.dir = '/';\n        }\n        return ret;\n    },\n    sep: '/',\n    delimiter: ':',\n    win32: null,\n    posix: null\n};\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\nexport const normalize = (platformIsWin32 ? win32.normalize : posix.normalize);\nexport const resolve = (platformIsWin32 ? win32.resolve : posix.resolve);\nexport const relative = (platformIsWin32 ? win32.relative : posix.relative);\nexport const dirname = (platformIsWin32 ? win32.dirname : posix.dirname);\nexport const basename = (platformIsWin32 ? win32.basename : posix.basename);\nexport const extname = (platformIsWin32 ? win32.extname : posix.extname);\nexport const sep = (platformIsWin32 ? win32.sep : posix.sep);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as paths from './path.js';\nimport { isWindows } from './platform.js';\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme && _strict) {\n        throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme, _strict) {\n    if (!scheme && !_strict) {\n        return 'file';\n    }\n    return scheme;\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI {\n    static isUri(thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'string'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    }\n    /**\n     * @internal\n     */\n    constructor(schemeOrData, authority, path, query, fragment, _strict = false) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    // ---- filesystem path -----------------------\n    /**\n     * Returns a string representing the corresponding file system path of this URI.\n     * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n     * platform specific path separator.\n     *\n     * * Will *not* validate the path for invalid characters and semantics.\n     * * Will *not* look at the scheme of this URI.\n     * * The result shall *not* be used for display purposes but for accessing a file on disk.\n     *\n     *\n     * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n     * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n     *\n     * ```ts\n        const u = URI.parse('file://server/c$/folder/file.txt')\n        u.authority === 'server'\n        u.path === '/shares/c$/file.txt'\n        u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n    ```\n     *\n     * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n     * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n     * with URIs that represent files on disk (`file` scheme).\n     */\n    get fsPath() {\n        // if (this.scheme !== 'file') {\n        // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n        // }\n        return uriToFsPath(this, false);\n    }\n    // ---- modify to new -------------------------\n    with(change) {\n        if (!change) {\n            return this;\n        }\n        let { scheme, authority, path, query, fragment } = change;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new Uri(scheme, authority, path, query, fragment);\n    }\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.example.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    static parse(value, _strict = false) {\n        const match = _regexp.exec(value);\n        if (!match) {\n            return new Uri(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new Uri(match[2] || _empty, percentDecode(match[4] || _empty), percentDecode(match[5] || _empty), percentDecode(match[7] || _empty), percentDecode(match[9] || _empty), _strict);\n    }\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    static file(path) {\n        let authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            const idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new Uri('file', authority, path, _empty, _empty);\n    }\n    /**\n     * Creates new URI from uri components.\n     *\n     * Unless `strict` is `true` the scheme is defaults to be `file`. This function performs\n     * validation and should be used for untrusted uri components retrieved from storage,\n     * user input, command arguments etc\n     */\n    static from(components, strict) {\n        const result = new Uri(components.scheme, components.authority, components.path, components.query, components.fragment, strict);\n        return result;\n    }\n    /**\n     * Join a URI path with path fragments and normalizes the resulting path.\n     *\n     * @param uri The input URI.\n     * @param pathFragment The path fragment to add to the URI path.\n     * @returns The resulting URI.\n     */\n    static joinPath(uri, ...pathFragment) {\n        if (!uri.path) {\n            throw new Error(`[UriError]: cannot call joinPath on URI without path`);\n        }\n        let newPath;\n        if (isWindows && uri.scheme === 'file') {\n            newPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n        }\n        else {\n            newPath = paths.posix.join(uri.path, ...pathFragment);\n        }\n        return uri.with({ path: newPath });\n    }\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    toString(skipEncoding = false) {\n        return _asFormatted(this, skipEncoding);\n    }\n    toJSON() {\n        return this;\n    }\n    static revive(data) {\n        var _a, _b;\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            const result = new Uri(data);\n            result._formatted = (_a = data.external) !== null && _a !== void 0 ? _a : null;\n            result._fsPath = data._sep === _pathSepMarker ? (_b = data.fsPath) !== null && _b !== void 0 ? _b : null : null;\n            return result;\n        }\n    }\n}\nconst _pathSepMarker = isWindows ? 1 : undefined;\n// This class exists so that URI is compatible with vscode.Uri (API).\nclass Uri extends URI {\n    constructor() {\n        super(...arguments);\n        this._formatted = null;\n        this._fsPath = null;\n    }\n    get fsPath() {\n        if (!this._fsPath) {\n            this._fsPath = uriToFsPath(this, false);\n        }\n        return this._fsPath;\n    }\n    toString(skipEncoding = false) {\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    }\n    toJSON() {\n        const res = {\n            $mid: 1 /* MarshalledId.Uri */\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n            res._sep = _pathSepMarker;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        //--- uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        // TODO\n        // this isn't correct and can violate the UriComponents contract but\n        // this is part of the vscode.Uri API and we shouldn't change how that\n        // works anymore\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    }\n}\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable = {\n    [58 /* CharCode.Colon */]: '%3A', // gen-delims\n    [47 /* CharCode.Slash */]: '%2F',\n    [63 /* CharCode.QuestionMark */]: '%3F',\n    [35 /* CharCode.Hash */]: '%23',\n    [91 /* CharCode.OpenSquareBracket */]: '%5B',\n    [93 /* CharCode.CloseSquareBracket */]: '%5D',\n    [64 /* CharCode.AtSign */]: '%40',\n    [33 /* CharCode.ExclamationMark */]: '%21', // sub-delims\n    [36 /* CharCode.DollarSign */]: '%24',\n    [38 /* CharCode.Ampersand */]: '%26',\n    [39 /* CharCode.SingleQuote */]: '%27',\n    [40 /* CharCode.OpenParen */]: '%28',\n    [41 /* CharCode.CloseParen */]: '%29',\n    [42 /* CharCode.Asterisk */]: '%2A',\n    [43 /* CharCode.Plus */]: '%2B',\n    [44 /* CharCode.Comma */]: '%2C',\n    [59 /* CharCode.Semicolon */]: '%3B',\n    [61 /* CharCode.Equals */]: '%3D',\n    [32 /* CharCode.Space */]: '%20',\n};\nfunction encodeURIComponentFast(uriComponent, isPath, isAuthority) {\n    let res = undefined;\n    let nativeEncodePos = -1;\n    for (let pos = 0; pos < uriComponent.length; pos++) {\n        const code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* CharCode.a */ && code <= 122 /* CharCode.z */)\n            || (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */)\n            || (code >= 48 /* CharCode.Digit0 */ && code <= 57 /* CharCode.Digit9 */)\n            || code === 45 /* CharCode.Dash */\n            || code === 46 /* CharCode.Period */\n            || code === 95 /* CharCode.Underline */\n            || code === 126 /* CharCode.Tilde */\n            || (isPath && code === 47 /* CharCode.Slash */)\n            || (isAuthority && code === 91 /* CharCode.OpenSquareBracket */)\n            || (isAuthority && code === 93 /* CharCode.CloseSquareBracket */)\n            || (isAuthority && code === 58 /* CharCode.Colon */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            const escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    let res = undefined;\n    for (let pos = 0; pos < path.length; pos++) {\n        const code = path.charCodeAt(pos);\n        if (code === 35 /* CharCode.Hash */ || code === 63 /* CharCode.QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri, keepDriveLetterCasing) {\n    let value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = `//${uri.authority}${uri.path}`;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* CharCode.Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* CharCode.A */ && uri.path.charCodeAt(1) <= 90 /* CharCode.Z */ || uri.path.charCodeAt(1) >= 97 /* CharCode.a */ && uri.path.charCodeAt(1) <= 122 /* CharCode.z */)\n        && uri.path.charCodeAt(2) === 58 /* CharCode.Colon */) {\n        if (!keepDriveLetterCasing) {\n            // windows drive letter: file:///c:/far/boo\n            value = uri.path[1].toLowerCase() + uri.path.substr(2);\n        }\n        else {\n            value = uri.path.substr(1);\n        }\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    const encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    let res = '';\n    let { scheme, authority, path, query, fragment } = uri;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        let idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            const userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.lastIndexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false, false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false, true);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.lastIndexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false, true);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false, true);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* CharCode.Slash */ && path.charCodeAt(2) === 58 /* CharCode.Colon */) {\n            const code = path.charCodeAt(1);\n            if (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */) {\n                path = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* CharCode.Colon */) {\n            const code = path.charCodeAt(0);\n            if (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */) {\n                path = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true, false);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false, false) : fragment;\n    }\n    return res;\n}\n// --- decode\nfunction decodeURIComponentGraceful(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch (_a) {\n        if (str.length > 3) {\n            return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n        }\n        else {\n            return str;\n        }\n    }\n}\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\nfunction percentDecode(str) {\n    if (!str.match(_rEncodedAsHex)) {\n        return str;\n    }\n    return str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * A position in the editor.\n */\nexport class Position {\n    constructor(lineNumber, column) {\n        this.lineNumber = lineNumber;\n        this.column = column;\n    }\n    /**\n     * Create a new position from this position.\n     *\n     * @param newLineNumber new line number\n     * @param newColumn new column\n     */\n    with(newLineNumber = this.lineNumber, newColumn = this.column) {\n        if (newLineNumber === this.lineNumber && newColumn === this.column) {\n            return this;\n        }\n        else {\n            return new Position(newLineNumber, newColumn);\n        }\n    }\n    /**\n     * Derive a new position from this position.\n     *\n     * @param deltaLineNumber line number delta\n     * @param deltaColumn column delta\n     */\n    delta(deltaLineNumber = 0, deltaColumn = 0) {\n        return this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n    }\n    /**\n     * Test if this position equals other position\n     */\n    equals(other) {\n        return Position.equals(this, other);\n    }\n    /**\n     * Test if position `a` equals position `b`\n     */\n    static equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.lineNumber === b.lineNumber &&\n            a.column === b.column);\n    }\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be false.\n     */\n    isBefore(other) {\n        return Position.isBefore(this, other);\n    }\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be false.\n     */\n    static isBefore(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column < b.column;\n    }\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be true.\n     */\n    isBeforeOrEqual(other) {\n        return Position.isBeforeOrEqual(this, other);\n    }\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be true.\n     */\n    static isBeforeOrEqual(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column <= b.column;\n    }\n    /**\n     * A function that compares positions, useful for sorting\n     */\n    static compare(a, b) {\n        const aLineNumber = a.lineNumber | 0;\n        const bLineNumber = b.lineNumber | 0;\n        if (aLineNumber === bLineNumber) {\n            const aColumn = a.column | 0;\n            const bColumn = b.column | 0;\n            return aColumn - bColumn;\n        }\n        return aLineNumber - bLineNumber;\n    }\n    /**\n     * Clone this position.\n     */\n    clone() {\n        return new Position(this.lineNumber, this.column);\n    }\n    /**\n     * Convert to a human-readable representation.\n     */\n    toString() {\n        return '(' + this.lineNumber + ',' + this.column + ')';\n    }\n    // ---\n    /**\n     * Create a `Position` from an `IPosition`.\n     */\n    static lift(pos) {\n        return new Position(pos.lineNumber, pos.column);\n    }\n    /**\n     * Test if `obj` is an `IPosition`.\n     */\n    static isIPosition(obj) {\n        return (obj\n            && (typeof obj.lineNumber === 'number')\n            && (typeof obj.column === 'number'));\n    }\n}\n","/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail(array, n = 0) {\n    return array[array.length - (1 + n)];\n}\nexport function tail2(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function equals(one, other, itemEquals = (a, b) => a === b) {\n    if (one === other) {\n        return true;\n    }\n    if (!one || !other) {\n        return false;\n    }\n    if (one.length !== other.length) {\n        return false;\n    }\n    for (let i = 0, len = one.length; i < len; i++) {\n        if (!itemEquals(one[i], other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Remove the element at `index` by replacing it with the last element. This is faster than `splice`\n * but changes the order of the array\n */\nexport function removeFastWithoutKeepingOrder(array, index) {\n    const last = array.length - 1;\n    if (index < last) {\n        array[index] = array[last];\n    }\n    array.pop();\n}\n/**\n * Performs a binary search algorithm over a sorted array.\n *\n * @param array The array being searched.\n * @param key The value we search for.\n * @param comparator A function that takes two array elements and returns zero\n *   if they are equal, a negative number if the first element precedes the\n *   second one in the sorting order, or a positive number if the second element\n *   precedes the first one.\n * @return See {@link binarySearch2}\n */\nexport function binarySearch(array, key, comparator) {\n    return binarySearch2(array.length, i => comparator(array[i], key));\n}\n/**\n * Performs a binary search algorithm over a sorted collection. Useful for cases\n * when we need to perform a binary search over something that isn't actually an\n * array, and converting data to an array would defeat the use of binary search\n * in the first place.\n *\n * @param length The collection length.\n * @param compareToKey A function that takes an index of an element in the\n *   collection and returns zero if the value at this index is equal to the\n *   search key, a negative number if the value precedes the search key in the\n *   sorting order, or a positive number if the search key precedes the value.\n * @return A non-negative index of an element, if found. If not found, the\n *   result is -(n+1) (or ~n, using bitwise notation), where n is the index\n *   where the key should be inserted to maintain the sorting order.\n */\nexport function binarySearch2(length, compareToKey) {\n    let low = 0, high = length - 1;\n    while (low <= high) {\n        const mid = ((low + high) / 2) | 0;\n        const comp = compareToKey(mid);\n        if (comp < 0) {\n            low = mid + 1;\n        }\n        else if (comp > 0) {\n            high = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return -(low + 1);\n}\nexport function quickSelect(nth, data, compare) {\n    nth = nth | 0;\n    if (nth >= data.length) {\n        throw new TypeError('invalid index');\n    }\n    const pivotValue = data[Math.floor(data.length * Math.random())];\n    const lower = [];\n    const higher = [];\n    const pivots = [];\n    for (const value of data) {\n        const val = compare(value, pivotValue);\n        if (val < 0) {\n            lower.push(value);\n        }\n        else if (val > 0) {\n            higher.push(value);\n        }\n        else {\n            pivots.push(value);\n        }\n    }\n    if (nth < lower.length) {\n        return quickSelect(nth, lower, compare);\n    }\n    else if (nth < lower.length + pivots.length) {\n        return pivots[0];\n    }\n    else {\n        return quickSelect(nth - (lower.length + pivots.length), higher, compare);\n    }\n}\nexport function groupBy(data, compare) {\n    const result = [];\n    let currentGroup = undefined;\n    for (const element of data.slice(0).sort(compare)) {\n        if (!currentGroup || compare(currentGroup[0], element) !== 0) {\n            currentGroup = [element];\n            result.push(currentGroup);\n        }\n        else {\n            currentGroup.push(element);\n        }\n    }\n    return result;\n}\n/**\n * Splits the given items into a list of (non-empty) groups.\n * `shouldBeGrouped` is used to decide if two consecutive items should be in the same group.\n * The order of the items is preserved.\n */\nexport function* groupAdjacentBy(items, shouldBeGrouped) {\n    let currentGroup;\n    let last;\n    for (const item of items) {\n        if (last !== undefined && shouldBeGrouped(last, item)) {\n            currentGroup.push(item);\n        }\n        else {\n            if (currentGroup) {\n                yield currentGroup;\n            }\n            currentGroup = [item];\n        }\n        last = item;\n    }\n    if (currentGroup) {\n        yield currentGroup;\n    }\n}\nexport function forEachAdjacent(arr, f) {\n    for (let i = 0; i <= arr.length; i++) {\n        f(i === 0 ? undefined : arr[i - 1], i === arr.length ? undefined : arr[i]);\n    }\n}\nexport function forEachWithNeighbors(arr, f) {\n    for (let i = 0; i < arr.length; i++) {\n        f(i === 0 ? undefined : arr[i - 1], arr[i], i + 1 === arr.length ? undefined : arr[i + 1]);\n    }\n}\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce(array) {\n    return array.filter(e => !!e);\n}\n/**\n * Remove all falsy values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace(array) {\n    let to = 0;\n    for (let i = 0; i < array.length; i++) {\n        if (!!array[i]) {\n            array[to] = array[i];\n            to += 1;\n        }\n    }\n    array.length = to;\n}\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj) {\n    return !Array.isArray(obj) || obj.length === 0;\n}\nexport function isNonEmptyArray(obj) {\n    return Array.isArray(obj) && obj.length > 0;\n}\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equality by returning an alternate value for each.\n */\nexport function distinct(array, keyFn = value => value) {\n    const seen = new Set();\n    return array.filter(element => {\n        const key = keyFn(element);\n        if (seen.has(key)) {\n            return false;\n        }\n        seen.add(key);\n        return true;\n    });\n}\nexport function firstOrDefault(array, notFoundValue) {\n    return array.length > 0 ? array[0] : notFoundValue;\n}\nexport function range(arg, to) {\n    let from = typeof to === 'number' ? arg : 0;\n    if (typeof to === 'number') {\n        from = arg;\n    }\n    else {\n        from = 0;\n        to = arg;\n    }\n    const result = [];\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert(target, insertIndex, insertArr) {\n    const before = target.slice(0, insertIndex);\n    const after = target.slice(insertIndex);\n    return before.concat(insertArr, after);\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function pushMany(arr, items) {\n    for (const item of items) {\n        arr.push(item);\n    }\n}\nexport function asArray(x) {\n    return Array.isArray(x) ? x : [x];\n}\n/**\n * Insert the new items in the array.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start inserting elements.\n * @param newItems The items to be inserted\n */\nexport function insertInto(array, start, newItems) {\n    const startIdx = getActualStartIndex(array, start);\n    const originalLength = array.length;\n    const newItemsLength = newItems.length;\n    array.length = originalLength + newItemsLength;\n    // Move the items after the start index, start from the end so that we don't overwrite any value.\n    for (let i = originalLength - 1; i >= startIdx; i--) {\n        array[i + newItemsLength] = array[i];\n    }\n    for (let i = 0; i < newItemsLength; i++) {\n        array[i + startIdx] = newItems[i];\n    }\n}\n/**\n * Removes elements from an array and inserts new elements in their place, returning the deleted elements. Alternative to the native Array.splice method, it\n * can only support limited number of items due to the maximum call stack size limit.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start removing elements.\n * @param deleteCount The number of elements to remove.\n * @returns An array containing the elements that were deleted.\n */\nexport function splice(array, start, deleteCount, newItems) {\n    const index = getActualStartIndex(array, start);\n    let result = array.splice(index, deleteCount);\n    if (result === undefined) {\n        // see https://bugs.webkit.org/show_bug.cgi?id=261140\n        result = [];\n    }\n    insertInto(array, index, newItems);\n    return result;\n}\n/**\n * Determine the actual start index (same logic as the native splice() or slice())\n * If greater than the length of the array, start will be set to the length of the array. In this case, no element will be deleted but the method will behave as an adding function, adding as many element as item[n*] provided.\n * If negative, it will begin that many elements from the end of the array. (In this case, the origin -1, meaning -n is the index of the nth last element, and is therefore equivalent to the index of array.length - n.) If array.length + start is less than 0, it will begin from index 0.\n * @param array The target array.\n * @param start The operation index.\n */\nfunction getActualStartIndex(array, start) {\n    return start < 0 ? Math.max(start + array.length, 0) : Math.min(start, array.length);\n}\nexport var CompareResult;\n(function (CompareResult) {\n    function isLessThan(result) {\n        return result < 0;\n    }\n    CompareResult.isLessThan = isLessThan;\n    function isLessThanOrEqual(result) {\n        return result <= 0;\n    }\n    CompareResult.isLessThanOrEqual = isLessThanOrEqual;\n    function isGreaterThan(result) {\n        return result > 0;\n    }\n    CompareResult.isGreaterThan = isGreaterThan;\n    function isNeitherLessOrGreaterThan(result) {\n        return result === 0;\n    }\n    CompareResult.isNeitherLessOrGreaterThan = isNeitherLessOrGreaterThan;\n    CompareResult.greaterThan = 1;\n    CompareResult.lessThan = -1;\n    CompareResult.neitherLessOrGreaterThan = 0;\n})(CompareResult || (CompareResult = {}));\nexport function compareBy(selector, comparator) {\n    return (a, b) => comparator(selector(a), selector(b));\n}\nexport function tieBreakComparators(...comparators) {\n    return (item1, item2) => {\n        for (const comparator of comparators) {\n            const result = comparator(item1, item2);\n            if (!CompareResult.isNeitherLessOrGreaterThan(result)) {\n                return result;\n            }\n        }\n        return CompareResult.neitherLessOrGreaterThan;\n    };\n}\n/**\n * The natural order on numbers.\n*/\nexport const numberComparator = (a, b) => a - b;\nexport const booleanComparator = (a, b) => numberComparator(a ? 1 : 0, b ? 1 : 0);\nexport function reverseOrder(comparator) {\n    return (a, b) => -comparator(a, b);\n}\nexport class ArrayQueue {\n    /**\n     * Constructs a queue that is backed by the given array. Runtime is O(1).\n    */\n    constructor(items) {\n        this.items = items;\n        this.firstIdx = 0;\n        this.lastIdx = this.items.length - 1;\n    }\n    get length() {\n        return this.lastIdx - this.firstIdx + 1;\n    }\n    /**\n     * Consumes elements from the beginning of the queue as long as the predicate returns true.\n     * If no elements were consumed, `null` is returned. Has a runtime of O(result.length).\n    */\n    takeWhile(predicate) {\n        // P(k) := k <= this.lastIdx && predicate(this.items[k])\n        // Find s := min { k | k >= this.firstIdx && !P(k) } and return this.data[this.firstIdx...s)\n        let startIdx = this.firstIdx;\n        while (startIdx < this.items.length && predicate(this.items[startIdx])) {\n            startIdx++;\n        }\n        const result = startIdx === this.firstIdx ? null : this.items.slice(this.firstIdx, startIdx);\n        this.firstIdx = startIdx;\n        return result;\n    }\n    /**\n     * Consumes elements from the end of the queue as long as the predicate returns true.\n     * If no elements were consumed, `null` is returned.\n     * The result has the same order as the underlying array!\n    */\n    takeFromEndWhile(predicate) {\n        // P(k) := this.firstIdx >= k && predicate(this.items[k])\n        // Find s := max { k | k <= this.lastIdx && !P(k) } and return this.data(s...this.lastIdx]\n        let endIdx = this.lastIdx;\n        while (endIdx >= 0 && predicate(this.items[endIdx])) {\n            endIdx--;\n        }\n        const result = endIdx === this.lastIdx ? null : this.items.slice(endIdx + 1, this.lastIdx + 1);\n        this.lastIdx = endIdx;\n        return result;\n    }\n    peek() {\n        if (this.length === 0) {\n            return undefined;\n        }\n        return this.items[this.firstIdx];\n    }\n    dequeue() {\n        const result = this.items[this.firstIdx];\n        this.firstIdx++;\n        return result;\n    }\n    takeCount(count) {\n        const result = this.items.slice(this.firstIdx, this.firstIdx + count);\n        this.firstIdx += count;\n        return result;\n    }\n}\n/**\n * This class is faster than an iterator and array for lazy computed data.\n*/\nexport class CallbackIterable {\n    constructor(\n    /**\n     * Calls the callback for every item.\n     * Stops when the callback returns false.\n    */\n    iterate) {\n        this.iterate = iterate;\n    }\n    toArray() {\n        const result = [];\n        this.iterate(item => { result.push(item); return true; });\n        return result;\n    }\n    filter(predicate) {\n        return new CallbackIterable(cb => this.iterate(item => predicate(item) ? cb(item) : true));\n    }\n    map(mapFn) {\n        return new CallbackIterable(cb => this.iterate(item => cb(mapFn(item))));\n    }\n    findLast(predicate) {\n        let result;\n        this.iterate(item => {\n            if (predicate(item)) {\n                result = item;\n            }\n            return true;\n        });\n        return result;\n    }\n    findLastMaxBy(comparator) {\n        let result;\n        let first = true;\n        this.iterate(item => {\n            if (first || CompareResult.isGreaterThan(comparator(item, result))) {\n                first = false;\n                result = item;\n            }\n            return true;\n        });\n        return result;\n    }\n}\nCallbackIterable.empty = new CallbackIterable(_callback => { });\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nexport class Range {\n    constructor(startLineNumber, startColumn, endLineNumber, endColumn) {\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n            this.startLineNumber = endLineNumber;\n            this.startColumn = endColumn;\n            this.endLineNumber = startLineNumber;\n            this.endColumn = startColumn;\n        }\n        else {\n            this.startLineNumber = startLineNumber;\n            this.startColumn = startColumn;\n            this.endLineNumber = endLineNumber;\n            this.endColumn = endColumn;\n        }\n    }\n    /**\n     * Test if this range is empty.\n     */\n    isEmpty() {\n        return Range.isEmpty(this);\n    }\n    /**\n     * Test if `range` is empty.\n     */\n    static isEmpty(range) {\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n    }\n    /**\n     * Test if position is in this range. If the position is at the edges, will return true.\n     */\n    containsPosition(position) {\n        return Range.containsPosition(this, position);\n    }\n    /**\n     * Test if `position` is in `range`. If the position is at the edges, will return true.\n     */\n    static containsPosition(range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Test if `position` is in `range`. If the position is at the edges, will return false.\n     * @internal\n     */\n    static strictContainsPosition(range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column <= range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column >= range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Test if range is in this range. If the range is equal to this range, will return true.\n     */\n    containsRange(range) {\n        return Range.containsRange(this, range);\n    }\n    /**\n     * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n     */\n    static containsRange(range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Test if `range` is strictly in this range. `range` must start after and end before this range for the result to be true.\n     */\n    strictContainsRange(range) {\n        return Range.strictContainsRange(this, range);\n    }\n    /**\n     * Test if `otherRange` is strictly in `range` (must start after, and end before). If the ranges are equal, will return false.\n     */\n    static strictContainsRange(range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn <= range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn >= range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    plusRange(range) {\n        return Range.plusRange(this, range);\n    }\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    static plusRange(a, b) {\n        let startLineNumber;\n        let startColumn;\n        let endLineNumber;\n        let endColumn;\n        if (b.startLineNumber < a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = b.startColumn;\n        }\n        else if (b.startLineNumber === a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = Math.min(b.startColumn, a.startColumn);\n        }\n        else {\n            startLineNumber = a.startLineNumber;\n            startColumn = a.startColumn;\n        }\n        if (b.endLineNumber > a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = b.endColumn;\n        }\n        else if (b.endLineNumber === a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = Math.max(b.endColumn, a.endColumn);\n        }\n        else {\n            endLineNumber = a.endLineNumber;\n            endColumn = a.endColumn;\n        }\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n    }\n    /**\n     * A intersection of the two ranges.\n     */\n    intersectRanges(range) {\n        return Range.intersectRanges(this, range);\n    }\n    /**\n     * A intersection of the two ranges.\n     */\n    static intersectRanges(a, b) {\n        let resultStartLineNumber = a.startLineNumber;\n        let resultStartColumn = a.startColumn;\n        let resultEndLineNumber = a.endLineNumber;\n        let resultEndColumn = a.endColumn;\n        const otherStartLineNumber = b.startLineNumber;\n        const otherStartColumn = b.startColumn;\n        const otherEndLineNumber = b.endLineNumber;\n        const otherEndColumn = b.endColumn;\n        if (resultStartLineNumber < otherStartLineNumber) {\n            resultStartLineNumber = otherStartLineNumber;\n            resultStartColumn = otherStartColumn;\n        }\n        else if (resultStartLineNumber === otherStartLineNumber) {\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n        }\n        if (resultEndLineNumber > otherEndLineNumber) {\n            resultEndLineNumber = otherEndLineNumber;\n            resultEndColumn = otherEndColumn;\n        }\n        else if (resultEndLineNumber === otherEndLineNumber) {\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n        }\n        // Check if selection is now empty\n        if (resultStartLineNumber > resultEndLineNumber) {\n            return null;\n        }\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n            return null;\n        }\n        return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n    }\n    /**\n     * Test if this range equals other.\n     */\n    equalsRange(other) {\n        return Range.equalsRange(this, other);\n    }\n    /**\n     * Test if range `a` equals `b`.\n     */\n    static equalsRange(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.startLineNumber === b.startLineNumber &&\n            a.startColumn === b.startColumn &&\n            a.endLineNumber === b.endLineNumber &&\n            a.endColumn === b.endColumn);\n    }\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    getEndPosition() {\n        return Range.getEndPosition(this);\n    }\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    static getEndPosition(range) {\n        return new Position(range.endLineNumber, range.endColumn);\n    }\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    getStartPosition() {\n        return Range.getStartPosition(this);\n    }\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    static getStartPosition(range) {\n        return new Position(range.startLineNumber, range.startColumn);\n    }\n    /**\n     * Transform to a user presentable string representation.\n     */\n    toString() {\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n    }\n    /**\n     * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n     */\n    setEndPosition(endLineNumber, endColumn) {\n        return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n    }\n    /**\n     * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n     */\n    setStartPosition(startLineNumber, startColumn) {\n        return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n    }\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    collapseToStart() {\n        return Range.collapseToStart(this);\n    }\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    static collapseToStart(range) {\n        return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n    }\n    /**\n     * Create a new empty range using this range's end position.\n     */\n    collapseToEnd() {\n        return Range.collapseToEnd(this);\n    }\n    /**\n     * Create a new empty range using this range's end position.\n     */\n    static collapseToEnd(range) {\n        return new Range(range.endLineNumber, range.endColumn, range.endLineNumber, range.endColumn);\n    }\n    /**\n     * Moves the range by the given amount of lines.\n     */\n    delta(lineCount) {\n        return new Range(this.startLineNumber + lineCount, this.startColumn, this.endLineNumber + lineCount, this.endColumn);\n    }\n    // ---\n    static fromPositions(start, end = start) {\n        return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n    }\n    static lift(range) {\n        if (!range) {\n            return null;\n        }\n        return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n    }\n    /**\n     * Test if `obj` is an `IRange`.\n     */\n    static isIRange(obj) {\n        return (obj\n            && (typeof obj.startLineNumber === 'number')\n            && (typeof obj.startColumn === 'number')\n            && (typeof obj.endLineNumber === 'number')\n            && (typeof obj.endColumn === 'number'));\n    }\n    /**\n     * Test if the two ranges are touching in any way.\n     */\n    static areIntersectingOrTouching(a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    }\n    /**\n     * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n     */\n    static areIntersecting(a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    }\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the startPosition and then on the endPosition\n     */\n    static compareRangesUsingStarts(a, b) {\n        if (a && b) {\n            const aStartLineNumber = a.startLineNumber | 0;\n            const bStartLineNumber = b.startLineNumber | 0;\n            if (aStartLineNumber === bStartLineNumber) {\n                const aStartColumn = a.startColumn | 0;\n                const bStartColumn = b.startColumn | 0;\n                if (aStartColumn === bStartColumn) {\n                    const aEndLineNumber = a.endLineNumber | 0;\n                    const bEndLineNumber = b.endLineNumber | 0;\n                    if (aEndLineNumber === bEndLineNumber) {\n                        const aEndColumn = a.endColumn | 0;\n                        const bEndColumn = b.endColumn | 0;\n                        return aEndColumn - bEndColumn;\n                    }\n                    return aEndLineNumber - bEndLineNumber;\n                }\n                return aStartColumn - bStartColumn;\n            }\n            return aStartLineNumber - bStartLineNumber;\n        }\n        const aExists = (a ? 1 : 0);\n        const bExists = (b ? 1 : 0);\n        return aExists - bExists;\n    }\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the endPosition and then on the startPosition\n     */\n    static compareRangesUsingEnds(a, b) {\n        if (a.endLineNumber === b.endLineNumber) {\n            if (a.endColumn === b.endColumn) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.startColumn - b.startColumn;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return a.endColumn - b.endColumn;\n        }\n        return a.endLineNumber - b.endLineNumber;\n    }\n    /**\n     * Test if the range spans multiple lines.\n     */\n    static spansMultipleLines(range) {\n        return range.endLineNumber > range.startLineNumber;\n    }\n    toJSON() {\n        return this;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 /* Constants.MAX_UINT_8 */) {\n        return 255 /* Constants.MAX_UINT_8 */;\n    }\n    return v | 0;\n}\nexport function toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 /* Constants.MAX_UINT_32 */) {\n        return 4294967295 /* Constants.MAX_UINT_32 */;\n    }\n    return v | 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { arrayInsert } from '../../../base/common/arrays.js';\nimport { toUint32 } from '../../../base/common/uint.js';\nexport class PrefixSumComputer {\n    constructor(values) {\n        this.values = values;\n        this.prefixSum = new Uint32Array(values.length);\n        this.prefixSumValidIndex = new Int32Array(1);\n        this.prefixSumValidIndex[0] = -1;\n    }\n    insertValues(insertIndex, insertValues) {\n        insertIndex = toUint32(insertIndex);\n        const oldValues = this.values;\n        const oldPrefixSum = this.prefixSum;\n        const insertValuesLen = insertValues.length;\n        if (insertValuesLen === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length + insertValuesLen);\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n        this.values.set(insertValues, insertIndex);\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = insertIndex - 1;\n        }\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    }\n    setValue(index, value) {\n        index = toUint32(index);\n        value = toUint32(value);\n        if (this.values[index] === value) {\n            return false;\n        }\n        this.values[index] = value;\n        if (index - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = index - 1;\n        }\n        return true;\n    }\n    removeValues(startIndex, count) {\n        startIndex = toUint32(startIndex);\n        count = toUint32(count);\n        const oldValues = this.values;\n        const oldPrefixSum = this.prefixSum;\n        if (startIndex >= oldValues.length) {\n            return false;\n        }\n        const maxCount = oldValues.length - startIndex;\n        if (count >= maxCount) {\n            count = maxCount;\n        }\n        if (count === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length - count);\n        this.values.set(oldValues.subarray(0, startIndex), 0);\n        this.values.set(oldValues.subarray(startIndex + count), startIndex);\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = startIndex - 1;\n        }\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    }\n    getTotalSum() {\n        if (this.values.length === 0) {\n            return 0;\n        }\n        return this._getPrefixSum(this.values.length - 1);\n    }\n    /**\n     * Returns the sum of the first `index + 1` many items.\n     * @returns `SUM(0 <= j <= index, values[j])`.\n     */\n    getPrefixSum(index) {\n        if (index < 0) {\n            return 0;\n        }\n        index = toUint32(index);\n        return this._getPrefixSum(index);\n    }\n    _getPrefixSum(index) {\n        if (index <= this.prefixSumValidIndex[0]) {\n            return this.prefixSum[index];\n        }\n        let startIndex = this.prefixSumValidIndex[0] + 1;\n        if (startIndex === 0) {\n            this.prefixSum[0] = this.values[0];\n            startIndex++;\n        }\n        if (index >= this.values.length) {\n            index = this.values.length - 1;\n        }\n        for (let i = startIndex; i <= index; i++) {\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n        }\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n        return this.prefixSum[index];\n    }\n    getIndexOf(sum) {\n        sum = Math.floor(sum);\n        // Compute all sums (to get a fully valid prefixSum)\n        this.getTotalSum();\n        let low = 0;\n        let high = this.values.length - 1;\n        let mid = 0;\n        let midStop = 0;\n        let midStart = 0;\n        while (low <= high) {\n            mid = low + ((high - low) / 2) | 0;\n            midStop = this.prefixSum[mid];\n            midStart = midStop - this.values[mid];\n            if (sum < midStart) {\n                high = mid - 1;\n            }\n            else if (sum >= midStop) {\n                low = mid + 1;\n            }\n            else {\n                break;\n            }\n        }\n        return new PrefixSumIndexOfResult(mid, sum - midStart);\n    }\n}\n/**\n * {@link getIndexOf} has an amortized runtime complexity of O(1).\n *\n * ({@link PrefixSumComputer.getIndexOf} is just  O(log n))\n*/\nexport class ConstantTimePrefixSumComputer {\n    constructor(values) {\n        this._values = values;\n        this._isValid = false;\n        this._validEndIndex = -1;\n        this._prefixSum = [];\n        this._indexBySum = [];\n    }\n    /**\n     * @returns SUM(0 <= j < values.length, values[j])\n     */\n    getTotalSum() {\n        this._ensureValid();\n        return this._indexBySum.length;\n    }\n    /**\n     * Returns the sum of the first `count` many items.\n     * @returns `SUM(0 <= j < count, values[j])`.\n     */\n    getPrefixSum(count) {\n        this._ensureValid();\n        if (count === 0) {\n            return 0;\n        }\n        return this._prefixSum[count - 1];\n    }\n    /**\n     * @returns `result`, such that `getPrefixSum(result.index) + result.remainder = sum`\n     */\n    getIndexOf(sum) {\n        this._ensureValid();\n        const idx = this._indexBySum[sum];\n        const viewLinesAbove = idx > 0 ? this._prefixSum[idx - 1] : 0;\n        return new PrefixSumIndexOfResult(idx, sum - viewLinesAbove);\n    }\n    removeValues(start, deleteCount) {\n        this._values.splice(start, deleteCount);\n        this._invalidate(start);\n    }\n    insertValues(insertIndex, insertArr) {\n        this._values = arrayInsert(this._values, insertIndex, insertArr);\n        this._invalidate(insertIndex);\n    }\n    _invalidate(index) {\n        this._isValid = false;\n        this._validEndIndex = Math.min(this._validEndIndex, index - 1);\n    }\n    _ensureValid() {\n        if (this._isValid) {\n            return;\n        }\n        for (let i = this._validEndIndex + 1, len = this._values.length; i < len; i++) {\n            const value = this._values[i];\n            const sumAbove = i > 0 ? this._prefixSum[i - 1] : 0;\n            this._prefixSum[i] = sumAbove + value;\n            for (let j = 0; j < value; j++) {\n                this._indexBySum[sumAbove + j] = i;\n            }\n        }\n        // trim things\n        this._prefixSum.length = this._values.length;\n        this._indexBySum.length = this._prefixSum[this._prefixSum.length - 1];\n        // mark as valid\n        this._isValid = true;\n        this._validEndIndex = this._values.length - 1;\n    }\n    setValue(index, value) {\n        if (this._values[index] === value) {\n            // no change\n            return;\n        }\n        this._values[index] = value;\n        this._invalidate(index);\n    }\n}\nexport class PrefixSumIndexOfResult {\n    constructor(index, remainder) {\n        this.index = index;\n        this.remainder = remainder;\n        this._prefixSumIndexOfResultBrand = undefined;\n        this.index = index;\n        this.remainder = remainder;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { splitLines } from '../../../base/common/strings.js';\nimport { Position } from '../core/position.js';\nimport { PrefixSumComputer } from './prefixSumComputer.js';\nexport class MirrorTextModel {\n    constructor(uri, lines, eol, versionId) {\n        this._uri = uri;\n        this._lines = lines;\n        this._eol = eol;\n        this._versionId = versionId;\n        this._lineStarts = null;\n        this._cachedTextValue = null;\n    }\n    dispose() {\n        this._lines.length = 0;\n    }\n    get version() {\n        return this._versionId;\n    }\n    getText() {\n        if (this._cachedTextValue === null) {\n            this._cachedTextValue = this._lines.join(this._eol);\n        }\n        return this._cachedTextValue;\n    }\n    onEvents(e) {\n        if (e.eol && e.eol !== this._eol) {\n            this._eol = e.eol;\n            this._lineStarts = null;\n        }\n        // Update my lines\n        const changes = e.changes;\n        for (const change of changes) {\n            this._acceptDeleteRange(change.range);\n            this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n        }\n        this._versionId = e.versionId;\n        this._cachedTextValue = null;\n    }\n    _ensureLineStarts() {\n        if (!this._lineStarts) {\n            const eolLength = this._eol.length;\n            const linesLength = this._lines.length;\n            const lineStartValues = new Uint32Array(linesLength);\n            for (let i = 0; i < linesLength; i++) {\n                lineStartValues[i] = this._lines[i].length + eolLength;\n            }\n            this._lineStarts = new PrefixSumComputer(lineStartValues);\n        }\n    }\n    /**\n     * All changes to a line's text go through this method\n     */\n    _setLineText(lineIndex, newValue) {\n        this._lines[lineIndex] = newValue;\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.setValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n        }\n    }\n    _acceptDeleteRange(range) {\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                // Nothing to delete\n                return;\n            }\n            // Delete text on the affected line\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n            return;\n        }\n        // Take remaining text on last line and append it to remaining text on first line\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n        // Delete middle lines\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        }\n    }\n    _acceptInsertText(position, insertText) {\n        if (insertText.length === 0) {\n            // Nothing to insert\n            return;\n        }\n        const insertLines = splitLines(insertText);\n        if (insertLines.length === 1) {\n            // Inserting text on one line\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                + insertLines[0]\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\n            return;\n        }\n        // Append overflowing text from first line to the end of text to insert\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n        // Delete overflowing text from first line and insert text on first line\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n            + insertLines[0]);\n        // Insert new lines & store lengths\n        const newLengths = new Uint32Array(insertLines.length - 1);\n        for (let i = 1; i < insertLines.length; i++) {\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\n        }\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nexport const USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords = '') {\n    let source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n    for (const sep of USUAL_WORD_SEPARATORS) {\n        if (allowInWords.indexOf(sep) >= 0) {\n            continue;\n        }\n        source += '\\\\' + sep;\n    }\n    source += '\\\\s]+)';\n    return new RegExp(source, 'g');\n}\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport const DEFAULT_WORD_REGEXP = createWordRegExp();\nexport function ensureValidWordDefinition(wordDefinition) {\n    let result = DEFAULT_WORD_REGEXP;\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\n        if (!wordDefinition.global) {\n            let flags = 'g';\n            if (wordDefinition.ignoreCase) {\n                flags += 'i';\n            }\n            if (wordDefinition.multiline) {\n                flags += 'm';\n            }\n            if (wordDefinition.unicode) {\n                flags += 'u';\n            }\n            result = new RegExp(wordDefinition.source, flags);\n        }\n        else {\n            result = wordDefinition;\n        }\n    }\n    result.lastIndex = 0;\n    return result;\n}\nconst _defaultConfig = new LinkedList();\n_defaultConfig.unshift({\n    maxLen: 1000,\n    windowSize: 15,\n    timeBudget: 150\n});\nexport function getWordAtText(column, wordDefinition, text, textOffset, config) {\n    if (!config) {\n        config = Iterable.first(_defaultConfig);\n    }\n    if (text.length > config.maxLen) {\n        // don't throw strings that long at the regexp\n        // but use a sub-string in which a word must occur\n        let start = column - config.maxLen / 2;\n        if (start < 0) {\n            start = 0;\n        }\n        else {\n            textOffset += start;\n        }\n        text = text.substring(start, column + config.maxLen / 2);\n        return getWordAtText(column, wordDefinition, text, textOffset, config);\n    }\n    const t1 = Date.now();\n    const pos = column - 1 - textOffset;\n    let prevRegexIndex = -1;\n    let match = null;\n    for (let i = 1;; i++) {\n        // check time budget\n        if (Date.now() - t1 >= config.timeBudget) {\n            break;\n        }\n        // reset the index at which the regexp should start matching, also know where it\n        // should stop so that subsequent search don't repeat previous searches\n        const regexIndex = pos - config.windowSize * i;\n        wordDefinition.lastIndex = Math.max(0, regexIndex);\n        const thisMatch = _findRegexMatchEnclosingPosition(wordDefinition, text, pos, prevRegexIndex);\n        if (!thisMatch && match) {\n            // stop: we have something\n            break;\n        }\n        match = thisMatch;\n        // stop: searched at start\n        if (regexIndex <= 0) {\n            break;\n        }\n        prevRegexIndex = regexIndex;\n    }\n    if (match) {\n        const result = {\n            word: match[0],\n            startColumn: textOffset + 1 + match.index,\n            endColumn: textOffset + 1 + match.index + match[0].length\n        };\n        wordDefinition.lastIndex = 0;\n        return result;\n    }\n    return null;\n}\nfunction _findRegexMatchEnclosingPosition(wordDefinition, text, pos, stopPos) {\n    let match;\n    while (match = wordDefinition.exec(text)) {\n        const matchIndex = match.index || 0;\n        if (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n            return match;\n        }\n        else if (stopPos > 0 && matchIndex > stopPos) {\n            return null;\n        }\n    }\n    return null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint8 } from '../../../base/common/uint.js';\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nexport class CharacterClassifier {\n    constructor(_defaultValue) {\n        const defaultValue = toUint8(_defaultValue);\n        this._defaultValue = defaultValue;\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n        this._map = new Map();\n    }\n    static _createAsciiMap(defaultValue) {\n        const asciiMap = new Uint8Array(256);\n        asciiMap.fill(defaultValue);\n        return asciiMap;\n    }\n    set(charCode, _value) {\n        const value = toUint8(_value);\n        if (charCode >= 0 && charCode < 256) {\n            this._asciiMap[charCode] = value;\n        }\n        else {\n            this._map.set(charCode, value);\n        }\n    }\n    get(charCode) {\n        if (charCode >= 0 && charCode < 256) {\n            return this._asciiMap[charCode];\n        }\n        else {\n            return (this._map.get(charCode) || this._defaultValue);\n        }\n    }\n    clear() {\n        this._asciiMap.fill(this._defaultValue);\n        this._map.clear();\n    }\n}\nexport class CharacterSet {\n    constructor() {\n        this._actual = new CharacterClassifier(0 /* Boolean.False */);\n    }\n    add(charCode) {\n        this._actual.set(charCode, 1 /* Boolean.True */);\n    }\n    has(charCode) {\n        return (this._actual.get(charCode) === 1 /* Boolean.True */);\n    }\n    clear() {\n        return this._actual.clear();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CharacterClassifier } from '../core/characterClassifier.js';\nclass Uint8Matrix {\n    constructor(rows, cols, defaultValue) {\n        const data = new Uint8Array(rows * cols);\n        for (let i = 0, len = rows * cols; i < len; i++) {\n            data[i] = defaultValue;\n        }\n        this._data = data;\n        this.rows = rows;\n        this.cols = cols;\n    }\n    get(row, col) {\n        return this._data[row * this.cols + col];\n    }\n    set(row, col, value) {\n        this._data[row * this.cols + col] = value;\n    }\n}\nexport class StateMachine {\n    constructor(edges) {\n        let maxCharCode = 0;\n        let maxState = 0 /* State.Invalid */;\n        for (let i = 0, len = edges.length; i < len; i++) {\n            const [from, chCode, to] = edges[i];\n            if (chCode > maxCharCode) {\n                maxCharCode = chCode;\n            }\n            if (from > maxState) {\n                maxState = from;\n            }\n            if (to > maxState) {\n                maxState = to;\n            }\n        }\n        maxCharCode++;\n        maxState++;\n        const states = new Uint8Matrix(maxState, maxCharCode, 0 /* State.Invalid */);\n        for (let i = 0, len = edges.length; i < len; i++) {\n            const [from, chCode, to] = edges[i];\n            states.set(from, chCode, to);\n        }\n        this._states = states;\n        this._maxCharCode = maxCharCode;\n    }\n    nextState(currentState, chCode) {\n        if (chCode < 0 || chCode >= this._maxCharCode) {\n            return 0 /* State.Invalid */;\n        }\n        return this._states.get(currentState, chCode);\n    }\n}\n// State machine for http:// or https:// or file://\nlet _stateMachine = null;\nfunction getStateMachine() {\n    if (_stateMachine === null) {\n        _stateMachine = new StateMachine([\n            [1 /* State.Start */, 104 /* CharCode.h */, 2 /* State.H */],\n            [1 /* State.Start */, 72 /* CharCode.H */, 2 /* State.H */],\n            [1 /* State.Start */, 102 /* CharCode.f */, 6 /* State.F */],\n            [1 /* State.Start */, 70 /* CharCode.F */, 6 /* State.F */],\n            [2 /* State.H */, 116 /* CharCode.t */, 3 /* State.HT */],\n            [2 /* State.H */, 84 /* CharCode.T */, 3 /* State.HT */],\n            [3 /* State.HT */, 116 /* CharCode.t */, 4 /* State.HTT */],\n            [3 /* State.HT */, 84 /* CharCode.T */, 4 /* State.HTT */],\n            [4 /* State.HTT */, 112 /* CharCode.p */, 5 /* State.HTTP */],\n            [4 /* State.HTT */, 80 /* CharCode.P */, 5 /* State.HTTP */],\n            [5 /* State.HTTP */, 115 /* CharCode.s */, 9 /* State.BeforeColon */],\n            [5 /* State.HTTP */, 83 /* CharCode.S */, 9 /* State.BeforeColon */],\n            [5 /* State.HTTP */, 58 /* CharCode.Colon */, 10 /* State.AfterColon */],\n            [6 /* State.F */, 105 /* CharCode.i */, 7 /* State.FI */],\n            [6 /* State.F */, 73 /* CharCode.I */, 7 /* State.FI */],\n            [7 /* State.FI */, 108 /* CharCode.l */, 8 /* State.FIL */],\n            [7 /* State.FI */, 76 /* CharCode.L */, 8 /* State.FIL */],\n            [8 /* State.FIL */, 101 /* CharCode.e */, 9 /* State.BeforeColon */],\n            [8 /* State.FIL */, 69 /* CharCode.E */, 9 /* State.BeforeColon */],\n            [9 /* State.BeforeColon */, 58 /* CharCode.Colon */, 10 /* State.AfterColon */],\n            [10 /* State.AfterColon */, 47 /* CharCode.Slash */, 11 /* State.AlmostThere */],\n            [11 /* State.AlmostThere */, 47 /* CharCode.Slash */, 12 /* State.End */],\n        ]);\n    }\n    return _stateMachine;\n}\nlet _classifier = null;\nfunction getClassifier() {\n    if (_classifier === null) {\n        _classifier = new CharacterClassifier(0 /* CharacterClass.None */);\n        // allow-any-unicode-next-line\n        const FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；‘〈「『〔（［｛｢｣｝］）〕』」〉’｀～…';\n        for (let i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 /* CharacterClass.ForceTermination */);\n        }\n        const CANNOT_END_WITH_CHARACTERS = '.,;:';\n        for (let i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 /* CharacterClass.CannotEndIn */);\n        }\n    }\n    return _classifier;\n}\nexport class LinkComputer {\n    static _createLink(classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n        // Do not allow to end link in certain characters...\n        let lastIncludedCharIndex = linkEndIndex - 1;\n        do {\n            const chCode = line.charCodeAt(lastIncludedCharIndex);\n            const chClass = classifier.get(chCode);\n            if (chClass !== 2 /* CharacterClass.CannotEndIn */) {\n                break;\n            }\n            lastIncludedCharIndex--;\n        } while (lastIncludedCharIndex > linkBeginIndex);\n        // Handle links enclosed in parens, square brackets and curlys.\n        if (linkBeginIndex > 0) {\n            const charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n            const lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n            if ((charCodeBeforeLink === 40 /* CharCode.OpenParen */ && lastCharCodeInLink === 41 /* CharCode.CloseParen */)\n                || (charCodeBeforeLink === 91 /* CharCode.OpenSquareBracket */ && lastCharCodeInLink === 93 /* CharCode.CloseSquareBracket */)\n                || (charCodeBeforeLink === 123 /* CharCode.OpenCurlyBrace */ && lastCharCodeInLink === 125 /* CharCode.CloseCurlyBrace */)) {\n                // Do not end in ) if ( is before the link start\n                // Do not end in ] if [ is before the link start\n                // Do not end in } if { is before the link start\n                lastIncludedCharIndex--;\n            }\n        }\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                startColumn: linkBeginIndex + 1,\n                endLineNumber: lineNumber,\n                endColumn: lastIncludedCharIndex + 2\n            },\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n        };\n    }\n    static computeLinks(model, stateMachine = getStateMachine()) {\n        const classifier = getClassifier();\n        const result = [];\n        for (let i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n            const line = model.getLineContent(i);\n            const len = line.length;\n            let j = 0;\n            let linkBeginIndex = 0;\n            let linkBeginChCode = 0;\n            let state = 1 /* State.Start */;\n            let hasOpenParens = false;\n            let hasOpenSquareBracket = false;\n            let inSquareBrackets = false;\n            let hasOpenCurlyBracket = false;\n            while (j < len) {\n                let resetStateMachine = false;\n                const chCode = line.charCodeAt(j);\n                if (state === 13 /* State.Accept */) {\n                    let chClass;\n                    switch (chCode) {\n                        case 40 /* CharCode.OpenParen */:\n                            hasOpenParens = true;\n                            chClass = 0 /* CharacterClass.None */;\n                            break;\n                        case 41 /* CharCode.CloseParen */:\n                            chClass = (hasOpenParens ? 0 /* CharacterClass.None */ : 1 /* CharacterClass.ForceTermination */);\n                            break;\n                        case 91 /* CharCode.OpenSquareBracket */:\n                            inSquareBrackets = true;\n                            hasOpenSquareBracket = true;\n                            chClass = 0 /* CharacterClass.None */;\n                            break;\n                        case 93 /* CharCode.CloseSquareBracket */:\n                            inSquareBrackets = false;\n                            chClass = (hasOpenSquareBracket ? 0 /* CharacterClass.None */ : 1 /* CharacterClass.ForceTermination */);\n                            break;\n                        case 123 /* CharCode.OpenCurlyBrace */:\n                            hasOpenCurlyBracket = true;\n                            chClass = 0 /* CharacterClass.None */;\n                            break;\n                        case 125 /* CharCode.CloseCurlyBrace */:\n                            chClass = (hasOpenCurlyBracket ? 0 /* CharacterClass.None */ : 1 /* CharacterClass.ForceTermination */);\n                            break;\n                        // The following three rules make it that ' or \" or ` are allowed inside links\n                        // only if the link is wrapped by some other quote character\n                        case 39 /* CharCode.SingleQuote */:\n                        case 34 /* CharCode.DoubleQuote */:\n                        case 96 /* CharCode.BackTick */:\n                            if (linkBeginChCode === chCode) {\n                                chClass = 1 /* CharacterClass.ForceTermination */;\n                            }\n                            else if (linkBeginChCode === 39 /* CharCode.SingleQuote */ || linkBeginChCode === 34 /* CharCode.DoubleQuote */ || linkBeginChCode === 96 /* CharCode.BackTick */) {\n                                chClass = 0 /* CharacterClass.None */;\n                            }\n                            else {\n                                chClass = 1 /* CharacterClass.ForceTermination */;\n                            }\n                            break;\n                        case 42 /* CharCode.Asterisk */:\n                            // `*` terminates a link if the link began with `*`\n                            chClass = (linkBeginChCode === 42 /* CharCode.Asterisk */) ? 1 /* CharacterClass.ForceTermination */ : 0 /* CharacterClass.None */;\n                            break;\n                        case 124 /* CharCode.Pipe */:\n                            // `|` terminates a link if the link began with `|`\n                            chClass = (linkBeginChCode === 124 /* CharCode.Pipe */) ? 1 /* CharacterClass.ForceTermination */ : 0 /* CharacterClass.None */;\n                            break;\n                        case 32 /* CharCode.Space */:\n                            // ` ` allow space in between [ and ]\n                            chClass = (inSquareBrackets ? 0 /* CharacterClass.None */ : 1 /* CharacterClass.ForceTermination */);\n                            break;\n                        default:\n                            chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* CharacterClass.ForceTermination */) {\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                        resetStateMachine = true;\n                    }\n                }\n                else if (state === 12 /* State.End */) {\n                    let chClass;\n                    if (chCode === 91 /* CharCode.OpenSquareBracket */) {\n                        // Allow for the authority part to contain ipv6 addresses which contain [ and ]\n                        hasOpenSquareBracket = true;\n                        chClass = 0 /* CharacterClass.None */;\n                    }\n                    else {\n                        chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* CharacterClass.ForceTermination */) {\n                        resetStateMachine = true;\n                    }\n                    else {\n                        state = 13 /* State.Accept */;\n                    }\n                }\n                else {\n                    state = stateMachine.nextState(state, chCode);\n                    if (state === 0 /* State.Invalid */) {\n                        resetStateMachine = true;\n                    }\n                }\n                if (resetStateMachine) {\n                    state = 1 /* State.Start */;\n                    hasOpenParens = false;\n                    hasOpenSquareBracket = false;\n                    hasOpenCurlyBracket = false;\n                    // Record where the link started\n                    linkBeginIndex = j + 1;\n                    linkBeginChCode = chCode;\n                }\n                j++;\n            }\n            if (state === 13 /* State.Accept */) {\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n            }\n        }\n        return result;\n    }\n}\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model) {\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n        // Unknown caller!\n        return [];\n    }\n    return LinkComputer.computeLinks(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class BasicInplaceReplace {\n    constructor() {\n        this._defaultValueSet = [\n            ['true', 'false'],\n            ['True', 'False'],\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n            ['public', 'protected', 'private'],\n        ];\n    }\n    navigateValueSet(range1, text1, range2, text2, up) {\n        if (range1 && text1) {\n            const result = this.doNavigateValueSet(text1, up);\n            if (result) {\n                return {\n                    range: range1,\n                    value: result\n                };\n            }\n        }\n        if (range2 && text2) {\n            const result = this.doNavigateValueSet(text2, up);\n            if (result) {\n                return {\n                    range: range2,\n                    value: result\n                };\n            }\n        }\n        return null;\n    }\n    doNavigateValueSet(text, up) {\n        const numberResult = this.numberReplace(text, up);\n        if (numberResult !== null) {\n            return numberResult;\n        }\n        return this.textReplace(text, up);\n    }\n    numberReplace(value, up) {\n        const precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n        let n1 = Number(value);\n        const n2 = parseFloat(value);\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n            if (n1 === 0 && !up) {\n                return null; // don't do negative\n                //\t\t\t} else if(n1 === 9 && up) {\n                //\t\t\t\treturn null; // don't insert 10 into a number\n            }\n            else {\n                n1 = Math.floor(n1 * precision);\n                n1 += up ? precision : -precision;\n                return String(n1 / precision);\n            }\n        }\n        return null;\n    }\n    textReplace(value, up) {\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\n    }\n    valueSetsReplace(valueSets, value, up) {\n        let result = null;\n        for (let i = 0, len = valueSets.length; result === null && i < len; i++) {\n            result = this.valueSetReplace(valueSets[i], value, up);\n        }\n        return result;\n    }\n    valueSetReplace(valueSet, value, up) {\n        let idx = valueSet.indexOf(value);\n        if (idx >= 0) {\n            idx += up ? +1 : -1;\n            if (idx < 0) {\n                idx = valueSet.length - 1;\n            }\n            else {\n                idx %= valueSet.length;\n            }\n            return valueSet[idx];\n        }\n        return null;\n    }\n}\nBasicInplaceReplace.INSTANCE = new BasicInplaceReplace();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter, Event } from './event.js';\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = setTimeout(callback.bind(context), 0);\n    return { dispose() { clearTimeout(handle); } };\n});\nexport var CancellationToken;\n(function (CancellationToken) {\n    function isCancellationToken(thing) {\n        if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n            return true;\n        }\n        if (thing instanceof MutableToken) {\n            return true;\n        }\n        if (!thing || typeof thing !== 'object') {\n            return false;\n        }\n        return typeof thing.isCancellationRequested === 'boolean'\n            && typeof thing.onCancellationRequested === 'function';\n    }\n    CancellationToken.isCancellationToken = isCancellationToken;\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    });\n})(CancellationToken || (CancellationToken = {}));\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n        this._emitter = null;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = null;\n        }\n    }\n}\nexport class CancellationTokenSource {\n    constructor(parent) {\n        this._token = undefined;\n        this._parentListener = undefined;\n        this._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n    }\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually cancel\n            this._token.cancel();\n        }\n    }\n    dispose(cancel = false) {\n        var _a;\n        if (cancel) {\n            this.cancel();\n        }\n        (_a = this._parentListener) === null || _a === void 0 ? void 0 : _a.dispose();\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass KeyCodeStrMap {\n    constructor() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    define(keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    }\n    keyCodeToStr(keyCode) {\n        return this._keyCodeToStr[keyCode];\n    }\n    strToKeyCode(str) {\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* KeyCode.Unknown */;\n    }\n}\nconst uiMap = new KeyCodeStrMap();\nconst userSettingsUSMap = new KeyCodeStrMap();\nconst userSettingsGeneralMap = new KeyCodeStrMap();\nexport const EVENT_KEY_CODE_MAP = new Array(230);\nexport const NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE = {};\nconst scanCodeIntToStr = [];\nconst scanCodeStrToInt = Object.create(null);\nconst scanCodeLowerCaseStrToInt = Object.create(null);\n/**\n * -1 if a ScanCode => KeyCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_CODE_TO_KEY_CODE = [];\n/**\n * -1 if a KeyCode => ScanCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_KEY_CODE_TO_CODE = [];\nfor (let i = 0; i <= 193 /* ScanCode.MAX_VALUE */; i++) {\n    IMMUTABLE_CODE_TO_KEY_CODE[i] = -1 /* KeyCode.DependsOnKbLayout */;\n}\nfor (let i = 0; i <= 132 /* KeyCode.MAX_VALUE */; i++) {\n    IMMUTABLE_KEY_CODE_TO_CODE[i] = -1 /* ScanCode.DependsOnKbLayout */;\n}\n(function () {\n    // See https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n    // See https://github.com/microsoft/node-native-keymap/blob/88c0b0e5/deps/chromium/keyboard_codes_win.h\n    const empty = '';\n    const mappings = [\n        // immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel\n        [1, 0 /* ScanCode.None */, 'None', 0 /* KeyCode.Unknown */, 'unknown', 0, 'VK_UNKNOWN', empty, empty],\n        [1, 1 /* ScanCode.Hyper */, 'Hyper', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 2 /* ScanCode.Super */, 'Super', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 3 /* ScanCode.Fn */, 'Fn', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 4 /* ScanCode.FnLock */, 'FnLock', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 5 /* ScanCode.Suspend */, 'Suspend', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 6 /* ScanCode.Resume */, 'Resume', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 7 /* ScanCode.Turbo */, 'Turbo', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 8 /* ScanCode.Sleep */, 'Sleep', 0 /* KeyCode.Unknown */, empty, 0, 'VK_SLEEP', empty, empty],\n        [1, 9 /* ScanCode.WakeUp */, 'WakeUp', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 10 /* ScanCode.KeyA */, 'KeyA', 31 /* KeyCode.KeyA */, 'A', 65, 'VK_A', empty, empty],\n        [0, 11 /* ScanCode.KeyB */, 'KeyB', 32 /* KeyCode.KeyB */, 'B', 66, 'VK_B', empty, empty],\n        [0, 12 /* ScanCode.KeyC */, 'KeyC', 33 /* KeyCode.KeyC */, 'C', 67, 'VK_C', empty, empty],\n        [0, 13 /* ScanCode.KeyD */, 'KeyD', 34 /* KeyCode.KeyD */, 'D', 68, 'VK_D', empty, empty],\n        [0, 14 /* ScanCode.KeyE */, 'KeyE', 35 /* KeyCode.KeyE */, 'E', 69, 'VK_E', empty, empty],\n        [0, 15 /* ScanCode.KeyF */, 'KeyF', 36 /* KeyCode.KeyF */, 'F', 70, 'VK_F', empty, empty],\n        [0, 16 /* ScanCode.KeyG */, 'KeyG', 37 /* KeyCode.KeyG */, 'G', 71, 'VK_G', empty, empty],\n        [0, 17 /* ScanCode.KeyH */, 'KeyH', 38 /* KeyCode.KeyH */, 'H', 72, 'VK_H', empty, empty],\n        [0, 18 /* ScanCode.KeyI */, 'KeyI', 39 /* KeyCode.KeyI */, 'I', 73, 'VK_I', empty, empty],\n        [0, 19 /* ScanCode.KeyJ */, 'KeyJ', 40 /* KeyCode.KeyJ */, 'J', 74, 'VK_J', empty, empty],\n        [0, 20 /* ScanCode.KeyK */, 'KeyK', 41 /* KeyCode.KeyK */, 'K', 75, 'VK_K', empty, empty],\n        [0, 21 /* ScanCode.KeyL */, 'KeyL', 42 /* KeyCode.KeyL */, 'L', 76, 'VK_L', empty, empty],\n        [0, 22 /* ScanCode.KeyM */, 'KeyM', 43 /* KeyCode.KeyM */, 'M', 77, 'VK_M', empty, empty],\n        [0, 23 /* ScanCode.KeyN */, 'KeyN', 44 /* KeyCode.KeyN */, 'N', 78, 'VK_N', empty, empty],\n        [0, 24 /* ScanCode.KeyO */, 'KeyO', 45 /* KeyCode.KeyO */, 'O', 79, 'VK_O', empty, empty],\n        [0, 25 /* ScanCode.KeyP */, 'KeyP', 46 /* KeyCode.KeyP */, 'P', 80, 'VK_P', empty, empty],\n        [0, 26 /* ScanCode.KeyQ */, 'KeyQ', 47 /* KeyCode.KeyQ */, 'Q', 81, 'VK_Q', empty, empty],\n        [0, 27 /* ScanCode.KeyR */, 'KeyR', 48 /* KeyCode.KeyR */, 'R', 82, 'VK_R', empty, empty],\n        [0, 28 /* ScanCode.KeyS */, 'KeyS', 49 /* KeyCode.KeyS */, 'S', 83, 'VK_S', empty, empty],\n        [0, 29 /* ScanCode.KeyT */, 'KeyT', 50 /* KeyCode.KeyT */, 'T', 84, 'VK_T', empty, empty],\n        [0, 30 /* ScanCode.KeyU */, 'KeyU', 51 /* KeyCode.KeyU */, 'U', 85, 'VK_U', empty, empty],\n        [0, 31 /* ScanCode.KeyV */, 'KeyV', 52 /* KeyCode.KeyV */, 'V', 86, 'VK_V', empty, empty],\n        [0, 32 /* ScanCode.KeyW */, 'KeyW', 53 /* KeyCode.KeyW */, 'W', 87, 'VK_W', empty, empty],\n        [0, 33 /* ScanCode.KeyX */, 'KeyX', 54 /* KeyCode.KeyX */, 'X', 88, 'VK_X', empty, empty],\n        [0, 34 /* ScanCode.KeyY */, 'KeyY', 55 /* KeyCode.KeyY */, 'Y', 89, 'VK_Y', empty, empty],\n        [0, 35 /* ScanCode.KeyZ */, 'KeyZ', 56 /* KeyCode.KeyZ */, 'Z', 90, 'VK_Z', empty, empty],\n        [0, 36 /* ScanCode.Digit1 */, 'Digit1', 22 /* KeyCode.Digit1 */, '1', 49, 'VK_1', empty, empty],\n        [0, 37 /* ScanCode.Digit2 */, 'Digit2', 23 /* KeyCode.Digit2 */, '2', 50, 'VK_2', empty, empty],\n        [0, 38 /* ScanCode.Digit3 */, 'Digit3', 24 /* KeyCode.Digit3 */, '3', 51, 'VK_3', empty, empty],\n        [0, 39 /* ScanCode.Digit4 */, 'Digit4', 25 /* KeyCode.Digit4 */, '4', 52, 'VK_4', empty, empty],\n        [0, 40 /* ScanCode.Digit5 */, 'Digit5', 26 /* KeyCode.Digit5 */, '5', 53, 'VK_5', empty, empty],\n        [0, 41 /* ScanCode.Digit6 */, 'Digit6', 27 /* KeyCode.Digit6 */, '6', 54, 'VK_6', empty, empty],\n        [0, 42 /* ScanCode.Digit7 */, 'Digit7', 28 /* KeyCode.Digit7 */, '7', 55, 'VK_7', empty, empty],\n        [0, 43 /* ScanCode.Digit8 */, 'Digit8', 29 /* KeyCode.Digit8 */, '8', 56, 'VK_8', empty, empty],\n        [0, 44 /* ScanCode.Digit9 */, 'Digit9', 30 /* KeyCode.Digit9 */, '9', 57, 'VK_9', empty, empty],\n        [0, 45 /* ScanCode.Digit0 */, 'Digit0', 21 /* KeyCode.Digit0 */, '0', 48, 'VK_0', empty, empty],\n        [1, 46 /* ScanCode.Enter */, 'Enter', 3 /* KeyCode.Enter */, 'Enter', 13, 'VK_RETURN', empty, empty],\n        [1, 47 /* ScanCode.Escape */, 'Escape', 9 /* KeyCode.Escape */, 'Escape', 27, 'VK_ESCAPE', empty, empty],\n        [1, 48 /* ScanCode.Backspace */, 'Backspace', 1 /* KeyCode.Backspace */, 'Backspace', 8, 'VK_BACK', empty, empty],\n        [1, 49 /* ScanCode.Tab */, 'Tab', 2 /* KeyCode.Tab */, 'Tab', 9, 'VK_TAB', empty, empty],\n        [1, 50 /* ScanCode.Space */, 'Space', 10 /* KeyCode.Space */, 'Space', 32, 'VK_SPACE', empty, empty],\n        [0, 51 /* ScanCode.Minus */, 'Minus', 88 /* KeyCode.Minus */, '-', 189, 'VK_OEM_MINUS', '-', 'OEM_MINUS'],\n        [0, 52 /* ScanCode.Equal */, 'Equal', 86 /* KeyCode.Equal */, '=', 187, 'VK_OEM_PLUS', '=', 'OEM_PLUS'],\n        [0, 53 /* ScanCode.BracketLeft */, 'BracketLeft', 92 /* KeyCode.BracketLeft */, '[', 219, 'VK_OEM_4', '[', 'OEM_4'],\n        [0, 54 /* ScanCode.BracketRight */, 'BracketRight', 94 /* KeyCode.BracketRight */, ']', 221, 'VK_OEM_6', ']', 'OEM_6'],\n        [0, 55 /* ScanCode.Backslash */, 'Backslash', 93 /* KeyCode.Backslash */, '\\\\', 220, 'VK_OEM_5', '\\\\', 'OEM_5'],\n        [0, 56 /* ScanCode.IntlHash */, 'IntlHash', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty], // has been dropped from the w3c spec\n        [0, 57 /* ScanCode.Semicolon */, 'Semicolon', 85 /* KeyCode.Semicolon */, ';', 186, 'VK_OEM_1', ';', 'OEM_1'],\n        [0, 58 /* ScanCode.Quote */, 'Quote', 95 /* KeyCode.Quote */, '\\'', 222, 'VK_OEM_7', '\\'', 'OEM_7'],\n        [0, 59 /* ScanCode.Backquote */, 'Backquote', 91 /* KeyCode.Backquote */, '`', 192, 'VK_OEM_3', '`', 'OEM_3'],\n        [0, 60 /* ScanCode.Comma */, 'Comma', 87 /* KeyCode.Comma */, ',', 188, 'VK_OEM_COMMA', ',', 'OEM_COMMA'],\n        [0, 61 /* ScanCode.Period */, 'Period', 89 /* KeyCode.Period */, '.', 190, 'VK_OEM_PERIOD', '.', 'OEM_PERIOD'],\n        [0, 62 /* ScanCode.Slash */, 'Slash', 90 /* KeyCode.Slash */, '/', 191, 'VK_OEM_2', '/', 'OEM_2'],\n        [1, 63 /* ScanCode.CapsLock */, 'CapsLock', 8 /* KeyCode.CapsLock */, 'CapsLock', 20, 'VK_CAPITAL', empty, empty],\n        [1, 64 /* ScanCode.F1 */, 'F1', 59 /* KeyCode.F1 */, 'F1', 112, 'VK_F1', empty, empty],\n        [1, 65 /* ScanCode.F2 */, 'F2', 60 /* KeyCode.F2 */, 'F2', 113, 'VK_F2', empty, empty],\n        [1, 66 /* ScanCode.F3 */, 'F3', 61 /* KeyCode.F3 */, 'F3', 114, 'VK_F3', empty, empty],\n        [1, 67 /* ScanCode.F4 */, 'F4', 62 /* KeyCode.F4 */, 'F4', 115, 'VK_F4', empty, empty],\n        [1, 68 /* ScanCode.F5 */, 'F5', 63 /* KeyCode.F5 */, 'F5', 116, 'VK_F5', empty, empty],\n        [1, 69 /* ScanCode.F6 */, 'F6', 64 /* KeyCode.F6 */, 'F6', 117, 'VK_F6', empty, empty],\n        [1, 70 /* ScanCode.F7 */, 'F7', 65 /* KeyCode.F7 */, 'F7', 118, 'VK_F7', empty, empty],\n        [1, 71 /* ScanCode.F8 */, 'F8', 66 /* KeyCode.F8 */, 'F8', 119, 'VK_F8', empty, empty],\n        [1, 72 /* ScanCode.F9 */, 'F9', 67 /* KeyCode.F9 */, 'F9', 120, 'VK_F9', empty, empty],\n        [1, 73 /* ScanCode.F10 */, 'F10', 68 /* KeyCode.F10 */, 'F10', 121, 'VK_F10', empty, empty],\n        [1, 74 /* ScanCode.F11 */, 'F11', 69 /* KeyCode.F11 */, 'F11', 122, 'VK_F11', empty, empty],\n        [1, 75 /* ScanCode.F12 */, 'F12', 70 /* KeyCode.F12 */, 'F12', 123, 'VK_F12', empty, empty],\n        [1, 76 /* ScanCode.PrintScreen */, 'PrintScreen', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 77 /* ScanCode.ScrollLock */, 'ScrollLock', 84 /* KeyCode.ScrollLock */, 'ScrollLock', 145, 'VK_SCROLL', empty, empty],\n        [1, 78 /* ScanCode.Pause */, 'Pause', 7 /* KeyCode.PauseBreak */, 'PauseBreak', 19, 'VK_PAUSE', empty, empty],\n        [1, 79 /* ScanCode.Insert */, 'Insert', 19 /* KeyCode.Insert */, 'Insert', 45, 'VK_INSERT', empty, empty],\n        [1, 80 /* ScanCode.Home */, 'Home', 14 /* KeyCode.Home */, 'Home', 36, 'VK_HOME', empty, empty],\n        [1, 81 /* ScanCode.PageUp */, 'PageUp', 11 /* KeyCode.PageUp */, 'PageUp', 33, 'VK_PRIOR', empty, empty],\n        [1, 82 /* ScanCode.Delete */, 'Delete', 20 /* KeyCode.Delete */, 'Delete', 46, 'VK_DELETE', empty, empty],\n        [1, 83 /* ScanCode.End */, 'End', 13 /* KeyCode.End */, 'End', 35, 'VK_END', empty, empty],\n        [1, 84 /* ScanCode.PageDown */, 'PageDown', 12 /* KeyCode.PageDown */, 'PageDown', 34, 'VK_NEXT', empty, empty],\n        [1, 85 /* ScanCode.ArrowRight */, 'ArrowRight', 17 /* KeyCode.RightArrow */, 'RightArrow', 39, 'VK_RIGHT', 'Right', empty],\n        [1, 86 /* ScanCode.ArrowLeft */, 'ArrowLeft', 15 /* KeyCode.LeftArrow */, 'LeftArrow', 37, 'VK_LEFT', 'Left', empty],\n        [1, 87 /* ScanCode.ArrowDown */, 'ArrowDown', 18 /* KeyCode.DownArrow */, 'DownArrow', 40, 'VK_DOWN', 'Down', empty],\n        [1, 88 /* ScanCode.ArrowUp */, 'ArrowUp', 16 /* KeyCode.UpArrow */, 'UpArrow', 38, 'VK_UP', 'Up', empty],\n        [1, 89 /* ScanCode.NumLock */, 'NumLock', 83 /* KeyCode.NumLock */, 'NumLock', 144, 'VK_NUMLOCK', empty, empty],\n        [1, 90 /* ScanCode.NumpadDivide */, 'NumpadDivide', 113 /* KeyCode.NumpadDivide */, 'NumPad_Divide', 111, 'VK_DIVIDE', empty, empty],\n        [1, 91 /* ScanCode.NumpadMultiply */, 'NumpadMultiply', 108 /* KeyCode.NumpadMultiply */, 'NumPad_Multiply', 106, 'VK_MULTIPLY', empty, empty],\n        [1, 92 /* ScanCode.NumpadSubtract */, 'NumpadSubtract', 111 /* KeyCode.NumpadSubtract */, 'NumPad_Subtract', 109, 'VK_SUBTRACT', empty, empty],\n        [1, 93 /* ScanCode.NumpadAdd */, 'NumpadAdd', 109 /* KeyCode.NumpadAdd */, 'NumPad_Add', 107, 'VK_ADD', empty, empty],\n        [1, 94 /* ScanCode.NumpadEnter */, 'NumpadEnter', 3 /* KeyCode.Enter */, empty, 0, empty, empty, empty],\n        [1, 95 /* ScanCode.Numpad1 */, 'Numpad1', 99 /* KeyCode.Numpad1 */, 'NumPad1', 97, 'VK_NUMPAD1', empty, empty],\n        [1, 96 /* ScanCode.Numpad2 */, 'Numpad2', 100 /* KeyCode.Numpad2 */, 'NumPad2', 98, 'VK_NUMPAD2', empty, empty],\n        [1, 97 /* ScanCode.Numpad3 */, 'Numpad3', 101 /* KeyCode.Numpad3 */, 'NumPad3', 99, 'VK_NUMPAD3', empty, empty],\n        [1, 98 /* ScanCode.Numpad4 */, 'Numpad4', 102 /* KeyCode.Numpad4 */, 'NumPad4', 100, 'VK_NUMPAD4', empty, empty],\n        [1, 99 /* ScanCode.Numpad5 */, 'Numpad5', 103 /* KeyCode.Numpad5 */, 'NumPad5', 101, 'VK_NUMPAD5', empty, empty],\n        [1, 100 /* ScanCode.Numpad6 */, 'Numpad6', 104 /* KeyCode.Numpad6 */, 'NumPad6', 102, 'VK_NUMPAD6', empty, empty],\n        [1, 101 /* ScanCode.Numpad7 */, 'Numpad7', 105 /* KeyCode.Numpad7 */, 'NumPad7', 103, 'VK_NUMPAD7', empty, empty],\n        [1, 102 /* ScanCode.Numpad8 */, 'Numpad8', 106 /* KeyCode.Numpad8 */, 'NumPad8', 104, 'VK_NUMPAD8', empty, empty],\n        [1, 103 /* ScanCode.Numpad9 */, 'Numpad9', 107 /* KeyCode.Numpad9 */, 'NumPad9', 105, 'VK_NUMPAD9', empty, empty],\n        [1, 104 /* ScanCode.Numpad0 */, 'Numpad0', 98 /* KeyCode.Numpad0 */, 'NumPad0', 96, 'VK_NUMPAD0', empty, empty],\n        [1, 105 /* ScanCode.NumpadDecimal */, 'NumpadDecimal', 112 /* KeyCode.NumpadDecimal */, 'NumPad_Decimal', 110, 'VK_DECIMAL', empty, empty],\n        [0, 106 /* ScanCode.IntlBackslash */, 'IntlBackslash', 97 /* KeyCode.IntlBackslash */, 'OEM_102', 226, 'VK_OEM_102', empty, empty],\n        [1, 107 /* ScanCode.ContextMenu */, 'ContextMenu', 58 /* KeyCode.ContextMenu */, 'ContextMenu', 93, empty, empty, empty],\n        [1, 108 /* ScanCode.Power */, 'Power', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 109 /* ScanCode.NumpadEqual */, 'NumpadEqual', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 110 /* ScanCode.F13 */, 'F13', 71 /* KeyCode.F13 */, 'F13', 124, 'VK_F13', empty, empty],\n        [1, 111 /* ScanCode.F14 */, 'F14', 72 /* KeyCode.F14 */, 'F14', 125, 'VK_F14', empty, empty],\n        [1, 112 /* ScanCode.F15 */, 'F15', 73 /* KeyCode.F15 */, 'F15', 126, 'VK_F15', empty, empty],\n        [1, 113 /* ScanCode.F16 */, 'F16', 74 /* KeyCode.F16 */, 'F16', 127, 'VK_F16', empty, empty],\n        [1, 114 /* ScanCode.F17 */, 'F17', 75 /* KeyCode.F17 */, 'F17', 128, 'VK_F17', empty, empty],\n        [1, 115 /* ScanCode.F18 */, 'F18', 76 /* KeyCode.F18 */, 'F18', 129, 'VK_F18', empty, empty],\n        [1, 116 /* ScanCode.F19 */, 'F19', 77 /* KeyCode.F19 */, 'F19', 130, 'VK_F19', empty, empty],\n        [1, 117 /* ScanCode.F20 */, 'F20', 78 /* KeyCode.F20 */, 'F20', 131, 'VK_F20', empty, empty],\n        [1, 118 /* ScanCode.F21 */, 'F21', 79 /* KeyCode.F21 */, 'F21', 132, 'VK_F21', empty, empty],\n        [1, 119 /* ScanCode.F22 */, 'F22', 80 /* KeyCode.F22 */, 'F22', 133, 'VK_F22', empty, empty],\n        [1, 120 /* ScanCode.F23 */, 'F23', 81 /* KeyCode.F23 */, 'F23', 134, 'VK_F23', empty, empty],\n        [1, 121 /* ScanCode.F24 */, 'F24', 82 /* KeyCode.F24 */, 'F24', 135, 'VK_F24', empty, empty],\n        [1, 122 /* ScanCode.Open */, 'Open', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 123 /* ScanCode.Help */, 'Help', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 124 /* ScanCode.Select */, 'Select', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 125 /* ScanCode.Again */, 'Again', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 126 /* ScanCode.Undo */, 'Undo', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 127 /* ScanCode.Cut */, 'Cut', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 128 /* ScanCode.Copy */, 'Copy', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 129 /* ScanCode.Paste */, 'Paste', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 130 /* ScanCode.Find */, 'Find', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 131 /* ScanCode.AudioVolumeMute */, 'AudioVolumeMute', 117 /* KeyCode.AudioVolumeMute */, 'AudioVolumeMute', 173, 'VK_VOLUME_MUTE', empty, empty],\n        [1, 132 /* ScanCode.AudioVolumeUp */, 'AudioVolumeUp', 118 /* KeyCode.AudioVolumeUp */, 'AudioVolumeUp', 175, 'VK_VOLUME_UP', empty, empty],\n        [1, 133 /* ScanCode.AudioVolumeDown */, 'AudioVolumeDown', 119 /* KeyCode.AudioVolumeDown */, 'AudioVolumeDown', 174, 'VK_VOLUME_DOWN', empty, empty],\n        [1, 134 /* ScanCode.NumpadComma */, 'NumpadComma', 110 /* KeyCode.NUMPAD_SEPARATOR */, 'NumPad_Separator', 108, 'VK_SEPARATOR', empty, empty],\n        [0, 135 /* ScanCode.IntlRo */, 'IntlRo', 115 /* KeyCode.ABNT_C1 */, 'ABNT_C1', 193, 'VK_ABNT_C1', empty, empty],\n        [1, 136 /* ScanCode.KanaMode */, 'KanaMode', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 137 /* ScanCode.IntlYen */, 'IntlYen', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 138 /* ScanCode.Convert */, 'Convert', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 139 /* ScanCode.NonConvert */, 'NonConvert', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 140 /* ScanCode.Lang1 */, 'Lang1', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 141 /* ScanCode.Lang2 */, 'Lang2', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 142 /* ScanCode.Lang3 */, 'Lang3', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 143 /* ScanCode.Lang4 */, 'Lang4', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 144 /* ScanCode.Lang5 */, 'Lang5', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 145 /* ScanCode.Abort */, 'Abort', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 146 /* ScanCode.Props */, 'Props', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 147 /* ScanCode.NumpadParenLeft */, 'NumpadParenLeft', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 148 /* ScanCode.NumpadParenRight */, 'NumpadParenRight', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 149 /* ScanCode.NumpadBackspace */, 'NumpadBackspace', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 150 /* ScanCode.NumpadMemoryStore */, 'NumpadMemoryStore', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 151 /* ScanCode.NumpadMemoryRecall */, 'NumpadMemoryRecall', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 152 /* ScanCode.NumpadMemoryClear */, 'NumpadMemoryClear', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 153 /* ScanCode.NumpadMemoryAdd */, 'NumpadMemoryAdd', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 154 /* ScanCode.NumpadMemorySubtract */, 'NumpadMemorySubtract', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 155 /* ScanCode.NumpadClear */, 'NumpadClear', 131 /* KeyCode.Clear */, 'Clear', 12, 'VK_CLEAR', empty, empty],\n        [1, 156 /* ScanCode.NumpadClearEntry */, 'NumpadClearEntry', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 5 /* KeyCode.Ctrl */, 'Ctrl', 17, 'VK_CONTROL', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 4 /* KeyCode.Shift */, 'Shift', 16, 'VK_SHIFT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 6 /* KeyCode.Alt */, 'Alt', 18, 'VK_MENU', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 57 /* KeyCode.Meta */, 'Meta', 91, 'VK_COMMAND', empty, empty],\n        [1, 157 /* ScanCode.ControlLeft */, 'ControlLeft', 5 /* KeyCode.Ctrl */, empty, 0, 'VK_LCONTROL', empty, empty],\n        [1, 158 /* ScanCode.ShiftLeft */, 'ShiftLeft', 4 /* KeyCode.Shift */, empty, 0, 'VK_LSHIFT', empty, empty],\n        [1, 159 /* ScanCode.AltLeft */, 'AltLeft', 6 /* KeyCode.Alt */, empty, 0, 'VK_LMENU', empty, empty],\n        [1, 160 /* ScanCode.MetaLeft */, 'MetaLeft', 57 /* KeyCode.Meta */, empty, 0, 'VK_LWIN', empty, empty],\n        [1, 161 /* ScanCode.ControlRight */, 'ControlRight', 5 /* KeyCode.Ctrl */, empty, 0, 'VK_RCONTROL', empty, empty],\n        [1, 162 /* ScanCode.ShiftRight */, 'ShiftRight', 4 /* KeyCode.Shift */, empty, 0, 'VK_RSHIFT', empty, empty],\n        [1, 163 /* ScanCode.AltRight */, 'AltRight', 6 /* KeyCode.Alt */, empty, 0, 'VK_RMENU', empty, empty],\n        [1, 164 /* ScanCode.MetaRight */, 'MetaRight', 57 /* KeyCode.Meta */, empty, 0, 'VK_RWIN', empty, empty],\n        [1, 165 /* ScanCode.BrightnessUp */, 'BrightnessUp', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 166 /* ScanCode.BrightnessDown */, 'BrightnessDown', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 167 /* ScanCode.MediaPlay */, 'MediaPlay', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 168 /* ScanCode.MediaRecord */, 'MediaRecord', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 169 /* ScanCode.MediaFastForward */, 'MediaFastForward', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 170 /* ScanCode.MediaRewind */, 'MediaRewind', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 171 /* ScanCode.MediaTrackNext */, 'MediaTrackNext', 124 /* KeyCode.MediaTrackNext */, 'MediaTrackNext', 176, 'VK_MEDIA_NEXT_TRACK', empty, empty],\n        [1, 172 /* ScanCode.MediaTrackPrevious */, 'MediaTrackPrevious', 125 /* KeyCode.MediaTrackPrevious */, 'MediaTrackPrevious', 177, 'VK_MEDIA_PREV_TRACK', empty, empty],\n        [1, 173 /* ScanCode.MediaStop */, 'MediaStop', 126 /* KeyCode.MediaStop */, 'MediaStop', 178, 'VK_MEDIA_STOP', empty, empty],\n        [1, 174 /* ScanCode.Eject */, 'Eject', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 175 /* ScanCode.MediaPlayPause */, 'MediaPlayPause', 127 /* KeyCode.MediaPlayPause */, 'MediaPlayPause', 179, 'VK_MEDIA_PLAY_PAUSE', empty, empty],\n        [1, 176 /* ScanCode.MediaSelect */, 'MediaSelect', 128 /* KeyCode.LaunchMediaPlayer */, 'LaunchMediaPlayer', 181, 'VK_MEDIA_LAUNCH_MEDIA_SELECT', empty, empty],\n        [1, 177 /* ScanCode.LaunchMail */, 'LaunchMail', 129 /* KeyCode.LaunchMail */, 'LaunchMail', 180, 'VK_MEDIA_LAUNCH_MAIL', empty, empty],\n        [1, 178 /* ScanCode.LaunchApp2 */, 'LaunchApp2', 130 /* KeyCode.LaunchApp2 */, 'LaunchApp2', 183, 'VK_MEDIA_LAUNCH_APP2', empty, empty],\n        [1, 179 /* ScanCode.LaunchApp1 */, 'LaunchApp1', 0 /* KeyCode.Unknown */, empty, 0, 'VK_MEDIA_LAUNCH_APP1', empty, empty],\n        [1, 180 /* ScanCode.SelectTask */, 'SelectTask', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 181 /* ScanCode.LaunchScreenSaver */, 'LaunchScreenSaver', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 182 /* ScanCode.BrowserSearch */, 'BrowserSearch', 120 /* KeyCode.BrowserSearch */, 'BrowserSearch', 170, 'VK_BROWSER_SEARCH', empty, empty],\n        [1, 183 /* ScanCode.BrowserHome */, 'BrowserHome', 121 /* KeyCode.BrowserHome */, 'BrowserHome', 172, 'VK_BROWSER_HOME', empty, empty],\n        [1, 184 /* ScanCode.BrowserBack */, 'BrowserBack', 122 /* KeyCode.BrowserBack */, 'BrowserBack', 166, 'VK_BROWSER_BACK', empty, empty],\n        [1, 185 /* ScanCode.BrowserForward */, 'BrowserForward', 123 /* KeyCode.BrowserForward */, 'BrowserForward', 167, 'VK_BROWSER_FORWARD', empty, empty],\n        [1, 186 /* ScanCode.BrowserStop */, 'BrowserStop', 0 /* KeyCode.Unknown */, empty, 0, 'VK_BROWSER_STOP', empty, empty],\n        [1, 187 /* ScanCode.BrowserRefresh */, 'BrowserRefresh', 0 /* KeyCode.Unknown */, empty, 0, 'VK_BROWSER_REFRESH', empty, empty],\n        [1, 188 /* ScanCode.BrowserFavorites */, 'BrowserFavorites', 0 /* KeyCode.Unknown */, empty, 0, 'VK_BROWSER_FAVORITES', empty, empty],\n        [1, 189 /* ScanCode.ZoomToggle */, 'ZoomToggle', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 190 /* ScanCode.MailReply */, 'MailReply', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 191 /* ScanCode.MailForward */, 'MailForward', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 192 /* ScanCode.MailSend */, 'MailSend', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        // See https://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html\n        // If an Input Method Editor is processing key input and the event is keydown, return 229.\n        [1, 0 /* ScanCode.None */, empty, 114 /* KeyCode.KEY_IN_COMPOSITION */, 'KeyInComposition', 229, empty, empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 116 /* KeyCode.ABNT_C2 */, 'ABNT_C2', 194, 'VK_ABNT_C2', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 96 /* KeyCode.OEM_8 */, 'OEM_8', 223, 'VK_OEM_8', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_KANA', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_HANGUL', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_JUNJA', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_FINAL', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_HANJA', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_KANJI', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_CONVERT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_NONCONVERT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_ACCEPT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_MODECHANGE', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_SELECT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PRINT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_EXECUTE', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_SNAPSHOT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_HELP', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_APPS', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PROCESSKEY', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PACKET', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_DBE_SBCSCHAR', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_DBE_DBCSCHAR', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_ATTN', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_CRSEL', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_EXSEL', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_EREOF', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PLAY', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_ZOOM', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_NONAME', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PA1', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_OEM_CLEAR', empty, empty],\n    ];\n    const seenKeyCode = [];\n    const seenScanCode = [];\n    for (const mapping of mappings) {\n        const [immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel] = mapping;\n        if (!seenScanCode[scanCode]) {\n            seenScanCode[scanCode] = true;\n            scanCodeIntToStr[scanCode] = scanCodeStr;\n            scanCodeStrToInt[scanCodeStr] = scanCode;\n            scanCodeLowerCaseStrToInt[scanCodeStr.toLowerCase()] = scanCode;\n            if (immutable) {\n                IMMUTABLE_CODE_TO_KEY_CODE[scanCode] = keyCode;\n                if ((keyCode !== 0 /* KeyCode.Unknown */)\n                    && (keyCode !== 3 /* KeyCode.Enter */)\n                    && (keyCode !== 5 /* KeyCode.Ctrl */)\n                    && (keyCode !== 4 /* KeyCode.Shift */)\n                    && (keyCode !== 6 /* KeyCode.Alt */)\n                    && (keyCode !== 57 /* KeyCode.Meta */)) {\n                    IMMUTABLE_KEY_CODE_TO_CODE[keyCode] = scanCode;\n                }\n            }\n        }\n        if (!seenKeyCode[keyCode]) {\n            seenKeyCode[keyCode] = true;\n            if (!keyCodeStr) {\n                throw new Error(`String representation missing for key code ${keyCode} around scan code ${scanCodeStr}`);\n            }\n            uiMap.define(keyCode, keyCodeStr);\n            userSettingsUSMap.define(keyCode, usUserSettingsLabel || keyCodeStr);\n            userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel || usUserSettingsLabel || keyCodeStr);\n        }\n        if (eventKeyCode) {\n            EVENT_KEY_CODE_MAP[eventKeyCode] = keyCode;\n        }\n        if (vkey) {\n            NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE[vkey] = keyCode;\n        }\n    }\n    // Manually added due to the exclusion above (due to duplication with NumpadEnter)\n    IMMUTABLE_KEY_CODE_TO_CODE[3 /* KeyCode.Enter */] = 46 /* ScanCode.Enter */;\n})();\nexport var KeyCodeUtils;\n(function (KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n    function toElectronAccelerator(keyCode) {\n        if (keyCode >= 98 /* KeyCode.Numpad0 */ && keyCode <= 113 /* KeyCode.NumpadDivide */) {\n            // [Electron Accelerators] Electron is able to parse numpad keys, but unfortunately it\n            // renders them just as regular keys in menus. For example, num0 is rendered as \"0\",\n            // numdiv is rendered as \"/\", numsub is rendered as \"-\".\n            //\n            // This can lead to incredible confusion, as it makes numpad based keybindings indistinguishable\n            // from keybindings based on regular keys.\n            //\n            // We therefore need to fall back to custom rendering for numpad keys.\n            return null;\n        }\n        switch (keyCode) {\n            case 16 /* KeyCode.UpArrow */:\n                return 'Up';\n            case 18 /* KeyCode.DownArrow */:\n                return 'Down';\n            case 15 /* KeyCode.LeftArrow */:\n                return 'Left';\n            case 17 /* KeyCode.RightArrow */:\n                return 'Right';\n        }\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toElectronAccelerator = toElectronAccelerator;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\nexport function KeyChord(firstPart, secondPart) {\n    const chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\nimport { Range } from './range.js';\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport class Selection extends Range {\n    constructor(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n        super(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n        this.selectionStartLineNumber = selectionStartLineNumber;\n        this.selectionStartColumn = selectionStartColumn;\n        this.positionLineNumber = positionLineNumber;\n        this.positionColumn = positionColumn;\n    }\n    /**\n     * Transform to a human-readable representation.\n     */\n    toString() {\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n    }\n    /**\n     * Test if equals other selection.\n     */\n    equalsSelection(other) {\n        return (Selection.selectionsEqual(this, other));\n    }\n    /**\n     * Test if the two selections are equal.\n     */\n    static selectionsEqual(a, b) {\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\n            a.selectionStartColumn === b.selectionStartColumn &&\n            a.positionLineNumber === b.positionLineNumber &&\n            a.positionColumn === b.positionColumn);\n    }\n    /**\n     * Get directions (LTR or RTL).\n     */\n    getDirection() {\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n            return 0 /* SelectionDirection.LTR */;\n        }\n        return 1 /* SelectionDirection.RTL */;\n    }\n    /**\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n     */\n    setEndPosition(endLineNumber, endColumn) {\n        if (this.getDirection() === 0 /* SelectionDirection.LTR */) {\n            return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n    }\n    /**\n     * Get the position at `positionLineNumber` and `positionColumn`.\n     */\n    getPosition() {\n        return new Position(this.positionLineNumber, this.positionColumn);\n    }\n    /**\n     * Get the position at the start of the selection.\n    */\n    getSelectionStart() {\n        return new Position(this.selectionStartLineNumber, this.selectionStartColumn);\n    }\n    /**\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n     */\n    setStartPosition(startLineNumber, startColumn) {\n        if (this.getDirection() === 0 /* SelectionDirection.LTR */) {\n            return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n        }\n        return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n    }\n    // ----\n    /**\n     * Create a `Selection` from one or two positions\n     */\n    static fromPositions(start, end = start) {\n        return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n    }\n    /**\n     * Creates a `Selection` from a range, given a direction.\n     */\n    static fromRange(range, direction) {\n        if (direction === 0 /* SelectionDirection.LTR */) {\n            return new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n        }\n        else {\n            return new Selection(range.endLineNumber, range.endColumn, range.startLineNumber, range.startColumn);\n        }\n    }\n    /**\n     * Create a `Selection` from an `ISelection`.\n     */\n    static liftSelection(sel) {\n        return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n    }\n    /**\n     * `a` equals `b`.\n     */\n    static selectionsArrEqual(a, b) {\n        if (a && !b || !a && b) {\n            return false;\n        }\n        if (!a && !b) {\n            return true;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0, len = a.length; i < len; i++) {\n            if (!this.selectionsEqual(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Test if `obj` is an `ISelection`.\n     */\n    static isISelection(obj) {\n        return (obj\n            && (typeof obj.selectionStartLineNumber === 'number')\n            && (typeof obj.selectionStartColumn === 'number')\n            && (typeof obj.positionLineNumber === 'number')\n            && (typeof obj.positionColumn === 'number'));\n    }\n    /**\n     * Create with a direction.\n     */\n    static createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n        if (direction === 0 /* SelectionDirection.LTR */) {\n            return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str) {\n    return (typeof str === 'string');\n}\n/**\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj) {\n    // The method can't do a type cast since there are type (like strings) which\n    // are subclasses of any put not positvely matched by the function. Hence type\n    // narrowing results in wrong results.\n    return typeof obj === 'object'\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\n/**\n * @returns whether the provided parameter is of type `Buffer` or Uint8Array dervived type\n */\nexport function isTypedArray(obj) {\n    const TypedArray = Object.getPrototypeOf(Uint8Array);\n    return typeof obj === 'object'\n        && obj instanceof TypedArray;\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj) {\n    return (typeof obj === 'number' && !isNaN(obj));\n}\n/**\n * @returns whether the provided parameter is an Iterable, casting to the given generic\n */\nexport function isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj) {\n    return (obj === true || obj === false);\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj) {\n    return (typeof obj === 'undefined');\n}\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined(arg) {\n    return !isUndefinedOrNull(arg);\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj) {\n    return (isUndefined(obj) || obj === null);\n}\nexport function assertType(condition, type) {\n    if (!condition) {\n        throw new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n    }\n}\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined(arg) {\n    if (isUndefinedOrNull(arg)) {\n        throw new Error('Assertion Failed: argument is undefined or null');\n    }\n    return arg;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj) {\n    return (typeof obj === 'function');\n}\nexport function validateConstraints(args, constraints) {\n    const len = Math.min(args.length, constraints.length);\n    for (let i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nexport function validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw new Error(`argument does not match constraint: typeof ${constraint}`);\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch (_a) {\n            // ignore\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n    }\n}\n","import { isString } from './types.js';\nconst _codiconFontCharacters = Object.create(null);\nfunction register(id, fontCharacter) {\n    if (isString(fontCharacter)) {\n        const val = _codiconFontCharacters[fontCharacter];\n        if (val === undefined) {\n            throw new Error(`${id} references an unknown codicon: ${fontCharacter}`);\n        }\n        fontCharacter = val;\n    }\n    _codiconFontCharacters[id] = fontCharacter;\n    return { id };\n}\n/**\n * Only to be used by the iconRegistry.\n */\nexport function getCodiconFontCharacters() {\n    return _codiconFontCharacters;\n}\n/**\n * The Codicon library is a set of default icons that are built-in in VS Code.\n *\n * In the product (outside of base) Codicons should only be used as defaults. In order to have all icons in VS Code\n * themeable, component should define new, UI component specific icons using `iconRegistry.registerIcon`.\n * In that call a Codicon can be named as default.\n */\nexport const Codicon = {\n    // built-in icons, with image name\n    add: register('add', 0xea60),\n    plus: register('plus', 0xea60),\n    gistNew: register('gist-new', 0xea60),\n    repoCreate: register('repo-create', 0xea60),\n    lightbulb: register('lightbulb', 0xea61),\n    lightBulb: register('light-bulb', 0xea61),\n    repo: register('repo', 0xea62),\n    repoDelete: register('repo-delete', 0xea62),\n    gistFork: register('gist-fork', 0xea63),\n    repoForked: register('repo-forked', 0xea63),\n    gitPullRequest: register('git-pull-request', 0xea64),\n    gitPullRequestAbandoned: register('git-pull-request-abandoned', 0xea64),\n    recordKeys: register('record-keys', 0xea65),\n    keyboard: register('keyboard', 0xea65),\n    tag: register('tag', 0xea66),\n    tagAdd: register('tag-add', 0xea66),\n    tagRemove: register('tag-remove', 0xea66),\n    gitPullRequestLabel: register('git-pull-request-label', 0xea66),\n    person: register('person', 0xea67),\n    personFollow: register('person-follow', 0xea67),\n    personOutline: register('person-outline', 0xea67),\n    personFilled: register('person-filled', 0xea67),\n    gitBranch: register('git-branch', 0xea68),\n    gitBranchCreate: register('git-branch-create', 0xea68),\n    gitBranchDelete: register('git-branch-delete', 0xea68),\n    sourceControl: register('source-control', 0xea68),\n    mirror: register('mirror', 0xea69),\n    mirrorPublic: register('mirror-public', 0xea69),\n    star: register('star', 0xea6a),\n    starAdd: register('star-add', 0xea6a),\n    starDelete: register('star-delete', 0xea6a),\n    starEmpty: register('star-empty', 0xea6a),\n    comment: register('comment', 0xea6b),\n    commentAdd: register('comment-add', 0xea6b),\n    alert: register('alert', 0xea6c),\n    warning: register('warning', 0xea6c),\n    search: register('search', 0xea6d),\n    searchSave: register('search-save', 0xea6d),\n    logOut: register('log-out', 0xea6e),\n    signOut: register('sign-out', 0xea6e),\n    logIn: register('log-in', 0xea6f),\n    signIn: register('sign-in', 0xea6f),\n    eye: register('eye', 0xea70),\n    eyeUnwatch: register('eye-unwatch', 0xea70),\n    eyeWatch: register('eye-watch', 0xea70),\n    circleFilled: register('circle-filled', 0xea71),\n    primitiveDot: register('primitive-dot', 0xea71),\n    closeDirty: register('close-dirty', 0xea71),\n    debugBreakpoint: register('debug-breakpoint', 0xea71),\n    debugBreakpointDisabled: register('debug-breakpoint-disabled', 0xea71),\n    debugHint: register('debug-hint', 0xea71),\n    primitiveSquare: register('primitive-square', 0xea72),\n    edit: register('edit', 0xea73),\n    pencil: register('pencil', 0xea73),\n    info: register('info', 0xea74),\n    issueOpened: register('issue-opened', 0xea74),\n    gistPrivate: register('gist-private', 0xea75),\n    gitForkPrivate: register('git-fork-private', 0xea75),\n    lock: register('lock', 0xea75),\n    mirrorPrivate: register('mirror-private', 0xea75),\n    close: register('close', 0xea76),\n    removeClose: register('remove-close', 0xea76),\n    x: register('x', 0xea76),\n    repoSync: register('repo-sync', 0xea77),\n    sync: register('sync', 0xea77),\n    clone: register('clone', 0xea78),\n    desktopDownload: register('desktop-download', 0xea78),\n    beaker: register('beaker', 0xea79),\n    microscope: register('microscope', 0xea79),\n    vm: register('vm', 0xea7a),\n    deviceDesktop: register('device-desktop', 0xea7a),\n    file: register('file', 0xea7b),\n    fileText: register('file-text', 0xea7b),\n    more: register('more', 0xea7c),\n    ellipsis: register('ellipsis', 0xea7c),\n    kebabHorizontal: register('kebab-horizontal', 0xea7c),\n    mailReply: register('mail-reply', 0xea7d),\n    reply: register('reply', 0xea7d),\n    organization: register('organization', 0xea7e),\n    organizationFilled: register('organization-filled', 0xea7e),\n    organizationOutline: register('organization-outline', 0xea7e),\n    newFile: register('new-file', 0xea7f),\n    fileAdd: register('file-add', 0xea7f),\n    newFolder: register('new-folder', 0xea80),\n    fileDirectoryCreate: register('file-directory-create', 0xea80),\n    trash: register('trash', 0xea81),\n    trashcan: register('trashcan', 0xea81),\n    history: register('history', 0xea82),\n    clock: register('clock', 0xea82),\n    folder: register('folder', 0xea83),\n    fileDirectory: register('file-directory', 0xea83),\n    symbolFolder: register('symbol-folder', 0xea83),\n    logoGithub: register('logo-github', 0xea84),\n    markGithub: register('mark-github', 0xea84),\n    github: register('github', 0xea84),\n    terminal: register('terminal', 0xea85),\n    console: register('console', 0xea85),\n    repl: register('repl', 0xea85),\n    zap: register('zap', 0xea86),\n    symbolEvent: register('symbol-event', 0xea86),\n    error: register('error', 0xea87),\n    stop: register('stop', 0xea87),\n    variable: register('variable', 0xea88),\n    symbolVariable: register('symbol-variable', 0xea88),\n    array: register('array', 0xea8a),\n    symbolArray: register('symbol-array', 0xea8a),\n    symbolModule: register('symbol-module', 0xea8b),\n    symbolPackage: register('symbol-package', 0xea8b),\n    symbolNamespace: register('symbol-namespace', 0xea8b),\n    symbolObject: register('symbol-object', 0xea8b),\n    symbolMethod: register('symbol-method', 0xea8c),\n    symbolFunction: register('symbol-function', 0xea8c),\n    symbolConstructor: register('symbol-constructor', 0xea8c),\n    symbolBoolean: register('symbol-boolean', 0xea8f),\n    symbolNull: register('symbol-null', 0xea8f),\n    symbolNumeric: register('symbol-numeric', 0xea90),\n    symbolNumber: register('symbol-number', 0xea90),\n    symbolStructure: register('symbol-structure', 0xea91),\n    symbolStruct: register('symbol-struct', 0xea91),\n    symbolParameter: register('symbol-parameter', 0xea92),\n    symbolTypeParameter: register('symbol-type-parameter', 0xea92),\n    symbolKey: register('symbol-key', 0xea93),\n    symbolText: register('symbol-text', 0xea93),\n    symbolReference: register('symbol-reference', 0xea94),\n    goToFile: register('go-to-file', 0xea94),\n    symbolEnum: register('symbol-enum', 0xea95),\n    symbolValue: register('symbol-value', 0xea95),\n    symbolRuler: register('symbol-ruler', 0xea96),\n    symbolUnit: register('symbol-unit', 0xea96),\n    activateBreakpoints: register('activate-breakpoints', 0xea97),\n    archive: register('archive', 0xea98),\n    arrowBoth: register('arrow-both', 0xea99),\n    arrowDown: register('arrow-down', 0xea9a),\n    arrowLeft: register('arrow-left', 0xea9b),\n    arrowRight: register('arrow-right', 0xea9c),\n    arrowSmallDown: register('arrow-small-down', 0xea9d),\n    arrowSmallLeft: register('arrow-small-left', 0xea9e),\n    arrowSmallRight: register('arrow-small-right', 0xea9f),\n    arrowSmallUp: register('arrow-small-up', 0xeaa0),\n    arrowUp: register('arrow-up', 0xeaa1),\n    bell: register('bell', 0xeaa2),\n    bold: register('bold', 0xeaa3),\n    book: register('book', 0xeaa4),\n    bookmark: register('bookmark', 0xeaa5),\n    debugBreakpointConditionalUnverified: register('debug-breakpoint-conditional-unverified', 0xeaa6),\n    debugBreakpointConditional: register('debug-breakpoint-conditional', 0xeaa7),\n    debugBreakpointConditionalDisabled: register('debug-breakpoint-conditional-disabled', 0xeaa7),\n    debugBreakpointDataUnverified: register('debug-breakpoint-data-unverified', 0xeaa8),\n    debugBreakpointData: register('debug-breakpoint-data', 0xeaa9),\n    debugBreakpointDataDisabled: register('debug-breakpoint-data-disabled', 0xeaa9),\n    debugBreakpointLogUnverified: register('debug-breakpoint-log-unverified', 0xeaaa),\n    debugBreakpointLog: register('debug-breakpoint-log', 0xeaab),\n    debugBreakpointLogDisabled: register('debug-breakpoint-log-disabled', 0xeaab),\n    briefcase: register('briefcase', 0xeaac),\n    broadcast: register('broadcast', 0xeaad),\n    browser: register('browser', 0xeaae),\n    bug: register('bug', 0xeaaf),\n    calendar: register('calendar', 0xeab0),\n    caseSensitive: register('case-sensitive', 0xeab1),\n    check: register('check', 0xeab2),\n    checklist: register('checklist', 0xeab3),\n    chevronDown: register('chevron-down', 0xeab4),\n    dropDownButton: register('drop-down-button', 0xeab4),\n    chevronLeft: register('chevron-left', 0xeab5),\n    chevronRight: register('chevron-right', 0xeab6),\n    chevronUp: register('chevron-up', 0xeab7),\n    chromeClose: register('chrome-close', 0xeab8),\n    chromeMaximize: register('chrome-maximize', 0xeab9),\n    chromeMinimize: register('chrome-minimize', 0xeaba),\n    chromeRestore: register('chrome-restore', 0xeabb),\n    circle: register('circle', 0xeabc),\n    circleOutline: register('circle-outline', 0xeabc),\n    debugBreakpointUnverified: register('debug-breakpoint-unverified', 0xeabc),\n    circleSlash: register('circle-slash', 0xeabd),\n    circuitBoard: register('circuit-board', 0xeabe),\n    clearAll: register('clear-all', 0xeabf),\n    clippy: register('clippy', 0xeac0),\n    closeAll: register('close-all', 0xeac1),\n    cloudDownload: register('cloud-download', 0xeac2),\n    cloudUpload: register('cloud-upload', 0xeac3),\n    code: register('code', 0xeac4),\n    collapseAll: register('collapse-all', 0xeac5),\n    colorMode: register('color-mode', 0xeac6),\n    commentDiscussion: register('comment-discussion', 0xeac7),\n    compareChanges: register('compare-changes', 0xeafd),\n    creditCard: register('credit-card', 0xeac9),\n    dash: register('dash', 0xeacc),\n    dashboard: register('dashboard', 0xeacd),\n    database: register('database', 0xeace),\n    debugContinue: register('debug-continue', 0xeacf),\n    debugDisconnect: register('debug-disconnect', 0xead0),\n    debugPause: register('debug-pause', 0xead1),\n    debugRestart: register('debug-restart', 0xead2),\n    debugStart: register('debug-start', 0xead3),\n    debugStepInto: register('debug-step-into', 0xead4),\n    debugStepOut: register('debug-step-out', 0xead5),\n    debugStepOver: register('debug-step-over', 0xead6),\n    debugStop: register('debug-stop', 0xead7),\n    debug: register('debug', 0xead8),\n    deviceCameraVideo: register('device-camera-video', 0xead9),\n    deviceCamera: register('device-camera', 0xeada),\n    deviceMobile: register('device-mobile', 0xeadb),\n    diffAdded: register('diff-added', 0xeadc),\n    diffIgnored: register('diff-ignored', 0xeadd),\n    diffModified: register('diff-modified', 0xeade),\n    diffRemoved: register('diff-removed', 0xeadf),\n    diffRenamed: register('diff-renamed', 0xeae0),\n    diff: register('diff', 0xeae1),\n    discard: register('discard', 0xeae2),\n    editorLayout: register('editor-layout', 0xeae3),\n    emptyWindow: register('empty-window', 0xeae4),\n    exclude: register('exclude', 0xeae5),\n    extensions: register('extensions', 0xeae6),\n    eyeClosed: register('eye-closed', 0xeae7),\n    fileBinary: register('file-binary', 0xeae8),\n    fileCode: register('file-code', 0xeae9),\n    fileMedia: register('file-media', 0xeaea),\n    filePdf: register('file-pdf', 0xeaeb),\n    fileSubmodule: register('file-submodule', 0xeaec),\n    fileSymlinkDirectory: register('file-symlink-directory', 0xeaed),\n    fileSymlinkFile: register('file-symlink-file', 0xeaee),\n    fileZip: register('file-zip', 0xeaef),\n    files: register('files', 0xeaf0),\n    filter: register('filter', 0xeaf1),\n    flame: register('flame', 0xeaf2),\n    foldDown: register('fold-down', 0xeaf3),\n    foldUp: register('fold-up', 0xeaf4),\n    fold: register('fold', 0xeaf5),\n    folderActive: register('folder-active', 0xeaf6),\n    folderOpened: register('folder-opened', 0xeaf7),\n    gear: register('gear', 0xeaf8),\n    gift: register('gift', 0xeaf9),\n    gistSecret: register('gist-secret', 0xeafa),\n    gist: register('gist', 0xeafb),\n    gitCommit: register('git-commit', 0xeafc),\n    gitCompare: register('git-compare', 0xeafd),\n    gitMerge: register('git-merge', 0xeafe),\n    githubAction: register('github-action', 0xeaff),\n    githubAlt: register('github-alt', 0xeb00),\n    globe: register('globe', 0xeb01),\n    grabber: register('grabber', 0xeb02),\n    graph: register('graph', 0xeb03),\n    gripper: register('gripper', 0xeb04),\n    heart: register('heart', 0xeb05),\n    home: register('home', 0xeb06),\n    horizontalRule: register('horizontal-rule', 0xeb07),\n    hubot: register('hubot', 0xeb08),\n    inbox: register('inbox', 0xeb09),\n    issueClosed: register('issue-closed', 0xeba4),\n    issueReopened: register('issue-reopened', 0xeb0b),\n    issues: register('issues', 0xeb0c),\n    italic: register('italic', 0xeb0d),\n    jersey: register('jersey', 0xeb0e),\n    json: register('json', 0xeb0f),\n    bracket: register('bracket', 0xeb0f),\n    kebabVertical: register('kebab-vertical', 0xeb10),\n    key: register('key', 0xeb11),\n    law: register('law', 0xeb12),\n    lightbulbAutofix: register('lightbulb-autofix', 0xeb13),\n    linkExternal: register('link-external', 0xeb14),\n    link: register('link', 0xeb15),\n    listOrdered: register('list-ordered', 0xeb16),\n    listUnordered: register('list-unordered', 0xeb17),\n    liveShare: register('live-share', 0xeb18),\n    loading: register('loading', 0xeb19),\n    location: register('location', 0xeb1a),\n    mailRead: register('mail-read', 0xeb1b),\n    mail: register('mail', 0xeb1c),\n    markdown: register('markdown', 0xeb1d),\n    megaphone: register('megaphone', 0xeb1e),\n    mention: register('mention', 0xeb1f),\n    milestone: register('milestone', 0xeb20),\n    gitPullRequestMilestone: register('git-pull-request-milestone', 0xeb20),\n    mortarBoard: register('mortar-board', 0xeb21),\n    move: register('move', 0xeb22),\n    multipleWindows: register('multiple-windows', 0xeb23),\n    mute: register('mute', 0xeb24),\n    noNewline: register('no-newline', 0xeb25),\n    note: register('note', 0xeb26),\n    octoface: register('octoface', 0xeb27),\n    openPreview: register('open-preview', 0xeb28),\n    package: register('package', 0xeb29),\n    paintcan: register('paintcan', 0xeb2a),\n    pin: register('pin', 0xeb2b),\n    play: register('play', 0xeb2c),\n    run: register('run', 0xeb2c),\n    plug: register('plug', 0xeb2d),\n    preserveCase: register('preserve-case', 0xeb2e),\n    preview: register('preview', 0xeb2f),\n    project: register('project', 0xeb30),\n    pulse: register('pulse', 0xeb31),\n    question: register('question', 0xeb32),\n    quote: register('quote', 0xeb33),\n    radioTower: register('radio-tower', 0xeb34),\n    reactions: register('reactions', 0xeb35),\n    references: register('references', 0xeb36),\n    refresh: register('refresh', 0xeb37),\n    regex: register('regex', 0xeb38),\n    remoteExplorer: register('remote-explorer', 0xeb39),\n    remote: register('remote', 0xeb3a),\n    remove: register('remove', 0xeb3b),\n    replaceAll: register('replace-all', 0xeb3c),\n    replace: register('replace', 0xeb3d),\n    repoClone: register('repo-clone', 0xeb3e),\n    repoForcePush: register('repo-force-push', 0xeb3f),\n    repoPull: register('repo-pull', 0xeb40),\n    repoPush: register('repo-push', 0xeb41),\n    report: register('report', 0xeb42),\n    requestChanges: register('request-changes', 0xeb43),\n    rocket: register('rocket', 0xeb44),\n    rootFolderOpened: register('root-folder-opened', 0xeb45),\n    rootFolder: register('root-folder', 0xeb46),\n    rss: register('rss', 0xeb47),\n    ruby: register('ruby', 0xeb48),\n    saveAll: register('save-all', 0xeb49),\n    saveAs: register('save-as', 0xeb4a),\n    save: register('save', 0xeb4b),\n    screenFull: register('screen-full', 0xeb4c),\n    screenNormal: register('screen-normal', 0xeb4d),\n    searchStop: register('search-stop', 0xeb4e),\n    server: register('server', 0xeb50),\n    settingsGear: register('settings-gear', 0xeb51),\n    settings: register('settings', 0xeb52),\n    shield: register('shield', 0xeb53),\n    smiley: register('smiley', 0xeb54),\n    sortPrecedence: register('sort-precedence', 0xeb55),\n    splitHorizontal: register('split-horizontal', 0xeb56),\n    splitVertical: register('split-vertical', 0xeb57),\n    squirrel: register('squirrel', 0xeb58),\n    starFull: register('star-full', 0xeb59),\n    starHalf: register('star-half', 0xeb5a),\n    symbolClass: register('symbol-class', 0xeb5b),\n    symbolColor: register('symbol-color', 0xeb5c),\n    symbolCustomColor: register('symbol-customcolor', 0xeb5c),\n    symbolConstant: register('symbol-constant', 0xeb5d),\n    symbolEnumMember: register('symbol-enum-member', 0xeb5e),\n    symbolField: register('symbol-field', 0xeb5f),\n    symbolFile: register('symbol-file', 0xeb60),\n    symbolInterface: register('symbol-interface', 0xeb61),\n    symbolKeyword: register('symbol-keyword', 0xeb62),\n    symbolMisc: register('symbol-misc', 0xeb63),\n    symbolOperator: register('symbol-operator', 0xeb64),\n    symbolProperty: register('symbol-property', 0xeb65),\n    wrench: register('wrench', 0xeb65),\n    wrenchSubaction: register('wrench-subaction', 0xeb65),\n    symbolSnippet: register('symbol-snippet', 0xeb66),\n    tasklist: register('tasklist', 0xeb67),\n    telescope: register('telescope', 0xeb68),\n    textSize: register('text-size', 0xeb69),\n    threeBars: register('three-bars', 0xeb6a),\n    thumbsdown: register('thumbsdown', 0xeb6b),\n    thumbsup: register('thumbsup', 0xeb6c),\n    tools: register('tools', 0xeb6d),\n    triangleDown: register('triangle-down', 0xeb6e),\n    triangleLeft: register('triangle-left', 0xeb6f),\n    triangleRight: register('triangle-right', 0xeb70),\n    triangleUp: register('triangle-up', 0xeb71),\n    twitter: register('twitter', 0xeb72),\n    unfold: register('unfold', 0xeb73),\n    unlock: register('unlock', 0xeb74),\n    unmute: register('unmute', 0xeb75),\n    unverified: register('unverified', 0xeb76),\n    verified: register('verified', 0xeb77),\n    versions: register('versions', 0xeb78),\n    vmActive: register('vm-active', 0xeb79),\n    vmOutline: register('vm-outline', 0xeb7a),\n    vmRunning: register('vm-running', 0xeb7b),\n    watch: register('watch', 0xeb7c),\n    whitespace: register('whitespace', 0xeb7d),\n    wholeWord: register('whole-word', 0xeb7e),\n    window: register('window', 0xeb7f),\n    wordWrap: register('word-wrap', 0xeb80),\n    zoomIn: register('zoom-in', 0xeb81),\n    zoomOut: register('zoom-out', 0xeb82),\n    listFilter: register('list-filter', 0xeb83),\n    listFlat: register('list-flat', 0xeb84),\n    listSelection: register('list-selection', 0xeb85),\n    selection: register('selection', 0xeb85),\n    listTree: register('list-tree', 0xeb86),\n    debugBreakpointFunctionUnverified: register('debug-breakpoint-function-unverified', 0xeb87),\n    debugBreakpointFunction: register('debug-breakpoint-function', 0xeb88),\n    debugBreakpointFunctionDisabled: register('debug-breakpoint-function-disabled', 0xeb88),\n    debugStackframeActive: register('debug-stackframe-active', 0xeb89),\n    circleSmallFilled: register('circle-small-filled', 0xeb8a),\n    debugStackframeDot: register('debug-stackframe-dot', 0xeb8a),\n    debugStackframe: register('debug-stackframe', 0xeb8b),\n    debugStackframeFocused: register('debug-stackframe-focused', 0xeb8b),\n    debugBreakpointUnsupported: register('debug-breakpoint-unsupported', 0xeb8c),\n    symbolString: register('symbol-string', 0xeb8d),\n    debugReverseContinue: register('debug-reverse-continue', 0xeb8e),\n    debugStepBack: register('debug-step-back', 0xeb8f),\n    debugRestartFrame: register('debug-restart-frame', 0xeb90),\n    callIncoming: register('call-incoming', 0xeb92),\n    callOutgoing: register('call-outgoing', 0xeb93),\n    menu: register('menu', 0xeb94),\n    expandAll: register('expand-all', 0xeb95),\n    feedback: register('feedback', 0xeb96),\n    gitPullRequestReviewer: register('git-pull-request-reviewer', 0xeb96),\n    groupByRefType: register('group-by-ref-type', 0xeb97),\n    ungroupByRefType: register('ungroup-by-ref-type', 0xeb98),\n    account: register('account', 0xeb99),\n    gitPullRequestAssignee: register('git-pull-request-assignee', 0xeb99),\n    bellDot: register('bell-dot', 0xeb9a),\n    debugConsole: register('debug-console', 0xeb9b),\n    library: register('library', 0xeb9c),\n    output: register('output', 0xeb9d),\n    runAll: register('run-all', 0xeb9e),\n    syncIgnored: register('sync-ignored', 0xeb9f),\n    pinned: register('pinned', 0xeba0),\n    githubInverted: register('github-inverted', 0xeba1),\n    debugAlt: register('debug-alt', 0xeb91),\n    serverProcess: register('server-process', 0xeba2),\n    serverEnvironment: register('server-environment', 0xeba3),\n    pass: register('pass', 0xeba4),\n    stopCircle: register('stop-circle', 0xeba5),\n    playCircle: register('play-circle', 0xeba6),\n    record: register('record', 0xeba7),\n    debugAltSmall: register('debug-alt-small', 0xeba8),\n    vmConnect: register('vm-connect', 0xeba9),\n    cloud: register('cloud', 0xebaa),\n    merge: register('merge', 0xebab),\n    exportIcon: register('export', 0xebac),\n    graphLeft: register('graph-left', 0xebad),\n    magnet: register('magnet', 0xebae),\n    notebook: register('notebook', 0xebaf),\n    redo: register('redo', 0xebb0),\n    checkAll: register('check-all', 0xebb1),\n    pinnedDirty: register('pinned-dirty', 0xebb2),\n    passFilled: register('pass-filled', 0xebb3),\n    circleLargeFilled: register('circle-large-filled', 0xebb4),\n    circleLarge: register('circle-large', 0xebb5),\n    circleLargeOutline: register('circle-large-outline', 0xebb5),\n    combine: register('combine', 0xebb6),\n    gather: register('gather', 0xebb6),\n    table: register('table', 0xebb7),\n    variableGroup: register('variable-group', 0xebb8),\n    typeHierarchy: register('type-hierarchy', 0xebb9),\n    typeHierarchySub: register('type-hierarchy-sub', 0xebba),\n    typeHierarchySuper: register('type-hierarchy-super', 0xebbb),\n    gitPullRequestCreate: register('git-pull-request-create', 0xebbc),\n    runAbove: register('run-above', 0xebbd),\n    runBelow: register('run-below', 0xebbe),\n    notebookTemplate: register('notebook-template', 0xebbf),\n    debugRerun: register('debug-rerun', 0xebc0),\n    workspaceTrusted: register('workspace-trusted', 0xebc1),\n    workspaceUntrusted: register('workspace-untrusted', 0xebc2),\n    workspaceUnspecified: register('workspace-unspecified', 0xebc3),\n    terminalCmd: register('terminal-cmd', 0xebc4),\n    terminalDebian: register('terminal-debian', 0xebc5),\n    terminalLinux: register('terminal-linux', 0xebc6),\n    terminalPowershell: register('terminal-powershell', 0xebc7),\n    terminalTmux: register('terminal-tmux', 0xebc8),\n    terminalUbuntu: register('terminal-ubuntu', 0xebc9),\n    terminalBash: register('terminal-bash', 0xebca),\n    arrowSwap: register('arrow-swap', 0xebcb),\n    copy: register('copy', 0xebcc),\n    personAdd: register('person-add', 0xebcd),\n    filterFilled: register('filter-filled', 0xebce),\n    wand: register('wand', 0xebcf),\n    debugLineByLine: register('debug-line-by-line', 0xebd0),\n    inspect: register('inspect', 0xebd1),\n    layers: register('layers', 0xebd2),\n    layersDot: register('layers-dot', 0xebd3),\n    layersActive: register('layers-active', 0xebd4),\n    compass: register('compass', 0xebd5),\n    compassDot: register('compass-dot', 0xebd6),\n    compassActive: register('compass-active', 0xebd7),\n    azure: register('azure', 0xebd8),\n    issueDraft: register('issue-draft', 0xebd9),\n    gitPullRequestClosed: register('git-pull-request-closed', 0xebda),\n    gitPullRequestDraft: register('git-pull-request-draft', 0xebdb),\n    debugAll: register('debug-all', 0xebdc),\n    debugCoverage: register('debug-coverage', 0xebdd),\n    runErrors: register('run-errors', 0xebde),\n    folderLibrary: register('folder-library', 0xebdf),\n    debugContinueSmall: register('debug-continue-small', 0xebe0),\n    beakerStop: register('beaker-stop', 0xebe1),\n    graphLine: register('graph-line', 0xebe2),\n    graphScatter: register('graph-scatter', 0xebe3),\n    pieChart: register('pie-chart', 0xebe4),\n    bracketDot: register('bracket-dot', 0xebe5),\n    bracketError: register('bracket-error', 0xebe6),\n    lockSmall: register('lock-small', 0xebe7),\n    azureDevops: register('azure-devops', 0xebe8),\n    verifiedFilled: register('verified-filled', 0xebe9),\n    newLine: register('newline', 0xebea),\n    layout: register('layout', 0xebeb),\n    layoutActivitybarLeft: register('layout-activitybar-left', 0xebec),\n    layoutActivitybarRight: register('layout-activitybar-right', 0xebed),\n    layoutPanelLeft: register('layout-panel-left', 0xebee),\n    layoutPanelCenter: register('layout-panel-center', 0xebef),\n    layoutPanelJustify: register('layout-panel-justify', 0xebf0),\n    layoutPanelRight: register('layout-panel-right', 0xebf1),\n    layoutPanel: register('layout-panel', 0xebf2),\n    layoutSidebarLeft: register('layout-sidebar-left', 0xebf3),\n    layoutSidebarRight: register('layout-sidebar-right', 0xebf4),\n    layoutStatusbar: register('layout-statusbar', 0xebf5),\n    layoutMenubar: register('layout-menubar', 0xebf6),\n    layoutCentered: register('layout-centered', 0xebf7),\n    layoutSidebarRightOff: register('layout-sidebar-right-off', 0xec00),\n    layoutPanelOff: register('layout-panel-off', 0xec01),\n    layoutSidebarLeftOff: register('layout-sidebar-left-off', 0xec02),\n    target: register('target', 0xebf8),\n    indent: register('indent', 0xebf9),\n    recordSmall: register('record-small', 0xebfa),\n    errorSmall: register('error-small', 0xebfb),\n    arrowCircleDown: register('arrow-circle-down', 0xebfc),\n    arrowCircleLeft: register('arrow-circle-left', 0xebfd),\n    arrowCircleRight: register('arrow-circle-right', 0xebfe),\n    arrowCircleUp: register('arrow-circle-up', 0xebff),\n    heartFilled: register('heart-filled', 0xec04),\n    map: register('map', 0xec05),\n    mapFilled: register('map-filled', 0xec06),\n    circleSmall: register('circle-small', 0xec07),\n    bellSlash: register('bell-slash', 0xec08),\n    bellSlashDot: register('bell-slash-dot', 0xec09),\n    commentUnresolved: register('comment-unresolved', 0xec0a),\n    gitPullRequestGoToChanges: register('git-pull-request-go-to-changes', 0xec0b),\n    gitPullRequestNewChanges: register('git-pull-request-new-changes', 0xec0c),\n    searchFuzzy: register('search-fuzzy', 0xec0d),\n    commentDraft: register('comment-draft', 0xec0e),\n    send: register('send', 0xec0f),\n    sparkle: register('sparkle', 0xec10),\n    insert: register('insert', 0xec11),\n    mic: register('mic', 0xec12),\n    // derived icons, that could become separate icons\n    dialogError: register('dialog-error', 'error'),\n    dialogWarning: register('dialog-warning', 'warning'),\n    dialogInfo: register('dialog-info', 'info'),\n    dialogClose: register('dialog-close', 'close'),\n    treeItemExpanded: register('tree-item-expanded', 'chevron-down'), // collapsed is done with rotation\n    treeFilterOnTypeOn: register('tree-filter-on-type-on', 'list-filter'),\n    treeFilterOnTypeOff: register('tree-filter-on-type-off', 'list-selection'),\n    treeFilterClear: register('tree-filter-clear', 'close'),\n    treeItemLoading: register('tree-item-loading', 'loading'),\n    menuSelection: register('menu-selection', 'check'),\n    menuSubmenu: register('menu-submenu', 'chevron-right'),\n    menuBarMore: register('menubar-more', 'more'),\n    scrollbarButtonLeft: register('scrollbar-button-left', 'triangle-left'),\n    scrollbarButtonRight: register('scrollbar-button-right', 'triangle-right'),\n    scrollbarButtonUp: register('scrollbar-button-up', 'triangle-up'),\n    scrollbarButtonDown: register('scrollbar-button-down', 'triangle-down'),\n    toolBarMore: register('toolbar-more', 'more'),\n    quickInputBack: register('quick-input-back', 'arrow-left')\n};\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Emitter } from '../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../base/common/lifecycle.js';\nexport class TokenizationRegistry {\n    constructor() {\n        this._tokenizationSupports = new Map();\n        this._factories = new Map();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._colorMap = null;\n    }\n    handleChange(languageIds) {\n        this._onDidChange.fire({\n            changedLanguages: languageIds,\n            changedColorMap: false\n        });\n    }\n    register(languageId, support) {\n        this._tokenizationSupports.set(languageId, support);\n        this.handleChange([languageId]);\n        return toDisposable(() => {\n            if (this._tokenizationSupports.get(languageId) !== support) {\n                return;\n            }\n            this._tokenizationSupports.delete(languageId);\n            this.handleChange([languageId]);\n        });\n    }\n    get(languageId) {\n        return this._tokenizationSupports.get(languageId) || null;\n    }\n    registerFactory(languageId, factory) {\n        var _a;\n        (_a = this._factories.get(languageId)) === null || _a === void 0 ? void 0 : _a.dispose();\n        const myData = new TokenizationSupportFactoryData(this, languageId, factory);\n        this._factories.set(languageId, myData);\n        return toDisposable(() => {\n            const v = this._factories.get(languageId);\n            if (!v || v !== myData) {\n                return;\n            }\n            this._factories.delete(languageId);\n            v.dispose();\n        });\n    }\n    getOrCreate(languageId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // check first if the support is already set\n            const tokenizationSupport = this.get(languageId);\n            if (tokenizationSupport) {\n                return tokenizationSupport;\n            }\n            const factory = this._factories.get(languageId);\n            if (!factory || factory.isResolved) {\n                // no factory or factory.resolve already finished\n                return null;\n            }\n            yield factory.resolve();\n            return this.get(languageId);\n        });\n    }\n    isResolved(languageId) {\n        const tokenizationSupport = this.get(languageId);\n        if (tokenizationSupport) {\n            return true;\n        }\n        const factory = this._factories.get(languageId);\n        if (!factory || factory.isResolved) {\n            return true;\n        }\n        return false;\n    }\n    setColorMap(colorMap) {\n        this._colorMap = colorMap;\n        this._onDidChange.fire({\n            changedLanguages: Array.from(this._tokenizationSupports.keys()),\n            changedColorMap: true\n        });\n    }\n    getColorMap() {\n        return this._colorMap;\n    }\n    getDefaultBackground() {\n        if (this._colorMap && this._colorMap.length > 2 /* ColorId.DefaultBackground */) {\n            return this._colorMap[2 /* ColorId.DefaultBackground */];\n        }\n        return null;\n    }\n}\nclass TokenizationSupportFactoryData extends Disposable {\n    get isResolved() {\n        return this._isResolved;\n    }\n    constructor(_registry, _languageId, _factory) {\n        super();\n        this._registry = _registry;\n        this._languageId = _languageId;\n        this._factory = _factory;\n        this._isDisposed = false;\n        this._resolvePromise = null;\n        this._isResolved = false;\n    }\n    dispose() {\n        this._isDisposed = true;\n        super.dispose();\n    }\n    resolve() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._resolvePromise) {\n                this._resolvePromise = this._create();\n            }\n            return this._resolvePromise;\n        });\n    }\n    _create() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const value = yield this._factory.tokenizationSupport;\n            this._isResolved = true;\n            if (value && !this._isDisposed) {\n                this._register(this._registry.register(this._languageId, value));\n            }\n        });\n    }\n}\n","import { Codicon } from '../../base/common/codicons.js';\nimport { URI } from '../../base/common/uri.js';\nimport { Range } from './core/range.js';\nimport { TokenizationRegistry as TokenizationRegistryImpl } from './tokenizationRegistry.js';\nimport { localize } from '../../nls.js';\nexport class Token {\n    constructor(offset, type, language) {\n        this.offset = offset;\n        this.type = type;\n        this.language = language;\n        this._tokenBrand = undefined;\n    }\n    toString() {\n        return '(' + this.offset + ', ' + this.type + ')';\n    }\n}\n/**\n * @internal\n */\nexport class TokenizationResult {\n    constructor(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n        this._tokenizationResultBrand = undefined;\n    }\n}\n/**\n * @internal\n */\nexport class EncodedTokenizationResult {\n    constructor(\n    /**\n     * The tokens in binary format. Each token occupies two array indices. For token i:\n     *  - at offset 2*i => startIndex\n     *  - at offset 2*i + 1 => metadata\n     *\n     */\n    tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n        this._encodedTokenizationResultBrand = undefined;\n    }\n}\n/**\n * @internal\n */\nexport var CompletionItemKinds;\n(function (CompletionItemKinds) {\n    const byKind = new Map();\n    byKind.set(0 /* CompletionItemKind.Method */, Codicon.symbolMethod);\n    byKind.set(1 /* CompletionItemKind.Function */, Codicon.symbolFunction);\n    byKind.set(2 /* CompletionItemKind.Constructor */, Codicon.symbolConstructor);\n    byKind.set(3 /* CompletionItemKind.Field */, Codicon.symbolField);\n    byKind.set(4 /* CompletionItemKind.Variable */, Codicon.symbolVariable);\n    byKind.set(5 /* CompletionItemKind.Class */, Codicon.symbolClass);\n    byKind.set(6 /* CompletionItemKind.Struct */, Codicon.symbolStruct);\n    byKind.set(7 /* CompletionItemKind.Interface */, Codicon.symbolInterface);\n    byKind.set(8 /* CompletionItemKind.Module */, Codicon.symbolModule);\n    byKind.set(9 /* CompletionItemKind.Property */, Codicon.symbolProperty);\n    byKind.set(10 /* CompletionItemKind.Event */, Codicon.symbolEvent);\n    byKind.set(11 /* CompletionItemKind.Operator */, Codicon.symbolOperator);\n    byKind.set(12 /* CompletionItemKind.Unit */, Codicon.symbolUnit);\n    byKind.set(13 /* CompletionItemKind.Value */, Codicon.symbolValue);\n    byKind.set(15 /* CompletionItemKind.Enum */, Codicon.symbolEnum);\n    byKind.set(14 /* CompletionItemKind.Constant */, Codicon.symbolConstant);\n    byKind.set(15 /* CompletionItemKind.Enum */, Codicon.symbolEnum);\n    byKind.set(16 /* CompletionItemKind.EnumMember */, Codicon.symbolEnumMember);\n    byKind.set(17 /* CompletionItemKind.Keyword */, Codicon.symbolKeyword);\n    byKind.set(27 /* CompletionItemKind.Snippet */, Codicon.symbolSnippet);\n    byKind.set(18 /* CompletionItemKind.Text */, Codicon.symbolText);\n    byKind.set(19 /* CompletionItemKind.Color */, Codicon.symbolColor);\n    byKind.set(20 /* CompletionItemKind.File */, Codicon.symbolFile);\n    byKind.set(21 /* CompletionItemKind.Reference */, Codicon.symbolReference);\n    byKind.set(22 /* CompletionItemKind.Customcolor */, Codicon.symbolCustomColor);\n    byKind.set(23 /* CompletionItemKind.Folder */, Codicon.symbolFolder);\n    byKind.set(24 /* CompletionItemKind.TypeParameter */, Codicon.symbolTypeParameter);\n    byKind.set(25 /* CompletionItemKind.User */, Codicon.account);\n    byKind.set(26 /* CompletionItemKind.Issue */, Codicon.issues);\n    /**\n     * @internal\n     */\n    function toIcon(kind) {\n        let codicon = byKind.get(kind);\n        if (!codicon) {\n            console.info('No codicon found for CompletionItemKind ' + kind);\n            codicon = Codicon.symbolProperty;\n        }\n        return codicon;\n    }\n    CompletionItemKinds.toIcon = toIcon;\n    const data = new Map();\n    data.set('method', 0 /* CompletionItemKind.Method */);\n    data.set('function', 1 /* CompletionItemKind.Function */);\n    data.set('constructor', 2 /* CompletionItemKind.Constructor */);\n    data.set('field', 3 /* CompletionItemKind.Field */);\n    data.set('variable', 4 /* CompletionItemKind.Variable */);\n    data.set('class', 5 /* CompletionItemKind.Class */);\n    data.set('struct', 6 /* CompletionItemKind.Struct */);\n    data.set('interface', 7 /* CompletionItemKind.Interface */);\n    data.set('module', 8 /* CompletionItemKind.Module */);\n    data.set('property', 9 /* CompletionItemKind.Property */);\n    data.set('event', 10 /* CompletionItemKind.Event */);\n    data.set('operator', 11 /* CompletionItemKind.Operator */);\n    data.set('unit', 12 /* CompletionItemKind.Unit */);\n    data.set('value', 13 /* CompletionItemKind.Value */);\n    data.set('constant', 14 /* CompletionItemKind.Constant */);\n    data.set('enum', 15 /* CompletionItemKind.Enum */);\n    data.set('enum-member', 16 /* CompletionItemKind.EnumMember */);\n    data.set('enumMember', 16 /* CompletionItemKind.EnumMember */);\n    data.set('keyword', 17 /* CompletionItemKind.Keyword */);\n    data.set('snippet', 27 /* CompletionItemKind.Snippet */);\n    data.set('text', 18 /* CompletionItemKind.Text */);\n    data.set('color', 19 /* CompletionItemKind.Color */);\n    data.set('file', 20 /* CompletionItemKind.File */);\n    data.set('reference', 21 /* CompletionItemKind.Reference */);\n    data.set('customcolor', 22 /* CompletionItemKind.Customcolor */);\n    data.set('folder', 23 /* CompletionItemKind.Folder */);\n    data.set('type-parameter', 24 /* CompletionItemKind.TypeParameter */);\n    data.set('typeParameter', 24 /* CompletionItemKind.TypeParameter */);\n    data.set('account', 25 /* CompletionItemKind.User */);\n    data.set('issue', 26 /* CompletionItemKind.Issue */);\n    /**\n     * @internal\n     */\n    function fromString(value, strict) {\n        let res = data.get(value);\n        if (typeof res === 'undefined' && !strict) {\n            res = 9 /* CompletionItemKind.Property */;\n        }\n        return res;\n    }\n    CompletionItemKinds.fromString = fromString;\n})(CompletionItemKinds || (CompletionItemKinds = {}));\n/**\n * How an {@link InlineCompletionsProvider inline completion provider} was triggered.\n */\nexport var InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n    /**\n     * Completion was triggered automatically while editing.\n     * It is sufficient to return a single completion item in this case.\n     */\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\n    /**\n     * Completion was triggered explicitly by a user gesture.\n     * Return multiple completion items to enable cycling through them.\n     */\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Explicit\"] = 1] = \"Explicit\";\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\nexport class SelectedSuggestionInfo {\n    constructor(range, text, completionKind, isSnippetText) {\n        this.range = range;\n        this.text = text;\n        this.completionKind = completionKind;\n        this.isSnippetText = isSnippetText;\n    }\n    equals(other) {\n        return Range.lift(this.range).equalsRange(other.range)\n            && this.text === other.text\n            && this.completionKind === other.completionKind\n            && this.isSnippetText === other.isSnippetText;\n    }\n}\nexport var SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * @internal\n */\nexport function isLocationLink(thing) {\n    return thing\n        && URI.isUri(thing.uri)\n        && Range.isIRange(thing.range)\n        && (Range.isIRange(thing.originSelectionRange) || Range.isIRange(thing.targetSelectionRange));\n}\n/**\n * @internal\n */\nexport const symbolKindNames = {\n    [17 /* SymbolKind.Array */]: localize('Array', \"array\"),\n    [16 /* SymbolKind.Boolean */]: localize('Boolean', \"boolean\"),\n    [4 /* SymbolKind.Class */]: localize('Class', \"class\"),\n    [13 /* SymbolKind.Constant */]: localize('Constant', \"constant\"),\n    [8 /* SymbolKind.Constructor */]: localize('Constructor', \"constructor\"),\n    [9 /* SymbolKind.Enum */]: localize('Enum', \"enumeration\"),\n    [21 /* SymbolKind.EnumMember */]: localize('EnumMember', \"enumeration member\"),\n    [23 /* SymbolKind.Event */]: localize('Event', \"event\"),\n    [7 /* SymbolKind.Field */]: localize('Field', \"field\"),\n    [0 /* SymbolKind.File */]: localize('File', \"file\"),\n    [11 /* SymbolKind.Function */]: localize('Function', \"function\"),\n    [10 /* SymbolKind.Interface */]: localize('Interface', \"interface\"),\n    [19 /* SymbolKind.Key */]: localize('Key', \"key\"),\n    [5 /* SymbolKind.Method */]: localize('Method', \"method\"),\n    [1 /* SymbolKind.Module */]: localize('Module', \"module\"),\n    [2 /* SymbolKind.Namespace */]: localize('Namespace', \"namespace\"),\n    [20 /* SymbolKind.Null */]: localize('Null', \"null\"),\n    [15 /* SymbolKind.Number */]: localize('Number', \"number\"),\n    [18 /* SymbolKind.Object */]: localize('Object', \"object\"),\n    [24 /* SymbolKind.Operator */]: localize('Operator', \"operator\"),\n    [3 /* SymbolKind.Package */]: localize('Package', \"package\"),\n    [6 /* SymbolKind.Property */]: localize('Property', \"property\"),\n    [14 /* SymbolKind.String */]: localize('String', \"string\"),\n    [22 /* SymbolKind.Struct */]: localize('Struct', \"struct\"),\n    [25 /* SymbolKind.TypeParameter */]: localize('TypeParameter', \"type parameter\"),\n    [12 /* SymbolKind.Variable */]: localize('Variable', \"variable\"),\n};\n/**\n * @internal\n */\nexport function getAriaLabelForSymbol(symbolName, kind) {\n    return localize('symbolAriaLabel', '{0} ({1})', symbolName, symbolKindNames[kind]);\n}\n/**\n * @internal\n */\nexport var SymbolKinds;\n(function (SymbolKinds) {\n    const byKind = new Map();\n    byKind.set(0 /* SymbolKind.File */, Codicon.symbolFile);\n    byKind.set(1 /* SymbolKind.Module */, Codicon.symbolModule);\n    byKind.set(2 /* SymbolKind.Namespace */, Codicon.symbolNamespace);\n    byKind.set(3 /* SymbolKind.Package */, Codicon.symbolPackage);\n    byKind.set(4 /* SymbolKind.Class */, Codicon.symbolClass);\n    byKind.set(5 /* SymbolKind.Method */, Codicon.symbolMethod);\n    byKind.set(6 /* SymbolKind.Property */, Codicon.symbolProperty);\n    byKind.set(7 /* SymbolKind.Field */, Codicon.symbolField);\n    byKind.set(8 /* SymbolKind.Constructor */, Codicon.symbolConstructor);\n    byKind.set(9 /* SymbolKind.Enum */, Codicon.symbolEnum);\n    byKind.set(10 /* SymbolKind.Interface */, Codicon.symbolInterface);\n    byKind.set(11 /* SymbolKind.Function */, Codicon.symbolFunction);\n    byKind.set(12 /* SymbolKind.Variable */, Codicon.symbolVariable);\n    byKind.set(13 /* SymbolKind.Constant */, Codicon.symbolConstant);\n    byKind.set(14 /* SymbolKind.String */, Codicon.symbolString);\n    byKind.set(15 /* SymbolKind.Number */, Codicon.symbolNumber);\n    byKind.set(16 /* SymbolKind.Boolean */, Codicon.symbolBoolean);\n    byKind.set(17 /* SymbolKind.Array */, Codicon.symbolArray);\n    byKind.set(18 /* SymbolKind.Object */, Codicon.symbolObject);\n    byKind.set(19 /* SymbolKind.Key */, Codicon.symbolKey);\n    byKind.set(20 /* SymbolKind.Null */, Codicon.symbolNull);\n    byKind.set(21 /* SymbolKind.EnumMember */, Codicon.symbolEnumMember);\n    byKind.set(22 /* SymbolKind.Struct */, Codicon.symbolStruct);\n    byKind.set(23 /* SymbolKind.Event */, Codicon.symbolEvent);\n    byKind.set(24 /* SymbolKind.Operator */, Codicon.symbolOperator);\n    byKind.set(25 /* SymbolKind.TypeParameter */, Codicon.symbolTypeParameter);\n    /**\n     * @internal\n     */\n    function toIcon(kind) {\n        let icon = byKind.get(kind);\n        if (!icon) {\n            console.info('No codicon found for SymbolKind ' + kind);\n            icon = Codicon.symbolProperty;\n        }\n        return icon;\n    }\n    SymbolKinds.toIcon = toIcon;\n})(SymbolKinds || (SymbolKinds = {}));\n/** @internal */\nexport class TextEdit {\n}\nexport class FoldingRangeKind {\n    /**\n     * Returns a {@link FoldingRangeKind} for the given value.\n     *\n     * @param value of the kind.\n     */\n    static fromValue(value) {\n        switch (value) {\n            case 'comment': return FoldingRangeKind.Comment;\n            case 'imports': return FoldingRangeKind.Imports;\n            case 'region': return FoldingRangeKind.Region;\n        }\n        return new FoldingRangeKind(value);\n    }\n    /**\n     * Creates a new {@link FoldingRangeKind}.\n     *\n     * @param value of the kind.\n     */\n    constructor(value) {\n        this.value = value;\n    }\n}\n/**\n * Kind for folding range representing a comment. The value of the kind is 'comment'.\n */\nFoldingRangeKind.Comment = new FoldingRangeKind('comment');\n/**\n * Kind for folding range representing a import. The value of the kind is 'imports'.\n */\nFoldingRangeKind.Imports = new FoldingRangeKind('imports');\n/**\n * Kind for folding range representing regions (for example marked by `#region`, `#endregion`).\n * The value of the kind is 'region'.\n */\nFoldingRangeKind.Region = new FoldingRangeKind('region');\n/**\n * @internal\n */\nexport var Command;\n(function (Command) {\n    /**\n     * @internal\n     */\n    function is(obj) {\n        if (!obj || typeof obj !== 'object') {\n            return false;\n        }\n        return typeof obj.id === 'string' &&\n            typeof obj.title === 'string';\n    }\n    Command.is = is;\n})(Command || (Command = {}));\nexport var InlayHintKind;\n(function (InlayHintKind) {\n    InlayHintKind[InlayHintKind[\"Type\"] = 1] = \"Type\";\n    InlayHintKind[InlayHintKind[\"Parameter\"] = 2] = \"Parameter\";\n})(InlayHintKind || (InlayHintKind = {}));\n/**\n * @internal\n */\nexport class LazyTokenizationSupport {\n    constructor(createSupport) {\n        this.createSupport = createSupport;\n        this._tokenizationSupport = null;\n    }\n    dispose() {\n        if (this._tokenizationSupport) {\n            this._tokenizationSupport.then((support) => {\n                if (support) {\n                    support.dispose();\n                }\n            });\n        }\n    }\n    get tokenizationSupport() {\n        if (!this._tokenizationSupport) {\n            this._tokenizationSupport = this.createSupport();\n        }\n        return this._tokenizationSupport;\n    }\n}\n/**\n * @internal\n */\nexport const TokenizationRegistry = new TokenizationRegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\nexport var AccessibilitySupport;\n(function (AccessibilitySupport) {\n    /**\n     * This should be the browser case where it is not known if a screen reader is attached or no.\n     */\n    AccessibilitySupport[AccessibilitySupport[\"Unknown\"] = 0] = \"Unknown\";\n    AccessibilitySupport[AccessibilitySupport[\"Disabled\"] = 1] = \"Disabled\";\n    AccessibilitySupport[AccessibilitySupport[\"Enabled\"] = 2] = \"Enabled\";\n})(AccessibilitySupport || (AccessibilitySupport = {}));\nexport var CodeActionTriggerType;\n(function (CodeActionTriggerType) {\n    CodeActionTriggerType[CodeActionTriggerType[\"Invoke\"] = 1] = \"Invoke\";\n    CodeActionTriggerType[CodeActionTriggerType[\"Auto\"] = 2] = \"Auto\";\n})(CodeActionTriggerType || (CodeActionTriggerType = {}));\nexport var CompletionItemInsertTextRule;\n(function (CompletionItemInsertTextRule) {\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"None\"] = 0] = \"None\";\n    /**\n     * Adjust whitespace/indentation of multiline insert texts to\n     * match the current line indentation.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\n    /**\n     * `insertText` is a snippet.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\n})(CompletionItemInsertTextRule || (CompletionItemInsertTextRule = {}));\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\n    CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\n    CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\n    CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\n    CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\n    CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\n    CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\n    CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\n    CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\n    CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\n    CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\n    CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\n    CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\n    CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\n    CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\n    CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\n    CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\n    CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\n    CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\n    CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\n    CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\n    CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\n    CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\n    CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\n    CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\n    CompletionItemKind[CompletionItemKind[\"User\"] = 25] = \"User\";\n    CompletionItemKind[CompletionItemKind[\"Issue\"] = 26] = \"Issue\";\n    CompletionItemKind[CompletionItemKind[\"Snippet\"] = 27] = \"Snippet\";\n})(CompletionItemKind || (CompletionItemKind = {}));\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    CompletionItemTag[CompletionItemTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * How a suggest provider was triggered.\n */\nexport var CompletionTriggerKind;\n(function (CompletionTriggerKind) {\n    CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\n})(CompletionTriggerKind || (CompletionTriggerKind = {}));\n/**\n * A positioning preference for rendering content widgets.\n */\nexport var ContentWidgetPositionPreference;\n(function (ContentWidgetPositionPreference) {\n    /**\n     * Place the content widget exactly at a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"EXACT\"] = 0] = \"EXACT\";\n    /**\n     * Place the content widget above a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"ABOVE\"] = 1] = \"ABOVE\";\n    /**\n     * Place the content widget below a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"BELOW\"] = 2] = \"BELOW\";\n})(ContentWidgetPositionPreference || (ContentWidgetPositionPreference = {}));\n/**\n * Describes the reason the cursor has changed its position.\n */\nexport var CursorChangeReason;\n(function (CursorChangeReason) {\n    /**\n     * Unknown or not set.\n     */\n    CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\n    /**\n     * A `model.setValue()` was called.\n     */\n    CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\n    /**\n     * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\n     */\n    CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\n    /**\n     * There was an explicit user gesture.\n     */\n    CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\n    /**\n     * There was a Paste.\n     */\n    CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\n    /**\n     * There was an Undo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\n    /**\n     * There was a Redo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\n})(CursorChangeReason || (CursorChangeReason = {}));\n/**\n * The default end of line to use when instantiating models.\n */\nexport var DefaultEndOfLine;\n(function (DefaultEndOfLine) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\n})(DefaultEndOfLine || (DefaultEndOfLine = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * Configuration options for auto indentation in the editor\n */\nexport var EditorAutoIndentStrategy;\n(function (EditorAutoIndentStrategy) {\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"None\"] = 0] = \"None\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Keep\"] = 1] = \"Keep\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Brackets\"] = 2] = \"Brackets\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Advanced\"] = 3] = \"Advanced\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Full\"] = 4] = \"Full\";\n})(EditorAutoIndentStrategy || (EditorAutoIndentStrategy = {}));\nexport var EditorOption;\n(function (EditorOption) {\n    EditorOption[EditorOption[\"acceptSuggestionOnCommitCharacter\"] = 0] = \"acceptSuggestionOnCommitCharacter\";\n    EditorOption[EditorOption[\"acceptSuggestionOnEnter\"] = 1] = \"acceptSuggestionOnEnter\";\n    EditorOption[EditorOption[\"accessibilitySupport\"] = 2] = \"accessibilitySupport\";\n    EditorOption[EditorOption[\"accessibilityPageSize\"] = 3] = \"accessibilityPageSize\";\n    EditorOption[EditorOption[\"ariaLabel\"] = 4] = \"ariaLabel\";\n    EditorOption[EditorOption[\"ariaRequired\"] = 5] = \"ariaRequired\";\n    EditorOption[EditorOption[\"autoClosingBrackets\"] = 6] = \"autoClosingBrackets\";\n    EditorOption[EditorOption[\"autoClosingComments\"] = 7] = \"autoClosingComments\";\n    EditorOption[EditorOption[\"screenReaderAnnounceInlineSuggestion\"] = 8] = \"screenReaderAnnounceInlineSuggestion\";\n    EditorOption[EditorOption[\"autoClosingDelete\"] = 9] = \"autoClosingDelete\";\n    EditorOption[EditorOption[\"autoClosingOvertype\"] = 10] = \"autoClosingOvertype\";\n    EditorOption[EditorOption[\"autoClosingQuotes\"] = 11] = \"autoClosingQuotes\";\n    EditorOption[EditorOption[\"autoIndent\"] = 12] = \"autoIndent\";\n    EditorOption[EditorOption[\"automaticLayout\"] = 13] = \"automaticLayout\";\n    EditorOption[EditorOption[\"autoSurround\"] = 14] = \"autoSurround\";\n    EditorOption[EditorOption[\"bracketPairColorization\"] = 15] = \"bracketPairColorization\";\n    EditorOption[EditorOption[\"guides\"] = 16] = \"guides\";\n    EditorOption[EditorOption[\"codeLens\"] = 17] = \"codeLens\";\n    EditorOption[EditorOption[\"codeLensFontFamily\"] = 18] = \"codeLensFontFamily\";\n    EditorOption[EditorOption[\"codeLensFontSize\"] = 19] = \"codeLensFontSize\";\n    EditorOption[EditorOption[\"colorDecorators\"] = 20] = \"colorDecorators\";\n    EditorOption[EditorOption[\"colorDecoratorsLimit\"] = 21] = \"colorDecoratorsLimit\";\n    EditorOption[EditorOption[\"columnSelection\"] = 22] = \"columnSelection\";\n    EditorOption[EditorOption[\"comments\"] = 23] = \"comments\";\n    EditorOption[EditorOption[\"contextmenu\"] = 24] = \"contextmenu\";\n    EditorOption[EditorOption[\"copyWithSyntaxHighlighting\"] = 25] = \"copyWithSyntaxHighlighting\";\n    EditorOption[EditorOption[\"cursorBlinking\"] = 26] = \"cursorBlinking\";\n    EditorOption[EditorOption[\"cursorSmoothCaretAnimation\"] = 27] = \"cursorSmoothCaretAnimation\";\n    EditorOption[EditorOption[\"cursorStyle\"] = 28] = \"cursorStyle\";\n    EditorOption[EditorOption[\"cursorSurroundingLines\"] = 29] = \"cursorSurroundingLines\";\n    EditorOption[EditorOption[\"cursorSurroundingLinesStyle\"] = 30] = \"cursorSurroundingLinesStyle\";\n    EditorOption[EditorOption[\"cursorWidth\"] = 31] = \"cursorWidth\";\n    EditorOption[EditorOption[\"disableLayerHinting\"] = 32] = \"disableLayerHinting\";\n    EditorOption[EditorOption[\"disableMonospaceOptimizations\"] = 33] = \"disableMonospaceOptimizations\";\n    EditorOption[EditorOption[\"domReadOnly\"] = 34] = \"domReadOnly\";\n    EditorOption[EditorOption[\"dragAndDrop\"] = 35] = \"dragAndDrop\";\n    EditorOption[EditorOption[\"dropIntoEditor\"] = 36] = \"dropIntoEditor\";\n    EditorOption[EditorOption[\"emptySelectionClipboard\"] = 37] = \"emptySelectionClipboard\";\n    EditorOption[EditorOption[\"experimentalWhitespaceRendering\"] = 38] = \"experimentalWhitespaceRendering\";\n    EditorOption[EditorOption[\"extraEditorClassName\"] = 39] = \"extraEditorClassName\";\n    EditorOption[EditorOption[\"fastScrollSensitivity\"] = 40] = \"fastScrollSensitivity\";\n    EditorOption[EditorOption[\"find\"] = 41] = \"find\";\n    EditorOption[EditorOption[\"fixedOverflowWidgets\"] = 42] = \"fixedOverflowWidgets\";\n    EditorOption[EditorOption[\"folding\"] = 43] = \"folding\";\n    EditorOption[EditorOption[\"foldingStrategy\"] = 44] = \"foldingStrategy\";\n    EditorOption[EditorOption[\"foldingHighlight\"] = 45] = \"foldingHighlight\";\n    EditorOption[EditorOption[\"foldingImportsByDefault\"] = 46] = \"foldingImportsByDefault\";\n    EditorOption[EditorOption[\"foldingMaximumRegions\"] = 47] = \"foldingMaximumRegions\";\n    EditorOption[EditorOption[\"unfoldOnClickAfterEndOfLine\"] = 48] = \"unfoldOnClickAfterEndOfLine\";\n    EditorOption[EditorOption[\"fontFamily\"] = 49] = \"fontFamily\";\n    EditorOption[EditorOption[\"fontInfo\"] = 50] = \"fontInfo\";\n    EditorOption[EditorOption[\"fontLigatures\"] = 51] = \"fontLigatures\";\n    EditorOption[EditorOption[\"fontSize\"] = 52] = \"fontSize\";\n    EditorOption[EditorOption[\"fontWeight\"] = 53] = \"fontWeight\";\n    EditorOption[EditorOption[\"fontVariations\"] = 54] = \"fontVariations\";\n    EditorOption[EditorOption[\"formatOnPaste\"] = 55] = \"formatOnPaste\";\n    EditorOption[EditorOption[\"formatOnType\"] = 56] = \"formatOnType\";\n    EditorOption[EditorOption[\"glyphMargin\"] = 57] = \"glyphMargin\";\n    EditorOption[EditorOption[\"gotoLocation\"] = 58] = \"gotoLocation\";\n    EditorOption[EditorOption[\"hideCursorInOverviewRuler\"] = 59] = \"hideCursorInOverviewRuler\";\n    EditorOption[EditorOption[\"hover\"] = 60] = \"hover\";\n    EditorOption[EditorOption[\"inDiffEditor\"] = 61] = \"inDiffEditor\";\n    EditorOption[EditorOption[\"inlineSuggest\"] = 62] = \"inlineSuggest\";\n    EditorOption[EditorOption[\"letterSpacing\"] = 63] = \"letterSpacing\";\n    EditorOption[EditorOption[\"lightbulb\"] = 64] = \"lightbulb\";\n    EditorOption[EditorOption[\"lineDecorationsWidth\"] = 65] = \"lineDecorationsWidth\";\n    EditorOption[EditorOption[\"lineHeight\"] = 66] = \"lineHeight\";\n    EditorOption[EditorOption[\"lineNumbers\"] = 67] = \"lineNumbers\";\n    EditorOption[EditorOption[\"lineNumbersMinChars\"] = 68] = \"lineNumbersMinChars\";\n    EditorOption[EditorOption[\"linkedEditing\"] = 69] = \"linkedEditing\";\n    EditorOption[EditorOption[\"links\"] = 70] = \"links\";\n    EditorOption[EditorOption[\"matchBrackets\"] = 71] = \"matchBrackets\";\n    EditorOption[EditorOption[\"minimap\"] = 72] = \"minimap\";\n    EditorOption[EditorOption[\"mouseStyle\"] = 73] = \"mouseStyle\";\n    EditorOption[EditorOption[\"mouseWheelScrollSensitivity\"] = 74] = \"mouseWheelScrollSensitivity\";\n    EditorOption[EditorOption[\"mouseWheelZoom\"] = 75] = \"mouseWheelZoom\";\n    EditorOption[EditorOption[\"multiCursorMergeOverlapping\"] = 76] = \"multiCursorMergeOverlapping\";\n    EditorOption[EditorOption[\"multiCursorModifier\"] = 77] = \"multiCursorModifier\";\n    EditorOption[EditorOption[\"multiCursorPaste\"] = 78] = \"multiCursorPaste\";\n    EditorOption[EditorOption[\"multiCursorLimit\"] = 79] = \"multiCursorLimit\";\n    EditorOption[EditorOption[\"occurrencesHighlight\"] = 80] = \"occurrencesHighlight\";\n    EditorOption[EditorOption[\"overviewRulerBorder\"] = 81] = \"overviewRulerBorder\";\n    EditorOption[EditorOption[\"overviewRulerLanes\"] = 82] = \"overviewRulerLanes\";\n    EditorOption[EditorOption[\"padding\"] = 83] = \"padding\";\n    EditorOption[EditorOption[\"pasteAs\"] = 84] = \"pasteAs\";\n    EditorOption[EditorOption[\"parameterHints\"] = 85] = \"parameterHints\";\n    EditorOption[EditorOption[\"peekWidgetDefaultFocus\"] = 86] = \"peekWidgetDefaultFocus\";\n    EditorOption[EditorOption[\"definitionLinkOpensInPeek\"] = 87] = \"definitionLinkOpensInPeek\";\n    EditorOption[EditorOption[\"quickSuggestions\"] = 88] = \"quickSuggestions\";\n    EditorOption[EditorOption[\"quickSuggestionsDelay\"] = 89] = \"quickSuggestionsDelay\";\n    EditorOption[EditorOption[\"readOnly\"] = 90] = \"readOnly\";\n    EditorOption[EditorOption[\"readOnlyMessage\"] = 91] = \"readOnlyMessage\";\n    EditorOption[EditorOption[\"renameOnType\"] = 92] = \"renameOnType\";\n    EditorOption[EditorOption[\"renderControlCharacters\"] = 93] = \"renderControlCharacters\";\n    EditorOption[EditorOption[\"renderFinalNewline\"] = 94] = \"renderFinalNewline\";\n    EditorOption[EditorOption[\"renderLineHighlight\"] = 95] = \"renderLineHighlight\";\n    EditorOption[EditorOption[\"renderLineHighlightOnlyWhenFocus\"] = 96] = \"renderLineHighlightOnlyWhenFocus\";\n    EditorOption[EditorOption[\"renderValidationDecorations\"] = 97] = \"renderValidationDecorations\";\n    EditorOption[EditorOption[\"renderWhitespace\"] = 98] = \"renderWhitespace\";\n    EditorOption[EditorOption[\"revealHorizontalRightPadding\"] = 99] = \"revealHorizontalRightPadding\";\n    EditorOption[EditorOption[\"roundedSelection\"] = 100] = \"roundedSelection\";\n    EditorOption[EditorOption[\"rulers\"] = 101] = \"rulers\";\n    EditorOption[EditorOption[\"scrollbar\"] = 102] = \"scrollbar\";\n    EditorOption[EditorOption[\"scrollBeyondLastColumn\"] = 103] = \"scrollBeyondLastColumn\";\n    EditorOption[EditorOption[\"scrollBeyondLastLine\"] = 104] = \"scrollBeyondLastLine\";\n    EditorOption[EditorOption[\"scrollPredominantAxis\"] = 105] = \"scrollPredominantAxis\";\n    EditorOption[EditorOption[\"selectionClipboard\"] = 106] = \"selectionClipboard\";\n    EditorOption[EditorOption[\"selectionHighlight\"] = 107] = \"selectionHighlight\";\n    EditorOption[EditorOption[\"selectOnLineNumbers\"] = 108] = \"selectOnLineNumbers\";\n    EditorOption[EditorOption[\"showFoldingControls\"] = 109] = \"showFoldingControls\";\n    EditorOption[EditorOption[\"showUnused\"] = 110] = \"showUnused\";\n    EditorOption[EditorOption[\"snippetSuggestions\"] = 111] = \"snippetSuggestions\";\n    EditorOption[EditorOption[\"smartSelect\"] = 112] = \"smartSelect\";\n    EditorOption[EditorOption[\"smoothScrolling\"] = 113] = \"smoothScrolling\";\n    EditorOption[EditorOption[\"stickyScroll\"] = 114] = \"stickyScroll\";\n    EditorOption[EditorOption[\"stickyTabStops\"] = 115] = \"stickyTabStops\";\n    EditorOption[EditorOption[\"stopRenderingLineAfter\"] = 116] = \"stopRenderingLineAfter\";\n    EditorOption[EditorOption[\"suggest\"] = 117] = \"suggest\";\n    EditorOption[EditorOption[\"suggestFontSize\"] = 118] = \"suggestFontSize\";\n    EditorOption[EditorOption[\"suggestLineHeight\"] = 119] = \"suggestLineHeight\";\n    EditorOption[EditorOption[\"suggestOnTriggerCharacters\"] = 120] = \"suggestOnTriggerCharacters\";\n    EditorOption[EditorOption[\"suggestSelection\"] = 121] = \"suggestSelection\";\n    EditorOption[EditorOption[\"tabCompletion\"] = 122] = \"tabCompletion\";\n    EditorOption[EditorOption[\"tabIndex\"] = 123] = \"tabIndex\";\n    EditorOption[EditorOption[\"unicodeHighlighting\"] = 124] = \"unicodeHighlighting\";\n    EditorOption[EditorOption[\"unusualLineTerminators\"] = 125] = \"unusualLineTerminators\";\n    EditorOption[EditorOption[\"useShadowDOM\"] = 126] = \"useShadowDOM\";\n    EditorOption[EditorOption[\"useTabStops\"] = 127] = \"useTabStops\";\n    EditorOption[EditorOption[\"wordBreak\"] = 128] = \"wordBreak\";\n    EditorOption[EditorOption[\"wordSeparators\"] = 129] = \"wordSeparators\";\n    EditorOption[EditorOption[\"wordWrap\"] = 130] = \"wordWrap\";\n    EditorOption[EditorOption[\"wordWrapBreakAfterCharacters\"] = 131] = \"wordWrapBreakAfterCharacters\";\n    EditorOption[EditorOption[\"wordWrapBreakBeforeCharacters\"] = 132] = \"wordWrapBreakBeforeCharacters\";\n    EditorOption[EditorOption[\"wordWrapColumn\"] = 133] = \"wordWrapColumn\";\n    EditorOption[EditorOption[\"wordWrapOverride1\"] = 134] = \"wordWrapOverride1\";\n    EditorOption[EditorOption[\"wordWrapOverride2\"] = 135] = \"wordWrapOverride2\";\n    EditorOption[EditorOption[\"wrappingIndent\"] = 136] = \"wrappingIndent\";\n    EditorOption[EditorOption[\"wrappingStrategy\"] = 137] = \"wrappingStrategy\";\n    EditorOption[EditorOption[\"showDeprecated\"] = 138] = \"showDeprecated\";\n    EditorOption[EditorOption[\"inlayHints\"] = 139] = \"inlayHints\";\n    EditorOption[EditorOption[\"editorClassName\"] = 140] = \"editorClassName\";\n    EditorOption[EditorOption[\"pixelRatio\"] = 141] = \"pixelRatio\";\n    EditorOption[EditorOption[\"tabFocusMode\"] = 142] = \"tabFocusMode\";\n    EditorOption[EditorOption[\"layoutInfo\"] = 143] = \"layoutInfo\";\n    EditorOption[EditorOption[\"wrappingInfo\"] = 144] = \"wrappingInfo\";\n    EditorOption[EditorOption[\"defaultColorDecorators\"] = 145] = \"defaultColorDecorators\";\n    EditorOption[EditorOption[\"colorDecoratorsActivatedOn\"] = 146] = \"colorDecoratorsActivatedOn\";\n    EditorOption[EditorOption[\"inlineCompletionsAccessibilityVerbose\"] = 147] = \"inlineCompletionsAccessibilityVerbose\";\n})(EditorOption || (EditorOption = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLinePreference;\n(function (EndOfLinePreference) {\n    /**\n     * Use the end of line character identified in the text buffer.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\n})(EndOfLinePreference || (EndOfLinePreference = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLineSequence;\n(function (EndOfLineSequence) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\n})(EndOfLineSequence || (EndOfLineSequence = {}));\n/**\n * Vertical Lane in the glyph margin of the editor.\n */\nexport var GlyphMarginLane;\n(function (GlyphMarginLane) {\n    GlyphMarginLane[GlyphMarginLane[\"Left\"] = 1] = \"Left\";\n    GlyphMarginLane[GlyphMarginLane[\"Right\"] = 2] = \"Right\";\n})(GlyphMarginLane || (GlyphMarginLane = {}));\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport var IndentAction;\n(function (IndentAction) {\n    /**\n     * Insert new line and copy the previous line's indentation.\n     */\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n    /**\n     * Insert new line and indent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n    /**\n     * Insert two new lines:\n     *  - the first one indented which will hold the cursor\n     *  - the second one at the same indentation level\n     */\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n    /**\n     * Insert new line and outdent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {}));\nexport var InjectedTextCursorStops;\n(function (InjectedTextCursorStops) {\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Both\"] = 0] = \"Both\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Right\"] = 1] = \"Right\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Left\"] = 2] = \"Left\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"None\"] = 3] = \"None\";\n})(InjectedTextCursorStops || (InjectedTextCursorStops = {}));\nexport var InlayHintKind;\n(function (InlayHintKind) {\n    InlayHintKind[InlayHintKind[\"Type\"] = 1] = \"Type\";\n    InlayHintKind[InlayHintKind[\"Parameter\"] = 2] = \"Parameter\";\n})(InlayHintKind || (InlayHintKind = {}));\n/**\n * How an {@link InlineCompletionsProvider inline completion provider} was triggered.\n */\nexport var InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n    /**\n     * Completion was triggered automatically while editing.\n     * It is sufficient to return a single completion item in this case.\n     */\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\n    /**\n     * Completion was triggered explicitly by a user gesture.\n     * Return multiple completion items to enable cycling through them.\n     */\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Explicit\"] = 1] = \"Explicit\";\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport var KeyCode;\n(function (KeyCode) {\n    KeyCode[KeyCode[\"DependsOnKbLayout\"] = -1] = \"DependsOnKbLayout\";\n    /**\n     * Placed first to cover the 0 value of the enum.\n     */\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n    KeyCode[KeyCode[\"Digit0\"] = 21] = \"Digit0\";\n    KeyCode[KeyCode[\"Digit1\"] = 22] = \"Digit1\";\n    KeyCode[KeyCode[\"Digit2\"] = 23] = \"Digit2\";\n    KeyCode[KeyCode[\"Digit3\"] = 24] = \"Digit3\";\n    KeyCode[KeyCode[\"Digit4\"] = 25] = \"Digit4\";\n    KeyCode[KeyCode[\"Digit5\"] = 26] = \"Digit5\";\n    KeyCode[KeyCode[\"Digit6\"] = 27] = \"Digit6\";\n    KeyCode[KeyCode[\"Digit7\"] = 28] = \"Digit7\";\n    KeyCode[KeyCode[\"Digit8\"] = 29] = \"Digit8\";\n    KeyCode[KeyCode[\"Digit9\"] = 30] = \"Digit9\";\n    KeyCode[KeyCode[\"KeyA\"] = 31] = \"KeyA\";\n    KeyCode[KeyCode[\"KeyB\"] = 32] = \"KeyB\";\n    KeyCode[KeyCode[\"KeyC\"] = 33] = \"KeyC\";\n    KeyCode[KeyCode[\"KeyD\"] = 34] = \"KeyD\";\n    KeyCode[KeyCode[\"KeyE\"] = 35] = \"KeyE\";\n    KeyCode[KeyCode[\"KeyF\"] = 36] = \"KeyF\";\n    KeyCode[KeyCode[\"KeyG\"] = 37] = \"KeyG\";\n    KeyCode[KeyCode[\"KeyH\"] = 38] = \"KeyH\";\n    KeyCode[KeyCode[\"KeyI\"] = 39] = \"KeyI\";\n    KeyCode[KeyCode[\"KeyJ\"] = 40] = \"KeyJ\";\n    KeyCode[KeyCode[\"KeyK\"] = 41] = \"KeyK\";\n    KeyCode[KeyCode[\"KeyL\"] = 42] = \"KeyL\";\n    KeyCode[KeyCode[\"KeyM\"] = 43] = \"KeyM\";\n    KeyCode[KeyCode[\"KeyN\"] = 44] = \"KeyN\";\n    KeyCode[KeyCode[\"KeyO\"] = 45] = \"KeyO\";\n    KeyCode[KeyCode[\"KeyP\"] = 46] = \"KeyP\";\n    KeyCode[KeyCode[\"KeyQ\"] = 47] = \"KeyQ\";\n    KeyCode[KeyCode[\"KeyR\"] = 48] = \"KeyR\";\n    KeyCode[KeyCode[\"KeyS\"] = 49] = \"KeyS\";\n    KeyCode[KeyCode[\"KeyT\"] = 50] = \"KeyT\";\n    KeyCode[KeyCode[\"KeyU\"] = 51] = \"KeyU\";\n    KeyCode[KeyCode[\"KeyV\"] = 52] = \"KeyV\";\n    KeyCode[KeyCode[\"KeyW\"] = 53] = \"KeyW\";\n    KeyCode[KeyCode[\"KeyX\"] = 54] = \"KeyX\";\n    KeyCode[KeyCode[\"KeyY\"] = 55] = \"KeyY\";\n    KeyCode[KeyCode[\"KeyZ\"] = 56] = \"KeyZ\";\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n    KeyCode[KeyCode[\"F20\"] = 78] = \"F20\";\n    KeyCode[KeyCode[\"F21\"] = 79] = \"F21\";\n    KeyCode[KeyCode[\"F22\"] = 80] = \"F22\";\n    KeyCode[KeyCode[\"F23\"] = 81] = \"F23\";\n    KeyCode[KeyCode[\"F24\"] = 82] = \"F24\";\n    KeyCode[KeyCode[\"NumLock\"] = 83] = \"NumLock\";\n    KeyCode[KeyCode[\"ScrollLock\"] = 84] = \"ScrollLock\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ';:' key\n     */\n    KeyCode[KeyCode[\"Semicolon\"] = 85] = \"Semicolon\";\n    /**\n     * For any country/region, the '+' key\n     * For the US standard keyboard, the '=+' key\n     */\n    KeyCode[KeyCode[\"Equal\"] = 86] = \"Equal\";\n    /**\n     * For any country/region, the ',' key\n     * For the US standard keyboard, the ',<' key\n     */\n    KeyCode[KeyCode[\"Comma\"] = 87] = \"Comma\";\n    /**\n     * For any country/region, the '-' key\n     * For the US standard keyboard, the '-_' key\n     */\n    KeyCode[KeyCode[\"Minus\"] = 88] = \"Minus\";\n    /**\n     * For any country/region, the '.' key\n     * For the US standard keyboard, the '.>' key\n     */\n    KeyCode[KeyCode[\"Period\"] = 89] = \"Period\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '/?' key\n     */\n    KeyCode[KeyCode[\"Slash\"] = 90] = \"Slash\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '`~' key\n     */\n    KeyCode[KeyCode[\"Backquote\"] = 91] = \"Backquote\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '[{' key\n     */\n    KeyCode[KeyCode[\"BracketLeft\"] = 92] = \"BracketLeft\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '\\|' key\n     */\n    KeyCode[KeyCode[\"Backslash\"] = 93] = \"Backslash\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ']}' key\n     */\n    KeyCode[KeyCode[\"BracketRight\"] = 94] = \"BracketRight\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ''\"' key\n     */\n    KeyCode[KeyCode[\"Quote\"] = 95] = \"Quote\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_8\"] = 96] = \"OEM_8\";\n    /**\n     * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n     */\n    KeyCode[KeyCode[\"IntlBackslash\"] = 97] = \"IntlBackslash\";\n    KeyCode[KeyCode[\"Numpad0\"] = 98] = \"Numpad0\";\n    KeyCode[KeyCode[\"Numpad1\"] = 99] = \"Numpad1\";\n    KeyCode[KeyCode[\"Numpad2\"] = 100] = \"Numpad2\";\n    KeyCode[KeyCode[\"Numpad3\"] = 101] = \"Numpad3\";\n    KeyCode[KeyCode[\"Numpad4\"] = 102] = \"Numpad4\";\n    KeyCode[KeyCode[\"Numpad5\"] = 103] = \"Numpad5\";\n    KeyCode[KeyCode[\"Numpad6\"] = 104] = \"Numpad6\";\n    KeyCode[KeyCode[\"Numpad7\"] = 105] = \"Numpad7\";\n    KeyCode[KeyCode[\"Numpad8\"] = 106] = \"Numpad8\";\n    KeyCode[KeyCode[\"Numpad9\"] = 107] = \"Numpad9\";\n    KeyCode[KeyCode[\"NumpadMultiply\"] = 108] = \"NumpadMultiply\";\n    KeyCode[KeyCode[\"NumpadAdd\"] = 109] = \"NumpadAdd\";\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 110] = \"NUMPAD_SEPARATOR\";\n    KeyCode[KeyCode[\"NumpadSubtract\"] = 111] = \"NumpadSubtract\";\n    KeyCode[KeyCode[\"NumpadDecimal\"] = 112] = \"NumpadDecimal\";\n    KeyCode[KeyCode[\"NumpadDivide\"] = 113] = \"NumpadDivide\";\n    /**\n     * Cover all key codes when IME is processing input.\n     */\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 114] = \"KEY_IN_COMPOSITION\";\n    KeyCode[KeyCode[\"ABNT_C1\"] = 115] = \"ABNT_C1\";\n    KeyCode[KeyCode[\"ABNT_C2\"] = 116] = \"ABNT_C2\";\n    KeyCode[KeyCode[\"AudioVolumeMute\"] = 117] = \"AudioVolumeMute\";\n    KeyCode[KeyCode[\"AudioVolumeUp\"] = 118] = \"AudioVolumeUp\";\n    KeyCode[KeyCode[\"AudioVolumeDown\"] = 119] = \"AudioVolumeDown\";\n    KeyCode[KeyCode[\"BrowserSearch\"] = 120] = \"BrowserSearch\";\n    KeyCode[KeyCode[\"BrowserHome\"] = 121] = \"BrowserHome\";\n    KeyCode[KeyCode[\"BrowserBack\"] = 122] = \"BrowserBack\";\n    KeyCode[KeyCode[\"BrowserForward\"] = 123] = \"BrowserForward\";\n    KeyCode[KeyCode[\"MediaTrackNext\"] = 124] = \"MediaTrackNext\";\n    KeyCode[KeyCode[\"MediaTrackPrevious\"] = 125] = \"MediaTrackPrevious\";\n    KeyCode[KeyCode[\"MediaStop\"] = 126] = \"MediaStop\";\n    KeyCode[KeyCode[\"MediaPlayPause\"] = 127] = \"MediaPlayPause\";\n    KeyCode[KeyCode[\"LaunchMediaPlayer\"] = 128] = \"LaunchMediaPlayer\";\n    KeyCode[KeyCode[\"LaunchMail\"] = 129] = \"LaunchMail\";\n    KeyCode[KeyCode[\"LaunchApp2\"] = 130] = \"LaunchApp2\";\n    /**\n     * VK_CLEAR, 0x0C, CLEAR key\n     */\n    KeyCode[KeyCode[\"Clear\"] = 131] = \"Clear\";\n    /**\n     * Placed last to cover the length of the enum.\n     * Please do not depend on this value!\n     */\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 132] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {}));\nexport var MarkerSeverity;\n(function (MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\nexport var MarkerTag;\n(function (MarkerTag) {\n    MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\n    MarkerTag[MarkerTag[\"Deprecated\"] = 2] = \"Deprecated\";\n})(MarkerTag || (MarkerTag = {}));\n/**\n * Position in the minimap to render the decoration.\n */\nexport var MinimapPosition;\n(function (MinimapPosition) {\n    MinimapPosition[MinimapPosition[\"Inline\"] = 1] = \"Inline\";\n    MinimapPosition[MinimapPosition[\"Gutter\"] = 2] = \"Gutter\";\n})(MinimapPosition || (MinimapPosition = {}));\n/**\n * Type of hit element with the mouse in the editor.\n */\nexport var MouseTargetType;\n(function (MouseTargetType) {\n    /**\n     * Mouse is on top of an unknown element.\n     */\n    MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * Mouse is on top of the textarea used for input.\n     */\n    MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\n    /**\n     * Mouse is on top of the glyph margin\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\n    /**\n     * Mouse is on top of the line numbers\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\n    /**\n     * Mouse is on top of the line decorations\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\n    /**\n     * Mouse is on top of the whitespace left in the gutter by a view zone.\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\n    /**\n     * Mouse is on top of text in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\n    /**\n     * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\n    /**\n     * Mouse is on top of a view zone in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\n    /**\n     * Mouse is on top of a content widget.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\n    /**\n     * Mouse is on top of the decorations overview ruler.\n     */\n    MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\n    /**\n     * Mouse is on top of a scrollbar.\n     */\n    MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\n    /**\n     * Mouse is on top of an overlay widget.\n     */\n    MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\n    /**\n     * Mouse is outside of the editor.\n     */\n    MouseTargetType[MouseTargetType[\"OUTSIDE_EDITOR\"] = 13] = \"OUTSIDE_EDITOR\";\n})(MouseTargetType || (MouseTargetType = {}));\n/**\n * A positioning preference for rendering overlay widgets.\n */\nexport var OverlayWidgetPositionPreference;\n(function (OverlayWidgetPositionPreference) {\n    /**\n     * Position the overlay widget in the top right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_RIGHT_CORNER\"] = 0] = \"TOP_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the bottom right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"BOTTOM_RIGHT_CORNER\"] = 1] = \"BOTTOM_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the top center\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n})(OverlayWidgetPositionPreference || (OverlayWidgetPositionPreference = {}));\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport var OverviewRulerLane;\n(function (OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\nexport var PositionAffinity;\n(function (PositionAffinity) {\n    /**\n     * Prefers the left most position.\n    */\n    PositionAffinity[PositionAffinity[\"Left\"] = 0] = \"Left\";\n    /**\n     * Prefers the right most position.\n    */\n    PositionAffinity[PositionAffinity[\"Right\"] = 1] = \"Right\";\n    /**\n     * No preference.\n    */\n    PositionAffinity[PositionAffinity[\"None\"] = 2] = \"None\";\n    /**\n     * If the given position is on injected text, prefers the position left of it.\n    */\n    PositionAffinity[PositionAffinity[\"LeftOfInjectedText\"] = 3] = \"LeftOfInjectedText\";\n    /**\n     * If the given position is on injected text, prefers the position right of it.\n    */\n    PositionAffinity[PositionAffinity[\"RightOfInjectedText\"] = 4] = \"RightOfInjectedText\";\n})(PositionAffinity || (PositionAffinity = {}));\nexport var RenderLineNumbersType;\n(function (RenderLineNumbersType) {\n    RenderLineNumbersType[RenderLineNumbersType[\"Off\"] = 0] = \"Off\";\n    RenderLineNumbersType[RenderLineNumbersType[\"On\"] = 1] = \"On\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Relative\"] = 2] = \"Relative\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Interval\"] = 3] = \"Interval\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Custom\"] = 4] = \"Custom\";\n})(RenderLineNumbersType || (RenderLineNumbersType = {}));\nexport var RenderMinimap;\n(function (RenderMinimap) {\n    RenderMinimap[RenderMinimap[\"None\"] = 0] = \"None\";\n    RenderMinimap[RenderMinimap[\"Text\"] = 1] = \"Text\";\n    RenderMinimap[RenderMinimap[\"Blocks\"] = 2] = \"Blocks\";\n})(RenderMinimap || (RenderMinimap = {}));\nexport var ScrollType;\n(function (ScrollType) {\n    ScrollType[ScrollType[\"Smooth\"] = 0] = \"Smooth\";\n    ScrollType[ScrollType[\"Immediate\"] = 1] = \"Immediate\";\n})(ScrollType || (ScrollType = {}));\nexport var ScrollbarVisibility;\n(function (ScrollbarVisibility) {\n    ScrollbarVisibility[ScrollbarVisibility[\"Auto\"] = 1] = \"Auto\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Visible\"] = 3] = \"Visible\";\n})(ScrollbarVisibility || (ScrollbarVisibility = {}));\n/**\n * The direction of a selection.\n */\nexport var SelectionDirection;\n(function (SelectionDirection) {\n    /**\n     * The selection starts above where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n    /**\n     * The selection starts below where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n})(SelectionDirection || (SelectionDirection = {}));\nexport var SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\n    SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\n    SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\n    SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\n    SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\n    SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\n    SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\n    SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\n    SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\n    SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\n    SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\n    SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\n    SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\n    SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\n    SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\n    SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\n    SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\n    SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\n    SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\n    SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\n    SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\n    SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\n    SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\n    SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\n    SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\n    SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\n})(SymbolKind || (SymbolKind = {}));\nexport var SymbolTag;\n(function (SymbolTag) {\n    SymbolTag[SymbolTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(SymbolTag || (SymbolTag = {}));\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorBlinkingStyle;\n(function (TextEditorCursorBlinkingStyle) {\n    /**\n     * Hidden\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Hidden\"] = 0] = \"Hidden\";\n    /**\n     * Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Blink\"] = 1] = \"Blink\";\n    /**\n     * Blinking with smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Smooth\"] = 2] = \"Smooth\";\n    /**\n     * Blinking with prolonged filled state and smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Phase\"] = 3] = \"Phase\";\n    /**\n     * Expand collapse animation on the y axis\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Expand\"] = 4] = \"Expand\";\n    /**\n     * No-Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Solid\"] = 5] = \"Solid\";\n})(TextEditorCursorBlinkingStyle || (TextEditorCursorBlinkingStyle = {}));\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorStyle;\n(function (TextEditorCursorStyle) {\n    /**\n     * As a vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\n    /**\n     * As a block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\n    /**\n     * As a horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\n    /**\n     * As a thin vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\n    /**\n     * As an outlined block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\n    /**\n     * As a thin horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\n})(TextEditorCursorStyle || (TextEditorCursorStyle = {}));\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n */\nexport var TrackedRangeStickiness;\n(function (TrackedRangeStickiness) {\n    TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\n})(TrackedRangeStickiness || (TrackedRangeStickiness = {}));\n/**\n * Describes how to indent wrapped lines.\n */\nexport var WrappingIndent;\n(function (WrappingIndent) {\n    /**\n     * No indentation => wrapped lines begin at column 1.\n     */\n    WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\n    /**\n     * Same => wrapped lines get the same indentation as the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\n    /**\n     * Indent => wrapped lines get +1 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\n    /**\n     * DeepIndent => wrapped lines get +2 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"DeepIndent\"] = 3] = \"DeepIndent\";\n})(WrappingIndent || (WrappingIndent = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\nimport { Token } from '../languages.js';\nimport * as standaloneEnums from '../standalone/standaloneEnums.js';\nexport class KeyMod {\n    static chord(firstPart, secondPart) {\n        return KeyChord(firstPart, secondPart);\n    }\n}\nKeyMod.CtrlCmd = 2048 /* ConstKeyMod.CtrlCmd */;\nKeyMod.Shift = 1024 /* ConstKeyMod.Shift */;\nKeyMod.Alt = 512 /* ConstKeyMod.Alt */;\nKeyMod.WinCtrl = 256 /* ConstKeyMod.WinCtrl */;\nexport function createMonacoBaseAPI() {\n    return {\n        editor: undefined, // undefined override expected here\n        languages: undefined, // undefined override expected here\n        CancellationTokenSource: CancellationTokenSource,\n        Emitter: Emitter,\n        KeyCode: standaloneEnums.KeyCode,\n        KeyMod: KeyMod,\n        Position: Position,\n        Range: Range,\n        Selection: Selection,\n        SelectionDirection: standaloneEnums.SelectionDirection,\n        MarkerSeverity: standaloneEnums.MarkerSeverity,\n        MarkerTag: standaloneEnums.MarkerTag,\n        Uri: URI,\n        Token: Token\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CharacterClassifier } from './characterClassifier.js';\nexport class WordCharacterClassifier extends CharacterClassifier {\n    constructor(wordSeparators) {\n        super(0 /* WordCharacterClass.Regular */);\n        for (let i = 0, len = wordSeparators.length; i < len; i++) {\n            this.set(wordSeparators.charCodeAt(i), 2 /* WordCharacterClass.WordSeparator */);\n        }\n        this.set(32 /* CharCode.Space */, 1 /* WordCharacterClass.Whitespace */);\n        this.set(9 /* CharCode.Tab */, 1 /* WordCharacterClass.Whitespace */);\n    }\n}\nfunction once(computeFn) {\n    const cache = {}; // TODO@Alex unbounded cache\n    return (input) => {\n        if (!cache.hasOwnProperty(input)) {\n            cache[input] = computeFn(input);\n        }\n        return cache[input];\n    };\n}\nexport const getMapForWordSeparators = once((input) => new WordCharacterClassifier(input));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { equals } from '../../base/common/objects.js';\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport var OverviewRulerLane;\n(function (OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\n/**\n * Vertical Lane in the glyph margin of the editor.\n */\nexport var GlyphMarginLane;\n(function (GlyphMarginLane) {\n    GlyphMarginLane[GlyphMarginLane[\"Left\"] = 1] = \"Left\";\n    GlyphMarginLane[GlyphMarginLane[\"Right\"] = 2] = \"Right\";\n})(GlyphMarginLane || (GlyphMarginLane = {}));\n/**\n * Position in the minimap to render the decoration.\n */\nexport var MinimapPosition;\n(function (MinimapPosition) {\n    MinimapPosition[MinimapPosition[\"Inline\"] = 1] = \"Inline\";\n    MinimapPosition[MinimapPosition[\"Gutter\"] = 2] = \"Gutter\";\n})(MinimapPosition || (MinimapPosition = {}));\nexport var InjectedTextCursorStops;\n(function (InjectedTextCursorStops) {\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Both\"] = 0] = \"Both\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Right\"] = 1] = \"Right\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Left\"] = 2] = \"Left\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"None\"] = 3] = \"None\";\n})(InjectedTextCursorStops || (InjectedTextCursorStops = {}));\nexport class TextModelResolvedOptions {\n    get originalIndentSize() {\n        return this._indentSizeIsTabSize ? 'tabSize' : this.indentSize;\n    }\n    /**\n     * @internal\n     */\n    constructor(src) {\n        this._textModelResolvedOptionsBrand = undefined;\n        this.tabSize = Math.max(1, src.tabSize | 0);\n        if (src.indentSize === 'tabSize') {\n            this.indentSize = this.tabSize;\n            this._indentSizeIsTabSize = true;\n        }\n        else {\n            this.indentSize = Math.max(1, src.indentSize | 0);\n            this._indentSizeIsTabSize = false;\n        }\n        this.insertSpaces = Boolean(src.insertSpaces);\n        this.defaultEOL = src.defaultEOL | 0;\n        this.trimAutoWhitespace = Boolean(src.trimAutoWhitespace);\n        this.bracketPairColorizationOptions = src.bracketPairColorizationOptions;\n    }\n    /**\n     * @internal\n     */\n    equals(other) {\n        return (this.tabSize === other.tabSize\n            && this._indentSizeIsTabSize === other._indentSizeIsTabSize\n            && this.indentSize === other.indentSize\n            && this.insertSpaces === other.insertSpaces\n            && this.defaultEOL === other.defaultEOL\n            && this.trimAutoWhitespace === other.trimAutoWhitespace\n            && equals(this.bracketPairColorizationOptions, other.bracketPairColorizationOptions));\n    }\n    /**\n     * @internal\n     */\n    createChangeEvent(newOpts) {\n        return {\n            tabSize: this.tabSize !== newOpts.tabSize,\n            indentSize: this.indentSize !== newOpts.indentSize,\n            insertSpaces: this.insertSpaces !== newOpts.insertSpaces,\n            trimAutoWhitespace: this.trimAutoWhitespace !== newOpts.trimAutoWhitespace,\n        };\n    }\n}\nexport class FindMatch {\n    /**\n     * @internal\n     */\n    constructor(range, matches) {\n        this._findMatchBrand = undefined;\n        this.range = range;\n        this.matches = matches;\n    }\n}\n/**\n * @internal\n */\nexport function isITextSnapshot(obj) {\n    return (obj && typeof obj.read === 'function');\n}\n/**\n * @internal\n */\nexport class ValidAnnotatedEditOperation {\n    constructor(identifier, range, text, forceMoveMarkers, isAutoWhitespaceEdit, _isTracked) {\n        this.identifier = identifier;\n        this.range = range;\n        this.text = text;\n        this.forceMoveMarkers = forceMoveMarkers;\n        this.isAutoWhitespaceEdit = isAutoWhitespaceEdit;\n        this._isTracked = _isTracked;\n    }\n}\n/**\n * @internal\n */\nexport class SearchData {\n    constructor(regex, wordSeparators, simpleSearch) {\n        this.regex = regex;\n        this.wordSeparators = wordSeparators;\n        this.simpleSearch = simpleSearch;\n    }\n}\n/**\n * @internal\n */\nexport class ApplyEditsResult {\n    constructor(reverseEdits, changes, trimAutoWhitespaceLineNumbers) {\n        this.reverseEdits = reverseEdits;\n        this.changes = changes;\n        this.trimAutoWhitespaceLineNumbers = trimAutoWhitespaceLineNumbers;\n    }\n}\n/**\n * @internal\n */\nexport function shouldSynchronizeModel(model) {\n    return (!model.isTooLargeForSyncing() && !model.isForSimpleWidget);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\nimport { getMapForWordSeparators } from '../core/wordCharacterClassifier.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { FindMatch, SearchData } from '../model.js';\nconst LIMIT_FIND_COUNT = 999;\nexport class SearchParams {\n    constructor(searchString, isRegex, matchCase, wordSeparators) {\n        this.searchString = searchString;\n        this.isRegex = isRegex;\n        this.matchCase = matchCase;\n        this.wordSeparators = wordSeparators;\n    }\n    parseSearchRequest() {\n        if (this.searchString === '') {\n            return null;\n        }\n        // Try to create a RegExp out of the params\n        let multiline;\n        if (this.isRegex) {\n            multiline = isMultilineRegexSource(this.searchString);\n        }\n        else {\n            multiline = (this.searchString.indexOf('\\n') >= 0);\n        }\n        let regex = null;\n        try {\n            regex = strings.createRegExp(this.searchString, this.isRegex, {\n                matchCase: this.matchCase,\n                wholeWord: false,\n                multiline: multiline,\n                global: true,\n                unicode: true\n            });\n        }\n        catch (err) {\n            return null;\n        }\n        if (!regex) {\n            return null;\n        }\n        let canUseSimpleSearch = (!this.isRegex && !multiline);\n        if (canUseSimpleSearch && this.searchString.toLowerCase() !== this.searchString.toUpperCase()) {\n            // casing might make a difference\n            canUseSimpleSearch = this.matchCase;\n        }\n        return new SearchData(regex, this.wordSeparators ? getMapForWordSeparators(this.wordSeparators) : null, canUseSimpleSearch ? this.searchString : null);\n    }\n}\nexport function isMultilineRegexSource(searchString) {\n    if (!searchString || searchString.length === 0) {\n        return false;\n    }\n    for (let i = 0, len = searchString.length; i < len; i++) {\n        const chCode = searchString.charCodeAt(i);\n        if (chCode === 10 /* CharCode.LineFeed */) {\n            return true;\n        }\n        if (chCode === 92 /* CharCode.Backslash */) {\n            // move to next char\n            i++;\n            if (i >= len) {\n                // string ends with a \\\n                break;\n            }\n            const nextChCode = searchString.charCodeAt(i);\n            if (nextChCode === 110 /* CharCode.n */ || nextChCode === 114 /* CharCode.r */ || nextChCode === 87 /* CharCode.W */) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nexport function createFindMatch(range, rawMatches, captureMatches) {\n    if (!captureMatches) {\n        return new FindMatch(range, null);\n    }\n    const matches = [];\n    for (let i = 0, len = rawMatches.length; i < len; i++) {\n        matches[i] = rawMatches[i];\n    }\n    return new FindMatch(range, matches);\n}\nclass LineFeedCounter {\n    constructor(text) {\n        const lineFeedsOffsets = [];\n        let lineFeedsOffsetsLen = 0;\n        for (let i = 0, textLen = text.length; i < textLen; i++) {\n            if (text.charCodeAt(i) === 10 /* CharCode.LineFeed */) {\n                lineFeedsOffsets[lineFeedsOffsetsLen++] = i;\n            }\n        }\n        this._lineFeedsOffsets = lineFeedsOffsets;\n    }\n    findLineFeedCountBeforeOffset(offset) {\n        const lineFeedsOffsets = this._lineFeedsOffsets;\n        let min = 0;\n        let max = lineFeedsOffsets.length - 1;\n        if (max === -1) {\n            // no line feeds\n            return 0;\n        }\n        if (offset <= lineFeedsOffsets[0]) {\n            // before first line feed\n            return 0;\n        }\n        while (min < max) {\n            const mid = min + ((max - min) / 2 >> 0);\n            if (lineFeedsOffsets[mid] >= offset) {\n                max = mid - 1;\n            }\n            else {\n                if (lineFeedsOffsets[mid + 1] >= offset) {\n                    // bingo!\n                    min = mid;\n                    max = mid;\n                }\n                else {\n                    min = mid + 1;\n                }\n            }\n        }\n        return min + 1;\n    }\n}\nexport class TextModelSearch {\n    static findMatches(model, searchParams, searchRange, captureMatches, limitResultCount) {\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return [];\n        }\n        if (searchData.regex.multiline) {\n            return this._doFindMatchesMultiline(model, searchRange, new Searcher(searchData.wordSeparators, searchData.regex), captureMatches, limitResultCount);\n        }\n        return this._doFindMatchesLineByLine(model, searchRange, searchData, captureMatches, limitResultCount);\n    }\n    /**\n     * Multiline search always executes on the lines concatenated with \\n.\n     * We must therefore compensate for the count of \\n in case the model is CRLF\n     */\n    static _getMultilineMatchRange(model, deltaOffset, text, lfCounter, matchIndex, match0) {\n        let startOffset;\n        let lineFeedCountBeforeMatch = 0;\n        if (lfCounter) {\n            lineFeedCountBeforeMatch = lfCounter.findLineFeedCountBeforeOffset(matchIndex);\n            startOffset = deltaOffset + matchIndex + lineFeedCountBeforeMatch /* add as many \\r as there were \\n */;\n        }\n        else {\n            startOffset = deltaOffset + matchIndex;\n        }\n        let endOffset;\n        if (lfCounter) {\n            const lineFeedCountBeforeEndOfMatch = lfCounter.findLineFeedCountBeforeOffset(matchIndex + match0.length);\n            const lineFeedCountInMatch = lineFeedCountBeforeEndOfMatch - lineFeedCountBeforeMatch;\n            endOffset = startOffset + match0.length + lineFeedCountInMatch /* add as many \\r as there were \\n */;\n        }\n        else {\n            endOffset = startOffset + match0.length;\n        }\n        const startPosition = model.getPositionAt(startOffset);\n        const endPosition = model.getPositionAt(endOffset);\n        return new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column);\n    }\n    static _doFindMatchesMultiline(model, searchRange, searcher, captureMatches, limitResultCount) {\n        const deltaOffset = model.getOffsetAt(searchRange.getStartPosition());\n        // We always execute multiline search over the lines joined with \\n\n        // This makes it that \\n will match the EOL for both CRLF and LF models\n        // We compensate for offset errors in `_getMultilineMatchRange`\n        const text = model.getValueInRange(searchRange, 1 /* EndOfLinePreference.LF */);\n        const lfCounter = (model.getEOL() === '\\r\\n' ? new LineFeedCounter(text) : null);\n        const result = [];\n        let counter = 0;\n        let m;\n        searcher.reset(0);\n        while ((m = searcher.next(text))) {\n            result[counter++] = createFindMatch(this._getMultilineMatchRange(model, deltaOffset, text, lfCounter, m.index, m[0]), m, captureMatches);\n            if (counter >= limitResultCount) {\n                return result;\n            }\n        }\n        return result;\n    }\n    static _doFindMatchesLineByLine(model, searchRange, searchData, captureMatches, limitResultCount) {\n        const result = [];\n        let resultLen = 0;\n        // Early case for a search range that starts & stops on the same line number\n        if (searchRange.startLineNumber === searchRange.endLineNumber) {\n            const text = model.getLineContent(searchRange.startLineNumber).substring(searchRange.startColumn - 1, searchRange.endColumn - 1);\n            resultLen = this._findMatchesInLine(searchData, text, searchRange.startLineNumber, searchRange.startColumn - 1, resultLen, result, captureMatches, limitResultCount);\n            return result;\n        }\n        // Collect results from first line\n        const text = model.getLineContent(searchRange.startLineNumber).substring(searchRange.startColumn - 1);\n        resultLen = this._findMatchesInLine(searchData, text, searchRange.startLineNumber, searchRange.startColumn - 1, resultLen, result, captureMatches, limitResultCount);\n        // Collect results from middle lines\n        for (let lineNumber = searchRange.startLineNumber + 1; lineNumber < searchRange.endLineNumber && resultLen < limitResultCount; lineNumber++) {\n            resultLen = this._findMatchesInLine(searchData, model.getLineContent(lineNumber), lineNumber, 0, resultLen, result, captureMatches, limitResultCount);\n        }\n        // Collect results from last line\n        if (resultLen < limitResultCount) {\n            const text = model.getLineContent(searchRange.endLineNumber).substring(0, searchRange.endColumn - 1);\n            resultLen = this._findMatchesInLine(searchData, text, searchRange.endLineNumber, 0, resultLen, result, captureMatches, limitResultCount);\n        }\n        return result;\n    }\n    static _findMatchesInLine(searchData, text, lineNumber, deltaOffset, resultLen, result, captureMatches, limitResultCount) {\n        const wordSeparators = searchData.wordSeparators;\n        if (!captureMatches && searchData.simpleSearch) {\n            const searchString = searchData.simpleSearch;\n            const searchStringLen = searchString.length;\n            const textLength = text.length;\n            let lastMatchIndex = -searchStringLen;\n            while ((lastMatchIndex = text.indexOf(searchString, lastMatchIndex + searchStringLen)) !== -1) {\n                if (!wordSeparators || isValidMatch(wordSeparators, text, textLength, lastMatchIndex, searchStringLen)) {\n                    result[resultLen++] = new FindMatch(new Range(lineNumber, lastMatchIndex + 1 + deltaOffset, lineNumber, lastMatchIndex + 1 + searchStringLen + deltaOffset), null);\n                    if (resultLen >= limitResultCount) {\n                        return resultLen;\n                    }\n                }\n            }\n            return resultLen;\n        }\n        const searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n        let m;\n        // Reset regex to search from the beginning\n        searcher.reset(0);\n        do {\n            m = searcher.next(text);\n            if (m) {\n                result[resultLen++] = createFindMatch(new Range(lineNumber, m.index + 1 + deltaOffset, lineNumber, m.index + 1 + m[0].length + deltaOffset), m, captureMatches);\n                if (resultLen >= limitResultCount) {\n                    return resultLen;\n                }\n            }\n        } while (m);\n        return resultLen;\n    }\n    static findNextMatch(model, searchParams, searchStart, captureMatches) {\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return null;\n        }\n        const searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n        if (searchData.regex.multiline) {\n            return this._doFindNextMatchMultiline(model, searchStart, searcher, captureMatches);\n        }\n        return this._doFindNextMatchLineByLine(model, searchStart, searcher, captureMatches);\n    }\n    static _doFindNextMatchMultiline(model, searchStart, searcher, captureMatches) {\n        const searchTextStart = new Position(searchStart.lineNumber, 1);\n        const deltaOffset = model.getOffsetAt(searchTextStart);\n        const lineCount = model.getLineCount();\n        // We always execute multiline search over the lines joined with \\n\n        // This makes it that \\n will match the EOL for both CRLF and LF models\n        // We compensate for offset errors in `_getMultilineMatchRange`\n        const text = model.getValueInRange(new Range(searchTextStart.lineNumber, searchTextStart.column, lineCount, model.getLineMaxColumn(lineCount)), 1 /* EndOfLinePreference.LF */);\n        const lfCounter = (model.getEOL() === '\\r\\n' ? new LineFeedCounter(text) : null);\n        searcher.reset(searchStart.column - 1);\n        const m = searcher.next(text);\n        if (m) {\n            return createFindMatch(this._getMultilineMatchRange(model, deltaOffset, text, lfCounter, m.index, m[0]), m, captureMatches);\n        }\n        if (searchStart.lineNumber !== 1 || searchStart.column !== 1) {\n            // Try again from the top\n            return this._doFindNextMatchMultiline(model, new Position(1, 1), searcher, captureMatches);\n        }\n        return null;\n    }\n    static _doFindNextMatchLineByLine(model, searchStart, searcher, captureMatches) {\n        const lineCount = model.getLineCount();\n        const startLineNumber = searchStart.lineNumber;\n        // Look in first line\n        const text = model.getLineContent(startLineNumber);\n        const r = this._findFirstMatchInLine(searcher, text, startLineNumber, searchStart.column, captureMatches);\n        if (r) {\n            return r;\n        }\n        for (let i = 1; i <= lineCount; i++) {\n            const lineIndex = (startLineNumber + i - 1) % lineCount;\n            const text = model.getLineContent(lineIndex + 1);\n            const r = this._findFirstMatchInLine(searcher, text, lineIndex + 1, 1, captureMatches);\n            if (r) {\n                return r;\n            }\n        }\n        return null;\n    }\n    static _findFirstMatchInLine(searcher, text, lineNumber, fromColumn, captureMatches) {\n        // Set regex to search from column\n        searcher.reset(fromColumn - 1);\n        const m = searcher.next(text);\n        if (m) {\n            return createFindMatch(new Range(lineNumber, m.index + 1, lineNumber, m.index + 1 + m[0].length), m, captureMatches);\n        }\n        return null;\n    }\n    static findPreviousMatch(model, searchParams, searchStart, captureMatches) {\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return null;\n        }\n        const searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n        if (searchData.regex.multiline) {\n            return this._doFindPreviousMatchMultiline(model, searchStart, searcher, captureMatches);\n        }\n        return this._doFindPreviousMatchLineByLine(model, searchStart, searcher, captureMatches);\n    }\n    static _doFindPreviousMatchMultiline(model, searchStart, searcher, captureMatches) {\n        const matches = this._doFindMatchesMultiline(model, new Range(1, 1, searchStart.lineNumber, searchStart.column), searcher, captureMatches, 10 * LIMIT_FIND_COUNT);\n        if (matches.length > 0) {\n            return matches[matches.length - 1];\n        }\n        const lineCount = model.getLineCount();\n        if (searchStart.lineNumber !== lineCount || searchStart.column !== model.getLineMaxColumn(lineCount)) {\n            // Try again with all content\n            return this._doFindPreviousMatchMultiline(model, new Position(lineCount, model.getLineMaxColumn(lineCount)), searcher, captureMatches);\n        }\n        return null;\n    }\n    static _doFindPreviousMatchLineByLine(model, searchStart, searcher, captureMatches) {\n        const lineCount = model.getLineCount();\n        const startLineNumber = searchStart.lineNumber;\n        // Look in first line\n        const text = model.getLineContent(startLineNumber).substring(0, searchStart.column - 1);\n        const r = this._findLastMatchInLine(searcher, text, startLineNumber, captureMatches);\n        if (r) {\n            return r;\n        }\n        for (let i = 1; i <= lineCount; i++) {\n            const lineIndex = (lineCount + startLineNumber - i - 1) % lineCount;\n            const text = model.getLineContent(lineIndex + 1);\n            const r = this._findLastMatchInLine(searcher, text, lineIndex + 1, captureMatches);\n            if (r) {\n                return r;\n            }\n        }\n        return null;\n    }\n    static _findLastMatchInLine(searcher, text, lineNumber, captureMatches) {\n        let bestResult = null;\n        let m;\n        searcher.reset(0);\n        while ((m = searcher.next(text))) {\n            bestResult = createFindMatch(new Range(lineNumber, m.index + 1, lineNumber, m.index + 1 + m[0].length), m, captureMatches);\n        }\n        return bestResult;\n    }\n}\nfunction leftIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength) {\n    if (matchStartIndex === 0) {\n        // Match starts at start of string\n        return true;\n    }\n    const charBefore = text.charCodeAt(matchStartIndex - 1);\n    if (wordSeparators.get(charBefore) !== 0 /* WordCharacterClass.Regular */) {\n        // The character before the match is a word separator\n        return true;\n    }\n    if (charBefore === 13 /* CharCode.CarriageReturn */ || charBefore === 10 /* CharCode.LineFeed */) {\n        // The character before the match is line break or carriage return.\n        return true;\n    }\n    if (matchLength > 0) {\n        const firstCharInMatch = text.charCodeAt(matchStartIndex);\n        if (wordSeparators.get(firstCharInMatch) !== 0 /* WordCharacterClass.Regular */) {\n            // The first character inside the match is a word separator\n            return true;\n        }\n    }\n    return false;\n}\nfunction rightIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength) {\n    if (matchStartIndex + matchLength === textLength) {\n        // Match ends at end of string\n        return true;\n    }\n    const charAfter = text.charCodeAt(matchStartIndex + matchLength);\n    if (wordSeparators.get(charAfter) !== 0 /* WordCharacterClass.Regular */) {\n        // The character after the match is a word separator\n        return true;\n    }\n    if (charAfter === 13 /* CharCode.CarriageReturn */ || charAfter === 10 /* CharCode.LineFeed */) {\n        // The character after the match is line break or carriage return.\n        return true;\n    }\n    if (matchLength > 0) {\n        const lastCharInMatch = text.charCodeAt(matchStartIndex + matchLength - 1);\n        if (wordSeparators.get(lastCharInMatch) !== 0 /* WordCharacterClass.Regular */) {\n            // The last character in the match is a word separator\n            return true;\n        }\n    }\n    return false;\n}\nexport function isValidMatch(wordSeparators, text, textLength, matchStartIndex, matchLength) {\n    return (leftIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength)\n        && rightIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength));\n}\nexport class Searcher {\n    constructor(wordSeparators, searchRegex) {\n        this._wordSeparators = wordSeparators;\n        this._searchRegex = searchRegex;\n        this._prevMatchStartIndex = -1;\n        this._prevMatchLength = 0;\n    }\n    reset(lastIndex) {\n        this._searchRegex.lastIndex = lastIndex;\n        this._prevMatchStartIndex = -1;\n        this._prevMatchLength = 0;\n    }\n    next(text) {\n        const textLength = text.length;\n        let m;\n        do {\n            if (this._prevMatchStartIndex + this._prevMatchLength === textLength) {\n                // Reached the end of the line\n                return null;\n            }\n            m = this._searchRegex.exec(text);\n            if (!m) {\n                return null;\n            }\n            const matchStartIndex = m.index;\n            const matchLength = m[0].length;\n            if (matchStartIndex === this._prevMatchStartIndex && matchLength === this._prevMatchLength) {\n                if (matchLength === 0) {\n                    // the search result is an empty string and won't advance `regex.lastIndex`, so `regex.exec` will stuck here\n                    // we attempt to recover from that by advancing by two if surrogate pair found and by one otherwise\n                    if (strings.getNextCodePoint(text, textLength, this._searchRegex.lastIndex) > 0xFFFF) {\n                        this._searchRegex.lastIndex += 2;\n                    }\n                    else {\n                        this._searchRegex.lastIndex += 1;\n                    }\n                    continue;\n                }\n                // Exit early if the regex matches the same range twice\n                return null;\n            }\n            this._prevMatchStartIndex = matchStartIndex;\n            this._prevMatchLength = matchLength;\n            if (!this._wordSeparators || isValidMatch(this._wordSeparators, text, textLength, matchStartIndex, matchLength)) {\n                return m;\n            }\n        } while (m);\n        return null;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BugIndicatingError, onUnexpectedError } from './errors.js';\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n *\n * @deprecated Use `assert(...)` instead.\n * This method is usually used like this:\n * ```ts\n * import * as assert from 'vs/base/common/assert';\n * assert.ok(...);\n * ```\n *\n * However, `assert` in that example is a user chosen name.\n * There is no tooling for generating such an import statement.\n * Thus, the `assert(...)` function should be used instead.\n */\nexport function ok(value, message) {\n    if (!value) {\n        throw new Error(message ? `Assertion failed (${message})` : 'Assertion Failed');\n    }\n}\nexport function assertNever(value, message = 'Unreachable') {\n    throw new Error(message);\n}\n/**\n * condition must be side-effect free!\n */\nexport function assertFn(condition) {\n    if (!condition()) {\n        // eslint-disable-next-line no-debugger\n        debugger;\n        // Reevaluate `condition` again to make debugging easier\n        condition();\n        onUnexpectedError(new BugIndicatingError('Assertion Failed'));\n    }\n}\nexport function checkAdjacentItems(items, predicate) {\n    let i = 0;\n    while (i < items.length - 1) {\n        const a = items[i];\n        const b = items[i + 1];\n        if (!predicate(a, b)) {\n            return false;\n        }\n        i++;\n    }\n    return true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../core/range.js';\nimport { Searcher } from '../model/textModelSearch.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { assertNever } from '../../../base/common/assert.js';\nimport { DEFAULT_WORD_REGEXP, getWordAtText } from '../core/wordHelper.js';\nexport class UnicodeTextModelHighlighter {\n    static computeUnicodeHighlights(model, options, range) {\n        const startLine = range ? range.startLineNumber : 1;\n        const endLine = range ? range.endLineNumber : model.getLineCount();\n        const codePointHighlighter = new CodePointHighlighter(options);\n        const candidates = codePointHighlighter.getCandidateCodePoints();\n        let regex;\n        if (candidates === 'allNonBasicAscii') {\n            regex = new RegExp('[^\\\\t\\\\n\\\\r\\\\x20-\\\\x7E]', 'g');\n        }\n        else {\n            regex = new RegExp(`${buildRegExpCharClassExpr(Array.from(candidates))}`, 'g');\n        }\n        const searcher = new Searcher(null, regex);\n        const ranges = [];\n        let hasMore = false;\n        let m;\n        let ambiguousCharacterCount = 0;\n        let invisibleCharacterCount = 0;\n        let nonBasicAsciiCharacterCount = 0;\n        forLoop: for (let lineNumber = startLine, lineCount = endLine; lineNumber <= lineCount; lineNumber++) {\n            const lineContent = model.getLineContent(lineNumber);\n            const lineLength = lineContent.length;\n            // Reset regex to search from the beginning\n            searcher.reset(0);\n            do {\n                m = searcher.next(lineContent);\n                if (m) {\n                    let startIndex = m.index;\n                    let endIndex = m.index + m[0].length;\n                    // Extend range to entire code point\n                    if (startIndex > 0) {\n                        const charCodeBefore = lineContent.charCodeAt(startIndex - 1);\n                        if (strings.isHighSurrogate(charCodeBefore)) {\n                            startIndex--;\n                        }\n                    }\n                    if (endIndex + 1 < lineLength) {\n                        const charCodeBefore = lineContent.charCodeAt(endIndex - 1);\n                        if (strings.isHighSurrogate(charCodeBefore)) {\n                            endIndex++;\n                        }\n                    }\n                    const str = lineContent.substring(startIndex, endIndex);\n                    let word = getWordAtText(startIndex + 1, DEFAULT_WORD_REGEXP, lineContent, 0);\n                    if (word && word.endColumn <= startIndex + 1) {\n                        // The word does not include the problematic character, ignore the word\n                        word = null;\n                    }\n                    const highlightReason = codePointHighlighter.shouldHighlightNonBasicASCII(str, word ? word.word : null);\n                    if (highlightReason !== 0 /* SimpleHighlightReason.None */) {\n                        if (highlightReason === 3 /* SimpleHighlightReason.Ambiguous */) {\n                            ambiguousCharacterCount++;\n                        }\n                        else if (highlightReason === 2 /* SimpleHighlightReason.Invisible */) {\n                            invisibleCharacterCount++;\n                        }\n                        else if (highlightReason === 1 /* SimpleHighlightReason.NonBasicASCII */) {\n                            nonBasicAsciiCharacterCount++;\n                        }\n                        else {\n                            assertNever(highlightReason);\n                        }\n                        const MAX_RESULT_LENGTH = 1000;\n                        if (ranges.length >= MAX_RESULT_LENGTH) {\n                            hasMore = true;\n                            break forLoop;\n                        }\n                        ranges.push(new Range(lineNumber, startIndex + 1, lineNumber, endIndex + 1));\n                    }\n                }\n            } while (m);\n        }\n        return {\n            ranges,\n            hasMore,\n            ambiguousCharacterCount,\n            invisibleCharacterCount,\n            nonBasicAsciiCharacterCount\n        };\n    }\n    static computeUnicodeHighlightReason(char, options) {\n        const codePointHighlighter = new CodePointHighlighter(options);\n        const reason = codePointHighlighter.shouldHighlightNonBasicASCII(char, null);\n        switch (reason) {\n            case 0 /* SimpleHighlightReason.None */:\n                return null;\n            case 2 /* SimpleHighlightReason.Invisible */:\n                return { kind: 1 /* UnicodeHighlighterReasonKind.Invisible */ };\n            case 3 /* SimpleHighlightReason.Ambiguous */: {\n                const codePoint = char.codePointAt(0);\n                const primaryConfusable = codePointHighlighter.ambiguousCharacters.getPrimaryConfusable(codePoint);\n                const notAmbiguousInLocales = strings.AmbiguousCharacters.getLocales().filter((l) => !strings.AmbiguousCharacters.getInstance(new Set([...options.allowedLocales, l])).isAmbiguous(codePoint));\n                return { kind: 0 /* UnicodeHighlighterReasonKind.Ambiguous */, confusableWith: String.fromCodePoint(primaryConfusable), notAmbiguousInLocales };\n            }\n            case 1 /* SimpleHighlightReason.NonBasicASCII */:\n                return { kind: 2 /* UnicodeHighlighterReasonKind.NonBasicAscii */ };\n        }\n    }\n}\nfunction buildRegExpCharClassExpr(codePoints, flags) {\n    const src = `[${strings.escapeRegExpCharacters(codePoints.map((i) => String.fromCodePoint(i)).join(''))}]`;\n    return src;\n}\nclass CodePointHighlighter {\n    constructor(options) {\n        this.options = options;\n        this.allowedCodePoints = new Set(options.allowedCodePoints);\n        this.ambiguousCharacters = strings.AmbiguousCharacters.getInstance(new Set(options.allowedLocales));\n    }\n    getCandidateCodePoints() {\n        if (this.options.nonBasicASCII) {\n            return 'allNonBasicAscii';\n        }\n        const set = new Set();\n        if (this.options.invisibleCharacters) {\n            for (const cp of strings.InvisibleCharacters.codePoints) {\n                if (!isAllowedInvisibleCharacter(String.fromCodePoint(cp))) {\n                    set.add(cp);\n                }\n            }\n        }\n        if (this.options.ambiguousCharacters) {\n            for (const cp of this.ambiguousCharacters.getConfusableCodePoints()) {\n                set.add(cp);\n            }\n        }\n        for (const cp of this.allowedCodePoints) {\n            set.delete(cp);\n        }\n        return set;\n    }\n    shouldHighlightNonBasicASCII(character, wordContext) {\n        const codePoint = character.codePointAt(0);\n        if (this.allowedCodePoints.has(codePoint)) {\n            return 0 /* SimpleHighlightReason.None */;\n        }\n        if (this.options.nonBasicASCII) {\n            return 1 /* SimpleHighlightReason.NonBasicASCII */;\n        }\n        let hasBasicASCIICharacters = false;\n        let hasNonConfusableNonBasicAsciiCharacter = false;\n        if (wordContext) {\n            for (const char of wordContext) {\n                const codePoint = char.codePointAt(0);\n                const isBasicASCII = strings.isBasicASCII(char);\n                hasBasicASCIICharacters = hasBasicASCIICharacters || isBasicASCII;\n                if (!isBasicASCII &&\n                    !this.ambiguousCharacters.isAmbiguous(codePoint) &&\n                    !strings.InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n                    hasNonConfusableNonBasicAsciiCharacter = true;\n                }\n            }\n        }\n        if (\n        /* Don't allow mixing weird looking characters with ASCII */ !hasBasicASCIICharacters &&\n            /* Is there an obviously weird looking character? */ hasNonConfusableNonBasicAsciiCharacter) {\n            return 0 /* SimpleHighlightReason.None */;\n        }\n        if (this.options.invisibleCharacters) {\n            // TODO check for emojis\n            if (!isAllowedInvisibleCharacter(character) && strings.InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n                return 2 /* SimpleHighlightReason.Invisible */;\n            }\n        }\n        if (this.options.ambiguousCharacters) {\n            if (this.ambiguousCharacters.isAmbiguous(codePoint)) {\n                return 3 /* SimpleHighlightReason.Ambiguous */;\n            }\n        }\n        return 0 /* SimpleHighlightReason.None */;\n    }\n}\nfunction isAllowedInvisibleCharacter(character) {\n    return character === ' ' || character === '\\n' || character === '\\t';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class LinesDiff {\n    constructor(changes, \n    /**\n     * Sorted by original line ranges.\n     * The original line ranges and the modified line ranges must be disjoint (but can be touching).\n     */\n    moves, \n    /**\n     * Indicates if the time out was reached.\n     * In that case, the diffs might be an approximation and the user should be asked to rerun the diff with more time.\n     */\n    hitTimeout) {\n        this.changes = changes;\n        this.moves = moves;\n        this.hitTimeout = hitTimeout;\n    }\n}\nexport class MovedText {\n    constructor(lineRangeMapping, changes) {\n        this.lineRangeMapping = lineRangeMapping;\n        this.changes = changes;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BugIndicatingError } from '../../../base/common/errors.js';\n/**\n * A range of offsets (0-based).\n*/\nexport class OffsetRange {\n    static addRange(range, sortedRanges) {\n        let i = 0;\n        while (i < sortedRanges.length && sortedRanges[i].endExclusive < range.start) {\n            i++;\n        }\n        let j = i;\n        while (j < sortedRanges.length && sortedRanges[j].start <= range.endExclusive) {\n            j++;\n        }\n        if (i === j) {\n            sortedRanges.splice(i, 0, range);\n        }\n        else {\n            const start = Math.min(range.start, sortedRanges[i].start);\n            const end = Math.max(range.endExclusive, sortedRanges[j - 1].endExclusive);\n            sortedRanges.splice(i, j - i, new OffsetRange(start, end));\n        }\n    }\n    static tryCreate(start, endExclusive) {\n        if (start > endExclusive) {\n            return undefined;\n        }\n        return new OffsetRange(start, endExclusive);\n    }\n    static ofLength(length) {\n        return new OffsetRange(0, length);\n    }\n    constructor(start, endExclusive) {\n        this.start = start;\n        this.endExclusive = endExclusive;\n        if (start > endExclusive) {\n            throw new BugIndicatingError(`Invalid range: ${this.toString()}`);\n        }\n    }\n    get isEmpty() {\n        return this.start === this.endExclusive;\n    }\n    delta(offset) {\n        return new OffsetRange(this.start + offset, this.endExclusive + offset);\n    }\n    deltaStart(offset) {\n        return new OffsetRange(this.start + offset, this.endExclusive);\n    }\n    deltaEnd(offset) {\n        return new OffsetRange(this.start, this.endExclusive + offset);\n    }\n    get length() {\n        return this.endExclusive - this.start;\n    }\n    toString() {\n        return `[${this.start}, ${this.endExclusive})`;\n    }\n    equals(other) {\n        return this.start === other.start && this.endExclusive === other.endExclusive;\n    }\n    containsRange(other) {\n        return this.start <= other.start && other.endExclusive <= this.endExclusive;\n    }\n    contains(offset) {\n        return this.start <= offset && offset < this.endExclusive;\n    }\n    /**\n     * for all numbers n: range1.contains(n) or range2.contains(n) => range1.join(range2).contains(n)\n     * The joined range is the smallest range that contains both ranges.\n     */\n    join(other) {\n        return new OffsetRange(Math.min(this.start, other.start), Math.max(this.endExclusive, other.endExclusive));\n    }\n    /**\n     * for all numbers n: range1.contains(n) and range2.contains(n) <=> range1.intersect(range2).contains(n)\n     *\n     * The resulting range is empty if the ranges do not intersect, but touch.\n     * If the ranges don't even touch, the result is undefined.\n     */\n    intersect(other) {\n        const start = Math.max(this.start, other.start);\n        const end = Math.min(this.endExclusive, other.endExclusive);\n        if (start <= end) {\n            return new OffsetRange(start, end);\n        }\n        return undefined;\n    }\n    slice(arr) {\n        return arr.slice(this.start, this.endExclusive);\n    }\n    /**\n     * Returns the given value if it is contained in this instance, otherwise the closest value that is contained.\n     * The range must not be empty.\n     */\n    clip(value) {\n        if (this.isEmpty) {\n            throw new BugIndicatingError(`Invalid clipping range: ${this.toString()}`);\n        }\n        return Math.max(this.start, Math.min(this.endExclusive - 1, value));\n    }\n    /**\n     * Returns `r := value + k * length` such that `r` is contained in this range.\n     * The range must not be empty.\n     *\n     * E.g. `[5, 10).clipCyclic(10) === 5`, `[5, 10).clipCyclic(11) === 6` and `[5, 10).clipCyclic(4) === 9`.\n     */\n    clipCyclic(value) {\n        if (this.isEmpty) {\n            throw new BugIndicatingError(`Invalid clipping range: ${this.toString()}`);\n        }\n        if (value < this.start) {\n            return this.endExclusive - ((this.start - value) % this.length);\n        }\n        if (value >= this.endExclusive) {\n            return this.start + ((value - this.start) % this.length);\n        }\n        return value;\n    }\n    forEach(f) {\n        for (let i = this.start; i < this.endExclusive; i++) {\n            f(i);\n        }\n    }\n}\nexport class OffsetRangeSet {\n    constructor() {\n        this._sortedRanges = [];\n    }\n    addRange(range) {\n        let i = 0;\n        while (i < this._sortedRanges.length && this._sortedRanges[i].endExclusive < range.start) {\n            i++;\n        }\n        let j = i;\n        while (j < this._sortedRanges.length && this._sortedRanges[j].start <= range.endExclusive) {\n            j++;\n        }\n        if (i === j) {\n            this._sortedRanges.splice(i, 0, range);\n        }\n        else {\n            const start = Math.min(range.start, this._sortedRanges[i].start);\n            const end = Math.max(range.endExclusive, this._sortedRanges[j - 1].endExclusive);\n            this._sortedRanges.splice(i, j - i, new OffsetRange(start, end));\n        }\n    }\n    toString() {\n        return this._sortedRanges.map(r => r.toString()).join(', ');\n    }\n    /**\n     * Returns of there is a value that is contained in this instance and the given range.\n     */\n    intersectsStrict(other) {\n        // TODO use binary search\n        let i = 0;\n        while (i < this._sortedRanges.length && this._sortedRanges[i].endExclusive <= other.start) {\n            i++;\n        }\n        return i < this._sortedRanges.length && this._sortedRanges[i].start < other.endExclusive;\n    }\n    intersectWithRange(other) {\n        // TODO use binary search + slice\n        const result = new OffsetRangeSet();\n        for (const range of this._sortedRanges) {\n            const intersection = range.intersect(other);\n            if (intersection) {\n                result.addRange(intersection);\n            }\n        }\n        return result;\n    }\n    intersectWithRangeLength(other) {\n        return this.intersectWithRange(other).length;\n    }\n    get length() {\n        return this._sortedRanges.reduce((prev, cur) => prev + cur.length, 0);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function findLast(array, predicate, fromIdx) {\n    const idx = findLastIdx(array, predicate);\n    if (idx === -1) {\n        return undefined;\n    }\n    return array[idx];\n}\nexport function findLastIdx(array, predicate, fromIndex = array.length - 1) {\n    for (let i = fromIndex; i >= 0; i--) {\n        const element = array[i];\n        if (predicate(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Finds the last item where predicate is true using binary search.\n * `predicate` must be monotonous, i.e. `arr.map(predicate)` must be like `[true, ..., true, false, ..., false]`!\n *\n * @returns `undefined` if no item matches, otherwise the last item that matches the predicate.\n */\nexport function findLastMonotonous(array, predicate) {\n    const idx = findLastIdxMonotonous(array, predicate);\n    return idx === -1 ? undefined : array[idx];\n}\n/**\n * Finds the last item where predicate is true using binary search.\n * `predicate` must be monotonous, i.e. `arr.map(predicate)` must be like `[true, ..., true, false, ..., false]`!\n *\n * @returns `startIdx - 1` if predicate is false for all items, otherwise the index of the last item that matches the predicate.\n */\nexport function findLastIdxMonotonous(array, predicate, startIdx = 0, endIdxEx = array.length) {\n    let i = startIdx;\n    let j = endIdxEx;\n    while (i < j) {\n        const k = Math.floor((i + j) / 2);\n        if (predicate(array[k])) {\n            i = k + 1;\n        }\n        else {\n            j = k;\n        }\n    }\n    return i - 1;\n}\n/**\n * Finds the first item where predicate is true using binary search.\n * `predicate` must be monotonous, i.e. `arr.map(predicate)` must be like `[false, ..., false, true, ..., true]`!\n *\n * @returns `undefined` if no item matches, otherwise the first item that matches the predicate.\n */\nexport function findFirstMonotonous(array, predicate) {\n    const idx = findFirstIdxMonotonousOrArrLen(array, predicate);\n    return idx === array.length ? undefined : array[idx];\n}\n/**\n * Finds the first item where predicate is true using binary search.\n * `predicate` must be monotonous, i.e. `arr.map(predicate)` must be like `[false, ..., false, true, ..., true]`!\n *\n * @returns `endIdxEx` if predicate is false for all items, otherwise the index of the first item that matches the predicate.\n */\nexport function findFirstIdxMonotonousOrArrLen(array, predicate, startIdx = 0, endIdxEx = array.length) {\n    let i = startIdx;\n    let j = endIdxEx;\n    while (i < j) {\n        const k = Math.floor((i + j) / 2);\n        if (predicate(array[k])) {\n            j = k;\n        }\n        else {\n            i = k + 1;\n        }\n    }\n    return i;\n}\n/**\n * Use this when\n * * You have a sorted array\n * * You query this array with a monotonous predicate to find the last item that has a certain property.\n * * You query this array multiple times with monotonous predicates that get weaker and weaker.\n */\nexport class MonotonousArray {\n    constructor(_array) {\n        this._array = _array;\n        this._findLastMonotonousLastIdx = 0;\n    }\n    /**\n     * The predicate must be monotonous, i.e. `arr.map(predicate)` must be like `[true, ..., true, false, ..., false]`!\n     * For subsequent calls, current predicate must be weaker than (or equal to) the previous predicate, i.e. more entries must be `true`.\n     */\n    findLastMonotonous(predicate) {\n        if (MonotonousArray.assertInvariants) {\n            if (this._prevFindLastPredicate) {\n                for (const item of this._array) {\n                    if (this._prevFindLastPredicate(item) && !predicate(item)) {\n                        throw new Error('MonotonousArray: current predicate must be weaker than (or equal to) the previous predicate.');\n                    }\n                }\n            }\n            this._prevFindLastPredicate = predicate;\n        }\n        const idx = findLastIdxMonotonous(this._array, predicate, this._findLastMonotonousLastIdx);\n        this._findLastMonotonousLastIdx = idx + 1;\n        return idx === -1 ? undefined : this._array[idx];\n    }\n}\nMonotonousArray.assertInvariants = false;\n/**\n * Returns the first item that is equal to or greater than every other item.\n*/\nexport function findFirstMaxBy(array, comparator) {\n    if (array.length === 0) {\n        return undefined;\n    }\n    let max = array[0];\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, max) > 0) {\n            max = item;\n        }\n    }\n    return max;\n}\n/**\n * Returns the last item that is equal to or greater than every other item.\n*/\nexport function findLastMaxBy(array, comparator) {\n    if (array.length === 0) {\n        return undefined;\n    }\n    let max = array[0];\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, max) >= 0) {\n            max = item;\n        }\n    }\n    return max;\n}\n/**\n * Returns the first item that is equal to or less than every other item.\n*/\nexport function findFirstMinBy(array, comparator) {\n    return findFirstMaxBy(array, (a, b) => -comparator(a, b));\n}\nexport function findMaxIdxBy(array, comparator) {\n    if (array.length === 0) {\n        return -1;\n    }\n    let maxIdx = 0;\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, array[maxIdx]) > 0) {\n            maxIdx = i;\n        }\n    }\n    return maxIdx;\n}\n/**\n * Returns the first mapped value of the array which is not undefined.\n */\nexport function mapFindFirst(items, mapFn) {\n    for (const value of items) {\n        const mapped = mapFn(value);\n        if (mapped !== undefined) {\n            return mapped;\n        }\n    }\n    return undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BugIndicatingError } from '../../../base/common/errors.js';\nimport { OffsetRange } from './offsetRange.js';\nimport { Range } from './range.js';\nimport { findFirstIdxMonotonousOrArrLen, findLastIdxMonotonous, findLastMonotonous } from '../../../base/common/arraysFind.js';\n/**\n * A range of lines (1-based).\n */\nexport class LineRange {\n    static fromRange(range) {\n        return new LineRange(range.startLineNumber, range.endLineNumber);\n    }\n    /**\n     * @param lineRanges An array of sorted line ranges.\n     */\n    static joinMany(lineRanges) {\n        if (lineRanges.length === 0) {\n            return [];\n        }\n        let result = new LineRangeSet(lineRanges[0].slice());\n        for (let i = 1; i < lineRanges.length; i++) {\n            result = result.getUnion(new LineRangeSet(lineRanges[i].slice()));\n        }\n        return result.ranges;\n    }\n    static ofLength(startLineNumber, length) {\n        return new LineRange(startLineNumber, startLineNumber + length);\n    }\n    /**\n     * @internal\n     */\n    static deserialize(lineRange) {\n        return new LineRange(lineRange[0], lineRange[1]);\n    }\n    constructor(startLineNumber, endLineNumberExclusive) {\n        if (startLineNumber > endLineNumberExclusive) {\n            throw new BugIndicatingError(`startLineNumber ${startLineNumber} cannot be after endLineNumberExclusive ${endLineNumberExclusive}`);\n        }\n        this.startLineNumber = startLineNumber;\n        this.endLineNumberExclusive = endLineNumberExclusive;\n    }\n    /**\n     * Indicates if this line range contains the given line number.\n     */\n    contains(lineNumber) {\n        return this.startLineNumber <= lineNumber && lineNumber < this.endLineNumberExclusive;\n    }\n    /**\n     * Indicates if this line range is empty.\n     */\n    get isEmpty() {\n        return this.startLineNumber === this.endLineNumberExclusive;\n    }\n    /**\n     * Moves this line range by the given offset of line numbers.\n     */\n    delta(offset) {\n        return new LineRange(this.startLineNumber + offset, this.endLineNumberExclusive + offset);\n    }\n    deltaLength(offset) {\n        return new LineRange(this.startLineNumber, this.endLineNumberExclusive + offset);\n    }\n    /**\n     * The number of lines this line range spans.\n     */\n    get length() {\n        return this.endLineNumberExclusive - this.startLineNumber;\n    }\n    /**\n     * Creates a line range that combines this and the given line range.\n     */\n    join(other) {\n        return new LineRange(Math.min(this.startLineNumber, other.startLineNumber), Math.max(this.endLineNumberExclusive, other.endLineNumberExclusive));\n    }\n    toString() {\n        return `[${this.startLineNumber},${this.endLineNumberExclusive})`;\n    }\n    /**\n     * The resulting range is empty if the ranges do not intersect, but touch.\n     * If the ranges don't even touch, the result is undefined.\n     */\n    intersect(other) {\n        const startLineNumber = Math.max(this.startLineNumber, other.startLineNumber);\n        const endLineNumberExclusive = Math.min(this.endLineNumberExclusive, other.endLineNumberExclusive);\n        if (startLineNumber <= endLineNumberExclusive) {\n            return new LineRange(startLineNumber, endLineNumberExclusive);\n        }\n        return undefined;\n    }\n    intersectsStrict(other) {\n        return this.startLineNumber < other.endLineNumberExclusive && other.startLineNumber < this.endLineNumberExclusive;\n    }\n    overlapOrTouch(other) {\n        return this.startLineNumber <= other.endLineNumberExclusive && other.startLineNumber <= this.endLineNumberExclusive;\n    }\n    equals(b) {\n        return this.startLineNumber === b.startLineNumber && this.endLineNumberExclusive === b.endLineNumberExclusive;\n    }\n    toInclusiveRange() {\n        if (this.isEmpty) {\n            return null;\n        }\n        return new Range(this.startLineNumber, 1, this.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER);\n    }\n    toExclusiveRange() {\n        return new Range(this.startLineNumber, 1, this.endLineNumberExclusive, 1);\n    }\n    mapToLineArray(f) {\n        const result = [];\n        for (let lineNumber = this.startLineNumber; lineNumber < this.endLineNumberExclusive; lineNumber++) {\n            result.push(f(lineNumber));\n        }\n        return result;\n    }\n    forEach(f) {\n        for (let lineNumber = this.startLineNumber; lineNumber < this.endLineNumberExclusive; lineNumber++) {\n            f(lineNumber);\n        }\n    }\n    /**\n     * @internal\n     */\n    serialize() {\n        return [this.startLineNumber, this.endLineNumberExclusive];\n    }\n    includes(lineNumber) {\n        return this.startLineNumber <= lineNumber && lineNumber < this.endLineNumberExclusive;\n    }\n    /**\n     * Converts this 1-based line range to a 0-based offset range (subtracts 1!).\n     * @internal\n     */\n    toOffsetRange() {\n        return new OffsetRange(this.startLineNumber - 1, this.endLineNumberExclusive - 1);\n    }\n}\nexport class LineRangeSet {\n    constructor(\n    /**\n     * Sorted by start line number.\n     * No two line ranges are touching or intersecting.\n     */\n    _normalizedRanges = []) {\n        this._normalizedRanges = _normalizedRanges;\n    }\n    get ranges() {\n        return this._normalizedRanges;\n    }\n    addRange(range) {\n        if (range.length === 0) {\n            return;\n        }\n        // Idea: Find joinRange such that:\n        // replaceRange = _normalizedRanges.replaceRange(joinRange, range.joinAll(joinRange.map(idx => this._normalizedRanges[idx])))\n        // idx of first element that touches range or that is after range\n        const joinRangeStartIdx = findFirstIdxMonotonousOrArrLen(this._normalizedRanges, r => r.endLineNumberExclusive >= range.startLineNumber);\n        // idx of element after { last element that touches range or that is before range }\n        const joinRangeEndIdxExclusive = findLastIdxMonotonous(this._normalizedRanges, r => r.startLineNumber <= range.endLineNumberExclusive) + 1;\n        if (joinRangeStartIdx === joinRangeEndIdxExclusive) {\n            // If there is no element that touches range, then joinRangeStartIdx === joinRangeEndIdxExclusive and that value is the index of the element after range\n            this._normalizedRanges.splice(joinRangeStartIdx, 0, range);\n        }\n        else if (joinRangeStartIdx === joinRangeEndIdxExclusive - 1) {\n            // Else, there is an element that touches range and in this case it is both the first and last element. Thus we can replace it\n            const joinRange = this._normalizedRanges[joinRangeStartIdx];\n            this._normalizedRanges[joinRangeStartIdx] = joinRange.join(range);\n        }\n        else {\n            // First and last element are different - we need to replace the entire range\n            const joinRange = this._normalizedRanges[joinRangeStartIdx].join(this._normalizedRanges[joinRangeEndIdxExclusive - 1]).join(range);\n            this._normalizedRanges.splice(joinRangeStartIdx, joinRangeEndIdxExclusive - joinRangeStartIdx, joinRange);\n        }\n    }\n    contains(lineNumber) {\n        const rangeThatStartsBeforeEnd = findLastMonotonous(this._normalizedRanges, r => r.startLineNumber <= lineNumber);\n        return !!rangeThatStartsBeforeEnd && rangeThatStartsBeforeEnd.endLineNumberExclusive > lineNumber;\n    }\n    getUnion(other) {\n        if (this._normalizedRanges.length === 0) {\n            return other;\n        }\n        if (other._normalizedRanges.length === 0) {\n            return this;\n        }\n        const result = [];\n        let i1 = 0;\n        let i2 = 0;\n        let current = null;\n        while (i1 < this._normalizedRanges.length || i2 < other._normalizedRanges.length) {\n            let next = null;\n            if (i1 < this._normalizedRanges.length && i2 < other._normalizedRanges.length) {\n                const lineRange1 = this._normalizedRanges[i1];\n                const lineRange2 = other._normalizedRanges[i2];\n                if (lineRange1.startLineNumber < lineRange2.startLineNumber) {\n                    next = lineRange1;\n                    i1++;\n                }\n                else {\n                    next = lineRange2;\n                    i2++;\n                }\n            }\n            else if (i1 < this._normalizedRanges.length) {\n                next = this._normalizedRanges[i1];\n                i1++;\n            }\n            else {\n                next = other._normalizedRanges[i2];\n                i2++;\n            }\n            if (current === null) {\n                current = next;\n            }\n            else {\n                if (current.endLineNumberExclusive >= next.startLineNumber) {\n                    // merge\n                    current = new LineRange(current.startLineNumber, Math.max(current.endLineNumberExclusive, next.endLineNumberExclusive));\n                }\n                else {\n                    // push\n                    result.push(current);\n                    current = next;\n                }\n            }\n        }\n        if (current !== null) {\n            result.push(current);\n        }\n        return new LineRangeSet(result);\n    }\n    /**\n     * Subtracts all ranges in this set from `range` and returns the result.\n     */\n    subtractFrom(range) {\n        // idx of first element that touches range or that is after range\n        const joinRangeStartIdx = findFirstIdxMonotonousOrArrLen(this._normalizedRanges, r => r.endLineNumberExclusive >= range.startLineNumber);\n        // idx of element after { last element that touches range or that is before range }\n        const joinRangeEndIdxExclusive = findLastIdxMonotonous(this._normalizedRanges, r => r.startLineNumber <= range.endLineNumberExclusive) + 1;\n        if (joinRangeStartIdx === joinRangeEndIdxExclusive) {\n            return new LineRangeSet([range]);\n        }\n        const result = [];\n        let startLineNumber = range.startLineNumber;\n        for (let i = joinRangeStartIdx; i < joinRangeEndIdxExclusive; i++) {\n            const r = this._normalizedRanges[i];\n            if (r.startLineNumber > startLineNumber) {\n                result.push(new LineRange(startLineNumber, r.startLineNumber));\n            }\n            startLineNumber = r.endLineNumberExclusive;\n        }\n        if (startLineNumber < range.endLineNumberExclusive) {\n            result.push(new LineRange(startLineNumber, range.endLineNumberExclusive));\n        }\n        return new LineRangeSet(result);\n    }\n    toString() {\n        return this._normalizedRanges.map(r => r.toString()).join(', ');\n    }\n    getIntersection(other) {\n        const result = [];\n        let i1 = 0;\n        let i2 = 0;\n        while (i1 < this._normalizedRanges.length && i2 < other._normalizedRanges.length) {\n            const r1 = this._normalizedRanges[i1];\n            const r2 = other._normalizedRanges[i2];\n            const i = r1.intersect(r2);\n            if (i && !i.isEmpty) {\n                result.push(i);\n            }\n            if (r1.endLineNumberExclusive < r2.endLineNumberExclusive) {\n                i1++;\n            }\n            else {\n                i2++;\n            }\n        }\n        return new LineRangeSet(result);\n    }\n    getWithDelta(value) {\n        return new LineRangeSet(this._normalizedRanges.map(r => r.delta(value)));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LineRange } from '../core/lineRange.js';\n/**\n * Maps a line range in the original text model to a line range in the modified text model.\n */\nexport class LineRangeMapping {\n    static inverse(mapping, originalLineCount, modifiedLineCount) {\n        const result = [];\n        let lastOriginalEndLineNumber = 1;\n        let lastModifiedEndLineNumber = 1;\n        for (const m of mapping) {\n            const r = new DetailedLineRangeMapping(new LineRange(lastOriginalEndLineNumber, m.original.startLineNumber), new LineRange(lastModifiedEndLineNumber, m.modified.startLineNumber), undefined);\n            if (!r.modified.isEmpty) {\n                result.push(r);\n            }\n            lastOriginalEndLineNumber = m.original.endLineNumberExclusive;\n            lastModifiedEndLineNumber = m.modified.endLineNumberExclusive;\n        }\n        const r = new DetailedLineRangeMapping(new LineRange(lastOriginalEndLineNumber, originalLineCount + 1), new LineRange(lastModifiedEndLineNumber, modifiedLineCount + 1), undefined);\n        if (!r.modified.isEmpty) {\n            result.push(r);\n        }\n        return result;\n    }\n    constructor(originalRange, modifiedRange) {\n        this.original = originalRange;\n        this.modified = modifiedRange;\n    }\n    toString() {\n        return `{${this.original.toString()}->${this.modified.toString()}}`;\n    }\n    flip() {\n        return new LineRangeMapping(this.modified, this.original);\n    }\n    join(other) {\n        return new LineRangeMapping(this.original.join(other.original), this.modified.join(other.modified));\n    }\n}\n/**\n * Maps a line range in the original text model to a line range in the modified text model.\n * Also contains inner range mappings.\n */\nexport class DetailedLineRangeMapping extends LineRangeMapping {\n    constructor(originalRange, modifiedRange, innerChanges) {\n        super(originalRange, modifiedRange);\n        this.innerChanges = innerChanges;\n    }\n    flip() {\n        var _a;\n        return new DetailedLineRangeMapping(this.modified, this.original, (_a = this.innerChanges) === null || _a === void 0 ? void 0 : _a.map(c => c.flip()));\n    }\n}\n/**\n * Maps a range in the original text model to a range in the modified text model.\n */\nexport class RangeMapping {\n    constructor(originalRange, modifiedRange) {\n        this.originalRange = originalRange;\n        this.modifiedRange = modifiedRange;\n    }\n    toString() {\n        return `{${this.originalRange.toString()}->${this.modifiedRange.toString()}}`;\n    }\n    flip() {\n        return new RangeMapping(this.modifiedRange, this.originalRange);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\nimport { LinesDiff } from './linesDiffComputer.js';\nimport { RangeMapping, DetailedLineRangeMapping } from './rangeMapping.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { Range } from '../core/range.js';\nimport { assertFn, checkAdjacentItems } from '../../../base/common/assert.js';\nimport { LineRange } from '../core/lineRange.js';\nconst MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\nexport class LegacyLinesDiffComputer {\n    computeDiff(originalLines, modifiedLines, options) {\n        var _a;\n        const diffComputer = new DiffComputer(originalLines, modifiedLines, {\n            maxComputationTime: options.maxComputationTimeMs,\n            shouldIgnoreTrimWhitespace: options.ignoreTrimWhitespace,\n            shouldComputeCharChanges: true,\n            shouldMakePrettyDiff: true,\n            shouldPostProcessCharChanges: true,\n        });\n        const result = diffComputer.computeDiff();\n        const changes = [];\n        let lastChange = null;\n        for (const c of result.changes) {\n            let originalRange;\n            if (c.originalEndLineNumber === 0) {\n                // Insertion\n                originalRange = new LineRange(c.originalStartLineNumber + 1, c.originalStartLineNumber + 1);\n            }\n            else {\n                originalRange = new LineRange(c.originalStartLineNumber, c.originalEndLineNumber + 1);\n            }\n            let modifiedRange;\n            if (c.modifiedEndLineNumber === 0) {\n                // Deletion\n                modifiedRange = new LineRange(c.modifiedStartLineNumber + 1, c.modifiedStartLineNumber + 1);\n            }\n            else {\n                modifiedRange = new LineRange(c.modifiedStartLineNumber, c.modifiedEndLineNumber + 1);\n            }\n            let change = new DetailedLineRangeMapping(originalRange, modifiedRange, (_a = c.charChanges) === null || _a === void 0 ? void 0 : _a.map(c => new RangeMapping(new Range(c.originalStartLineNumber, c.originalStartColumn, c.originalEndLineNumber, c.originalEndColumn), new Range(c.modifiedStartLineNumber, c.modifiedStartColumn, c.modifiedEndLineNumber, c.modifiedEndColumn))));\n            if (lastChange) {\n                if (lastChange.modified.endLineNumberExclusive === change.modified.startLineNumber\n                    || lastChange.original.endLineNumberExclusive === change.original.startLineNumber) {\n                    // join touching diffs. Probably moving diffs up/down in the algorithm causes touching diffs.\n                    change = new DetailedLineRangeMapping(lastChange.original.join(change.original), lastChange.modified.join(change.modified), lastChange.innerChanges && change.innerChanges ?\n                        lastChange.innerChanges.concat(change.innerChanges) : undefined);\n                    changes.pop();\n                }\n            }\n            changes.push(change);\n            lastChange = change;\n        }\n        assertFn(() => {\n            return checkAdjacentItems(changes, (m1, m2) => m2.original.startLineNumber - m1.original.endLineNumberExclusive === m2.modified.startLineNumber - m1.modified.endLineNumberExclusive &&\n                // There has to be an unchanged line in between (otherwise both diffs should have been joined)\n                m1.original.endLineNumberExclusive < m2.original.startLineNumber &&\n                m1.modified.endLineNumberExclusive < m2.modified.startLineNumber);\n        });\n        return new LinesDiff(changes, [], result.quitEarly);\n    }\n}\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n    const diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n    return diffAlgo.ComputeDiff(pretty);\n}\nclass LineSequence {\n    constructor(lines) {\n        const startColumns = [];\n        const endColumns = [];\n        for (let i = 0, length = lines.length; i < length; i++) {\n            startColumns[i] = getFirstNonBlankColumn(lines[i], 1);\n            endColumns[i] = getLastNonBlankColumn(lines[i], 1);\n        }\n        this.lines = lines;\n        this._startColumns = startColumns;\n        this._endColumns = endColumns;\n    }\n    getElements() {\n        const elements = [];\n        for (let i = 0, len = this.lines.length; i < len; i++) {\n            elements[i] = this.lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n        }\n        return elements;\n    }\n    getStrictElement(index) {\n        return this.lines[index];\n    }\n    getStartLineNumber(i) {\n        return i + 1;\n    }\n    getEndLineNumber(i) {\n        return i + 1;\n    }\n    createCharSequence(shouldIgnoreTrimWhitespace, startIndex, endIndex) {\n        const charCodes = [];\n        const lineNumbers = [];\n        const columns = [];\n        let len = 0;\n        for (let index = startIndex; index <= endIndex; index++) {\n            const lineContent = this.lines[index];\n            const startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n            const endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n            for (let col = startColumn; col < endColumn; col++) {\n                charCodes[len] = lineContent.charCodeAt(col - 1);\n                lineNumbers[len] = index + 1;\n                columns[len] = col;\n                len++;\n            }\n            if (!shouldIgnoreTrimWhitespace && index < endIndex) {\n                // Add \\n if trim whitespace is not ignored\n                charCodes[len] = 10 /* CharCode.LineFeed */;\n                lineNumbers[len] = index + 1;\n                columns[len] = lineContent.length + 1;\n                len++;\n            }\n        }\n        return new CharSequence(charCodes, lineNumbers, columns);\n    }\n}\nclass CharSequence {\n    constructor(charCodes, lineNumbers, columns) {\n        this._charCodes = charCodes;\n        this._lineNumbers = lineNumbers;\n        this._columns = columns;\n    }\n    toString() {\n        return ('[' + this._charCodes.map((s, idx) => (s === 10 /* CharCode.LineFeed */ ? '\\\\n' : String.fromCharCode(s)) + `-(${this._lineNumbers[idx]},${this._columns[idx]})`).join(', ') + ']');\n    }\n    _assertIndex(index, arr) {\n        if (index < 0 || index >= arr.length) {\n            throw new Error(`Illegal index`);\n        }\n    }\n    getElements() {\n        return this._charCodes;\n    }\n    getStartLineNumber(i) {\n        if (i > 0 && i === this._lineNumbers.length) {\n            // the start line number of the element after the last element\n            // is the end line number of the last element\n            return this.getEndLineNumber(i - 1);\n        }\n        this._assertIndex(i, this._lineNumbers);\n        return this._lineNumbers[i];\n    }\n    getEndLineNumber(i) {\n        if (i === -1) {\n            // the end line number of the element before the first element\n            // is the start line number of the first element\n            return this.getStartLineNumber(i + 1);\n        }\n        this._assertIndex(i, this._lineNumbers);\n        if (this._charCodes[i] === 10 /* CharCode.LineFeed */) {\n            return this._lineNumbers[i] + 1;\n        }\n        return this._lineNumbers[i];\n    }\n    getStartColumn(i) {\n        if (i > 0 && i === this._columns.length) {\n            // the start column of the element after the last element\n            // is the end column of the last element\n            return this.getEndColumn(i - 1);\n        }\n        this._assertIndex(i, this._columns);\n        return this._columns[i];\n    }\n    getEndColumn(i) {\n        if (i === -1) {\n            // the end column of the element before the first element\n            // is the start column of the first element\n            return this.getStartColumn(i + 1);\n        }\n        this._assertIndex(i, this._columns);\n        if (this._charCodes[i] === 10 /* CharCode.LineFeed */) {\n            return 1;\n        }\n        return this._columns[i] + 1;\n    }\n}\nclass CharChange {\n    constructor(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalStartColumn = originalStartColumn;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.originalEndColumn = originalEndColumn;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedStartColumn = modifiedStartColumn;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.modifiedEndColumn = modifiedEndColumn;\n    }\n    static createFromDiffChange(diffChange, originalCharSequence, modifiedCharSequence) {\n        const originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n        const originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n        const originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        const originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n        const modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n        const modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n        const modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        const modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\n    }\n}\nfunction postProcessCharChanges(rawChanges) {\n    if (rawChanges.length <= 1) {\n        return rawChanges;\n    }\n    const result = [rawChanges[0]];\n    let prevChange = result[0];\n    for (let i = 1, len = rawChanges.length; i < len; i++) {\n        const currChange = rawChanges[i];\n        const originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n        const modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n        // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n        const matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n            // Merge the current change into the previous one\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n        }\n        else {\n            // Add the current change\n            result.push(currChange);\n            prevChange = currChange;\n        }\n    }\n    return result;\n}\nclass LineChange {\n    constructor(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.charChanges = charChanges;\n    }\n    static createFromDiffResult(shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueCharDiff, shouldComputeCharChanges, shouldPostProcessCharChanges) {\n        let originalStartLineNumber;\n        let originalEndLineNumber;\n        let modifiedStartLineNumber;\n        let modifiedEndLineNumber;\n        let charChanges = undefined;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n            originalEndLineNumber = 0;\n        }\n        else {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n            modifiedEndLineNumber = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        if (shouldComputeCharChanges && diffChange.originalLength > 0 && diffChange.originalLength < 20 && diffChange.modifiedLength > 0 && diffChange.modifiedLength < 20 && continueCharDiff()) {\n            // Compute character changes for diff chunks of at most 20 lines...\n            const originalCharSequence = originalLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n            const modifiedCharSequence = modifiedLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            if (originalCharSequence.getElements().length > 0 && modifiedCharSequence.getElements().length > 0) {\n                let rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueCharDiff, true).changes;\n                if (shouldPostProcessCharChanges) {\n                    rawChanges = postProcessCharChanges(rawChanges);\n                }\n                charChanges = [];\n                for (let i = 0, length = rawChanges.length; i < length; i++) {\n                    charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n                }\n            }\n        }\n        return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n    }\n}\nexport class DiffComputer {\n    constructor(originalLines, modifiedLines, opts) {\n        this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n        this.originalLines = originalLines;\n        this.modifiedLines = modifiedLines;\n        this.original = new LineSequence(originalLines);\n        this.modified = new LineSequence(modifiedLines);\n        this.continueLineDiff = createContinueProcessingPredicate(opts.maxComputationTime);\n        this.continueCharDiff = createContinueProcessingPredicate(opts.maxComputationTime === 0 ? 0 : Math.min(opts.maxComputationTime, 5000)); // never run after 5s for character changes...\n    }\n    computeDiff() {\n        if (this.original.lines.length === 1 && this.original.lines[0].length === 0) {\n            // empty original => fast path\n            if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n                return {\n                    quitEarly: false,\n                    changes: []\n                };\n            }\n            return {\n                quitEarly: false,\n                changes: [{\n                        originalStartLineNumber: 1,\n                        originalEndLineNumber: 1,\n                        modifiedStartLineNumber: 1,\n                        modifiedEndLineNumber: this.modified.lines.length,\n                        charChanges: undefined\n                    }]\n            };\n        }\n        if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n            // empty modified => fast path\n            return {\n                quitEarly: false,\n                changes: [{\n                        originalStartLineNumber: 1,\n                        originalEndLineNumber: this.original.lines.length,\n                        modifiedStartLineNumber: 1,\n                        modifiedEndLineNumber: 1,\n                        charChanges: undefined\n                    }]\n            };\n        }\n        const diffResult = computeDiff(this.original, this.modified, this.continueLineDiff, this.shouldMakePrettyDiff);\n        const rawChanges = diffResult.changes;\n        const quitEarly = diffResult.quitEarly;\n        // The diff is always computed with ignoring trim whitespace\n        // This ensures we get the prettiest diff\n        if (this.shouldIgnoreTrimWhitespace) {\n            const lineChanges = [];\n            for (let i = 0, length = rawChanges.length; i < length; i++) {\n                lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n            }\n            return {\n                quitEarly: quitEarly,\n                changes: lineChanges\n            };\n        }\n        // Need to post-process and introduce changes where the trim whitespace is different\n        // Note that we are looping starting at -1 to also cover the lines before the first change\n        const result = [];\n        let originalLineIndex = 0;\n        let modifiedLineIndex = 0;\n        for (let i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n            const nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n            const originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n            const modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n                const originalLine = this.originalLines[originalLineIndex];\n                const modifiedLine = this.modifiedLines[modifiedLineIndex];\n                if (originalLine !== modifiedLine) {\n                    // These lines differ only in trim whitespace\n                    // Check the leading whitespace\n                    {\n                        let originalStartColumn = getFirstNonBlankColumn(originalLine, 1);\n                        let modifiedStartColumn = getFirstNonBlankColumn(modifiedLine, 1);\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n                            const originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n                            const modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalStartColumn--;\n                            modifiedStartColumn--;\n                        }\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n                        }\n                    }\n                    // Check the trailing whitespace\n                    {\n                        let originalEndColumn = getLastNonBlankColumn(originalLine, 1);\n                        let modifiedEndColumn = getLastNonBlankColumn(modifiedLine, 1);\n                        const originalMaxColumn = originalLine.length + 1;\n                        const modifiedMaxColumn = modifiedLine.length + 1;\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n                            const originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n                            const modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalEndColumn++;\n                            modifiedEndColumn++;\n                        }\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n                        }\n                    }\n                }\n                originalLineIndex++;\n                modifiedLineIndex++;\n            }\n            if (nextChange) {\n                // Emit the actual change\n                result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n                originalLineIndex += nextChange.originalLength;\n                modifiedLineIndex += nextChange.modifiedLength;\n            }\n        }\n        return {\n            quitEarly: quitEarly,\n            changes: result\n        };\n    }\n    _pushTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n            // Merged into previous\n            return;\n        }\n        let charChanges = undefined;\n        if (this.shouldComputeCharChanges) {\n            charChanges = [new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)];\n        }\n        result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, charChanges));\n    }\n    _mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        const len = result.length;\n        if (len === 0) {\n            return false;\n        }\n        const prevChange = result[len - 1];\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n            // Don't merge with inserts/deletes\n            return false;\n        }\n        if (prevChange.originalEndLineNumber === originalLineNumber && prevChange.modifiedEndLineNumber === modifiedLineNumber) {\n            if (this.shouldComputeCharChanges && prevChange.charChanges) {\n                prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n            }\n            return true;\n        }\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n            prevChange.originalEndLineNumber = originalLineNumber;\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\n            if (this.shouldComputeCharChanges && prevChange.charChanges) {\n                prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n            }\n            return true;\n        }\n        return false;\n    }\n}\nfunction getFirstNonBlankColumn(txt, defaultValue) {\n    const r = strings.firstNonWhitespaceIndex(txt);\n    if (r === -1) {\n        return defaultValue;\n    }\n    return r + 1;\n}\nfunction getLastNonBlankColumn(txt, defaultValue) {\n    const r = strings.lastNonWhitespaceIndex(txt);\n    if (r === -1) {\n        return defaultValue;\n    }\n    return r + 2;\n}\nfunction createContinueProcessingPredicate(maximumRuntime) {\n    if (maximumRuntime === 0) {\n        return () => true;\n    }\n    const startTime = Date.now();\n    return () => {\n        return Date.now() - startTime < maximumRuntime;\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { forEachAdjacent } from '../../../../../base/common/arrays.js';\nimport { BugIndicatingError } from '../../../../../base/common/errors.js';\nimport { OffsetRange } from '../../../core/offsetRange.js';\nexport class DiffAlgorithmResult {\n    static trivial(seq1, seq2) {\n        return new DiffAlgorithmResult([new SequenceDiff(OffsetRange.ofLength(seq1.length), OffsetRange.ofLength(seq2.length))], false);\n    }\n    static trivialTimedOut(seq1, seq2) {\n        return new DiffAlgorithmResult([new SequenceDiff(OffsetRange.ofLength(seq1.length), OffsetRange.ofLength(seq2.length))], true);\n    }\n    constructor(diffs, \n    /**\n     * Indicates if the time out was reached.\n     * In that case, the diffs might be an approximation and the user should be asked to rerun the diff with more time.\n     */\n    hitTimeout) {\n        this.diffs = diffs;\n        this.hitTimeout = hitTimeout;\n    }\n}\nexport class SequenceDiff {\n    static invert(sequenceDiffs, doc1Length) {\n        const result = [];\n        forEachAdjacent(sequenceDiffs, (a, b) => {\n            result.push(SequenceDiff.fromOffsetPairs(a ? a.getEndExclusives() : OffsetPair.zero, b ? b.getStarts() : new OffsetPair(doc1Length, (a ? a.seq2Range.endExclusive - a.seq1Range.endExclusive : 0) + doc1Length)));\n        });\n        return result;\n    }\n    static fromOffsetPairs(start, endExclusive) {\n        return new SequenceDiff(new OffsetRange(start.offset1, endExclusive.offset1), new OffsetRange(start.offset2, endExclusive.offset2));\n    }\n    constructor(seq1Range, seq2Range) {\n        this.seq1Range = seq1Range;\n        this.seq2Range = seq2Range;\n    }\n    swap() {\n        return new SequenceDiff(this.seq2Range, this.seq1Range);\n    }\n    toString() {\n        return `${this.seq1Range} <-> ${this.seq2Range}`;\n    }\n    join(other) {\n        return new SequenceDiff(this.seq1Range.join(other.seq1Range), this.seq2Range.join(other.seq2Range));\n    }\n    delta(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return new SequenceDiff(this.seq1Range.delta(offset), this.seq2Range.delta(offset));\n    }\n    deltaStart(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return new SequenceDiff(this.seq1Range.deltaStart(offset), this.seq2Range.deltaStart(offset));\n    }\n    deltaEnd(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return new SequenceDiff(this.seq1Range.deltaEnd(offset), this.seq2Range.deltaEnd(offset));\n    }\n    intersect(other) {\n        const i1 = this.seq1Range.intersect(other.seq1Range);\n        const i2 = this.seq2Range.intersect(other.seq2Range);\n        if (!i1 || !i2) {\n            return undefined;\n        }\n        return new SequenceDiff(i1, i2);\n    }\n    getStarts() {\n        return new OffsetPair(this.seq1Range.start, this.seq2Range.start);\n    }\n    getEndExclusives() {\n        return new OffsetPair(this.seq1Range.endExclusive, this.seq2Range.endExclusive);\n    }\n}\nexport class OffsetPair {\n    constructor(offset1, offset2) {\n        this.offset1 = offset1;\n        this.offset2 = offset2;\n    }\n    toString() {\n        return `${this.offset1} <-> ${this.offset2}`;\n    }\n}\nOffsetPair.zero = new OffsetPair(0, 0);\nOffsetPair.max = new OffsetPair(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);\nexport class InfiniteTimeout {\n    isValid() {\n        return true;\n    }\n}\nInfiniteTimeout.instance = new InfiniteTimeout();\nexport class DateTimeout {\n    constructor(timeout) {\n        this.timeout = timeout;\n        this.startTime = Date.now();\n        this.valid = true;\n        if (timeout <= 0) {\n            throw new BugIndicatingError('timeout must be positive');\n        }\n    }\n    // Recommendation: Set a log-point `{this.disable()}` in the body\n    isValid() {\n        const valid = Date.now() - this.startTime < this.timeout;\n        if (!valid && this.valid) {\n            this.valid = false; // timeout reached\n            // eslint-disable-next-line no-debugger\n            debugger; // WARNING: Most likely debugging caused the timeout. Call `this.disable()` to continue without timing out.\n        }\n        return this.valid;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class Array2D {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n        this.array = [];\n        this.array = new Array(width * height);\n    }\n    get(x, y) {\n        return this.array[x + y * this.width];\n    }\n    set(x, y, value) {\n        this.array[x + y * this.width] = value;\n    }\n}\nexport function isSpace(charCode) {\n    return charCode === 32 /* CharCode.Space */ || charCode === 9 /* CharCode.Tab */;\n}\nexport class LineRangeFragment {\n    static getKey(chr) {\n        let key = this.chrKeys.get(chr);\n        if (key === undefined) {\n            key = this.chrKeys.size;\n            this.chrKeys.set(chr, key);\n        }\n        return key;\n    }\n    constructor(range, lines, source) {\n        this.range = range;\n        this.lines = lines;\n        this.source = source;\n        this.histogram = [];\n        let counter = 0;\n        for (let i = range.startLineNumber - 1; i < range.endLineNumberExclusive - 1; i++) {\n            const line = lines[i];\n            for (let j = 0; j < line.length; j++) {\n                counter++;\n                const chr = line[j];\n                const key = LineRangeFragment.getKey(chr);\n                this.histogram[key] = (this.histogram[key] || 0) + 1;\n            }\n            counter++;\n            const key = LineRangeFragment.getKey('\\n');\n            this.histogram[key] = (this.histogram[key] || 0) + 1;\n        }\n        this.totalCount = counter;\n    }\n    computeSimilarity(other) {\n        var _a, _b;\n        let sumDifferences = 0;\n        const maxLength = Math.max(this.histogram.length, other.histogram.length);\n        for (let i = 0; i < maxLength; i++) {\n            sumDifferences += Math.abs(((_a = this.histogram[i]) !== null && _a !== void 0 ? _a : 0) - ((_b = other.histogram[i]) !== null && _b !== void 0 ? _b : 0));\n        }\n        return 1 - (sumDifferences / (this.totalCount + other.totalCount));\n    }\n}\nLineRangeFragment.chrKeys = new Map();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { OffsetRange } from '../../../core/offsetRange.js';\nimport { SequenceDiff, InfiniteTimeout, DiffAlgorithmResult } from './diffAlgorithm.js';\nimport { Array2D } from '../utils.js';\n/**\n * A O(MN) diffing algorithm that supports a score function.\n * The algorithm can be improved by processing the 2d array diagonally.\n*/\nexport class DynamicProgrammingDiffing {\n    compute(sequence1, sequence2, timeout = InfiniteTimeout.instance, equalityScore) {\n        if (sequence1.length === 0 || sequence2.length === 0) {\n            return DiffAlgorithmResult.trivial(sequence1, sequence2);\n        }\n        /**\n         * lcsLengths.get(i, j): Length of the longest common subsequence of sequence1.substring(0, i + 1) and sequence2.substring(0, j + 1).\n         */\n        const lcsLengths = new Array2D(sequence1.length, sequence2.length);\n        const directions = new Array2D(sequence1.length, sequence2.length);\n        const lengths = new Array2D(sequence1.length, sequence2.length);\n        // ==== Initializing lcsLengths ====\n        for (let s1 = 0; s1 < sequence1.length; s1++) {\n            for (let s2 = 0; s2 < sequence2.length; s2++) {\n                if (!timeout.isValid()) {\n                    return DiffAlgorithmResult.trivialTimedOut(sequence1, sequence2);\n                }\n                const horizontalLen = s1 === 0 ? 0 : lcsLengths.get(s1 - 1, s2);\n                const verticalLen = s2 === 0 ? 0 : lcsLengths.get(s1, s2 - 1);\n                let extendedSeqScore;\n                if (sequence1.getElement(s1) === sequence2.getElement(s2)) {\n                    if (s1 === 0 || s2 === 0) {\n                        extendedSeqScore = 0;\n                    }\n                    else {\n                        extendedSeqScore = lcsLengths.get(s1 - 1, s2 - 1);\n                    }\n                    if (s1 > 0 && s2 > 0 && directions.get(s1 - 1, s2 - 1) === 3) {\n                        // Prefer consecutive diagonals\n                        extendedSeqScore += lengths.get(s1 - 1, s2 - 1);\n                    }\n                    extendedSeqScore += (equalityScore ? equalityScore(s1, s2) : 1);\n                }\n                else {\n                    extendedSeqScore = -1;\n                }\n                const newValue = Math.max(horizontalLen, verticalLen, extendedSeqScore);\n                if (newValue === extendedSeqScore) {\n                    // Prefer diagonals\n                    const prevLen = s1 > 0 && s2 > 0 ? lengths.get(s1 - 1, s2 - 1) : 0;\n                    lengths.set(s1, s2, prevLen + 1);\n                    directions.set(s1, s2, 3);\n                }\n                else if (newValue === horizontalLen) {\n                    lengths.set(s1, s2, 0);\n                    directions.set(s1, s2, 1);\n                }\n                else if (newValue === verticalLen) {\n                    lengths.set(s1, s2, 0);\n                    directions.set(s1, s2, 2);\n                }\n                lcsLengths.set(s1, s2, newValue);\n            }\n        }\n        // ==== Backtracking ====\n        const result = [];\n        let lastAligningPosS1 = sequence1.length;\n        let lastAligningPosS2 = sequence2.length;\n        function reportDecreasingAligningPositions(s1, s2) {\n            if (s1 + 1 !== lastAligningPosS1 || s2 + 1 !== lastAligningPosS2) {\n                result.push(new SequenceDiff(new OffsetRange(s1 + 1, lastAligningPosS1), new OffsetRange(s2 + 1, lastAligningPosS2)));\n            }\n            lastAligningPosS1 = s1;\n            lastAligningPosS2 = s2;\n        }\n        let s1 = sequence1.length - 1;\n        let s2 = sequence2.length - 1;\n        while (s1 >= 0 && s2 >= 0) {\n            if (directions.get(s1, s2) === 3) {\n                reportDecreasingAligningPositions(s1, s2);\n                s1--;\n                s2--;\n            }\n            else {\n                if (directions.get(s1, s2) === 1) {\n                    s1--;\n                }\n                else {\n                    s2--;\n                }\n            }\n        }\n        reportDecreasingAligningPositions(-1, -1);\n        result.reverse();\n        return new DiffAlgorithmResult(result, false);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a, _b;\nclass ResourceMapEntry {\n    constructor(uri, value) {\n        this.uri = uri;\n        this.value = value;\n    }\n}\nfunction isEntries(arg) {\n    return Array.isArray(arg);\n}\nexport class ResourceMap {\n    constructor(arg, toKey) {\n        this[_a] = 'ResourceMap';\n        if (arg instanceof ResourceMap) {\n            this.map = new Map(arg.map);\n            this.toKey = toKey !== null && toKey !== void 0 ? toKey : ResourceMap.defaultToKey;\n        }\n        else if (isEntries(arg)) {\n            this.map = new Map();\n            this.toKey = toKey !== null && toKey !== void 0 ? toKey : ResourceMap.defaultToKey;\n            for (const [resource, value] of arg) {\n                this.set(resource, value);\n            }\n        }\n        else {\n            this.map = new Map();\n            this.toKey = arg !== null && arg !== void 0 ? arg : ResourceMap.defaultToKey;\n        }\n    }\n    set(resource, value) {\n        this.map.set(this.toKey(resource), new ResourceMapEntry(resource, value));\n        return this;\n    }\n    get(resource) {\n        var _c;\n        return (_c = this.map.get(this.toKey(resource))) === null || _c === void 0 ? void 0 : _c.value;\n    }\n    has(resource) {\n        return this.map.has(this.toKey(resource));\n    }\n    get size() {\n        return this.map.size;\n    }\n    clear() {\n        this.map.clear();\n    }\n    delete(resource) {\n        return this.map.delete(this.toKey(resource));\n    }\n    forEach(clb, thisArg) {\n        if (typeof thisArg !== 'undefined') {\n            clb = clb.bind(thisArg);\n        }\n        for (const [_, entry] of this.map) {\n            clb(entry.value, entry.uri, this);\n        }\n    }\n    *values() {\n        for (const entry of this.map.values()) {\n            yield entry.value;\n        }\n    }\n    *keys() {\n        for (const entry of this.map.values()) {\n            yield entry.uri;\n        }\n    }\n    *entries() {\n        for (const entry of this.map.values()) {\n            yield [entry.uri, entry.value];\n        }\n    }\n    *[(_a = Symbol.toStringTag, Symbol.iterator)]() {\n        for (const [, entry] of this.map) {\n            yield [entry.uri, entry.value];\n        }\n    }\n}\nResourceMap.defaultToKey = (resource) => resource.toString();\nexport class LinkedMap {\n    constructor() {\n        this[_b] = 'LinkedMap';\n        this._map = new Map();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state = 0;\n    }\n    clear() {\n        this._map.clear();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state++;\n    }\n    isEmpty() {\n        return !this._head && !this._tail;\n    }\n    get size() {\n        return this._size;\n    }\n    get first() {\n        var _c;\n        return (_c = this._head) === null || _c === void 0 ? void 0 : _c.value;\n    }\n    get last() {\n        var _c;\n        return (_c = this._tail) === null || _c === void 0 ? void 0 : _c.value;\n    }\n    has(key) {\n        return this._map.has(key);\n    }\n    get(key, touch = 0 /* Touch.None */) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        if (touch !== 0 /* Touch.None */) {\n            this.touch(item, touch);\n        }\n        return item.value;\n    }\n    set(key, value, touch = 0 /* Touch.None */) {\n        let item = this._map.get(key);\n        if (item) {\n            item.value = value;\n            if (touch !== 0 /* Touch.None */) {\n                this.touch(item, touch);\n            }\n        }\n        else {\n            item = { key, value, next: undefined, previous: undefined };\n            switch (touch) {\n                case 0 /* Touch.None */:\n                    this.addItemLast(item);\n                    break;\n                case 1 /* Touch.AsOld */:\n                    this.addItemFirst(item);\n                    break;\n                case 2 /* Touch.AsNew */:\n                    this.addItemLast(item);\n                    break;\n                default:\n                    this.addItemLast(item);\n                    break;\n            }\n            this._map.set(key, item);\n            this._size++;\n        }\n        return this;\n    }\n    delete(key) {\n        return !!this.remove(key);\n    }\n    remove(key) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        this._map.delete(key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    shift() {\n        if (!this._head && !this._tail) {\n            return undefined;\n        }\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        const item = this._head;\n        this._map.delete(item.key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    forEach(callbackfn, thisArg) {\n        const state = this._state;\n        let current = this._head;\n        while (current) {\n            if (thisArg) {\n                callbackfn.bind(thisArg)(current.value, current.key, this);\n            }\n            else {\n                callbackfn(current.value, current.key, this);\n            }\n            if (this._state !== state) {\n                throw new Error(`LinkedMap got modified during iteration.`);\n            }\n            current = current.next;\n        }\n    }\n    keys() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.key, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    values() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.value, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    entries() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: [current.key, current.value], done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    [(_b = Symbol.toStringTag, Symbol.iterator)]() {\n        return this.entries();\n    }\n    trimOld(newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        let current = this._head;\n        let currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.next;\n            currentSize--;\n        }\n        this._head = current;\n        this._size = currentSize;\n        if (current) {\n            current.previous = undefined;\n        }\n        this._state++;\n    }\n    addItemFirst(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._tail = item;\n        }\n        else if (!this._head) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.next = this._head;\n            this._head.previous = item;\n        }\n        this._head = item;\n        this._state++;\n    }\n    addItemLast(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._head = item;\n        }\n        else if (!this._tail) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.previous = this._tail;\n            this._tail.next = item;\n        }\n        this._tail = item;\n        this._state++;\n    }\n    removeItem(item) {\n        if (item === this._head && item === this._tail) {\n            this._head = undefined;\n            this._tail = undefined;\n        }\n        else if (item === this._head) {\n            // This can only happen if size === 1 which is handled\n            // by the case above.\n            if (!item.next) {\n                throw new Error('Invalid list');\n            }\n            item.next.previous = undefined;\n            this._head = item.next;\n        }\n        else if (item === this._tail) {\n            // This can only happen if size === 1 which is handled\n            // by the case above.\n            if (!item.previous) {\n                throw new Error('Invalid list');\n            }\n            item.previous.next = undefined;\n            this._tail = item.previous;\n        }\n        else {\n            const next = item.next;\n            const previous = item.previous;\n            if (!next || !previous) {\n                throw new Error('Invalid list');\n            }\n            next.previous = previous;\n            previous.next = next;\n        }\n        item.next = undefined;\n        item.previous = undefined;\n        this._state++;\n    }\n    touch(item, touch) {\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        if ((touch !== 1 /* Touch.AsOld */ && touch !== 2 /* Touch.AsNew */)) {\n            return;\n        }\n        if (touch === 1 /* Touch.AsOld */) {\n            if (item === this._head) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item\n            if (item === this._tail) {\n                // previous must be defined since item was not head but is tail\n                // So there are more than on item in the map\n                previous.next = undefined;\n                this._tail = previous;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            // Insert the node at head\n            item.previous = undefined;\n            item.next = this._head;\n            this._head.previous = item;\n            this._head = item;\n            this._state++;\n        }\n        else if (touch === 2 /* Touch.AsNew */) {\n            if (item === this._tail) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item.\n            if (item === this._head) {\n                // next must be defined since item was not tail but is head\n                // So there are more than on item in the map\n                next.previous = undefined;\n                this._head = next;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            item.next = undefined;\n            item.previous = this._tail;\n            this._tail.next = item;\n            this._tail = item;\n            this._state++;\n        }\n    }\n    toJSON() {\n        const data = [];\n        this.forEach((value, key) => {\n            data.push([key, value]);\n        });\n        return data;\n    }\n    fromJSON(data) {\n        this.clear();\n        for (const [key, value] of data) {\n            this.set(key, value);\n        }\n    }\n}\nexport class LRUCache extends LinkedMap {\n    constructor(limit, ratio = 1) {\n        super();\n        this._limit = limit;\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n    }\n    get limit() {\n        return this._limit;\n    }\n    set limit(limit) {\n        this._limit = limit;\n        this.checkTrim();\n    }\n    get(key, touch = 2 /* Touch.AsNew */) {\n        return super.get(key, touch);\n    }\n    peek(key) {\n        return super.get(key, 0 /* Touch.None */);\n    }\n    set(key, value) {\n        super.set(key, value, 2 /* Touch.AsNew */);\n        this.checkTrim();\n        return this;\n    }\n    checkTrim() {\n        if (this.size > this._limit) {\n            this.trimOld(Math.round(this._limit * this._ratio));\n        }\n    }\n}\n/**\n * A map that allows access both by keys and values.\n * **NOTE**: values need to be unique.\n */\nexport class BidirectionalMap {\n    constructor(entries) {\n        this._m1 = new Map();\n        this._m2 = new Map();\n        if (entries) {\n            for (const [key, value] of entries) {\n                this.set(key, value);\n            }\n        }\n    }\n    clear() {\n        this._m1.clear();\n        this._m2.clear();\n    }\n    set(key, value) {\n        this._m1.set(key, value);\n        this._m2.set(value, key);\n    }\n    get(key) {\n        return this._m1.get(key);\n    }\n    getKey(value) {\n        return this._m2.get(value);\n    }\n    delete(key) {\n        const value = this._m1.get(key);\n        if (value === undefined) {\n            return false;\n        }\n        this._m1.delete(key);\n        this._m2.delete(value);\n        return true;\n    }\n    keys() {\n        return this._m1.keys();\n    }\n    values() {\n        return this._m1.values();\n    }\n}\nexport class SetMap {\n    constructor() {\n        this.map = new Map();\n    }\n    add(key, value) {\n        let values = this.map.get(key);\n        if (!values) {\n            values = new Set();\n            this.map.set(key, values);\n        }\n        values.add(value);\n    }\n    delete(key, value) {\n        const values = this.map.get(key);\n        if (!values) {\n            return;\n        }\n        values.delete(value);\n        if (values.size === 0) {\n            this.map.delete(key);\n        }\n    }\n    forEach(key, fn) {\n        const values = this.map.get(key);\n        if (!values) {\n            return;\n        }\n        values.forEach(fn);\n    }\n    get(key) {\n        const values = this.map.get(key);\n        if (!values) {\n            return new Set();\n        }\n        return values;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { OffsetRange } from '../../../core/offsetRange.js';\nimport { DiffAlgorithmResult, InfiniteTimeout, SequenceDiff } from './diffAlgorithm.js';\n/**\n * An O(ND) diff algorithm that has a quadratic space worst-case complexity.\n*/\nexport class MyersDiffAlgorithm {\n    compute(seq1, seq2, timeout = InfiniteTimeout.instance) {\n        // These are common special cases.\n        // The early return improves performance dramatically.\n        if (seq1.length === 0 || seq2.length === 0) {\n            return DiffAlgorithmResult.trivial(seq1, seq2);\n        }\n        const seqX = seq1; // Text on the x axis\n        const seqY = seq2; // Text on the y axis\n        function getXAfterSnake(x, y) {\n            while (x < seqX.length && y < seqY.length && seqX.getElement(x) === seqY.getElement(y)) {\n                x++;\n                y++;\n            }\n            return x;\n        }\n        let d = 0;\n        // V[k]: X value of longest d-line that ends in diagonal k.\n        // d-line: path from (0,0) to (x,y) that uses exactly d non-diagonals.\n        // diagonal k: Set of points (x,y) with x-y = k.\n        // k=1 -> (1,0),(2,1)\n        const V = new FastInt32Array();\n        V.set(0, getXAfterSnake(0, 0));\n        const paths = new FastArrayNegativeIndices();\n        paths.set(0, V.get(0) === 0 ? null : new SnakePath(null, 0, 0, V.get(0)));\n        let k = 0;\n        loop: while (true) {\n            d++;\n            if (!timeout.isValid()) {\n                return DiffAlgorithmResult.trivialTimedOut(seqX, seqY);\n            }\n            // The paper has `for (k = -d; k <= d; k += 2)`, but we can ignore diagonals that cannot influence the result.\n            const lowerBound = -Math.min(d, seqY.length + (d % 2));\n            const upperBound = Math.min(d, seqX.length + (d % 2));\n            for (k = lowerBound; k <= upperBound; k += 2) {\n                let step = 0;\n                // We can use the X values of (d-1)-lines to compute X value of the longest d-lines.\n                const maxXofDLineTop = k === upperBound ? -1 : V.get(k + 1); // We take a vertical non-diagonal (add a symbol in seqX)\n                const maxXofDLineLeft = k === lowerBound ? -1 : V.get(k - 1) + 1; // We take a horizontal non-diagonal (+1 x) (delete a symbol in seqX)\n                step++;\n                const x = Math.min(Math.max(maxXofDLineTop, maxXofDLineLeft), seqX.length);\n                const y = x - k;\n                step++;\n                if (x > seqX.length || y > seqY.length) {\n                    // This diagonal is irrelevant for the result.\n                    // TODO: Don't pay the cost for this in the next iteration.\n                    continue;\n                }\n                const newMaxX = getXAfterSnake(x, y);\n                V.set(k, newMaxX);\n                const lastPath = x === maxXofDLineTop ? paths.get(k + 1) : paths.get(k - 1);\n                paths.set(k, newMaxX !== x ? new SnakePath(lastPath, x, y, newMaxX - x) : lastPath);\n                if (V.get(k) === seqX.length && V.get(k) - k === seqY.length) {\n                    break loop;\n                }\n            }\n        }\n        let path = paths.get(k);\n        const result = [];\n        let lastAligningPosS1 = seqX.length;\n        let lastAligningPosS2 = seqY.length;\n        while (true) {\n            const endX = path ? path.x + path.length : 0;\n            const endY = path ? path.y + path.length : 0;\n            if (endX !== lastAligningPosS1 || endY !== lastAligningPosS2) {\n                result.push(new SequenceDiff(new OffsetRange(endX, lastAligningPosS1), new OffsetRange(endY, lastAligningPosS2)));\n            }\n            if (!path) {\n                break;\n            }\n            lastAligningPosS1 = path.x;\n            lastAligningPosS2 = path.y;\n            path = path.prev;\n        }\n        result.reverse();\n        return new DiffAlgorithmResult(result, false);\n    }\n}\nclass SnakePath {\n    constructor(prev, x, y, length) {\n        this.prev = prev;\n        this.x = x;\n        this.y = y;\n        this.length = length;\n    }\n}\n/**\n * An array that supports fast negative indices.\n*/\nclass FastInt32Array {\n    constructor() {\n        this.positiveArr = new Int32Array(10);\n        this.negativeArr = new Int32Array(10);\n    }\n    get(idx) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            return this.negativeArr[idx];\n        }\n        else {\n            return this.positiveArr[idx];\n        }\n    }\n    set(idx, value) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            if (idx >= this.negativeArr.length) {\n                const arr = this.negativeArr;\n                this.negativeArr = new Int32Array(arr.length * 2);\n                this.negativeArr.set(arr);\n            }\n            this.negativeArr[idx] = value;\n        }\n        else {\n            if (idx >= this.positiveArr.length) {\n                const arr = this.positiveArr;\n                this.positiveArr = new Int32Array(arr.length * 2);\n                this.positiveArr.set(arr);\n            }\n            this.positiveArr[idx] = value;\n        }\n    }\n}\n/**\n * An array that supports fast negative indices.\n*/\nclass FastArrayNegativeIndices {\n    constructor() {\n        this.positiveArr = [];\n        this.negativeArr = [];\n    }\n    get(idx) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            return this.negativeArr[idx];\n        }\n        else {\n            return this.positiveArr[idx];\n        }\n    }\n    set(idx, value) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            this.negativeArr[idx] = value;\n        }\n        else {\n            this.positiveArr[idx] = value;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { findLastIdxMonotonous, findLastMonotonous, findFirstMonotonous } from '../../../../base/common/arraysFind.js';\nimport { OffsetRange } from '../../core/offsetRange.js';\nimport { Position } from '../../core/position.js';\nimport { Range } from '../../core/range.js';\nimport { isSpace } from './utils.js';\nexport class LinesSliceCharSequence {\n    constructor(lines, lineRange, considerWhitespaceChanges) {\n        // This slice has to have lineRange.length many \\n! (otherwise diffing against an empty slice will be problematic)\n        // (Unless it covers the entire document, in that case the other slice also has to cover the entire document ands it's okay)\n        this.lines = lines;\n        this.considerWhitespaceChanges = considerWhitespaceChanges;\n        this.elements = [];\n        this.firstCharOffsetByLine = [];\n        // To account for trimming\n        this.additionalOffsetByLine = [];\n        // If the slice covers the end, but does not start at the beginning, we include just the \\n of the previous line.\n        let trimFirstLineFully = false;\n        if (lineRange.start > 0 && lineRange.endExclusive >= lines.length) {\n            lineRange = new OffsetRange(lineRange.start - 1, lineRange.endExclusive);\n            trimFirstLineFully = true;\n        }\n        this.lineRange = lineRange;\n        this.firstCharOffsetByLine[0] = 0;\n        for (let i = this.lineRange.start; i < this.lineRange.endExclusive; i++) {\n            let line = lines[i];\n            let offset = 0;\n            if (trimFirstLineFully) {\n                offset = line.length;\n                line = '';\n                trimFirstLineFully = false;\n            }\n            else if (!considerWhitespaceChanges) {\n                const trimmedStartLine = line.trimStart();\n                offset = line.length - trimmedStartLine.length;\n                line = trimmedStartLine.trimEnd();\n            }\n            this.additionalOffsetByLine.push(offset);\n            for (let i = 0; i < line.length; i++) {\n                this.elements.push(line.charCodeAt(i));\n            }\n            // Don't add an \\n that does not exist in the document.\n            if (i < lines.length - 1) {\n                this.elements.push('\\n'.charCodeAt(0));\n                this.firstCharOffsetByLine[i - this.lineRange.start + 1] = this.elements.length;\n            }\n        }\n        // To account for the last line\n        this.additionalOffsetByLine.push(0);\n    }\n    toString() {\n        return `Slice: \"${this.text}\"`;\n    }\n    get text() {\n        return this.getText(new OffsetRange(0, this.length));\n    }\n    getText(range) {\n        return this.elements.slice(range.start, range.endExclusive).map(e => String.fromCharCode(e)).join('');\n    }\n    getElement(offset) {\n        return this.elements[offset];\n    }\n    get length() {\n        return this.elements.length;\n    }\n    getBoundaryScore(length) {\n        //   a   b   c   ,           d   e   f\n        // 11  0   0   12  15  6   13  0   0   11\n        const prevCategory = getCategory(length > 0 ? this.elements[length - 1] : -1);\n        const nextCategory = getCategory(length < this.elements.length ? this.elements[length] : -1);\n        if (prevCategory === 6 /* CharBoundaryCategory.LineBreakCR */ && nextCategory === 7 /* CharBoundaryCategory.LineBreakLF */) {\n            // don't break between \\r and \\n\n            return 0;\n        }\n        let score = 0;\n        if (prevCategory !== nextCategory) {\n            score += 10;\n            if (prevCategory === 0 /* CharBoundaryCategory.WordLower */ && nextCategory === 1 /* CharBoundaryCategory.WordUpper */) {\n                score += 1;\n            }\n        }\n        score += getCategoryBoundaryScore(prevCategory);\n        score += getCategoryBoundaryScore(nextCategory);\n        return score;\n    }\n    translateOffset(offset) {\n        // find smallest i, so that lineBreakOffsets[i] <= offset using binary search\n        if (this.lineRange.isEmpty) {\n            return new Position(this.lineRange.start + 1, 1);\n        }\n        const i = findLastIdxMonotonous(this.firstCharOffsetByLine, (value) => value <= offset);\n        return new Position(this.lineRange.start + i + 1, offset - this.firstCharOffsetByLine[i] + this.additionalOffsetByLine[i] + 1);\n    }\n    translateRange(range) {\n        return Range.fromPositions(this.translateOffset(range.start), this.translateOffset(range.endExclusive));\n    }\n    /**\n     * Finds the word that contains the character at the given offset\n     */\n    findWordContaining(offset) {\n        if (offset < 0 || offset >= this.elements.length) {\n            return undefined;\n        }\n        if (!isWordChar(this.elements[offset])) {\n            return undefined;\n        }\n        // find start\n        let start = offset;\n        while (start > 0 && isWordChar(this.elements[start - 1])) {\n            start--;\n        }\n        // find end\n        let end = offset;\n        while (end < this.elements.length && isWordChar(this.elements[end])) {\n            end++;\n        }\n        return new OffsetRange(start, end);\n    }\n    countLinesIn(range) {\n        return this.translateOffset(range.endExclusive).lineNumber - this.translateOffset(range.start).lineNumber;\n    }\n    isStronglyEqual(offset1, offset2) {\n        return this.elements[offset1] === this.elements[offset2];\n    }\n    extendToFullLines(range) {\n        var _a, _b;\n        const start = (_a = findLastMonotonous(this.firstCharOffsetByLine, x => x <= range.start)) !== null && _a !== void 0 ? _a : 0;\n        const end = (_b = findFirstMonotonous(this.firstCharOffsetByLine, x => range.endExclusive <= x)) !== null && _b !== void 0 ? _b : this.elements.length;\n        return new OffsetRange(start, end);\n    }\n}\nfunction isWordChar(charCode) {\n    return charCode >= 97 /* CharCode.a */ && charCode <= 122 /* CharCode.z */\n        || charCode >= 65 /* CharCode.A */ && charCode <= 90 /* CharCode.Z */\n        || charCode >= 48 /* CharCode.Digit0 */ && charCode <= 57 /* CharCode.Digit9 */;\n}\nconst score = {\n    [0 /* CharBoundaryCategory.WordLower */]: 0,\n    [1 /* CharBoundaryCategory.WordUpper */]: 0,\n    [2 /* CharBoundaryCategory.WordNumber */]: 0,\n    [3 /* CharBoundaryCategory.End */]: 10,\n    [4 /* CharBoundaryCategory.Other */]: 2,\n    [5 /* CharBoundaryCategory.Space */]: 3,\n    [6 /* CharBoundaryCategory.LineBreakCR */]: 10,\n    [7 /* CharBoundaryCategory.LineBreakLF */]: 10,\n};\nfunction getCategoryBoundaryScore(category) {\n    return score[category];\n}\nfunction getCategory(charCode) {\n    if (charCode === 10 /* CharCode.LineFeed */) {\n        return 7 /* CharBoundaryCategory.LineBreakLF */;\n    }\n    else if (charCode === 13 /* CharCode.CarriageReturn */) {\n        return 6 /* CharBoundaryCategory.LineBreakCR */;\n    }\n    else if (isSpace(charCode)) {\n        return 5 /* CharBoundaryCategory.Space */;\n    }\n    else if (charCode >= 97 /* CharCode.a */ && charCode <= 122 /* CharCode.z */) {\n        return 0 /* CharBoundaryCategory.WordLower */;\n    }\n    else if (charCode >= 65 /* CharCode.A */ && charCode <= 90 /* CharCode.Z */) {\n        return 1 /* CharBoundaryCategory.WordUpper */;\n    }\n    else if (charCode >= 48 /* CharCode.Digit0 */ && charCode <= 57 /* CharCode.Digit9 */) {\n        return 2 /* CharBoundaryCategory.WordNumber */;\n    }\n    else if (charCode === -1) {\n        return 3 /* CharBoundaryCategory.End */;\n    }\n    else {\n        return 4 /* CharBoundaryCategory.Other */;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SequenceDiff } from './algorithms/diffAlgorithm.js';\nimport { LineRangeMapping } from '../rangeMapping.js';\nimport { pushMany, compareBy, numberComparator, reverseOrder } from '../../../../base/common/arrays.js';\nimport { MonotonousArray, findLastMonotonous } from '../../../../base/common/arraysFind.js';\nimport { SetMap } from '../../../../base/common/map.js';\nimport { LineRange, LineRangeSet } from '../../core/lineRange.js';\nimport { OffsetRange } from '../../core/offsetRange.js';\nimport { LinesSliceCharSequence } from './linesSliceCharSequence.js';\nimport { LineRangeFragment, isSpace } from './utils.js';\nimport { MyersDiffAlgorithm } from './algorithms/myersDiffAlgorithm.js';\nexport function computeMovedLines(changes, originalLines, modifiedLines, hashedOriginalLines, hashedModifiedLines, timeout) {\n    let { moves, excludedChanges } = computeMovesFromSimpleDeletionsToSimpleInsertions(changes, originalLines, modifiedLines, timeout);\n    if (!timeout.isValid()) {\n        return [];\n    }\n    const filteredChanges = changes.filter(c => !excludedChanges.has(c));\n    const unchangedMoves = computeUnchangedMoves(filteredChanges, hashedOriginalLines, hashedModifiedLines, originalLines, modifiedLines, timeout);\n    pushMany(moves, unchangedMoves);\n    moves = joinCloseConsecutiveMoves(moves);\n    // Ignore too short moves\n    moves = moves.filter(current => {\n        const originalText = current.original.toOffsetRange().slice(originalLines).map(l => l.trim()).join('\\n');\n        return originalText.length >= 10;\n    });\n    moves = removeMovesInSameDiff(changes, moves);\n    return moves;\n}\nfunction computeMovesFromSimpleDeletionsToSimpleInsertions(changes, originalLines, modifiedLines, timeout) {\n    const moves = [];\n    const deletions = changes\n        .filter(c => c.modified.isEmpty && c.original.length >= 3)\n        .map(d => new LineRangeFragment(d.original, originalLines, d));\n    const insertions = new Set(changes\n        .filter(c => c.original.isEmpty && c.modified.length >= 3)\n        .map(d => new LineRangeFragment(d.modified, modifiedLines, d)));\n    const excludedChanges = new Set();\n    for (const deletion of deletions) {\n        let highestSimilarity = -1;\n        let best;\n        for (const insertion of insertions) {\n            const similarity = deletion.computeSimilarity(insertion);\n            if (similarity > highestSimilarity) {\n                highestSimilarity = similarity;\n                best = insertion;\n            }\n        }\n        if (highestSimilarity > 0.90 && best) {\n            insertions.delete(best);\n            moves.push(new LineRangeMapping(deletion.range, best.range));\n            excludedChanges.add(deletion.source);\n            excludedChanges.add(best.source);\n        }\n        if (!timeout.isValid()) {\n            return { moves, excludedChanges };\n        }\n    }\n    return { moves, excludedChanges };\n}\nfunction computeUnchangedMoves(changes, hashedOriginalLines, hashedModifiedLines, originalLines, modifiedLines, timeout) {\n    const moves = [];\n    const original3LineHashes = new SetMap();\n    for (const change of changes) {\n        for (let i = change.original.startLineNumber; i < change.original.endLineNumberExclusive - 2; i++) {\n            const key = `${hashedOriginalLines[i - 1]}:${hashedOriginalLines[i + 1 - 1]}:${hashedOriginalLines[i + 2 - 1]}`;\n            original3LineHashes.add(key, { range: new LineRange(i, i + 3) });\n        }\n    }\n    const possibleMappings = [];\n    changes.sort(compareBy(c => c.modified.startLineNumber, numberComparator));\n    for (const change of changes) {\n        let lastMappings = [];\n        for (let i = change.modified.startLineNumber; i < change.modified.endLineNumberExclusive - 2; i++) {\n            const key = `${hashedModifiedLines[i - 1]}:${hashedModifiedLines[i + 1 - 1]}:${hashedModifiedLines[i + 2 - 1]}`;\n            const currentModifiedRange = new LineRange(i, i + 3);\n            const nextMappings = [];\n            original3LineHashes.forEach(key, ({ range }) => {\n                for (const lastMapping of lastMappings) {\n                    // does this match extend some last match?\n                    if (lastMapping.originalLineRange.endLineNumberExclusive + 1 === range.endLineNumberExclusive &&\n                        lastMapping.modifiedLineRange.endLineNumberExclusive + 1 === currentModifiedRange.endLineNumberExclusive) {\n                        lastMapping.originalLineRange = new LineRange(lastMapping.originalLineRange.startLineNumber, range.endLineNumberExclusive);\n                        lastMapping.modifiedLineRange = new LineRange(lastMapping.modifiedLineRange.startLineNumber, currentModifiedRange.endLineNumberExclusive);\n                        nextMappings.push(lastMapping);\n                        return;\n                    }\n                }\n                const mapping = {\n                    modifiedLineRange: currentModifiedRange,\n                    originalLineRange: range,\n                };\n                possibleMappings.push(mapping);\n                nextMappings.push(mapping);\n            });\n            lastMappings = nextMappings;\n        }\n        if (!timeout.isValid()) {\n            return [];\n        }\n    }\n    possibleMappings.sort(reverseOrder(compareBy(m => m.modifiedLineRange.length, numberComparator)));\n    const modifiedSet = new LineRangeSet();\n    const originalSet = new LineRangeSet();\n    for (const mapping of possibleMappings) {\n        const diffOrigToMod = mapping.modifiedLineRange.startLineNumber - mapping.originalLineRange.startLineNumber;\n        const modifiedSections = modifiedSet.subtractFrom(mapping.modifiedLineRange);\n        const originalTranslatedSections = originalSet.subtractFrom(mapping.originalLineRange).getWithDelta(diffOrigToMod);\n        const modifiedIntersectedSections = modifiedSections.getIntersection(originalTranslatedSections);\n        for (const s of modifiedIntersectedSections.ranges) {\n            if (s.length < 3) {\n                continue;\n            }\n            const modifiedLineRange = s;\n            const originalLineRange = s.delta(-diffOrigToMod);\n            moves.push(new LineRangeMapping(originalLineRange, modifiedLineRange));\n            modifiedSet.addRange(modifiedLineRange);\n            originalSet.addRange(originalLineRange);\n        }\n    }\n    moves.sort(compareBy(m => m.original.startLineNumber, numberComparator));\n    const monotonousChanges = new MonotonousArray(changes);\n    for (let i = 0; i < moves.length; i++) {\n        const move = moves[i];\n        const firstTouchingChangeOrig = monotonousChanges.findLastMonotonous(c => c.original.startLineNumber <= move.original.startLineNumber);\n        const firstTouchingChangeMod = findLastMonotonous(changes, c => c.modified.startLineNumber <= move.modified.startLineNumber);\n        const linesAbove = Math.max(move.original.startLineNumber - firstTouchingChangeOrig.original.startLineNumber, move.modified.startLineNumber - firstTouchingChangeMod.modified.startLineNumber);\n        const lastTouchingChangeOrig = monotonousChanges.findLastMonotonous(c => c.original.startLineNumber < move.original.endLineNumberExclusive);\n        const lastTouchingChangeMod = findLastMonotonous(changes, c => c.modified.startLineNumber < move.modified.endLineNumberExclusive);\n        const linesBelow = Math.max(lastTouchingChangeOrig.original.endLineNumberExclusive - move.original.endLineNumberExclusive, lastTouchingChangeMod.modified.endLineNumberExclusive - move.modified.endLineNumberExclusive);\n        let extendToTop;\n        for (extendToTop = 0; extendToTop < linesAbove; extendToTop++) {\n            const origLine = move.original.startLineNumber - extendToTop - 1;\n            const modLine = move.modified.startLineNumber - extendToTop - 1;\n            if (origLine > originalLines.length || modLine > modifiedLines.length) {\n                break;\n            }\n            if (modifiedSet.contains(modLine) || originalSet.contains(origLine)) {\n                break;\n            }\n            if (!areLinesSimilar(originalLines[origLine - 1], modifiedLines[modLine - 1], timeout)) {\n                break;\n            }\n        }\n        if (extendToTop > 0) {\n            originalSet.addRange(new LineRange(move.original.startLineNumber - extendToTop, move.original.startLineNumber));\n            modifiedSet.addRange(new LineRange(move.modified.startLineNumber - extendToTop, move.modified.startLineNumber));\n        }\n        let extendToBottom;\n        for (extendToBottom = 0; extendToBottom < linesBelow; extendToBottom++) {\n            const origLine = move.original.endLineNumberExclusive + extendToBottom;\n            const modLine = move.modified.endLineNumberExclusive + extendToBottom;\n            if (origLine > originalLines.length || modLine > modifiedLines.length) {\n                break;\n            }\n            if (modifiedSet.contains(modLine) || originalSet.contains(origLine)) {\n                break;\n            }\n            if (!areLinesSimilar(originalLines[origLine - 1], modifiedLines[modLine - 1], timeout)) {\n                break;\n            }\n        }\n        if (extendToBottom > 0) {\n            originalSet.addRange(new LineRange(move.original.endLineNumberExclusive, move.original.endLineNumberExclusive + extendToBottom));\n            modifiedSet.addRange(new LineRange(move.modified.endLineNumberExclusive, move.modified.endLineNumberExclusive + extendToBottom));\n        }\n        if (extendToTop > 0 || extendToBottom > 0) {\n            moves[i] = new LineRangeMapping(new LineRange(move.original.startLineNumber - extendToTop, move.original.endLineNumberExclusive + extendToBottom), new LineRange(move.modified.startLineNumber - extendToTop, move.modified.endLineNumberExclusive + extendToBottom));\n        }\n    }\n    return moves;\n}\nfunction areLinesSimilar(line1, line2, timeout) {\n    if (line1.trim() === line2.trim()) {\n        return true;\n    }\n    if (line1.length > 300 && line2.length > 300) {\n        return false;\n    }\n    const myersDiffingAlgorithm = new MyersDiffAlgorithm();\n    const result = myersDiffingAlgorithm.compute(new LinesSliceCharSequence([line1], new OffsetRange(0, 1), false), new LinesSliceCharSequence([line2], new OffsetRange(0, 1), false), timeout);\n    let commonNonSpaceCharCount = 0;\n    const inverted = SequenceDiff.invert(result.diffs, line1.length);\n    for (const seq of inverted) {\n        seq.seq1Range.forEach(idx => {\n            if (!isSpace(line1.charCodeAt(idx))) {\n                commonNonSpaceCharCount++;\n            }\n        });\n    }\n    function countNonWsChars(str) {\n        let count = 0;\n        for (let i = 0; i < line1.length; i++) {\n            if (!isSpace(str.charCodeAt(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    const longerLineLength = countNonWsChars(line1.length > line2.length ? line1 : line2);\n    const r = commonNonSpaceCharCount / longerLineLength > 0.6 && longerLineLength > 10;\n    return r;\n}\nfunction joinCloseConsecutiveMoves(moves) {\n    if (moves.length === 0) {\n        return moves;\n    }\n    moves.sort(compareBy(m => m.original.startLineNumber, numberComparator));\n    const result = [moves[0]];\n    for (let i = 1; i < moves.length; i++) {\n        const last = result[result.length - 1];\n        const current = moves[i];\n        const originalDist = current.original.startLineNumber - last.original.endLineNumberExclusive;\n        const modifiedDist = current.modified.startLineNumber - last.modified.endLineNumberExclusive;\n        const currentMoveAfterLast = originalDist >= 0 && modifiedDist >= 0;\n        if (currentMoveAfterLast && originalDist + modifiedDist <= 2) {\n            result[result.length - 1] = last.join(current);\n            continue;\n        }\n        result.push(current);\n    }\n    return result;\n}\nfunction removeMovesInSameDiff(changes, moves) {\n    const changesMonotonous = new MonotonousArray(changes);\n    moves = moves.filter(m => {\n        const diffBeforeEndOfMoveOriginal = changesMonotonous.findLastMonotonous(c => c.original.endLineNumberExclusive < m.original.endLineNumberExclusive)\n            || new LineRangeMapping(new LineRange(1, 1), new LineRange(1, 1));\n        const diffBeforeEndOfMoveModified = findLastMonotonous(changes, c => c.modified.endLineNumberExclusive < m.modified.endLineNumberExclusive);\n        const differentDiffs = diffBeforeEndOfMoveOriginal !== diffBeforeEndOfMoveModified;\n        return differentDiffs;\n    });\n    return moves;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { forEachWithNeighbors } from '../../../../base/common/arrays.js';\nimport { OffsetRange } from '../../core/offsetRange.js';\nimport { OffsetPair, SequenceDiff } from './algorithms/diffAlgorithm.js';\nexport function optimizeSequenceDiffs(sequence1, sequence2, sequenceDiffs) {\n    let result = sequenceDiffs;\n    result = joinSequenceDiffsByShifting(sequence1, sequence2, result);\n    result = shiftSequenceDiffs(sequence1, sequence2, result);\n    return result;\n}\n/**\n * This function fixes issues like this:\n * ```\n * import { Baz, Bar } from \"foo\";\n * ```\n * <->\n * ```\n * import { Baz, Bar, Foo } from \"foo\";\n * ```\n * Computed diff: [ {Add \",\" after Bar}, {Add \"Foo \" after space} }\n * Improved diff: [{Add \", Foo\" after Bar}]\n */\nfunction joinSequenceDiffsByShifting(sequence1, sequence2, sequenceDiffs) {\n    if (sequenceDiffs.length === 0) {\n        return sequenceDiffs;\n    }\n    const result = [];\n    result.push(sequenceDiffs[0]);\n    // First move them all to the left as much as possible and join them if possible\n    for (let i = 1; i < sequenceDiffs.length; i++) {\n        const prevResult = result[result.length - 1];\n        let cur = sequenceDiffs[i];\n        if (cur.seq1Range.isEmpty || cur.seq2Range.isEmpty) {\n            const length = cur.seq1Range.start - prevResult.seq1Range.endExclusive;\n            let d;\n            for (d = 1; d <= length; d++) {\n                if (sequence1.getElement(cur.seq1Range.start - d) !== sequence1.getElement(cur.seq1Range.endExclusive - d) ||\n                    sequence2.getElement(cur.seq2Range.start - d) !== sequence2.getElement(cur.seq2Range.endExclusive - d)) {\n                    break;\n                }\n            }\n            d--;\n            if (d === length) {\n                // Merge previous and current diff\n                result[result.length - 1] = new SequenceDiff(new OffsetRange(prevResult.seq1Range.start, cur.seq1Range.endExclusive - length), new OffsetRange(prevResult.seq2Range.start, cur.seq2Range.endExclusive - length));\n                continue;\n            }\n            cur = cur.delta(-d);\n        }\n        result.push(cur);\n    }\n    const result2 = [];\n    // Then move them all to the right and join them again if possible\n    for (let i = 0; i < result.length - 1; i++) {\n        const nextResult = result[i + 1];\n        let cur = result[i];\n        if (cur.seq1Range.isEmpty || cur.seq2Range.isEmpty) {\n            const length = nextResult.seq1Range.start - cur.seq1Range.endExclusive;\n            let d;\n            for (d = 0; d < length; d++) {\n                if (!sequence1.isStronglyEqual(cur.seq1Range.start + d, cur.seq1Range.endExclusive + d) ||\n                    !sequence2.isStronglyEqual(cur.seq2Range.start + d, cur.seq2Range.endExclusive + d)) {\n                    break;\n                }\n            }\n            if (d === length) {\n                // Merge previous and current diff, write to result!\n                result[i + 1] = new SequenceDiff(new OffsetRange(cur.seq1Range.start + length, nextResult.seq1Range.endExclusive), new OffsetRange(cur.seq2Range.start + length, nextResult.seq2Range.endExclusive));\n                continue;\n            }\n            if (d > 0) {\n                cur = cur.delta(d);\n            }\n        }\n        result2.push(cur);\n    }\n    if (result.length > 0) {\n        result2.push(result[result.length - 1]);\n    }\n    return result2;\n}\n// align character level diffs at whitespace characters\n// import { IBar } from \"foo\";\n// import { I[Arr, I]Bar } from \"foo\";\n// ->\n// import { [IArr, ]IBar } from \"foo\";\n// import { ITransaction, observableValue, transaction } from 'vs/base/common/observable';\n// import { ITransaction, observable[FromEvent, observable]Value, transaction } from 'vs/base/common/observable';\n// ->\n// import { ITransaction, [observableFromEvent, ]observableValue, transaction } from 'vs/base/common/observable';\n// collectBrackets(level + 1, levelPerBracketType);\n// collectBrackets(level + 1, levelPerBracket[ + 1, levelPerBracket]Type);\n// ->\n// collectBrackets(level + 1, [levelPerBracket + 1, ]levelPerBracketType);\nfunction shiftSequenceDiffs(sequence1, sequence2, sequenceDiffs) {\n    if (!sequence1.getBoundaryScore || !sequence2.getBoundaryScore) {\n        return sequenceDiffs;\n    }\n    for (let i = 0; i < sequenceDiffs.length; i++) {\n        const prevDiff = (i > 0 ? sequenceDiffs[i - 1] : undefined);\n        const diff = sequenceDiffs[i];\n        const nextDiff = (i + 1 < sequenceDiffs.length ? sequenceDiffs[i + 1] : undefined);\n        const seq1ValidRange = new OffsetRange(prevDiff ? prevDiff.seq1Range.start + 1 : 0, nextDiff ? nextDiff.seq1Range.endExclusive - 1 : sequence1.length);\n        const seq2ValidRange = new OffsetRange(prevDiff ? prevDiff.seq2Range.start + 1 : 0, nextDiff ? nextDiff.seq2Range.endExclusive - 1 : sequence2.length);\n        if (diff.seq1Range.isEmpty) {\n            sequenceDiffs[i] = shiftDiffToBetterPosition(diff, sequence1, sequence2, seq1ValidRange, seq2ValidRange);\n        }\n        else if (diff.seq2Range.isEmpty) {\n            sequenceDiffs[i] = shiftDiffToBetterPosition(diff.swap(), sequence2, sequence1, seq2ValidRange, seq1ValidRange).swap();\n        }\n    }\n    return sequenceDiffs;\n}\nfunction shiftDiffToBetterPosition(diff, sequence1, sequence2, seq1ValidRange, seq2ValidRange) {\n    const maxShiftLimit = 100; // To prevent performance issues\n    // don't touch previous or next!\n    let deltaBefore = 1;\n    while (diff.seq1Range.start - deltaBefore >= seq1ValidRange.start &&\n        diff.seq2Range.start - deltaBefore >= seq2ValidRange.start &&\n        sequence2.isStronglyEqual(diff.seq2Range.start - deltaBefore, diff.seq2Range.endExclusive - deltaBefore) && deltaBefore < maxShiftLimit) {\n        deltaBefore++;\n    }\n    deltaBefore--;\n    let deltaAfter = 0;\n    while (diff.seq1Range.start + deltaAfter < seq1ValidRange.endExclusive &&\n        diff.seq2Range.endExclusive + deltaAfter < seq2ValidRange.endExclusive &&\n        sequence2.isStronglyEqual(diff.seq2Range.start + deltaAfter, diff.seq2Range.endExclusive + deltaAfter) && deltaAfter < maxShiftLimit) {\n        deltaAfter++;\n    }\n    if (deltaBefore === 0 && deltaAfter === 0) {\n        return diff;\n    }\n    // Visualize `[sequence1.text, diff.seq1Range.start + deltaAfter]`\n    // and `[sequence2.text, diff.seq2Range.start + deltaAfter, diff.seq2Range.endExclusive + deltaAfter]`\n    let bestDelta = 0;\n    let bestScore = -1;\n    // find best scored delta\n    for (let delta = -deltaBefore; delta <= deltaAfter; delta++) {\n        const seq2OffsetStart = diff.seq2Range.start + delta;\n        const seq2OffsetEndExclusive = diff.seq2Range.endExclusive + delta;\n        const seq1Offset = diff.seq1Range.start + delta;\n        const score = sequence1.getBoundaryScore(seq1Offset) + sequence2.getBoundaryScore(seq2OffsetStart) + sequence2.getBoundaryScore(seq2OffsetEndExclusive);\n        if (score > bestScore) {\n            bestScore = score;\n            bestDelta = delta;\n        }\n    }\n    return diff.delta(bestDelta);\n}\nexport function removeShortMatches(sequence1, sequence2, sequenceDiffs) {\n    const result = [];\n    for (const s of sequenceDiffs) {\n        const last = result[result.length - 1];\n        if (!last) {\n            result.push(s);\n            continue;\n        }\n        if (s.seq1Range.start - last.seq1Range.endExclusive <= 2 || s.seq2Range.start - last.seq2Range.endExclusive <= 2) {\n            result[result.length - 1] = new SequenceDiff(last.seq1Range.join(s.seq1Range), last.seq2Range.join(s.seq2Range));\n        }\n        else {\n            result.push(s);\n        }\n    }\n    return result;\n}\nexport function extendDiffsToEntireWordIfAppropriate(sequence1, sequence2, sequenceDiffs) {\n    const additional = [];\n    let lastModifiedWord = undefined;\n    function maybePushWordToAdditional() {\n        if (!lastModifiedWord) {\n            return;\n        }\n        const originalLength1 = lastModifiedWord.s1Range.length - lastModifiedWord.deleted;\n        const originalLength2 = lastModifiedWord.s2Range.length - lastModifiedWord.added;\n        if (originalLength1 !== originalLength2) {\n            // TODO figure out why this happens\n        }\n        if (Math.max(lastModifiedWord.deleted, lastModifiedWord.added) + (lastModifiedWord.count - 1) > originalLength1) {\n            additional.push(new SequenceDiff(lastModifiedWord.s1Range, lastModifiedWord.s2Range));\n        }\n        lastModifiedWord = undefined;\n    }\n    for (const s of sequenceDiffs) {\n        function processWord(s1Range, s2Range) {\n            var _a, _b, _c, _d;\n            if (!lastModifiedWord || !lastModifiedWord.s1Range.containsRange(s1Range) || !lastModifiedWord.s2Range.containsRange(s2Range)) {\n                if (lastModifiedWord && !(lastModifiedWord.s1Range.endExclusive < s1Range.start && lastModifiedWord.s2Range.endExclusive < s2Range.start)) {\n                    const s1Added = OffsetRange.tryCreate(lastModifiedWord.s1Range.endExclusive, s1Range.start);\n                    const s2Added = OffsetRange.tryCreate(lastModifiedWord.s2Range.endExclusive, s2Range.start);\n                    lastModifiedWord.deleted += (_a = s1Added === null || s1Added === void 0 ? void 0 : s1Added.length) !== null && _a !== void 0 ? _a : 0;\n                    lastModifiedWord.added += (_b = s2Added === null || s2Added === void 0 ? void 0 : s2Added.length) !== null && _b !== void 0 ? _b : 0;\n                    lastModifiedWord.s1Range = lastModifiedWord.s1Range.join(s1Range);\n                    lastModifiedWord.s2Range = lastModifiedWord.s2Range.join(s2Range);\n                }\n                else {\n                    maybePushWordToAdditional();\n                    lastModifiedWord = { added: 0, deleted: 0, count: 0, s1Range: s1Range, s2Range: s2Range };\n                }\n            }\n            const changedS1 = s1Range.intersect(s.seq1Range);\n            const changedS2 = s2Range.intersect(s.seq2Range);\n            lastModifiedWord.count++;\n            lastModifiedWord.deleted += (_c = changedS1 === null || changedS1 === void 0 ? void 0 : changedS1.length) !== null && _c !== void 0 ? _c : 0;\n            lastModifiedWord.added += (_d = changedS2 === null || changedS2 === void 0 ? void 0 : changedS2.length) !== null && _d !== void 0 ? _d : 0;\n        }\n        const w1Before = sequence1.findWordContaining(s.seq1Range.start - 1);\n        const w2Before = sequence2.findWordContaining(s.seq2Range.start - 1);\n        const w1After = sequence1.findWordContaining(s.seq1Range.endExclusive);\n        const w2After = sequence2.findWordContaining(s.seq2Range.endExclusive);\n        if (w1Before && w1After && w2Before && w2After && w1Before.equals(w1After) && w2Before.equals(w2After)) {\n            processWord(w1Before, w2Before);\n        }\n        else {\n            if (w1Before && w2Before) {\n                processWord(w1Before, w2Before);\n            }\n            if (w1After && w2After) {\n                processWord(w1After, w2After);\n            }\n        }\n    }\n    maybePushWordToAdditional();\n    const merged = mergeSequenceDiffs(sequenceDiffs, additional);\n    return merged;\n}\nfunction mergeSequenceDiffs(sequenceDiffs1, sequenceDiffs2) {\n    const result = [];\n    while (sequenceDiffs1.length > 0 || sequenceDiffs2.length > 0) {\n        const sd1 = sequenceDiffs1[0];\n        const sd2 = sequenceDiffs2[0];\n        let next;\n        if (sd1 && (!sd2 || sd1.seq1Range.start < sd2.seq1Range.start)) {\n            next = sequenceDiffs1.shift();\n        }\n        else {\n            next = sequenceDiffs2.shift();\n        }\n        if (result.length > 0 && result[result.length - 1].seq1Range.endExclusive >= next.seq1Range.start) {\n            result[result.length - 1] = result[result.length - 1].join(next);\n        }\n        else {\n            result.push(next);\n        }\n    }\n    return result;\n}\nexport function removeVeryShortMatchingLinesBetweenDiffs(sequence1, _sequence2, sequenceDiffs) {\n    let diffs = sequenceDiffs;\n    if (diffs.length === 0) {\n        return diffs;\n    }\n    let counter = 0;\n    let shouldRepeat;\n    do {\n        shouldRepeat = false;\n        const result = [\n            diffs[0]\n        ];\n        for (let i = 1; i < diffs.length; i++) {\n            const cur = diffs[i];\n            const lastResult = result[result.length - 1];\n            function shouldJoinDiffs(before, after) {\n                const unchangedRange = new OffsetRange(lastResult.seq1Range.endExclusive, cur.seq1Range.start);\n                const unchangedText = sequence1.getText(unchangedRange);\n                const unchangedTextWithoutWs = unchangedText.replace(/\\s/g, '');\n                if (unchangedTextWithoutWs.length <= 4\n                    && (before.seq1Range.length + before.seq2Range.length > 5 || after.seq1Range.length + after.seq2Range.length > 5)) {\n                    return true;\n                }\n                return false;\n            }\n            const shouldJoin = shouldJoinDiffs(lastResult, cur);\n            if (shouldJoin) {\n                shouldRepeat = true;\n                result[result.length - 1] = result[result.length - 1].join(cur);\n            }\n            else {\n                result.push(cur);\n            }\n        }\n        diffs = result;\n    } while (counter++ < 10 && shouldRepeat);\n    return diffs;\n}\nexport function removeVeryShortMatchingTextBetweenLongDiffs(sequence1, sequence2, sequenceDiffs) {\n    let diffs = sequenceDiffs;\n    if (diffs.length === 0) {\n        return diffs;\n    }\n    let counter = 0;\n    let shouldRepeat;\n    do {\n        shouldRepeat = false;\n        const result = [\n            diffs[0]\n        ];\n        for (let i = 1; i < diffs.length; i++) {\n            const cur = diffs[i];\n            const lastResult = result[result.length - 1];\n            function shouldJoinDiffs(before, after) {\n                const unchangedRange = new OffsetRange(lastResult.seq1Range.endExclusive, cur.seq1Range.start);\n                const unchangedLineCount = sequence1.countLinesIn(unchangedRange);\n                if (unchangedLineCount > 5 || unchangedRange.length > 500) {\n                    return false;\n                }\n                const unchangedText = sequence1.getText(unchangedRange).trim();\n                if (unchangedText.length > 20 || unchangedText.split(/\\r\\n|\\r|\\n/).length > 1) {\n                    return false;\n                }\n                const beforeLineCount1 = sequence1.countLinesIn(before.seq1Range);\n                const beforeSeq1Length = before.seq1Range.length;\n                const beforeLineCount2 = sequence2.countLinesIn(before.seq2Range);\n                const beforeSeq2Length = before.seq2Range.length;\n                const afterLineCount1 = sequence1.countLinesIn(after.seq1Range);\n                const afterSeq1Length = after.seq1Range.length;\n                const afterLineCount2 = sequence2.countLinesIn(after.seq2Range);\n                const afterSeq2Length = after.seq2Range.length;\n                // TODO: Maybe a neural net can be used to derive the result from these numbers\n                const max = 2 * 40 + 50;\n                function cap(v) {\n                    return Math.min(v, max);\n                }\n                if (Math.pow(Math.pow(cap(beforeLineCount1 * 40 + beforeSeq1Length), 1.5) + Math.pow(cap(beforeLineCount2 * 40 + beforeSeq2Length), 1.5), 1.5)\n                    + Math.pow(Math.pow(cap(afterLineCount1 * 40 + afterSeq1Length), 1.5) + Math.pow(cap(afterLineCount2 * 40 + afterSeq2Length), 1.5), 1.5) > (Math.pow((Math.pow(max, 1.5)), 1.5)) * 1.3) {\n                    return true;\n                }\n                return false;\n            }\n            const shouldJoin = shouldJoinDiffs(lastResult, cur);\n            if (shouldJoin) {\n                shouldRepeat = true;\n                result[result.length - 1] = result[result.length - 1].join(cur);\n            }\n            else {\n                result.push(cur);\n            }\n        }\n        diffs = result;\n    } while (counter++ < 10 && shouldRepeat);\n    const newDiffs = [];\n    // Remove short suffixes/prefixes\n    forEachWithNeighbors(diffs, (prev, cur, next) => {\n        let newDiff = cur;\n        function shouldMarkAsChanged(text) {\n            return text.length > 0 && text.trim().length <= 3 && cur.seq1Range.length + cur.seq2Range.length > 100;\n        }\n        const fullRange1 = sequence1.extendToFullLines(cur.seq1Range);\n        const prefix = sequence1.getText(new OffsetRange(fullRange1.start, cur.seq1Range.start));\n        if (shouldMarkAsChanged(prefix)) {\n            newDiff = newDiff.deltaStart(-prefix.length);\n        }\n        const suffix = sequence1.getText(new OffsetRange(cur.seq1Range.endExclusive, fullRange1.endExclusive));\n        if (shouldMarkAsChanged(suffix)) {\n            newDiff = newDiff.deltaEnd(suffix.length);\n        }\n        const availableSpace = SequenceDiff.fromOffsetPairs(prev ? prev.getEndExclusives() : OffsetPair.zero, next ? next.getStarts() : OffsetPair.max);\n        const result = newDiff.intersect(availableSpace);\n        newDiffs.push(result);\n    });\n    return newDiffs;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class LineSequence {\n    constructor(trimmedHash, lines) {\n        this.trimmedHash = trimmedHash;\n        this.lines = lines;\n    }\n    getElement(offset) {\n        return this.trimmedHash[offset];\n    }\n    get length() {\n        return this.trimmedHash.length;\n    }\n    getBoundaryScore(length) {\n        const indentationBefore = length === 0 ? 0 : getIndentation(this.lines[length - 1]);\n        const indentationAfter = length === this.lines.length ? 0 : getIndentation(this.lines[length]);\n        return 1000 - (indentationBefore + indentationAfter);\n    }\n    getText(range) {\n        return this.lines.slice(range.start, range.endExclusive).join('\\n');\n    }\n    isStronglyEqual(offset1, offset2) {\n        return this.lines[offset1] === this.lines[offset2];\n    }\n}\nfunction getIndentation(str) {\n    let i = 0;\n    while (i < str.length && (str.charCodeAt(i) === 32 /* CharCode.Space */ || str.charCodeAt(i) === 9 /* CharCode.Tab */)) {\n        i++;\n    }\n    return i;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { equals, groupAdjacentBy } from '../../../../base/common/arrays.js';\nimport { assertFn, checkAdjacentItems } from '../../../../base/common/assert.js';\nimport { LineRange } from '../../core/lineRange.js';\nimport { OffsetRange } from '../../core/offsetRange.js';\nimport { Range } from '../../core/range.js';\nimport { DateTimeout, InfiniteTimeout, SequenceDiff } from './algorithms/diffAlgorithm.js';\nimport { DynamicProgrammingDiffing } from './algorithms/dynamicProgrammingDiffing.js';\nimport { MyersDiffAlgorithm } from './algorithms/myersDiffAlgorithm.js';\nimport { computeMovedLines } from './computeMovedLines.js';\nimport { extendDiffsToEntireWordIfAppropriate, optimizeSequenceDiffs, removeVeryShortMatchingLinesBetweenDiffs, removeVeryShortMatchingTextBetweenLongDiffs, removeShortMatches } from './heuristicSequenceOptimizations.js';\nimport { LinesDiff, MovedText } from '../linesDiffComputer.js';\nimport { DetailedLineRangeMapping, RangeMapping } from '../rangeMapping.js';\nimport { LinesSliceCharSequence } from './linesSliceCharSequence.js';\nimport { LineSequence } from './lineSequence.js';\nexport class DefaultLinesDiffComputer {\n    constructor() {\n        this.dynamicProgrammingDiffing = new DynamicProgrammingDiffing();\n        this.myersDiffingAlgorithm = new MyersDiffAlgorithm();\n    }\n    computeDiff(originalLines, modifiedLines, options) {\n        if (originalLines.length <= 1 && equals(originalLines, modifiedLines, (a, b) => a === b)) {\n            return new LinesDiff([], [], false);\n        }\n        if (originalLines.length === 1 && originalLines[0].length === 0 || modifiedLines.length === 1 && modifiedLines[0].length === 0) {\n            return new LinesDiff([\n                new DetailedLineRangeMapping(new LineRange(1, originalLines.length + 1), new LineRange(1, modifiedLines.length + 1), [\n                    new RangeMapping(new Range(1, 1, originalLines.length, originalLines[0].length + 1), new Range(1, 1, modifiedLines.length, modifiedLines[0].length + 1))\n                ])\n            ], [], false);\n        }\n        const timeout = options.maxComputationTimeMs === 0 ? InfiniteTimeout.instance : new DateTimeout(options.maxComputationTimeMs);\n        const considerWhitespaceChanges = !options.ignoreTrimWhitespace;\n        const perfectHashes = new Map();\n        function getOrCreateHash(text) {\n            let hash = perfectHashes.get(text);\n            if (hash === undefined) {\n                hash = perfectHashes.size;\n                perfectHashes.set(text, hash);\n            }\n            return hash;\n        }\n        const originalLinesHashes = originalLines.map((l) => getOrCreateHash(l.trim()));\n        const modifiedLinesHashes = modifiedLines.map((l) => getOrCreateHash(l.trim()));\n        const sequence1 = new LineSequence(originalLinesHashes, originalLines);\n        const sequence2 = new LineSequence(modifiedLinesHashes, modifiedLines);\n        const lineAlignmentResult = (() => {\n            if (sequence1.length + sequence2.length < 1700) {\n                // Use the improved algorithm for small files\n                return this.dynamicProgrammingDiffing.compute(sequence1, sequence2, timeout, (offset1, offset2) => originalLines[offset1] === modifiedLines[offset2]\n                    ? modifiedLines[offset2].length === 0\n                        ? 0.1\n                        : 1 + Math.log(1 + modifiedLines[offset2].length)\n                    : 0.99);\n            }\n            return this.myersDiffingAlgorithm.compute(sequence1, sequence2);\n        })();\n        let lineAlignments = lineAlignmentResult.diffs;\n        let hitTimeout = lineAlignmentResult.hitTimeout;\n        lineAlignments = optimizeSequenceDiffs(sequence1, sequence2, lineAlignments);\n        lineAlignments = removeVeryShortMatchingLinesBetweenDiffs(sequence1, sequence2, lineAlignments);\n        const alignments = [];\n        const scanForWhitespaceChanges = (equalLinesCount) => {\n            if (!considerWhitespaceChanges) {\n                return;\n            }\n            for (let i = 0; i < equalLinesCount; i++) {\n                const seq1Offset = seq1LastStart + i;\n                const seq2Offset = seq2LastStart + i;\n                if (originalLines[seq1Offset] !== modifiedLines[seq2Offset]) {\n                    // This is because of whitespace changes, diff these lines\n                    const characterDiffs = this.refineDiff(originalLines, modifiedLines, new SequenceDiff(new OffsetRange(seq1Offset, seq1Offset + 1), new OffsetRange(seq2Offset, seq2Offset + 1)), timeout, considerWhitespaceChanges);\n                    for (const a of characterDiffs.mappings) {\n                        alignments.push(a);\n                    }\n                    if (characterDiffs.hitTimeout) {\n                        hitTimeout = true;\n                    }\n                }\n            }\n        };\n        let seq1LastStart = 0;\n        let seq2LastStart = 0;\n        for (const diff of lineAlignments) {\n            assertFn(() => diff.seq1Range.start - seq1LastStart === diff.seq2Range.start - seq2LastStart);\n            const equalLinesCount = diff.seq1Range.start - seq1LastStart;\n            scanForWhitespaceChanges(equalLinesCount);\n            seq1LastStart = diff.seq1Range.endExclusive;\n            seq2LastStart = diff.seq2Range.endExclusive;\n            const characterDiffs = this.refineDiff(originalLines, modifiedLines, diff, timeout, considerWhitespaceChanges);\n            if (characterDiffs.hitTimeout) {\n                hitTimeout = true;\n            }\n            for (const a of characterDiffs.mappings) {\n                alignments.push(a);\n            }\n        }\n        scanForWhitespaceChanges(originalLines.length - seq1LastStart);\n        const changes = lineRangeMappingFromRangeMappings(alignments, originalLines, modifiedLines);\n        let moves = [];\n        if (options.computeMoves) {\n            moves = this.computeMoves(changes, originalLines, modifiedLines, originalLinesHashes, modifiedLinesHashes, timeout, considerWhitespaceChanges);\n        }\n        // Make sure all ranges are valid\n        assertFn(() => {\n            function validatePosition(pos, lines) {\n                if (pos.lineNumber < 1 || pos.lineNumber > lines.length) {\n                    return false;\n                }\n                const line = lines[pos.lineNumber - 1];\n                if (pos.column < 1 || pos.column > line.length + 1) {\n                    return false;\n                }\n                return true;\n            }\n            function validateRange(range, lines) {\n                if (range.startLineNumber < 1 || range.startLineNumber > lines.length + 1) {\n                    return false;\n                }\n                if (range.endLineNumberExclusive < 1 || range.endLineNumberExclusive > lines.length + 1) {\n                    return false;\n                }\n                return true;\n            }\n            for (const c of changes) {\n                if (!c.innerChanges) {\n                    return false;\n                }\n                for (const ic of c.innerChanges) {\n                    const valid = validatePosition(ic.modifiedRange.getStartPosition(), modifiedLines) && validatePosition(ic.modifiedRange.getEndPosition(), modifiedLines) &&\n                        validatePosition(ic.originalRange.getStartPosition(), originalLines) && validatePosition(ic.originalRange.getEndPosition(), originalLines);\n                    if (!valid) {\n                        return false;\n                    }\n                }\n                if (!validateRange(c.modified, modifiedLines) || !validateRange(c.original, originalLines)) {\n                    return false;\n                }\n            }\n            return true;\n        });\n        return new LinesDiff(changes, moves, hitTimeout);\n    }\n    computeMoves(changes, originalLines, modifiedLines, hashedOriginalLines, hashedModifiedLines, timeout, considerWhitespaceChanges) {\n        const moves = computeMovedLines(changes, originalLines, modifiedLines, hashedOriginalLines, hashedModifiedLines, timeout);\n        const movesWithDiffs = moves.map(m => {\n            const moveChanges = this.refineDiff(originalLines, modifiedLines, new SequenceDiff(m.original.toOffsetRange(), m.modified.toOffsetRange()), timeout, considerWhitespaceChanges);\n            const mappings = lineRangeMappingFromRangeMappings(moveChanges.mappings, originalLines, modifiedLines, true);\n            return new MovedText(m, mappings);\n        });\n        return movesWithDiffs;\n    }\n    refineDiff(originalLines, modifiedLines, diff, timeout, considerWhitespaceChanges) {\n        const slice1 = new LinesSliceCharSequence(originalLines, diff.seq1Range, considerWhitespaceChanges);\n        const slice2 = new LinesSliceCharSequence(modifiedLines, diff.seq2Range, considerWhitespaceChanges);\n        const diffResult = slice1.length + slice2.length < 500\n            ? this.dynamicProgrammingDiffing.compute(slice1, slice2, timeout)\n            : this.myersDiffingAlgorithm.compute(slice1, slice2, timeout);\n        let diffs = diffResult.diffs;\n        diffs = optimizeSequenceDiffs(slice1, slice2, diffs);\n        diffs = extendDiffsToEntireWordIfAppropriate(slice1, slice2, diffs);\n        diffs = removeShortMatches(slice1, slice2, diffs);\n        diffs = removeVeryShortMatchingTextBetweenLongDiffs(slice1, slice2, diffs);\n        const result = diffs.map((d) => new RangeMapping(slice1.translateRange(d.seq1Range), slice2.translateRange(d.seq2Range)));\n        // Assert: result applied on original should be the same as diff applied to original\n        return {\n            mappings: result,\n            hitTimeout: diffResult.hitTimeout,\n        };\n    }\n}\nexport function lineRangeMappingFromRangeMappings(alignments, originalLines, modifiedLines, dontAssertStartLine = false) {\n    const changes = [];\n    for (const g of groupAdjacentBy(alignments.map(a => getLineRangeMapping(a, originalLines, modifiedLines)), (a1, a2) => a1.original.overlapOrTouch(a2.original)\n        || a1.modified.overlapOrTouch(a2.modified))) {\n        const first = g[0];\n        const last = g[g.length - 1];\n        changes.push(new DetailedLineRangeMapping(first.original.join(last.original), first.modified.join(last.modified), g.map(a => a.innerChanges[0])));\n    }\n    assertFn(() => {\n        if (!dontAssertStartLine) {\n            if (changes.length > 0 && changes[0].original.startLineNumber !== changes[0].modified.startLineNumber) {\n                return false;\n            }\n        }\n        return checkAdjacentItems(changes, (m1, m2) => m2.original.startLineNumber - m1.original.endLineNumberExclusive === m2.modified.startLineNumber - m1.modified.endLineNumberExclusive &&\n            // There has to be an unchanged line in between (otherwise both diffs should have been joined)\n            m1.original.endLineNumberExclusive < m2.original.startLineNumber &&\n            m1.modified.endLineNumberExclusive < m2.modified.startLineNumber);\n    });\n    return changes;\n}\nexport function getLineRangeMapping(rangeMapping, originalLines, modifiedLines) {\n    let lineStartDelta = 0;\n    let lineEndDelta = 0;\n    // rangeMapping describes the edit that replaces `rangeMapping.originalRange` with `newText := getText(modifiedLines, rangeMapping.modifiedRange)`.\n    // original: ]xxx \\n <- this line is not modified\n    // modified: ]xx  \\n\n    if (rangeMapping.modifiedRange.endColumn === 1 && rangeMapping.originalRange.endColumn === 1\n        && rangeMapping.originalRange.startLineNumber + lineStartDelta <= rangeMapping.originalRange.endLineNumber\n        && rangeMapping.modifiedRange.startLineNumber + lineStartDelta <= rangeMapping.modifiedRange.endLineNumber) {\n        // We can only do this if the range is not empty yet\n        lineEndDelta = -1;\n    }\n    // original: xxx[ \\n <- this line is not modified\n    // modified: xxx[ \\n\n    if (rangeMapping.modifiedRange.startColumn - 1 >= modifiedLines[rangeMapping.modifiedRange.startLineNumber - 1].length\n        && rangeMapping.originalRange.startColumn - 1 >= originalLines[rangeMapping.originalRange.startLineNumber - 1].length\n        && rangeMapping.originalRange.startLineNumber <= rangeMapping.originalRange.endLineNumber + lineEndDelta\n        && rangeMapping.modifiedRange.startLineNumber <= rangeMapping.modifiedRange.endLineNumber + lineEndDelta) {\n        // We can only do this if the range is not empty yet\n        lineStartDelta = 1;\n    }\n    const originalLineRange = new LineRange(rangeMapping.originalRange.startLineNumber + lineStartDelta, rangeMapping.originalRange.endLineNumber + 1 + lineEndDelta);\n    const modifiedLineRange = new LineRange(rangeMapping.modifiedRange.startLineNumber + lineStartDelta, rangeMapping.modifiedRange.endLineNumber + 1 + lineEndDelta);\n    return new DetailedLineRangeMapping(originalLineRange, modifiedLineRange, [rangeMapping]);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LegacyLinesDiffComputer } from './legacyLinesDiffComputer.js';\nimport { DefaultLinesDiffComputer } from './defaultLinesDiffComputer/defaultLinesDiffComputer.js';\nexport const linesDiffComputers = {\n    getLegacy: () => new LegacyLinesDiffComputer(),\n    getDefault: () => new DefaultLinesDiffComputer(),\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nfunction roundFloat(number, decimalPoints) {\n    const decimal = Math.pow(10, decimalPoints);\n    return Math.round(number * decimal) / decimal;\n}\nexport class RGBA {\n    constructor(r, g, b, a = 1) {\n        this._rgbaBrand = undefined;\n        this.r = Math.min(255, Math.max(0, r)) | 0;\n        this.g = Math.min(255, Math.max(0, g)) | 0;\n        this.b = Math.min(255, Math.max(0, b)) | 0;\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.r === b.r && a.g === b.g && a.b === b.b && a.a === b.a;\n    }\n}\nexport class HSLA {\n    constructor(h, s, l, a) {\n        this._hslaBrand = undefined;\n        this.h = Math.max(Math.min(360, h), 0) | 0;\n        this.s = roundFloat(Math.max(Math.min(1, s), 0), 3);\n        this.l = roundFloat(Math.max(Math.min(1, l), 0), 3);\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.h === b.h && a.s === b.s && a.l === b.l && a.a === b.a;\n    }\n    /**\n     * Converts an RGB color value to HSL. Conversion formula\n     * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n     * Assumes r, g, and b are contained in the set [0, 255] and\n     * returns h in the set [0, 360], s, and l in the set [0, 1].\n     */\n    static fromRGBA(rgba) {\n        const r = rgba.r / 255;\n        const g = rgba.g / 255;\n        const b = rgba.b / 255;\n        const a = rgba.a;\n        const max = Math.max(r, g, b);\n        const min = Math.min(r, g, b);\n        let h = 0;\n        let s = 0;\n        const l = (min + max) / 2;\n        const chroma = max - min;\n        if (chroma > 0) {\n            s = Math.min((l <= 0.5 ? chroma / (2 * l) : chroma / (2 - (2 * l))), 1);\n            switch (max) {\n                case r:\n                    h = (g - b) / chroma + (g < b ? 6 : 0);\n                    break;\n                case g:\n                    h = (b - r) / chroma + 2;\n                    break;\n                case b:\n                    h = (r - g) / chroma + 4;\n                    break;\n            }\n            h *= 60;\n            h = Math.round(h);\n        }\n        return new HSLA(h, s, l, a);\n    }\n    static _hue2rgb(p, q, t) {\n        if (t < 0) {\n            t += 1;\n        }\n        if (t > 1) {\n            t -= 1;\n        }\n        if (t < 1 / 6) {\n            return p + (q - p) * 6 * t;\n        }\n        if (t < 1 / 2) {\n            return q;\n        }\n        if (t < 2 / 3) {\n            return p + (q - p) * (2 / 3 - t) * 6;\n        }\n        return p;\n    }\n    /**\n     * Converts an HSL color value to RGB. Conversion formula\n     * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n     * Assumes h in the set [0, 360] s, and l are contained in the set [0, 1] and\n     * returns r, g, and b in the set [0, 255].\n     */\n    static toRGBA(hsla) {\n        const h = hsla.h / 360;\n        const { s, l, a } = hsla;\n        let r, g, b;\n        if (s === 0) {\n            r = g = b = l; // achromatic\n        }\n        else {\n            const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n            const p = 2 * l - q;\n            r = HSLA._hue2rgb(p, q, h + 1 / 3);\n            g = HSLA._hue2rgb(p, q, h);\n            b = HSLA._hue2rgb(p, q, h - 1 / 3);\n        }\n        return new RGBA(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255), a);\n    }\n}\nexport class HSVA {\n    constructor(h, s, v, a) {\n        this._hsvaBrand = undefined;\n        this.h = Math.max(Math.min(360, h), 0) | 0;\n        this.s = roundFloat(Math.max(Math.min(1, s), 0), 3);\n        this.v = roundFloat(Math.max(Math.min(1, v), 0), 3);\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.h === b.h && a.s === b.s && a.v === b.v && a.a === b.a;\n    }\n    // from http://www.rapidtables.com/convert/color/rgb-to-hsv.htm\n    static fromRGBA(rgba) {\n        const r = rgba.r / 255;\n        const g = rgba.g / 255;\n        const b = rgba.b / 255;\n        const cmax = Math.max(r, g, b);\n        const cmin = Math.min(r, g, b);\n        const delta = cmax - cmin;\n        const s = cmax === 0 ? 0 : (delta / cmax);\n        let m;\n        if (delta === 0) {\n            m = 0;\n        }\n        else if (cmax === r) {\n            m = ((((g - b) / delta) % 6) + 6) % 6;\n        }\n        else if (cmax === g) {\n            m = ((b - r) / delta) + 2;\n        }\n        else {\n            m = ((r - g) / delta) + 4;\n        }\n        return new HSVA(Math.round(m * 60), s, cmax, rgba.a);\n    }\n    // from http://www.rapidtables.com/convert/color/hsv-to-rgb.htm\n    static toRGBA(hsva) {\n        const { h, s, v, a } = hsva;\n        const c = v * s;\n        const x = c * (1 - Math.abs((h / 60) % 2 - 1));\n        const m = v - c;\n        let [r, g, b] = [0, 0, 0];\n        if (h < 60) {\n            r = c;\n            g = x;\n        }\n        else if (h < 120) {\n            r = x;\n            g = c;\n        }\n        else if (h < 180) {\n            g = c;\n            b = x;\n        }\n        else if (h < 240) {\n            g = x;\n            b = c;\n        }\n        else if (h < 300) {\n            r = x;\n            b = c;\n        }\n        else if (h <= 360) {\n            r = c;\n            b = x;\n        }\n        r = Math.round((r + m) * 255);\n        g = Math.round((g + m) * 255);\n        b = Math.round((b + m) * 255);\n        return new RGBA(r, g, b, a);\n    }\n}\nexport class Color {\n    static fromHex(hex) {\n        return Color.Format.CSS.parseHex(hex) || Color.red;\n    }\n    static equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        if (!a || !b) {\n            return false;\n        }\n        return a.equals(b);\n    }\n    get hsla() {\n        if (this._hsla) {\n            return this._hsla;\n        }\n        else {\n            return HSLA.fromRGBA(this.rgba);\n        }\n    }\n    get hsva() {\n        if (this._hsva) {\n            return this._hsva;\n        }\n        return HSVA.fromRGBA(this.rgba);\n    }\n    constructor(arg) {\n        if (!arg) {\n            throw new Error('Color needs a value');\n        }\n        else if (arg instanceof RGBA) {\n            this.rgba = arg;\n        }\n        else if (arg instanceof HSLA) {\n            this._hsla = arg;\n            this.rgba = HSLA.toRGBA(arg);\n        }\n        else if (arg instanceof HSVA) {\n            this._hsva = arg;\n            this.rgba = HSVA.toRGBA(arg);\n        }\n        else {\n            throw new Error('Invalid color ctor argument');\n        }\n    }\n    equals(other) {\n        return !!other && RGBA.equals(this.rgba, other.rgba) && HSLA.equals(this.hsla, other.hsla) && HSVA.equals(this.hsva, other.hsva);\n    }\n    /**\n     * http://www.w3.org/TR/WCAG20/#relativeluminancedef\n     * Returns the number in the set [0, 1]. O => Darkest Black. 1 => Lightest white.\n     */\n    getRelativeLuminance() {\n        const R = Color._relativeLuminanceForComponent(this.rgba.r);\n        const G = Color._relativeLuminanceForComponent(this.rgba.g);\n        const B = Color._relativeLuminanceForComponent(this.rgba.b);\n        const luminance = 0.2126 * R + 0.7152 * G + 0.0722 * B;\n        return roundFloat(luminance, 4);\n    }\n    static _relativeLuminanceForComponent(color) {\n        const c = color / 255;\n        return (c <= 0.03928) ? c / 12.92 : Math.pow(((c + 0.055) / 1.055), 2.4);\n    }\n    /**\n     *\thttp://24ways.org/2010/calculating-color-contrast\n     *  Return 'true' if lighter color otherwise 'false'\n     */\n    isLighter() {\n        const yiq = (this.rgba.r * 299 + this.rgba.g * 587 + this.rgba.b * 114) / 1000;\n        return yiq >= 128;\n    }\n    isLighterThan(another) {\n        const lum1 = this.getRelativeLuminance();\n        const lum2 = another.getRelativeLuminance();\n        return lum1 > lum2;\n    }\n    isDarkerThan(another) {\n        const lum1 = this.getRelativeLuminance();\n        const lum2 = another.getRelativeLuminance();\n        return lum1 < lum2;\n    }\n    lighten(factor) {\n        return new Color(new HSLA(this.hsla.h, this.hsla.s, this.hsla.l + this.hsla.l * factor, this.hsla.a));\n    }\n    darken(factor) {\n        return new Color(new HSLA(this.hsla.h, this.hsla.s, this.hsla.l - this.hsla.l * factor, this.hsla.a));\n    }\n    transparent(factor) {\n        const { r, g, b, a } = this.rgba;\n        return new Color(new RGBA(r, g, b, a * factor));\n    }\n    isTransparent() {\n        return this.rgba.a === 0;\n    }\n    isOpaque() {\n        return this.rgba.a === 1;\n    }\n    opposite() {\n        return new Color(new RGBA(255 - this.rgba.r, 255 - this.rgba.g, 255 - this.rgba.b, this.rgba.a));\n    }\n    makeOpaque(opaqueBackground) {\n        if (this.isOpaque() || opaqueBackground.rgba.a !== 1) {\n            // only allow to blend onto a non-opaque color onto a opaque color\n            return this;\n        }\n        const { r, g, b, a } = this.rgba;\n        // https://stackoverflow.com/questions/12228548/finding-equivalent-color-with-opacity\n        return new Color(new RGBA(opaqueBackground.rgba.r - a * (opaqueBackground.rgba.r - r), opaqueBackground.rgba.g - a * (opaqueBackground.rgba.g - g), opaqueBackground.rgba.b - a * (opaqueBackground.rgba.b - b), 1));\n    }\n    toString() {\n        if (!this._toString) {\n            this._toString = Color.Format.CSS.format(this);\n        }\n        return this._toString;\n    }\n    static getLighterColor(of, relative, factor) {\n        if (of.isLighterThan(relative)) {\n            return of;\n        }\n        factor = factor ? factor : 0.5;\n        const lum1 = of.getRelativeLuminance();\n        const lum2 = relative.getRelativeLuminance();\n        factor = factor * (lum2 - lum1) / lum2;\n        return of.lighten(factor);\n    }\n    static getDarkerColor(of, relative, factor) {\n        if (of.isDarkerThan(relative)) {\n            return of;\n        }\n        factor = factor ? factor : 0.5;\n        const lum1 = of.getRelativeLuminance();\n        const lum2 = relative.getRelativeLuminance();\n        factor = factor * (lum1 - lum2) / lum1;\n        return of.darken(factor);\n    }\n}\nColor.white = new Color(new RGBA(255, 255, 255, 1));\nColor.black = new Color(new RGBA(0, 0, 0, 1));\nColor.red = new Color(new RGBA(255, 0, 0, 1));\nColor.blue = new Color(new RGBA(0, 0, 255, 1));\nColor.green = new Color(new RGBA(0, 255, 0, 1));\nColor.cyan = new Color(new RGBA(0, 255, 255, 1));\nColor.lightgrey = new Color(new RGBA(211, 211, 211, 1));\nColor.transparent = new Color(new RGBA(0, 0, 0, 0));\n(function (Color) {\n    let Format;\n    (function (Format) {\n        let CSS;\n        (function (CSS) {\n            function formatRGB(color) {\n                if (color.rgba.a === 1) {\n                    return `rgb(${color.rgba.r}, ${color.rgba.g}, ${color.rgba.b})`;\n                }\n                return Color.Format.CSS.formatRGBA(color);\n            }\n            CSS.formatRGB = formatRGB;\n            function formatRGBA(color) {\n                return `rgba(${color.rgba.r}, ${color.rgba.g}, ${color.rgba.b}, ${+(color.rgba.a).toFixed(2)})`;\n            }\n            CSS.formatRGBA = formatRGBA;\n            function formatHSL(color) {\n                if (color.hsla.a === 1) {\n                    return `hsl(${color.hsla.h}, ${(color.hsla.s * 100).toFixed(2)}%, ${(color.hsla.l * 100).toFixed(2)}%)`;\n                }\n                return Color.Format.CSS.formatHSLA(color);\n            }\n            CSS.formatHSL = formatHSL;\n            function formatHSLA(color) {\n                return `hsla(${color.hsla.h}, ${(color.hsla.s * 100).toFixed(2)}%, ${(color.hsla.l * 100).toFixed(2)}%, ${color.hsla.a.toFixed(2)})`;\n            }\n            CSS.formatHSLA = formatHSLA;\n            function _toTwoDigitHex(n) {\n                const r = n.toString(16);\n                return r.length !== 2 ? '0' + r : r;\n            }\n            /**\n             * Formats the color as #RRGGBB\n             */\n            function formatHex(color) {\n                return `#${_toTwoDigitHex(color.rgba.r)}${_toTwoDigitHex(color.rgba.g)}${_toTwoDigitHex(color.rgba.b)}`;\n            }\n            CSS.formatHex = formatHex;\n            /**\n             * Formats the color as #RRGGBBAA\n             * If 'compact' is set, colors without transparancy will be printed as #RRGGBB\n             */\n            function formatHexA(color, compact = false) {\n                if (compact && color.rgba.a === 1) {\n                    return Color.Format.CSS.formatHex(color);\n                }\n                return `#${_toTwoDigitHex(color.rgba.r)}${_toTwoDigitHex(color.rgba.g)}${_toTwoDigitHex(color.rgba.b)}${_toTwoDigitHex(Math.round(color.rgba.a * 255))}`;\n            }\n            CSS.formatHexA = formatHexA;\n            /**\n             * The default format will use HEX if opaque and RGBA otherwise.\n             */\n            function format(color) {\n                if (color.isOpaque()) {\n                    return Color.Format.CSS.formatHex(color);\n                }\n                return Color.Format.CSS.formatRGBA(color);\n            }\n            CSS.format = format;\n            /**\n             * Converts an Hex color value to a Color.\n             * returns r, g, and b are contained in the set [0, 255]\n             * @param hex string (#RGB, #RGBA, #RRGGBB or #RRGGBBAA).\n             */\n            function parseHex(hex) {\n                const length = hex.length;\n                if (length === 0) {\n                    // Invalid color\n                    return null;\n                }\n                if (hex.charCodeAt(0) !== 35 /* CharCode.Hash */) {\n                    // Does not begin with a #\n                    return null;\n                }\n                if (length === 7) {\n                    // #RRGGBB format\n                    const r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));\n                    const g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));\n                    const b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));\n                    return new Color(new RGBA(r, g, b, 1));\n                }\n                if (length === 9) {\n                    // #RRGGBBAA format\n                    const r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));\n                    const g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));\n                    const b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));\n                    const a = 16 * _parseHexDigit(hex.charCodeAt(7)) + _parseHexDigit(hex.charCodeAt(8));\n                    return new Color(new RGBA(r, g, b, a / 255));\n                }\n                if (length === 4) {\n                    // #RGB format\n                    const r = _parseHexDigit(hex.charCodeAt(1));\n                    const g = _parseHexDigit(hex.charCodeAt(2));\n                    const b = _parseHexDigit(hex.charCodeAt(3));\n                    return new Color(new RGBA(16 * r + r, 16 * g + g, 16 * b + b));\n                }\n                if (length === 5) {\n                    // #RGBA format\n                    const r = _parseHexDigit(hex.charCodeAt(1));\n                    const g = _parseHexDigit(hex.charCodeAt(2));\n                    const b = _parseHexDigit(hex.charCodeAt(3));\n                    const a = _parseHexDigit(hex.charCodeAt(4));\n                    return new Color(new RGBA(16 * r + r, 16 * g + g, 16 * b + b, (16 * a + a) / 255));\n                }\n                // Invalid color\n                return null;\n            }\n            CSS.parseHex = parseHex;\n            function _parseHexDigit(charCode) {\n                switch (charCode) {\n                    case 48 /* CharCode.Digit0 */: return 0;\n                    case 49 /* CharCode.Digit1 */: return 1;\n                    case 50 /* CharCode.Digit2 */: return 2;\n                    case 51 /* CharCode.Digit3 */: return 3;\n                    case 52 /* CharCode.Digit4 */: return 4;\n                    case 53 /* CharCode.Digit5 */: return 5;\n                    case 54 /* CharCode.Digit6 */: return 6;\n                    case 55 /* CharCode.Digit7 */: return 7;\n                    case 56 /* CharCode.Digit8 */: return 8;\n                    case 57 /* CharCode.Digit9 */: return 9;\n                    case 97 /* CharCode.a */: return 10;\n                    case 65 /* CharCode.A */: return 10;\n                    case 98 /* CharCode.b */: return 11;\n                    case 66 /* CharCode.B */: return 11;\n                    case 99 /* CharCode.c */: return 12;\n                    case 67 /* CharCode.C */: return 12;\n                    case 100 /* CharCode.d */: return 13;\n                    case 68 /* CharCode.D */: return 13;\n                    case 101 /* CharCode.e */: return 14;\n                    case 69 /* CharCode.E */: return 14;\n                    case 102 /* CharCode.f */: return 15;\n                    case 70 /* CharCode.F */: return 15;\n                }\n                return 0;\n            }\n        })(CSS = Format.CSS || (Format.CSS = {}));\n    })(Format = Color.Format || (Color.Format = {}));\n})(Color || (Color = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Color, HSLA } from '../../../base/common/color.js';\nfunction _parseCaptureGroups(captureGroups) {\n    const values = [];\n    for (const captureGroup of captureGroups) {\n        const parsedNumber = Number(captureGroup);\n        if (parsedNumber || parsedNumber === 0 && captureGroup.replace(/\\s/g, '') !== '') {\n            values.push(parsedNumber);\n        }\n    }\n    return values;\n}\nfunction _toIColor(r, g, b, a) {\n    return {\n        red: r / 255,\n        blue: b / 255,\n        green: g / 255,\n        alpha: a\n    };\n}\nfunction _findRange(model, match) {\n    const index = match.index;\n    const length = match[0].length;\n    if (!index) {\n        return;\n    }\n    const startPosition = model.positionAt(index);\n    const range = {\n        startLineNumber: startPosition.lineNumber,\n        startColumn: startPosition.column,\n        endLineNumber: startPosition.lineNumber,\n        endColumn: startPosition.column + length\n    };\n    return range;\n}\nfunction _findHexColorInformation(range, hexValue) {\n    if (!range) {\n        return;\n    }\n    const parsedHexColor = Color.Format.CSS.parseHex(hexValue);\n    if (!parsedHexColor) {\n        return;\n    }\n    return {\n        range: range,\n        color: _toIColor(parsedHexColor.rgba.r, parsedHexColor.rgba.g, parsedHexColor.rgba.b, parsedHexColor.rgba.a)\n    };\n}\nfunction _findRGBColorInformation(range, matches, isAlpha) {\n    if (!range || matches.length !== 1) {\n        return;\n    }\n    const match = matches[0];\n    const captureGroups = match.values();\n    const parsedRegex = _parseCaptureGroups(captureGroups);\n    return {\n        range: range,\n        color: _toIColor(parsedRegex[0], parsedRegex[1], parsedRegex[2], isAlpha ? parsedRegex[3] : 1)\n    };\n}\nfunction _findHSLColorInformation(range, matches, isAlpha) {\n    if (!range || matches.length !== 1) {\n        return;\n    }\n    const match = matches[0];\n    const captureGroups = match.values();\n    const parsedRegex = _parseCaptureGroups(captureGroups);\n    const colorEquivalent = new Color(new HSLA(parsedRegex[0], parsedRegex[1] / 100, parsedRegex[2] / 100, isAlpha ? parsedRegex[3] : 1));\n    return {\n        range: range,\n        color: _toIColor(colorEquivalent.rgba.r, colorEquivalent.rgba.g, colorEquivalent.rgba.b, colorEquivalent.rgba.a)\n    };\n}\nfunction _findMatches(model, regex) {\n    if (typeof model === 'string') {\n        return [...model.matchAll(regex)];\n    }\n    else {\n        return model.findMatches(regex);\n    }\n}\nfunction computeColors(model) {\n    const result = [];\n    // Early validation for RGB and HSL\n    const initialValidationRegex = /\\b(rgb|rgba|hsl|hsla)(\\([0-9\\s,.\\%]*\\))|(#)([A-Fa-f0-9]{3})\\b|(#)([A-Fa-f0-9]{4})\\b|(#)([A-Fa-f0-9]{6})\\b|(#)([A-Fa-f0-9]{8})\\b/gm;\n    const initialValidationMatches = _findMatches(model, initialValidationRegex);\n    // Potential colors have been found, validate the parameters\n    if (initialValidationMatches.length > 0) {\n        for (const initialMatch of initialValidationMatches) {\n            const initialCaptureGroups = initialMatch.filter(captureGroup => captureGroup !== undefined);\n            const colorScheme = initialCaptureGroups[1];\n            const colorParameters = initialCaptureGroups[2];\n            if (!colorParameters) {\n                continue;\n            }\n            let colorInformation;\n            if (colorScheme === 'rgb') {\n                const regexParameters = /^\\(\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*\\)$/gm;\n                colorInformation = _findRGBColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), false);\n            }\n            else if (colorScheme === 'rgba') {\n                const regexParameters = /^\\(\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(0[.][0-9]+|[.][0-9]+|[01][.]|[01])\\s*\\)$/gm;\n                colorInformation = _findRGBColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), true);\n            }\n            else if (colorScheme === 'hsl') {\n                const regexParameters = /^\\(\\s*(36[0]|3[0-5][0-9]|[12][0-9][0-9]|[1-9]?[0-9])\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*\\)$/gm;\n                colorInformation = _findHSLColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), false);\n            }\n            else if (colorScheme === 'hsla') {\n                const regexParameters = /^\\(\\s*(36[0]|3[0-5][0-9]|[12][0-9][0-9]|[1-9]?[0-9])\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(0[.][0-9]+|[.][0-9]+|[01][.]|[01])\\s*\\)$/gm;\n                colorInformation = _findHSLColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), true);\n            }\n            else if (colorScheme === '#') {\n                colorInformation = _findHexColorInformation(_findRange(model, initialMatch), colorScheme + colorParameters);\n            }\n            if (colorInformation) {\n                result.push(colorInformation);\n            }\n        }\n    }\n    return result;\n}\n/**\n * Returns an array of all default document colors in the provided document\n */\nexport function computeDefaultDocumentColors(model) {\n    if (!model || typeof model.getValue !== 'function' || typeof model.positionAt !== 'function') {\n        // Unknown caller!\n        return [];\n    }\n    return computeColors(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { stringDiff } from '../../../base/common/diff/diff.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { MirrorTextModel as BaseMirrorModel } from '../model/mirrorTextModel.js';\nimport { ensureValidWordDefinition, getWordAtText } from '../core/wordHelper.js';\nimport { computeLinks } from '../languages/linkComputer.js';\nimport { BasicInplaceReplace } from '../languages/supports/inplaceReplaceSupport.js';\nimport { createMonacoBaseAPI } from './editorBaseApi.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { UnicodeTextModelHighlighter } from './unicodeTextModelHighlighter.js';\nimport { linesDiffComputers } from '../diff/linesDiffComputers.js';\nimport { createProxyObject, getAllMethodNames } from '../../../base/common/objects.js';\nimport { computeDefaultDocumentColors } from '../languages/defaultDocumentColorsComputer.js';\n/**\n * @internal\n */\nclass MirrorModel extends BaseMirrorModel {\n    get uri() {\n        return this._uri;\n    }\n    get eol() {\n        return this._eol;\n    }\n    getValue() {\n        return this.getText();\n    }\n    findMatches(regex) {\n        const matches = [];\n        for (let i = 0; i < this._lines.length; i++) {\n            const line = this._lines[i];\n            const offsetToAdd = this.offsetAt(new Position(i + 1, 1));\n            const iteratorOverMatches = line.matchAll(regex);\n            for (const match of iteratorOverMatches) {\n                if (match.index || match.index === 0) {\n                    match.index = match.index + offsetToAdd;\n                }\n                matches.push(match);\n            }\n        }\n        return matches;\n    }\n    getLinesContent() {\n        return this._lines.slice(0);\n    }\n    getLineCount() {\n        return this._lines.length;\n    }\n    getLineContent(lineNumber) {\n        return this._lines[lineNumber - 1];\n    }\n    getWordAtPosition(position, wordDefinition) {\n        const wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n        if (wordAtText) {\n            return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n        }\n        return null;\n    }\n    words(wordDefinition) {\n        const lines = this._lines;\n        const wordenize = this._wordenize.bind(this);\n        let lineNumber = 0;\n        let lineText = '';\n        let wordRangesIdx = 0;\n        let wordRanges = [];\n        return {\n            *[Symbol.iterator]() {\n                while (true) {\n                    if (wordRangesIdx < wordRanges.length) {\n                        const value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n                        wordRangesIdx += 1;\n                        yield value;\n                    }\n                    else {\n                        if (lineNumber < lines.length) {\n                            lineText = lines[lineNumber];\n                            wordRanges = wordenize(lineText, wordDefinition);\n                            wordRangesIdx = 0;\n                            lineNumber += 1;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                }\n            }\n        };\n    }\n    getLineWords(lineNumber, wordDefinition) {\n        const content = this._lines[lineNumber - 1];\n        const ranges = this._wordenize(content, wordDefinition);\n        const words = [];\n        for (const range of ranges) {\n            words.push({\n                word: content.substring(range.start, range.end),\n                startColumn: range.start + 1,\n                endColumn: range.end + 1\n            });\n        }\n        return words;\n    }\n    _wordenize(content, wordDefinition) {\n        const result = [];\n        let match;\n        wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n        while (match = wordDefinition.exec(content)) {\n            if (match[0].length === 0) {\n                // it did match the empty string\n                break;\n            }\n            result.push({ start: match.index, end: match.index + match[0].length });\n        }\n        return result;\n    }\n    getValueInRange(range) {\n        range = this._validateRange(range);\n        if (range.startLineNumber === range.endLineNumber) {\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n        }\n        const lineEnding = this._eol;\n        const startLineIndex = range.startLineNumber - 1;\n        const endLineIndex = range.endLineNumber - 1;\n        const resultLines = [];\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n        for (let i = startLineIndex + 1; i < endLineIndex; i++) {\n            resultLines.push(this._lines[i]);\n        }\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n        return resultLines.join(lineEnding);\n    }\n    offsetAt(position) {\n        position = this._validatePosition(position);\n        this._ensureLineStarts();\n        return this._lineStarts.getPrefixSum(position.lineNumber - 2) + (position.column - 1);\n    }\n    positionAt(offset) {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n        this._ensureLineStarts();\n        const out = this._lineStarts.getIndexOf(offset);\n        const lineLength = this._lines[out.index].length;\n        // Ensure we return a valid position\n        return {\n            lineNumber: 1 + out.index,\n            column: 1 + Math.min(out.remainder, lineLength)\n        };\n    }\n    _validateRange(range) {\n        const start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n        const end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n        if (start.lineNumber !== range.startLineNumber\n            || start.column !== range.startColumn\n            || end.lineNumber !== range.endLineNumber\n            || end.column !== range.endColumn) {\n            return {\n                startLineNumber: start.lineNumber,\n                startColumn: start.column,\n                endLineNumber: end.lineNumber,\n                endColumn: end.column\n            };\n        }\n        return range;\n    }\n    _validatePosition(position) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('bad position');\n        }\n        let { lineNumber, column } = position;\n        let hasChanged = false;\n        if (lineNumber < 1) {\n            lineNumber = 1;\n            column = 1;\n            hasChanged = true;\n        }\n        else if (lineNumber > this._lines.length) {\n            lineNumber = this._lines.length;\n            column = this._lines[lineNumber - 1].length + 1;\n            hasChanged = true;\n        }\n        else {\n            const maxCharacter = this._lines[lineNumber - 1].length + 1;\n            if (column < 1) {\n                column = 1;\n                hasChanged = true;\n            }\n            else if (column > maxCharacter) {\n                column = maxCharacter;\n                hasChanged = true;\n            }\n        }\n        if (!hasChanged) {\n            return position;\n        }\n        else {\n            return { lineNumber, column };\n        }\n    }\n}\n/**\n * @internal\n */\nexport class EditorSimpleWorker {\n    constructor(host, foreignModuleFactory) {\n        this._host = host;\n        this._models = Object.create(null);\n        this._foreignModuleFactory = foreignModuleFactory;\n        this._foreignModule = null;\n    }\n    dispose() {\n        this._models = Object.create(null);\n    }\n    _getModel(uri) {\n        return this._models[uri];\n    }\n    _getModels() {\n        const all = [];\n        Object.keys(this._models).forEach((key) => all.push(this._models[key]));\n        return all;\n    }\n    acceptNewModel(data) {\n        this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n    }\n    acceptModelChanged(strURL, e) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        const model = this._models[strURL];\n        model.onEvents(e);\n    }\n    acceptRemovedModel(strURL) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        delete this._models[strURL];\n    }\n    computeUnicodeHighlights(url, options, range) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const model = this._getModel(url);\n            if (!model) {\n                return { ranges: [], hasMore: false, ambiguousCharacterCount: 0, invisibleCharacterCount: 0, nonBasicAsciiCharacterCount: 0 };\n            }\n            return UnicodeTextModelHighlighter.computeUnicodeHighlights(model, options, range);\n        });\n    }\n    // ---- BEGIN diff --------------------------------------------------------------------------\n    computeDiff(originalUrl, modifiedUrl, options, algorithm) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const original = this._getModel(originalUrl);\n            const modified = this._getModel(modifiedUrl);\n            if (!original || !modified) {\n                return null;\n            }\n            return EditorSimpleWorker.computeDiff(original, modified, options, algorithm);\n        });\n    }\n    static computeDiff(originalTextModel, modifiedTextModel, options, algorithm) {\n        const diffAlgorithm = algorithm === 'advanced' ? linesDiffComputers.getDefault() : linesDiffComputers.getLegacy();\n        const originalLines = originalTextModel.getLinesContent();\n        const modifiedLines = modifiedTextModel.getLinesContent();\n        const result = diffAlgorithm.computeDiff(originalLines, modifiedLines, options);\n        const identical = (result.changes.length > 0 ? false : this._modelsAreIdentical(originalTextModel, modifiedTextModel));\n        function getLineChanges(changes) {\n            return changes.map(m => {\n                var _a;\n                return ([m.original.startLineNumber, m.original.endLineNumberExclusive, m.modified.startLineNumber, m.modified.endLineNumberExclusive, (_a = m.innerChanges) === null || _a === void 0 ? void 0 : _a.map(m => [\n                        m.originalRange.startLineNumber,\n                        m.originalRange.startColumn,\n                        m.originalRange.endLineNumber,\n                        m.originalRange.endColumn,\n                        m.modifiedRange.startLineNumber,\n                        m.modifiedRange.startColumn,\n                        m.modifiedRange.endLineNumber,\n                        m.modifiedRange.endColumn,\n                    ])]);\n            });\n        }\n        return {\n            identical,\n            quitEarly: result.hitTimeout,\n            changes: getLineChanges(result.changes),\n            moves: result.moves.map(m => ([\n                m.lineRangeMapping.original.startLineNumber,\n                m.lineRangeMapping.original.endLineNumberExclusive,\n                m.lineRangeMapping.modified.startLineNumber,\n                m.lineRangeMapping.modified.endLineNumberExclusive,\n                getLineChanges(m.changes)\n            ])),\n        };\n    }\n    static _modelsAreIdentical(original, modified) {\n        const originalLineCount = original.getLineCount();\n        const modifiedLineCount = modified.getLineCount();\n        if (originalLineCount !== modifiedLineCount) {\n            return false;\n        }\n        for (let line = 1; line <= originalLineCount; line++) {\n            const originalLine = original.getLineContent(line);\n            const modifiedLine = modified.getLineContent(line);\n            if (originalLine !== modifiedLine) {\n                return false;\n            }\n        }\n        return true;\n    }\n    computeMoreMinimalEdits(modelUrl, edits, pretty) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const model = this._getModel(modelUrl);\n            if (!model) {\n                return edits;\n            }\n            const result = [];\n            let lastEol = undefined;\n            edits = edits.slice(0).sort((a, b) => {\n                if (a.range && b.range) {\n                    return Range.compareRangesUsingStarts(a.range, b.range);\n                }\n                // eol only changes should go to the end\n                const aRng = a.range ? 0 : 1;\n                const bRng = b.range ? 0 : 1;\n                return aRng - bRng;\n            });\n            // merge adjacent edits\n            let writeIndex = 0;\n            for (let readIndex = 1; readIndex < edits.length; readIndex++) {\n                if (Range.getEndPosition(edits[writeIndex].range).equals(Range.getStartPosition(edits[readIndex].range))) {\n                    edits[writeIndex].range = Range.fromPositions(Range.getStartPosition(edits[writeIndex].range), Range.getEndPosition(edits[readIndex].range));\n                    edits[writeIndex].text += edits[readIndex].text;\n                }\n                else {\n                    writeIndex++;\n                    edits[writeIndex] = edits[readIndex];\n                }\n            }\n            edits.length = writeIndex + 1;\n            for (let { range, text, eol } of edits) {\n                if (typeof eol === 'number') {\n                    lastEol = eol;\n                }\n                if (Range.isEmpty(range) && !text) {\n                    // empty change\n                    continue;\n                }\n                const original = model.getValueInRange(range);\n                text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n                if (original === text) {\n                    // noop\n                    continue;\n                }\n                // make sure diff won't take too long\n                if (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\n                    result.push({ range, text });\n                    continue;\n                }\n                // compute diff between original and edit.text\n                const changes = stringDiff(original, text, pretty);\n                const editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n                for (const change of changes) {\n                    const start = model.positionAt(editOffset + change.originalStart);\n                    const end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                    const newEdit = {\n                        text: text.substr(change.modifiedStart, change.modifiedLength),\n                        range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n                    };\n                    if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                        result.push(newEdit);\n                    }\n                }\n            }\n            if (typeof lastEol === 'number') {\n                result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n            }\n            return result;\n        });\n    }\n    // ---- END minimal edits ---------------------------------------------------------------\n    computeLinks(modelUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const model = this._getModel(modelUrl);\n            if (!model) {\n                return null;\n            }\n            return computeLinks(model);\n        });\n    }\n    // --- BEGIN default document colors -----------------------------------------------------------\n    computeDefaultDocumentColors(modelUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const model = this._getModel(modelUrl);\n            if (!model) {\n                return null;\n            }\n            return computeDefaultDocumentColors(model);\n        });\n    }\n    textualSuggest(modelUrls, leadingWord, wordDef, wordDefFlags) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const sw = new StopWatch();\n            const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n            const seen = new Set();\n            outer: for (const url of modelUrls) {\n                const model = this._getModel(url);\n                if (!model) {\n                    continue;\n                }\n                for (const word of model.words(wordDefRegExp)) {\n                    if (word === leadingWord || !isNaN(Number(word))) {\n                        continue;\n                    }\n                    seen.add(word);\n                    if (seen.size > EditorSimpleWorker._suggestionsLimit) {\n                        break outer;\n                    }\n                }\n            }\n            return { words: Array.from(seen), duration: sw.elapsed() };\n        });\n    }\n    // ---- END suggest --------------------------------------------------------------------------\n    //#region -- word ranges --\n    computeWordRanges(modelUrl, range, wordDef, wordDefFlags) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const model = this._getModel(modelUrl);\n            if (!model) {\n                return Object.create(null);\n            }\n            const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n            const result = Object.create(null);\n            for (let line = range.startLineNumber; line < range.endLineNumber; line++) {\n                const words = model.getLineWords(line, wordDefRegExp);\n                for (const word of words) {\n                    if (!isNaN(Number(word.word))) {\n                        continue;\n                    }\n                    let array = result[word.word];\n                    if (!array) {\n                        array = [];\n                        result[word.word] = array;\n                    }\n                    array.push({\n                        startLineNumber: line,\n                        startColumn: word.startColumn,\n                        endLineNumber: line,\n                        endColumn: word.endColumn\n                    });\n                }\n            }\n            return result;\n        });\n    }\n    //#endregion\n    navigateValueSet(modelUrl, range, up, wordDef, wordDefFlags) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const model = this._getModel(modelUrl);\n            if (!model) {\n                return null;\n            }\n            const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n            if (range.startColumn === range.endColumn) {\n                range = {\n                    startLineNumber: range.startLineNumber,\n                    startColumn: range.startColumn,\n                    endLineNumber: range.endLineNumber,\n                    endColumn: range.endColumn + 1\n                };\n            }\n            const selectionText = model.getValueInRange(range);\n            const wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n            if (!wordRange) {\n                return null;\n            }\n            const word = model.getValueInRange(wordRange);\n            const result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n            return result;\n        });\n    }\n    // ---- BEGIN foreign module support --------------------------------------------------------------------------\n    loadForeignModule(moduleId, createData, foreignHostMethods) {\n        const proxyMethodRequest = (method, args) => {\n            return this._host.fhr(method, args);\n        };\n        const foreignHost = createProxyObject(foreignHostMethods, proxyMethodRequest);\n        const ctx = {\n            host: foreignHost,\n            getMirrorModels: () => {\n                return this._getModels();\n            }\n        };\n        if (this._foreignModuleFactory) {\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\n            // static foreing module\n            return Promise.resolve(getAllMethodNames(this._foreignModule));\n        }\n        // ESM-comment-begin\n        // \t\treturn new Promise<any>((resolve, reject) => {\n        // \t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n        // \t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n        // \n        // \t\t\t\tresolve(getAllMethodNames(this._foreignModule));\n        // \n        // \t\t\t}, reject);\n        // \t\t});\n        // ESM-comment-end\n        // ESM-uncomment-begin\n        return Promise.reject(new Error(`Unexpected usage`));\n        // ESM-uncomment-end\n    }\n    // foreign method request\n    fmr(method, args) {\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n}\n// ---- END diff --------------------------------------------------------------------------\n// ---- BEGIN minimal edits ---------------------------------------------------------------\nEditorSimpleWorker._diffLimit = 100000;\n// ---- BEGIN suggest --------------------------------------------------------------------------\nEditorSimpleWorker._suggestionsLimit = 10000;\n/**\n * Called on the worker side\n * @internal\n */\nexport function create(host) {\n    return new EditorSimpleWorker(host, null);\n}\nif (typeof importScripts === 'function') {\n    // Running in a web worker\n    globalThis.monaco = createMonacoBaseAPI();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\nimport { EditorSimpleWorker } from './common/services/editorSimpleWorker.js';\nlet initialized = false;\nexport function initialize(foreignModule) {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    const simpleWorker = new SimpleWorkerServer((msg) => {\n        globalThis.postMessage(msg);\n    }, (host) => new EditorSimpleWorker(host, foreignModule));\n    globalThis.onmessage = (e) => {\n        simpleWorker.onmessage(e.data);\n    };\n}\nglobalThis.onmessage = (e) => {\n    // Ignore first message in this case and initialize if not yet initialized\n    if (!initialized) {\n        initialize(null);\n    }\n};\n"],"names":["cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","g","globalThis","Function","window","_arrayLikeToArray","arr","arr2","_unsupportedIterableToArray","o","minLen","n","Object","toString","slice","constructor","from","test","allowArrayLike","it","Symbol","iterator","isArray","F","s","done","value","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","_typeof","_toPropertyKey","arg","key","input","hint","prim","toPrimitive","res","String","Number","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","instance","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","subClass","superClass","create","getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","Derived","hasNativeReflectConstruct","result","Super","NewTarget","_construct","Parent","Class","a","_cache","Map","fn","indexOf","has","get","set","Wrapper","errorHandler","ErrorHandler","_classCallCheck","unexpectedErrorHandler","stack","ErrorNoTelemetry","isErrorNoTelemetry","message","_createClass","forEach","listener","onUnexpectedError","isCancellationError","transformErrorForSerialization","error","$isError","stacktrace","noTelemetry","canceledName","CancellationError","_Error","_inherits","_super","_createSuper","_this","_wrapNativeSuper","Iterable","_Error3","_super3","msg","_this3","BugIndicatingError","_Error4","_super4","_this4","r","l","t","u","_toConsumableArray","iter","createSingleCallFunction","didCall","_defineProperty","obj","hasOwnProperty","c","asyncIterator","toStringTag","define","wrap","Generator","Context","makeInvokeMethod","tryCatch","type","h","y","GeneratorFunction","GeneratorFunctionPrototype","d","v","values","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","awrap","async","Promise","keys","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","delegateYield","_marked","_regeneratorRuntime","single","_marked2","_marked3","filter","_marked4","map","_marked5","is","thing","_empty","freeze","element","_context","_context2","iterable","predicate","_iterator3","_step3","_context3","_createForOfIteratorHelper","t0","index","_iterator4","_step4","_context4","_len","iterables","_key","_i","_iterables","_iterator5","_step5","_args5","_context5","empty","iterableOrElement","isEmpty","first","some","_step","_iterator","find","_step2","_iterator2","reduce","reducer","initialValue","_step6","_iterator6","to","_callee","_context6","consume","atMost","POSITIVE_INFINITY","consumed","disposableTracker","trackDisposable","x","markAsDisposed","disposable","setParentOfDisposable","child","parent","setParent","dispose","errors","AggregateError","combinedDisposable","disposables","toDisposable","children","setParentOfDisposables","DisposableStore","_toDispose","Set","_isDisposed","clear","size","DISABLE_DISPOSED_WARNING","console","warn","add","delete","Disposable","_store","None","Node","Undefined","Event","LinkedList","_Symbol$iterator","_first","_last","_size","node","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","anchor","hasPerformanceNow","performance","now","StopWatch","highResolution","_now","Date","_startTime","_stopTime","event","thisArgs","didFire","snapshot","options","onWillAddFirstListener","emitter","fire","onDidRemoveLastListener","Emitter","debounce","merge","subscription","doFire","delay","leading","flushOnListenerRemove","output","numDebouncedCalls","leakWarningThreshold","cur","_output","queueMicrotask","onWillRemoveListener","defer","each","signal","any","events","store","addAndReturnDisposable","initial","accumulate","last","latch","cache","equals","b","firstCall","shouldEmit","split","isT","buffer","flushAfterTimeout","flush","onDidAddFirstListener","chain","sythensize","cs","ChainableSynthesis","evaluate","HaltChainable","steps","fromNodeEventEmitter","eventName","id","fromDOMEventEmitter","addEventListener","removeEventListener","toPromise","fromPromise","promise","finally","runAndSubscribe","handler","runAndSubscribeWithStore","EmitterObserver","_observable","_counter","_hasChanged","addObserver","removeObserver","_change","reportChanges","fromObservable","obs","fromObservableLight","observable","count","didChange","observer","beginUpdate","endUpdate","handlePossibleChange","handleChange","EventProfiling","listenerCount","invocationCount","elapsedOverall","durations","_idPool","all","_stopWatch","elapsed","LeakageMonitor","threshold","Math","random","_warnCountdown","_a","_stacks","_this2","topStack","topCount","_step2$value","_slicedToArray","Stacktrace","join","UniqueContainer","_b","_c","_d","_options","_leakageMon","_perfMon","_profName","_deliveryQueue","deliveryQueue","_disposed","current","_listeners","_event","callback","removeMonitor","contained","ceil","check","EventDeliveryQueuePrivate","_removeListener","log","JSON","stringify","adjustDeliveryQueue","end","onListenerError","dq","_deliver","_deliverQueue","start","enqueue","getAllMethodNames","methods","getOwnPropertyNames","getAllPropertyNames","prop","isPseudo","document","location","hash","_format","replace","match","rest","localize","data","LANGUAGE_DEFAULT","_isWindows","_isMacintosh","_isLinux","_isWeb","_userAgent","globals","global","nodeProcess","vscode","isElectronProcess","electron","isElectronRenderer","navigator","platform","rawNlsConfig","nlsConfig","parse","resolved","availableLanguages","locale","osLocale","_translationsConfigFile","userAgent","maxTouchPoints","nls","comment","language","isWindows","isMacintosh","importScripts","setTimeout0IsFaster","postMessage","pending","vscodeScheduleAsyncWork","candidate","splice","lastId","myId","isChrome","LRUCachedFunction","lastCache","lastArgKey","Lazy","executor","_didRun","_value","_error","escapeRegExpCharacters","isUpperAsciiLetter","code","isHighSurrogate","charCode","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","str","offset","charCodeAt","nextCharCode","IS_BASIC_ASCII","fromCharCode","GraphemeBreakTree","_data","codePoint","nodeCount","nodeIndex","_INSTANCE","AmbiguousCharacters","confusableDictionary","locales","_locales","ambiguousCharacterData","arrayToMap","intersectMaps","map1","map2","filteredLocales","startsWith","languageSpecificMap","_step$value","mergeMaps","k","InvisibleCharacters","getRawData","getData","INITIALIZE","RequestMessage","vsWorker","req","ReplyMessage","seq","SubscribeEventMessage","EventMessage","UnsubscribeEventMessage","SimpleWorkerProtocol","_workerId","_handler","_lastSentReq","_pendingReplies","_pendingEmitters","_pendingEvents","workerId","reject","_send","_handleMessage","_handleReplyMessage","_handleRequestMessage","_handleSubscribeEventMessage","_handleEventMessage","_handleUnsubscribeEventMessage","replyMessage","reply","requestMessage","handleMessage","detail","handleEvent","transfer","ArrayBuffer","sendMessage","propertyIsEvent","strings","propertyIsDynamicEvent","createProxyObject","methodNames","proxyListen","createProxyMethod","createProxyDynamicEvent","methodName","SimpleWorkerServer","requestHandlerFactory","_this7","_requestHandlerFactory","_requestHandler","_protocol","_handleEvent","initialize","loaderConfig","hostMethods","_this8","setWorkerId","hostProxy","listen","baseUrl","paths","vs","trustedTypesPolicy","catchError","require","config","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","numberHash","val","initialHashVal","stringHash","hashVal","leftRotate","bits","delta","fill","dest","byteLength","toHexString","bufferOrValue","bitsize","Uint8Array","padStart","char","leftPad","StringSHA1","_h0","_h1","_h2","_h3","_h4","_buff","_buffDV","DataView","_buffLen","_totalLen","_leftoverHighSurrogate","_finished","strLen","buff","buffLen","leftoverHighSurrogate","_push","_wrapUp","ml","setUint32","floor","bigBlock32","_bigBlock32","j","getUint32","temp","StringDiffSequence","source","characters","Int32Array","stringDiff","original","modified","pretty","LcsDiff","ComputeDiff","changes","safeProcess","Debug","condition","MyArray","sourceArray","sourceIndex","destinationArray","destinationIndex","DiffChangeHelper","m_changes","m_originalStart","m_modifiedStart","m_originalCount","m_modifiedCount","originalIndex","modifiedIndex","min","MarkNextChange","originalSequence","modifiedSequence","continueProcessingPredicate","ContinueProcessingPredicate","_originalSequence","_modifiedSequence","_LcsDiff$_getElements2","_getElements","originalStringElements","originalElementsOrHash","originalHasStrings","_LcsDiff$_getElements4","modifiedStringElements","modifiedElementsOrHash","modifiedHasStrings","_hasStrings","_originalStringElements","_originalElementsOrHash","_modifiedStringElements","_modifiedElementsOrHash","m_forwardHistory","m_reverseHistory","newIndex","ElementsAreEqual","_getStrictElement","index1","index2","_ComputeDiff","originalEnd","modifiedEnd","quitEarlyArr","ComputeDiffRecursive","PrettifyChanges","quitEarly","Assert","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","historyIndex","diagonal","AddModifiedElement","AddOriginalElement","getReverseChanges","originalStartPoint","modifiedStartPoint","lastForwardChange","max","getOriginalEnd","getModifiedEnd","getChanges","maxDifferences","numDiagonals","numDifferences","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","tempOriginalIndex","abs","WALKTRACE","matchLengthOfLongest","Copy2","change","originalStop","modifiedStop","checkOriginal","checkModified","OriginalElementsAreEqual","ModifiedElementsAreEqual","startStrictEqual","ElementsAreStrictEqual","mergedChangeArr","ChangesOverlap","prevChange","bestDelta","bestScore","_boundaryScore","score","aChange","bChange","matchedLength","aOriginalStart","bOriginalEnd","abOriginalLength","aModifiedStart","bModifiedEnd","abModifiedLength","_findBetterContiguousSequence","_t","originalMatchStart","modifiedMatchStart","desiredLength","originalMax","modifiedMax","bestOriginalStart","bestModifiedStart","_contiguousSequenceScore","_OriginalIsBoundary","_ModifiedIsBoundary","_OriginalRegionIsBoundary","_ModifiedRegionIsBoundary","left","right","Copy","diagonalBaseIndex","diffEven","sequence","elements","getElements","_isStringArray","hashes","getStrictElement","sandboxProcess","arch","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","CHAR_COLON","ErrorInvalidArgType","expected","actual","determiner","validateString","platformIsWin32","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","path","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","lastSlashIndex","lastIndexOf","sep","pathObject","validateObject","root","base","ext","win32","resolvedDevice","resolvedTail","resolvedAbsolute","toLowerCase","rootEnd","device","isAbsolute","firstPart","normalize","tail","joined","needsReplace","slashCount","firstLen","relative","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","toNamespacedPath","resolvedPath","dirname","matchedSlash","basename","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","ret","delimiter","posix","posixCwd","regexp","trailingSeparator","hasRoot","_schemePattern","_singleSlashStart","_doubleSlashStart","_slash","_regexp","URI","schemeOrData","authority","query","fragment","_strict","scheme","_schemeFix","_referenceResolution","_validateUri","uriToFsPath","Uri","_asFormatted","fsPath","with","exec","percentDecode","idx","substring","components","strict","uri","newPath","_paths$win","_paths$posix","pathFragment","file","_formatted","external","_fsPath","_sep","_pathSepMarker","_URI","$mid","encodeTable","_encodeTable","encodeURIComponentFast","uriComponent","isPath","isAuthority","nativeEncodePos","pos","encodeURIComponent","substr","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","skipEncoding","encoder","userinfo","decodeURIComponentGraceful","decodeURIComponent","_rEncodedAsHex","CompareResult","Position","lineNumber","column","newLineNumber","newColumn","deltaLineNumber","deltaColumn","other","isBefore","isBeforeOrEqual","aLineNumber","bLineNumber","Range","startLineNumber","startColumn","endLineNumber","endColumn","position","containsPosition","range","containsRange","strictContainsRange","plusRange","intersectRanges","equalsRange","getEndPosition","getStartPosition","collapseToStart","collapseToEnd","lineCount","otherRange","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","groupAdjacentBy","items","shouldBeGrouped","currentGroup","item","compareBy","selector","comparator","isLessThan","isLessThanOrEqual","isGreaterThan","isNeitherLessOrGreaterThan","greaterThan","lessThan","neitherLessOrGreaterThan","numberComparator","CallbackIterable","iterate","cb","mapFn","toUint8","toUint32","_callback","PrefixSumComputer","prefixSum","Uint32Array","prefixSumValidIndex","insertIndex","insertValues","oldValues","oldPrefixSum","insertValuesLen","subarray","startIndex","maxCount","_getPrefixSum","sum","getTotalSum","low","high","mid","midStop","midStart","PrefixSumIndexOfResult","remainder","_prefixSumIndexOfResultBrand","MirrorTextModel","lines","eol","versionId","_uri","_lines","_eol","_versionId","_lineStarts","_cachedTextValue","_acceptDeleteRange","_acceptInsertText","text","eolLength","linesLength","lineStartValues","lineIndex","newValue","setValue","_setLineText","removeValues","insertText","insertLines","newLengths","DEFAULT_WORD_REGEXP","allowInWords","RegExp","createWordRegExp","_defaultConfig","getWordAtText","wordDefinition","textOffset","maxLen","t1","prevRegexIndex","timeBudget","regexIndex","windowSize","lastIndex","thisMatch","_findRegexMatchEnclosingPosition","word","stopPos","matchIndex","unshift","CharacterClassifier","_defaultValue","defaultValue","_asciiMap","_createAsciiMap","_map","asciiMap","Uint8Matrix","rows","cols","row","col","StateMachine","edges","maxCharCode","maxState","_edges$i","chCode","states","_edges$_i","_states","_maxCharCode","currentState","_stateMachine","_classifier","LinkComputer","classifier","line","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","charCodeBeforeLink","lastCharCodeInLink","url","model","stateMachine","FORCE_TERMINATION_CHARACTERS","CANNOT_END_WITH_CHARACTERS","getClassifier","getLineCount","getLineContent","linkBeginChCode","state","hasOpenParens","hasOpenSquareBracket","inSquareBrackets","hasOpenCurlyBracket","resetStateMachine","chClass","_createLink","nextState","computeLinks","BasicInplaceReplace","_defaultValueSet","range1","text1","range2","text2","up","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","pow","n1","n2","parseFloat","valueSetsReplace","valueSets","valueSetReplace","valueSet","INSTANCE","CancellationToken","shortcutEvent","context","isCancellationToken","Cancelled","MutableToken","isCancellationRequested","onCancellationRequested","KeyCodeUtils","_isCancelled","_emitter","CancellationTokenSource","_token","_parentListener","cancel","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","keyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","EVENT_KEY_CODE_MAP","NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE","scanCodeIntToStr","scanCodeStrToInt","scanCodeLowerCaseStrToInt","IMMUTABLE_CODE_TO_KEY_CODE","IMMUTABLE_KEY_CODE_TO_CODE","seenKeyCode","seenScanCode","_i2","_mappings","_mapping","immutable","scanCode","scanCodeStr","keyCodeStr","eventKeyCode","vkey","usUserSettingsLabel","generalUserSettingsLabel","keyCodeToStr","fromString","strToKeyCode","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","toElectronAccelerator","Selection","_Range","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","selectionsEqual","getDirection","direction","sel","isString","_codiconFontCharacters","register","fontCharacter","Codicon","plus","gistNew","repoCreate","lightbulb","lightBulb","repo","repoDelete","gistFork","repoForked","gitPullRequest","gitPullRequestAbandoned","recordKeys","keyboard","tag","tagAdd","tagRemove","gitPullRequestLabel","person","personFollow","personOutline","personFilled","gitBranch","gitBranchCreate","gitBranchDelete","sourceControl","mirror","mirrorPublic","star","starAdd","starDelete","starEmpty","commentAdd","alert","warning","search","searchSave","logOut","signOut","logIn","signIn","eye","eyeUnwatch","eyeWatch","circleFilled","primitiveDot","closeDirty","debugBreakpoint","debugBreakpointDisabled","debugHint","primitiveSquare","edit","pencil","info","issueOpened","gistPrivate","gitForkPrivate","lock","mirrorPrivate","close","removeClose","repoSync","sync","clone","desktopDownload","beaker","microscope","vm","deviceDesktop","fileText","more","ellipsis","kebabHorizontal","mailReply","organization","organizationFilled","organizationOutline","newFile","fileAdd","newFolder","fileDirectoryCreate","trash","trashcan","history","clock","folder","fileDirectory","symbolFolder","logoGithub","markGithub","github","terminal","repl","zap","symbolEvent","variable","symbolVariable","symbolArray","symbolModule","symbolPackage","symbolNamespace","symbolObject","symbolMethod","symbolFunction","symbolConstructor","symbolBoolean","symbolNull","symbolNumeric","symbolNumber","symbolStructure","symbolStruct","symbolParameter","symbolTypeParameter","symbolKey","symbolText","symbolReference","goToFile","symbolEnum","symbolValue","symbolRuler","symbolUnit","activateBreakpoints","archive","arrowBoth","arrowDown","arrowLeft","arrowRight","arrowSmallDown","arrowSmallLeft","arrowSmallRight","arrowSmallUp","arrowUp","bell","bold","book","bookmark","debugBreakpointConditionalUnverified","debugBreakpointConditional","debugBreakpointConditionalDisabled","debugBreakpointDataUnverified","debugBreakpointData","debugBreakpointDataDisabled","debugBreakpointLogUnverified","debugBreakpointLog","debugBreakpointLogDisabled","briefcase","broadcast","bug","calendar","caseSensitive","checklist","chevronDown","dropDownButton","chevronLeft","chevronRight","chevronUp","chromeClose","chromeMaximize","chromeMinimize","chromeRestore","circle","circleOutline","debugBreakpointUnverified","circleSlash","circuitBoard","clearAll","clippy","closeAll","cloudDownload","cloudUpload","collapseAll","colorMode","commentDiscussion","compareChanges","creditCard","dash","dashboard","database","debugContinue","debugDisconnect","debugPause","debugRestart","debugStart","debugStepInto","debugStepOut","debugStepOver","debugStop","debug","deviceCameraVideo","deviceCamera","deviceMobile","diffAdded","diffIgnored","diffModified","diffRemoved","diffRenamed","diff","discard","editorLayout","emptyWindow","exclude","extensions","eyeClosed","fileBinary","fileCode","fileMedia","filePdf","fileSubmodule","fileSymlinkDirectory","fileSymlinkFile","fileZip","files","flame","foldDown","foldUp","fold","folderActive","folderOpened","gear","gift","gistSecret","gist","gitCommit","gitCompare","gitMerge","githubAction","githubAlt","globe","grabber","graph","gripper","heart","home","horizontalRule","hubot","inbox","issueClosed","issueReopened","issues","italic","jersey","json","bracket","kebabVertical","law","lightbulbAutofix","linkExternal","link","listOrdered","listUnordered","liveShare","loading","mailRead","mail","markdown","megaphone","mention","milestone","gitPullRequestMilestone","mortarBoard","move","multipleWindows","mute","noNewline","note","octoface","openPreview","package","paintcan","pin","play","plug","preserveCase","preview","project","pulse","question","quote","radioTower","reactions","references","refresh","regex","remoteExplorer","remote","remove","replaceAll","repoClone","repoForcePush","repoPull","repoPush","report","requestChanges","rocket","rootFolderOpened","rootFolder","rss","ruby","saveAll","saveAs","save","screenFull","screenNormal","searchStop","server","settingsGear","settings","shield","smiley","sortPrecedence","splitHorizontal","splitVertical","squirrel","starFull","starHalf","symbolClass","symbolColor","symbolCustomColor","symbolConstant","symbolEnumMember","symbolField","symbolFile","symbolInterface","symbolKeyword","symbolMisc","symbolOperator","symbolProperty","wrench","wrenchSubaction","symbolSnippet","tasklist","telescope","textSize","threeBars","thumbsdown","thumbsup","tools","triangleDown","triangleLeft","triangleRight","triangleUp","twitter","unfold","unlock","unmute","unverified","verified","vmActive","vmOutline","vmRunning","watch","whitespace","wholeWord","wordWrap","zoomIn","zoomOut","listFilter","listFlat","listSelection","selection","listTree","debugBreakpointFunctionUnverified","debugBreakpointFunction","debugBreakpointFunctionDisabled","debugStackframeActive","circleSmallFilled","debugStackframeDot","debugStackframe","debugStackframeFocused","debugBreakpointUnsupported","symbolString","debugReverseContinue","debugStepBack","debugRestartFrame","callIncoming","callOutgoing","menu","expandAll","feedback","gitPullRequestReviewer","groupByRefType","ungroupByRefType","account","gitPullRequestAssignee","bellDot","debugConsole","library","runAll","syncIgnored","pinned","githubInverted","debugAlt","serverProcess","serverEnvironment","pass","stopCircle","playCircle","record","debugAltSmall","vmConnect","cloud","exportIcon","graphLeft","magnet","notebook","redo","checkAll","pinnedDirty","passFilled","circleLargeFilled","circleLarge","circleLargeOutline","combine","gather","table","variableGroup","typeHierarchy","typeHierarchySub","typeHierarchySuper","gitPullRequestCreate","runAbove","runBelow","notebookTemplate","debugRerun","workspaceTrusted","workspaceUntrusted","workspaceUnspecified","terminalCmd","terminalDebian","terminalLinux","terminalPowershell","terminalTmux","terminalUbuntu","terminalBash","arrowSwap","copy","personAdd","filterFilled","wand","debugLineByLine","inspect","layers","layersDot","layersActive","compass","compassDot","compassActive","azure","issueDraft","gitPullRequestClosed","gitPullRequestDraft","debugAll","debugCoverage","runErrors","folderLibrary","debugContinueSmall","beakerStop","graphLine","graphScatter","pieChart","bracketDot","bracketError","lockSmall","azureDevops","verifiedFilled","newLine","layout","layoutActivitybarLeft","layoutActivitybarRight","layoutPanelLeft","layoutPanelCenter","layoutPanelJustify","layoutPanelRight","layoutPanel","layoutSidebarLeft","layoutSidebarRight","layoutStatusbar","layoutMenubar","layoutCentered","layoutSidebarRightOff","layoutPanelOff","layoutSidebarLeftOff","indent","recordSmall","errorSmall","arrowCircleDown","arrowCircleLeft","arrowCircleRight","arrowCircleUp","heartFilled","mapFilled","circleSmall","bellSlash","bellSlashDot","commentUnresolved","gitPullRequestGoToChanges","gitPullRequestNewChanges","searchFuzzy","commentDraft","send","sparkle","insert","mic","dialogError","dialogWarning","dialogInfo","dialogClose","treeItemExpanded","treeFilterOnTypeOn","treeFilterOnTypeOff","treeFilterClear","treeItemLoading","menuSelection","menuSubmenu","menuBarMore","scrollbarButtonLeft","scrollbarButtonRight","scrollbarButtonUp","scrollbarButtonDown","toolBarMore","quickInputBack","property","receiver","object","desc","getOwnPropertyDescriptor","CompletionItemKinds","InlineCompletionTriggerKind","__awaiter","thisArg","_arguments","P","generator","fulfilled","rejected","TokenizationRegistry","_tokenizationSupports","_factories","_onDidChange","onDidChange","_colorMap","languageIds","changedLanguages","changedColorMap","languageId","support","factory","myData","TokenizationSupportFactoryData","tokenizationSupport","isResolved","colorMap","_Disposable","_registry","_languageId","_factory","_resolvePromise","_isResolved","_get","_getPrototypeOf","_callee2","_create","_callee3","_register","Token","_tokenBrand","byKind","toIcon","kind","codicon","SignatureHelpTriggerKind","DocumentHighlightKind","SymbolKinds","_symbolKindNames","icon","Command","InlayHintKind","FoldingRangeKind","Comment","Imports","Region","AccessibilitySupport","CodeActionTriggerType","CompletionItemInsertTextRule","CompletionItemKind","CompletionItemTag","CompletionTriggerKind","ContentWidgetPositionPreference","CursorChangeReason","DefaultEndOfLine","EditorAutoIndentStrategy","EditorOption","EndOfLinePreference","EndOfLineSequence","GlyphMarginLane","IndentAction","InjectedTextCursorStops","KeyCode","MarkerSeverity","MarkerTag","MinimapPosition","MouseTargetType","OverlayWidgetPositionPreference","OverviewRulerLane","PositionAffinity","RenderLineNumbersType","RenderMinimap","ScrollType","ScrollbarVisibility","SelectionDirection","SymbolKind","SymbolTag","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","TrackedRangeStickiness","WrappingIndent","TokenizationRegistryImpl","KeyMod","secondPart","KeyChord","CtrlCmd","Shift","Alt","WinCtrl","WordCharacterClassifier","_CharacterClassifier","wordSeparators","computeFn","isValidMatch","textLength","matchStartIndex","matchLength","charBefore","firstCharInMatch","leftIsWordBounday","charAfter","lastCharInMatch","rightIsWordBounday","Searcher","searchRegex","_wordSeparators","_searchRegex","_prevMatchStartIndex","_prevMatchLength","m","assertNever","assertFn","checkAdjacentItems","UnicodeTextModelHighlighter","startLine","endLine","codePointHighlighter","CodePointHighlighter","candidates","getCandidateCodePoints","codePoints","flags","src","fromCodePoint","buildRegExpCharClassExpr","searcher","ranges","hasMore","ambiguousCharacterCount","invisibleCharacterCount","nonBasicAsciiCharacterCount","forLoop","lineContent","lineLength","endIndex","highlightReason","shouldHighlightNonBasicASCII","codePointAt","primaryConfusable","ambiguousCharacters","getPrimaryConfusable","notAmbiguousInLocales","getLocales","getInstance","allowedLocales","isAmbiguous","confusableWith","allowedCodePoints","nonBasicASCII","invisibleCharacters","cp","isAllowedInvisibleCharacter","getConfusableCodePoints","character","wordContext","hasBasicASCIICharacters","hasNonConfusableNonBasicAsciiCharacter","isBasicASCII","isInvisibleCharacter","LinesDiff","moves","hitTimeout","MovedText","lineRangeMapping","OffsetRange","endExclusive","sortedRanges","findLastMonotonous","findLastIdxMonotonous","findFirstIdxMonotonousOrArrLen","MonotonousArray","_array","_findLastMonotonousLastIdx","assertInvariants","_prevFindLastPredicate","LineRange","endLineNumberExclusive","MAX_SAFE_INTEGER","lineRanges","LineRangeSet","getUnion","lineRange","_normalizedRanges","joinRangeStartIdx","joinRangeEndIdxExclusive","joinRange","rangeThatStartsBeforeEnd","i1","i2","lineRange1","lineRange2","r1","r2","intersect","LineRangeMapping","originalRange","modifiedRange","mapping","originalLineCount","modifiedLineCount","lastOriginalEndLineNumber","lastModifiedEndLineNumber","DetailedLineRangeMapping","_LineRangeMapping","innerChanges","flip","RangeMapping","LegacyLinesDiffComputer","originalLines","modifiedLines","DiffComputer","maxComputationTime","maxComputationTimeMs","shouldIgnoreTrimWhitespace","ignoreTrimWhitespace","shouldComputeCharChanges","shouldMakePrettyDiff","shouldPostProcessCharChanges","computeDiff","lastChange","originalEndLineNumber","originalStartLineNumber","modifiedEndLineNumber","modifiedStartLineNumber","charChanges","originalStartColumn","originalEndColumn","modifiedStartColumn","modifiedEndColumn","m1","m2","LineSequence","startColumns","endColumns","getFirstNonBlankColumn","getLastNonBlankColumn","_startColumns","_endColumns","charCodes","lineNumbers","columns","CharSequence","_charCodes","_lineNumbers","_columns","getEndLineNumber","_assertIndex","getStartLineNumber","getEndColumn","getStartColumn","CharChange","diffChange","originalCharSequence","modifiedCharSequence","LineChange","originalLineSequence","modifiedLineSequence","continueCharDiff","createCharSequence","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","postProcessCharChanges","createFromDiffChange","opts","continueLineDiff","createContinueProcessingPredicate","diffResult","lineChanges","createFromDiffResult","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","txt","maximumRuntime","startTime","DiffAlgorithmResult","diffs","seq1","seq2","SequenceDiff","ofLength","seq1Range","seq2Range","deltaStart","deltaEnd","OffsetPair","sequenceDiffs","doc1Length","forEachAdjacent","fromOffsetPairs","getEndExclusives","zero","getStarts","offset1","offset2","InfiniteTimeout","DateTimeout","valid","Array2D","width","height","isSpace","LineRangeFragment","histogram","counter","chr","getKey","totalCount","sumDifferences","maxLength","chrKeys","DynamicProgrammingDiffing","sequence1","sequence2","equalityScore","trivial","lcsLengths","directions","lengths","s1","s2","isValid","trivialTimedOut","horizontalLen","verticalLen","extendedSeqScore","getElement","prevLen","lastAligningPosS1","lastAligningPosS2","reportDecreasingAligningPositions","MyersDiffAlgorithm","seqX","seqY","getXAfterSnake","V","FastInt32Array","FastArrayNegativeIndices","SnakePath","loop","lowerBound","upperBound","maxXofDLineTop","maxXofDLineLeft","newMaxX","lastPath","endX","endY","positiveArr","negativeArr","ResourceMapEntry","_ref","ResourceMap","toKey","defaultToKey","isEntries","resource","clb","entry","entries","_step6$value","SetMap","LinesSliceCharSequence","considerWhitespaceChanges","firstCharOffsetByLine","additionalOffsetByLine","trimFirstLineFully","trimmedStartLine","trimStart","trimEnd","getText","prevCategory","getCategory","nextCategory","getCategoryBoundaryScore","fromPositions","translateOffset","isWordChar","findFirstMonotonous","_score","category","computeMovedLines","hashedOriginalLines","hashedModifiedLines","_computeMovesFromSimp","deletions","insertions","excludedChanges","deletion","highestSimilarity","best","insertion","similarity","computeSimilarity","computeMovesFromSimpleDeletionsToSimpleInsertions","unchangedMoves","original3LineHashes","possibleMappings","sort","_ret","_loop2","lastMappings","_loop3","currentModifiedRange","nextMappings","_i4","_lastMappings","lastMapping","originalLineRange","modifiedLineRange","modifiedSet","originalSet","_possibleMappings","diffOrigToMod","modifiedSections","subtractFrom","originalTranslatedSections","getWithDelta","getIntersection","addRange","monotonousChanges","_loop","extendToTop","extendToBottom","firstTouchingChangeOrig","firstTouchingChangeMod","linesAbove","lastTouchingChangeOrig","lastTouchingChangeMod","linesBelow","origLine","modLine","contains","areLinesSimilar","computeUnchangedMoves","pushMany","originalDist","modifiedDist","joinCloseConsecutiveMoves","changesMonotonous","removeMovesInSameDiff","toOffsetRange","trim","line1","line2","compute","commonNonSpaceCharCount","invert","longerLineLength","countNonWsChars","optimizeSequenceDiffs","prevResult","result2","nextResult","isStronglyEqual","joinSequenceDiffsByShifting","getBoundaryScore","prevDiff","nextDiff","seq1ValidRange","seq2ValidRange","shiftDiffToBetterPosition","swap","shiftSequenceDiffs","deltaBefore","deltaAfter","seq2OffsetStart","seq2OffsetEndExclusive","seq1Offset","trimmedHash","getIndentation","DefaultLinesDiffComputer","dynamicProgrammingDiffing","myersDiffingAlgorithm","one","itemEquals","perfectHashes","getOrCreateHash","originalLinesHashes","modifiedLinesHashes","lineAlignmentResult","lineAlignments","_sequence2","shouldRepeat","lastResult","before","after","unchangedRange","shouldJoinDiffs","removeVeryShortMatchingLinesBetweenDiffs","alignments","scanForWhitespaceChanges","equalLinesCount","seq1LastStart","seq2Offset","seq2LastStart","characterDiffs","refineDiff","mappings","lineRangeMappingFromRangeMappings","computeMoves","validatePosition","validateRange","ic","slice1","slice2","additional","lastModifiedWord","maybePushWordToAdditional","originalLength1","s1Range","deleted","s2Range","added","processWord","s1Added","tryCreate","s2Added","changedS1","changedS2","w1Before","findWordContaining","w2Before","w1After","w2After","sequenceDiffs1","sequenceDiffs2","sd1","sd2","shift","mergeSequenceDiffs","extendDiffsToEntireWordIfAppropriate","removeShortMatches","countLinesIn","unchangedText","beforeLineCount1","beforeSeq1Length","beforeLineCount2","beforeSeq2Length","afterLineCount1","afterSeq1Length","afterLineCount2","afterSeq2Length","cap","newDiffs","forEachWithNeighbors","newDiff","shouldMarkAsChanged","fullRange1","extendToFullLines","prefix","suffix","availableSpace","removeVeryShortMatchingTextBetweenLongDiffs","translateRange","dontAssertStartLine","rangeMapping","lineStartDelta","lineEndDelta","getLineRangeMapping","a1","a2","overlapOrTouch","linesDiffComputers","roundFloat","number","decimalPoints","decimal","round","RGBA","_rgbaBrand","HSLA","_hslaBrand","rgba","chroma","q","hsla","_hue2rgb","HSVA","_hsvaBrand","cmax","hsva","Color","_hsla","toRGBA","_hsva","fromRGBA","_relativeLuminanceForComponent","another","getRelativeLuminance","factor","_this$rgba","opaqueBackground","isOpaque","_this$rgba2","_toString","Format","CSS","hex","parseHex","red","color","of","isLighterThan","lum1","lum2","lighten","isDarkerThan","darken","_parseCaptureGroups","captureGroups","captureGroup","parsedNumber","_toIColor","blue","green","alpha","_findRange","startPosition","positionAt","_findHexColorInformation","hexValue","parsedHexColor","_findRGBColorInformation","matches","isAlpha","parsedRegex","_findHSLColorInformation","colorEquivalent","_findMatches","matchAll","findMatches","computeDefaultDocumentColors","getValue","initialValidationMatches","initialMatch","initialCaptureGroups","colorScheme","colorParameters","colorInformation","computeColors","white","black","cyan","lightgrey","transparent","_toTwoDigitHex","_parseHexDigit","formatRGB","formatRGBA","toFixed","formatHSL","formatHSLA","formatHex","formatHexA","MirrorModel","_BaseMirrorModel","offsetToAdd","offsetAt","wordAtText","ignoreCase","multiline","unicode","ensureValidWordDefinition","wordenize","_wordenize","lineText","wordRangesIdx","wordRanges","content","words","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","_validatePosition","_ensureLineStarts","getPrefixSum","getIndexOf","isIPosition","hasChanged","maxCharacter","BaseMirrorModel","EditorSimpleWorker","host","foreignModuleFactory","_host","_models","_foreignModuleFactory","_foreignModule","EOL","strURL","onEvents","_getModel","computeUnicodeHighlights","originalUrl","modifiedUrl","algorithm","modelUrl","edits","_callee4","lastEol","writeIndex","readIndex","_step3$value","editOffset","newEdit","compareRangesUsingStarts","getValueInRange","_diffLimit","lift","_callee5","_callee6","modelUrls","leadingWord","wordDef","wordDefFlags","_callee7","sw","wordDefRegExp","seen","_context7","_suggestionsLimit","duration","_callee8","_iterator7","_step7","_context8","getLineWords","_callee9","selectionText","wordRange","_context9","getWordAtPosition","navigateValueSet","createData","foreignHostMethods","foreignHost","fhr","ctx","getMirrorModels","_getModels","originalTextModel","modifiedTextModel","diffAlgorithm","getLinesContent","getLineChanges","identical","_modelsAreIdentical","monaco","editor","languages","standaloneEnums","initialized","onmessage","foreignModule","simpleWorker"],"sourceRoot":""}