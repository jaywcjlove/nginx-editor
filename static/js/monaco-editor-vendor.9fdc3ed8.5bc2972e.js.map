{"version":3,"file":"static/js/monaco-editor-vendor.9fdc3ed8.5bc2972e.js","mappings":"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","sources":["../../node_modules/monaco-editor/esm/vs/editor/contrib/anchorSelect/browser/anchorSelect.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/bracketMatching/browser/bracketMatching.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/caretOperations/browser/moveCaretCommand.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/caretOperations/browser/caretOperations.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/caretOperations/browser/transpose.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/clipboard/browser/clipboard.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/browser/codeAction.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/browser/codeActionCommands.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/browser/codeActionContributions.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/browser/codeActionKeybindingResolver.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/browser/codeActionMenu.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/browser/codeActionController.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/browser/codeActionModel.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/browser/lightBulbWidget.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/common/types.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/codelens/browser/codelens.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/codelens/browser/codeLensCache.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/codelens/browser/codelensWidget.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/codelens/browser/codelensController.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/colorPicker/browser/color.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/colorPicker/browser/colorContributions.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/colorPicker/browser/colorDetector.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/colorPicker/browser/colorPickerModel.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/colorPicker/browser/colorPickerWidget.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/colorPicker/browser/colorHoverParticipant.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/colorPicker/browser/defaultDocumentColorProvider.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/colorPicker/browser/standaloneColorPickerWidget.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/colorPicker/browser/standaloneColorPickerActions.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/comment/browser/blockCommentCommand.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/comment/browser/lineCommentCommand.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/comment/browser/comment.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/contextmenu/browser/contextmenu.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/cursorUndo/browser/cursorUndo.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/diffEditorBreadcrumbs/browser/contribution.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/dnd/browser/dragAndDropCommand.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/dnd/browser/dnd.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/documentSymbols/browser/documentSymbols.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/documentSymbols/browser/outlineModel.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/copyPasteContribution.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/copyPasteController.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/defaultProviders.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/dropIntoEditorController.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/dropIntoEditorContribution.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/edit.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/postEditWidget.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/editorState/browser/keybindingCancellation.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/editorState/browser/editorState.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar SelectionAnchorController_1;\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport './anchorSelect.css';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { localize } from '../../../../nls.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nexport const SelectionAnchorSet = new RawContextKey('selectionAnchorSet', false);\nlet SelectionAnchorController = SelectionAnchorController_1 = class SelectionAnchorController {\n    static get(editor) {\n        return editor.getContribution(SelectionAnchorController_1.ID);\n    }\n    constructor(editor, contextKeyService) {\n        this.editor = editor;\n        this.selectionAnchorSetContextKey = SelectionAnchorSet.bindTo(contextKeyService);\n        this.modelChangeListener = editor.onDidChangeModel(() => this.selectionAnchorSetContextKey.reset());\n    }\n    setSelectionAnchor() {\n        if (this.editor.hasModel()) {\n            const position = this.editor.getPosition();\n            this.editor.changeDecorations((accessor) => {\n                if (this.decorationId) {\n                    accessor.removeDecoration(this.decorationId);\n                }\n                this.decorationId = accessor.addDecoration(Selection.fromPositions(position, position), {\n                    description: 'selection-anchor',\n                    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n                    hoverMessage: new MarkdownString().appendText(localize('selectionAnchor', \"Selection Anchor\")),\n                    className: 'selection-anchor'\n                });\n            });\n            this.selectionAnchorSetContextKey.set(!!this.decorationId);\n            alert(localize('anchorSet', \"Anchor set at {0}:{1}\", position.lineNumber, position.column));\n        }\n    }\n    goToSelectionAnchor() {\n        if (this.editor.hasModel() && this.decorationId) {\n            const anchorPosition = this.editor.getModel().getDecorationRange(this.decorationId);\n            if (anchorPosition) {\n                this.editor.setPosition(anchorPosition.getStartPosition());\n            }\n        }\n    }\n    selectFromAnchorToCursor() {\n        if (this.editor.hasModel() && this.decorationId) {\n            const start = this.editor.getModel().getDecorationRange(this.decorationId);\n            if (start) {\n                const end = this.editor.getPosition();\n                this.editor.setSelection(Selection.fromPositions(start.getStartPosition(), end));\n                this.cancelSelectionAnchor();\n            }\n        }\n    }\n    cancelSelectionAnchor() {\n        if (this.decorationId) {\n            const decorationId = this.decorationId;\n            this.editor.changeDecorations((accessor) => {\n                accessor.removeDecoration(decorationId);\n                this.decorationId = undefined;\n            });\n            this.selectionAnchorSetContextKey.set(false);\n        }\n    }\n    dispose() {\n        this.cancelSelectionAnchor();\n        this.modelChangeListener.dispose();\n    }\n};\nSelectionAnchorController.ID = 'editor.contrib.selectionAnchorController';\nSelectionAnchorController = SelectionAnchorController_1 = __decorate([\n    __param(1, IContextKeyService)\n], SelectionAnchorController);\nclass SetSelectionAnchor extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.setSelectionAnchor',\n            label: localize('setSelectionAnchor', \"Set Selection Anchor\"),\n            alias: 'Set Selection Anchor',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 32 /* KeyCode.KeyB */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    async run(_accessor, editor) {\n        var _a;\n        (_a = SelectionAnchorController.get(editor)) === null || _a === void 0 ? void 0 : _a.setSelectionAnchor();\n    }\n}\nclass GoToSelectionAnchor extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.goToSelectionAnchor',\n            label: localize('goToSelectionAnchor', \"Go to Selection Anchor\"),\n            alias: 'Go to Selection Anchor',\n            precondition: SelectionAnchorSet,\n        });\n    }\n    async run(_accessor, editor) {\n        var _a;\n        (_a = SelectionAnchorController.get(editor)) === null || _a === void 0 ? void 0 : _a.goToSelectionAnchor();\n    }\n}\nclass SelectFromAnchorToCursor extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.selectFromAnchorToCursor',\n            label: localize('selectFromAnchorToCursor', \"Select from Anchor to Cursor\"),\n            alias: 'Select from Anchor to Cursor',\n            precondition: SelectionAnchorSet,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    async run(_accessor, editor) {\n        var _a;\n        (_a = SelectionAnchorController.get(editor)) === null || _a === void 0 ? void 0 : _a.selectFromAnchorToCursor();\n    }\n}\nclass CancelSelectionAnchor extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.cancelSelectionAnchor',\n            label: localize('cancelSelectionAnchor', \"Cancel Selection Anchor\"),\n            alias: 'Cancel Selection Anchor',\n            precondition: SelectionAnchorSet,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 9 /* KeyCode.Escape */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    async run(_accessor, editor) {\n        var _a;\n        (_a = SelectionAnchorController.get(editor)) === null || _a === void 0 ? void 0 : _a.cancelSelectionAnchor();\n    }\n}\nregisterEditorContribution(SelectionAnchorController.ID, SelectionAnchorController, 4 /* EditorContributionInstantiation.Lazy */);\nregisterEditorAction(SetSelectionAnchor);\nregisterEditorAction(GoToSelectionAnchor);\nregisterEditorAction(SelectFromAnchorToCursor);\nregisterEditorAction(CancelSelectionAnchor);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport './bracketMatching.css';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { OverviewRulerLane } from '../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId, MenuRegistry } from '../../../../platform/actions/common/actions.js';\nimport { registerColor } from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nconst overviewRulerBracketMatchForeground = registerColor('editorOverviewRuler.bracketMatchForeground', { dark: '#A0A0A0', light: '#A0A0A0', hcDark: '#A0A0A0', hcLight: '#A0A0A0' }, nls.localize('overviewRulerBracketMatchForeground', 'Overview ruler marker color for matching brackets.'));\nclass JumpToBracketAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.jumpToBracket',\n            label: nls.localize('smartSelect.jumpBracket', \"Go to Bracket\"),\n            alias: 'Go to Bracket',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 93 /* KeyCode.Backslash */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        var _a;\n        (_a = BracketMatchingController.get(editor)) === null || _a === void 0 ? void 0 : _a.jumpToBracket();\n    }\n}\nclass SelectToBracketAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.selectToBracket',\n            label: nls.localize('smartSelect.selectToBracket', \"Select to Bracket\"),\n            alias: 'Select to Bracket',\n            precondition: undefined,\n            metadata: {\n                description: nls.localize2('smartSelect.selectToBracketDescription', \"Select the text inside and including the brackets or curly braces\"),\n                args: [{\n                        name: 'args',\n                        schema: {\n                            type: 'object',\n                            properties: {\n                                'selectBrackets': {\n                                    type: 'boolean',\n                                    default: true\n                                }\n                            },\n                        }\n                    }]\n            }\n        });\n    }\n    run(accessor, editor, args) {\n        var _a;\n        let selectBrackets = true;\n        if (args && args.selectBrackets === false) {\n            selectBrackets = false;\n        }\n        (_a = BracketMatchingController.get(editor)) === null || _a === void 0 ? void 0 : _a.selectToBracket(selectBrackets);\n    }\n}\nclass RemoveBracketsAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.removeBrackets',\n            label: nls.localize('smartSelect.removeBrackets', \"Remove Brackets\"),\n            alias: 'Remove Brackets',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 1 /* KeyCode.Backspace */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        var _a;\n        (_a = BracketMatchingController.get(editor)) === null || _a === void 0 ? void 0 : _a.removeBrackets(this.id);\n    }\n}\nclass BracketsData {\n    constructor(position, brackets, options) {\n        this.position = position;\n        this.brackets = brackets;\n        this.options = options;\n    }\n}\nexport class BracketMatchingController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(BracketMatchingController.ID);\n    }\n    constructor(editor) {\n        super();\n        this._editor = editor;\n        this._lastBracketsData = [];\n        this._lastVersionId = 0;\n        this._decorations = this._editor.createDecorationsCollection();\n        this._updateBracketsSoon = this._register(new RunOnceScheduler(() => this._updateBrackets(), 50));\n        this._matchBrackets = this._editor.getOption(72 /* EditorOption.matchBrackets */);\n        this._updateBracketsSoon.schedule();\n        this._register(editor.onDidChangeCursorPosition((e) => {\n            if (this._matchBrackets === 'never') {\n                // Early exit if nothing needs to be done!\n                // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\n                return;\n            }\n            this._updateBracketsSoon.schedule();\n        }));\n        this._register(editor.onDidChangeModelContent((e) => {\n            this._updateBracketsSoon.schedule();\n        }));\n        this._register(editor.onDidChangeModel((e) => {\n            this._lastBracketsData = [];\n            this._updateBracketsSoon.schedule();\n        }));\n        this._register(editor.onDidChangeModelLanguageConfiguration((e) => {\n            this._lastBracketsData = [];\n            this._updateBracketsSoon.schedule();\n        }));\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(72 /* EditorOption.matchBrackets */)) {\n                this._matchBrackets = this._editor.getOption(72 /* EditorOption.matchBrackets */);\n                this._decorations.clear();\n                this._lastBracketsData = [];\n                this._lastVersionId = 0;\n                this._updateBracketsSoon.schedule();\n            }\n        }));\n        this._register(editor.onDidBlurEditorWidget(() => {\n            this._updateBracketsSoon.schedule();\n        }));\n        this._register(editor.onDidFocusEditorWidget(() => {\n            this._updateBracketsSoon.schedule();\n        }));\n    }\n    jumpToBracket() {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        const model = this._editor.getModel();\n        const newSelections = this._editor.getSelections().map(selection => {\n            const position = selection.getStartPosition();\n            // find matching brackets if position is on a bracket\n            const brackets = model.bracketPairs.matchBracket(position);\n            let newCursorPosition = null;\n            if (brackets) {\n                if (brackets[0].containsPosition(position) && !brackets[1].containsPosition(position)) {\n                    newCursorPosition = brackets[1].getStartPosition();\n                }\n                else if (brackets[1].containsPosition(position)) {\n                    newCursorPosition = brackets[0].getStartPosition();\n                }\n            }\n            else {\n                // find the enclosing brackets if the position isn't on a matching bracket\n                const enclosingBrackets = model.bracketPairs.findEnclosingBrackets(position);\n                if (enclosingBrackets) {\n                    newCursorPosition = enclosingBrackets[1].getStartPosition();\n                }\n                else {\n                    // no enclosing brackets, try the very first next bracket\n                    const nextBracket = model.bracketPairs.findNextBracket(position);\n                    if (nextBracket && nextBracket.range) {\n                        newCursorPosition = nextBracket.range.getStartPosition();\n                    }\n                }\n            }\n            if (newCursorPosition) {\n                return new Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);\n            }\n            return new Selection(position.lineNumber, position.column, position.lineNumber, position.column);\n        });\n        this._editor.setSelections(newSelections);\n        this._editor.revealRange(newSelections[0]);\n    }\n    selectToBracket(selectBrackets) {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        const model = this._editor.getModel();\n        const newSelections = [];\n        this._editor.getSelections().forEach(selection => {\n            const position = selection.getStartPosition();\n            let brackets = model.bracketPairs.matchBracket(position);\n            if (!brackets) {\n                brackets = model.bracketPairs.findEnclosingBrackets(position);\n                if (!brackets) {\n                    const nextBracket = model.bracketPairs.findNextBracket(position);\n                    if (nextBracket && nextBracket.range) {\n                        brackets = model.bracketPairs.matchBracket(nextBracket.range.getStartPosition());\n                    }\n                }\n            }\n            let selectFrom = null;\n            let selectTo = null;\n            if (brackets) {\n                brackets.sort(Range.compareRangesUsingStarts);\n                const [open, close] = brackets;\n                selectFrom = selectBrackets ? open.getStartPosition() : open.getEndPosition();\n                selectTo = selectBrackets ? close.getEndPosition() : close.getStartPosition();\n                if (close.containsPosition(position)) {\n                    // select backwards if the cursor was on the closing bracket\n                    const tmp = selectFrom;\n                    selectFrom = selectTo;\n                    selectTo = tmp;\n                }\n            }\n            if (selectFrom && selectTo) {\n                newSelections.push(new Selection(selectFrom.lineNumber, selectFrom.column, selectTo.lineNumber, selectTo.column));\n            }\n        });\n        if (newSelections.length > 0) {\n            this._editor.setSelections(newSelections);\n            this._editor.revealRange(newSelections[0]);\n        }\n    }\n    removeBrackets(editSource) {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        const model = this._editor.getModel();\n        this._editor.getSelections().forEach((selection) => {\n            const position = selection.getPosition();\n            let brackets = model.bracketPairs.matchBracket(position);\n            if (!brackets) {\n                brackets = model.bracketPairs.findEnclosingBrackets(position);\n            }\n            if (brackets) {\n                this._editor.pushUndoStop();\n                this._editor.executeEdits(editSource, [\n                    { range: brackets[0], text: '' },\n                    { range: brackets[1], text: '' }\n                ]);\n                this._editor.pushUndoStop();\n            }\n        });\n    }\n    _updateBrackets() {\n        if (this._matchBrackets === 'never') {\n            return;\n        }\n        this._recomputeBrackets();\n        const newDecorations = [];\n        let newDecorationsLen = 0;\n        for (const bracketData of this._lastBracketsData) {\n            const brackets = bracketData.brackets;\n            if (brackets) {\n                newDecorations[newDecorationsLen++] = { range: brackets[0], options: bracketData.options };\n                newDecorations[newDecorationsLen++] = { range: brackets[1], options: bracketData.options };\n            }\n        }\n        this._decorations.set(newDecorations);\n    }\n    _recomputeBrackets() {\n        if (!this._editor.hasModel() || !this._editor.hasWidgetFocus()) {\n            // no model or no focus => no brackets!\n            this._lastBracketsData = [];\n            this._lastVersionId = 0;\n            return;\n        }\n        const selections = this._editor.getSelections();\n        if (selections.length > 100) {\n            // no bracket matching for high numbers of selections\n            this._lastBracketsData = [];\n            this._lastVersionId = 0;\n            return;\n        }\n        const model = this._editor.getModel();\n        const versionId = model.getVersionId();\n        let previousData = [];\n        if (this._lastVersionId === versionId) {\n            // use the previous data only if the model is at the same version id\n            previousData = this._lastBracketsData;\n        }\n        const positions = [];\n        let positionsLen = 0;\n        for (let i = 0, len = selections.length; i < len; i++) {\n            const selection = selections[i];\n            if (selection.isEmpty()) {\n                // will bracket match a cursor only if the selection is collapsed\n                positions[positionsLen++] = selection.getStartPosition();\n            }\n        }\n        // sort positions for `previousData` cache hits\n        if (positions.length > 1) {\n            positions.sort(Position.compare);\n        }\n        const newData = [];\n        let newDataLen = 0;\n        let previousIndex = 0;\n        const previousLen = previousData.length;\n        for (let i = 0, len = positions.length; i < len; i++) {\n            const position = positions[i];\n            while (previousIndex < previousLen && previousData[previousIndex].position.isBefore(position)) {\n                previousIndex++;\n            }\n            if (previousIndex < previousLen && previousData[previousIndex].position.equals(position)) {\n                newData[newDataLen++] = previousData[previousIndex];\n            }\n            else {\n                let brackets = model.bracketPairs.matchBracket(position, 20 /* give at most 20ms to compute */);\n                let options = BracketMatchingController._DECORATION_OPTIONS_WITH_OVERVIEW_RULER;\n                if (!brackets && this._matchBrackets === 'always') {\n                    brackets = model.bracketPairs.findEnclosingBrackets(position, 20 /* give at most 20ms to compute */);\n                    options = BracketMatchingController._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER;\n                }\n                newData[newDataLen++] = new BracketsData(position, brackets, options);\n            }\n        }\n        this._lastBracketsData = newData;\n        this._lastVersionId = versionId;\n    }\n}\nBracketMatchingController.ID = 'editor.contrib.bracketMatchingController';\nBracketMatchingController._DECORATION_OPTIONS_WITH_OVERVIEW_RULER = ModelDecorationOptions.register({\n    description: 'bracket-match-overview',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    className: 'bracket-match',\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerBracketMatchForeground),\n        position: OverviewRulerLane.Center\n    }\n});\nBracketMatchingController._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER = ModelDecorationOptions.register({\n    description: 'bracket-match-no-overview',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    className: 'bracket-match'\n});\nregisterEditorContribution(BracketMatchingController.ID, BracketMatchingController, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nregisterEditorAction(SelectToBracketAction);\nregisterEditorAction(JumpToBracketAction);\nregisterEditorAction(RemoveBracketsAction);\n// Go to menu\nMenuRegistry.appendMenuItem(MenuId.MenubarGoMenu, {\n    group: '5_infile_nav',\n    command: {\n        id: 'editor.action.jumpToBracket',\n        title: nls.localize({ key: 'miGoToBracket', comment: ['&& denotes a mnemonic'] }, \"Go to &&Bracket\")\n    },\n    order: 2\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class MoveCaretCommand {\n    constructor(selection, isMovingLeft) {\n        this._selection = selection;\n        this._isMovingLeft = isMovingLeft;\n    }\n    getEditOperations(model, builder) {\n        if (this._selection.startLineNumber !== this._selection.endLineNumber || this._selection.isEmpty()) {\n            return;\n        }\n        const lineNumber = this._selection.startLineNumber;\n        const startColumn = this._selection.startColumn;\n        const endColumn = this._selection.endColumn;\n        if (this._isMovingLeft && startColumn === 1) {\n            return;\n        }\n        if (!this._isMovingLeft && endColumn === model.getLineMaxColumn(lineNumber)) {\n            return;\n        }\n        if (this._isMovingLeft) {\n            const rangeBefore = new Range(lineNumber, startColumn - 1, lineNumber, startColumn);\n            const charBefore = model.getValueInRange(rangeBefore);\n            builder.addEditOperation(rangeBefore, null);\n            builder.addEditOperation(new Range(lineNumber, endColumn, lineNumber, endColumn), charBefore);\n        }\n        else {\n            const rangeAfter = new Range(lineNumber, endColumn, lineNumber, endColumn + 1);\n            const charAfter = model.getValueInRange(rangeAfter);\n            builder.addEditOperation(rangeAfter, null);\n            builder.addEditOperation(new Range(lineNumber, startColumn, lineNumber, startColumn), charAfter);\n        }\n    }\n    computeCursorState(model, helper) {\n        if (this._isMovingLeft) {\n            return new Selection(this._selection.startLineNumber, this._selection.startColumn - 1, this._selection.endLineNumber, this._selection.endColumn - 1);\n        }\n        else {\n            return new Selection(this._selection.startLineNumber, this._selection.startColumn + 1, this._selection.endLineNumber, this._selection.endColumn + 1);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { MoveCaretCommand } from './moveCaretCommand.js';\nimport * as nls from '../../../../nls.js';\nclass MoveCaretAction extends EditorAction {\n    constructor(left, opts) {\n        super(opts);\n        this.left = left;\n    }\n    run(accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const commands = [];\n        const selections = editor.getSelections();\n        for (const selection of selections) {\n            commands.push(new MoveCaretCommand(selection, this.left));\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nclass MoveCaretLeftAction extends MoveCaretAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.moveCarretLeftAction',\n            label: nls.localize('caret.moveLeft', \"Move Selected Text Left\"),\n            alias: 'Move Selected Text Left',\n            precondition: EditorContextKeys.writable\n        });\n    }\n}\nclass MoveCaretRightAction extends MoveCaretAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.moveCarretRightAction',\n            label: nls.localize('caret.moveRight', \"Move Selected Text Right\"),\n            alias: 'Move Selected Text Right',\n            precondition: EditorContextKeys.writable\n        });\n    }\n}\nregisterEditorAction(MoveCaretLeftAction);\nregisterEditorAction(MoveCaretRightAction);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { ReplaceCommand } from '../../../common/commands/replaceCommand.js';\nimport { MoveOperations } from '../../../common/cursor/cursorMoveOperations.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport * as nls from '../../../../nls.js';\nclass TransposeLettersAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.transposeLetters',\n            label: nls.localize('transposeLetters.label', \"Transpose Letters\"),\n            alias: 'Transpose Letters',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: {\n                    primary: 256 /* KeyMod.WinCtrl */ | 50 /* KeyCode.KeyT */\n                },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const model = editor.getModel();\n        const commands = [];\n        const selections = editor.getSelections();\n        for (const selection of selections) {\n            if (!selection.isEmpty()) {\n                continue;\n            }\n            const lineNumber = selection.startLineNumber;\n            const column = selection.startColumn;\n            const lastColumn = model.getLineMaxColumn(lineNumber);\n            if (lineNumber === 1 && (column === 1 || (column === 2 && lastColumn === 2))) {\n                // at beginning of file, nothing to do\n                continue;\n            }\n            // handle special case: when at end of line, transpose left two chars\n            // otherwise, transpose left and right chars\n            const endPosition = (column === lastColumn) ?\n                selection.getPosition() :\n                MoveOperations.rightPosition(model, selection.getPosition().lineNumber, selection.getPosition().column);\n            const middlePosition = MoveOperations.leftPosition(model, endPosition);\n            const beginPosition = MoveOperations.leftPosition(model, middlePosition);\n            const leftChar = model.getValueInRange(Range.fromPositions(beginPosition, middlePosition));\n            const rightChar = model.getValueInRange(Range.fromPositions(middlePosition, endPosition));\n            const replaceRange = Range.fromPositions(beginPosition, endPosition);\n            commands.push(new ReplaceCommand(replaceRange, rightChar + leftChar));\n        }\n        if (commands.length > 0) {\n            editor.pushUndoStop();\n            editor.executeCommands(this.id, commands);\n            editor.pushUndoStop();\n        }\n    }\n}\nregisterEditorAction(TransposeLettersAction);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as browser from '../../../../base/browser/browser.js';\nimport { getActiveDocument } from '../../../../base/browser/dom.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { CopyOptions, InMemoryClipboardMetadataManager } from '../../../browser/controller/textAreaInput.js';\nimport { EditorAction, MultiCommand, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { CopyPasteController } from '../../dropOrPasteInto/browser/copyPasteController.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId, MenuRegistry } from '../../../../platform/actions/common/actions.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nconst CLIPBOARD_CONTEXT_MENU_GROUP = '9_cutcopypaste';\nconst supportsCut = (platform.isNative || document.queryCommandSupported('cut'));\nconst supportsCopy = (platform.isNative || document.queryCommandSupported('copy'));\n// Firefox only supports navigator.clipboard.readText() in browser extensions.\n// See https://developer.mozilla.org/en-US/docs/Web/API/Clipboard/readText#Browser_compatibility\n// When loading over http, navigator.clipboard can be undefined. See https://github.com/microsoft/monaco-editor/issues/2313\nconst supportsPaste = (typeof navigator.clipboard === 'undefined' || browser.isFirefox) ? document.queryCommandSupported('paste') : true;\nfunction registerCommand(command) {\n    command.register();\n    return command;\n}\nexport const CutAction = supportsCut ? registerCommand(new MultiCommand({\n    id: 'editor.action.clipboardCutAction',\n    precondition: undefined,\n    kbOpts: (\n    // Do not bind cut keybindings in the browser,\n    // since browsers do that for us and it avoids security prompts\n    platform.isNative ? {\n        primary: 2048 /* KeyMod.CtrlCmd */ | 54 /* KeyCode.KeyX */,\n        win: { primary: 2048 /* KeyMod.CtrlCmd */ | 54 /* KeyCode.KeyX */, secondary: [1024 /* KeyMod.Shift */ | 20 /* KeyCode.Delete */] },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n    } : undefined),\n    menuOpts: [{\n            menuId: MenuId.MenubarEditMenu,\n            group: '2_ccp',\n            title: nls.localize({ key: 'miCut', comment: ['&& denotes a mnemonic'] }, \"Cu&&t\"),\n            order: 1\n        }, {\n            menuId: MenuId.EditorContext,\n            group: CLIPBOARD_CONTEXT_MENU_GROUP,\n            title: nls.localize('actions.clipboard.cutLabel', \"Cut\"),\n            when: EditorContextKeys.writable,\n            order: 1,\n        }, {\n            menuId: MenuId.CommandPalette,\n            group: '',\n            title: nls.localize('actions.clipboard.cutLabel', \"Cut\"),\n            order: 1\n        }, {\n            menuId: MenuId.SimpleEditorContext,\n            group: CLIPBOARD_CONTEXT_MENU_GROUP,\n            title: nls.localize('actions.clipboard.cutLabel', \"Cut\"),\n            when: EditorContextKeys.writable,\n            order: 1,\n        }]\n})) : undefined;\nexport const CopyAction = supportsCopy ? registerCommand(new MultiCommand({\n    id: 'editor.action.clipboardCopyAction',\n    precondition: undefined,\n    kbOpts: (\n    // Do not bind copy keybindings in the browser,\n    // since browsers do that for us and it avoids security prompts\n    platform.isNative ? {\n        primary: 2048 /* KeyMod.CtrlCmd */ | 33 /* KeyCode.KeyC */,\n        win: { primary: 2048 /* KeyMod.CtrlCmd */ | 33 /* KeyCode.KeyC */, secondary: [2048 /* KeyMod.CtrlCmd */ | 19 /* KeyCode.Insert */] },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n    } : undefined),\n    menuOpts: [{\n            menuId: MenuId.MenubarEditMenu,\n            group: '2_ccp',\n            title: nls.localize({ key: 'miCopy', comment: ['&& denotes a mnemonic'] }, \"&&Copy\"),\n            order: 2\n        }, {\n            menuId: MenuId.EditorContext,\n            group: CLIPBOARD_CONTEXT_MENU_GROUP,\n            title: nls.localize('actions.clipboard.copyLabel', \"Copy\"),\n            order: 2,\n        }, {\n            menuId: MenuId.CommandPalette,\n            group: '',\n            title: nls.localize('actions.clipboard.copyLabel', \"Copy\"),\n            order: 1\n        }, {\n            menuId: MenuId.SimpleEditorContext,\n            group: CLIPBOARD_CONTEXT_MENU_GROUP,\n            title: nls.localize('actions.clipboard.copyLabel', \"Copy\"),\n            order: 2,\n        }]\n})) : undefined;\nMenuRegistry.appendMenuItem(MenuId.MenubarEditMenu, { submenu: MenuId.MenubarCopy, title: nls.localize2('copy as', \"Copy As\"), group: '2_ccp', order: 3 });\nMenuRegistry.appendMenuItem(MenuId.EditorContext, { submenu: MenuId.EditorContextCopy, title: nls.localize2('copy as', \"Copy As\"), group: CLIPBOARD_CONTEXT_MENU_GROUP, order: 3 });\nMenuRegistry.appendMenuItem(MenuId.EditorContext, { submenu: MenuId.EditorContextShare, title: nls.localize2('share', \"Share\"), group: '11_share', order: -1, when: ContextKeyExpr.and(ContextKeyExpr.notEquals('resourceScheme', 'output'), EditorContextKeys.editorTextFocus) });\nMenuRegistry.appendMenuItem(MenuId.EditorTitleContext, { submenu: MenuId.EditorTitleContextShare, title: nls.localize2('share', \"Share\"), group: '11_share', order: -1 });\nMenuRegistry.appendMenuItem(MenuId.ExplorerContext, { submenu: MenuId.ExplorerContextShare, title: nls.localize2('share', \"Share\"), group: '11_share', order: -1 });\nexport const PasteAction = supportsPaste ? registerCommand(new MultiCommand({\n    id: 'editor.action.clipboardPasteAction',\n    precondition: undefined,\n    kbOpts: (\n    // Do not bind paste keybindings in the browser,\n    // since browsers do that for us and it avoids security prompts\n    platform.isNative ? {\n        primary: 2048 /* KeyMod.CtrlCmd */ | 52 /* KeyCode.KeyV */,\n        win: { primary: 2048 /* KeyMod.CtrlCmd */ | 52 /* KeyCode.KeyV */, secondary: [1024 /* KeyMod.Shift */ | 19 /* KeyCode.Insert */] },\n        linux: { primary: 2048 /* KeyMod.CtrlCmd */ | 52 /* KeyCode.KeyV */, secondary: [1024 /* KeyMod.Shift */ | 19 /* KeyCode.Insert */] },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n    } : undefined),\n    menuOpts: [{\n            menuId: MenuId.MenubarEditMenu,\n            group: '2_ccp',\n            title: nls.localize({ key: 'miPaste', comment: ['&& denotes a mnemonic'] }, \"&&Paste\"),\n            order: 4\n        }, {\n            menuId: MenuId.EditorContext,\n            group: CLIPBOARD_CONTEXT_MENU_GROUP,\n            title: nls.localize('actions.clipboard.pasteLabel', \"Paste\"),\n            when: EditorContextKeys.writable,\n            order: 4,\n        }, {\n            menuId: MenuId.CommandPalette,\n            group: '',\n            title: nls.localize('actions.clipboard.pasteLabel', \"Paste\"),\n            order: 1\n        }, {\n            menuId: MenuId.SimpleEditorContext,\n            group: CLIPBOARD_CONTEXT_MENU_GROUP,\n            title: nls.localize('actions.clipboard.pasteLabel', \"Paste\"),\n            when: EditorContextKeys.writable,\n            order: 4,\n        }]\n})) : undefined;\nclass ExecCommandCopyWithSyntaxHighlightingAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.clipboardCopyWithSyntaxHighlightingAction',\n            label: nls.localize('actions.clipboard.copyWithSyntaxHighlightingLabel', \"Copy With Syntax Highlighting\"),\n            alias: 'Copy With Syntax Highlighting',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const emptySelectionClipboard = editor.getOption(37 /* EditorOption.emptySelectionClipboard */);\n        if (!emptySelectionClipboard && editor.getSelection().isEmpty()) {\n            return;\n        }\n        CopyOptions.forceCopyWithSyntaxHighlighting = true;\n        editor.focus();\n        editor.getContainerDomNode().ownerDocument.execCommand('copy');\n        CopyOptions.forceCopyWithSyntaxHighlighting = false;\n    }\n}\nfunction registerExecCommandImpl(target, browserCommand) {\n    if (!target) {\n        return;\n    }\n    // 1. handle case when focus is in editor.\n    target.addImplementation(10000, 'code-editor', (accessor, args) => {\n        // Only if editor text focus (i.e. not if editor has widget focus).\n        const focusedEditor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n        if (focusedEditor && focusedEditor.hasTextFocus()) {\n            // Do not execute if there is no selection and empty selection clipboard is off\n            const emptySelectionClipboard = focusedEditor.getOption(37 /* EditorOption.emptySelectionClipboard */);\n            const selection = focusedEditor.getSelection();\n            if (selection && selection.isEmpty() && !emptySelectionClipboard) {\n                return true;\n            }\n            focusedEditor.getContainerDomNode().ownerDocument.execCommand(browserCommand);\n            return true;\n        }\n        return false;\n    });\n    // 2. (default) handle case when focus is somewhere else.\n    target.addImplementation(0, 'generic-dom', (accessor, args) => {\n        getActiveDocument().execCommand(browserCommand);\n        return true;\n    });\n}\nregisterExecCommandImpl(CutAction, 'cut');\nregisterExecCommandImpl(CopyAction, 'copy');\nif (PasteAction) {\n    // 1. Paste: handle case when focus is in editor.\n    PasteAction.addImplementation(10000, 'code-editor', (accessor, args) => {\n        var _a, _b;\n        const codeEditorService = accessor.get(ICodeEditorService);\n        const clipboardService = accessor.get(IClipboardService);\n        // Only if editor text focus (i.e. not if editor has widget focus).\n        const focusedEditor = codeEditorService.getFocusedCodeEditor();\n        if (focusedEditor && focusedEditor.hasTextFocus()) {\n            const result = focusedEditor.getContainerDomNode().ownerDocument.execCommand('paste');\n            if (result) {\n                return (_b = (_a = CopyPasteController.get(focusedEditor)) === null || _a === void 0 ? void 0 : _a.finishedPaste()) !== null && _b !== void 0 ? _b : Promise.resolve();\n            }\n            else if (platform.isWeb) {\n                // Use the clipboard service if document.execCommand('paste') was not successful\n                return (async () => {\n                    const clipboardText = await clipboardService.readText();\n                    if (clipboardText !== '') {\n                        const metadata = InMemoryClipboardMetadataManager.INSTANCE.get(clipboardText);\n                        let pasteOnNewLine = false;\n                        let multicursorText = null;\n                        let mode = null;\n                        if (metadata) {\n                            pasteOnNewLine = (focusedEditor.getOption(37 /* EditorOption.emptySelectionClipboard */) && !!metadata.isFromEmptySelection);\n                            multicursorText = (typeof metadata.multicursorText !== 'undefined' ? metadata.multicursorText : null);\n                            mode = metadata.mode;\n                        }\n                        focusedEditor.trigger('keyboard', \"paste\" /* Handler.Paste */, {\n                            text: clipboardText,\n                            pasteOnNewLine,\n                            multicursorText,\n                            mode\n                        });\n                    }\n                })();\n            }\n            return true;\n        }\n        return false;\n    });\n    // 2. Paste: (default) handle case when focus is somewhere else.\n    PasteAction.addImplementation(0, 'generic-dom', (accessor, args) => {\n        getActiveDocument().execCommand('paste');\n        return true;\n    });\n}\nif (supportsCopy) {\n    registerEditorAction(ExecCommandCopyWithSyntaxHighlightingAction);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { coalesce, equals, isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { illegalArgument, isCancellationError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IBulkEditService } from '../../../browser/services/bulkEditService.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { TextModelCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport * as nls from '../../../../nls.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { Progress } from '../../../../platform/progress/common/progress.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { CodeActionItem, CodeActionKind, CodeActionTriggerSource, filtersAction, mayIncludeActionsOfKind } from '../common/types.js';\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nexport const codeActionCommandId = 'editor.action.codeAction';\nexport const quickFixCommandId = 'editor.action.quickFix';\nexport const autoFixCommandId = 'editor.action.autoFix';\nexport const refactorCommandId = 'editor.action.refactor';\nexport const sourceActionCommandId = 'editor.action.sourceAction';\nexport const organizeImportsCommandId = 'editor.action.organizeImports';\nexport const fixAllCommandId = 'editor.action.fixAll';\nclass ManagedCodeActionSet extends Disposable {\n    static codeActionsPreferredComparator(a, b) {\n        if (a.isPreferred && !b.isPreferred) {\n            return -1;\n        }\n        else if (!a.isPreferred && b.isPreferred) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    static codeActionsComparator({ action: a }, { action: b }) {\n        if (a.isAI && !b.isAI) {\n            return 1;\n        }\n        else if (!a.isAI && b.isAI) {\n            return -1;\n        }\n        if (isNonEmptyArray(a.diagnostics)) {\n            return isNonEmptyArray(b.diagnostics) ? ManagedCodeActionSet.codeActionsPreferredComparator(a, b) : -1;\n        }\n        else if (isNonEmptyArray(b.diagnostics)) {\n            return 1;\n        }\n        else {\n            return ManagedCodeActionSet.codeActionsPreferredComparator(a, b); // both have no diagnostics\n        }\n    }\n    constructor(actions, documentation, disposables) {\n        super();\n        this.documentation = documentation;\n        this._register(disposables);\n        this.allActions = [...actions].sort(ManagedCodeActionSet.codeActionsComparator);\n        this.validActions = this.allActions.filter(({ action }) => !action.disabled);\n    }\n    get hasAutoFix() {\n        return this.validActions.some(({ action: fix }) => !!fix.kind && CodeActionKind.QuickFix.contains(new HierarchicalKind(fix.kind)) && !!fix.isPreferred);\n    }\n    get hasAIFix() {\n        return this.validActions.some(({ action: fix }) => !!fix.isAI);\n    }\n    get allAIFixes() {\n        return this.validActions.every(({ action: fix }) => !!fix.isAI);\n    }\n}\nconst emptyCodeActionsResponse = { actions: [], documentation: undefined };\nexport async function getCodeActions(registry, model, rangeOrSelection, trigger, progress, token) {\n    var _a;\n    const filter = trigger.filter || {};\n    const notebookFilter = {\n        ...filter,\n        excludes: [...(filter.excludes || []), CodeActionKind.Notebook],\n    };\n    const codeActionContext = {\n        only: (_a = filter.include) === null || _a === void 0 ? void 0 : _a.value,\n        trigger: trigger.type,\n    };\n    const cts = new TextModelCancellationTokenSource(model, token);\n    // if the trigger is auto (autosave, lightbulb, etc), we should exclude notebook codeActions\n    const excludeNotebookCodeActions = (trigger.type === 2 /* languages.CodeActionTriggerType.Auto */);\n    const providers = getCodeActionProviders(registry, model, (excludeNotebookCodeActions) ? notebookFilter : filter);\n    const disposables = new DisposableStore();\n    const promises = providers.map(async (provider) => {\n        try {\n            progress.report(provider);\n            const providedCodeActions = await provider.provideCodeActions(model, rangeOrSelection, codeActionContext, cts.token);\n            if (providedCodeActions) {\n                disposables.add(providedCodeActions);\n            }\n            if (cts.token.isCancellationRequested) {\n                return emptyCodeActionsResponse;\n            }\n            const filteredActions = ((providedCodeActions === null || providedCodeActions === void 0 ? void 0 : providedCodeActions.actions) || []).filter(action => action && filtersAction(filter, action));\n            const documentation = getDocumentationFromProvider(provider, filteredActions, filter.include);\n            return {\n                actions: filteredActions.map(action => new CodeActionItem(action, provider)),\n                documentation\n            };\n        }\n        catch (err) {\n            if (isCancellationError(err)) {\n                throw err;\n            }\n            onUnexpectedExternalError(err);\n            return emptyCodeActionsResponse;\n        }\n    });\n    const listener = registry.onDidChange(() => {\n        const newProviders = registry.all(model);\n        if (!equals(newProviders, providers)) {\n            cts.cancel();\n        }\n    });\n    try {\n        const actions = await Promise.all(promises);\n        const allActions = actions.map(x => x.actions).flat();\n        const allDocumentation = [\n            ...coalesce(actions.map(x => x.documentation)),\n            ...getAdditionalDocumentationForShowingActions(registry, model, trigger, allActions)\n        ];\n        return new ManagedCodeActionSet(allActions, allDocumentation, disposables);\n    }\n    finally {\n        listener.dispose();\n        cts.dispose();\n    }\n}\nfunction getCodeActionProviders(registry, model, filter) {\n    return registry.all(model)\n        // Don't include providers that we know will not return code actions of interest\n        .filter(provider => {\n        if (!provider.providedCodeActionKinds) {\n            // We don't know what type of actions this provider will return.\n            return true;\n        }\n        return provider.providedCodeActionKinds.some(kind => mayIncludeActionsOfKind(filter, new HierarchicalKind(kind)));\n    });\n}\nfunction* getAdditionalDocumentationForShowingActions(registry, model, trigger, actionsToShow) {\n    var _a, _b, _c;\n    if (model && actionsToShow.length) {\n        for (const provider of registry.all(model)) {\n            if (provider._getAdditionalMenuItems) {\n                yield* (_a = provider._getAdditionalMenuItems) === null || _a === void 0 ? void 0 : _a.call(provider, { trigger: trigger.type, only: (_c = (_b = trigger.filter) === null || _b === void 0 ? void 0 : _b.include) === null || _c === void 0 ? void 0 : _c.value }, actionsToShow.map(item => item.action));\n            }\n        }\n    }\n}\nfunction getDocumentationFromProvider(provider, providedCodeActions, only) {\n    if (!provider.documentation) {\n        return undefined;\n    }\n    const documentation = provider.documentation.map(entry => ({ kind: new HierarchicalKind(entry.kind), command: entry.command }));\n    if (only) {\n        let currentBest;\n        for (const entry of documentation) {\n            if (entry.kind.contains(only)) {\n                if (!currentBest) {\n                    currentBest = entry;\n                }\n                else {\n                    // Take best match\n                    if (currentBest.kind.contains(entry.kind)) {\n                        currentBest = entry;\n                    }\n                }\n            }\n        }\n        if (currentBest) {\n            return currentBest === null || currentBest === void 0 ? void 0 : currentBest.command;\n        }\n    }\n    // Otherwise, check to see if any of the provided actions match.\n    for (const action of providedCodeActions) {\n        if (!action.kind) {\n            continue;\n        }\n        for (const entry of documentation) {\n            if (entry.kind.contains(new HierarchicalKind(action.kind))) {\n                return entry.command;\n            }\n        }\n    }\n    return undefined;\n}\nexport var ApplyCodeActionReason;\n(function (ApplyCodeActionReason) {\n    ApplyCodeActionReason[\"OnSave\"] = \"onSave\";\n    ApplyCodeActionReason[\"FromProblemsView\"] = \"fromProblemsView\";\n    ApplyCodeActionReason[\"FromCodeActions\"] = \"fromCodeActions\";\n    ApplyCodeActionReason[\"FromAILightbulb\"] = \"fromAILightbulb\"; // direct invocation when clicking on the AI lightbulb\n})(ApplyCodeActionReason || (ApplyCodeActionReason = {}));\nexport async function applyCodeAction(accessor, item, codeActionReason, options, token = CancellationToken.None) {\n    var _a;\n    const bulkEditService = accessor.get(IBulkEditService);\n    const commandService = accessor.get(ICommandService);\n    const telemetryService = accessor.get(ITelemetryService);\n    const notificationService = accessor.get(INotificationService);\n    telemetryService.publicLog2('codeAction.applyCodeAction', {\n        codeActionTitle: item.action.title,\n        codeActionKind: item.action.kind,\n        codeActionIsPreferred: !!item.action.isPreferred,\n        reason: codeActionReason,\n    });\n    await item.resolve(token);\n    if (token.isCancellationRequested) {\n        return;\n    }\n    if ((_a = item.action.edit) === null || _a === void 0 ? void 0 : _a.edits.length) {\n        const result = await bulkEditService.apply(item.action.edit, {\n            editor: options === null || options === void 0 ? void 0 : options.editor,\n            label: item.action.title,\n            quotableLabel: item.action.title,\n            code: 'undoredo.codeAction',\n            respectAutoSaveConfig: codeActionReason !== ApplyCodeActionReason.OnSave,\n            showPreview: options === null || options === void 0 ? void 0 : options.preview,\n        });\n        if (!result.isApplied) {\n            return;\n        }\n    }\n    if (item.action.command) {\n        try {\n            await commandService.executeCommand(item.action.command.id, ...(item.action.command.arguments || []));\n        }\n        catch (err) {\n            const message = asMessage(err);\n            notificationService.error(typeof message === 'string'\n                ? message\n                : nls.localize('applyCodeActionFailed', \"An unknown error occurred while applying the code action\"));\n        }\n    }\n}\nfunction asMessage(err) {\n    if (typeof err === 'string') {\n        return err;\n    }\n    else if (err instanceof Error && typeof err.message === 'string') {\n        return err.message;\n    }\n    else {\n        return undefined;\n    }\n}\nCommandsRegistry.registerCommand('_executeCodeActionProvider', async function (accessor, resource, rangeOrSelection, kind, itemResolveCount) {\n    if (!(resource instanceof URI)) {\n        throw illegalArgument();\n    }\n    const { codeActionProvider } = accessor.get(ILanguageFeaturesService);\n    const model = accessor.get(IModelService).getModel(resource);\n    if (!model) {\n        throw illegalArgument();\n    }\n    const validatedRangeOrSelection = Selection.isISelection(rangeOrSelection)\n        ? Selection.liftSelection(rangeOrSelection)\n        : Range.isIRange(rangeOrSelection)\n            ? model.validateRange(rangeOrSelection)\n            : undefined;\n    if (!validatedRangeOrSelection) {\n        throw illegalArgument();\n    }\n    const include = typeof kind === 'string' ? new HierarchicalKind(kind) : undefined;\n    const codeActionSet = await getCodeActions(codeActionProvider, model, validatedRangeOrSelection, { type: 1 /* languages.CodeActionTriggerType.Invoke */, triggerAction: CodeActionTriggerSource.Default, filter: { includeSourceActions: true, include } }, Progress.None, CancellationToken.None);\n    const resolving = [];\n    const resolveCount = Math.min(codeActionSet.validActions.length, typeof itemResolveCount === 'number' ? itemResolveCount : 0);\n    for (let i = 0; i < resolveCount; i++) {\n        resolving.push(codeActionSet.validActions[i].resolve(CancellationToken.None));\n    }\n    try {\n        await Promise.all(resolving);\n        return codeActionSet.validActions.map(item => item.action);\n    }\n    finally {\n        setTimeout(() => codeActionSet.dispose(), 100);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nimport { escapeRegExpCharacters } from '../../../../base/common/strings.js';\nimport { EditorAction, EditorCommand } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { autoFixCommandId, codeActionCommandId, fixAllCommandId, organizeImportsCommandId, quickFixCommandId, refactorCommandId, sourceActionCommandId } from './codeAction.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { CodeActionCommandArgs, CodeActionKind, CodeActionTriggerSource } from '../common/types.js';\nimport { CodeActionController } from './codeActionController.js';\nimport { SUPPORTED_CODE_ACTIONS } from './codeActionModel.js';\nfunction contextKeyForSupportedActions(kind) {\n    return ContextKeyExpr.regex(SUPPORTED_CODE_ACTIONS.keys()[0], new RegExp('(\\\\s|^)' + escapeRegExpCharacters(kind.value) + '\\\\b'));\n}\nconst argsSchema = {\n    type: 'object',\n    defaultSnippets: [{ body: { kind: '' } }],\n    properties: {\n        'kind': {\n            type: 'string',\n            description: nls.localize('args.schema.kind', \"Kind of the code action to run.\"),\n        },\n        'apply': {\n            type: 'string',\n            description: nls.localize('args.schema.apply', \"Controls when the returned actions are applied.\"),\n            default: \"ifSingle\" /* CodeActionAutoApply.IfSingle */,\n            enum: [\"first\" /* CodeActionAutoApply.First */, \"ifSingle\" /* CodeActionAutoApply.IfSingle */, \"never\" /* CodeActionAutoApply.Never */],\n            enumDescriptions: [\n                nls.localize('args.schema.apply.first', \"Always apply the first returned code action.\"),\n                nls.localize('args.schema.apply.ifSingle', \"Apply the first returned code action if it is the only one.\"),\n                nls.localize('args.schema.apply.never', \"Do not apply the returned code actions.\"),\n            ]\n        },\n        'preferred': {\n            type: 'boolean',\n            default: false,\n            description: nls.localize('args.schema.preferred', \"Controls if only preferred code actions should be returned.\"),\n        }\n    }\n};\nfunction triggerCodeActionsForEditorSelection(editor, notAvailableMessage, filter, autoApply, triggerAction = CodeActionTriggerSource.Default) {\n    if (editor.hasModel()) {\n        const controller = CodeActionController.get(editor);\n        controller === null || controller === void 0 ? void 0 : controller.manualTriggerAtCurrentPosition(notAvailableMessage, triggerAction, filter, autoApply);\n    }\n}\nexport class QuickFixAction extends EditorAction {\n    constructor() {\n        super({\n            id: quickFixCommandId,\n            label: nls.localize('quickfix.trigger.label', \"Quick Fix...\"),\n            alias: 'Quick Fix...',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 89 /* KeyCode.Period */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        return triggerCodeActionsForEditorSelection(editor, nls.localize('editor.action.quickFix.noneMessage', \"No code actions available\"), undefined, undefined, CodeActionTriggerSource.QuickFix);\n    }\n}\nexport class CodeActionCommand extends EditorCommand {\n    constructor() {\n        super({\n            id: codeActionCommandId,\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\n            metadata: {\n                description: 'Trigger a code action',\n                args: [{ name: 'args', schema: argsSchema, }]\n            }\n        });\n    }\n    runEditorCommand(_accessor, editor, userArgs) {\n        const args = CodeActionCommandArgs.fromUser(userArgs, {\n            kind: HierarchicalKind.Empty,\n            apply: \"ifSingle\" /* CodeActionAutoApply.IfSingle */,\n        });\n        return triggerCodeActionsForEditorSelection(editor, typeof (userArgs === null || userArgs === void 0 ? void 0 : userArgs.kind) === 'string'\n            ? args.preferred\n                ? nls.localize('editor.action.codeAction.noneMessage.preferred.kind', \"No preferred code actions for '{0}' available\", userArgs.kind)\n                : nls.localize('editor.action.codeAction.noneMessage.kind', \"No code actions for '{0}' available\", userArgs.kind)\n            : args.preferred\n                ? nls.localize('editor.action.codeAction.noneMessage.preferred', \"No preferred code actions available\")\n                : nls.localize('editor.action.codeAction.noneMessage', \"No code actions available\"), {\n            include: args.kind,\n            includeSourceActions: true,\n            onlyIncludePreferredActions: args.preferred,\n        }, args.apply);\n    }\n}\nexport class RefactorAction extends EditorAction {\n    constructor() {\n        super({\n            id: refactorCommandId,\n            label: nls.localize('refactor.label', \"Refactor...\"),\n            alias: 'Refactor...',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 48 /* KeyCode.KeyR */,\n                mac: {\n                    primary: 256 /* KeyMod.WinCtrl */ | 1024 /* KeyMod.Shift */ | 48 /* KeyCode.KeyR */\n                },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            contextMenuOpts: {\n                group: '1_modification',\n                order: 2,\n                when: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.Refactor)),\n            },\n            metadata: {\n                description: 'Refactor...',\n                args: [{ name: 'args', schema: argsSchema }]\n            }\n        });\n    }\n    run(_accessor, editor, userArgs) {\n        const args = CodeActionCommandArgs.fromUser(userArgs, {\n            kind: CodeActionKind.Refactor,\n            apply: \"never\" /* CodeActionAutoApply.Never */\n        });\n        return triggerCodeActionsForEditorSelection(editor, typeof (userArgs === null || userArgs === void 0 ? void 0 : userArgs.kind) === 'string'\n            ? args.preferred\n                ? nls.localize('editor.action.refactor.noneMessage.preferred.kind', \"No preferred refactorings for '{0}' available\", userArgs.kind)\n                : nls.localize('editor.action.refactor.noneMessage.kind', \"No refactorings for '{0}' available\", userArgs.kind)\n            : args.preferred\n                ? nls.localize('editor.action.refactor.noneMessage.preferred', \"No preferred refactorings available\")\n                : nls.localize('editor.action.refactor.noneMessage', \"No refactorings available\"), {\n            include: CodeActionKind.Refactor.contains(args.kind) ? args.kind : HierarchicalKind.None,\n            onlyIncludePreferredActions: args.preferred\n        }, args.apply, CodeActionTriggerSource.Refactor);\n    }\n}\nexport class SourceAction extends EditorAction {\n    constructor() {\n        super({\n            id: sourceActionCommandId,\n            label: nls.localize('source.label', \"Source Action...\"),\n            alias: 'Source Action...',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\n            contextMenuOpts: {\n                group: '1_modification',\n                order: 2.1,\n                when: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.Source)),\n            },\n            metadata: {\n                description: 'Source Action...',\n                args: [{ name: 'args', schema: argsSchema }]\n            }\n        });\n    }\n    run(_accessor, editor, userArgs) {\n        const args = CodeActionCommandArgs.fromUser(userArgs, {\n            kind: CodeActionKind.Source,\n            apply: \"never\" /* CodeActionAutoApply.Never */\n        });\n        return triggerCodeActionsForEditorSelection(editor, typeof (userArgs === null || userArgs === void 0 ? void 0 : userArgs.kind) === 'string'\n            ? args.preferred\n                ? nls.localize('editor.action.source.noneMessage.preferred.kind', \"No preferred source actions for '{0}' available\", userArgs.kind)\n                : nls.localize('editor.action.source.noneMessage.kind', \"No source actions for '{0}' available\", userArgs.kind)\n            : args.preferred\n                ? nls.localize('editor.action.source.noneMessage.preferred', \"No preferred source actions available\")\n                : nls.localize('editor.action.source.noneMessage', \"No source actions available\"), {\n            include: CodeActionKind.Source.contains(args.kind) ? args.kind : HierarchicalKind.None,\n            includeSourceActions: true,\n            onlyIncludePreferredActions: args.preferred,\n        }, args.apply, CodeActionTriggerSource.SourceAction);\n    }\n}\nexport class OrganizeImportsAction extends EditorAction {\n    constructor() {\n        super({\n            id: organizeImportsCommandId,\n            label: nls.localize('organizeImports.label', \"Organize Imports\"),\n            alias: 'Organize Imports',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.SourceOrganizeImports)),\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 45 /* KeyCode.KeyO */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n        });\n    }\n    run(_accessor, editor) {\n        return triggerCodeActionsForEditorSelection(editor, nls.localize('editor.action.organize.noneMessage', \"No organize imports action available\"), { include: CodeActionKind.SourceOrganizeImports, includeSourceActions: true }, \"ifSingle\" /* CodeActionAutoApply.IfSingle */, CodeActionTriggerSource.OrganizeImports);\n    }\n}\nexport class FixAllAction extends EditorAction {\n    constructor() {\n        super({\n            id: fixAllCommandId,\n            label: nls.localize('fixAll.label', \"Fix All\"),\n            alias: 'Fix All',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.SourceFixAll))\n        });\n    }\n    run(_accessor, editor) {\n        return triggerCodeActionsForEditorSelection(editor, nls.localize('fixAll.noneMessage', \"No fix all action available\"), { include: CodeActionKind.SourceFixAll, includeSourceActions: true }, \"ifSingle\" /* CodeActionAutoApply.IfSingle */, CodeActionTriggerSource.FixAll);\n    }\n}\nexport class AutoFixAction extends EditorAction {\n    constructor() {\n        super({\n            id: autoFixCommandId,\n            label: nls.localize('autoFix.label', \"Auto Fix...\"),\n            alias: 'Auto Fix...',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.QuickFix)),\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 89 /* KeyCode.Period */,\n                mac: {\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 89 /* KeyCode.Period */\n                },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        return triggerCodeActionsForEditorSelection(editor, nls.localize('editor.action.autoFix.noneMessage', \"No auto fixes available\"), {\n            include: CodeActionKind.QuickFix,\n            onlyIncludePreferredActions: true\n        }, \"ifSingle\" /* CodeActionAutoApply.IfSingle */, CodeActionTriggerSource.AutoFix);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { editorConfigurationBaseNode } from '../../../common/config/editorConfigurationSchema.js';\nimport { AutoFixAction, CodeActionCommand, FixAllAction, OrganizeImportsAction, QuickFixAction, RefactorAction, SourceAction } from './codeActionCommands.js';\nimport { CodeActionController } from './codeActionController.js';\nimport { LightBulbWidget } from './lightBulbWidget.js';\nimport * as nls from '../../../../nls.js';\nimport { Extensions } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nregisterEditorContribution(CodeActionController.ID, CodeActionController, 3 /* EditorContributionInstantiation.Eventually */);\nregisterEditorContribution(LightBulbWidget.ID, LightBulbWidget, 4 /* EditorContributionInstantiation.Lazy */);\nregisterEditorAction(QuickFixAction);\nregisterEditorAction(RefactorAction);\nregisterEditorAction(SourceAction);\nregisterEditorAction(OrganizeImportsAction);\nregisterEditorAction(AutoFixAction);\nregisterEditorAction(FixAllAction);\nregisterEditorCommand(new CodeActionCommand());\nRegistry.as(Extensions.Configuration).registerConfiguration({\n    ...editorConfigurationBaseNode,\n    properties: {\n        'editor.codeActionWidget.showHeaders': {\n            type: 'boolean',\n            scope: 5 /* ConfigurationScope.LANGUAGE_OVERRIDABLE */,\n            description: nls.localize('showCodeActionHeaders', \"Enable/disable showing group headers in the Code Action menu.\"),\n            default: true,\n        },\n    }\n});\nRegistry.as(Extensions.Configuration).registerConfiguration({\n    ...editorConfigurationBaseNode,\n    properties: {\n        'editor.codeActionWidget.includeNearbyQuickFixes': {\n            type: 'boolean',\n            scope: 5 /* ConfigurationScope.LANGUAGE_OVERRIDABLE */,\n            description: nls.localize('includeNearbyQuickFixes', \"Enable/disable showing nearest Quick Fix within a line when not currently on a diagnostic.\"),\n            default: true,\n        },\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar CodeActionKeybindingResolver_1;\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nimport { Lazy } from '../../../../base/common/lazy.js';\nimport { codeActionCommandId, fixAllCommandId, organizeImportsCommandId, refactorCommandId, sourceActionCommandId } from './codeAction.js';\nimport { CodeActionCommandArgs, CodeActionKind } from '../common/types.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nlet CodeActionKeybindingResolver = CodeActionKeybindingResolver_1 = class CodeActionKeybindingResolver {\n    constructor(keybindingService) {\n        this.keybindingService = keybindingService;\n    }\n    getResolver() {\n        // Lazy since we may not actually ever read the value\n        const allCodeActionBindings = new Lazy(() => this.keybindingService.getKeybindings()\n            .filter(item => CodeActionKeybindingResolver_1.codeActionCommands.indexOf(item.command) >= 0)\n            .filter(item => item.resolvedKeybinding)\n            .map((item) => {\n            // Special case these commands since they come built-in with VS Code and don't use 'commandArgs'\n            let commandArgs = item.commandArgs;\n            if (item.command === organizeImportsCommandId) {\n                commandArgs = { kind: CodeActionKind.SourceOrganizeImports.value };\n            }\n            else if (item.command === fixAllCommandId) {\n                commandArgs = { kind: CodeActionKind.SourceFixAll.value };\n            }\n            return {\n                resolvedKeybinding: item.resolvedKeybinding,\n                ...CodeActionCommandArgs.fromUser(commandArgs, {\n                    kind: HierarchicalKind.None,\n                    apply: \"never\" /* CodeActionAutoApply.Never */\n                })\n            };\n        }));\n        return (action) => {\n            if (action.kind) {\n                const binding = this.bestKeybindingForCodeAction(action, allCodeActionBindings.value);\n                return binding === null || binding === void 0 ? void 0 : binding.resolvedKeybinding;\n            }\n            return undefined;\n        };\n    }\n    bestKeybindingForCodeAction(action, candidates) {\n        if (!action.kind) {\n            return undefined;\n        }\n        const kind = new HierarchicalKind(action.kind);\n        return candidates\n            .filter(candidate => candidate.kind.contains(kind))\n            .filter(candidate => {\n            if (candidate.preferred) {\n                // If the candidate keybinding only applies to preferred actions, the this action must also be preferred\n                return action.isPreferred;\n            }\n            return true;\n        })\n            .reduceRight((currentBest, candidate) => {\n            if (!currentBest) {\n                return candidate;\n            }\n            // Select the more specific binding\n            return currentBest.kind.contains(candidate.kind) ? candidate : currentBest;\n        }, undefined);\n    }\n};\nCodeActionKeybindingResolver.codeActionCommands = [\n    refactorCommandId,\n    codeActionCommandId,\n    sourceActionCommandId,\n    organizeImportsCommandId,\n    fixAllCommandId\n];\nCodeActionKeybindingResolver = CodeActionKeybindingResolver_1 = __decorate([\n    __param(0, IKeybindingService)\n], CodeActionKeybindingResolver);\nexport { CodeActionKeybindingResolver };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport '../../../../base/browser/ui/codicons/codiconStyles.js'; // The codicon symbol styles are defined here and must be loaded\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { CodeActionKind } from '../common/types.js';\nimport '../../symbolIcons/browser/symbolIcons.js'; // The codicon symbol colors are defined here and must be loaded to get colors\nimport { localize } from '../../../../nls.js';\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nconst uncategorizedCodeActionGroup = Object.freeze({ kind: HierarchicalKind.Empty, title: localize('codeAction.widget.id.more', 'More Actions...') });\nconst codeActionGroups = Object.freeze([\n    { kind: CodeActionKind.QuickFix, title: localize('codeAction.widget.id.quickfix', 'Quick Fix') },\n    { kind: CodeActionKind.RefactorExtract, title: localize('codeAction.widget.id.extract', 'Extract'), icon: Codicon.wrench },\n    { kind: CodeActionKind.RefactorInline, title: localize('codeAction.widget.id.inline', 'Inline'), icon: Codicon.wrench },\n    { kind: CodeActionKind.RefactorRewrite, title: localize('codeAction.widget.id.convert', 'Rewrite'), icon: Codicon.wrench },\n    { kind: CodeActionKind.RefactorMove, title: localize('codeAction.widget.id.move', 'Move'), icon: Codicon.wrench },\n    { kind: CodeActionKind.SurroundWith, title: localize('codeAction.widget.id.surround', 'Surround With'), icon: Codicon.surroundWith },\n    { kind: CodeActionKind.Source, title: localize('codeAction.widget.id.source', 'Source Action'), icon: Codicon.symbolFile },\n    uncategorizedCodeActionGroup,\n]);\nexport function toMenuItems(inputCodeActions, showHeaders, keybindingResolver) {\n    if (!showHeaders) {\n        return inputCodeActions.map((action) => {\n            var _a;\n            return {\n                kind: \"action\" /* ActionListItemKind.Action */,\n                item: action,\n                group: uncategorizedCodeActionGroup,\n                disabled: !!action.action.disabled,\n                label: action.action.disabled || action.action.title,\n                canPreview: !!((_a = action.action.edit) === null || _a === void 0 ? void 0 : _a.edits.length),\n            };\n        });\n    }\n    // Group code actions\n    const menuEntries = codeActionGroups.map(group => ({ group, actions: [] }));\n    for (const action of inputCodeActions) {\n        const kind = action.action.kind ? new HierarchicalKind(action.action.kind) : HierarchicalKind.None;\n        for (const menuEntry of menuEntries) {\n            if (menuEntry.group.kind.contains(kind)) {\n                menuEntry.actions.push(action);\n                break;\n            }\n        }\n    }\n    const allMenuItems = [];\n    for (const menuEntry of menuEntries) {\n        if (menuEntry.actions.length) {\n            allMenuItems.push({ kind: \"header\" /* ActionListItemKind.Header */, group: menuEntry.group });\n            for (const action of menuEntry.actions) {\n                const group = menuEntry.group;\n                allMenuItems.push({\n                    kind: \"action\" /* ActionListItemKind.Action */,\n                    item: action,\n                    group: action.action.isAI ? { title: group.title, kind: group.kind, icon: Codicon.sparkle } : group,\n                    label: action.action.title,\n                    disabled: !!action.action.disabled,\n                    keybinding: keybindingResolver(action.action),\n                });\n            }\n        }\n    }\n    return allMenuItems;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar CodeActionController_1;\nimport { getDomNodePagePosition } from '../../../../base/browser/dom.js';\nimport * as aria from '../../../../base/browser/ui/aria/aria.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Lazy } from '../../../../base/common/lazy.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ApplyCodeActionReason, applyCodeAction } from './codeAction.js';\nimport { CodeActionKeybindingResolver } from './codeActionKeybindingResolver.js';\nimport { toMenuItems } from './codeActionMenu.js';\nimport { LightBulbWidget } from './lightBulbWidget.js';\nimport { MessageController } from '../../message/browser/messageController.js';\nimport { localize } from '../../../../nls.js';\nimport { IActionWidgetService } from '../../../../platform/actionWidget/browser/actionWidget.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IMarkerService } from '../../../../platform/markers/common/markers.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { editorFindMatchHighlight, editorFindMatchHighlightBorder } from '../../../../platform/theme/common/colorRegistry.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { CodeActionKind, CodeActionTriggerSource } from '../common/types.js';\nimport { CodeActionModel } from './codeActionModel.js';\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nconst DECORATION_CLASS_NAME = 'quickfix-edit-highlight';\nlet CodeActionController = CodeActionController_1 = class CodeActionController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(CodeActionController_1.ID);\n    }\n    constructor(editor, markerService, contextKeyService, instantiationService, languageFeaturesService, progressService, _commandService, _configurationService, _actionWidgetService, _instantiationService, _telemetryService) {\n        super();\n        this._commandService = _commandService;\n        this._configurationService = _configurationService;\n        this._actionWidgetService = _actionWidgetService;\n        this._instantiationService = _instantiationService;\n        this._telemetryService = _telemetryService;\n        this._activeCodeActions = this._register(new MutableDisposable());\n        this._showDisabled = false;\n        this._disposed = false;\n        this._editor = editor;\n        this._model = this._register(new CodeActionModel(this._editor, languageFeaturesService.codeActionProvider, markerService, contextKeyService, progressService, _configurationService));\n        this._register(this._model.onDidChangeState(newState => this.update(newState)));\n        this._lightBulbWidget = new Lazy(() => {\n            const widget = this._editor.getContribution(LightBulbWidget.ID);\n            if (widget) {\n                this._register(widget.onClick(e => this.showCodeActionsFromLightbulb(e.actions, e)));\n            }\n            return widget;\n        });\n        this._resolver = instantiationService.createInstance(CodeActionKeybindingResolver);\n        this._register(this._editor.onDidLayoutChange(() => this._actionWidgetService.hide()));\n    }\n    dispose() {\n        this._disposed = true;\n        super.dispose();\n    }\n    async showCodeActionsFromLightbulb(actions, at) {\n        this._telemetryService.publicLog2('codeAction.showCodeActionsFromLightbulb', {\n            codeActionListLength: actions.validActions.length,\n            codeActions: actions.validActions.map(action => action.action.title),\n            codeActionProviders: actions.validActions.map(action => { var _a, _b; return (_b = (_a = action.provider) === null || _a === void 0 ? void 0 : _a.displayName) !== null && _b !== void 0 ? _b : ''; }),\n        });\n        if (actions.allAIFixes && actions.validActions.length === 1) {\n            const actionItem = actions.validActions[0];\n            const command = actionItem.action.command;\n            if (command && command.id === 'inlineChat.start') {\n                if (command.arguments && command.arguments.length >= 1) {\n                    command.arguments[0] = { ...command.arguments[0], autoSend: false };\n                }\n            }\n            await this._applyCodeAction(actionItem, false, false, ApplyCodeActionReason.FromAILightbulb);\n            return;\n        }\n        await this.showCodeActionList(actions, at, { includeDisabledActions: false, fromLightbulb: true });\n    }\n    showCodeActions(_trigger, actions, at) {\n        return this.showCodeActionList(actions, at, { includeDisabledActions: false, fromLightbulb: false });\n    }\n    manualTriggerAtCurrentPosition(notAvailableMessage, triggerAction, filter, autoApply) {\n        var _a;\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        (_a = MessageController.get(this._editor)) === null || _a === void 0 ? void 0 : _a.closeMessage();\n        const triggerPosition = this._editor.getPosition();\n        this._trigger({ type: 1 /* CodeActionTriggerType.Invoke */, triggerAction, filter, autoApply, context: { notAvailableMessage, position: triggerPosition } });\n    }\n    _trigger(trigger) {\n        return this._model.trigger(trigger);\n    }\n    async _applyCodeAction(action, retrigger, preview, actionReason) {\n        try {\n            await this._instantiationService.invokeFunction(applyCodeAction, action, actionReason, { preview, editor: this._editor });\n        }\n        finally {\n            if (retrigger) {\n                this._trigger({ type: 2 /* CodeActionTriggerType.Auto */, triggerAction: CodeActionTriggerSource.QuickFix, filter: {} });\n            }\n        }\n    }\n    async update(newState) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        if (newState.type !== 1 /* CodeActionsState.Type.Triggered */) {\n            (_a = this._lightBulbWidget.rawValue) === null || _a === void 0 ? void 0 : _a.hide();\n            return;\n        }\n        let actions;\n        try {\n            actions = await newState.actions;\n        }\n        catch (e) {\n            onUnexpectedError(e);\n            return;\n        }\n        if (this._disposed) {\n            return;\n        }\n        (_b = this._lightBulbWidget.value) === null || _b === void 0 ? void 0 : _b.update(actions, newState.trigger, newState.position);\n        if (newState.trigger.type === 1 /* CodeActionTriggerType.Invoke */) {\n            if ((_c = newState.trigger.filter) === null || _c === void 0 ? void 0 : _c.include) { // Triggered for specific scope\n                // Check to see if we want to auto apply.\n                const validActionToApply = this.tryGetValidActionToApply(newState.trigger, actions);\n                if (validActionToApply) {\n                    try {\n                        (_d = this._lightBulbWidget.value) === null || _d === void 0 ? void 0 : _d.hide();\n                        await this._applyCodeAction(validActionToApply, false, false, ApplyCodeActionReason.FromCodeActions);\n                    }\n                    finally {\n                        actions.dispose();\n                    }\n                    return;\n                }\n                // Check to see if there is an action that we would have applied were it not invalid\n                if (newState.trigger.context) {\n                    const invalidAction = this.getInvalidActionThatWouldHaveBeenApplied(newState.trigger, actions);\n                    if (invalidAction && invalidAction.action.disabled) {\n                        (_e = MessageController.get(this._editor)) === null || _e === void 0 ? void 0 : _e.showMessage(invalidAction.action.disabled, newState.trigger.context.position);\n                        actions.dispose();\n                        return;\n                    }\n                }\n            }\n            const includeDisabledActions = !!((_f = newState.trigger.filter) === null || _f === void 0 ? void 0 : _f.include);\n            if (newState.trigger.context) {\n                if (!actions.allActions.length || !includeDisabledActions && !actions.validActions.length) {\n                    (_g = MessageController.get(this._editor)) === null || _g === void 0 ? void 0 : _g.showMessage(newState.trigger.context.notAvailableMessage, newState.trigger.context.position);\n                    this._activeCodeActions.value = actions;\n                    actions.dispose();\n                    return;\n                }\n            }\n            this._activeCodeActions.value = actions;\n            this.showCodeActionList(actions, this.toCoords(newState.position), { includeDisabledActions, fromLightbulb: false });\n        }\n        else {\n            // auto magically triggered\n            if (this._actionWidgetService.isVisible) {\n                // TODO: Figure out if we should update the showing menu?\n                actions.dispose();\n            }\n            else {\n                this._activeCodeActions.value = actions;\n            }\n        }\n    }\n    getInvalidActionThatWouldHaveBeenApplied(trigger, actions) {\n        if (!actions.allActions.length) {\n            return undefined;\n        }\n        if ((trigger.autoApply === \"first\" /* CodeActionAutoApply.First */ && actions.validActions.length === 0)\n            || (trigger.autoApply === \"ifSingle\" /* CodeActionAutoApply.IfSingle */ && actions.allActions.length === 1)) {\n            return actions.allActions.find(({ action }) => action.disabled);\n        }\n        return undefined;\n    }\n    tryGetValidActionToApply(trigger, actions) {\n        if (!actions.validActions.length) {\n            return undefined;\n        }\n        if ((trigger.autoApply === \"first\" /* CodeActionAutoApply.First */ && actions.validActions.length > 0)\n            || (trigger.autoApply === \"ifSingle\" /* CodeActionAutoApply.IfSingle */ && actions.validActions.length === 1)) {\n            return actions.validActions[0];\n        }\n        return undefined;\n    }\n    async showCodeActionList(actions, at, options) {\n        const currentDecorations = this._editor.createDecorationsCollection();\n        const editorDom = this._editor.getDomNode();\n        if (!editorDom) {\n            return;\n        }\n        const actionsToShow = options.includeDisabledActions && (this._showDisabled || actions.validActions.length === 0) ? actions.allActions : actions.validActions;\n        if (!actionsToShow.length) {\n            return;\n        }\n        const anchor = Position.isIPosition(at) ? this.toCoords(at) : at;\n        const delegate = {\n            onSelect: async (action, preview) => {\n                this._applyCodeAction(action, /* retrigger */ true, !!preview, options.fromLightbulb ? ApplyCodeActionReason.FromAILightbulb : ApplyCodeActionReason.FromCodeActions);\n                this._actionWidgetService.hide(false);\n                currentDecorations.clear();\n            },\n            onHide: (didCancel) => {\n                var _a;\n                (_a = this._editor) === null || _a === void 0 ? void 0 : _a.focus();\n                currentDecorations.clear();\n                // Telemetry for showing code actions here. only log on `showLightbulb`. Logs when code action list is quit out.\n                if (options.fromLightbulb && didCancel !== undefined) {\n                    this._telemetryService.publicLog2('codeAction.showCodeActionList.onHide', {\n                        codeActionListLength: actions.validActions.length,\n                        didCancel: didCancel,\n                    });\n                }\n            },\n            onHover: async (action, token) => {\n                var _a;\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                let canPreview = false;\n                const actionKind = action.action.kind;\n                if (actionKind) {\n                    const hierarchicalKind = new HierarchicalKind(actionKind);\n                    const refactorKinds = [\n                        CodeActionKind.RefactorExtract,\n                        CodeActionKind.RefactorInline,\n                        CodeActionKind.RefactorRewrite,\n                        CodeActionKind.RefactorMove,\n                        CodeActionKind.Source\n                    ];\n                    canPreview = refactorKinds.some(refactorKind => refactorKind.contains(hierarchicalKind));\n                }\n                return { canPreview: canPreview || !!((_a = action.action.edit) === null || _a === void 0 ? void 0 : _a.edits.length) };\n            },\n            onFocus: (action) => {\n                var _a, _b;\n                if (action && action.action) {\n                    const ranges = action.action.ranges;\n                    const diagnostics = action.action.diagnostics;\n                    currentDecorations.clear();\n                    if (ranges && ranges.length > 0) {\n                        // Handles case for `fix all` where there are multiple diagnostics.\n                        const decorations = (diagnostics && (diagnostics === null || diagnostics === void 0 ? void 0 : diagnostics.length) > 1)\n                            ? diagnostics.map(diagnostic => ({ range: diagnostic, options: CodeActionController_1.DECORATION }))\n                            : ranges.map(range => ({ range, options: CodeActionController_1.DECORATION }));\n                        currentDecorations.set(decorations);\n                    }\n                    else if (diagnostics && diagnostics.length > 0) {\n                        const decorations = diagnostics.map(diagnostic => ({ range: diagnostic, options: CodeActionController_1.DECORATION }));\n                        currentDecorations.set(decorations);\n                        const diagnostic = diagnostics[0];\n                        if (diagnostic.startLineNumber && diagnostic.startColumn) {\n                            const selectionText = (_b = (_a = this._editor.getModel()) === null || _a === void 0 ? void 0 : _a.getWordAtPosition({ lineNumber: diagnostic.startLineNumber, column: diagnostic.startColumn })) === null || _b === void 0 ? void 0 : _b.word;\n                            aria.status(localize('editingNewSelection', \"Context: {0} at line {1} and column {2}.\", selectionText, diagnostic.startLineNumber, diagnostic.startColumn));\n                        }\n                    }\n                }\n                else {\n                    currentDecorations.clear();\n                }\n            }\n        };\n        this._actionWidgetService.show('codeActionWidget', true, toMenuItems(actionsToShow, this._shouldShowHeaders(), this._resolver.getResolver()), delegate, anchor, editorDom, this._getActionBarActions(actions, at, options));\n    }\n    toCoords(position) {\n        if (!this._editor.hasModel()) {\n            return { x: 0, y: 0 };\n        }\n        this._editor.revealPosition(position, 1 /* ScrollType.Immediate */);\n        this._editor.render();\n        // Translate to absolute editor position\n        const cursorCoords = this._editor.getScrolledVisiblePosition(position);\n        const editorCoords = getDomNodePagePosition(this._editor.getDomNode());\n        const x = editorCoords.left + cursorCoords.left;\n        const y = editorCoords.top + cursorCoords.top + cursorCoords.height;\n        return { x, y };\n    }\n    _shouldShowHeaders() {\n        var _a;\n        const model = (_a = this._editor) === null || _a === void 0 ? void 0 : _a.getModel();\n        return this._configurationService.getValue('editor.codeActionWidget.showHeaders', { resource: model === null || model === void 0 ? void 0 : model.uri });\n    }\n    _getActionBarActions(actions, at, options) {\n        if (options.fromLightbulb) {\n            return [];\n        }\n        const resultActions = actions.documentation.map((command) => {\n            var _a;\n            return ({\n                id: command.id,\n                label: command.title,\n                tooltip: (_a = command.tooltip) !== null && _a !== void 0 ? _a : '',\n                class: undefined,\n                enabled: true,\n                run: () => { var _a; return this._commandService.executeCommand(command.id, ...((_a = command.arguments) !== null && _a !== void 0 ? _a : [])); },\n            });\n        });\n        if (options.includeDisabledActions && actions.validActions.length > 0 && actions.allActions.length !== actions.validActions.length) {\n            resultActions.push(this._showDisabled ? {\n                id: 'hideMoreActions',\n                label: localize('hideMoreActions', 'Hide Disabled'),\n                enabled: true,\n                tooltip: '',\n                class: undefined,\n                run: () => {\n                    this._showDisabled = false;\n                    return this.showCodeActionList(actions, at, options);\n                }\n            } : {\n                id: 'showMoreActions',\n                label: localize('showMoreActions', 'Show Disabled'),\n                enabled: true,\n                tooltip: '',\n                class: undefined,\n                run: () => {\n                    this._showDisabled = true;\n                    return this.showCodeActionList(actions, at, options);\n                }\n            });\n        }\n        return resultActions;\n    }\n};\nCodeActionController.ID = 'editor.contrib.codeActionController';\nCodeActionController.DECORATION = ModelDecorationOptions.register({\n    description: 'quickfix-highlight',\n    className: DECORATION_CLASS_NAME\n});\nCodeActionController = CodeActionController_1 = __decorate([\n    __param(1, IMarkerService),\n    __param(2, IContextKeyService),\n    __param(3, IInstantiationService),\n    __param(4, ILanguageFeaturesService),\n    __param(5, IEditorProgressService),\n    __param(6, ICommandService),\n    __param(7, IConfigurationService),\n    __param(8, IActionWidgetService),\n    __param(9, IInstantiationService),\n    __param(10, ITelemetryService)\n], CodeActionController);\nexport { CodeActionController };\nregisterThemingParticipant((theme, collector) => {\n    const addBackgroundColorRule = (selector, color) => {\n        if (color) {\n            collector.addRule(`.monaco-editor ${selector} { background-color: ${color}; }`);\n        }\n    };\n    addBackgroundColorRule('.quickfix-edit-highlight', theme.getColor(editorFindMatchHighlight));\n    const findMatchHighlightBorder = theme.getColor(editorFindMatchHighlightBorder);\n    if (findMatchHighlightBorder) {\n        collector.addRule(`.monaco-editor .quickfix-edit-highlight { border: 1px ${isHighContrast(theme.type) ? 'dotted' : 'solid'} ${findMatchHighlightBorder}; box-sizing: border-box; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createCancelablePromise, TimeoutTimer } from '../../../../base/common/async.js';\nimport { isCancellationError } from '../../../../base/common/errors.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { isEqual } from '../../../../base/common/resources.js';\nimport { ShowLightbulbIconMode } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { Progress } from '../../../../platform/progress/common/progress.js';\nimport { CodeActionKind, CodeActionTriggerSource } from '../common/types.js';\nimport { getCodeActions } from './codeAction.js';\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nexport const SUPPORTED_CODE_ACTIONS = new RawContextKey('supportedCodeAction', '');\nexport const APPLY_FIX_ALL_COMMAND_ID = '_typescript.applyFixAllCodeAction';\nclass CodeActionOracle extends Disposable {\n    constructor(_editor, _markerService, _signalChange, _delay = 250) {\n        super();\n        this._editor = _editor;\n        this._markerService = _markerService;\n        this._signalChange = _signalChange;\n        this._delay = _delay;\n        this._autoTriggerTimer = this._register(new TimeoutTimer());\n        this._register(this._markerService.onMarkerChanged(e => this._onMarkerChanges(e)));\n        this._register(this._editor.onDidChangeCursorPosition(() => this._tryAutoTrigger()));\n    }\n    trigger(trigger) {\n        const selection = this._getRangeOfSelectionUnlessWhitespaceEnclosed(trigger);\n        this._signalChange(selection ? { trigger, selection } : undefined);\n    }\n    _onMarkerChanges(resources) {\n        const model = this._editor.getModel();\n        if (model && resources.some(resource => isEqual(resource, model.uri))) {\n            this._tryAutoTrigger();\n        }\n    }\n    _tryAutoTrigger() {\n        this._autoTriggerTimer.cancelAndSet(() => {\n            this.trigger({ type: 2 /* CodeActionTriggerType.Auto */, triggerAction: CodeActionTriggerSource.Default });\n        }, this._delay);\n    }\n    _getRangeOfSelectionUnlessWhitespaceEnclosed(trigger) {\n        if (!this._editor.hasModel()) {\n            return undefined;\n        }\n        const selection = this._editor.getSelection();\n        if (trigger.type === 1 /* CodeActionTriggerType.Invoke */) {\n            return selection;\n        }\n        const enabled = this._editor.getOption(65 /* EditorOption.lightbulb */).enabled;\n        if (enabled === ShowLightbulbIconMode.Off) {\n            return undefined;\n        }\n        else if (enabled === ShowLightbulbIconMode.On) {\n            return selection;\n        }\n        else if (enabled === ShowLightbulbIconMode.OnCode) {\n            const isSelectionEmpty = selection.isEmpty();\n            if (!isSelectionEmpty) {\n                return selection;\n            }\n            const model = this._editor.getModel();\n            const { lineNumber, column } = selection.getPosition();\n            const line = model.getLineContent(lineNumber);\n            if (line.length === 0) {\n                // empty line\n                return undefined;\n            }\n            else if (column === 1) {\n                // look only right\n                if (/\\s/.test(line[0])) {\n                    return undefined;\n                }\n            }\n            else if (column === model.getLineMaxColumn(lineNumber)) {\n                // look only left\n                if (/\\s/.test(line[line.length - 1])) {\n                    return undefined;\n                }\n            }\n            else {\n                // look left and right\n                if (/\\s/.test(line[column - 2]) && /\\s/.test(line[column - 1])) {\n                    return undefined;\n                }\n            }\n        }\n        return selection;\n    }\n}\nexport var CodeActionsState;\n(function (CodeActionsState) {\n    CodeActionsState.Empty = { type: 0 /* Type.Empty */ };\n    class Triggered {\n        constructor(trigger, position, _cancellablePromise) {\n            this.trigger = trigger;\n            this.position = position;\n            this._cancellablePromise = _cancellablePromise;\n            this.type = 1 /* Type.Triggered */;\n            this.actions = _cancellablePromise.catch((e) => {\n                if (isCancellationError(e)) {\n                    return emptyCodeActionSet;\n                }\n                throw e;\n            });\n        }\n        cancel() {\n            this._cancellablePromise.cancel();\n        }\n    }\n    CodeActionsState.Triggered = Triggered;\n})(CodeActionsState || (CodeActionsState = {}));\nconst emptyCodeActionSet = Object.freeze({\n    allActions: [],\n    validActions: [],\n    dispose: () => { },\n    documentation: [],\n    hasAutoFix: false,\n    hasAIFix: false,\n    allAIFixes: false,\n});\nexport class CodeActionModel extends Disposable {\n    constructor(_editor, _registry, _markerService, contextKeyService, _progressService, _configurationService) {\n        super();\n        this._editor = _editor;\n        this._registry = _registry;\n        this._markerService = _markerService;\n        this._progressService = _progressService;\n        this._configurationService = _configurationService;\n        this._codeActionOracle = this._register(new MutableDisposable());\n        this._state = CodeActionsState.Empty;\n        this._onDidChangeState = this._register(new Emitter());\n        this.onDidChangeState = this._onDidChangeState.event;\n        this._disposed = false;\n        this._supportedCodeActions = SUPPORTED_CODE_ACTIONS.bindTo(contextKeyService);\n        this._register(this._editor.onDidChangeModel(() => this._update()));\n        this._register(this._editor.onDidChangeModelLanguage(() => this._update()));\n        this._register(this._registry.onDidChange(() => this._update()));\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(65 /* EditorOption.lightbulb */)) {\n                this._update();\n            }\n        }));\n        this._update();\n    }\n    dispose() {\n        if (this._disposed) {\n            return;\n        }\n        this._disposed = true;\n        super.dispose();\n        this.setState(CodeActionsState.Empty, true);\n    }\n    _settingEnabledNearbyQuickfixes() {\n        var _a;\n        const model = (_a = this._editor) === null || _a === void 0 ? void 0 : _a.getModel();\n        return this._configurationService ? this._configurationService.getValue('editor.codeActionWidget.includeNearbyQuickFixes', { resource: model === null || model === void 0 ? void 0 : model.uri }) : false;\n    }\n    _update() {\n        if (this._disposed) {\n            return;\n        }\n        this._codeActionOracle.value = undefined;\n        this.setState(CodeActionsState.Empty);\n        const model = this._editor.getModel();\n        if (model\n            && this._registry.has(model)\n            && !this._editor.getOption(91 /* EditorOption.readOnly */)) {\n            const supportedActions = this._registry.all(model).flatMap(provider => { var _a; return (_a = provider.providedCodeActionKinds) !== null && _a !== void 0 ? _a : []; });\n            this._supportedCodeActions.set(supportedActions.join(' '));\n            this._codeActionOracle.value = new CodeActionOracle(this._editor, this._markerService, trigger => {\n                var _a;\n                if (!trigger) {\n                    this.setState(CodeActionsState.Empty);\n                    return;\n                }\n                const startPosition = trigger.selection.getStartPosition();\n                const actions = createCancelablePromise(async (token) => {\n                    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n                    if (this._settingEnabledNearbyQuickfixes() && trigger.trigger.type === 1 /* CodeActionTriggerType.Invoke */ && (trigger.trigger.triggerAction === CodeActionTriggerSource.QuickFix || ((_b = (_a = trigger.trigger.filter) === null || _a === void 0 ? void 0 : _a.include) === null || _b === void 0 ? void 0 : _b.contains(CodeActionKind.QuickFix)))) {\n                        const codeActionSet = await getCodeActions(this._registry, model, trigger.selection, trigger.trigger, Progress.None, token);\n                        const allCodeActions = [...codeActionSet.allActions];\n                        if (token.isCancellationRequested) {\n                            return emptyCodeActionSet;\n                        }\n                        // Search for quickfixes in the curret code action set.\n                        const foundQuickfix = (_c = codeActionSet.validActions) === null || _c === void 0 ? void 0 : _c.some(action => action.action.kind ? CodeActionKind.QuickFix.contains(new HierarchicalKind(action.action.kind)) : false);\n                        const allMarkers = this._markerService.read({ resource: model.uri });\n                        if (foundQuickfix) {\n                            for (const action of codeActionSet.validActions) {\n                                if ((_e = (_d = action.action.command) === null || _d === void 0 ? void 0 : _d.arguments) === null || _e === void 0 ? void 0 : _e.some(arg => typeof arg === 'string' && arg.includes(APPLY_FIX_ALL_COMMAND_ID))) {\n                                    action.action.diagnostics = [...allMarkers.filter(marker => marker.relatedInformation)];\n                                }\n                            }\n                            return { validActions: codeActionSet.validActions, allActions: allCodeActions, documentation: codeActionSet.documentation, hasAutoFix: codeActionSet.hasAutoFix, hasAIFix: codeActionSet.hasAIFix, allAIFixes: codeActionSet.allAIFixes, dispose: () => { codeActionSet.dispose(); } };\n                        }\n                        else if (!foundQuickfix) {\n                            // If markers exists, and there are no quickfixes found or length is zero, check for quickfixes on that line.\n                            if (allMarkers.length > 0) {\n                                const currPosition = trigger.selection.getPosition();\n                                let trackedPosition = currPosition;\n                                let distance = Number.MAX_VALUE;\n                                const currentActions = [...codeActionSet.validActions];\n                                for (const marker of allMarkers) {\n                                    const col = marker.endColumn;\n                                    const row = marker.endLineNumber;\n                                    const startRow = marker.startLineNumber;\n                                    // Found quickfix on the same line and check relative distance to other markers\n                                    if ((row === currPosition.lineNumber || startRow === currPosition.lineNumber)) {\n                                        trackedPosition = new Position(row, col);\n                                        const newCodeActionTrigger = {\n                                            type: trigger.trigger.type,\n                                            triggerAction: trigger.trigger.triggerAction,\n                                            filter: { include: ((_f = trigger.trigger.filter) === null || _f === void 0 ? void 0 : _f.include) ? (_g = trigger.trigger.filter) === null || _g === void 0 ? void 0 : _g.include : CodeActionKind.QuickFix },\n                                            autoApply: trigger.trigger.autoApply,\n                                            context: { notAvailableMessage: ((_h = trigger.trigger.context) === null || _h === void 0 ? void 0 : _h.notAvailableMessage) || '', position: trackedPosition }\n                                        };\n                                        const selectionAsPosition = new Selection(trackedPosition.lineNumber, trackedPosition.column, trackedPosition.lineNumber, trackedPosition.column);\n                                        const actionsAtMarker = await getCodeActions(this._registry, model, selectionAsPosition, newCodeActionTrigger, Progress.None, token);\n                                        if (actionsAtMarker.validActions.length !== 0) {\n                                            for (const action of actionsAtMarker.validActions) {\n                                                if ((_k = (_j = action.action.command) === null || _j === void 0 ? void 0 : _j.arguments) === null || _k === void 0 ? void 0 : _k.some(arg => typeof arg === 'string' && arg.includes(APPLY_FIX_ALL_COMMAND_ID))) {\n                                                    action.action.diagnostics = [...allMarkers.filter(marker => marker.relatedInformation)];\n                                                }\n                                            }\n                                            if (codeActionSet.allActions.length === 0) {\n                                                allCodeActions.push(...actionsAtMarker.allActions);\n                                            }\n                                            // Already filtered through to only get quickfixes, so no need to filter again.\n                                            if (Math.abs(currPosition.column - col) < distance) {\n                                                currentActions.unshift(...actionsAtMarker.validActions);\n                                            }\n                                            else {\n                                                currentActions.push(...actionsAtMarker.validActions);\n                                            }\n                                        }\n                                        distance = Math.abs(currPosition.column - col);\n                                    }\n                                }\n                                const filteredActions = currentActions.filter((action, index, self) => self.findIndex((a) => a.action.title === action.action.title) === index);\n                                filteredActions.sort((a, b) => {\n                                    if (a.action.isPreferred && !b.action.isPreferred) {\n                                        return -1;\n                                    }\n                                    else if (!a.action.isPreferred && b.action.isPreferred) {\n                                        return 1;\n                                    }\n                                    else if (a.action.isAI && !b.action.isAI) {\n                                        return 1;\n                                    }\n                                    else if (!a.action.isAI && b.action.isAI) {\n                                        return -1;\n                                    }\n                                    else {\n                                        return 0;\n                                    }\n                                });\n                                // Only retriggers if actually found quickfix on the same line as cursor\n                                return { validActions: filteredActions, allActions: allCodeActions, documentation: codeActionSet.documentation, hasAutoFix: codeActionSet.hasAutoFix, hasAIFix: codeActionSet.hasAIFix, allAIFixes: codeActionSet.allAIFixes, dispose: () => { codeActionSet.dispose(); } };\n                            }\n                        }\n                    }\n                    // temporarilly hiding here as this is enabled/disabled behind a setting.\n                    return getCodeActions(this._registry, model, trigger.selection, trigger.trigger, Progress.None, token);\n                });\n                if (trigger.trigger.type === 1 /* CodeActionTriggerType.Invoke */) {\n                    (_a = this._progressService) === null || _a === void 0 ? void 0 : _a.showWhile(actions, 250);\n                }\n                const newState = new CodeActionsState.Triggered(trigger.trigger, startPosition, actions);\n                let isManualToAutoTransition = false;\n                if (this._state.type === 1 /* CodeActionsState.Type.Triggered */) {\n                    // Check if the current state is manual and the new state is automatic\n                    isManualToAutoTransition = this._state.trigger.type === 1 /* CodeActionTriggerType.Invoke */ &&\n                        newState.type === 1 /* CodeActionsState.Type.Triggered */ &&\n                        newState.trigger.type === 2 /* CodeActionTriggerType.Auto */ &&\n                        this._state.position !== newState.position;\n                }\n                // Do not trigger state if current state is manual and incoming state is automatic\n                if (!isManualToAutoTransition) {\n                    this.setState(newState);\n                }\n                else {\n                    // Reset the new state after getting code actions back.\n                    setTimeout(() => {\n                        this.setState(newState);\n                    }, 500);\n                }\n            }, undefined);\n            this._codeActionOracle.value.trigger({ type: 2 /* CodeActionTriggerType.Auto */, triggerAction: CodeActionTriggerSource.Default });\n        }\n        else {\n            this._supportedCodeActions.reset();\n        }\n    }\n    trigger(trigger) {\n        var _a;\n        (_a = this._codeActionOracle.value) === null || _a === void 0 ? void 0 : _a.trigger(trigger);\n    }\n    setState(newState, skipNotify) {\n        if (newState === this._state) {\n            return;\n        }\n        // Cancel old request\n        if (this._state.type === 1 /* CodeActionsState.Type.Triggered */) {\n            this._state.cancel();\n        }\n        this._state = newState;\n        if (!skipNotify && !this._disposed) {\n            this._onDidChangeState.fire(newState);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar LightBulbWidget_1;\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Gesture } from '../../../../base/browser/touch.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport './lightBulbWidget.css';\nimport { computeIndentLevel } from '../../../common/model/utils.js';\nimport { autoFixCommandId, quickFixCommandId } from './codeAction.js';\nimport * as nls from '../../../../nls.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nvar LightBulbState;\n(function (LightBulbState) {\n    LightBulbState.Hidden = { type: 0 /* Type.Hidden */ };\n    class Showing {\n        constructor(actions, trigger, editorPosition, widgetPosition) {\n            this.actions = actions;\n            this.trigger = trigger;\n            this.editorPosition = editorPosition;\n            this.widgetPosition = widgetPosition;\n            this.type = 1 /* Type.Showing */;\n        }\n    }\n    LightBulbState.Showing = Showing;\n})(LightBulbState || (LightBulbState = {}));\nlet LightBulbWidget = LightBulbWidget_1 = class LightBulbWidget extends Disposable {\n    constructor(_editor, _keybindingService, commandService) {\n        super();\n        this._editor = _editor;\n        this._keybindingService = _keybindingService;\n        this._onClick = this._register(new Emitter());\n        this.onClick = this._onClick.event;\n        this._state = LightBulbState.Hidden;\n        this._iconClasses = [];\n        this._domNode = dom.$('div.lightBulbWidget');\n        this._domNode.role = 'listbox';\n        this._register(Gesture.ignoreTarget(this._domNode));\n        this._editor.addContentWidget(this);\n        this._register(this._editor.onDidChangeModelContent(_ => {\n            // cancel when the line in question has been removed\n            const editorModel = this._editor.getModel();\n            if (this.state.type !== 1 /* LightBulbState.Type.Showing */ || !editorModel || this.state.editorPosition.lineNumber >= editorModel.getLineCount()) {\n                this.hide();\n            }\n        }));\n        this._register(dom.addStandardDisposableGenericMouseDownListener(this._domNode, e => {\n            if (this.state.type !== 1 /* LightBulbState.Type.Showing */) {\n                return;\n            }\n            // Make sure that focus / cursor location is not lost when clicking widget icon\n            this._editor.focus();\n            e.preventDefault();\n            // a bit of extra work to make sure the menu\n            // doesn't cover the line-text\n            const { top, height } = dom.getDomNodePagePosition(this._domNode);\n            const lineHeight = this._editor.getOption(67 /* EditorOption.lineHeight */);\n            let pad = Math.floor(lineHeight / 3);\n            if (this.state.widgetPosition.position !== null && this.state.widgetPosition.position.lineNumber < this.state.editorPosition.lineNumber) {\n                pad += lineHeight;\n            }\n            this._onClick.fire({\n                x: e.posx,\n                y: top + height + pad,\n                actions: this.state.actions,\n                trigger: this.state.trigger,\n            });\n        }));\n        this._register(dom.addDisposableListener(this._domNode, 'mouseenter', (e) => {\n            if ((e.buttons & 1) !== 1) {\n                return;\n            }\n            // mouse enters lightbulb while the primary/left button\n            // is being pressed -> hide the lightbulb\n            this.hide();\n        }));\n        this._register(Event.runAndSubscribe(this._keybindingService.onDidUpdateKeybindings, () => {\n            var _a, _b, _c, _d;\n            this._preferredKbLabel = (_b = (_a = this._keybindingService.lookupKeybinding(autoFixCommandId)) === null || _a === void 0 ? void 0 : _a.getLabel()) !== null && _b !== void 0 ? _b : undefined;\n            this._quickFixKbLabel = (_d = (_c = this._keybindingService.lookupKeybinding(quickFixCommandId)) === null || _c === void 0 ? void 0 : _c.getLabel()) !== null && _d !== void 0 ? _d : undefined;\n            this._updateLightBulbTitleAndIcon();\n        }));\n    }\n    dispose() {\n        super.dispose();\n        this._editor.removeContentWidget(this);\n    }\n    getId() {\n        return 'LightBulbWidget';\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        return this._state.type === 1 /* LightBulbState.Type.Showing */ ? this._state.widgetPosition : null;\n    }\n    update(actions, trigger, atPosition) {\n        if (actions.validActions.length <= 0) {\n            return this.hide();\n        }\n        const options = this._editor.getOptions();\n        if (!options.get(65 /* EditorOption.lightbulb */).enabled) {\n            return this.hide();\n        }\n        const model = this._editor.getModel();\n        if (!model) {\n            return this.hide();\n        }\n        const { lineNumber, column } = model.validatePosition(atPosition);\n        const tabSize = model.getOptions().tabSize;\n        const fontInfo = this._editor.getOptions().get(50 /* EditorOption.fontInfo */);\n        const lineContent = model.getLineContent(lineNumber);\n        const indent = computeIndentLevel(lineContent, tabSize);\n        const lineHasSpace = fontInfo.spaceWidth * indent > 22;\n        const isFolded = (lineNumber) => {\n            return lineNumber > 2 && this._editor.getTopForLineNumber(lineNumber) === this._editor.getTopForLineNumber(lineNumber - 1);\n        };\n        let effectiveLineNumber = lineNumber;\n        let effectiveColumnNumber = 1;\n        if (!lineHasSpace) {\n            if (lineNumber > 1 && !isFolded(lineNumber - 1)) {\n                effectiveLineNumber -= 1;\n            }\n            else if ((lineNumber < model.getLineCount()) && !isFolded(lineNumber + 1)) {\n                effectiveLineNumber += 1;\n            }\n            else if (column * fontInfo.spaceWidth < 22) {\n                // cannot show lightbulb above/below and showing\n                // it inline would overlay the cursor...\n                return this.hide();\n            }\n            effectiveColumnNumber = /^\\S\\s*$/.test(model.getLineContent(effectiveLineNumber)) ? 2 : 1;\n        }\n        this.state = new LightBulbState.Showing(actions, trigger, atPosition, {\n            position: { lineNumber: effectiveLineNumber, column: effectiveColumnNumber },\n            preference: LightBulbWidget_1._posPref\n        });\n        this._editor.layoutContentWidget(this);\n    }\n    hide() {\n        if (this.state === LightBulbState.Hidden) {\n            return;\n        }\n        this.state = LightBulbState.Hidden;\n        this._editor.layoutContentWidget(this);\n    }\n    get state() { return this._state; }\n    set state(value) {\n        this._state = value;\n        this._updateLightBulbTitleAndIcon();\n    }\n    _updateLightBulbTitleAndIcon() {\n        this._domNode.classList.remove(...this._iconClasses);\n        this._iconClasses = [];\n        if (this.state.type !== 1 /* LightBulbState.Type.Showing */) {\n            return;\n        }\n        let icon;\n        let autoRun = false;\n        if (this.state.actions.allAIFixes) {\n            icon = Codicon.sparkleFilled;\n            if (this.state.actions.validActions.length === 1) {\n                autoRun = true;\n            }\n        }\n        else if (this.state.actions.hasAutoFix) {\n            if (this.state.actions.hasAIFix) {\n                icon = Codicon.lightbulbSparkleAutofix;\n            }\n            else {\n                icon = Codicon.lightbulbAutofix;\n            }\n        }\n        else if (this.state.actions.hasAIFix) {\n            icon = Codicon.lightbulbSparkle;\n        }\n        else {\n            icon = Codicon.lightBulb;\n        }\n        this._updateLightbulbTitle(this.state.actions.hasAutoFix, autoRun);\n        this._iconClasses = ThemeIcon.asClassNameArray(icon);\n        this._domNode.classList.add(...this._iconClasses);\n    }\n    _updateLightbulbTitle(autoFix, autoRun) {\n        if (this.state.type !== 1 /* LightBulbState.Type.Showing */) {\n            return;\n        }\n        if (autoRun) {\n            this.title = nls.localize('codeActionAutoRun', \"Run: {0}\", this.state.actions.validActions[0].action.title);\n        }\n        else if (autoFix && this._preferredKbLabel) {\n            this.title = nls.localize('preferredcodeActionWithKb', \"Show Code Actions. Preferred Quick Fix Available ({0})\", this._preferredKbLabel);\n        }\n        else if (!autoFix && this._quickFixKbLabel) {\n            this.title = nls.localize('codeActionWithKb', \"Show Code Actions ({0})\", this._quickFixKbLabel);\n        }\n        else if (!autoFix) {\n            this.title = nls.localize('codeAction', \"Show Code Actions\");\n        }\n    }\n    set title(value) {\n        this._domNode.title = value;\n    }\n};\nLightBulbWidget.ID = 'editor.contrib.lightbulbWidget';\nLightBulbWidget._posPref = [0 /* ContentWidgetPositionPreference.EXACT */];\nLightBulbWidget = LightBulbWidget_1 = __decorate([\n    __param(1, IKeybindingService),\n    __param(2, ICommandService)\n], LightBulbWidget);\nexport { LightBulbWidget };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nexport const CodeActionKind = new class {\n    constructor() {\n        this.QuickFix = new HierarchicalKind('quickfix');\n        this.Refactor = new HierarchicalKind('refactor');\n        this.RefactorExtract = this.Refactor.append('extract');\n        this.RefactorInline = this.Refactor.append('inline');\n        this.RefactorMove = this.Refactor.append('move');\n        this.RefactorRewrite = this.Refactor.append('rewrite');\n        this.Notebook = new HierarchicalKind('notebook');\n        this.Source = new HierarchicalKind('source');\n        this.SourceOrganizeImports = this.Source.append('organizeImports');\n        this.SourceFixAll = this.Source.append('fixAll');\n        this.SurroundWith = this.Refactor.append('surround');\n    }\n};\nexport var CodeActionTriggerSource;\n(function (CodeActionTriggerSource) {\n    CodeActionTriggerSource[\"Refactor\"] = \"refactor\";\n    CodeActionTriggerSource[\"RefactorPreview\"] = \"refactor preview\";\n    CodeActionTriggerSource[\"Lightbulb\"] = \"lightbulb\";\n    CodeActionTriggerSource[\"Default\"] = \"other (default)\";\n    CodeActionTriggerSource[\"SourceAction\"] = \"source action\";\n    CodeActionTriggerSource[\"QuickFix\"] = \"quick fix action\";\n    CodeActionTriggerSource[\"FixAll\"] = \"fix all\";\n    CodeActionTriggerSource[\"OrganizeImports\"] = \"organize imports\";\n    CodeActionTriggerSource[\"AutoFix\"] = \"auto fix\";\n    CodeActionTriggerSource[\"QuickFixHover\"] = \"quick fix hover window\";\n    CodeActionTriggerSource[\"OnSave\"] = \"save participants\";\n    CodeActionTriggerSource[\"ProblemsView\"] = \"problems view\";\n})(CodeActionTriggerSource || (CodeActionTriggerSource = {}));\nexport function mayIncludeActionsOfKind(filter, providedKind) {\n    // A provided kind may be a subset or superset of our filtered kind.\n    if (filter.include && !filter.include.intersects(providedKind)) {\n        return false;\n    }\n    if (filter.excludes) {\n        if (filter.excludes.some(exclude => excludesAction(providedKind, exclude, filter.include))) {\n            return false;\n        }\n    }\n    // Don't return source actions unless they are explicitly requested\n    if (!filter.includeSourceActions && CodeActionKind.Source.contains(providedKind)) {\n        return false;\n    }\n    return true;\n}\nexport function filtersAction(filter, action) {\n    const actionKind = action.kind ? new HierarchicalKind(action.kind) : undefined;\n    // Filter out actions by kind\n    if (filter.include) {\n        if (!actionKind || !filter.include.contains(actionKind)) {\n            return false;\n        }\n    }\n    if (filter.excludes) {\n        if (actionKind && filter.excludes.some(exclude => excludesAction(actionKind, exclude, filter.include))) {\n            return false;\n        }\n    }\n    // Don't return source actions unless they are explicitly requested\n    if (!filter.includeSourceActions) {\n        if (actionKind && CodeActionKind.Source.contains(actionKind)) {\n            return false;\n        }\n    }\n    if (filter.onlyIncludePreferredActions) {\n        if (!action.isPreferred) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction excludesAction(providedKind, exclude, include) {\n    if (!exclude.contains(providedKind)) {\n        return false;\n    }\n    if (include && exclude.contains(include)) {\n        // The include is more specific, don't filter out\n        return false;\n    }\n    return true;\n}\nexport class CodeActionCommandArgs {\n    static fromUser(arg, defaults) {\n        if (!arg || typeof arg !== 'object') {\n            return new CodeActionCommandArgs(defaults.kind, defaults.apply, false);\n        }\n        return new CodeActionCommandArgs(CodeActionCommandArgs.getKindFromUser(arg, defaults.kind), CodeActionCommandArgs.getApplyFromUser(arg, defaults.apply), CodeActionCommandArgs.getPreferredUser(arg));\n    }\n    static getApplyFromUser(arg, defaultAutoApply) {\n        switch (typeof arg.apply === 'string' ? arg.apply.toLowerCase() : '') {\n            case 'first': return \"first\" /* CodeActionAutoApply.First */;\n            case 'never': return \"never\" /* CodeActionAutoApply.Never */;\n            case 'ifsingle': return \"ifSingle\" /* CodeActionAutoApply.IfSingle */;\n            default: return defaultAutoApply;\n        }\n    }\n    static getKindFromUser(arg, defaultKind) {\n        return typeof arg.kind === 'string'\n            ? new HierarchicalKind(arg.kind)\n            : defaultKind;\n    }\n    static getPreferredUser(arg) {\n        return typeof arg.preferred === 'boolean'\n            ? arg.preferred\n            : false;\n    }\n    constructor(kind, apply, preferred) {\n        this.kind = kind;\n        this.apply = apply;\n        this.preferred = preferred;\n    }\n}\nexport class CodeActionItem {\n    constructor(action, provider, highlightRange) {\n        this.action = action;\n        this.provider = provider;\n        this.highlightRange = highlightRange;\n    }\n    async resolve(token) {\n        var _a;\n        if (((_a = this.provider) === null || _a === void 0 ? void 0 : _a.resolveCodeAction) && !this.action.edit) {\n            let action;\n            try {\n                action = await this.provider.resolveCodeAction(this.action, token);\n            }\n            catch (err) {\n                onUnexpectedExternalError(err);\n            }\n            if (action) {\n                this.action.edit = action.edit;\n            }\n        }\n        return this;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { illegalArgument, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport class CodeLensModel {\n    constructor() {\n        this.lenses = [];\n        this._disposables = new DisposableStore();\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n    get isDisposed() {\n        return this._disposables.isDisposed;\n    }\n    add(list, provider) {\n        this._disposables.add(list);\n        for (const symbol of list.lenses) {\n            this.lenses.push({ symbol, provider });\n        }\n    }\n}\nexport async function getCodeLensModel(registry, model, token) {\n    const provider = registry.ordered(model);\n    const providerRanks = new Map();\n    const result = new CodeLensModel();\n    const promises = provider.map(async (provider, i) => {\n        providerRanks.set(provider, i);\n        try {\n            const list = await Promise.resolve(provider.provideCodeLenses(model, token));\n            if (list) {\n                result.add(list, provider);\n            }\n        }\n        catch (err) {\n            onUnexpectedExternalError(err);\n        }\n    });\n    await Promise.all(promises);\n    result.lenses = result.lenses.sort((a, b) => {\n        // sort by lineNumber, provider-rank, and column\n        if (a.symbol.range.startLineNumber < b.symbol.range.startLineNumber) {\n            return -1;\n        }\n        else if (a.symbol.range.startLineNumber > b.symbol.range.startLineNumber) {\n            return 1;\n        }\n        else if ((providerRanks.get(a.provider)) < (providerRanks.get(b.provider))) {\n            return -1;\n        }\n        else if ((providerRanks.get(a.provider)) > (providerRanks.get(b.provider))) {\n            return 1;\n        }\n        else if (a.symbol.range.startColumn < b.symbol.range.startColumn) {\n            return -1;\n        }\n        else if (a.symbol.range.startColumn > b.symbol.range.startColumn) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    });\n    return result;\n}\nCommandsRegistry.registerCommand('_executeCodeLensProvider', function (accessor, ...args) {\n    let [uri, itemResolveCount] = args;\n    assertType(URI.isUri(uri));\n    assertType(typeof itemResolveCount === 'number' || !itemResolveCount);\n    const { codeLensProvider } = accessor.get(ILanguageFeaturesService);\n    const model = accessor.get(IModelService).getModel(uri);\n    if (!model) {\n        throw illegalArgument();\n    }\n    const result = [];\n    const disposables = new DisposableStore();\n    return getCodeLensModel(codeLensProvider, model, CancellationToken.None).then(value => {\n        disposables.add(value);\n        const resolve = [];\n        for (const item of value.lenses) {\n            if (itemResolveCount === undefined || itemResolveCount === null || Boolean(item.symbol.command)) {\n                result.push(item.symbol);\n            }\n            else if (itemResolveCount-- > 0 && item.provider.resolveCodeLens) {\n                resolve.push(Promise.resolve(item.provider.resolveCodeLens(model, item.symbol, CancellationToken.None)).then(symbol => result.push(symbol || item.symbol)));\n            }\n        }\n        return Promise.all(resolve);\n    }).then(() => {\n        return result;\n    }).finally(() => {\n        // make sure to return results, then (on next tick)\n        // dispose the results\n        setTimeout(() => disposables.dispose(), 100);\n    });\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Event } from '../../../../base/common/event.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { Range } from '../../../common/core/range.js';\nimport { CodeLensModel } from './codelens.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IStorageService, WillSaveStateReason } from '../../../../platform/storage/common/storage.js';\nimport { mainWindow } from '../../../../base/browser/window.js';\nimport { runWhenWindowIdle } from '../../../../base/browser/dom.js';\nexport const ICodeLensCache = createDecorator('ICodeLensCache');\nclass CacheItem {\n    constructor(lineCount, data) {\n        this.lineCount = lineCount;\n        this.data = data;\n    }\n}\nlet CodeLensCache = class CodeLensCache {\n    constructor(storageService) {\n        this._fakeProvider = new class {\n            provideCodeLenses() {\n                throw new Error('not supported');\n            }\n        };\n        this._cache = new LRUCache(20, 0.75);\n        // remove old data\n        const oldkey = 'codelens/cache';\n        runWhenWindowIdle(mainWindow, () => storageService.remove(oldkey, 1 /* StorageScope.WORKSPACE */));\n        // restore lens data on start\n        const key = 'codelens/cache2';\n        const raw = storageService.get(key, 1 /* StorageScope.WORKSPACE */, '{}');\n        this._deserialize(raw);\n        // store lens data on shutdown\n        Event.once(storageService.onWillSaveState)(e => {\n            if (e.reason === WillSaveStateReason.SHUTDOWN) {\n                storageService.store(key, this._serialize(), 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n            }\n        });\n    }\n    put(model, data) {\n        // create a copy of the model that is without command-ids\n        // but with comand-labels\n        const copyItems = data.lenses.map(item => {\n            var _a;\n            return {\n                range: item.symbol.range,\n                command: item.symbol.command && { id: '', title: (_a = item.symbol.command) === null || _a === void 0 ? void 0 : _a.title },\n            };\n        });\n        const copyModel = new CodeLensModel();\n        copyModel.add({ lenses: copyItems, dispose: () => { } }, this._fakeProvider);\n        const item = new CacheItem(model.getLineCount(), copyModel);\n        this._cache.set(model.uri.toString(), item);\n    }\n    get(model) {\n        const item = this._cache.get(model.uri.toString());\n        return item && item.lineCount === model.getLineCount() ? item.data : undefined;\n    }\n    delete(model) {\n        this._cache.delete(model.uri.toString());\n    }\n    // --- persistence\n    _serialize() {\n        const data = Object.create(null);\n        for (const [key, value] of this._cache) {\n            const lines = new Set();\n            for (const d of value.data.lenses) {\n                lines.add(d.symbol.range.startLineNumber);\n            }\n            data[key] = {\n                lineCount: value.lineCount,\n                lines: [...lines.values()]\n            };\n        }\n        return JSON.stringify(data);\n    }\n    _deserialize(raw) {\n        try {\n            const data = JSON.parse(raw);\n            for (const key in data) {\n                const element = data[key];\n                const lenses = [];\n                for (const line of element.lines) {\n                    lenses.push({ range: new Range(line, 1, line, 11) });\n                }\n                const model = new CodeLensModel();\n                model.add({ lenses, dispose() { } }, this._fakeProvider);\n                this._cache.set(key, new CacheItem(element.lineCount, model));\n            }\n        }\n        catch (_a) {\n            // ignore...\n        }\n    }\n};\nCodeLensCache = __decorate([\n    __param(0, IStorageService)\n], CodeLensCache);\nexport { CodeLensCache };\nregisterSingleton(ICodeLensCache, CodeLensCache, 1 /* InstantiationType.Delayed */);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { renderLabelWithIcons } from '../../../../base/browser/ui/iconLabel/iconLabels.js';\nimport './codelensWidget.css';\nimport { Range } from '../../../common/core/range.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nclass CodeLensViewZone {\n    constructor(afterLineNumber, heightInPx, onHeight) {\n        /**\n         * We want that this view zone, which reserves space for a code lens appears\n         * as close as possible to the next line, so we use a very large value here.\n         */\n        this.afterColumn = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n        this.afterLineNumber = afterLineNumber;\n        this.heightInPx = heightInPx;\n        this._onHeight = onHeight;\n        this.suppressMouseDown = true;\n        this.domNode = document.createElement('div');\n    }\n    onComputedHeight(height) {\n        if (this._lastHeight === undefined) {\n            this._lastHeight = height;\n        }\n        else if (this._lastHeight !== height) {\n            this._lastHeight = height;\n            this._onHeight();\n        }\n    }\n    isVisible() {\n        return this._lastHeight !== 0\n            && this.domNode.hasAttribute('monaco-visible-view-zone');\n    }\n}\nclass CodeLensContentWidget {\n    constructor(editor, line) {\n        // Editor.IContentWidget.allowEditorOverflow\n        this.allowEditorOverflow = false;\n        this.suppressMouseDown = true;\n        this._commands = new Map();\n        this._isEmpty = true;\n        this._editor = editor;\n        this._id = `codelens.widget-${(CodeLensContentWidget._idPool++)}`;\n        this.updatePosition(line);\n        this._domNode = document.createElement('span');\n        this._domNode.className = `codelens-decoration`;\n    }\n    withCommands(lenses, animate) {\n        this._commands.clear();\n        const children = [];\n        let hasSymbol = false;\n        for (let i = 0; i < lenses.length; i++) {\n            const lens = lenses[i];\n            if (!lens) {\n                continue;\n            }\n            hasSymbol = true;\n            if (lens.command) {\n                const title = renderLabelWithIcons(lens.command.title.trim());\n                if (lens.command.id) {\n                    const id = `c${(CodeLensContentWidget._idPool++)}`;\n                    children.push(dom.$('a', { id, title: lens.command.tooltip, role: 'button' }, ...title));\n                    this._commands.set(id, lens.command);\n                }\n                else {\n                    children.push(dom.$('span', { title: lens.command.tooltip }, ...title));\n                }\n                if (i + 1 < lenses.length) {\n                    children.push(dom.$('span', undefined, '\\u00a0|\\u00a0'));\n                }\n            }\n        }\n        if (!hasSymbol) {\n            // symbols but no commands\n            dom.reset(this._domNode, dom.$('span', undefined, 'no commands'));\n        }\n        else {\n            // symbols and commands\n            dom.reset(this._domNode, ...children);\n            if (this._isEmpty && animate) {\n                this._domNode.classList.add('fadein');\n            }\n            this._isEmpty = false;\n        }\n    }\n    getCommand(link) {\n        return link.parentElement === this._domNode\n            ? this._commands.get(link.id)\n            : undefined;\n    }\n    getId() {\n        return this._id;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    updatePosition(line) {\n        const column = this._editor.getModel().getLineFirstNonWhitespaceColumn(line);\n        this._widgetPosition = {\n            position: { lineNumber: line, column: column },\n            preference: [1 /* ContentWidgetPositionPreference.ABOVE */]\n        };\n    }\n    getPosition() {\n        return this._widgetPosition || null;\n    }\n}\nCodeLensContentWidget._idPool = 0;\nexport class CodeLensHelper {\n    constructor() {\n        this._removeDecorations = [];\n        this._addDecorations = [];\n        this._addDecorationsCallbacks = [];\n    }\n    addDecoration(decoration, callback) {\n        this._addDecorations.push(decoration);\n        this._addDecorationsCallbacks.push(callback);\n    }\n    removeDecoration(decorationId) {\n        this._removeDecorations.push(decorationId);\n    }\n    commit(changeAccessor) {\n        const resultingDecorations = changeAccessor.deltaDecorations(this._removeDecorations, this._addDecorations);\n        for (let i = 0, len = resultingDecorations.length; i < len; i++) {\n            this._addDecorationsCallbacks[i](resultingDecorations[i]);\n        }\n    }\n}\nconst codeLensDecorationOptions = ModelDecorationOptions.register({\n    collapseOnReplaceEdit: true,\n    description: 'codelens'\n});\nexport class CodeLensWidget {\n    constructor(data, editor, helper, viewZoneChangeAccessor, heightInPx, updateCallback) {\n        this._isDisposed = false;\n        this._editor = editor;\n        this._data = data;\n        // create combined range, track all ranges with decorations,\n        // check if there is already something to render\n        this._decorationIds = [];\n        let range;\n        const lenses = [];\n        this._data.forEach((codeLensData, i) => {\n            if (codeLensData.symbol.command) {\n                lenses.push(codeLensData.symbol);\n            }\n            helper.addDecoration({\n                range: codeLensData.symbol.range,\n                options: codeLensDecorationOptions\n            }, id => this._decorationIds[i] = id);\n            // the range contains all lenses on this line\n            if (!range) {\n                range = Range.lift(codeLensData.symbol.range);\n            }\n            else {\n                range = Range.plusRange(range, codeLensData.symbol.range);\n            }\n        });\n        this._viewZone = new CodeLensViewZone(range.startLineNumber - 1, heightInPx, updateCallback);\n        this._viewZoneId = viewZoneChangeAccessor.addZone(this._viewZone);\n        if (lenses.length > 0) {\n            this._createContentWidgetIfNecessary();\n            this._contentWidget.withCommands(lenses, false);\n        }\n    }\n    _createContentWidgetIfNecessary() {\n        if (!this._contentWidget) {\n            this._contentWidget = new CodeLensContentWidget(this._editor, this._viewZone.afterLineNumber + 1);\n            this._editor.addContentWidget(this._contentWidget);\n        }\n        else {\n            this._editor.layoutContentWidget(this._contentWidget);\n        }\n    }\n    dispose(helper, viewZoneChangeAccessor) {\n        this._decorationIds.forEach(helper.removeDecoration, helper);\n        this._decorationIds = [];\n        viewZoneChangeAccessor === null || viewZoneChangeAccessor === void 0 ? void 0 : viewZoneChangeAccessor.removeZone(this._viewZoneId);\n        if (this._contentWidget) {\n            this._editor.removeContentWidget(this._contentWidget);\n            this._contentWidget = undefined;\n        }\n        this._isDisposed = true;\n    }\n    isDisposed() {\n        return this._isDisposed;\n    }\n    isValid() {\n        return this._decorationIds.some((id, i) => {\n            const range = this._editor.getModel().getDecorationRange(id);\n            const symbol = this._data[i].symbol;\n            return !!(range && Range.isEmpty(symbol.range) === range.isEmpty());\n        });\n    }\n    updateCodeLensSymbols(data, helper) {\n        this._decorationIds.forEach(helper.removeDecoration, helper);\n        this._decorationIds = [];\n        this._data = data;\n        this._data.forEach((codeLensData, i) => {\n            helper.addDecoration({\n                range: codeLensData.symbol.range,\n                options: codeLensDecorationOptions\n            }, id => this._decorationIds[i] = id);\n        });\n    }\n    updateHeight(height, viewZoneChangeAccessor) {\n        this._viewZone.heightInPx = height;\n        viewZoneChangeAccessor.layoutZone(this._viewZoneId);\n        if (this._contentWidget) {\n            this._editor.layoutContentWidget(this._contentWidget);\n        }\n    }\n    computeIfNecessary(model) {\n        if (!this._viewZone.isVisible()) {\n            return null;\n        }\n        // Read editor current state\n        for (let i = 0; i < this._decorationIds.length; i++) {\n            const range = model.getDecorationRange(this._decorationIds[i]);\n            if (range) {\n                this._data[i].symbol.range = range;\n            }\n        }\n        return this._data;\n    }\n    updateCommands(symbols) {\n        this._createContentWidgetIfNecessary();\n        this._contentWidget.withCommands(symbols, true);\n        for (let i = 0; i < this._data.length; i++) {\n            const resolved = symbols[i];\n            if (resolved) {\n                const { symbol } = this._data[i];\n                symbol.command = resolved.command || symbol.command;\n            }\n        }\n    }\n    getCommand(link) {\n        var _a;\n        return (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.getCommand(link);\n    }\n    getLineNumber() {\n        const range = this._editor.getModel().getDecorationRange(this._decorationIds[0]);\n        if (range) {\n            return range.startLineNumber;\n        }\n        return -1;\n    }\n    update(viewZoneChangeAccessor) {\n        if (this.isValid()) {\n            const range = this._editor.getModel().getDecorationRange(this._decorationIds[0]);\n            if (range) {\n                this._viewZone.afterLineNumber = range.startLineNumber - 1;\n                viewZoneChangeAccessor.layoutZone(this._viewZoneId);\n                if (this._contentWidget) {\n                    this._contentWidget.updatePosition(range.startLineNumber);\n                    this._editor.layoutContentWidget(this._contentWidget);\n                }\n            }\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { createCancelablePromise, disposableTimeout, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { StableEditorScrollState } from '../../../browser/stableEditorScroll.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { EDITOR_FONT_DEFAULTS } from '../../../common/config/editorOptions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { getCodeLensModel } from './codelens.js';\nimport { ICodeLensCache } from './codeLensCache.js';\nimport { CodeLensHelper, CodeLensWidget } from './codelensWidget.js';\nimport { localize } from '../../../../nls.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nlet CodeLensContribution = class CodeLensContribution {\n    constructor(_editor, _languageFeaturesService, debounceService, _commandService, _notificationService, _codeLensCache) {\n        this._editor = _editor;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._commandService = _commandService;\n        this._notificationService = _notificationService;\n        this._codeLensCache = _codeLensCache;\n        this._disposables = new DisposableStore();\n        this._localToDispose = new DisposableStore();\n        this._lenses = [];\n        this._oldCodeLensModels = new DisposableStore();\n        this._provideCodeLensDebounce = debounceService.for(_languageFeaturesService.codeLensProvider, 'CodeLensProvide', { min: 250 });\n        this._resolveCodeLensesDebounce = debounceService.for(_languageFeaturesService.codeLensProvider, 'CodeLensResolve', { min: 250, salt: 'resolve' });\n        this._resolveCodeLensesScheduler = new RunOnceScheduler(() => this._resolveCodeLensesInViewport(), this._resolveCodeLensesDebounce.default());\n        this._disposables.add(this._editor.onDidChangeModel(() => this._onModelChange()));\n        this._disposables.add(this._editor.onDidChangeModelLanguage(() => this._onModelChange()));\n        this._disposables.add(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(50 /* EditorOption.fontInfo */) || e.hasChanged(19 /* EditorOption.codeLensFontSize */) || e.hasChanged(18 /* EditorOption.codeLensFontFamily */)) {\n                this._updateLensStyle();\n            }\n            if (e.hasChanged(17 /* EditorOption.codeLens */)) {\n                this._onModelChange();\n            }\n        }));\n        this._disposables.add(_languageFeaturesService.codeLensProvider.onDidChange(this._onModelChange, this));\n        this._onModelChange();\n        this._updateLensStyle();\n    }\n    dispose() {\n        var _a;\n        this._localDispose();\n        this._disposables.dispose();\n        this._oldCodeLensModels.dispose();\n        (_a = this._currentCodeLensModel) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    _getLayoutInfo() {\n        const lineHeightFactor = Math.max(1.3, this._editor.getOption(67 /* EditorOption.lineHeight */) / this._editor.getOption(52 /* EditorOption.fontSize */));\n        let fontSize = this._editor.getOption(19 /* EditorOption.codeLensFontSize */);\n        if (!fontSize || fontSize < 5) {\n            fontSize = (this._editor.getOption(52 /* EditorOption.fontSize */) * .9) | 0;\n        }\n        return {\n            fontSize,\n            codeLensHeight: (fontSize * lineHeightFactor) | 0,\n        };\n    }\n    _updateLensStyle() {\n        const { codeLensHeight, fontSize } = this._getLayoutInfo();\n        const fontFamily = this._editor.getOption(18 /* EditorOption.codeLensFontFamily */);\n        const editorFontInfo = this._editor.getOption(50 /* EditorOption.fontInfo */);\n        const { style } = this._editor.getContainerDomNode();\n        style.setProperty('--vscode-editorCodeLens-lineHeight', `${codeLensHeight}px`);\n        style.setProperty('--vscode-editorCodeLens-fontSize', `${fontSize}px`);\n        style.setProperty('--vscode-editorCodeLens-fontFeatureSettings', editorFontInfo.fontFeatureSettings);\n        if (fontFamily) {\n            style.setProperty('--vscode-editorCodeLens-fontFamily', fontFamily);\n            style.setProperty('--vscode-editorCodeLens-fontFamilyDefault', EDITOR_FONT_DEFAULTS.fontFamily);\n        }\n        //\n        this._editor.changeViewZones(accessor => {\n            for (const lens of this._lenses) {\n                lens.updateHeight(codeLensHeight, accessor);\n            }\n        });\n    }\n    _localDispose() {\n        var _a, _b, _c;\n        (_a = this._getCodeLensModelPromise) === null || _a === void 0 ? void 0 : _a.cancel();\n        this._getCodeLensModelPromise = undefined;\n        (_b = this._resolveCodeLensesPromise) === null || _b === void 0 ? void 0 : _b.cancel();\n        this._resolveCodeLensesPromise = undefined;\n        this._localToDispose.clear();\n        this._oldCodeLensModels.clear();\n        (_c = this._currentCodeLensModel) === null || _c === void 0 ? void 0 : _c.dispose();\n    }\n    _onModelChange() {\n        this._localDispose();\n        const model = this._editor.getModel();\n        if (!model) {\n            return;\n        }\n        if (!this._editor.getOption(17 /* EditorOption.codeLens */) || model.isTooLargeForTokenization()) {\n            return;\n        }\n        const cachedLenses = this._codeLensCache.get(model);\n        if (cachedLenses) {\n            this._renderCodeLensSymbols(cachedLenses);\n        }\n        if (!this._languageFeaturesService.codeLensProvider.has(model)) {\n            // no provider -> return but check with\n            // cached lenses. they expire after 30 seconds\n            if (cachedLenses) {\n                disposableTimeout(() => {\n                    const cachedLensesNow = this._codeLensCache.get(model);\n                    if (cachedLenses === cachedLensesNow) {\n                        this._codeLensCache.delete(model);\n                        this._onModelChange();\n                    }\n                }, 30 * 1000, this._localToDispose);\n            }\n            return;\n        }\n        for (const provider of this._languageFeaturesService.codeLensProvider.all(model)) {\n            if (typeof provider.onDidChange === 'function') {\n                const registration = provider.onDidChange(() => scheduler.schedule());\n                this._localToDispose.add(registration);\n            }\n        }\n        const scheduler = new RunOnceScheduler(() => {\n            var _a;\n            const t1 = Date.now();\n            (_a = this._getCodeLensModelPromise) === null || _a === void 0 ? void 0 : _a.cancel();\n            this._getCodeLensModelPromise = createCancelablePromise(token => getCodeLensModel(this._languageFeaturesService.codeLensProvider, model, token));\n            this._getCodeLensModelPromise.then(result => {\n                if (this._currentCodeLensModel) {\n                    this._oldCodeLensModels.add(this._currentCodeLensModel);\n                }\n                this._currentCodeLensModel = result;\n                // cache model to reduce flicker\n                this._codeLensCache.put(model, result);\n                // update moving average\n                const newDelay = this._provideCodeLensDebounce.update(model, Date.now() - t1);\n                scheduler.delay = newDelay;\n                // render lenses\n                this._renderCodeLensSymbols(result);\n                // dom.scheduleAtNextAnimationFrame(() => this._resolveCodeLensesInViewport());\n                this._resolveCodeLensesInViewportSoon();\n            }, onUnexpectedError);\n        }, this._provideCodeLensDebounce.get(model));\n        this._localToDispose.add(scheduler);\n        this._localToDispose.add(toDisposable(() => this._resolveCodeLensesScheduler.cancel()));\n        this._localToDispose.add(this._editor.onDidChangeModelContent(() => {\n            var _a;\n            this._editor.changeDecorations(decorationsAccessor => {\n                this._editor.changeViewZones(viewZonesAccessor => {\n                    const toDispose = [];\n                    let lastLensLineNumber = -1;\n                    this._lenses.forEach((lens) => {\n                        if (!lens.isValid() || lastLensLineNumber === lens.getLineNumber()) {\n                            // invalid -> lens collapsed, attach range doesn't exist anymore\n                            // line_number -> lenses should never be on the same line\n                            toDispose.push(lens);\n                        }\n                        else {\n                            lens.update(viewZonesAccessor);\n                            lastLensLineNumber = lens.getLineNumber();\n                        }\n                    });\n                    const helper = new CodeLensHelper();\n                    toDispose.forEach((l) => {\n                        l.dispose(helper, viewZonesAccessor);\n                        this._lenses.splice(this._lenses.indexOf(l), 1);\n                    });\n                    helper.commit(decorationsAccessor);\n                });\n            });\n            // Ask for all references again\n            scheduler.schedule();\n            // Cancel pending and active resolve requests\n            this._resolveCodeLensesScheduler.cancel();\n            (_a = this._resolveCodeLensesPromise) === null || _a === void 0 ? void 0 : _a.cancel();\n            this._resolveCodeLensesPromise = undefined;\n        }));\n        this._localToDispose.add(this._editor.onDidFocusEditorWidget(() => {\n            scheduler.schedule();\n        }));\n        this._localToDispose.add(this._editor.onDidBlurEditorText(() => {\n            scheduler.cancel();\n        }));\n        this._localToDispose.add(this._editor.onDidScrollChange(e => {\n            if (e.scrollTopChanged && this._lenses.length > 0) {\n                this._resolveCodeLensesInViewportSoon();\n            }\n        }));\n        this._localToDispose.add(this._editor.onDidLayoutChange(() => {\n            this._resolveCodeLensesInViewportSoon();\n        }));\n        this._localToDispose.add(toDisposable(() => {\n            if (this._editor.getModel()) {\n                const scrollState = StableEditorScrollState.capture(this._editor);\n                this._editor.changeDecorations(decorationsAccessor => {\n                    this._editor.changeViewZones(viewZonesAccessor => {\n                        this._disposeAllLenses(decorationsAccessor, viewZonesAccessor);\n                    });\n                });\n                scrollState.restore(this._editor);\n            }\n            else {\n                // No accessors available\n                this._disposeAllLenses(undefined, undefined);\n            }\n        }));\n        this._localToDispose.add(this._editor.onMouseDown(e => {\n            if (e.target.type !== 9 /* MouseTargetType.CONTENT_WIDGET */) {\n                return;\n            }\n            let target = e.target.element;\n            if ((target === null || target === void 0 ? void 0 : target.tagName) === 'SPAN') {\n                target = target.parentElement;\n            }\n            if ((target === null || target === void 0 ? void 0 : target.tagName) === 'A') {\n                for (const lens of this._lenses) {\n                    const command = lens.getCommand(target);\n                    if (command) {\n                        this._commandService.executeCommand(command.id, ...(command.arguments || [])).catch(err => this._notificationService.error(err));\n                        break;\n                    }\n                }\n            }\n        }));\n        scheduler.schedule();\n    }\n    _disposeAllLenses(decChangeAccessor, viewZoneChangeAccessor) {\n        const helper = new CodeLensHelper();\n        for (const lens of this._lenses) {\n            lens.dispose(helper, viewZoneChangeAccessor);\n        }\n        if (decChangeAccessor) {\n            helper.commit(decChangeAccessor);\n        }\n        this._lenses.length = 0;\n    }\n    _renderCodeLensSymbols(symbols) {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        const maxLineNumber = this._editor.getModel().getLineCount();\n        const groups = [];\n        let lastGroup;\n        for (const symbol of symbols.lenses) {\n            const line = symbol.symbol.range.startLineNumber;\n            if (line < 1 || line > maxLineNumber) {\n                // invalid code lens\n                continue;\n            }\n            else if (lastGroup && lastGroup[lastGroup.length - 1].symbol.range.startLineNumber === line) {\n                // on same line as previous\n                lastGroup.push(symbol);\n            }\n            else {\n                // on later line as previous\n                lastGroup = [symbol];\n                groups.push(lastGroup);\n            }\n        }\n        if (!groups.length && !this._lenses.length) {\n            // Nothing to change\n            return;\n        }\n        const scrollState = StableEditorScrollState.capture(this._editor);\n        const layoutInfo = this._getLayoutInfo();\n        this._editor.changeDecorations(decorationsAccessor => {\n            this._editor.changeViewZones(viewZoneAccessor => {\n                const helper = new CodeLensHelper();\n                let codeLensIndex = 0;\n                let groupsIndex = 0;\n                while (groupsIndex < groups.length && codeLensIndex < this._lenses.length) {\n                    const symbolsLineNumber = groups[groupsIndex][0].symbol.range.startLineNumber;\n                    const codeLensLineNumber = this._lenses[codeLensIndex].getLineNumber();\n                    if (codeLensLineNumber < symbolsLineNumber) {\n                        this._lenses[codeLensIndex].dispose(helper, viewZoneAccessor);\n                        this._lenses.splice(codeLensIndex, 1);\n                    }\n                    else if (codeLensLineNumber === symbolsLineNumber) {\n                        this._lenses[codeLensIndex].updateCodeLensSymbols(groups[groupsIndex], helper);\n                        groupsIndex++;\n                        codeLensIndex++;\n                    }\n                    else {\n                        this._lenses.splice(codeLensIndex, 0, new CodeLensWidget(groups[groupsIndex], this._editor, helper, viewZoneAccessor, layoutInfo.codeLensHeight, () => this._resolveCodeLensesInViewportSoon()));\n                        codeLensIndex++;\n                        groupsIndex++;\n                    }\n                }\n                // Delete extra code lenses\n                while (codeLensIndex < this._lenses.length) {\n                    this._lenses[codeLensIndex].dispose(helper, viewZoneAccessor);\n                    this._lenses.splice(codeLensIndex, 1);\n                }\n                // Create extra symbols\n                while (groupsIndex < groups.length) {\n                    this._lenses.push(new CodeLensWidget(groups[groupsIndex], this._editor, helper, viewZoneAccessor, layoutInfo.codeLensHeight, () => this._resolveCodeLensesInViewportSoon()));\n                    groupsIndex++;\n                }\n                helper.commit(decorationsAccessor);\n            });\n        });\n        scrollState.restore(this._editor);\n    }\n    _resolveCodeLensesInViewportSoon() {\n        const model = this._editor.getModel();\n        if (model) {\n            this._resolveCodeLensesScheduler.schedule();\n        }\n    }\n    _resolveCodeLensesInViewport() {\n        var _a;\n        (_a = this._resolveCodeLensesPromise) === null || _a === void 0 ? void 0 : _a.cancel();\n        this._resolveCodeLensesPromise = undefined;\n        const model = this._editor.getModel();\n        if (!model) {\n            return;\n        }\n        const toResolve = [];\n        const lenses = [];\n        this._lenses.forEach((lens) => {\n            const request = lens.computeIfNecessary(model);\n            if (request) {\n                toResolve.push(request);\n                lenses.push(lens);\n            }\n        });\n        if (toResolve.length === 0) {\n            return;\n        }\n        const t1 = Date.now();\n        const resolvePromise = createCancelablePromise(token => {\n            const promises = toResolve.map((request, i) => {\n                const resolvedSymbols = new Array(request.length);\n                const promises = request.map((request, i) => {\n                    if (!request.symbol.command && typeof request.provider.resolveCodeLens === 'function') {\n                        return Promise.resolve(request.provider.resolveCodeLens(model, request.symbol, token)).then(symbol => {\n                            resolvedSymbols[i] = symbol;\n                        }, onUnexpectedExternalError);\n                    }\n                    else {\n                        resolvedSymbols[i] = request.symbol;\n                        return Promise.resolve(undefined);\n                    }\n                });\n                return Promise.all(promises).then(() => {\n                    if (!token.isCancellationRequested && !lenses[i].isDisposed()) {\n                        lenses[i].updateCommands(resolvedSymbols);\n                    }\n                });\n            });\n            return Promise.all(promises);\n        });\n        this._resolveCodeLensesPromise = resolvePromise;\n        this._resolveCodeLensesPromise.then(() => {\n            // update moving average\n            const newDelay = this._resolveCodeLensesDebounce.update(model, Date.now() - t1);\n            this._resolveCodeLensesScheduler.delay = newDelay;\n            if (this._currentCodeLensModel) { // update the cached state with new resolved items\n                this._codeLensCache.put(model, this._currentCodeLensModel);\n            }\n            this._oldCodeLensModels.clear(); // dispose old models once we have updated the UI with the current model\n            if (resolvePromise === this._resolveCodeLensesPromise) {\n                this._resolveCodeLensesPromise = undefined;\n            }\n        }, err => {\n            onUnexpectedError(err); // can also be cancellation!\n            if (resolvePromise === this._resolveCodeLensesPromise) {\n                this._resolveCodeLensesPromise = undefined;\n            }\n        });\n    }\n    async getModel() {\n        var _a;\n        await this._getCodeLensModelPromise;\n        await this._resolveCodeLensesPromise;\n        return !((_a = this._currentCodeLensModel) === null || _a === void 0 ? void 0 : _a.isDisposed)\n            ? this._currentCodeLensModel\n            : undefined;\n    }\n};\nCodeLensContribution.ID = 'css.editor.codeLens';\nCodeLensContribution = __decorate([\n    __param(1, ILanguageFeaturesService),\n    __param(2, ILanguageFeatureDebounceService),\n    __param(3, ICommandService),\n    __param(4, INotificationService),\n    __param(5, ICodeLensCache)\n], CodeLensContribution);\nexport { CodeLensContribution };\nregisterEditorContribution(CodeLensContribution.ID, CodeLensContribution, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nregisterEditorAction(class ShowLensesInCurrentLine extends EditorAction {\n    constructor() {\n        super({\n            id: 'codelens.showLensesInCurrentLine',\n            precondition: EditorContextKeys.hasCodeLensProvider,\n            label: localize('showLensOnLine', \"Show CodeLens Commands For Current Line\"),\n            alias: 'Show CodeLens Commands For Current Line',\n        });\n    }\n    async run(accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const quickInputService = accessor.get(IQuickInputService);\n        const commandService = accessor.get(ICommandService);\n        const notificationService = accessor.get(INotificationService);\n        const lineNumber = editor.getSelection().positionLineNumber;\n        const codelensController = editor.getContribution(CodeLensContribution.ID);\n        if (!codelensController) {\n            return;\n        }\n        const model = await codelensController.getModel();\n        if (!model) {\n            // nothing\n            return;\n        }\n        const items = [];\n        for (const lens of model.lenses) {\n            if (lens.symbol.command && lens.symbol.range.startLineNumber === lineNumber) {\n                items.push({\n                    label: lens.symbol.command.title,\n                    command: lens.symbol.command\n                });\n            }\n        }\n        if (items.length === 0) {\n            // We dont want an empty picker\n            return;\n        }\n        const item = await quickInputService.pick(items, {\n            canPickMany: false,\n            placeHolder: localize('placeHolder', \"Select a command\")\n        });\n        if (!item) {\n            // Nothing picked\n            return;\n        }\n        let command = item.command;\n        if (model.isDisposed) {\n            // try to find the same command again in-case the model has been re-created in the meantime\n            // this is a best attempt approach which shouldn't be needed because eager model re-creates\n            // shouldn't happen due to focus in/out anymore\n            const newModel = await codelensController.getModel();\n            const newLens = newModel === null || newModel === void 0 ? void 0 : newModel.lenses.find(lens => { var _a; return lens.symbol.range.startLineNumber === lineNumber && ((_a = lens.symbol.command) === null || _a === void 0 ? void 0 : _a.title) === command.title; });\n            if (!newLens || !newLens.symbol.command) {\n                return;\n            }\n            command = newLens.symbol.command;\n        }\n        try {\n            await commandService.executeCommand(command.id, ...(command.arguments || []));\n        }\n        catch (err) {\n            notificationService.error(err);\n        }\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { illegalArgument, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Range } from '../../../common/core/range.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { DefaultDocumentColorProvider } from './defaultDocumentColorProvider.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nexport async function getColors(colorProviderRegistry, model, token, isDefaultColorDecoratorsEnabled = true) {\n    return _findColorData(new ColorDataCollector(), colorProviderRegistry, model, token, isDefaultColorDecoratorsEnabled);\n}\nexport function getColorPresentations(model, colorInfo, provider, token) {\n    return Promise.resolve(provider.provideColorPresentations(model, colorInfo, token));\n}\nclass ColorDataCollector {\n    constructor() { }\n    async compute(provider, model, token, colors) {\n        const documentColors = await provider.provideDocumentColors(model, token);\n        if (Array.isArray(documentColors)) {\n            for (const colorInfo of documentColors) {\n                colors.push({ colorInfo, provider });\n            }\n        }\n        return Array.isArray(documentColors);\n    }\n}\nclass ExtColorDataCollector {\n    constructor() { }\n    async compute(provider, model, token, colors) {\n        const documentColors = await provider.provideDocumentColors(model, token);\n        if (Array.isArray(documentColors)) {\n            for (const colorInfo of documentColors) {\n                colors.push({ range: colorInfo.range, color: [colorInfo.color.red, colorInfo.color.green, colorInfo.color.blue, colorInfo.color.alpha] });\n            }\n        }\n        return Array.isArray(documentColors);\n    }\n}\nclass ColorPresentationsCollector {\n    constructor(colorInfo) {\n        this.colorInfo = colorInfo;\n    }\n    async compute(provider, model, _token, colors) {\n        const documentColors = await provider.provideColorPresentations(model, this.colorInfo, CancellationToken.None);\n        if (Array.isArray(documentColors)) {\n            colors.push(...documentColors);\n        }\n        return Array.isArray(documentColors);\n    }\n}\nasync function _findColorData(collector, colorProviderRegistry, model, token, isDefaultColorDecoratorsEnabled) {\n    let validDocumentColorProviderFound = false;\n    let defaultProvider;\n    const colorData = [];\n    const documentColorProviders = colorProviderRegistry.ordered(model);\n    for (let i = documentColorProviders.length - 1; i >= 0; i--) {\n        const provider = documentColorProviders[i];\n        if (provider instanceof DefaultDocumentColorProvider) {\n            defaultProvider = provider;\n        }\n        else {\n            try {\n                if (await collector.compute(provider, model, token, colorData)) {\n                    validDocumentColorProviderFound = true;\n                }\n            }\n            catch (e) {\n                onUnexpectedExternalError(e);\n            }\n        }\n    }\n    if (validDocumentColorProviderFound) {\n        return colorData;\n    }\n    if (defaultProvider && isDefaultColorDecoratorsEnabled) {\n        await collector.compute(defaultProvider, model, token, colorData);\n        return colorData;\n    }\n    return [];\n}\nfunction _setupColorCommand(accessor, resource) {\n    const { colorProvider: colorProviderRegistry } = accessor.get(ILanguageFeaturesService);\n    const model = accessor.get(IModelService).getModel(resource);\n    if (!model) {\n        throw illegalArgument();\n    }\n    const isDefaultColorDecoratorsEnabled = accessor.get(IConfigurationService).getValue('editor.defaultColorDecorators', { resource });\n    return { model, colorProviderRegistry, isDefaultColorDecoratorsEnabled };\n}\nCommandsRegistry.registerCommand('_executeDocumentColorProvider', function (accessor, ...args) {\n    const [resource] = args;\n    if (!(resource instanceof URI)) {\n        throw illegalArgument();\n    }\n    const { model, colorProviderRegistry, isDefaultColorDecoratorsEnabled } = _setupColorCommand(accessor, resource);\n    return _findColorData(new ExtColorDataCollector(), colorProviderRegistry, model, CancellationToken.None, isDefaultColorDecoratorsEnabled);\n});\nCommandsRegistry.registerCommand('_executeColorPresentationProvider', function (accessor, ...args) {\n    const [color, context] = args;\n    const { uri, range } = context;\n    if (!(uri instanceof URI) || !Array.isArray(color) || color.length !== 4 || !Range.isIRange(range)) {\n        throw illegalArgument();\n    }\n    const { model, colorProviderRegistry, isDefaultColorDecoratorsEnabled } = _setupColorCommand(accessor, uri);\n    const [red, green, blue, alpha] = color;\n    return _findColorData(new ColorPresentationsCollector({ range: range, color: { red, green, blue, alpha } }), colorProviderRegistry, model, CancellationToken.None, isDefaultColorDecoratorsEnabled);\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ColorDecorationInjectedTextMarker } from './colorDetector.js';\nimport { ColorHoverParticipant } from './colorHoverParticipant.js';\nimport { HoverController } from '../../hover/browser/hoverController.js';\nimport { HoverParticipantRegistry } from '../../hover/browser/hoverTypes.js';\nexport class ColorContribution extends Disposable {\n    constructor(_editor) {\n        super();\n        this._editor = _editor;\n        this._register(_editor.onMouseDown((e) => this.onMouseDown(e)));\n    }\n    dispose() {\n        super.dispose();\n    }\n    onMouseDown(mouseEvent) {\n        const colorDecoratorsActivatedOn = this._editor.getOption(148 /* EditorOption.colorDecoratorsActivatedOn */);\n        if (colorDecoratorsActivatedOn !== 'click' && colorDecoratorsActivatedOn !== 'clickAndHover') {\n            return;\n        }\n        const target = mouseEvent.target;\n        if (target.type !== 6 /* MouseTargetType.CONTENT_TEXT */) {\n            return;\n        }\n        if (!target.detail.injectedText) {\n            return;\n        }\n        if (target.detail.injectedText.options.attachedData !== ColorDecorationInjectedTextMarker) {\n            return;\n        }\n        if (!target.range) {\n            return;\n        }\n        const hoverController = this._editor.getContribution(HoverController.ID);\n        if (!hoverController) {\n            return;\n        }\n        if (!hoverController.isColorPickerVisible) {\n            const range = new Range(target.range.startLineNumber, target.range.startColumn + 1, target.range.endLineNumber, target.range.endColumn + 1);\n            hoverController.showContentHover(range, 1 /* HoverStartMode.Immediate */, 0 /* HoverStartSource.Mouse */, false, true);\n        }\n    }\n}\nColorContribution.ID = 'editor.contrib.colorContribution'; // ms\nregisterEditorContribution(ColorContribution.ID, ColorContribution, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nHoverParticipantRegistry.register(ColorHoverParticipant);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar ColorDetector_1;\nimport { createCancelablePromise, TimeoutTimer } from '../../../../base/common/async.js';\nimport { RGBA } from '../../../../base/common/color.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { noBreakWhitespace } from '../../../../base/common/strings.js';\nimport { DynamicCssRules } from '../../../browser/editorDom.js';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { getColors } from './color.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nexport const ColorDecorationInjectedTextMarker = Object.create({});\nlet ColorDetector = ColorDetector_1 = class ColorDetector extends Disposable {\n    constructor(_editor, _configurationService, _languageFeaturesService, languageFeatureDebounceService) {\n        super();\n        this._editor = _editor;\n        this._configurationService = _configurationService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._localToDispose = this._register(new DisposableStore());\n        this._decorationsIds = [];\n        this._colorDatas = new Map();\n        this._colorDecoratorIds = this._editor.createDecorationsCollection();\n        this._ruleFactory = new DynamicCssRules(this._editor);\n        this._decoratorLimitReporter = new DecoratorLimitReporter();\n        this._colorDecorationClassRefs = this._register(new DisposableStore());\n        this._debounceInformation = languageFeatureDebounceService.for(_languageFeaturesService.colorProvider, 'Document Colors', { min: ColorDetector_1.RECOMPUTE_TIME });\n        this._register(_editor.onDidChangeModel(() => {\n            this._isColorDecoratorsEnabled = this.isEnabled();\n            this.updateColors();\n        }));\n        this._register(_editor.onDidChangeModelLanguage(() => this.updateColors()));\n        this._register(_languageFeaturesService.colorProvider.onDidChange(() => this.updateColors()));\n        this._register(_editor.onDidChangeConfiguration((e) => {\n            const prevIsEnabled = this._isColorDecoratorsEnabled;\n            this._isColorDecoratorsEnabled = this.isEnabled();\n            this._isDefaultColorDecoratorsEnabled = this._editor.getOption(147 /* EditorOption.defaultColorDecorators */);\n            const updatedColorDecoratorsSetting = prevIsEnabled !== this._isColorDecoratorsEnabled || e.hasChanged(21 /* EditorOption.colorDecoratorsLimit */);\n            const updatedDefaultColorDecoratorsSetting = e.hasChanged(147 /* EditorOption.defaultColorDecorators */);\n            if (updatedColorDecoratorsSetting || updatedDefaultColorDecoratorsSetting) {\n                if (this._isColorDecoratorsEnabled) {\n                    this.updateColors();\n                }\n                else {\n                    this.removeAllDecorations();\n                }\n            }\n        }));\n        this._timeoutTimer = null;\n        this._computePromise = null;\n        this._isColorDecoratorsEnabled = this.isEnabled();\n        this._isDefaultColorDecoratorsEnabled = this._editor.getOption(147 /* EditorOption.defaultColorDecorators */);\n        this.updateColors();\n    }\n    isEnabled() {\n        const model = this._editor.getModel();\n        if (!model) {\n            return false;\n        }\n        const languageId = model.getLanguageId();\n        // handle deprecated settings. [languageId].colorDecorators.enable\n        const deprecatedConfig = this._configurationService.getValue(languageId);\n        if (deprecatedConfig && typeof deprecatedConfig === 'object') {\n            const colorDecorators = deprecatedConfig['colorDecorators']; // deprecatedConfig.valueOf('.colorDecorators.enable');\n            if (colorDecorators && colorDecorators['enable'] !== undefined && !colorDecorators['enable']) {\n                return colorDecorators['enable'];\n            }\n        }\n        return this._editor.getOption(20 /* EditorOption.colorDecorators */);\n    }\n    static get(editor) {\n        return editor.getContribution(this.ID);\n    }\n    dispose() {\n        this.stop();\n        this.removeAllDecorations();\n        super.dispose();\n    }\n    updateColors() {\n        this.stop();\n        if (!this._isColorDecoratorsEnabled) {\n            return;\n        }\n        const model = this._editor.getModel();\n        if (!model || !this._languageFeaturesService.colorProvider.has(model)) {\n            return;\n        }\n        this._localToDispose.add(this._editor.onDidChangeModelContent(() => {\n            if (!this._timeoutTimer) {\n                this._timeoutTimer = new TimeoutTimer();\n                this._timeoutTimer.cancelAndSet(() => {\n                    this._timeoutTimer = null;\n                    this.beginCompute();\n                }, this._debounceInformation.get(model));\n            }\n        }));\n        this.beginCompute();\n    }\n    async beginCompute() {\n        this._computePromise = createCancelablePromise(async (token) => {\n            const model = this._editor.getModel();\n            if (!model) {\n                return [];\n            }\n            const sw = new StopWatch(false);\n            const colors = await getColors(this._languageFeaturesService.colorProvider, model, token, this._isDefaultColorDecoratorsEnabled);\n            this._debounceInformation.update(model, sw.elapsed());\n            return colors;\n        });\n        try {\n            const colors = await this._computePromise;\n            this.updateDecorations(colors);\n            this.updateColorDecorators(colors);\n            this._computePromise = null;\n        }\n        catch (e) {\n            onUnexpectedError(e);\n        }\n    }\n    stop() {\n        if (this._timeoutTimer) {\n            this._timeoutTimer.cancel();\n            this._timeoutTimer = null;\n        }\n        if (this._computePromise) {\n            this._computePromise.cancel();\n            this._computePromise = null;\n        }\n        this._localToDispose.clear();\n    }\n    updateDecorations(colorDatas) {\n        const decorations = colorDatas.map(c => ({\n            range: {\n                startLineNumber: c.colorInfo.range.startLineNumber,\n                startColumn: c.colorInfo.range.startColumn,\n                endLineNumber: c.colorInfo.range.endLineNumber,\n                endColumn: c.colorInfo.range.endColumn\n            },\n            options: ModelDecorationOptions.EMPTY\n        }));\n        this._editor.changeDecorations((changeAccessor) => {\n            this._decorationsIds = changeAccessor.deltaDecorations(this._decorationsIds, decorations);\n            this._colorDatas = new Map();\n            this._decorationsIds.forEach((id, i) => this._colorDatas.set(id, colorDatas[i]));\n        });\n    }\n    updateColorDecorators(colorData) {\n        this._colorDecorationClassRefs.clear();\n        const decorations = [];\n        const limit = this._editor.getOption(21 /* EditorOption.colorDecoratorsLimit */);\n        for (let i = 0; i < colorData.length && decorations.length < limit; i++) {\n            const { red, green, blue, alpha } = colorData[i].colorInfo.color;\n            const rgba = new RGBA(Math.round(red * 255), Math.round(green * 255), Math.round(blue * 255), alpha);\n            const color = `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a})`;\n            const ref = this._colorDecorationClassRefs.add(this._ruleFactory.createClassNameRef({\n                backgroundColor: color\n            }));\n            decorations.push({\n                range: {\n                    startLineNumber: colorData[i].colorInfo.range.startLineNumber,\n                    startColumn: colorData[i].colorInfo.range.startColumn,\n                    endLineNumber: colorData[i].colorInfo.range.endLineNumber,\n                    endColumn: colorData[i].colorInfo.range.endColumn\n                },\n                options: {\n                    description: 'colorDetector',\n                    before: {\n                        content: noBreakWhitespace,\n                        inlineClassName: `${ref.className} colorpicker-color-decoration`,\n                        inlineClassNameAffectsLetterSpacing: true,\n                        attachedData: ColorDecorationInjectedTextMarker\n                    }\n                }\n            });\n        }\n        const limited = limit < colorData.length ? limit : false;\n        this._decoratorLimitReporter.update(colorData.length, limited);\n        this._colorDecoratorIds.set(decorations);\n    }\n    removeAllDecorations() {\n        this._editor.removeDecorations(this._decorationsIds);\n        this._decorationsIds = [];\n        this._colorDecoratorIds.clear();\n        this._colorDecorationClassRefs.clear();\n    }\n    getColorData(position) {\n        const model = this._editor.getModel();\n        if (!model) {\n            return null;\n        }\n        const decorations = model\n            .getDecorationsInRange(Range.fromPositions(position, position))\n            .filter(d => this._colorDatas.has(d.id));\n        if (decorations.length === 0) {\n            return null;\n        }\n        return this._colorDatas.get(decorations[0].id);\n    }\n    isColorDecoration(decoration) {\n        return this._colorDecoratorIds.has(decoration);\n    }\n};\nColorDetector.ID = 'editor.contrib.colorDetector';\nColorDetector.RECOMPUTE_TIME = 1000; // ms\nColorDetector = ColorDetector_1 = __decorate([\n    __param(1, IConfigurationService),\n    __param(2, ILanguageFeaturesService),\n    __param(3, ILanguageFeatureDebounceService)\n], ColorDetector);\nexport { ColorDetector };\nexport class DecoratorLimitReporter {\n    constructor() {\n        this._onDidChange = new Emitter();\n        this._computed = 0;\n        this._limited = false;\n    }\n    update(computed, limited) {\n        if (computed !== this._computed || limited !== this._limited) {\n            this._computed = computed;\n            this._limited = limited;\n            this._onDidChange.fire();\n        }\n    }\n}\nregisterEditorContribution(ColorDetector.ID, ColorDetector, 1 /* EditorContributionInstantiation.AfterFirstRender */);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../base/common/event.js';\nexport class ColorPickerModel {\n    get color() {\n        return this._color;\n    }\n    set color(color) {\n        if (this._color.equals(color)) {\n            return;\n        }\n        this._color = color;\n        this._onDidChangeColor.fire(color);\n    }\n    get presentation() { return this.colorPresentations[this.presentationIndex]; }\n    get colorPresentations() {\n        return this._colorPresentations;\n    }\n    set colorPresentations(colorPresentations) {\n        this._colorPresentations = colorPresentations;\n        if (this.presentationIndex > colorPresentations.length - 1) {\n            this.presentationIndex = 0;\n        }\n        this._onDidChangePresentation.fire(this.presentation);\n    }\n    constructor(color, availableColorPresentations, presentationIndex) {\n        this.presentationIndex = presentationIndex;\n        this._onColorFlushed = new Emitter();\n        this.onColorFlushed = this._onColorFlushed.event;\n        this._onDidChangeColor = new Emitter();\n        this.onDidChangeColor = this._onDidChangeColor.event;\n        this._onDidChangePresentation = new Emitter();\n        this.onDidChangePresentation = this._onDidChangePresentation.event;\n        this.originalColor = color;\n        this._color = color;\n        this._colorPresentations = availableColorPresentations;\n    }\n    selectNextColorPresentation() {\n        this.presentationIndex = (this.presentationIndex + 1) % this.colorPresentations.length;\n        this.flushColor();\n        this._onDidChangePresentation.fire(this.presentation);\n    }\n    guessColorPresentation(color, originalText) {\n        let presentationIndex = -1;\n        for (let i = 0; i < this.colorPresentations.length; i++) {\n            if (originalText.toLowerCase() === this.colorPresentations[i].label) {\n                presentationIndex = i;\n                break;\n            }\n        }\n        if (presentationIndex === -1) {\n            // check which color presentation text has same prefix as original text's prefix\n            const originalTextPrefix = originalText.split('(')[0].toLowerCase();\n            for (let i = 0; i < this.colorPresentations.length; i++) {\n                if (this.colorPresentations[i].label.toLowerCase().startsWith(originalTextPrefix)) {\n                    presentationIndex = i;\n                    break;\n                }\n            }\n        }\n        if (presentationIndex !== -1 && presentationIndex !== this.presentationIndex) {\n            this.presentationIndex = presentationIndex;\n            this._onDidChangePresentation.fire(this.presentation);\n        }\n    }\n    flushColor() {\n        this._onColorFlushed.fire(this._color);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { PixelRatio } from '../../../../base/browser/pixelRatio.js';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { GlobalPointerMoveMonitor } from '../../../../base/browser/globalPointerMoveMonitor.js';\nimport { Widget } from '../../../../base/browser/ui/widget.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Color, HSVA, RGBA } from '../../../../base/common/color.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport './colorPicker.css';\nimport { localize } from '../../../../nls.js';\nimport { editorHoverBackground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nconst $ = dom.$;\nexport class ColorPickerHeader extends Disposable {\n    constructor(container, model, themeService, showingStandaloneColorPicker = false) {\n        super();\n        this.model = model;\n        this.showingStandaloneColorPicker = showingStandaloneColorPicker;\n        this._closeButton = null;\n        this._domNode = $('.colorpicker-header');\n        dom.append(container, this._domNode);\n        this._pickedColorNode = dom.append(this._domNode, $('.picked-color'));\n        dom.append(this._pickedColorNode, $('span.codicon.codicon-color-mode'));\n        this._pickedColorPresentation = dom.append(this._pickedColorNode, document.createElement('span'));\n        this._pickedColorPresentation.classList.add('picked-color-presentation');\n        const tooltip = localize('clickToToggleColorOptions', \"Click to toggle color options (rgb/hsl/hex)\");\n        this._pickedColorNode.setAttribute('title', tooltip);\n        this._originalColorNode = dom.append(this._domNode, $('.original-color'));\n        this._originalColorNode.style.backgroundColor = Color.Format.CSS.format(this.model.originalColor) || '';\n        this.backgroundColor = themeService.getColorTheme().getColor(editorHoverBackground) || Color.white;\n        this._register(themeService.onDidColorThemeChange(theme => {\n            this.backgroundColor = theme.getColor(editorHoverBackground) || Color.white;\n        }));\n        this._register(dom.addDisposableListener(this._pickedColorNode, dom.EventType.CLICK, () => this.model.selectNextColorPresentation()));\n        this._register(dom.addDisposableListener(this._originalColorNode, dom.EventType.CLICK, () => {\n            this.model.color = this.model.originalColor;\n            this.model.flushColor();\n        }));\n        this._register(model.onDidChangeColor(this.onDidChangeColor, this));\n        this._register(model.onDidChangePresentation(this.onDidChangePresentation, this));\n        this._pickedColorNode.style.backgroundColor = Color.Format.CSS.format(model.color) || '';\n        this._pickedColorNode.classList.toggle('light', model.color.rgba.a < 0.5 ? this.backgroundColor.isLighter() : model.color.isLighter());\n        this.onDidChangeColor(this.model.color);\n        // When the color picker widget is a standalone color picker widget, then add a close button\n        if (this.showingStandaloneColorPicker) {\n            this._domNode.classList.add('standalone-colorpicker');\n            this._closeButton = this._register(new CloseButton(this._domNode));\n        }\n    }\n    get closeButton() {\n        return this._closeButton;\n    }\n    get pickedColorNode() {\n        return this._pickedColorNode;\n    }\n    get originalColorNode() {\n        return this._originalColorNode;\n    }\n    onDidChangeColor(color) {\n        this._pickedColorNode.style.backgroundColor = Color.Format.CSS.format(color) || '';\n        this._pickedColorNode.classList.toggle('light', color.rgba.a < 0.5 ? this.backgroundColor.isLighter() : color.isLighter());\n        this.onDidChangePresentation();\n    }\n    onDidChangePresentation() {\n        this._pickedColorPresentation.textContent = this.model.presentation ? this.model.presentation.label : '';\n    }\n}\nclass CloseButton extends Disposable {\n    constructor(container) {\n        super();\n        this._onClicked = this._register(new Emitter());\n        this.onClicked = this._onClicked.event;\n        this._button = document.createElement('div');\n        this._button.classList.add('close-button');\n        dom.append(container, this._button);\n        const innerDiv = document.createElement('div');\n        innerDiv.classList.add('close-button-inner-div');\n        dom.append(this._button, innerDiv);\n        const closeButton = dom.append(innerDiv, $('.button' + ThemeIcon.asCSSSelector(registerIcon('color-picker-close', Codicon.close, localize('closeIcon', 'Icon to close the color picker')))));\n        closeButton.classList.add('close-icon');\n        this._register(dom.addDisposableListener(this._button, dom.EventType.CLICK, () => {\n            this._onClicked.fire();\n        }));\n    }\n}\nexport class ColorPickerBody extends Disposable {\n    constructor(container, model, pixelRatio, isStandaloneColorPicker = false) {\n        super();\n        this.model = model;\n        this.pixelRatio = pixelRatio;\n        this._insertButton = null;\n        this._domNode = $('.colorpicker-body');\n        dom.append(container, this._domNode);\n        this._saturationBox = new SaturationBox(this._domNode, this.model, this.pixelRatio);\n        this._register(this._saturationBox);\n        this._register(this._saturationBox.onDidChange(this.onDidSaturationValueChange, this));\n        this._register(this._saturationBox.onColorFlushed(this.flushColor, this));\n        this._opacityStrip = new OpacityStrip(this._domNode, this.model, isStandaloneColorPicker);\n        this._register(this._opacityStrip);\n        this._register(this._opacityStrip.onDidChange(this.onDidOpacityChange, this));\n        this._register(this._opacityStrip.onColorFlushed(this.flushColor, this));\n        this._hueStrip = new HueStrip(this._domNode, this.model, isStandaloneColorPicker);\n        this._register(this._hueStrip);\n        this._register(this._hueStrip.onDidChange(this.onDidHueChange, this));\n        this._register(this._hueStrip.onColorFlushed(this.flushColor, this));\n        if (isStandaloneColorPicker) {\n            this._insertButton = this._register(new InsertButton(this._domNode));\n            this._domNode.classList.add('standalone-colorpicker');\n        }\n    }\n    flushColor() {\n        this.model.flushColor();\n    }\n    onDidSaturationValueChange({ s, v }) {\n        const hsva = this.model.color.hsva;\n        this.model.color = new Color(new HSVA(hsva.h, s, v, hsva.a));\n    }\n    onDidOpacityChange(a) {\n        const hsva = this.model.color.hsva;\n        this.model.color = new Color(new HSVA(hsva.h, hsva.s, hsva.v, a));\n    }\n    onDidHueChange(value) {\n        const hsva = this.model.color.hsva;\n        const h = (1 - value) * 360;\n        this.model.color = new Color(new HSVA(h === 360 ? 0 : h, hsva.s, hsva.v, hsva.a));\n    }\n    get domNode() {\n        return this._domNode;\n    }\n    get saturationBox() {\n        return this._saturationBox;\n    }\n    get enterButton() {\n        return this._insertButton;\n    }\n    layout() {\n        this._saturationBox.layout();\n        this._opacityStrip.layout();\n        this._hueStrip.layout();\n    }\n}\nclass SaturationBox extends Disposable {\n    constructor(container, model, pixelRatio) {\n        super();\n        this.model = model;\n        this.pixelRatio = pixelRatio;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onColorFlushed = new Emitter();\n        this.onColorFlushed = this._onColorFlushed.event;\n        this._domNode = $('.saturation-wrap');\n        dom.append(container, this._domNode);\n        // Create canvas, draw selected color\n        this._canvas = document.createElement('canvas');\n        this._canvas.className = 'saturation-box';\n        dom.append(this._domNode, this._canvas);\n        // Add selection circle\n        this.selection = $('.saturation-selection');\n        dom.append(this._domNode, this.selection);\n        this.layout();\n        this._register(dom.addDisposableListener(this._domNode, dom.EventType.POINTER_DOWN, e => this.onPointerDown(e)));\n        this._register(this.model.onDidChangeColor(this.onDidChangeColor, this));\n        this.monitor = null;\n    }\n    get domNode() {\n        return this._domNode;\n    }\n    onPointerDown(e) {\n        if (!e.target || !(e.target instanceof Element)) {\n            return;\n        }\n        this.monitor = this._register(new GlobalPointerMoveMonitor());\n        const origin = dom.getDomNodePagePosition(this._domNode);\n        if (e.target !== this.selection) {\n            this.onDidChangePosition(e.offsetX, e.offsetY);\n        }\n        this.monitor.startMonitoring(e.target, e.pointerId, e.buttons, event => this.onDidChangePosition(event.pageX - origin.left, event.pageY - origin.top), () => null);\n        const pointerUpListener = dom.addDisposableListener(e.target.ownerDocument, dom.EventType.POINTER_UP, () => {\n            this._onColorFlushed.fire();\n            pointerUpListener.dispose();\n            if (this.monitor) {\n                this.monitor.stopMonitoring(true);\n                this.monitor = null;\n            }\n        }, true);\n    }\n    onDidChangePosition(left, top) {\n        const s = Math.max(0, Math.min(1, left / this.width));\n        const v = Math.max(0, Math.min(1, 1 - (top / this.height)));\n        this.paintSelection(s, v);\n        this._onDidChange.fire({ s, v });\n    }\n    layout() {\n        this.width = this._domNode.offsetWidth;\n        this.height = this._domNode.offsetHeight;\n        this._canvas.width = this.width * this.pixelRatio;\n        this._canvas.height = this.height * this.pixelRatio;\n        this.paint();\n        const hsva = this.model.color.hsva;\n        this.paintSelection(hsva.s, hsva.v);\n    }\n    paint() {\n        const hsva = this.model.color.hsva;\n        const saturatedColor = new Color(new HSVA(hsva.h, 1, 1, 1));\n        const ctx = this._canvas.getContext('2d');\n        const whiteGradient = ctx.createLinearGradient(0, 0, this._canvas.width, 0);\n        whiteGradient.addColorStop(0, 'rgba(255, 255, 255, 1)');\n        whiteGradient.addColorStop(0.5, 'rgba(255, 255, 255, 0.5)');\n        whiteGradient.addColorStop(1, 'rgba(255, 255, 255, 0)');\n        const blackGradient = ctx.createLinearGradient(0, 0, 0, this._canvas.height);\n        blackGradient.addColorStop(0, 'rgba(0, 0, 0, 0)');\n        blackGradient.addColorStop(1, 'rgba(0, 0, 0, 1)');\n        ctx.rect(0, 0, this._canvas.width, this._canvas.height);\n        ctx.fillStyle = Color.Format.CSS.format(saturatedColor);\n        ctx.fill();\n        ctx.fillStyle = whiteGradient;\n        ctx.fill();\n        ctx.fillStyle = blackGradient;\n        ctx.fill();\n    }\n    paintSelection(s, v) {\n        this.selection.style.left = `${s * this.width}px`;\n        this.selection.style.top = `${this.height - v * this.height}px`;\n    }\n    onDidChangeColor(color) {\n        if (this.monitor && this.monitor.isMonitoring()) {\n            return;\n        }\n        this.paint();\n        const hsva = color.hsva;\n        this.paintSelection(hsva.s, hsva.v);\n    }\n}\nclass Strip extends Disposable {\n    constructor(container, model, showingStandaloneColorPicker = false) {\n        super();\n        this.model = model;\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._onColorFlushed = new Emitter();\n        this.onColorFlushed = this._onColorFlushed.event;\n        if (showingStandaloneColorPicker) {\n            this.domNode = dom.append(container, $('.standalone-strip'));\n            this.overlay = dom.append(this.domNode, $('.standalone-overlay'));\n        }\n        else {\n            this.domNode = dom.append(container, $('.strip'));\n            this.overlay = dom.append(this.domNode, $('.overlay'));\n        }\n        this.slider = dom.append(this.domNode, $('.slider'));\n        this.slider.style.top = `0px`;\n        this._register(dom.addDisposableListener(this.domNode, dom.EventType.POINTER_DOWN, e => this.onPointerDown(e)));\n        this._register(model.onDidChangeColor(this.onDidChangeColor, this));\n        this.layout();\n    }\n    layout() {\n        this.height = this.domNode.offsetHeight - this.slider.offsetHeight;\n        const value = this.getValue(this.model.color);\n        this.updateSliderPosition(value);\n    }\n    onDidChangeColor(color) {\n        const value = this.getValue(color);\n        this.updateSliderPosition(value);\n    }\n    onPointerDown(e) {\n        if (!e.target || !(e.target instanceof Element)) {\n            return;\n        }\n        const monitor = this._register(new GlobalPointerMoveMonitor());\n        const origin = dom.getDomNodePagePosition(this.domNode);\n        this.domNode.classList.add('grabbing');\n        if (e.target !== this.slider) {\n            this.onDidChangeTop(e.offsetY);\n        }\n        monitor.startMonitoring(e.target, e.pointerId, e.buttons, event => this.onDidChangeTop(event.pageY - origin.top), () => null);\n        const pointerUpListener = dom.addDisposableListener(e.target.ownerDocument, dom.EventType.POINTER_UP, () => {\n            this._onColorFlushed.fire();\n            pointerUpListener.dispose();\n            monitor.stopMonitoring(true);\n            this.domNode.classList.remove('grabbing');\n        }, true);\n    }\n    onDidChangeTop(top) {\n        const value = Math.max(0, Math.min(1, 1 - (top / this.height)));\n        this.updateSliderPosition(value);\n        this._onDidChange.fire(value);\n    }\n    updateSliderPosition(value) {\n        this.slider.style.top = `${(1 - value) * this.height}px`;\n    }\n}\nclass OpacityStrip extends Strip {\n    constructor(container, model, showingStandaloneColorPicker = false) {\n        super(container, model, showingStandaloneColorPicker);\n        this.domNode.classList.add('opacity-strip');\n        this.onDidChangeColor(this.model.color);\n    }\n    onDidChangeColor(color) {\n        super.onDidChangeColor(color);\n        const { r, g, b } = color.rgba;\n        const opaque = new Color(new RGBA(r, g, b, 1));\n        const transparent = new Color(new RGBA(r, g, b, 0));\n        this.overlay.style.background = `linear-gradient(to bottom, ${opaque} 0%, ${transparent} 100%)`;\n    }\n    getValue(color) {\n        return color.hsva.a;\n    }\n}\nclass HueStrip extends Strip {\n    constructor(container, model, showingStandaloneColorPicker = false) {\n        super(container, model, showingStandaloneColorPicker);\n        this.domNode.classList.add('hue-strip');\n    }\n    getValue(color) {\n        return 1 - (color.hsva.h / 360);\n    }\n}\nexport class InsertButton extends Disposable {\n    constructor(container) {\n        super();\n        this._onClicked = this._register(new Emitter());\n        this.onClicked = this._onClicked.event;\n        this._button = dom.append(container, document.createElement('button'));\n        this._button.classList.add('insert-button');\n        this._button.textContent = 'Insert';\n        this._register(dom.addDisposableListener(this._button, dom.EventType.CLICK, () => {\n            this._onClicked.fire();\n        }));\n    }\n    get button() {\n        return this._button;\n    }\n}\nexport class ColorPickerWidget extends Widget {\n    constructor(container, model, pixelRatio, themeService, standaloneColorPicker = false) {\n        super();\n        this.model = model;\n        this.pixelRatio = pixelRatio;\n        this._register(PixelRatio.getInstance(dom.getWindow(container)).onDidChange(() => this.layout()));\n        const element = $('.colorpicker-widget');\n        container.appendChild(element);\n        this.header = this._register(new ColorPickerHeader(element, this.model, themeService, standaloneColorPicker));\n        this.body = this._register(new ColorPickerBody(element, this.model, this.pixelRatio, standaloneColorPicker));\n    }\n    layout() {\n        this.body.layout();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Color, RGBA } from '../../../../base/common/color.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { Range } from '../../../common/core/range.js';\nimport { getColorPresentations, getColors } from './color.js';\nimport { ColorDetector } from './colorDetector.js';\nimport { ColorPickerModel } from './colorPickerModel.js';\nimport { ColorPickerWidget } from './colorPickerWidget.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { Dimension } from '../../../../base/browser/dom.js';\nexport class ColorHover {\n    constructor(owner, range, model, provider) {\n        this.owner = owner;\n        this.range = range;\n        this.model = model;\n        this.provider = provider;\n        /**\n         * Force the hover to always be rendered at this specific range,\n         * even in the case of multiple hover parts.\n         */\n        this.forceShowAtRange = true;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n}\nlet ColorHoverParticipant = class ColorHoverParticipant {\n    constructor(_editor, _themeService) {\n        this._editor = _editor;\n        this._themeService = _themeService;\n        this.hoverOrdinal = 2;\n    }\n    computeSync(_anchor, _lineDecorations) {\n        return [];\n    }\n    computeAsync(anchor, lineDecorations, token) {\n        return AsyncIterableObject.fromPromise(this._computeAsync(anchor, lineDecorations, token));\n    }\n    async _computeAsync(_anchor, lineDecorations, _token) {\n        if (!this._editor.hasModel()) {\n            return [];\n        }\n        const colorDetector = ColorDetector.get(this._editor);\n        if (!colorDetector) {\n            return [];\n        }\n        for (const d of lineDecorations) {\n            if (!colorDetector.isColorDecoration(d)) {\n                continue;\n            }\n            const colorData = colorDetector.getColorData(d.range.getStartPosition());\n            if (colorData) {\n                const colorHover = await _createColorHover(this, this._editor.getModel(), colorData.colorInfo, colorData.provider);\n                return [colorHover];\n            }\n        }\n        return [];\n    }\n    renderHoverParts(context, hoverParts) {\n        return renderHoverParts(this, this._editor, this._themeService, hoverParts, context);\n    }\n};\nColorHoverParticipant = __decorate([\n    __param(1, IThemeService)\n], ColorHoverParticipant);\nexport { ColorHoverParticipant };\nexport class StandaloneColorPickerHover {\n    constructor(owner, range, model, provider) {\n        this.owner = owner;\n        this.range = range;\n        this.model = model;\n        this.provider = provider;\n    }\n}\nlet StandaloneColorPickerParticipant = class StandaloneColorPickerParticipant {\n    constructor(_editor, _themeService) {\n        this._editor = _editor;\n        this._themeService = _themeService;\n        this._color = null;\n    }\n    async createColorHover(defaultColorInfo, defaultColorProvider, colorProviderRegistry) {\n        if (!this._editor.hasModel()) {\n            return null;\n        }\n        const colorDetector = ColorDetector.get(this._editor);\n        if (!colorDetector) {\n            return null;\n        }\n        const colors = await getColors(colorProviderRegistry, this._editor.getModel(), CancellationToken.None);\n        let foundColorInfo = null;\n        let foundColorProvider = null;\n        for (const colorData of colors) {\n            const colorInfo = colorData.colorInfo;\n            if (Range.containsRange(colorInfo.range, defaultColorInfo.range)) {\n                foundColorInfo = colorInfo;\n                foundColorProvider = colorData.provider;\n            }\n        }\n        const colorInfo = foundColorInfo !== null && foundColorInfo !== void 0 ? foundColorInfo : defaultColorInfo;\n        const colorProvider = foundColorProvider !== null && foundColorProvider !== void 0 ? foundColorProvider : defaultColorProvider;\n        const foundInEditor = !!foundColorInfo;\n        return { colorHover: await _createColorHover(this, this._editor.getModel(), colorInfo, colorProvider), foundInEditor: foundInEditor };\n    }\n    async updateEditorModel(colorHoverData) {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        const colorPickerModel = colorHoverData.model;\n        let range = new Range(colorHoverData.range.startLineNumber, colorHoverData.range.startColumn, colorHoverData.range.endLineNumber, colorHoverData.range.endColumn);\n        if (this._color) {\n            await _updateColorPresentations(this._editor.getModel(), colorPickerModel, this._color, range, colorHoverData);\n            range = _updateEditorModel(this._editor, range, colorPickerModel);\n        }\n    }\n    renderHoverParts(context, hoverParts) {\n        return renderHoverParts(this, this._editor, this._themeService, hoverParts, context);\n    }\n    set color(color) {\n        this._color = color;\n    }\n    get color() {\n        return this._color;\n    }\n};\nStandaloneColorPickerParticipant = __decorate([\n    __param(1, IThemeService)\n], StandaloneColorPickerParticipant);\nexport { StandaloneColorPickerParticipant };\nasync function _createColorHover(participant, editorModel, colorInfo, provider) {\n    const originalText = editorModel.getValueInRange(colorInfo.range);\n    const { red, green, blue, alpha } = colorInfo.color;\n    const rgba = new RGBA(Math.round(red * 255), Math.round(green * 255), Math.round(blue * 255), alpha);\n    const color = new Color(rgba);\n    const colorPresentations = await getColorPresentations(editorModel, colorInfo, provider, CancellationToken.None);\n    const model = new ColorPickerModel(color, [], 0);\n    model.colorPresentations = colorPresentations || [];\n    model.guessColorPresentation(color, originalText);\n    if (participant instanceof ColorHoverParticipant) {\n        return new ColorHover(participant, Range.lift(colorInfo.range), model, provider);\n    }\n    else {\n        return new StandaloneColorPickerHover(participant, Range.lift(colorInfo.range), model, provider);\n    }\n}\nfunction renderHoverParts(participant, editor, themeService, hoverParts, context) {\n    if (hoverParts.length === 0 || !editor.hasModel()) {\n        return Disposable.None;\n    }\n    if (context.setMinimumDimensions) {\n        const minimumHeight = editor.getOption(67 /* EditorOption.lineHeight */) + 8;\n        context.setMinimumDimensions(new Dimension(302, minimumHeight));\n    }\n    const disposables = new DisposableStore();\n    const colorHover = hoverParts[0];\n    const editorModel = editor.getModel();\n    const model = colorHover.model;\n    const widget = disposables.add(new ColorPickerWidget(context.fragment, model, editor.getOption(143 /* EditorOption.pixelRatio */), themeService, participant instanceof StandaloneColorPickerParticipant));\n    context.setColorPicker(widget);\n    let editorUpdatedByColorPicker = false;\n    let range = new Range(colorHover.range.startLineNumber, colorHover.range.startColumn, colorHover.range.endLineNumber, colorHover.range.endColumn);\n    if (participant instanceof StandaloneColorPickerParticipant) {\n        const color = hoverParts[0].model.color;\n        participant.color = color;\n        _updateColorPresentations(editorModel, model, color, range, colorHover);\n        disposables.add(model.onColorFlushed((color) => {\n            participant.color = color;\n        }));\n    }\n    else {\n        disposables.add(model.onColorFlushed(async (color) => {\n            await _updateColorPresentations(editorModel, model, color, range, colorHover);\n            editorUpdatedByColorPicker = true;\n            range = _updateEditorModel(editor, range, model);\n        }));\n    }\n    disposables.add(model.onDidChangeColor((color) => {\n        _updateColorPresentations(editorModel, model, color, range, colorHover);\n    }));\n    disposables.add(editor.onDidChangeModelContent((e) => {\n        if (editorUpdatedByColorPicker) {\n            editorUpdatedByColorPicker = false;\n        }\n        else {\n            context.hide();\n            editor.focus();\n        }\n    }));\n    return disposables;\n}\nfunction _updateEditorModel(editor, range, model) {\n    var _a, _b;\n    const textEdits = [];\n    const edit = (_a = model.presentation.textEdit) !== null && _a !== void 0 ? _a : { range, text: model.presentation.label, forceMoveMarkers: false };\n    textEdits.push(edit);\n    if (model.presentation.additionalTextEdits) {\n        textEdits.push(...model.presentation.additionalTextEdits);\n    }\n    const replaceRange = Range.lift(edit.range);\n    const trackedRange = editor.getModel()._setTrackedRange(null, replaceRange, 3 /* TrackedRangeStickiness.GrowsOnlyWhenTypingAfter */);\n    editor.executeEdits('colorpicker', textEdits);\n    editor.pushUndoStop();\n    return (_b = editor.getModel()._getTrackedRange(trackedRange)) !== null && _b !== void 0 ? _b : replaceRange;\n}\nasync function _updateColorPresentations(editorModel, colorPickerModel, color, range, colorHover) {\n    const colorPresentations = await getColorPresentations(editorModel, {\n        range: range,\n        color: {\n            red: color.rgba.r / 255,\n            green: color.rgba.g / 255,\n            blue: color.rgba.b / 255,\n            alpha: color.rgba.a\n        }\n    }, colorHover.provider, CancellationToken.None);\n    colorPickerModel.colorPresentations = colorPresentations || [];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Color, RGBA } from '../../../../base/common/color.js';\nimport { EditorWorkerClient } from '../../../browser/services/editorWorkerService.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { registerEditorFeature } from '../../../common/editorFeatures.js';\nexport class DefaultDocumentColorProvider {\n    constructor(modelService, languageConfigurationService) {\n        this._editorWorkerClient = new EditorWorkerClient(modelService, false, 'editorWorkerService', languageConfigurationService);\n    }\n    async provideDocumentColors(model, _token) {\n        return this._editorWorkerClient.computeDefaultDocumentColors(model.uri);\n    }\n    provideColorPresentations(_model, colorInfo, _token) {\n        const range = colorInfo.range;\n        const colorFromInfo = colorInfo.color;\n        const alpha = colorFromInfo.alpha;\n        const color = new Color(new RGBA(Math.round(255 * colorFromInfo.red), Math.round(255 * colorFromInfo.green), Math.round(255 * colorFromInfo.blue), alpha));\n        const rgb = alpha ? Color.Format.CSS.formatRGB(color) : Color.Format.CSS.formatRGBA(color);\n        const hsl = alpha ? Color.Format.CSS.formatHSL(color) : Color.Format.CSS.formatHSLA(color);\n        const hex = alpha ? Color.Format.CSS.formatHex(color) : Color.Format.CSS.formatHexA(color);\n        const colorPresentations = [];\n        colorPresentations.push({ label: rgb, textEdit: { range: range, text: rgb } });\n        colorPresentations.push({ label: hsl, textEdit: { range: range, text: hsl } });\n        colorPresentations.push({ label: hex, textEdit: { range: range, text: hex } });\n        return colorPresentations;\n    }\n}\nlet DefaultDocumentColorProviderFeature = class DefaultDocumentColorProviderFeature extends Disposable {\n    constructor(_modelService, _languageConfigurationService, _languageFeaturesService) {\n        super();\n        this._register(_languageFeaturesService.colorProvider.register('*', new DefaultDocumentColorProvider(_modelService, _languageConfigurationService)));\n    }\n};\nDefaultDocumentColorProviderFeature = __decorate([\n    __param(0, IModelService),\n    __param(1, ILanguageConfigurationService),\n    __param(2, ILanguageFeaturesService)\n], DefaultDocumentColorProviderFeature);\nregisterEditorFeature(DefaultDocumentColorProviderFeature);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar StandaloneColorPickerController_1, StandaloneColorPickerWidget_1;\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { StandaloneColorPickerParticipant } from './colorHoverParticipant.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { EditorHoverStatusBar } from '../../hover/browser/contentHoverStatusBar.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { DefaultDocumentColorProvider } from './defaultDocumentColorProvider.js';\nimport * as dom from '../../../../base/browser/dom.js';\nimport './colorPicker.css';\nlet StandaloneColorPickerController = StandaloneColorPickerController_1 = class StandaloneColorPickerController extends Disposable {\n    constructor(_editor, _contextKeyService, _modelService, _keybindingService, _instantiationService, _languageFeatureService, _languageConfigurationService) {\n        super();\n        this._editor = _editor;\n        this._modelService = _modelService;\n        this._keybindingService = _keybindingService;\n        this._instantiationService = _instantiationService;\n        this._languageFeatureService = _languageFeatureService;\n        this._languageConfigurationService = _languageConfigurationService;\n        this._standaloneColorPickerWidget = null;\n        this._standaloneColorPickerVisible = EditorContextKeys.standaloneColorPickerVisible.bindTo(_contextKeyService);\n        this._standaloneColorPickerFocused = EditorContextKeys.standaloneColorPickerFocused.bindTo(_contextKeyService);\n    }\n    showOrFocus() {\n        var _a;\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        if (!this._standaloneColorPickerVisible.get()) {\n            this._standaloneColorPickerWidget = new StandaloneColorPickerWidget(this._editor, this._standaloneColorPickerVisible, this._standaloneColorPickerFocused, this._instantiationService, this._modelService, this._keybindingService, this._languageFeatureService, this._languageConfigurationService);\n        }\n        else if (!this._standaloneColorPickerFocused.get()) {\n            (_a = this._standaloneColorPickerWidget) === null || _a === void 0 ? void 0 : _a.focus();\n        }\n    }\n    hide() {\n        var _a;\n        this._standaloneColorPickerFocused.set(false);\n        this._standaloneColorPickerVisible.set(false);\n        (_a = this._standaloneColorPickerWidget) === null || _a === void 0 ? void 0 : _a.hide();\n        this._editor.focus();\n    }\n    insertColor() {\n        var _a;\n        (_a = this._standaloneColorPickerWidget) === null || _a === void 0 ? void 0 : _a.updateEditor();\n        this.hide();\n    }\n    static get(editor) {\n        return editor.getContribution(StandaloneColorPickerController_1.ID);\n    }\n};\nStandaloneColorPickerController.ID = 'editor.contrib.standaloneColorPickerController';\nStandaloneColorPickerController = StandaloneColorPickerController_1 = __decorate([\n    __param(1, IContextKeyService),\n    __param(2, IModelService),\n    __param(3, IKeybindingService),\n    __param(4, IInstantiationService),\n    __param(5, ILanguageFeaturesService),\n    __param(6, ILanguageConfigurationService)\n], StandaloneColorPickerController);\nexport { StandaloneColorPickerController };\nregisterEditorContribution(StandaloneColorPickerController.ID, StandaloneColorPickerController, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nconst PADDING = 8;\nconst CLOSE_BUTTON_WIDTH = 22;\nlet StandaloneColorPickerWidget = StandaloneColorPickerWidget_1 = class StandaloneColorPickerWidget extends Disposable {\n    constructor(_editor, _standaloneColorPickerVisible, _standaloneColorPickerFocused, _instantiationService, _modelService, _keybindingService, _languageFeaturesService, _languageConfigurationService) {\n        var _a;\n        super();\n        this._editor = _editor;\n        this._standaloneColorPickerVisible = _standaloneColorPickerVisible;\n        this._standaloneColorPickerFocused = _standaloneColorPickerFocused;\n        this._modelService = _modelService;\n        this._keybindingService = _keybindingService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._languageConfigurationService = _languageConfigurationService;\n        this.allowEditorOverflow = true;\n        this._position = undefined;\n        this._body = document.createElement('div');\n        this._colorHover = null;\n        this._selectionSetInEditor = false;\n        this._onResult = this._register(new Emitter());\n        this.onResult = this._onResult.event;\n        this._standaloneColorPickerVisible.set(true);\n        this._standaloneColorPickerParticipant = _instantiationService.createInstance(StandaloneColorPickerParticipant, this._editor);\n        this._position = (_a = this._editor._getViewModel()) === null || _a === void 0 ? void 0 : _a.getPrimaryCursorState().modelState.position;\n        const editorSelection = this._editor.getSelection();\n        const selection = editorSelection ?\n            {\n                startLineNumber: editorSelection.startLineNumber,\n                startColumn: editorSelection.startColumn,\n                endLineNumber: editorSelection.endLineNumber,\n                endColumn: editorSelection.endColumn\n            } : { startLineNumber: 0, endLineNumber: 0, endColumn: 0, startColumn: 0 };\n        const focusTracker = this._register(dom.trackFocus(this._body));\n        this._register(focusTracker.onDidBlur(_ => {\n            this.hide();\n        }));\n        this._register(focusTracker.onDidFocus(_ => {\n            this.focus();\n        }));\n        // When the cursor position changes, hide the color picker\n        this._register(this._editor.onDidChangeCursorPosition(() => {\n            // Do not hide the color picker when the cursor changes position due to the keybindings\n            if (!this._selectionSetInEditor) {\n                this.hide();\n            }\n            else {\n                this._selectionSetInEditor = false;\n            }\n        }));\n        this._register(this._editor.onMouseMove((e) => {\n            var _a;\n            const classList = (_a = e.target.element) === null || _a === void 0 ? void 0 : _a.classList;\n            if (classList && classList.contains('colorpicker-color-decoration')) {\n                this.hide();\n            }\n        }));\n        this._register(this.onResult((result) => {\n            this._render(result.value, result.foundInEditor);\n        }));\n        this._start(selection);\n        this._body.style.zIndex = '50';\n        this._editor.addContentWidget(this);\n    }\n    updateEditor() {\n        if (this._colorHover) {\n            this._standaloneColorPickerParticipant.updateEditorModel(this._colorHover);\n        }\n    }\n    getId() {\n        return StandaloneColorPickerWidget_1.ID;\n    }\n    getDomNode() {\n        return this._body;\n    }\n    getPosition() {\n        if (!this._position) {\n            return null;\n        }\n        const positionPreference = this._editor.getOption(60 /* EditorOption.hover */).above;\n        return {\n            position: this._position,\n            secondaryPosition: this._position,\n            preference: positionPreference ? [1 /* ContentWidgetPositionPreference.ABOVE */, 2 /* ContentWidgetPositionPreference.BELOW */] : [2 /* ContentWidgetPositionPreference.BELOW */, 1 /* ContentWidgetPositionPreference.ABOVE */],\n            positionAffinity: 2 /* PositionAffinity.None */\n        };\n    }\n    hide() {\n        this.dispose();\n        this._standaloneColorPickerVisible.set(false);\n        this._standaloneColorPickerFocused.set(false);\n        this._editor.removeContentWidget(this);\n        this._editor.focus();\n    }\n    focus() {\n        this._standaloneColorPickerFocused.set(true);\n        this._body.focus();\n    }\n    async _start(selection) {\n        const computeAsyncResult = await this._computeAsync(selection);\n        if (!computeAsyncResult) {\n            return;\n        }\n        this._onResult.fire(new StandaloneColorPickerResult(computeAsyncResult.result, computeAsyncResult.foundInEditor));\n    }\n    async _computeAsync(range) {\n        if (!this._editor.hasModel()) {\n            return null;\n        }\n        const colorInfo = {\n            range: range,\n            color: { red: 0, green: 0, blue: 0, alpha: 1 }\n        };\n        const colorHoverResult = await this._standaloneColorPickerParticipant.createColorHover(colorInfo, new DefaultDocumentColorProvider(this._modelService, this._languageConfigurationService), this._languageFeaturesService.colorProvider);\n        if (!colorHoverResult) {\n            return null;\n        }\n        return { result: colorHoverResult.colorHover, foundInEditor: colorHoverResult.foundInEditor };\n    }\n    _render(colorHover, foundInEditor) {\n        const fragment = document.createDocumentFragment();\n        const statusBar = this._register(new EditorHoverStatusBar(this._keybindingService));\n        let colorPickerWidget;\n        const context = {\n            fragment,\n            statusBar,\n            setColorPicker: (widget) => colorPickerWidget = widget,\n            onContentsChanged: () => { },\n            hide: () => this.hide()\n        };\n        this._colorHover = colorHover;\n        this._register(this._standaloneColorPickerParticipant.renderHoverParts(context, [colorHover]));\n        if (colorPickerWidget === undefined) {\n            return;\n        }\n        this._body.classList.add('standalone-colorpicker-body');\n        this._body.style.maxHeight = Math.max(this._editor.getLayoutInfo().height / 4, 250) + 'px';\n        this._body.style.maxWidth = Math.max(this._editor.getLayoutInfo().width * 0.66, 500) + 'px';\n        this._body.tabIndex = 0;\n        this._body.appendChild(fragment);\n        colorPickerWidget.layout();\n        const colorPickerBody = colorPickerWidget.body;\n        const saturationBoxWidth = colorPickerBody.saturationBox.domNode.clientWidth;\n        const widthOfOriginalColorBox = colorPickerBody.domNode.clientWidth - saturationBoxWidth - CLOSE_BUTTON_WIDTH - PADDING;\n        const enterButton = colorPickerWidget.body.enterButton;\n        enterButton === null || enterButton === void 0 ? void 0 : enterButton.onClicked(() => {\n            this.updateEditor();\n            this.hide();\n        });\n        const colorPickerHeader = colorPickerWidget.header;\n        const pickedColorNode = colorPickerHeader.pickedColorNode;\n        pickedColorNode.style.width = saturationBoxWidth + PADDING + 'px';\n        const originalColorNode = colorPickerHeader.originalColorNode;\n        originalColorNode.style.width = widthOfOriginalColorBox + 'px';\n        const closeButton = colorPickerWidget.header.closeButton;\n        closeButton === null || closeButton === void 0 ? void 0 : closeButton.onClicked(() => {\n            this.hide();\n        });\n        // When found in the editor, highlight the selection in the editor\n        if (foundInEditor) {\n            if (enterButton) {\n                enterButton.button.textContent = 'Replace';\n            }\n            this._selectionSetInEditor = true;\n            this._editor.setSelection(colorHover.range);\n        }\n        this._editor.layoutContentWidget(this);\n    }\n};\nStandaloneColorPickerWidget.ID = 'editor.contrib.standaloneColorPickerWidget';\nStandaloneColorPickerWidget = StandaloneColorPickerWidget_1 = __decorate([\n    __param(3, IInstantiationService),\n    __param(4, IModelService),\n    __param(5, IKeybindingService),\n    __param(6, ILanguageFeaturesService),\n    __param(7, ILanguageConfigurationService)\n], StandaloneColorPickerWidget);\nexport { StandaloneColorPickerWidget };\nclass StandaloneColorPickerResult {\n    // The color picker result consists of: an array of color results and a boolean indicating if the color was found in the editor\n    constructor(value, foundInEditor) {\n        this.value = value;\n        this.foundInEditor = foundInEditor;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction, EditorAction2, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { localize, localize2 } from '../../../../nls.js';\nimport { StandaloneColorPickerController } from './standaloneColorPickerWidget.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { MenuId, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport './colorPicker.css';\nexport class ShowOrFocusStandaloneColorPicker extends EditorAction2 {\n    constructor() {\n        super({\n            id: 'editor.action.showOrFocusStandaloneColorPicker',\n            title: {\n                ...localize2('showOrFocusStandaloneColorPicker', \"Show or Focus Standalone Color Picker\"),\n                mnemonicTitle: localize({ key: 'mishowOrFocusStandaloneColorPicker', comment: ['&& denotes a mnemonic'] }, \"&&Show or Focus Standalone Color Picker\"),\n            },\n            precondition: undefined,\n            menu: [\n                { id: MenuId.CommandPalette },\n            ],\n            metadata: {\n                description: localize2('showOrFocusStandaloneColorPickerDescription', \"Show or focus a standalone color picker which uses the default color provider. It displays hex/rgb/hsl colors.\"),\n            }\n        });\n    }\n    runEditorCommand(_accessor, editor) {\n        var _a;\n        (_a = StandaloneColorPickerController.get(editor)) === null || _a === void 0 ? void 0 : _a.showOrFocus();\n    }\n}\nclass HideStandaloneColorPicker extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.hideColorPicker',\n            label: localize({\n                key: 'hideColorPicker',\n                comment: [\n                    'Action that hides the color picker'\n                ]\n            }, \"Hide the Color Picker\"),\n            alias: 'Hide the Color Picker',\n            precondition: EditorContextKeys.standaloneColorPickerVisible.isEqualTo(true),\n            kbOpts: {\n                primary: 9 /* KeyCode.Escape */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            metadata: {\n                description: localize2('hideColorPickerDescription', \"Hide the standalone color picker.\"),\n            }\n        });\n    }\n    run(_accessor, editor) {\n        var _a;\n        (_a = StandaloneColorPickerController.get(editor)) === null || _a === void 0 ? void 0 : _a.hide();\n    }\n}\nclass InsertColorWithStandaloneColorPicker extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.insertColorWithStandaloneColorPicker',\n            label: localize({\n                key: 'insertColorWithStandaloneColorPicker',\n                comment: [\n                    'Action that inserts color with standalone color picker'\n                ]\n            }, \"Insert Color with Standalone Color Picker\"),\n            alias: 'Insert Color with Standalone Color Picker',\n            precondition: EditorContextKeys.standaloneColorPickerFocused.isEqualTo(true),\n            kbOpts: {\n                primary: 3 /* KeyCode.Enter */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            metadata: {\n                description: localize2('insertColorWithStandaloneColorPickerDescription', \"Insert hex/rgb/hsl colors with the focused standalone color picker.\"),\n            }\n        });\n    }\n    run(_accessor, editor) {\n        var _a;\n        (_a = StandaloneColorPickerController.get(editor)) === null || _a === void 0 ? void 0 : _a.insertColor();\n    }\n}\nregisterEditorAction(HideStandaloneColorPicker);\nregisterEditorAction(InsertColorWithStandaloneColorPicker);\nregisterAction2(ShowOrFocusStandaloneColorPicker);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class BlockCommentCommand {\n    constructor(selection, insertSpace, languageConfigurationService) {\n        this.languageConfigurationService = languageConfigurationService;\n        this._selection = selection;\n        this._insertSpace = insertSpace;\n        this._usedEndToken = null;\n    }\n    static _haystackHasNeedleAtOffset(haystack, needle, offset) {\n        if (offset < 0) {\n            return false;\n        }\n        const needleLength = needle.length;\n        const haystackLength = haystack.length;\n        if (offset + needleLength > haystackLength) {\n            return false;\n        }\n        for (let i = 0; i < needleLength; i++) {\n            const codeA = haystack.charCodeAt(offset + i);\n            const codeB = needle.charCodeAt(i);\n            if (codeA === codeB) {\n                continue;\n            }\n            if (codeA >= 65 /* CharCode.A */ && codeA <= 90 /* CharCode.Z */ && codeA + 32 === codeB) {\n                // codeA is upper-case variant of codeB\n                continue;\n            }\n            if (codeB >= 65 /* CharCode.A */ && codeB <= 90 /* CharCode.Z */ && codeB + 32 === codeA) {\n                // codeB is upper-case variant of codeA\n                continue;\n            }\n            return false;\n        }\n        return true;\n    }\n    _createOperationsForBlockComment(selection, startToken, endToken, insertSpace, model, builder) {\n        const startLineNumber = selection.startLineNumber;\n        const startColumn = selection.startColumn;\n        const endLineNumber = selection.endLineNumber;\n        const endColumn = selection.endColumn;\n        const startLineText = model.getLineContent(startLineNumber);\n        const endLineText = model.getLineContent(endLineNumber);\n        let startTokenIndex = startLineText.lastIndexOf(startToken, startColumn - 1 + startToken.length);\n        let endTokenIndex = endLineText.indexOf(endToken, endColumn - 1 - endToken.length);\n        if (startTokenIndex !== -1 && endTokenIndex !== -1) {\n            if (startLineNumber === endLineNumber) {\n                const lineBetweenTokens = startLineText.substring(startTokenIndex + startToken.length, endTokenIndex);\n                if (lineBetweenTokens.indexOf(endToken) >= 0) {\n                    // force to add a block comment\n                    startTokenIndex = -1;\n                    endTokenIndex = -1;\n                }\n            }\n            else {\n                const startLineAfterStartToken = startLineText.substring(startTokenIndex + startToken.length);\n                const endLineBeforeEndToken = endLineText.substring(0, endTokenIndex);\n                if (startLineAfterStartToken.indexOf(endToken) >= 0 || endLineBeforeEndToken.indexOf(endToken) >= 0) {\n                    // force to add a block comment\n                    startTokenIndex = -1;\n                    endTokenIndex = -1;\n                }\n            }\n        }\n        let ops;\n        if (startTokenIndex !== -1 && endTokenIndex !== -1) {\n            // Consider spaces as part of the comment tokens\n            if (insertSpace && startTokenIndex + startToken.length < startLineText.length && startLineText.charCodeAt(startTokenIndex + startToken.length) === 32 /* CharCode.Space */) {\n                // Pretend the start token contains a trailing space\n                startToken = startToken + ' ';\n            }\n            if (insertSpace && endTokenIndex > 0 && endLineText.charCodeAt(endTokenIndex - 1) === 32 /* CharCode.Space */) {\n                // Pretend the end token contains a leading space\n                endToken = ' ' + endToken;\n                endTokenIndex -= 1;\n            }\n            ops = BlockCommentCommand._createRemoveBlockCommentOperations(new Range(startLineNumber, startTokenIndex + startToken.length + 1, endLineNumber, endTokenIndex + 1), startToken, endToken);\n        }\n        else {\n            ops = BlockCommentCommand._createAddBlockCommentOperations(selection, startToken, endToken, this._insertSpace);\n            this._usedEndToken = ops.length === 1 ? endToken : null;\n        }\n        for (const op of ops) {\n            builder.addTrackedEditOperation(op.range, op.text);\n        }\n    }\n    static _createRemoveBlockCommentOperations(r, startToken, endToken) {\n        const res = [];\n        if (!Range.isEmpty(r)) {\n            // Remove block comment start\n            res.push(EditOperation.delete(new Range(r.startLineNumber, r.startColumn - startToken.length, r.startLineNumber, r.startColumn)));\n            // Remove block comment end\n            res.push(EditOperation.delete(new Range(r.endLineNumber, r.endColumn, r.endLineNumber, r.endColumn + endToken.length)));\n        }\n        else {\n            // Remove both continuously\n            res.push(EditOperation.delete(new Range(r.startLineNumber, r.startColumn - startToken.length, r.endLineNumber, r.endColumn + endToken.length)));\n        }\n        return res;\n    }\n    static _createAddBlockCommentOperations(r, startToken, endToken, insertSpace) {\n        const res = [];\n        if (!Range.isEmpty(r)) {\n            // Insert block comment start\n            res.push(EditOperation.insert(new Position(r.startLineNumber, r.startColumn), startToken + (insertSpace ? ' ' : '')));\n            // Insert block comment end\n            res.push(EditOperation.insert(new Position(r.endLineNumber, r.endColumn), (insertSpace ? ' ' : '') + endToken));\n        }\n        else {\n            // Insert both continuously\n            res.push(EditOperation.replace(new Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn), startToken + '  ' + endToken));\n        }\n        return res;\n    }\n    getEditOperations(model, builder) {\n        const startLineNumber = this._selection.startLineNumber;\n        const startColumn = this._selection.startColumn;\n        model.tokenization.tokenizeIfCheap(startLineNumber);\n        const languageId = model.getLanguageIdAtPosition(startLineNumber, startColumn);\n        const config = this.languageConfigurationService.getLanguageConfiguration(languageId).comments;\n        if (!config || !config.blockCommentStartToken || !config.blockCommentEndToken) {\n            // Mode does not support block comments\n            return;\n        }\n        this._createOperationsForBlockComment(this._selection, config.blockCommentStartToken, config.blockCommentEndToken, this._insertSpace, model, builder);\n    }\n    computeCursorState(model, helper) {\n        const inverseEditOperations = helper.getInverseEditOperations();\n        if (inverseEditOperations.length === 2) {\n            const startTokenEditOperation = inverseEditOperations[0];\n            const endTokenEditOperation = inverseEditOperations[1];\n            return new Selection(startTokenEditOperation.range.endLineNumber, startTokenEditOperation.range.endColumn, endTokenEditOperation.range.startLineNumber, endTokenEditOperation.range.startColumn);\n        }\n        else {\n            const srcRange = inverseEditOperations[0].range;\n            const deltaColumn = this._usedEndToken ? -this._usedEndToken.length - 1 : 0; // minus 1 space before endToken\n            return new Selection(srcRange.endLineNumber, srcRange.endColumn + deltaColumn, srcRange.endLineNumber, srcRange.endColumn + deltaColumn);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../../base/common/strings.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { BlockCommentCommand } from './blockCommentCommand.js';\nexport class LineCommentCommand {\n    constructor(languageConfigurationService, selection, indentSize, type, insertSpace, ignoreEmptyLines, ignoreFirstLine) {\n        this.languageConfigurationService = languageConfigurationService;\n        this._selection = selection;\n        this._indentSize = indentSize;\n        this._type = type;\n        this._insertSpace = insertSpace;\n        this._selectionId = null;\n        this._deltaColumn = 0;\n        this._moveEndPositionDown = false;\n        this._ignoreEmptyLines = ignoreEmptyLines;\n        this._ignoreFirstLine = ignoreFirstLine || false;\n    }\n    /**\n     * Do an initial pass over the lines and gather info about the line comment string.\n     * Returns null if any of the lines doesn't support a line comment string.\n     */\n    static _gatherPreflightCommentStrings(model, startLineNumber, endLineNumber, languageConfigurationService) {\n        model.tokenization.tokenizeIfCheap(startLineNumber);\n        const languageId = model.getLanguageIdAtPosition(startLineNumber, 1);\n        const config = languageConfigurationService.getLanguageConfiguration(languageId).comments;\n        const commentStr = (config ? config.lineCommentToken : null);\n        if (!commentStr) {\n            // Mode does not support line comments\n            return null;\n        }\n        const lines = [];\n        for (let i = 0, lineCount = endLineNumber - startLineNumber + 1; i < lineCount; i++) {\n            lines[i] = {\n                ignore: false,\n                commentStr: commentStr,\n                commentStrOffset: 0,\n                commentStrLength: commentStr.length\n            };\n        }\n        return lines;\n    }\n    /**\n     * Analyze lines and decide which lines are relevant and what the toggle should do.\n     * Also, build up several offsets and lengths useful in the generation of editor operations.\n     */\n    static _analyzeLines(type, insertSpace, model, lines, startLineNumber, ignoreEmptyLines, ignoreFirstLine, languageConfigurationService) {\n        let onlyWhitespaceLines = true;\n        let shouldRemoveComments;\n        if (type === 0 /* Type.Toggle */) {\n            shouldRemoveComments = true;\n        }\n        else if (type === 1 /* Type.ForceAdd */) {\n            shouldRemoveComments = false;\n        }\n        else {\n            shouldRemoveComments = true;\n        }\n        for (let i = 0, lineCount = lines.length; i < lineCount; i++) {\n            const lineData = lines[i];\n            const lineNumber = startLineNumber + i;\n            if (lineNumber === startLineNumber && ignoreFirstLine) {\n                // first line ignored\n                lineData.ignore = true;\n                continue;\n            }\n            const lineContent = model.getLineContent(lineNumber);\n            const lineContentStartOffset = strings.firstNonWhitespaceIndex(lineContent);\n            if (lineContentStartOffset === -1) {\n                // Empty or whitespace only line\n                lineData.ignore = ignoreEmptyLines;\n                lineData.commentStrOffset = lineContent.length;\n                continue;\n            }\n            onlyWhitespaceLines = false;\n            lineData.ignore = false;\n            lineData.commentStrOffset = lineContentStartOffset;\n            if (shouldRemoveComments && !BlockCommentCommand._haystackHasNeedleAtOffset(lineContent, lineData.commentStr, lineContentStartOffset)) {\n                if (type === 0 /* Type.Toggle */) {\n                    // Every line so far has been a line comment, but this one is not\n                    shouldRemoveComments = false;\n                }\n                else if (type === 1 /* Type.ForceAdd */) {\n                    // Will not happen\n                }\n                else {\n                    lineData.ignore = true;\n                }\n            }\n            if (shouldRemoveComments && insertSpace) {\n                // Remove a following space if present\n                const commentStrEndOffset = lineContentStartOffset + lineData.commentStrLength;\n                if (commentStrEndOffset < lineContent.length && lineContent.charCodeAt(commentStrEndOffset) === 32 /* CharCode.Space */) {\n                    lineData.commentStrLength += 1;\n                }\n            }\n        }\n        if (type === 0 /* Type.Toggle */ && onlyWhitespaceLines) {\n            // For only whitespace lines, we insert comments\n            shouldRemoveComments = false;\n            // Also, no longer ignore them\n            for (let i = 0, lineCount = lines.length; i < lineCount; i++) {\n                lines[i].ignore = false;\n            }\n        }\n        return {\n            supported: true,\n            shouldRemoveComments: shouldRemoveComments,\n            lines: lines\n        };\n    }\n    /**\n     * Analyze all lines and decide exactly what to do => not supported | insert line comments | remove line comments\n     */\n    static _gatherPreflightData(type, insertSpace, model, startLineNumber, endLineNumber, ignoreEmptyLines, ignoreFirstLine, languageConfigurationService) {\n        const lines = LineCommentCommand._gatherPreflightCommentStrings(model, startLineNumber, endLineNumber, languageConfigurationService);\n        if (lines === null) {\n            return {\n                supported: false\n            };\n        }\n        return LineCommentCommand._analyzeLines(type, insertSpace, model, lines, startLineNumber, ignoreEmptyLines, ignoreFirstLine, languageConfigurationService);\n    }\n    /**\n     * Given a successful analysis, execute either insert line comments, either remove line comments\n     */\n    _executeLineComments(model, builder, data, s) {\n        let ops;\n        if (data.shouldRemoveComments) {\n            ops = LineCommentCommand._createRemoveLineCommentsOperations(data.lines, s.startLineNumber);\n        }\n        else {\n            LineCommentCommand._normalizeInsertionPoint(model, data.lines, s.startLineNumber, this._indentSize);\n            ops = this._createAddLineCommentsOperations(data.lines, s.startLineNumber);\n        }\n        const cursorPosition = new Position(s.positionLineNumber, s.positionColumn);\n        for (let i = 0, len = ops.length; i < len; i++) {\n            builder.addEditOperation(ops[i].range, ops[i].text);\n            if (Range.isEmpty(ops[i].range) && Range.getStartPosition(ops[i].range).equals(cursorPosition)) {\n                const lineContent = model.getLineContent(cursorPosition.lineNumber);\n                if (lineContent.length + 1 === cursorPosition.column) {\n                    this._deltaColumn = (ops[i].text || '').length;\n                }\n            }\n        }\n        this._selectionId = builder.trackSelection(s);\n    }\n    _attemptRemoveBlockComment(model, s, startToken, endToken) {\n        let startLineNumber = s.startLineNumber;\n        let endLineNumber = s.endLineNumber;\n        const startTokenAllowedBeforeColumn = endToken.length + Math.max(model.getLineFirstNonWhitespaceColumn(s.startLineNumber), s.startColumn);\n        let startTokenIndex = model.getLineContent(startLineNumber).lastIndexOf(startToken, startTokenAllowedBeforeColumn - 1);\n        let endTokenIndex = model.getLineContent(endLineNumber).indexOf(endToken, s.endColumn - 1 - startToken.length);\n        if (startTokenIndex !== -1 && endTokenIndex === -1) {\n            endTokenIndex = model.getLineContent(startLineNumber).indexOf(endToken, startTokenIndex + startToken.length);\n            endLineNumber = startLineNumber;\n        }\n        if (startTokenIndex === -1 && endTokenIndex !== -1) {\n            startTokenIndex = model.getLineContent(endLineNumber).lastIndexOf(startToken, endTokenIndex);\n            startLineNumber = endLineNumber;\n        }\n        if (s.isEmpty() && (startTokenIndex === -1 || endTokenIndex === -1)) {\n            startTokenIndex = model.getLineContent(startLineNumber).indexOf(startToken);\n            if (startTokenIndex !== -1) {\n                endTokenIndex = model.getLineContent(startLineNumber).indexOf(endToken, startTokenIndex + startToken.length);\n            }\n        }\n        // We have to adjust to possible inner white space.\n        // For Space after startToken, add Space to startToken - range math will work out.\n        if (startTokenIndex !== -1 && model.getLineContent(startLineNumber).charCodeAt(startTokenIndex + startToken.length) === 32 /* CharCode.Space */) {\n            startToken += ' ';\n        }\n        // For Space before endToken, add Space before endToken and shift index one left.\n        if (endTokenIndex !== -1 && model.getLineContent(endLineNumber).charCodeAt(endTokenIndex - 1) === 32 /* CharCode.Space */) {\n            endToken = ' ' + endToken;\n            endTokenIndex -= 1;\n        }\n        if (startTokenIndex !== -1 && endTokenIndex !== -1) {\n            return BlockCommentCommand._createRemoveBlockCommentOperations(new Range(startLineNumber, startTokenIndex + startToken.length + 1, endLineNumber, endTokenIndex + 1), startToken, endToken);\n        }\n        return null;\n    }\n    /**\n     * Given an unsuccessful analysis, delegate to the block comment command\n     */\n    _executeBlockComment(model, builder, s) {\n        model.tokenization.tokenizeIfCheap(s.startLineNumber);\n        const languageId = model.getLanguageIdAtPosition(s.startLineNumber, 1);\n        const config = this.languageConfigurationService.getLanguageConfiguration(languageId).comments;\n        if (!config || !config.blockCommentStartToken || !config.blockCommentEndToken) {\n            // Mode does not support block comments\n            return;\n        }\n        const startToken = config.blockCommentStartToken;\n        const endToken = config.blockCommentEndToken;\n        let ops = this._attemptRemoveBlockComment(model, s, startToken, endToken);\n        if (!ops) {\n            if (s.isEmpty()) {\n                const lineContent = model.getLineContent(s.startLineNumber);\n                let firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(lineContent);\n                if (firstNonWhitespaceIndex === -1) {\n                    // Line is empty or contains only whitespace\n                    firstNonWhitespaceIndex = lineContent.length;\n                }\n                ops = BlockCommentCommand._createAddBlockCommentOperations(new Range(s.startLineNumber, firstNonWhitespaceIndex + 1, s.startLineNumber, lineContent.length + 1), startToken, endToken, this._insertSpace);\n            }\n            else {\n                ops = BlockCommentCommand._createAddBlockCommentOperations(new Range(s.startLineNumber, model.getLineFirstNonWhitespaceColumn(s.startLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), startToken, endToken, this._insertSpace);\n            }\n            if (ops.length === 1) {\n                // Leave cursor after token and Space\n                this._deltaColumn = startToken.length + 1;\n            }\n        }\n        this._selectionId = builder.trackSelection(s);\n        for (const op of ops) {\n            builder.addEditOperation(op.range, op.text);\n        }\n    }\n    getEditOperations(model, builder) {\n        let s = this._selection;\n        this._moveEndPositionDown = false;\n        if (s.startLineNumber === s.endLineNumber && this._ignoreFirstLine) {\n            builder.addEditOperation(new Range(s.startLineNumber, model.getLineMaxColumn(s.startLineNumber), s.startLineNumber + 1, 1), s.startLineNumber === model.getLineCount() ? '' : '\\n');\n            this._selectionId = builder.trackSelection(s);\n            return;\n        }\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n            this._moveEndPositionDown = true;\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\n        }\n        const data = LineCommentCommand._gatherPreflightData(this._type, this._insertSpace, model, s.startLineNumber, s.endLineNumber, this._ignoreEmptyLines, this._ignoreFirstLine, this.languageConfigurationService);\n        if (data.supported) {\n            return this._executeLineComments(model, builder, data, s);\n        }\n        return this._executeBlockComment(model, builder, s);\n    }\n    computeCursorState(model, helper) {\n        let result = helper.getTrackedSelection(this._selectionId);\n        if (this._moveEndPositionDown) {\n            result = result.setEndPosition(result.endLineNumber + 1, 1);\n        }\n        return new Selection(result.selectionStartLineNumber, result.selectionStartColumn + this._deltaColumn, result.positionLineNumber, result.positionColumn + this._deltaColumn);\n    }\n    /**\n     * Generate edit operations in the remove line comment case\n     */\n    static _createRemoveLineCommentsOperations(lines, startLineNumber) {\n        const res = [];\n        for (let i = 0, len = lines.length; i < len; i++) {\n            const lineData = lines[i];\n            if (lineData.ignore) {\n                continue;\n            }\n            res.push(EditOperation.delete(new Range(startLineNumber + i, lineData.commentStrOffset + 1, startLineNumber + i, lineData.commentStrOffset + lineData.commentStrLength + 1)));\n        }\n        return res;\n    }\n    /**\n     * Generate edit operations in the add line comment case\n     */\n    _createAddLineCommentsOperations(lines, startLineNumber) {\n        const res = [];\n        const afterCommentStr = this._insertSpace ? ' ' : '';\n        for (let i = 0, len = lines.length; i < len; i++) {\n            const lineData = lines[i];\n            if (lineData.ignore) {\n                continue;\n            }\n            res.push(EditOperation.insert(new Position(startLineNumber + i, lineData.commentStrOffset + 1), lineData.commentStr + afterCommentStr));\n        }\n        return res;\n    }\n    static nextVisibleColumn(currentVisibleColumn, indentSize, isTab, columnSize) {\n        if (isTab) {\n            return currentVisibleColumn + (indentSize - (currentVisibleColumn % indentSize));\n        }\n        return currentVisibleColumn + columnSize;\n    }\n    /**\n     * Adjust insertion points to have them vertically aligned in the add line comment case\n     */\n    static _normalizeInsertionPoint(model, lines, startLineNumber, indentSize) {\n        let minVisibleColumn = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n        let j;\n        let lenJ;\n        for (let i = 0, len = lines.length; i < len; i++) {\n            if (lines[i].ignore) {\n                continue;\n            }\n            const lineContent = model.getLineContent(startLineNumber + i);\n            let currentVisibleColumn = 0;\n            for (let j = 0, lenJ = lines[i].commentStrOffset; currentVisibleColumn < minVisibleColumn && j < lenJ; j++) {\n                currentVisibleColumn = LineCommentCommand.nextVisibleColumn(currentVisibleColumn, indentSize, lineContent.charCodeAt(j) === 9 /* CharCode.Tab */, 1);\n            }\n            if (currentVisibleColumn < minVisibleColumn) {\n                minVisibleColumn = currentVisibleColumn;\n            }\n        }\n        minVisibleColumn = Math.floor(minVisibleColumn / indentSize) * indentSize;\n        for (let i = 0, len = lines.length; i < len; i++) {\n            if (lines[i].ignore) {\n                continue;\n            }\n            const lineContent = model.getLineContent(startLineNumber + i);\n            let currentVisibleColumn = 0;\n            for (j = 0, lenJ = lines[i].commentStrOffset; currentVisibleColumn < minVisibleColumn && j < lenJ; j++) {\n                currentVisibleColumn = LineCommentCommand.nextVisibleColumn(currentVisibleColumn, indentSize, lineContent.charCodeAt(j) === 9 /* CharCode.Tab */, 1);\n            }\n            if (currentVisibleColumn > minVisibleColumn) {\n                lines[i].commentStrOffset = j - 1;\n            }\n            else {\n                lines[i].commentStrOffset = j;\n            }\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { BlockCommentCommand } from './blockCommentCommand.js';\nimport { LineCommentCommand } from './lineCommentCommand.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nclass CommentLineAction extends EditorAction {\n    constructor(type, opts) {\n        super(opts);\n        this._type = type;\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        if (!editor.hasModel()) {\n            return;\n        }\n        const model = editor.getModel();\n        const commands = [];\n        const modelOptions = model.getOptions();\n        const commentsOptions = editor.getOption(23 /* EditorOption.comments */);\n        const selections = editor.getSelections().map((selection, index) => ({ selection, index, ignoreFirstLine: false }));\n        selections.sort((a, b) => Range.compareRangesUsingStarts(a.selection, b.selection));\n        // Remove selections that would result in copying the same line\n        let prev = selections[0];\n        for (let i = 1; i < selections.length; i++) {\n            const curr = selections[i];\n            if (prev.selection.endLineNumber === curr.selection.startLineNumber) {\n                // these two selections would copy the same line\n                if (prev.index < curr.index) {\n                    // prev wins\n                    curr.ignoreFirstLine = true;\n                }\n                else {\n                    // curr wins\n                    prev.ignoreFirstLine = true;\n                    prev = curr;\n                }\n            }\n        }\n        for (const selection of selections) {\n            commands.push(new LineCommentCommand(languageConfigurationService, selection.selection, modelOptions.indentSize, this._type, commentsOptions.insertSpace, commentsOptions.ignoreEmptyLines, selection.ignoreFirstLine));\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nclass ToggleCommentLineAction extends CommentLineAction {\n    constructor() {\n        super(0 /* Type.Toggle */, {\n            id: 'editor.action.commentLine',\n            label: nls.localize('comment.line', \"Toggle Line Comment\"),\n            alias: 'Toggle Line Comment',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 90 /* KeyCode.Slash */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarEditMenu,\n                group: '5_insert',\n                title: nls.localize({ key: 'miToggleLineComment', comment: ['&& denotes a mnemonic'] }, \"&&Toggle Line Comment\"),\n                order: 1\n            }\n        });\n    }\n}\nclass AddLineCommentAction extends CommentLineAction {\n    constructor() {\n        super(1 /* Type.ForceAdd */, {\n            id: 'editor.action.addCommentLine',\n            label: nls.localize('comment.line.add', \"Add Line Comment\"),\n            alias: 'Add Line Comment',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 33 /* KeyCode.KeyC */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n}\nclass RemoveLineCommentAction extends CommentLineAction {\n    constructor() {\n        super(2 /* Type.ForceRemove */, {\n            id: 'editor.action.removeCommentLine',\n            label: nls.localize('comment.line.remove', \"Remove Line Comment\"),\n            alias: 'Remove Line Comment',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 51 /* KeyCode.KeyU */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n}\nclass BlockCommentAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.blockComment',\n            label: nls.localize('comment.block', \"Toggle Block Comment\"),\n            alias: 'Toggle Block Comment',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 31 /* KeyCode.KeyA */,\n                linux: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 31 /* KeyCode.KeyA */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarEditMenu,\n                group: '5_insert',\n                title: nls.localize({ key: 'miToggleBlockComment', comment: ['&& denotes a mnemonic'] }, \"Toggle &&Block Comment\"),\n                order: 2\n            }\n        });\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        if (!editor.hasModel()) {\n            return;\n        }\n        const commentsOptions = editor.getOption(23 /* EditorOption.comments */);\n        const commands = [];\n        const selections = editor.getSelections();\n        for (const selection of selections) {\n            commands.push(new BlockCommentCommand(selection, commentsOptions.insertSpace, languageConfigurationService));\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nregisterEditorAction(ToggleCommentLineAction);\nregisterEditorAction(AddLineCommentAction);\nregisterEditorAction(RemoveLineCommentAction);\nregisterEditorAction(BlockCommentAction);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar ContextMenuController_1;\nimport * as dom from '../../../../base/browser/dom.js';\nimport { ActionViewItem } from '../../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { Separator, SubmenuAction } from '../../../../base/common/actions.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { isIOS } from '../../../../base/common/platform.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport * as nls from '../../../../nls.js';\nimport { IMenuService, SubmenuItemAction } from '../../../../platform/actions/common/actions.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService, IContextViewService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IWorkspaceContextService, isStandaloneEditorWorkspace } from '../../../../platform/workspace/common/workspace.js';\nlet ContextMenuController = ContextMenuController_1 = class ContextMenuController {\n    static get(editor) {\n        return editor.getContribution(ContextMenuController_1.ID);\n    }\n    constructor(editor, _contextMenuService, _contextViewService, _contextKeyService, _keybindingService, _menuService, _configurationService, _workspaceContextService) {\n        this._contextMenuService = _contextMenuService;\n        this._contextViewService = _contextViewService;\n        this._contextKeyService = _contextKeyService;\n        this._keybindingService = _keybindingService;\n        this._menuService = _menuService;\n        this._configurationService = _configurationService;\n        this._workspaceContextService = _workspaceContextService;\n        this._toDispose = new DisposableStore();\n        this._contextMenuIsBeingShownCount = 0;\n        this._editor = editor;\n        this._toDispose.add(this._editor.onContextMenu((e) => this._onContextMenu(e)));\n        this._toDispose.add(this._editor.onMouseWheel((e) => {\n            if (this._contextMenuIsBeingShownCount > 0) {\n                const view = this._contextViewService.getContextViewElement();\n                const target = e.srcElement;\n                // Event triggers on shadow root host first\n                // Check if the context view is under this host before hiding it #103169\n                if (!(target.shadowRoot && dom.getShadowRoot(view) === target.shadowRoot)) {\n                    this._contextViewService.hideContextView();\n                }\n            }\n        }));\n        this._toDispose.add(this._editor.onKeyDown((e) => {\n            if (!this._editor.getOption(24 /* EditorOption.contextmenu */)) {\n                return; // Context menu is turned off through configuration\n            }\n            if (e.keyCode === 58 /* KeyCode.ContextMenu */) {\n                // Chrome is funny like that\n                e.preventDefault();\n                e.stopPropagation();\n                this.showContextMenu();\n            }\n        }));\n    }\n    _onContextMenu(e) {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        if (!this._editor.getOption(24 /* EditorOption.contextmenu */)) {\n            this._editor.focus();\n            // Ensure the cursor is at the position of the mouse click\n            if (e.target.position && !this._editor.getSelection().containsPosition(e.target.position)) {\n                this._editor.setPosition(e.target.position);\n            }\n            return; // Context menu is turned off through configuration\n        }\n        if (e.target.type === 12 /* MouseTargetType.OVERLAY_WIDGET */) {\n            return; // allow native menu on widgets to support right click on input field for example in find\n        }\n        if (e.target.type === 6 /* MouseTargetType.CONTENT_TEXT */ && e.target.detail.injectedText) {\n            return; // allow native menu on injected text\n        }\n        e.event.preventDefault();\n        e.event.stopPropagation();\n        if (e.target.type === 11 /* MouseTargetType.SCROLLBAR */) {\n            return this._showScrollbarContextMenu(e.event);\n        }\n        if (e.target.type !== 6 /* MouseTargetType.CONTENT_TEXT */ && e.target.type !== 7 /* MouseTargetType.CONTENT_EMPTY */ && e.target.type !== 1 /* MouseTargetType.TEXTAREA */) {\n            return; // only support mouse click into text or native context menu key for now\n        }\n        // Ensure the editor gets focus if it hasn't, so the right events are being sent to other contributions\n        this._editor.focus();\n        // Ensure the cursor is at the position of the mouse click\n        if (e.target.position) {\n            let hasSelectionAtPosition = false;\n            for (const selection of this._editor.getSelections()) {\n                if (selection.containsPosition(e.target.position)) {\n                    hasSelectionAtPosition = true;\n                    break;\n                }\n            }\n            if (!hasSelectionAtPosition) {\n                this._editor.setPosition(e.target.position);\n            }\n        }\n        // Unless the user triggerd the context menu through Shift+F10, use the mouse position as menu position\n        let anchor = null;\n        if (e.target.type !== 1 /* MouseTargetType.TEXTAREA */) {\n            anchor = e.event;\n        }\n        // Show the context menu\n        this.showContextMenu(anchor);\n    }\n    showContextMenu(anchor) {\n        if (!this._editor.getOption(24 /* EditorOption.contextmenu */)) {\n            return; // Context menu is turned off through configuration\n        }\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        // Find actions available for menu\n        const menuActions = this._getMenuActions(this._editor.getModel(), this._editor.contextMenuId);\n        // Show menu if we have actions to show\n        if (menuActions.length > 0) {\n            this._doShowContextMenu(menuActions, anchor);\n        }\n    }\n    _getMenuActions(model, menuId) {\n        const result = [];\n        // get menu groups\n        const menu = this._menuService.createMenu(menuId, this._contextKeyService);\n        const groups = menu.getActions({ arg: model.uri });\n        menu.dispose();\n        // translate them into other actions\n        for (const group of groups) {\n            const [, actions] = group;\n            let addedItems = 0;\n            for (const action of actions) {\n                if (action instanceof SubmenuItemAction) {\n                    const subActions = this._getMenuActions(model, action.item.submenu);\n                    if (subActions.length > 0) {\n                        result.push(new SubmenuAction(action.id, action.label, subActions));\n                        addedItems++;\n                    }\n                }\n                else {\n                    result.push(action);\n                    addedItems++;\n                }\n            }\n            if (addedItems) {\n                result.push(new Separator());\n            }\n        }\n        if (result.length) {\n            result.pop(); // remove last separator\n        }\n        return result;\n    }\n    _doShowContextMenu(actions, event = null) {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        // Disable hover\n        const oldHoverSetting = this._editor.getOption(60 /* EditorOption.hover */);\n        this._editor.updateOptions({\n            hover: {\n                enabled: false\n            }\n        });\n        let anchor = event;\n        if (!anchor) {\n            // Ensure selection is visible\n            this._editor.revealPosition(this._editor.getPosition(), 1 /* ScrollType.Immediate */);\n            this._editor.render();\n            const cursorCoords = this._editor.getScrolledVisiblePosition(this._editor.getPosition());\n            // Translate to absolute editor position\n            const editorCoords = dom.getDomNodePagePosition(this._editor.getDomNode());\n            const posx = editorCoords.left + cursorCoords.left;\n            const posy = editorCoords.top + cursorCoords.top + cursorCoords.height;\n            anchor = { x: posx, y: posy };\n        }\n        const useShadowDOM = this._editor.getOption(127 /* EditorOption.useShadowDOM */) && !isIOS; // Do not use shadow dom on IOS #122035\n        // Show menu\n        this._contextMenuIsBeingShownCount++;\n        this._contextMenuService.showContextMenu({\n            domForShadowRoot: useShadowDOM ? this._editor.getDomNode() : undefined,\n            getAnchor: () => anchor,\n            getActions: () => actions,\n            getActionViewItem: (action) => {\n                const keybinding = this._keybindingFor(action);\n                if (keybinding) {\n                    return new ActionViewItem(action, action, { label: true, keybinding: keybinding.getLabel(), isMenu: true });\n                }\n                const customActionViewItem = action;\n                if (typeof customActionViewItem.getActionViewItem === 'function') {\n                    return customActionViewItem.getActionViewItem();\n                }\n                return new ActionViewItem(action, action, { icon: true, label: true, isMenu: true });\n            },\n            getKeyBinding: (action) => {\n                return this._keybindingFor(action);\n            },\n            onHide: (wasCancelled) => {\n                this._contextMenuIsBeingShownCount--;\n                this._editor.updateOptions({\n                    hover: oldHoverSetting\n                });\n            }\n        });\n    }\n    _showScrollbarContextMenu(anchor) {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        if (isStandaloneEditorWorkspace(this._workspaceContextService.getWorkspace())) {\n            // can't update the configuration properly in the standalone editor\n            return;\n        }\n        const minimapOptions = this._editor.getOption(73 /* EditorOption.minimap */);\n        let lastId = 0;\n        const createAction = (opts) => {\n            return {\n                id: `menu-action-${++lastId}`,\n                label: opts.label,\n                tooltip: '',\n                class: undefined,\n                enabled: (typeof opts.enabled === 'undefined' ? true : opts.enabled),\n                checked: opts.checked,\n                run: opts.run\n            };\n        };\n        const createSubmenuAction = (label, actions) => {\n            return new SubmenuAction(`menu-action-${++lastId}`, label, actions, undefined);\n        };\n        const createEnumAction = (label, enabled, configName, configuredValue, options) => {\n            if (!enabled) {\n                return createAction({ label, enabled, run: () => { } });\n            }\n            const createRunner = (value) => {\n                return () => {\n                    this._configurationService.updateValue(configName, value);\n                };\n            };\n            const actions = [];\n            for (const option of options) {\n                actions.push(createAction({\n                    label: option.label,\n                    checked: configuredValue === option.value,\n                    run: createRunner(option.value)\n                }));\n            }\n            return createSubmenuAction(label, actions);\n        };\n        const actions = [];\n        actions.push(createAction({\n            label: nls.localize('context.minimap.minimap', \"Minimap\"),\n            checked: minimapOptions.enabled,\n            run: () => {\n                this._configurationService.updateValue(`editor.minimap.enabled`, !minimapOptions.enabled);\n            }\n        }));\n        actions.push(new Separator());\n        actions.push(createAction({\n            label: nls.localize('context.minimap.renderCharacters', \"Render Characters\"),\n            enabled: minimapOptions.enabled,\n            checked: minimapOptions.renderCharacters,\n            run: () => {\n                this._configurationService.updateValue(`editor.minimap.renderCharacters`, !minimapOptions.renderCharacters);\n            }\n        }));\n        actions.push(createEnumAction(nls.localize('context.minimap.size', \"Vertical size\"), minimapOptions.enabled, 'editor.minimap.size', minimapOptions.size, [{\n                label: nls.localize('context.minimap.size.proportional', \"Proportional\"),\n                value: 'proportional'\n            }, {\n                label: nls.localize('context.minimap.size.fill', \"Fill\"),\n                value: 'fill'\n            }, {\n                label: nls.localize('context.minimap.size.fit', \"Fit\"),\n                value: 'fit'\n            }]));\n        actions.push(createEnumAction(nls.localize('context.minimap.slider', \"Slider\"), minimapOptions.enabled, 'editor.minimap.showSlider', minimapOptions.showSlider, [{\n                label: nls.localize('context.minimap.slider.mouseover', \"Mouse Over\"),\n                value: 'mouseover'\n            }, {\n                label: nls.localize('context.minimap.slider.always', \"Always\"),\n                value: 'always'\n            }]));\n        const useShadowDOM = this._editor.getOption(127 /* EditorOption.useShadowDOM */) && !isIOS; // Do not use shadow dom on IOS #122035\n        this._contextMenuIsBeingShownCount++;\n        this._contextMenuService.showContextMenu({\n            domForShadowRoot: useShadowDOM ? this._editor.getDomNode() : undefined,\n            getAnchor: () => anchor,\n            getActions: () => actions,\n            onHide: (wasCancelled) => {\n                this._contextMenuIsBeingShownCount--;\n                this._editor.focus();\n            }\n        });\n    }\n    _keybindingFor(action) {\n        return this._keybindingService.lookupKeybinding(action.id);\n    }\n    dispose() {\n        if (this._contextMenuIsBeingShownCount > 0) {\n            this._contextViewService.hideContextView();\n        }\n        this._toDispose.dispose();\n    }\n};\nContextMenuController.ID = 'editor.contrib.contextmenu';\nContextMenuController = ContextMenuController_1 = __decorate([\n    __param(1, IContextMenuService),\n    __param(2, IContextViewService),\n    __param(3, IContextKeyService),\n    __param(4, IKeybindingService),\n    __param(5, IMenuService),\n    __param(6, IConfigurationService),\n    __param(7, IWorkspaceContextService)\n], ContextMenuController);\nexport { ContextMenuController };\nclass ShowContextMenu extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.showContextMenu',\n            label: nls.localize('action.showContextMenu.label', \"Show Editor Context Menu\"),\n            alias: 'Show Editor Context Menu',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 1024 /* KeyMod.Shift */ | 68 /* KeyCode.F10 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        var _a;\n        (_a = ContextMenuController.get(editor)) === null || _a === void 0 ? void 0 : _a.showContextMenu();\n    }\n}\nregisterEditorContribution(ContextMenuController.ID, ContextMenuController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorAction(ShowContextMenu);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport * as nls from '../../../../nls.js';\nclass CursorState {\n    constructor(selections) {\n        this.selections = selections;\n    }\n    equals(other) {\n        const thisLen = this.selections.length;\n        const otherLen = other.selections.length;\n        if (thisLen !== otherLen) {\n            return false;\n        }\n        for (let i = 0; i < thisLen; i++) {\n            if (!this.selections[i].equalsSelection(other.selections[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nclass StackElement {\n    constructor(cursorState, scrollTop, scrollLeft) {\n        this.cursorState = cursorState;\n        this.scrollTop = scrollTop;\n        this.scrollLeft = scrollLeft;\n    }\n}\nexport class CursorUndoRedoController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(CursorUndoRedoController.ID);\n    }\n    constructor(editor) {\n        super();\n        this._editor = editor;\n        this._isCursorUndoRedo = false;\n        this._undoStack = [];\n        this._redoStack = [];\n        this._register(editor.onDidChangeModel((e) => {\n            this._undoStack = [];\n            this._redoStack = [];\n        }));\n        this._register(editor.onDidChangeModelContent((e) => {\n            this._undoStack = [];\n            this._redoStack = [];\n        }));\n        this._register(editor.onDidChangeCursorSelection((e) => {\n            if (this._isCursorUndoRedo) {\n                return;\n            }\n            if (!e.oldSelections) {\n                return;\n            }\n            if (e.oldModelVersionId !== e.modelVersionId) {\n                return;\n            }\n            const prevState = new CursorState(e.oldSelections);\n            const isEqualToLastUndoStack = (this._undoStack.length > 0 && this._undoStack[this._undoStack.length - 1].cursorState.equals(prevState));\n            if (!isEqualToLastUndoStack) {\n                this._undoStack.push(new StackElement(prevState, editor.getScrollTop(), editor.getScrollLeft()));\n                this._redoStack = [];\n                if (this._undoStack.length > 50) {\n                    // keep the cursor undo stack bounded\n                    this._undoStack.shift();\n                }\n            }\n        }));\n    }\n    cursorUndo() {\n        if (!this._editor.hasModel() || this._undoStack.length === 0) {\n            return;\n        }\n        this._redoStack.push(new StackElement(new CursorState(this._editor.getSelections()), this._editor.getScrollTop(), this._editor.getScrollLeft()));\n        this._applyState(this._undoStack.pop());\n    }\n    cursorRedo() {\n        if (!this._editor.hasModel() || this._redoStack.length === 0) {\n            return;\n        }\n        this._undoStack.push(new StackElement(new CursorState(this._editor.getSelections()), this._editor.getScrollTop(), this._editor.getScrollLeft()));\n        this._applyState(this._redoStack.pop());\n    }\n    _applyState(stackElement) {\n        this._isCursorUndoRedo = true;\n        this._editor.setSelections(stackElement.cursorState.selections);\n        this._editor.setScrollPosition({\n            scrollTop: stackElement.scrollTop,\n            scrollLeft: stackElement.scrollLeft\n        });\n        this._isCursorUndoRedo = false;\n    }\n}\nCursorUndoRedoController.ID = 'editor.contrib.cursorUndoRedoController';\nexport class CursorUndo extends EditorAction {\n    constructor() {\n        super({\n            id: 'cursorUndo',\n            label: nls.localize('cursor.undo', \"Cursor Undo\"),\n            alias: 'Cursor Undo',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 51 /* KeyCode.KeyU */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor, args) {\n        var _a;\n        (_a = CursorUndoRedoController.get(editor)) === null || _a === void 0 ? void 0 : _a.cursorUndo();\n    }\n}\nexport class CursorRedo extends EditorAction {\n    constructor() {\n        super({\n            id: 'cursorRedo',\n            label: nls.localize('cursor.redo', \"Cursor Redo\"),\n            alias: 'Cursor Redo',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor, args) {\n        var _a;\n        (_a = CursorUndoRedoController.get(editor)) === null || _a === void 0 ? void 0 : _a.cursorRedo();\n    }\n}\nregisterEditorContribution(CursorUndoRedoController.ID, CursorUndoRedoController, 0 /* EditorContributionInstantiation.Eager */); // eager because it needs to listen to record cursor state ASAP\nregisterEditorAction(CursorUndo);\nregisterEditorAction(CursorRedo);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { reverseOrder, compareBy, numberComparator } from '../../../../base/common/arrays.js';\nimport { observableValue, observableSignalFromEvent, autorunWithStore } from '../../../../base/common/observable.js';\nimport { HideUnchangedRegionsFeature } from '../../../browser/widget/diffEditor/features/hideUnchangedRegionsFeature.js';\nimport { DisposableCancellationTokenSource } from '../../../browser/widget/diffEditor/utils.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { IOutlineModelService } from '../../documentSymbols/browser/outlineModel.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Event } from '../../../../base/common/event.js';\nlet DiffEditorBreadcrumbsSource = class DiffEditorBreadcrumbsSource extends Disposable {\n    constructor(_textModel, _languageFeaturesService, _outlineModelService) {\n        super();\n        this._textModel = _textModel;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._outlineModelService = _outlineModelService;\n        this._currentModel = observableValue(this, undefined);\n        const documentSymbolProviderChanged = observableSignalFromEvent('documentSymbolProvider.onDidChange', this._languageFeaturesService.documentSymbolProvider.onDidChange);\n        const textModelChanged = observableSignalFromEvent('_textModel.onDidChangeContent', Event.debounce(e => this._textModel.onDidChangeContent(e), () => undefined, 100));\n        this._register(autorunWithStore(async (reader, store) => {\n            documentSymbolProviderChanged.read(reader);\n            textModelChanged.read(reader);\n            const src = store.add(new DisposableCancellationTokenSource());\n            const model = await this._outlineModelService.getOrCreate(this._textModel, src.token);\n            if (store.isDisposed) {\n                return;\n            }\n            this._currentModel.set(model, undefined);\n        }));\n    }\n    getBreadcrumbItems(startRange, reader) {\n        const m = this._currentModel.read(reader);\n        if (!m) {\n            return [];\n        }\n        const symbols = m.asListOfDocumentSymbols()\n            .filter(s => startRange.contains(s.range.startLineNumber) && !startRange.contains(s.range.endLineNumber));\n        symbols.sort(reverseOrder(compareBy(s => s.range.endLineNumber - s.range.startLineNumber, numberComparator)));\n        return symbols.map(s => ({ name: s.name, kind: s.kind, startLineNumber: s.range.startLineNumber }));\n    }\n};\nDiffEditorBreadcrumbsSource = __decorate([\n    __param(1, ILanguageFeaturesService),\n    __param(2, IOutlineModelService)\n], DiffEditorBreadcrumbsSource);\nHideUnchangedRegionsFeature.setBreadcrumbsSourceFactory((textModel, instantiationService) => {\n    return instantiationService.createInstance(DiffEditorBreadcrumbsSource, textModel);\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class DragAndDropCommand {\n    constructor(selection, targetPosition, copy) {\n        this.selection = selection;\n        this.targetPosition = targetPosition;\n        this.copy = copy;\n        this.targetSelection = null;\n    }\n    getEditOperations(model, builder) {\n        const text = model.getValueInRange(this.selection);\n        if (!this.copy) {\n            builder.addEditOperation(this.selection, null);\n        }\n        builder.addEditOperation(new Range(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column), text);\n        if (this.selection.containsPosition(this.targetPosition) && !(this.copy && (this.selection.getEndPosition().equals(this.targetPosition) || this.selection.getStartPosition().equals(this.targetPosition)) // we allow users to paste content beside the selection\n        )) {\n            this.targetSelection = this.selection;\n            return;\n        }\n        if (this.copy) {\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.selection.endLineNumber - this.selection.startLineNumber + this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        if (this.targetPosition.lineNumber > this.selection.endLineNumber) {\n            // Drag the selection downwards\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        if (this.targetPosition.lineNumber < this.selection.endLineNumber) {\n            // Drag the selection upwards\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber + this.selection.endLineNumber - this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        // The target position is at the same line as the selection's end position.\n        if (this.selection.endColumn <= this.targetPosition.column) {\n            // The target position is after the selection's end position\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn :\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column :\n                this.selection.endColumn);\n        }\n        else {\n            // The target position is before the selection's end position. Since the selection doesn't contain the target position, the selection is one-line and target position is before this selection.\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column + this.selection.endColumn - this.selection.startColumn);\n        }\n    }\n    computeCursorState(model, helper) {\n        return this.targetSelection;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { isMacintosh } from '../../../../base/common/platform.js';\nimport './dnd.css';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { DragAndDropCommand } from './dragAndDropCommand.js';\nfunction hasTriggerModifier(e) {\n    if (isMacintosh) {\n        return e.altKey;\n    }\n    else {\n        return e.ctrlKey;\n    }\n}\nexport class DragAndDropController extends Disposable {\n    constructor(editor) {\n        super();\n        this._editor = editor;\n        this._dndDecorationIds = this._editor.createDecorationsCollection();\n        this._register(this._editor.onMouseDown((e) => this._onEditorMouseDown(e)));\n        this._register(this._editor.onMouseUp((e) => this._onEditorMouseUp(e)));\n        this._register(this._editor.onMouseDrag((e) => this._onEditorMouseDrag(e)));\n        this._register(this._editor.onMouseDrop((e) => this._onEditorMouseDrop(e)));\n        this._register(this._editor.onMouseDropCanceled(() => this._onEditorMouseDropCanceled()));\n        this._register(this._editor.onKeyDown((e) => this.onEditorKeyDown(e)));\n        this._register(this._editor.onKeyUp((e) => this.onEditorKeyUp(e)));\n        this._register(this._editor.onDidBlurEditorWidget(() => this.onEditorBlur()));\n        this._register(this._editor.onDidBlurEditorText(() => this.onEditorBlur()));\n        this._mouseDown = false;\n        this._modifierPressed = false;\n        this._dragSelection = null;\n    }\n    onEditorBlur() {\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n        this._modifierPressed = false;\n    }\n    onEditorKeyDown(e) {\n        if (!this._editor.getOption(35 /* EditorOption.dragAndDrop */) || this._editor.getOption(22 /* EditorOption.columnSelection */)) {\n            return;\n        }\n        if (hasTriggerModifier(e)) {\n            this._modifierPressed = true;\n        }\n        if (this._mouseDown && hasTriggerModifier(e)) {\n            this._editor.updateOptions({\n                mouseStyle: 'copy'\n            });\n        }\n    }\n    onEditorKeyUp(e) {\n        if (!this._editor.getOption(35 /* EditorOption.dragAndDrop */) || this._editor.getOption(22 /* EditorOption.columnSelection */)) {\n            return;\n        }\n        if (hasTriggerModifier(e)) {\n            this._modifierPressed = false;\n        }\n        if (this._mouseDown && e.keyCode === DragAndDropController.TRIGGER_KEY_VALUE) {\n            this._editor.updateOptions({\n                mouseStyle: 'default'\n            });\n        }\n    }\n    _onEditorMouseDown(mouseEvent) {\n        this._mouseDown = true;\n    }\n    _onEditorMouseUp(mouseEvent) {\n        this._mouseDown = false;\n        // Whenever users release the mouse, the drag and drop operation should finish and the cursor should revert to text.\n        this._editor.updateOptions({\n            mouseStyle: 'text'\n        });\n    }\n    _onEditorMouseDrag(mouseEvent) {\n        const target = mouseEvent.target;\n        if (this._dragSelection === null) {\n            const selections = this._editor.getSelections() || [];\n            const possibleSelections = selections.filter(selection => target.position && selection.containsPosition(target.position));\n            if (possibleSelections.length === 1) {\n                this._dragSelection = possibleSelections[0];\n            }\n            else {\n                return;\n            }\n        }\n        if (hasTriggerModifier(mouseEvent.event)) {\n            this._editor.updateOptions({\n                mouseStyle: 'copy'\n            });\n        }\n        else {\n            this._editor.updateOptions({\n                mouseStyle: 'default'\n            });\n        }\n        if (target.position) {\n            if (this._dragSelection.containsPosition(target.position)) {\n                this._removeDecoration();\n            }\n            else {\n                this.showAt(target.position);\n            }\n        }\n    }\n    _onEditorMouseDropCanceled() {\n        this._editor.updateOptions({\n            mouseStyle: 'text'\n        });\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n    }\n    _onEditorMouseDrop(mouseEvent) {\n        if (mouseEvent.target && (this._hitContent(mouseEvent.target) || this._hitMargin(mouseEvent.target)) && mouseEvent.target.position) {\n            const newCursorPosition = new Position(mouseEvent.target.position.lineNumber, mouseEvent.target.position.column);\n            if (this._dragSelection === null) {\n                let newSelections = null;\n                if (mouseEvent.event.shiftKey) {\n                    const primarySelection = this._editor.getSelection();\n                    if (primarySelection) {\n                        const { selectionStartLineNumber, selectionStartColumn } = primarySelection;\n                        newSelections = [new Selection(selectionStartLineNumber, selectionStartColumn, newCursorPosition.lineNumber, newCursorPosition.column)];\n                    }\n                }\n                else {\n                    newSelections = (this._editor.getSelections() || []).map(selection => {\n                        if (selection.containsPosition(newCursorPosition)) {\n                            return new Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);\n                        }\n                        else {\n                            return selection;\n                        }\n                    });\n                }\n                // Use `mouse` as the source instead of `api` and setting the reason to explicit (to behave like any other mouse operation).\n                this._editor.setSelections(newSelections || [], 'mouse', 3 /* CursorChangeReason.Explicit */);\n            }\n            else if (!this._dragSelection.containsPosition(newCursorPosition) ||\n                ((hasTriggerModifier(mouseEvent.event) ||\n                    this._modifierPressed) && (this._dragSelection.getEndPosition().equals(newCursorPosition) || this._dragSelection.getStartPosition().equals(newCursorPosition)) // we allow users to paste content beside the selection\n                )) {\n                this._editor.pushUndoStop();\n                this._editor.executeCommand(DragAndDropController.ID, new DragAndDropCommand(this._dragSelection, newCursorPosition, hasTriggerModifier(mouseEvent.event) || this._modifierPressed));\n                this._editor.pushUndoStop();\n            }\n        }\n        this._editor.updateOptions({\n            mouseStyle: 'text'\n        });\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n    }\n    showAt(position) {\n        this._dndDecorationIds.set([{\n                range: new Range(position.lineNumber, position.column, position.lineNumber, position.column),\n                options: DragAndDropController._DECORATION_OPTIONS\n            }]);\n        this._editor.revealPosition(position, 1 /* ScrollType.Immediate */);\n    }\n    _removeDecoration() {\n        this._dndDecorationIds.clear();\n    }\n    _hitContent(target) {\n        return target.type === 6 /* MouseTargetType.CONTENT_TEXT */ ||\n            target.type === 7 /* MouseTargetType.CONTENT_EMPTY */;\n    }\n    _hitMargin(target) {\n        return target.type === 2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */ ||\n            target.type === 3 /* MouseTargetType.GUTTER_LINE_NUMBERS */ ||\n            target.type === 4 /* MouseTargetType.GUTTER_LINE_DECORATIONS */;\n    }\n    dispose() {\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n        this._modifierPressed = false;\n        super.dispose();\n    }\n}\nDragAndDropController.ID = 'editor.contrib.dragAndDrop';\nDragAndDropController.TRIGGER_KEY_VALUE = isMacintosh ? 6 /* KeyCode.Alt */ : 5 /* KeyCode.Ctrl */;\nDragAndDropController._DECORATION_OPTIONS = ModelDecorationOptions.register({\n    description: 'dnd-target',\n    className: 'dnd-target'\n});\nregisterEditorContribution(DragAndDropController.ID, DragAndDropController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { IOutlineModelService } from './outlineModel.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nCommandsRegistry.registerCommand('_executeDocumentSymbolProvider', async function (accessor, ...args) {\n    const [resource] = args;\n    assertType(URI.isUri(resource));\n    const outlineService = accessor.get(IOutlineModelService);\n    const modelService = accessor.get(ITextModelService);\n    const reference = await modelService.createModelReference(resource);\n    try {\n        return (await outlineService.getOrCreate(reference.object.textEditorModel, CancellationToken.None)).getTopLevelSymbols();\n    }\n    finally {\n        reference.dispose();\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { equals } from '../../../../base/common/arrays.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport class TreeElement {\n    remove() {\n        var _a;\n        (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.delete(this.id);\n    }\n    static findId(candidate, container) {\n        // complex id-computation which contains the origin/extension,\n        // the parent path, and some dedupe logic when names collide\n        let candidateId;\n        if (typeof candidate === 'string') {\n            candidateId = `${container.id}/${candidate}`;\n        }\n        else {\n            candidateId = `${container.id}/${candidate.name}`;\n            if (container.children.get(candidateId) !== undefined) {\n                candidateId = `${container.id}/${candidate.name}_${candidate.range.startLineNumber}_${candidate.range.startColumn}`;\n            }\n        }\n        let id = candidateId;\n        for (let i = 0; container.children.get(id) !== undefined; i++) {\n            id = `${candidateId}_${i}`;\n        }\n        return id;\n    }\n    static empty(element) {\n        return element.children.size === 0;\n    }\n}\nexport class OutlineElement extends TreeElement {\n    constructor(id, parent, symbol) {\n        super();\n        this.id = id;\n        this.parent = parent;\n        this.symbol = symbol;\n        this.children = new Map();\n    }\n}\nexport class OutlineGroup extends TreeElement {\n    constructor(id, parent, label, order) {\n        super();\n        this.id = id;\n        this.parent = parent;\n        this.label = label;\n        this.order = order;\n        this.children = new Map();\n    }\n}\nexport class OutlineModel extends TreeElement {\n    static create(registry, textModel, token) {\n        const cts = new CancellationTokenSource(token);\n        const result = new OutlineModel(textModel.uri);\n        const provider = registry.ordered(textModel);\n        const promises = provider.map((provider, index) => {\n            var _a;\n            const id = TreeElement.findId(`provider_${index}`, result);\n            const group = new OutlineGroup(id, result, (_a = provider.displayName) !== null && _a !== void 0 ? _a : 'Unknown Outline Provider', index);\n            return Promise.resolve(provider.provideDocumentSymbols(textModel, cts.token)).then(result => {\n                for (const info of result || []) {\n                    OutlineModel._makeOutlineElement(info, group);\n                }\n                return group;\n            }, err => {\n                onUnexpectedExternalError(err);\n                return group;\n            }).then(group => {\n                if (!TreeElement.empty(group)) {\n                    result._groups.set(id, group);\n                }\n                else {\n                    group.remove();\n                }\n            });\n        });\n        const listener = registry.onDidChange(() => {\n            const newProvider = registry.ordered(textModel);\n            if (!equals(newProvider, provider)) {\n                cts.cancel();\n            }\n        });\n        return Promise.all(promises).then(() => {\n            if (cts.token.isCancellationRequested && !token.isCancellationRequested) {\n                return OutlineModel.create(registry, textModel, token);\n            }\n            else {\n                return result._compact();\n            }\n        }).finally(() => {\n            cts.dispose();\n            listener.dispose();\n            cts.dispose();\n        });\n    }\n    static _makeOutlineElement(info, container) {\n        const id = TreeElement.findId(info, container);\n        const res = new OutlineElement(id, container, info);\n        if (info.children) {\n            for (const childInfo of info.children) {\n                OutlineModel._makeOutlineElement(childInfo, res);\n            }\n        }\n        container.children.set(res.id, res);\n    }\n    constructor(uri) {\n        super();\n        this.uri = uri;\n        this.id = 'root';\n        this.parent = undefined;\n        this._groups = new Map();\n        this.children = new Map();\n        this.id = 'root';\n        this.parent = undefined;\n    }\n    _compact() {\n        let count = 0;\n        for (const [key, group] of this._groups) {\n            if (group.children.size === 0) { // empty\n                this._groups.delete(key);\n            }\n            else {\n                count += 1;\n            }\n        }\n        if (count !== 1) {\n            //\n            this.children = this._groups;\n        }\n        else {\n            // adopt all elements of the first group\n            const group = Iterable.first(this._groups.values());\n            for (const [, child] of group.children) {\n                child.parent = this;\n                this.children.set(child.id, child);\n            }\n        }\n        return this;\n    }\n    getTopLevelSymbols() {\n        const roots = [];\n        for (const child of this.children.values()) {\n            if (child instanceof OutlineElement) {\n                roots.push(child.symbol);\n            }\n            else {\n                roots.push(...Iterable.map(child.children.values(), child => child.symbol));\n            }\n        }\n        return roots.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\n    }\n    asListOfDocumentSymbols() {\n        const roots = this.getTopLevelSymbols();\n        const bucket = [];\n        OutlineModel._flattenDocumentSymbols(bucket, roots, '');\n        return bucket.sort((a, b) => Position.compare(Range.getStartPosition(a.range), Range.getStartPosition(b.range)) || Position.compare(Range.getEndPosition(b.range), Range.getEndPosition(a.range)));\n    }\n    static _flattenDocumentSymbols(bucket, entries, overrideContainerLabel) {\n        for (const entry of entries) {\n            bucket.push({\n                kind: entry.kind,\n                tags: entry.tags,\n                name: entry.name,\n                detail: entry.detail,\n                containerName: entry.containerName || overrideContainerLabel,\n                range: entry.range,\n                selectionRange: entry.selectionRange,\n                children: undefined, // we flatten it...\n            });\n            // Recurse over children\n            if (entry.children) {\n                OutlineModel._flattenDocumentSymbols(bucket, entry.children, entry.name);\n            }\n        }\n    }\n}\nexport const IOutlineModelService = createDecorator('IOutlineModelService');\nlet OutlineModelService = class OutlineModelService {\n    constructor(_languageFeaturesService, debounces, modelService) {\n        this._languageFeaturesService = _languageFeaturesService;\n        this._disposables = new DisposableStore();\n        this._cache = new LRUCache(10, 0.7);\n        this._debounceInformation = debounces.for(_languageFeaturesService.documentSymbolProvider, 'DocumentSymbols', { min: 350 });\n        // don't cache outline models longer than their text model\n        this._disposables.add(modelService.onModelRemoved(textModel => {\n            this._cache.delete(textModel.id);\n        }));\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n    async getOrCreate(textModel, token) {\n        const registry = this._languageFeaturesService.documentSymbolProvider;\n        const provider = registry.ordered(textModel);\n        let data = this._cache.get(textModel.id);\n        if (!data || data.versionId !== textModel.getVersionId() || !equals(data.provider, provider)) {\n            const source = new CancellationTokenSource();\n            data = {\n                versionId: textModel.getVersionId(),\n                provider,\n                promiseCnt: 0,\n                source,\n                promise: OutlineModel.create(registry, textModel, source.token),\n                model: undefined,\n            };\n            this._cache.set(textModel.id, data);\n            const now = Date.now();\n            data.promise.then(outlineModel => {\n                data.model = outlineModel;\n                this._debounceInformation.update(textModel, Date.now() - now);\n            }).catch(_err => {\n                this._cache.delete(textModel.id);\n            });\n        }\n        if (data.model) {\n            // resolved -> return data\n            return data.model;\n        }\n        // increase usage counter\n        data.promiseCnt += 1;\n        const listener = token.onCancellationRequested(() => {\n            // last -> cancel provider request, remove cached promise\n            if (--data.promiseCnt === 0) {\n                data.source.cancel();\n                this._cache.delete(textModel.id);\n            }\n        });\n        try {\n            return await data.promise;\n        }\n        finally {\n            listener.dispose();\n        }\n    }\n};\nOutlineModelService = __decorate([\n    __param(0, ILanguageFeaturesService),\n    __param(1, ILanguageFeatureDebounceService),\n    __param(2, IModelService)\n], OutlineModelService);\nexport { OutlineModelService };\nregisterSingleton(IOutlineModelService, OutlineModelService, 1 /* InstantiationType.Delayed */);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { registerEditorFeature } from '../../../common/editorFeatures.js';\nimport { CopyPasteController, changePasteTypeCommandId, pasteWidgetVisibleCtx } from './copyPasteController.js';\nimport { DefaultPasteProvidersFeature, DefaultTextPasteOrDropEditProvider } from './defaultProviders.js';\nimport * as nls from '../../../../nls.js';\nregisterEditorContribution(CopyPasteController.ID, CopyPasteController, 0 /* EditorContributionInstantiation.Eager */); // eager because it listens to events on the container dom node of the editor\nregisterEditorFeature(DefaultPasteProvidersFeature);\nregisterEditorCommand(new class extends EditorCommand {\n    constructor() {\n        super({\n            id: changePasteTypeCommandId,\n            precondition: pasteWidgetVisibleCtx,\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 89 /* KeyCode.Period */,\n            }\n        });\n    }\n    runEditorCommand(_accessor, editor) {\n        var _b;\n        return (_b = CopyPasteController.get(editor)) === null || _b === void 0 ? void 0 : _b.changePasteType();\n    }\n});\nregisterEditorCommand(new class extends EditorCommand {\n    constructor() {\n        super({\n            id: 'editor.hidePasteWidget',\n            precondition: pasteWidgetVisibleCtx,\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */,\n                primary: 9 /* KeyCode.Escape */,\n            }\n        });\n    }\n    runEditorCommand(_accessor, editor) {\n        var _b;\n        (_b = CopyPasteController.get(editor)) === null || _b === void 0 ? void 0 : _b.clearWidgets();\n    }\n});\nregisterEditorAction((_a = class PasteAsAction extends EditorAction {\n        constructor() {\n            super({\n                id: 'editor.action.pasteAs',\n                label: nls.localize('pasteAs', \"Paste As...\"),\n                alias: 'Paste As...',\n                precondition: EditorContextKeys.writable,\n                metadata: {\n                    description: 'Paste as',\n                    args: [{\n                            name: 'args',\n                            schema: _a.argsSchema\n                        }]\n                }\n            });\n        }\n        run(_accessor, editor, args) {\n            var _b;\n            let kind = typeof (args === null || args === void 0 ? void 0 : args.kind) === 'string' ? args.kind : undefined;\n            if (!kind && args) {\n                // Support old id property\n                // TODO: remove this in the future\n                kind = typeof args.id === 'string' ? args.id : undefined;\n            }\n            return (_b = CopyPasteController.get(editor)) === null || _b === void 0 ? void 0 : _b.pasteAs(kind ? new HierarchicalKind(kind) : undefined);\n        }\n    },\n    _a.argsSchema = {\n        type: 'object',\n        properties: {\n            kind: {\n                type: 'string',\n                description: nls.localize('pasteAs.kind', \"The kind of the paste edit to try applying. If not provided or there are multiple edits for this kind, the editor will show a picker.\"),\n            }\n        },\n    },\n    _a));\nregisterEditorAction(class extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.pasteAsText',\n            label: nls.localize('pasteAsText', \"Paste as Text\"),\n            alias: 'Paste as Text',\n            precondition: EditorContextKeys.writable,\n        });\n    }\n    run(_accessor, editor) {\n        var _b;\n        return (_b = CopyPasteController.get(editor)) === null || _b === void 0 ? void 0 : _b.pasteAs({ providerId: DefaultTextPasteOrDropEditProvider.id });\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar CopyPasteController_1;\nimport { addDisposableListener, getActiveDocument } from '../../../../base/browser/dom.js';\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, raceCancellation } from '../../../../base/common/async.js';\nimport { UriList, createStringDataTransferItem, matchesMimeType } from '../../../../base/common/dataTransfer.js';\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Mimes } from '../../../../base/common/mime.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { generateUuid } from '../../../../base/common/uuid.js';\nimport { ClipboardEventUtils } from '../../../browser/controller/textAreaInput.js';\nimport { toExternalVSDataTransfer, toVSDataTransfer } from '../../../browser/dnd.js';\nimport { IBulkEditService } from '../../../browser/services/bulkEditService.js';\nimport { Range } from '../../../common/core/range.js';\nimport { DocumentPasteTriggerKind } from '../../../common/languages.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { DefaultTextPasteOrDropEditProvider } from './defaultProviders.js';\nimport { createCombinedWorkspaceEdit, sortEditsByYieldTo } from './edit.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { InlineProgressManager } from '../../inlineProgress/browser/inlineProgress.js';\nimport { MessageController } from '../../message/browser/messageController.js';\nimport { localize } from '../../../../nls.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IProgressService } from '../../../../platform/progress/common/progress.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { PostEditWidgetManager } from './postEditWidget.js';\nexport const changePasteTypeCommandId = 'editor.changePasteType';\nexport const pasteWidgetVisibleCtx = new RawContextKey('pasteWidgetVisible', false, localize('pasteWidgetVisible', \"Whether the paste widget is showing\"));\nconst vscodeClipboardMime = 'application/vnd.code.copyMetadata';\nlet CopyPasteController = CopyPasteController_1 = class CopyPasteController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(CopyPasteController_1.ID);\n    }\n    constructor(editor, instantiationService, _bulkEditService, _clipboardService, _languageFeaturesService, _quickInputService, _progressService) {\n        super();\n        this._bulkEditService = _bulkEditService;\n        this._clipboardService = _clipboardService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._quickInputService = _quickInputService;\n        this._progressService = _progressService;\n        this._editor = editor;\n        const container = editor.getContainerDomNode();\n        this._register(addDisposableListener(container, 'copy', e => this.handleCopy(e)));\n        this._register(addDisposableListener(container, 'cut', e => this.handleCopy(e)));\n        this._register(addDisposableListener(container, 'paste', e => this.handlePaste(e), true));\n        this._pasteProgressManager = this._register(new InlineProgressManager('pasteIntoEditor', editor, instantiationService));\n        this._postPasteWidgetManager = this._register(instantiationService.createInstance(PostEditWidgetManager, 'pasteIntoEditor', editor, pasteWidgetVisibleCtx, { id: changePasteTypeCommandId, label: localize('postPasteWidgetTitle', \"Show paste options...\") }));\n    }\n    changePasteType() {\n        this._postPasteWidgetManager.tryShowSelector();\n    }\n    pasteAs(preferred) {\n        this._editor.focus();\n        try {\n            this._pasteAsActionContext = { preferred };\n            getActiveDocument().execCommand('paste');\n        }\n        finally {\n            this._pasteAsActionContext = undefined;\n        }\n    }\n    clearWidgets() {\n        this._postPasteWidgetManager.clear();\n    }\n    isPasteAsEnabled() {\n        return this._editor.getOption(85 /* EditorOption.pasteAs */).enabled\n            && !this._editor.getOption(91 /* EditorOption.readOnly */);\n    }\n    async finishedPaste() {\n        await this._currentPasteOperation;\n    }\n    handleCopy(e) {\n        var _a, _b;\n        if (!this._editor.hasTextFocus()) {\n            return;\n        }\n        if (platform.isWeb) {\n            // Explicitly clear the web resources clipboard.\n            // This is needed because on web, the browser clipboard is faked out using an in-memory store.\n            // This means the resources clipboard is not properly updated when copying from the editor.\n            this._clipboardService.writeResources([]);\n        }\n        if (!e.clipboardData || !this.isPasteAsEnabled()) {\n            return;\n        }\n        const model = this._editor.getModel();\n        const selections = this._editor.getSelections();\n        if (!model || !(selections === null || selections === void 0 ? void 0 : selections.length)) {\n            return;\n        }\n        const enableEmptySelectionClipboard = this._editor.getOption(37 /* EditorOption.emptySelectionClipboard */);\n        let ranges = selections;\n        const wasFromEmptySelection = selections.length === 1 && selections[0].isEmpty();\n        if (wasFromEmptySelection) {\n            if (!enableEmptySelectionClipboard) {\n                return;\n            }\n            ranges = [new Range(ranges[0].startLineNumber, 1, ranges[0].startLineNumber, 1 + model.getLineLength(ranges[0].startLineNumber))];\n        }\n        const toCopy = (_a = this._editor._getViewModel()) === null || _a === void 0 ? void 0 : _a.getPlainTextToCopy(selections, enableEmptySelectionClipboard, platform.isWindows);\n        const multicursorText = Array.isArray(toCopy) ? toCopy : null;\n        const defaultPastePayload = {\n            multicursorText,\n            pasteOnNewLine: wasFromEmptySelection,\n            mode: null\n        };\n        const providers = this._languageFeaturesService.documentPasteEditProvider\n            .ordered(model)\n            .filter(x => !!x.prepareDocumentPaste);\n        if (!providers.length) {\n            this.setCopyMetadata(e.clipboardData, { defaultPastePayload });\n            return;\n        }\n        const dataTransfer = toVSDataTransfer(e.clipboardData);\n        const providerCopyMimeTypes = providers.flatMap(x => { var _a; return (_a = x.copyMimeTypes) !== null && _a !== void 0 ? _a : []; });\n        // Save off a handle pointing to data that VS Code maintains.\n        const handle = generateUuid();\n        this.setCopyMetadata(e.clipboardData, {\n            id: handle,\n            providerCopyMimeTypes,\n            defaultPastePayload\n        });\n        const promise = createCancelablePromise(async (token) => {\n            const results = coalesce(await Promise.all(providers.map(async (provider) => {\n                try {\n                    return await provider.prepareDocumentPaste(model, ranges, dataTransfer, token);\n                }\n                catch (err) {\n                    console.error(err);\n                    return undefined;\n                }\n            })));\n            // Values from higher priority providers should overwrite values from lower priority ones.\n            // Reverse the array to so that the calls to `replace` below will do this\n            results.reverse();\n            for (const result of results) {\n                for (const [mime, value] of result) {\n                    dataTransfer.replace(mime, value);\n                }\n            }\n            return dataTransfer;\n        });\n        (_b = CopyPasteController_1._currentCopyOperation) === null || _b === void 0 ? void 0 : _b.dataTransferPromise.cancel();\n        CopyPasteController_1._currentCopyOperation = { handle: handle, dataTransferPromise: promise };\n    }\n    async handlePaste(e) {\n        var _a, _b, _c, _d;\n        if (!e.clipboardData || !this._editor.hasTextFocus()) {\n            return;\n        }\n        (_a = MessageController.get(this._editor)) === null || _a === void 0 ? void 0 : _a.closeMessage();\n        (_b = this._currentPasteOperation) === null || _b === void 0 ? void 0 : _b.cancel();\n        this._currentPasteOperation = undefined;\n        const model = this._editor.getModel();\n        const selections = this._editor.getSelections();\n        if (!(selections === null || selections === void 0 ? void 0 : selections.length) || !model) {\n            return;\n        }\n        if (!this.isPasteAsEnabled()\n            && !this._pasteAsActionContext // Still enable if paste as was explicitly requested\n        ) {\n            return;\n        }\n        const metadata = this.fetchCopyMetadata(e);\n        const dataTransfer = toExternalVSDataTransfer(e.clipboardData);\n        dataTransfer.delete(vscodeClipboardMime);\n        const allPotentialMimeTypes = [\n            ...e.clipboardData.types,\n            ...(_c = metadata === null || metadata === void 0 ? void 0 : metadata.providerCopyMimeTypes) !== null && _c !== void 0 ? _c : [],\n            // TODO: always adds `uri-list` because this get set if there are resources in the system clipboard.\n            // However we can only check the system clipboard async. For this early check, just add it in.\n            // We filter providers again once we have the final dataTransfer we will use.\n            Mimes.uriList,\n        ];\n        const allProviders = this._languageFeaturesService.documentPasteEditProvider\n            .ordered(model)\n            .filter(provider => {\n            var _a, _b;\n            // Filter out providers that don't match the requested paste types\n            const preference = (_a = this._pasteAsActionContext) === null || _a === void 0 ? void 0 : _a.preferred;\n            if (preference) {\n                if (provider.providedPasteEditKinds && !this.providerMatchesPreference(provider, preference)) {\n                    return false;\n                }\n            }\n            // And providers that don't handle any of mime types in the clipboard\n            return (_b = provider.pasteMimeTypes) === null || _b === void 0 ? void 0 : _b.some(type => matchesMimeType(type, allPotentialMimeTypes));\n        });\n        if (!allProviders.length) {\n            if ((_d = this._pasteAsActionContext) === null || _d === void 0 ? void 0 : _d.preferred) {\n                this.showPasteAsNoEditMessage(selections, this._pasteAsActionContext.preferred);\n            }\n            return;\n        }\n        // Prevent the editor's default paste handler from running.\n        // Note that after this point, we are fully responsible for handling paste.\n        // If we can't provider a paste for any reason, we need to explicitly delegate pasting back to the editor.\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        if (this._pasteAsActionContext) {\n            this.showPasteAsPick(this._pasteAsActionContext.preferred, allProviders, selections, dataTransfer, metadata);\n        }\n        else {\n            this.doPasteInline(allProviders, selections, dataTransfer, metadata, e);\n        }\n    }\n    showPasteAsNoEditMessage(selections, preference) {\n        var _a;\n        (_a = MessageController.get(this._editor)) === null || _a === void 0 ? void 0 : _a.showMessage(localize('pasteAsError', \"No paste edits for '{0}' found\", preference instanceof HierarchicalKind ? preference.value : preference.providerId), selections[0].getStartPosition());\n    }\n    doPasteInline(allProviders, selections, dataTransfer, metadata, clipboardEvent) {\n        const p = createCancelablePromise(async (token) => {\n            const editor = this._editor;\n            if (!editor.hasModel()) {\n                return;\n            }\n            const model = editor.getModel();\n            const tokenSource = new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */ | 2 /* CodeEditorStateFlag.Selection */, undefined, token);\n            try {\n                await this.mergeInDataFromCopy(dataTransfer, metadata, tokenSource.token);\n                if (tokenSource.token.isCancellationRequested) {\n                    return;\n                }\n                const supportedProviders = allProviders.filter(provider => this.isSupportedPasteProvider(provider, dataTransfer));\n                if (!supportedProviders.length\n                    || (supportedProviders.length === 1 && supportedProviders[0] instanceof DefaultTextPasteOrDropEditProvider) // Only our default text provider is active\n                ) {\n                    return this.applyDefaultPasteHandler(dataTransfer, metadata, tokenSource.token, clipboardEvent);\n                }\n                const context = {\n                    triggerKind: DocumentPasteTriggerKind.Automatic,\n                };\n                const providerEdits = await this.getPasteEdits(supportedProviders, dataTransfer, model, selections, context, tokenSource.token);\n                if (tokenSource.token.isCancellationRequested) {\n                    return;\n                }\n                // If the only edit returned is our default text edit, use the default paste handler\n                if (providerEdits.length === 1 && providerEdits[0].provider instanceof DefaultTextPasteOrDropEditProvider) {\n                    return this.applyDefaultPasteHandler(dataTransfer, metadata, tokenSource.token, clipboardEvent);\n                }\n                if (providerEdits.length) {\n                    const canShowWidget = editor.getOption(85 /* EditorOption.pasteAs */).showPasteSelector === 'afterPaste';\n                    return this._postPasteWidgetManager.applyEditAndShowIfNeeded(selections, { activeEditIndex: 0, allEdits: providerEdits }, canShowWidget, async (edit, token) => {\n                        var _a, _b;\n                        const resolved = await ((_b = (_a = edit.provider).resolveDocumentPasteEdit) === null || _b === void 0 ? void 0 : _b.call(_a, edit, token));\n                        if (resolved) {\n                            edit.additionalEdit = resolved.additionalEdit;\n                        }\n                        return edit;\n                    }, tokenSource.token);\n                }\n                await this.applyDefaultPasteHandler(dataTransfer, metadata, tokenSource.token, clipboardEvent);\n            }\n            finally {\n                tokenSource.dispose();\n                if (this._currentPasteOperation === p) {\n                    this._currentPasteOperation = undefined;\n                }\n            }\n        });\n        this._pasteProgressManager.showWhile(selections[0].getEndPosition(), localize('pasteIntoEditorProgress', \"Running paste handlers. Click to cancel\"), p);\n        this._currentPasteOperation = p;\n    }\n    showPasteAsPick(preference, allProviders, selections, dataTransfer, metadata) {\n        const p = createCancelablePromise(async (token) => {\n            const editor = this._editor;\n            if (!editor.hasModel()) {\n                return;\n            }\n            const model = editor.getModel();\n            const tokenSource = new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */ | 2 /* CodeEditorStateFlag.Selection */, undefined, token);\n            try {\n                await this.mergeInDataFromCopy(dataTransfer, metadata, tokenSource.token);\n                if (tokenSource.token.isCancellationRequested) {\n                    return;\n                }\n                // Filter out any providers the don't match the full data transfer we will send them.\n                let supportedProviders = allProviders.filter(provider => this.isSupportedPasteProvider(provider, dataTransfer, preference));\n                if (preference) {\n                    // We are looking for a specific edit\n                    supportedProviders = supportedProviders.filter(provider => this.providerMatchesPreference(provider, preference));\n                }\n                const context = {\n                    triggerKind: DocumentPasteTriggerKind.PasteAs,\n                    only: preference && preference instanceof HierarchicalKind ? preference : undefined,\n                };\n                let providerEdits = await this.getPasteEdits(supportedProviders, dataTransfer, model, selections, context, tokenSource.token);\n                if (tokenSource.token.isCancellationRequested) {\n                    return;\n                }\n                // Filter out any edits that don't match the requested kind\n                if (preference) {\n                    providerEdits = providerEdits.filter(edit => {\n                        if (preference instanceof HierarchicalKind) {\n                            return preference.contains(edit.kind);\n                        }\n                        else {\n                            return preference.providerId === edit.provider.id;\n                        }\n                    });\n                }\n                if (!providerEdits.length) {\n                    if (context.only) {\n                        this.showPasteAsNoEditMessage(selections, context.only);\n                    }\n                    return;\n                }\n                let pickedEdit;\n                if (preference) {\n                    pickedEdit = providerEdits.at(0);\n                }\n                else {\n                    const selected = await this._quickInputService.pick(providerEdits.map((edit) => {\n                        var _a;\n                        return ({\n                            label: edit.title,\n                            description: (_a = edit.kind) === null || _a === void 0 ? void 0 : _a.value,\n                            edit,\n                        });\n                    }), {\n                        placeHolder: localize('pasteAsPickerPlaceholder', \"Select Paste Action\"),\n                    });\n                    pickedEdit = selected === null || selected === void 0 ? void 0 : selected.edit;\n                }\n                if (!pickedEdit) {\n                    return;\n                }\n                const combinedWorkspaceEdit = createCombinedWorkspaceEdit(model.uri, selections, pickedEdit);\n                await this._bulkEditService.apply(combinedWorkspaceEdit, { editor: this._editor });\n            }\n            finally {\n                tokenSource.dispose();\n                if (this._currentPasteOperation === p) {\n                    this._currentPasteOperation = undefined;\n                }\n            }\n        });\n        this._progressService.withProgress({\n            location: 10 /* ProgressLocation.Window */,\n            title: localize('pasteAsProgress', \"Running paste handlers\"),\n        }, () => p);\n    }\n    setCopyMetadata(dataTransfer, metadata) {\n        dataTransfer.setData(vscodeClipboardMime, JSON.stringify(metadata));\n    }\n    fetchCopyMetadata(e) {\n        var _a;\n        if (!e.clipboardData) {\n            return;\n        }\n        // Prefer using the clipboard data we saved off\n        const rawMetadata = e.clipboardData.getData(vscodeClipboardMime);\n        if (rawMetadata) {\n            try {\n                return JSON.parse(rawMetadata);\n            }\n            catch (_b) {\n                return undefined;\n            }\n        }\n        // Otherwise try to extract the generic text editor metadata\n        const [_, metadata] = ClipboardEventUtils.getTextData(e.clipboardData);\n        if (metadata) {\n            return {\n                defaultPastePayload: {\n                    mode: metadata.mode,\n                    multicursorText: (_a = metadata.multicursorText) !== null && _a !== void 0 ? _a : null,\n                    pasteOnNewLine: !!metadata.isFromEmptySelection,\n                },\n            };\n        }\n        return undefined;\n    }\n    async mergeInDataFromCopy(dataTransfer, metadata, token) {\n        var _a;\n        if ((metadata === null || metadata === void 0 ? void 0 : metadata.id) && ((_a = CopyPasteController_1._currentCopyOperation) === null || _a === void 0 ? void 0 : _a.handle) === metadata.id) {\n            const toMergeDataTransfer = await CopyPasteController_1._currentCopyOperation.dataTransferPromise;\n            if (token.isCancellationRequested) {\n                return;\n            }\n            for (const [key, value] of toMergeDataTransfer) {\n                dataTransfer.replace(key, value);\n            }\n        }\n        if (!dataTransfer.has(Mimes.uriList)) {\n            const resources = await this._clipboardService.readResources();\n            if (token.isCancellationRequested) {\n                return;\n            }\n            if (resources.length) {\n                dataTransfer.append(Mimes.uriList, createStringDataTransferItem(UriList.create(resources)));\n            }\n        }\n    }\n    async getPasteEdits(providers, dataTransfer, model, selections, context, token) {\n        const results = await raceCancellation(Promise.all(providers.map(async (provider) => {\n            var _a, _b;\n            try {\n                const edits = await ((_a = provider.provideDocumentPasteEdits) === null || _a === void 0 ? void 0 : _a.call(provider, model, selections, dataTransfer, context, token));\n                // TODO: dispose of edits\n                return (_b = edits === null || edits === void 0 ? void 0 : edits.edits) === null || _b === void 0 ? void 0 : _b.map(edit => ({ ...edit, provider }));\n            }\n            catch (err) {\n                console.error(err);\n            }\n            return undefined;\n        })), token);\n        const edits = coalesce(results !== null && results !== void 0 ? results : []).flat().filter(edit => {\n            return !context.only || context.only.contains(edit.kind);\n        });\n        return sortEditsByYieldTo(edits);\n    }\n    async applyDefaultPasteHandler(dataTransfer, metadata, token, clipboardEvent) {\n        var _a, _b, _c, _d;\n        const textDataTransfer = (_a = dataTransfer.get(Mimes.text)) !== null && _a !== void 0 ? _a : dataTransfer.get('text');\n        const text = (_b = (await (textDataTransfer === null || textDataTransfer === void 0 ? void 0 : textDataTransfer.asString()))) !== null && _b !== void 0 ? _b : '';\n        if (token.isCancellationRequested) {\n            return;\n        }\n        const payload = {\n            clipboardEvent,\n            text,\n            pasteOnNewLine: (_c = metadata === null || metadata === void 0 ? void 0 : metadata.defaultPastePayload.pasteOnNewLine) !== null && _c !== void 0 ? _c : false,\n            multicursorText: (_d = metadata === null || metadata === void 0 ? void 0 : metadata.defaultPastePayload.multicursorText) !== null && _d !== void 0 ? _d : null,\n            mode: null,\n        };\n        this._editor.trigger('keyboard', \"paste\" /* Handler.Paste */, payload);\n    }\n    /**\n     * Filter out providers if they:\n     * - Don't handle any of the data transfer types we have\n     * - Don't match the preferred paste kind\n     */\n    isSupportedPasteProvider(provider, dataTransfer, preference) {\n        var _a;\n        if (!((_a = provider.pasteMimeTypes) === null || _a === void 0 ? void 0 : _a.some(type => dataTransfer.matches(type)))) {\n            return false;\n        }\n        return !preference || this.providerMatchesPreference(provider, preference);\n    }\n    providerMatchesPreference(provider, preference) {\n        if (preference instanceof HierarchicalKind) {\n            if (!provider.providedPasteEditKinds) {\n                return true;\n            }\n            return provider.providedPasteEditKinds.some(providedKind => preference.contains(providedKind));\n        }\n        else {\n            return provider.id === preference.providerId;\n        }\n    }\n};\nCopyPasteController.ID = 'editor.contrib.copyPasteActionController';\nCopyPasteController = CopyPasteController_1 = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IBulkEditService),\n    __param(3, IClipboardService),\n    __param(4, ILanguageFeaturesService),\n    __param(5, IQuickInputService),\n    __param(6, IProgressService)\n], CopyPasteController);\nexport { CopyPasteController };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { UriList } from '../../../../base/common/dataTransfer.js';\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Mimes } from '../../../../base/common/mime.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { relativePath } from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { DocumentPasteTriggerKind } from '../../../common/languages.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { localize } from '../../../../nls.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nclass SimplePasteAndDropProvider {\n    async provideDocumentPasteEdits(_model, _ranges, dataTransfer, context, token) {\n        const edit = await this.getEdit(dataTransfer, token);\n        if (!edit) {\n            return undefined;\n        }\n        return {\n            dispose() { },\n            edits: [{ insertText: edit.insertText, title: edit.title, kind: edit.kind, handledMimeType: edit.handledMimeType, yieldTo: edit.yieldTo }]\n        };\n    }\n    async provideDocumentDropEdits(_model, _position, dataTransfer, token) {\n        const edit = await this.getEdit(dataTransfer, token);\n        return edit ? [{ insertText: edit.insertText, title: edit.title, kind: edit.kind, handledMimeType: edit.handledMimeType, yieldTo: edit.yieldTo }] : undefined;\n    }\n}\nexport class DefaultTextPasteOrDropEditProvider extends SimplePasteAndDropProvider {\n    constructor() {\n        super(...arguments);\n        this.kind = DefaultTextPasteOrDropEditProvider.kind;\n        this.dropMimeTypes = [Mimes.text];\n        this.pasteMimeTypes = [Mimes.text];\n    }\n    async getEdit(dataTransfer, _token) {\n        const textEntry = dataTransfer.get(Mimes.text);\n        if (!textEntry) {\n            return;\n        }\n        // Suppress if there's also a uriList entry.\n        // Typically the uri-list contains the same text as the text entry so showing both is confusing.\n        if (dataTransfer.has(Mimes.uriList)) {\n            return;\n        }\n        const insertText = await textEntry.asString();\n        return {\n            handledMimeType: Mimes.text,\n            title: localize('text.label', \"Insert Plain Text\"),\n            insertText,\n            kind: this.kind,\n        };\n    }\n}\nDefaultTextPasteOrDropEditProvider.id = 'text';\nDefaultTextPasteOrDropEditProvider.kind = new HierarchicalKind('text.plain');\nclass PathProvider extends SimplePasteAndDropProvider {\n    constructor() {\n        super(...arguments);\n        this.kind = new HierarchicalKind('uri.absolute');\n        this.dropMimeTypes = [Mimes.uriList];\n        this.pasteMimeTypes = [Mimes.uriList];\n    }\n    async getEdit(dataTransfer, token) {\n        const entries = await extractUriList(dataTransfer);\n        if (!entries.length || token.isCancellationRequested) {\n            return;\n        }\n        let uriCount = 0;\n        const insertText = entries\n            .map(({ uri, originalText }) => {\n            if (uri.scheme === Schemas.file) {\n                return uri.fsPath;\n            }\n            else {\n                uriCount++;\n                return originalText;\n            }\n        })\n            .join(' ');\n        let label;\n        if (uriCount > 0) {\n            // Dropping at least one generic uri (such as https) so use most generic label\n            label = entries.length > 1\n                ? localize('defaultDropProvider.uriList.uris', \"Insert Uris\")\n                : localize('defaultDropProvider.uriList.uri', \"Insert Uri\");\n        }\n        else {\n            // All the paths are file paths\n            label = entries.length > 1\n                ? localize('defaultDropProvider.uriList.paths', \"Insert Paths\")\n                : localize('defaultDropProvider.uriList.path', \"Insert Path\");\n        }\n        return {\n            handledMimeType: Mimes.uriList,\n            insertText,\n            title: label,\n            kind: this.kind,\n        };\n    }\n}\nlet RelativePathProvider = class RelativePathProvider extends SimplePasteAndDropProvider {\n    constructor(_workspaceContextService) {\n        super();\n        this._workspaceContextService = _workspaceContextService;\n        this.kind = new HierarchicalKind('uri.relative');\n        this.dropMimeTypes = [Mimes.uriList];\n        this.pasteMimeTypes = [Mimes.uriList];\n    }\n    async getEdit(dataTransfer, token) {\n        const entries = await extractUriList(dataTransfer);\n        if (!entries.length || token.isCancellationRequested) {\n            return;\n        }\n        const relativeUris = coalesce(entries.map(({ uri }) => {\n            const root = this._workspaceContextService.getWorkspaceFolder(uri);\n            return root ? relativePath(root.uri, uri) : undefined;\n        }));\n        if (!relativeUris.length) {\n            return;\n        }\n        return {\n            handledMimeType: Mimes.uriList,\n            insertText: relativeUris.join(' '),\n            title: entries.length > 1\n                ? localize('defaultDropProvider.uriList.relativePaths', \"Insert Relative Paths\")\n                : localize('defaultDropProvider.uriList.relativePath', \"Insert Relative Path\"),\n            kind: this.kind,\n        };\n    }\n};\nRelativePathProvider = __decorate([\n    __param(0, IWorkspaceContextService)\n], RelativePathProvider);\nclass PasteHtmlProvider {\n    constructor() {\n        this.kind = new HierarchicalKind('html');\n        this.pasteMimeTypes = ['text/html'];\n        this._yieldTo = [{ mimeType: Mimes.text }];\n    }\n    async provideDocumentPasteEdits(_model, _ranges, dataTransfer, context, token) {\n        var _a;\n        if (context.triggerKind !== DocumentPasteTriggerKind.PasteAs && !((_a = context.only) === null || _a === void 0 ? void 0 : _a.contains(this.kind))) {\n            return;\n        }\n        const entry = dataTransfer.get('text/html');\n        const htmlText = await (entry === null || entry === void 0 ? void 0 : entry.asString());\n        if (!htmlText || token.isCancellationRequested) {\n            return;\n        }\n        return {\n            dispose() { },\n            edits: [{\n                    insertText: htmlText,\n                    yieldTo: this._yieldTo,\n                    title: localize('pasteHtmlLabel', 'Insert HTML'),\n                    kind: this.kind,\n                }],\n        };\n    }\n}\nasync function extractUriList(dataTransfer) {\n    const urlListEntry = dataTransfer.get(Mimes.uriList);\n    if (!urlListEntry) {\n        return [];\n    }\n    const strUriList = await urlListEntry.asString();\n    const entries = [];\n    for (const entry of UriList.parse(strUriList)) {\n        try {\n            entries.push({ uri: URI.parse(entry), originalText: entry });\n        }\n        catch (_a) {\n            // noop\n        }\n    }\n    return entries;\n}\nlet DefaultDropProvidersFeature = class DefaultDropProvidersFeature extends Disposable {\n    constructor(languageFeaturesService, workspaceContextService) {\n        super();\n        this._register(languageFeaturesService.documentDropEditProvider.register('*', new DefaultTextPasteOrDropEditProvider()));\n        this._register(languageFeaturesService.documentDropEditProvider.register('*', new PathProvider()));\n        this._register(languageFeaturesService.documentDropEditProvider.register('*', new RelativePathProvider(workspaceContextService)));\n    }\n};\nDefaultDropProvidersFeature = __decorate([\n    __param(0, ILanguageFeaturesService),\n    __param(1, IWorkspaceContextService)\n], DefaultDropProvidersFeature);\nexport { DefaultDropProvidersFeature };\nlet DefaultPasteProvidersFeature = class DefaultPasteProvidersFeature extends Disposable {\n    constructor(languageFeaturesService, workspaceContextService) {\n        super();\n        this._register(languageFeaturesService.documentPasteEditProvider.register('*', new DefaultTextPasteOrDropEditProvider()));\n        this._register(languageFeaturesService.documentPasteEditProvider.register('*', new PathProvider()));\n        this._register(languageFeaturesService.documentPasteEditProvider.register('*', new RelativePathProvider(workspaceContextService)));\n        this._register(languageFeaturesService.documentPasteEditProvider.register('*', new PasteHtmlProvider()));\n    }\n};\nDefaultPasteProvidersFeature = __decorate([\n    __param(0, ILanguageFeaturesService),\n    __param(1, IWorkspaceContextService)\n], DefaultPasteProvidersFeature);\nexport { DefaultPasteProvidersFeature };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar DropIntoEditorController_1;\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, raceCancellation } from '../../../../base/common/async.js';\nimport { VSDataTransfer, matchesMimeType } from '../../../../base/common/dataTransfer.js';\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { toExternalVSDataTransfer } from '../../../browser/dnd.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { DraggedTreeItemsIdentifier } from '../../../common/services/treeViewsDnd.js';\nimport { ITreeViewsDnDService } from '../../../common/services/treeViewsDndService.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { InlineProgressManager } from '../../inlineProgress/browser/inlineProgress.js';\nimport { localize } from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { LocalSelectionTransfer } from '../../../../platform/dnd/browser/dnd.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { sortEditsByYieldTo } from './edit.js';\nimport { PostEditWidgetManager } from './postEditWidget.js';\nexport const defaultProviderConfig = 'editor.experimental.dropIntoEditor.defaultProvider';\nexport const changeDropTypeCommandId = 'editor.changeDropType';\nexport const dropWidgetVisibleCtx = new RawContextKey('dropWidgetVisible', false, localize('dropWidgetVisible', \"Whether the drop widget is showing\"));\nlet DropIntoEditorController = DropIntoEditorController_1 = class DropIntoEditorController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(DropIntoEditorController_1.ID);\n    }\n    constructor(editor, instantiationService, _configService, _languageFeaturesService, _treeViewsDragAndDropService) {\n        super();\n        this._configService = _configService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._treeViewsDragAndDropService = _treeViewsDragAndDropService;\n        this.treeItemsTransfer = LocalSelectionTransfer.getInstance();\n        this._dropProgressManager = this._register(instantiationService.createInstance(InlineProgressManager, 'dropIntoEditor', editor));\n        this._postDropWidgetManager = this._register(instantiationService.createInstance(PostEditWidgetManager, 'dropIntoEditor', editor, dropWidgetVisibleCtx, { id: changeDropTypeCommandId, label: localize('postDropWidgetTitle', \"Show drop options...\") }));\n        this._register(editor.onDropIntoEditor(e => this.onDropIntoEditor(editor, e.position, e.event)));\n    }\n    clearWidgets() {\n        this._postDropWidgetManager.clear();\n    }\n    changeDropType() {\n        this._postDropWidgetManager.tryShowSelector();\n    }\n    async onDropIntoEditor(editor, position, dragEvent) {\n        var _a;\n        if (!dragEvent.dataTransfer || !editor.hasModel()) {\n            return;\n        }\n        (_a = this._currentOperation) === null || _a === void 0 ? void 0 : _a.cancel();\n        editor.focus();\n        editor.setPosition(position);\n        const p = createCancelablePromise(async (token) => {\n            const tokenSource = new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */, undefined, token);\n            try {\n                const ourDataTransfer = await this.extractDataTransferData(dragEvent);\n                if (ourDataTransfer.size === 0 || tokenSource.token.isCancellationRequested) {\n                    return;\n                }\n                const model = editor.getModel();\n                if (!model) {\n                    return;\n                }\n                const providers = this._languageFeaturesService.documentDropEditProvider\n                    .ordered(model)\n                    .filter(provider => {\n                    if (!provider.dropMimeTypes) {\n                        // Keep all providers that don't specify mime types\n                        return true;\n                    }\n                    return provider.dropMimeTypes.some(mime => ourDataTransfer.matches(mime));\n                });\n                const edits = await this.getDropEdits(providers, model, position, ourDataTransfer, tokenSource);\n                if (tokenSource.token.isCancellationRequested) {\n                    return;\n                }\n                if (edits.length) {\n                    const activeEditIndex = this.getInitialActiveEditIndex(model, edits);\n                    const canShowWidget = editor.getOption(36 /* EditorOption.dropIntoEditor */).showDropSelector === 'afterDrop';\n                    // Pass in the parent token here as it tracks cancelling the entire drop operation\n                    await this._postDropWidgetManager.applyEditAndShowIfNeeded([Range.fromPositions(position)], { activeEditIndex, allEdits: edits }, canShowWidget, async (edit) => edit, token);\n                }\n            }\n            finally {\n                tokenSource.dispose();\n                if (this._currentOperation === p) {\n                    this._currentOperation = undefined;\n                }\n            }\n        });\n        this._dropProgressManager.showWhile(position, localize('dropIntoEditorProgress', \"Running drop handlers. Click to cancel\"), p);\n        this._currentOperation = p;\n    }\n    async getDropEdits(providers, model, position, dataTransfer, tokenSource) {\n        const results = await raceCancellation(Promise.all(providers.map(async (provider) => {\n            try {\n                const edits = await provider.provideDocumentDropEdits(model, position, dataTransfer, tokenSource.token);\n                return edits === null || edits === void 0 ? void 0 : edits.map(edit => ({ ...edit, providerId: provider.id }));\n            }\n            catch (err) {\n                console.error(err);\n            }\n            return undefined;\n        })), tokenSource.token);\n        const edits = coalesce(results !== null && results !== void 0 ? results : []).flat();\n        return sortEditsByYieldTo(edits);\n    }\n    getInitialActiveEditIndex(model, edits) {\n        const preferredProviders = this._configService.getValue(defaultProviderConfig, { resource: model.uri });\n        for (const [configMime, desiredKindStr] of Object.entries(preferredProviders)) {\n            const desiredKind = new HierarchicalKind(desiredKindStr);\n            const editIndex = edits.findIndex(edit => desiredKind.value === edit.providerId\n                && edit.handledMimeType && matchesMimeType(configMime, [edit.handledMimeType]));\n            if (editIndex >= 0) {\n                return editIndex;\n            }\n        }\n        return 0;\n    }\n    async extractDataTransferData(dragEvent) {\n        if (!dragEvent.dataTransfer) {\n            return new VSDataTransfer();\n        }\n        const dataTransfer = toExternalVSDataTransfer(dragEvent.dataTransfer);\n        if (this.treeItemsTransfer.hasData(DraggedTreeItemsIdentifier.prototype)) {\n            const data = this.treeItemsTransfer.getData(DraggedTreeItemsIdentifier.prototype);\n            if (Array.isArray(data)) {\n                for (const id of data) {\n                    const treeDataTransfer = await this._treeViewsDragAndDropService.removeDragOperationTransfer(id.identifier);\n                    if (treeDataTransfer) {\n                        for (const [type, value] of treeDataTransfer) {\n                            dataTransfer.replace(type, value);\n                        }\n                    }\n                }\n            }\n        }\n        return dataTransfer;\n    }\n};\nDropIntoEditorController.ID = 'editor.contrib.dropIntoEditorController';\nDropIntoEditorController = DropIntoEditorController_1 = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IConfigurationService),\n    __param(3, ILanguageFeaturesService),\n    __param(4, ITreeViewsDnDService)\n], DropIntoEditorController);\nexport { DropIntoEditorController };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorCommand, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { editorConfigurationBaseNode } from '../../../common/config/editorConfigurationSchema.js';\nimport { registerEditorFeature } from '../../../common/editorFeatures.js';\nimport { DefaultDropProvidersFeature } from './defaultProviders.js';\nimport * as nls from '../../../../nls.js';\nimport { Extensions as ConfigurationExtensions } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { DropIntoEditorController, changeDropTypeCommandId, defaultProviderConfig, dropWidgetVisibleCtx } from './dropIntoEditorController.js';\nregisterEditorContribution(DropIntoEditorController.ID, DropIntoEditorController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorFeature(DefaultDropProvidersFeature);\nregisterEditorCommand(new class extends EditorCommand {\n    constructor() {\n        super({\n            id: changeDropTypeCommandId,\n            precondition: dropWidgetVisibleCtx,\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 89 /* KeyCode.Period */,\n            }\n        });\n    }\n    runEditorCommand(_accessor, editor, _args) {\n        var _a;\n        (_a = DropIntoEditorController.get(editor)) === null || _a === void 0 ? void 0 : _a.changeDropType();\n    }\n});\nregisterEditorCommand(new class extends EditorCommand {\n    constructor() {\n        super({\n            id: 'editor.hideDropWidget',\n            precondition: dropWidgetVisibleCtx,\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */,\n                primary: 9 /* KeyCode.Escape */,\n            }\n        });\n    }\n    runEditorCommand(_accessor, editor, _args) {\n        var _a;\n        (_a = DropIntoEditorController.get(editor)) === null || _a === void 0 ? void 0 : _a.clearWidgets();\n    }\n});\nRegistry.as(ConfigurationExtensions.Configuration).registerConfiguration({\n    ...editorConfigurationBaseNode,\n    properties: {\n        [defaultProviderConfig]: {\n            type: 'object',\n            scope: 5 /* ConfigurationScope.LANGUAGE_OVERRIDABLE */,\n            description: nls.localize('defaultProviderDescription', \"Configures the default drop provider to use for content of a given mime type.\"),\n            default: {},\n            additionalProperties: {\n                type: 'string',\n            },\n        },\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ResourceTextEdit } from '../../../browser/services/bulkEditService.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\n/**\n * Given a {@link DropOrPasteEdit} and set of ranges, creates a {@link WorkspaceEdit} that applies the insert text from\n * the {@link DropOrPasteEdit} at each range plus any additional edits.\n */\nexport function createCombinedWorkspaceEdit(uri, ranges, edit) {\n    var _a, _b, _c, _d;\n    // If the edit insert text is empty, skip applying at each range\n    if (typeof edit.insertText === 'string' ? edit.insertText === '' : edit.insertText.snippet === '') {\n        return {\n            edits: (_b = (_a = edit.additionalEdit) === null || _a === void 0 ? void 0 : _a.edits) !== null && _b !== void 0 ? _b : []\n        };\n    }\n    return {\n        edits: [\n            ...ranges.map(range => new ResourceTextEdit(uri, { range, text: typeof edit.insertText === 'string' ? SnippetParser.escape(edit.insertText) + '$0' : edit.insertText.snippet, insertAsSnippet: true })),\n            ...((_d = (_c = edit.additionalEdit) === null || _c === void 0 ? void 0 : _c.edits) !== null && _d !== void 0 ? _d : [])\n        ]\n    };\n}\nexport function sortEditsByYieldTo(edits) {\n    var _a;\n    function yieldsTo(yTo, other) {\n        if ('mimeType' in yTo) {\n            return yTo.mimeType === other.handledMimeType;\n        }\n        return !!other.kind && yTo.kind.contains(other.kind);\n    }\n    // Build list of nodes each node yields to\n    const yieldsToMap = new Map();\n    for (const edit of edits) {\n        for (const yTo of (_a = edit.yieldTo) !== null && _a !== void 0 ? _a : []) {\n            for (const other of edits) {\n                if (other === edit) {\n                    continue;\n                }\n                if (yieldsTo(yTo, other)) {\n                    let arr = yieldsToMap.get(edit);\n                    if (!arr) {\n                        arr = [];\n                        yieldsToMap.set(edit, arr);\n                    }\n                    arr.push(other);\n                }\n            }\n        }\n    }\n    if (!yieldsToMap.size) {\n        return Array.from(edits);\n    }\n    // Topological sort\n    const visited = new Set();\n    const tempStack = [];\n    function visit(nodes) {\n        if (!nodes.length) {\n            return [];\n        }\n        const node = nodes[0];\n        if (tempStack.includes(node)) {\n            console.warn('Yield to cycle detected', node);\n            return nodes;\n        }\n        if (visited.has(node)) {\n            return visit(nodes.slice(1));\n        }\n        let pre = [];\n        const yTo = yieldsToMap.get(node);\n        if (yTo) {\n            tempStack.push(node);\n            pre = visit(yTo);\n            tempStack.pop();\n        }\n        visited.add(node);\n        return [...pre, node, ...visit(nodes.slice(1))];\n    }\n    return visit(Array.from(edits));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar PostEditWidget_1;\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Button } from '../../../../base/browser/ui/button/button.js';\nimport { toAction } from '../../../../base/common/actions.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport './postEditWidget.css';\nimport { IBulkEditService } from '../../../browser/services/bulkEditService.js';\nimport { createCombinedWorkspaceEdit } from './edit.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nlet PostEditWidget = PostEditWidget_1 = class PostEditWidget extends Disposable {\n    constructor(typeId, editor, visibleContext, showCommand, range, edits, onSelectNewEdit, _contextMenuService, contextKeyService, _keybindingService) {\n        super();\n        this.typeId = typeId;\n        this.editor = editor;\n        this.showCommand = showCommand;\n        this.range = range;\n        this.edits = edits;\n        this.onSelectNewEdit = onSelectNewEdit;\n        this._contextMenuService = _contextMenuService;\n        this._keybindingService = _keybindingService;\n        this.allowEditorOverflow = true;\n        this.suppressMouseDown = true;\n        this.create();\n        this.visibleContext = visibleContext.bindTo(contextKeyService);\n        this.visibleContext.set(true);\n        this._register(toDisposable(() => this.visibleContext.reset()));\n        this.editor.addContentWidget(this);\n        this.editor.layoutContentWidget(this);\n        this._register(toDisposable((() => this.editor.removeContentWidget(this))));\n        this._register(this.editor.onDidChangeCursorPosition(e => {\n            if (!range.containsPosition(e.position)) {\n                this.dispose();\n            }\n        }));\n        this._register(Event.runAndSubscribe(_keybindingService.onDidUpdateKeybindings, () => {\n            this._updateButtonTitle();\n        }));\n    }\n    _updateButtonTitle() {\n        var _a;\n        const binding = (_a = this._keybindingService.lookupKeybinding(this.showCommand.id)) === null || _a === void 0 ? void 0 : _a.getLabel();\n        this.button.element.title = this.showCommand.label + (binding ? ` (${binding})` : '');\n    }\n    create() {\n        this.domNode = dom.$('.post-edit-widget');\n        this.button = this._register(new Button(this.domNode, {\n            supportIcons: true,\n        }));\n        this.button.label = '$(insert)';\n        this._register(dom.addDisposableListener(this.domNode, dom.EventType.CLICK, () => this.showSelector()));\n    }\n    getId() {\n        return PostEditWidget_1.baseId + '.' + this.typeId;\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    getPosition() {\n        return {\n            position: this.range.getEndPosition(),\n            preference: [2 /* ContentWidgetPositionPreference.BELOW */]\n        };\n    }\n    showSelector() {\n        this._contextMenuService.showContextMenu({\n            getAnchor: () => {\n                const pos = dom.getDomNodePagePosition(this.button.element);\n                return { x: pos.left + pos.width, y: pos.top + pos.height };\n            },\n            getActions: () => {\n                return this.edits.allEdits.map((edit, i) => toAction({\n                    id: '',\n                    label: edit.title,\n                    checked: i === this.edits.activeEditIndex,\n                    run: () => {\n                        if (i !== this.edits.activeEditIndex) {\n                            return this.onSelectNewEdit(i);\n                        }\n                    },\n                }));\n            }\n        });\n    }\n};\nPostEditWidget.baseId = 'editor.widget.postEditWidget';\nPostEditWidget = PostEditWidget_1 = __decorate([\n    __param(7, IContextMenuService),\n    __param(8, IContextKeyService),\n    __param(9, IKeybindingService)\n], PostEditWidget);\nlet PostEditWidgetManager = class PostEditWidgetManager extends Disposable {\n    constructor(_id, _editor, _visibleContext, _showCommand, _instantiationService, _bulkEditService) {\n        super();\n        this._id = _id;\n        this._editor = _editor;\n        this._visibleContext = _visibleContext;\n        this._showCommand = _showCommand;\n        this._instantiationService = _instantiationService;\n        this._bulkEditService = _bulkEditService;\n        this._currentWidget = this._register(new MutableDisposable());\n        this._register(Event.any(_editor.onDidChangeModel, _editor.onDidChangeModelContent)(() => this.clear()));\n    }\n    async applyEditAndShowIfNeeded(ranges, edits, canShowWidget, resolve, token) {\n        const model = this._editor.getModel();\n        if (!model || !ranges.length) {\n            return;\n        }\n        const edit = edits.allEdits.at(edits.activeEditIndex);\n        if (!edit) {\n            return;\n        }\n        const resolvedEdit = await resolve(edit, token);\n        if (token.isCancellationRequested) {\n            return;\n        }\n        const combinedWorkspaceEdit = createCombinedWorkspaceEdit(model.uri, ranges, resolvedEdit);\n        // Use a decoration to track edits around the trigger range\n        const primaryRange = ranges[0];\n        const editTrackingDecoration = model.deltaDecorations([], [{\n                range: primaryRange,\n                options: { description: 'paste-line-suffix', stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */ }\n            }]);\n        this._editor.focus();\n        let editResult;\n        let editRange;\n        try {\n            editResult = await this._bulkEditService.apply(combinedWorkspaceEdit, { editor: this._editor, token });\n            editRange = model.getDecorationRange(editTrackingDecoration[0]);\n        }\n        finally {\n            model.deltaDecorations(editTrackingDecoration, []);\n        }\n        if (token.isCancellationRequested) {\n            return;\n        }\n        if (canShowWidget && editResult.isApplied && edits.allEdits.length > 1) {\n            this.show(editRange !== null && editRange !== void 0 ? editRange : primaryRange, edits, async (newEditIndex) => {\n                const model = this._editor.getModel();\n                if (!model) {\n                    return;\n                }\n                await model.undo();\n                this.applyEditAndShowIfNeeded(ranges, { activeEditIndex: newEditIndex, allEdits: edits.allEdits }, canShowWidget, resolve, token);\n            });\n        }\n    }\n    show(range, edits, onDidSelectEdit) {\n        this.clear();\n        if (this._editor.hasModel()) {\n            this._currentWidget.value = this._instantiationService.createInstance((PostEditWidget), this._id, this._editor, this._visibleContext, this._showCommand, range, edits, onDidSelectEdit);\n        }\n    }\n    clear() {\n        this._currentWidget.clear();\n    }\n    tryShowSelector() {\n        var _a;\n        (_a = this._currentWidget.value) === null || _a === void 0 ? void 0 : _a.showSelector();\n    }\n};\nPostEditWidgetManager = __decorate([\n    __param(4, IInstantiationService),\n    __param(5, IBulkEditService)\n], PostEditWidgetManager);\nexport { PostEditWidgetManager };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorCommand, registerEditorCommand } from '../../../browser/editorExtensions.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { LinkedList } from '../../../../base/common/linkedList.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { localize } from '../../../../nls.js';\nconst IEditorCancellationTokens = createDecorator('IEditorCancelService');\nconst ctxCancellableOperation = new RawContextKey('cancellableOperation', false, localize('cancellableOperation', 'Whether the editor runs a cancellable operation, e.g. like \\'Peek References\\''));\nregisterSingleton(IEditorCancellationTokens, class {\n    constructor() {\n        this._tokens = new WeakMap();\n    }\n    add(editor, cts) {\n        let data = this._tokens.get(editor);\n        if (!data) {\n            data = editor.invokeWithinContext(accessor => {\n                const key = ctxCancellableOperation.bindTo(accessor.get(IContextKeyService));\n                const tokens = new LinkedList();\n                return { key, tokens };\n            });\n            this._tokens.set(editor, data);\n        }\n        let removeFn;\n        data.key.set(true);\n        removeFn = data.tokens.push(cts);\n        return () => {\n            // remove w/o cancellation\n            if (removeFn) {\n                removeFn();\n                data.key.set(!data.tokens.isEmpty());\n                removeFn = undefined;\n            }\n        };\n    }\n    cancel(editor) {\n        const data = this._tokens.get(editor);\n        if (!data) {\n            return;\n        }\n        // remove with cancellation\n        const cts = data.tokens.pop();\n        if (cts) {\n            cts.cancel();\n            data.key.set(!data.tokens.isEmpty());\n        }\n    }\n}, 1 /* InstantiationType.Delayed */);\nexport class EditorKeybindingCancellationTokenSource extends CancellationTokenSource {\n    constructor(editor, parent) {\n        super(parent);\n        this.editor = editor;\n        this._unregister = editor.invokeWithinContext(accessor => accessor.get(IEditorCancellationTokens).add(editor, this));\n    }\n    dispose() {\n        this._unregister();\n        super.dispose();\n    }\n}\nregisterEditorCommand(new class extends EditorCommand {\n    constructor() {\n        super({\n            id: 'editor.cancelOperation',\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */,\n                primary: 9 /* KeyCode.Escape */\n            },\n            precondition: ctxCancellableOperation\n        });\n    }\n    runEditorCommand(accessor, editor) {\n        accessor.get(IEditorCancellationTokens).cancel(editor);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../../base/common/strings.js';\nimport { Range } from '../../../common/core/range.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { EditorKeybindingCancellationTokenSource } from './keybindingCancellation.js';\nexport class EditorState {\n    constructor(editor, flags) {\n        this.flags = flags;\n        if ((this.flags & 1 /* CodeEditorStateFlag.Value */) !== 0) {\n            const model = editor.getModel();\n            this.modelVersionId = model ? strings.format('{0}#{1}', model.uri.toString(), model.getVersionId()) : null;\n        }\n        else {\n            this.modelVersionId = null;\n        }\n        if ((this.flags & 4 /* CodeEditorStateFlag.Position */) !== 0) {\n            this.position = editor.getPosition();\n        }\n        else {\n            this.position = null;\n        }\n        if ((this.flags & 2 /* CodeEditorStateFlag.Selection */) !== 0) {\n            this.selection = editor.getSelection();\n        }\n        else {\n            this.selection = null;\n        }\n        if ((this.flags & 8 /* CodeEditorStateFlag.Scroll */) !== 0) {\n            this.scrollLeft = editor.getScrollLeft();\n            this.scrollTop = editor.getScrollTop();\n        }\n        else {\n            this.scrollLeft = -1;\n            this.scrollTop = -1;\n        }\n    }\n    _equals(other) {\n        if (!(other instanceof EditorState)) {\n            return false;\n        }\n        const state = other;\n        if (this.modelVersionId !== state.modelVersionId) {\n            return false;\n        }\n        if (this.scrollLeft !== state.scrollLeft || this.scrollTop !== state.scrollTop) {\n            return false;\n        }\n        if (!this.position && state.position || this.position && !state.position || this.position && state.position && !this.position.equals(state.position)) {\n            return false;\n        }\n        if (!this.selection && state.selection || this.selection && !state.selection || this.selection && state.selection && !this.selection.equalsRange(state.selection)) {\n            return false;\n        }\n        return true;\n    }\n    validate(editor) {\n        return this._equals(new EditorState(editor, this.flags));\n    }\n}\n/**\n * A cancellation token source that cancels when the editor changes as expressed\n * by the provided flags\n * @param range If provided, changes in position and selection within this range will not trigger cancellation\n */\nexport class EditorStateCancellationTokenSource extends EditorKeybindingCancellationTokenSource {\n    constructor(editor, flags, range, parent) {\n        super(editor, parent);\n        this._listener = new DisposableStore();\n        if (flags & 4 /* CodeEditorStateFlag.Position */) {\n            this._listener.add(editor.onDidChangeCursorPosition(e => {\n                if (!range || !Range.containsPosition(range, e.position)) {\n                    this.cancel();\n                }\n            }));\n        }\n        if (flags & 2 /* CodeEditorStateFlag.Selection */) {\n            this._listener.add(editor.onDidChangeCursorSelection(e => {\n                if (!range || !Range.containsRange(range, e.selection)) {\n                    this.cancel();\n                }\n            }));\n        }\n        if (flags & 8 /* CodeEditorStateFlag.Scroll */) {\n            this._listener.add(editor.onDidScrollChange(_ => this.cancel()));\n        }\n        if (flags & 1 /* CodeEditorStateFlag.Value */) {\n            this._listener.add(editor.onDidChangeModel(_ => this.cancel()));\n            this._listener.add(editor.onDidChangeModelContent(_ => this.cancel()));\n        }\n    }\n    dispose() {\n        this._listener.dispose();\n        super.dispose();\n    }\n}\n/**\n * A cancellation token source that cancels when the provided model changes\n */\nexport class TextModelCancellationTokenSource extends CancellationTokenSource {\n    constructor(model, parent) {\n        super(parent);\n        this._listener = model.onDidChangeContent(() => this.cancel());\n    }\n    dispose() {\n        this._listener.dispose();\n        super.dispose();\n    }\n}\n"],"names":["SelectionAnchorController_1","__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","SelectionAnchorSet","RawContextKey","SelectionAnchorController","get","editor","getContribution","ID","constructor","contextKeyService","this","selectionAnchorSetContextKey","bindTo","modelChangeListener","onDidChangeModel","reset","setSelectionAnchor","hasModel","position","getPosition","changeDecorations","accessor","decorationId","removeDecoration","addDecoration","Selection","fromPositions","description","stickiness","hoverMessage","MarkdownString","appendText","localize","className","set","alert","lineNumber","column","goToSelectionAnchor","anchorPosition","getModel","getDecorationRange","setPosition","getStartPosition","selectFromAnchorToCursor","start","end","setSelection","cancelSelectionAnchor","undefined","dispose","IContextKeyService","SetSelectionAnchor","EditorAction","super","id","label","alias","precondition","kbOpts","kbExpr","EditorContextKeys","editorTextFocus","primary","KeyChord","weight","run","_accessor","_a","GoToSelectionAnchor","SelectFromAnchorToCursor","CancelSelectionAnchor","registerEditorContribution","registerEditorAction","overviewRulerBracketMatchForeground","registerColor","dark","light","hcDark","hcLight","nls","JumpToBracketAction","BracketMatchingController","jumpToBracket","SelectToBracketAction","metadata","args","name","schema","type","properties","default","selectBrackets","selectToBracket","RemoveBracketsAction","removeBrackets","BracketsData","brackets","options","Disposable","_editor","_lastBracketsData","_lastVersionId","_decorations","createDecorationsCollection","_updateBracketsSoon","_register","RunOnceScheduler","_updateBrackets","_matchBrackets","getOption","schedule","onDidChangeCursorPosition","e","onDidChangeModelContent","onDidChangeModelLanguageConfiguration","onDidChangeConfiguration","hasChanged","clear","onDidBlurEditorWidget","onDidFocusEditorWidget","model","newSelections","getSelections","map","selection","bracketPairs","matchBracket","newCursorPosition","containsPosition","enclosingBrackets","findEnclosingBrackets","nextBracket","findNextBracket","range","setSelections","revealRange","forEach","selectFrom","selectTo","sort","Range","compareRangesUsingStarts","open","close","getEndPosition","tmp","push","editSource","pushUndoStop","executeEdits","text","_recomputeBrackets","newDecorations","newDecorationsLen","bracketData","hasWidgetFocus","selections","versionId","getVersionId","previousData","positions","positionsLen","len","isEmpty","Position","compare","newData","newDataLen","previousIndex","previousLen","isBefore","equals","_DECORATION_OPTIONS_WITH_OVERVIEW_RULER","_DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER","ModelDecorationOptions","register","overviewRuler","color","themeColorFromId","OverviewRulerLane","Center","MenuRegistry","appendMenuItem","MenuId","MenubarGoMenu","group","command","title","comment","order","MoveCaretCommand","isMovingLeft","_selection","_isMovingLeft","getEditOperations","builder","startLineNumber","endLineNumber","startColumn","endColumn","getLineMaxColumn","rangeBefore","charBefore","getValueInRange","addEditOperation","rangeAfter","charAfter","computeCursorState","helper","MoveCaretAction","left","opts","commands","executeCommands","writable","TransposeLettersAction","textInputFocus","mac","lastColumn","endPosition","MoveOperations","rightPosition","middlePosition","leftPosition","beginPosition","leftChar","rightChar","replaceRange","ReplaceCommand","CLIPBOARD_CONTEXT_MENU_GROUP","supportsCut","platform","document","queryCommandSupported","supportsCopy","supportsPaste","navigator","clipboard","browser","registerCommand","CutAction","MultiCommand","win","secondary","menuOpts","menuId","MenubarEditMenu","EditorContext","when","CommandPalette","SimpleEditorContext","CopyAction","submenu","MenubarCopy","EditorContextCopy","EditorContextShare","ContextKeyExpr","and","notEquals","EditorTitleContext","EditorTitleContextShare","ExplorerContext","ExplorerContextShare","PasteAction","linux","ExecCommandCopyWithSyntaxHighlightingAction","getSelection","CopyOptions","forceCopyWithSyntaxHighlighting","focus","getContainerDomNode","ownerDocument","execCommand","registerExecCommandImpl","browserCommand","addImplementation","focusedEditor","ICodeEditorService","getFocusedCodeEditor","hasTextFocus","emptySelectionClipboard","getActiveDocument","_b","codeEditorService","clipboardService","IClipboardService","CopyPasteController","finishedPaste","Promise","resolve","clipboardText","readText","InMemoryClipboardMetadataManager","INSTANCE","pasteOnNewLine","multicursorText","mode","isFromEmptySelection","trigger","codeActionCommandId","quickFixCommandId","autoFixCommandId","refactorCommandId","sourceActionCommandId","organizeImportsCommandId","fixAllCommandId","ManagedCodeActionSet","codeActionsPreferredComparator","a","b","isPreferred","codeActionsComparator","_ref","_ref2","action","isAI","isNonEmptyArray","diagnostics","actions","documentation","disposables","allActions","validActions","filter","_ref3","disabled","hasAutoFix","some","_ref4","fix","kind","CodeActionKind","QuickFix","contains","HierarchicalKind","hasAIFix","_ref5","allAIFixes","every","_ref6","emptyCodeActionsResponse","async","getCodeActions","registry","rangeOrSelection","progress","token","notebookFilter","excludes","Notebook","codeActionContext","only","include","value","cts","TextModelCancellationTokenSource","excludeNotebookCodeActions","providers","all","provider","providedCodeActionKinds","mayIncludeActionsOfKind","getCodeActionProviders","DisposableStore","promises","report","providedCodeActions","provideCodeActions","add","isCancellationRequested","filteredActions","filtersAction","entry","currentBest","getDocumentationFromProvider","CodeActionItem","err","isCancellationError","onUnexpectedExternalError","listener","onDidChange","newProviders","cancel","x","flat","allDocumentation","coalesce","getAdditionalDocumentationForShowingActions","actionsToShow","_c","_getAdditionalMenuItems","call","item","ApplyCodeActionReason","applyCodeAction","codeActionReason","CancellationToken","None","bulkEditService","IBulkEditService","commandService","ICommandService","telemetryService","ITelemetryService","notificationService","INotificationService","publicLog2","codeActionTitle","codeActionKind","codeActionIsPreferred","reason","edit","edits","apply","quotableLabel","code","respectAutoSaveConfig","OnSave","showPreview","preview","isApplied","executeCommand","message","Error","asMessage","error","CommandsRegistry","resource","itemResolveCount","URI","illegalArgument","codeActionProvider","ILanguageFeaturesService","IModelService","validatedRangeOrSelection","isISelection","liftSelection","isIRange","validateRange","codeActionSet","triggerAction","CodeActionTriggerSource","Default","includeSourceActions","Progress","resolving","resolveCount","Math","min","setTimeout","contextKeyForSupportedActions","regex","SUPPORTED_CODE_ACTIONS","keys","RegExp","escapeRegExpCharacters","argsSchema","defaultSnippets","body","enum","enumDescriptions","triggerCodeActionsForEditorSelection","notAvailableMessage","autoApply","controller","CodeActionController","manualTriggerAtCurrentPosition","QuickFixAction","hasCodeActionsProvider","CodeActionCommand","EditorCommand","runEditorCommand","userArgs","CodeActionCommandArgs","fromUser","Empty","preferred","onlyIncludePreferredActions","RefactorAction","contextMenuOpts","Refactor","SourceAction","Source","OrganizeImportsAction","SourceOrganizeImports","OrganizeImports","FixAllAction","SourceFixAll","FixAll","AutoFixAction","AutoFix","LightBulbWidget","registerEditorCommand","Registry","as","Extensions","Configuration","registerConfiguration","editorConfigurationBaseNode","scope","CodeActionKeybindingResolver_1","CodeActionKeybindingResolver","keybindingService","getResolver","allCodeActionBindings","Lazy","getKeybindings","codeActionCommands","indexOf","resolvedKeybinding","commandArgs","binding","bestKeybindingForCodeAction","candidates","candidate","reduceRight","IKeybindingService","uncategorizedCodeActionGroup","freeze","codeActionGroups","RefactorExtract","icon","Codicon","wrench","RefactorInline","RefactorRewrite","RefactorMove","SurroundWith","surroundWith","symbolFile","CodeActionController_1","markerService","instantiationService","languageFeaturesService","progressService","_commandService","_configurationService","_actionWidgetService","_instantiationService","_telemetryService","_activeCodeActions","MutableDisposable","_showDisabled","_disposed","_model","CodeActionModel","onDidChangeState","newState","update","_lightBulbWidget","widget","onClick","showCodeActionsFromLightbulb","_resolver","createInstance","onDidLayoutChange","hide","at","codeActionListLength","codeActions","codeActionProviders","displayName","actionItem","autoSend","_applyCodeAction","FromAILightbulb","showCodeActionList","includeDisabledActions","fromLightbulb","showCodeActions","_trigger","MessageController","closeMessage","triggerPosition","context","retrigger","actionReason","invokeFunction","_d","_e","_f","_g","rawValue","onUnexpectedError","validActionToApply","tryGetValidActionToApply","FromCodeActions","invalidAction","getInvalidActionThatWouldHaveBeenApplied","showMessage","toCoords","isVisible","find","currentDecorations","editorDom","getDomNode","anchor","isIPosition","delegate","onSelect","onHide","didCancel","onHover","canPreview","actionKind","hierarchicalKind","refactorKind","onFocus","ranges","decorations","diagnostic","DECORATION","selectionText","getWordAtPosition","word","aria","show","inputCodeActions","showHeaders","keybindingResolver","menuEntries","menuEntry","allMenuItems","sparkle","keybinding","toMenuItems","_shouldShowHeaders","_getActionBarActions","y","revealPosition","render","cursorCoords","getScrolledVisiblePosition","editorCoords","getDomNodePagePosition","top","height","getValue","uri","resultActions","tooltip","class","enabled","IMarkerService","IInstantiationService","IEditorProgressService","IConfigurationService","IActionWidgetService","registerThemingParticipant","theme","collector","addBackgroundColorRule","selector","getColor","editorFindMatchHighlight","addRule","concat","findMatchHighlightBorder","editorFindMatchHighlightBorder","isHighContrast","APPLY_FIX_ALL_COMMAND_ID","CodeActionOracle","_markerService","_signalChange","_delay","_autoTriggerTimer","TimeoutTimer","onMarkerChanged","_onMarkerChanges","_tryAutoTrigger","_getRangeOfSelectionUnlessWhitespaceEnclosed","resources","isEqual","cancelAndSet","ShowLightbulbIconMode","Off","On","OnCode","line","getLineContent","test","CodeActionsState","Triggered","_cancellablePromise","catch","emptyCodeActionSet","_registry","_progressService","_codeActionOracle","_state","_onDidChangeState","Emitter","event","_supportedCodeActions","_update","onDidChangeModelLanguage","setState","_settingEnabledNearbyQuickfixes","has","supportedActions","flatMap","join","startPosition","createCancelablePromise","_h","_j","_k","allCodeActions","foundQuickfix","allMarkers","read","arg","includes","marker","relatedInformation","currPosition","trackedPosition","distance","Number","MAX_VALUE","currentActions","col","row","startRow","newCodeActionTrigger","selectionAsPosition","actionsAtMarker","abs","unshift","index","self","findIndex","showWhile","isManualToAutoTransition","skipNotify","fire","LightBulbWidget_1","LightBulbState","Hidden","Showing","editorPosition","widgetPosition","_keybindingService","_onClick","_iconClasses","_domNode","dom","$","role","Gesture","ignoreTarget","addContentWidget","_","editorModel","state","getLineCount","preventDefault","lineHeight","pad","floor","posx","buttons","Event","runAndSubscribe","onDidUpdateKeybindings","_preferredKbLabel","lookupKeybinding","getLabel","_quickFixKbLabel","_updateLightBulbTitleAndIcon","removeContentWidget","getId","atPosition","getOptions","validatePosition","tabSize","fontInfo","lineContent","indent","computeIndentLevel","isFolded","getTopForLineNumber","effectiveLineNumber","effectiveColumnNumber","spaceWidth","preference","_posPref","layoutContentWidget","classList","remove","autoRun","sparkleFilled","lightbulbSparkleAutofix","lightbulbAutofix","lightbulbSparkle","lightBulb","_updateLightbulbTitle","ThemeIcon","asClassNameArray","autoFix","append","providedKind","intersects","exclude","excludesAction","defaults","getKindFromUser","getApplyFromUser","getPreferredUser","defaultAutoApply","toLowerCase","defaultKind","highlightRange","resolveCodeAction","CodeLensModel","lenses","_disposables","isDisposed","list","symbol","getCodeLensModel","ordered","providerRanks","Map","result","provideCodeLenses","_len","Array","_key","assertType","isUri","codeLensProvider","then","Boolean","resolveCodeLens","finally","ICodeLensCache","createDecorator","CacheItem","lineCount","data","CodeLensCache","storageService","_fakeProvider","_cache","LRUCache","runWhenWindowIdle","mainWindow","raw","_deserialize","once","onWillSaveState","WillSaveStateReason","SHUTDOWN","store","_serialize","put","copyItems","copyModel","toString","delete","create","lines","Set","values","JSON","stringify","parse","element","IStorageService","registerSingleton","CodeLensViewZone","afterLineNumber","heightInPx","onHeight","afterColumn","_onHeight","suppressMouseDown","domNode","createElement","onComputedHeight","_lastHeight","hasAttribute","CodeLensContentWidget","allowEditorOverflow","_commands","_isEmpty","_id","_idPool","updatePosition","withCommands","animate","children","hasSymbol","lens","renderLabelWithIcons","trim","getCommand","link","parentElement","getLineFirstNonWhitespaceColumn","_widgetPosition","CodeLensHelper","_removeDecorations","_addDecorations","_addDecorationsCallbacks","decoration","callback","commit","changeAccessor","resultingDecorations","deltaDecorations","codeLensDecorationOptions","collapseOnReplaceEdit","CodeLensWidget","viewZoneChangeAccessor","updateCallback","_isDisposed","_data","_decorationIds","codeLensData","plusRange","lift","_viewZone","_viewZoneId","addZone","_createContentWidgetIfNecessary","_contentWidget","removeZone","isValid","updateCodeLensSymbols","updateHeight","layoutZone","computeIfNecessary","updateCommands","symbols","resolved","getLineNumber","CodeLensContribution","_languageFeaturesService","debounceService","_notificationService","_codeLensCache","_localToDispose","_lenses","_oldCodeLensModels","_provideCodeLensDebounce","for","_resolveCodeLensesDebounce","salt","_resolveCodeLensesScheduler","_resolveCodeLensesInViewport","_onModelChange","_updateLensStyle","_localDispose","_currentCodeLensModel","_getLayoutInfo","lineHeightFactor","max","fontSize","codeLensHeight","fontFamily","editorFontInfo","style","setProperty","fontFeatureSettings","EDITOR_FONT_DEFAULTS","changeViewZones","_getCodeLensModelPromise","_resolveCodeLensesPromise","isTooLargeForTokenization","cachedLenses","_renderCodeLensSymbols","disposableTimeout","cachedLensesNow","registration","scheduler","t1","Date","now","newDelay","delay","_resolveCodeLensesInViewportSoon","toDisposable","decorationsAccessor","viewZonesAccessor","toDispose","lastLensLineNumber","l","splice","onDidBlurEditorText","onDidScrollChange","scrollTopChanged","scrollState","StableEditorScrollState","capture","_disposeAllLenses","restore","onMouseDown","tagName","decChangeAccessor","maxLineNumber","groups","lastGroup","layoutInfo","viewZoneAccessor","codeLensIndex","groupsIndex","symbolsLineNumber","codeLensLineNumber","toResolve","request","resolvePromise","resolvedSymbols","ILanguageFeatureDebounceService","hasCodeLensProvider","quickInputService","IQuickInputService","positionLineNumber","codelensController","items","pick","canPickMany","placeHolder","newModel","newLens","getColors","colorProviderRegistry","isDefaultColorDecoratorsEnabled","_findColorData","ColorDataCollector","getColorPresentations","colorInfo","provideColorPresentations","compute","colors","documentColors","provideDocumentColors","isArray","ExtColorDataCollector","red","green","blue","alpha","ColorPresentationsCollector","_token","defaultProvider","validDocumentColorProviderFound","colorData","documentColorProviders","DefaultDocumentColorProvider","_setupColorCommand","colorProvider","_len2","_key2","ColorContribution","mouseEvent","colorDecoratorsActivatedOn","detail","injectedText","attachedData","ColorDecorationInjectedTextMarker","hoverController","HoverController","isColorPickerVisible","showContentHover","HoverParticipantRegistry","ColorHoverParticipant","ColorDetector_1","ColorDetector","languageFeatureDebounceService","_decorationsIds","_colorDatas","_colorDecoratorIds","_ruleFactory","DynamicCssRules","_decoratorLimitReporter","DecoratorLimitReporter","_colorDecorationClassRefs","_debounceInformation","RECOMPUTE_TIME","_isColorDecoratorsEnabled","isEnabled","updateColors","prevIsEnabled","_isDefaultColorDecoratorsEnabled","updatedColorDecoratorsSetting","updatedDefaultColorDecoratorsSetting","removeAllDecorations","_timeoutTimer","_computePromise","languageId","getLanguageId","deprecatedConfig","colorDecorators","stop","beginCompute","sw","StopWatch","elapsed","updateDecorations","updateColorDecorators","colorDatas","EMPTY","limit","rgba","RGBA","round","g","ref","createClassNameRef","backgroundColor","before","content","noBreakWhitespace","inlineClassName","inlineClassNameAffectsLetterSpacing","limited","removeDecorations","getColorData","getDecorationsInRange","isColorDecoration","_onDidChange","_computed","_limited","computed","ColorPickerModel","_color","_onDidChangeColor","presentation","colorPresentations","presentationIndex","_colorPresentations","_onDidChangePresentation","availableColorPresentations","_onColorFlushed","onColorFlushed","onDidChangeColor","onDidChangePresentation","originalColor","selectNextColorPresentation","flushColor","guessColorPresentation","originalText","originalTextPrefix","split","startsWith","ColorPickerHeader","container","themeService","showingStandaloneColorPicker","_closeButton","_pickedColorNode","_pickedColorPresentation","setAttribute","_originalColorNode","Color","Format","CSS","format","getColorTheme","editorHoverBackground","white","onDidColorThemeChange","CLICK","toggle","isLighter","CloseButton","closeButton","pickedColorNode","originalColorNode","textContent","_onClicked","onClicked","_button","innerDiv","asCSSSelector","registerIcon","ColorPickerBody","pixelRatio","isStandaloneColorPicker","_insertButton","_saturationBox","SaturationBox","onDidSaturationValueChange","_opacityStrip","OpacityStrip","onDidOpacityChange","_hueStrip","HueStrip","onDidHueChange","InsertButton","s","v","hsva","HSVA","h","saturationBox","enterButton","layout","_canvas","POINTER_DOWN","onPointerDown","monitor","Element","GlobalPointerMoveMonitor","origin","onDidChangePosition","offsetX","offsetY","startMonitoring","pointerId","pageX","pageY","pointerUpListener","POINTER_UP","stopMonitoring","width","paintSelection","offsetWidth","offsetHeight","paint","saturatedColor","ctx","getContext","whiteGradient","createLinearGradient","addColorStop","blackGradient","rect","fillStyle","fill","isMonitoring","Strip","overlay","slider","updateSliderPosition","onDidChangeTop","opaque","transparent","background","button","ColorPickerWidget","Widget","standaloneColorPicker","PixelRatio","getInstance","appendChild","header","ColorHover","owner","forceShowAtRange","isValidForHoverAnchor","_themeService","hoverOrdinal","computeSync","_anchor","_lineDecorations","computeAsync","lineDecorations","AsyncIterableObject","fromPromise","_computeAsync","colorDetector","_createColorHover","renderHoverParts","hoverParts","IThemeService","StandaloneColorPickerHover","StandaloneColorPickerParticipant","createColorHover","defaultColorInfo","defaultColorProvider","foundColorInfo","foundColorProvider","containsRange","foundInEditor","colorHover","updateEditorModel","colorHoverData","colorPickerModel","_updateColorPresentations","_updateEditorModel","participant","setMinimumDimensions","minimumHeight","Dimension","fragment","setColorPicker","editorUpdatedByColorPicker","textEdits","textEdit","forceMoveMarkers","additionalTextEdits","trackedRange","_setTrackedRange","_getTrackedRange","modelService","languageConfigurationService","_editorWorkerClient","EditorWorkerClient","computeDefaultDocumentColors","colorFromInfo","rgb","formatRGB","formatRGBA","hsl","formatHSL","formatHSLA","hex","formatHex","formatHexA","DefaultDocumentColorProviderFeature","_modelService","_languageConfigurationService","ILanguageConfigurationService","registerEditorFeature","StandaloneColorPickerController_1","StandaloneColorPickerWidget_1","StandaloneColorPickerController","_contextKeyService","_languageFeatureService","_standaloneColorPickerWidget","_standaloneColorPickerVisible","standaloneColorPickerVisible","_standaloneColorPickerFocused","standaloneColorPickerFocused","showOrFocus","StandaloneColorPickerWidget","insertColor","updateEditor","_position","_body","_colorHover","_selectionSetInEditor","_onResult","onResult","_standaloneColorPickerParticipant","_getViewModel","getPrimaryCursorState","modelState","editorSelection","focusTracker","onDidBlur","onDidFocus","onMouseMove","_render","_start","zIndex","positionPreference","above","secondaryPosition","positionAffinity","computeAsyncResult","StandaloneColorPickerResult","colorHoverResult","createDocumentFragment","colorPickerWidget","statusBar","EditorHoverStatusBar","onContentsChanged","maxHeight","getLayoutInfo","maxWidth","tabIndex","colorPickerBody","saturationBoxWidth","clientWidth","widthOfOriginalColorBox","colorPickerHeader","ShowOrFocusStandaloneColorPicker","EditorAction2","localize2","mnemonicTitle","menu","HideStandaloneColorPicker","isEqualTo","InsertColorWithStandaloneColorPicker","registerAction2","BlockCommentCommand","insertSpace","_insertSpace","_usedEndToken","_haystackHasNeedleAtOffset","haystack","needle","offset","needleLength","codeA","charCodeAt","codeB","_createOperationsForBlockComment","startToken","endToken","startLineText","endLineText","ops","startTokenIndex","lastIndexOf","endTokenIndex","substring","startLineAfterStartToken","endLineBeforeEndToken","_createRemoveBlockCommentOperations","_createAddBlockCommentOperations","op","addTrackedEditOperation","res","EditOperation","replace","insert","tokenization","tokenizeIfCheap","getLanguageIdAtPosition","config","getLanguageConfiguration","comments","blockCommentStartToken","blockCommentEndToken","inverseEditOperations","getInverseEditOperations","startTokenEditOperation","endTokenEditOperation","srcRange","deltaColumn","LineCommentCommand","indentSize","ignoreEmptyLines","ignoreFirstLine","_indentSize","_type","_selectionId","_deltaColumn","_moveEndPositionDown","_ignoreEmptyLines","_ignoreFirstLine","_gatherPreflightCommentStrings","commentStr","lineCommentToken","ignore","commentStrOffset","commentStrLength","_analyzeLines","shouldRemoveComments","onlyWhitespaceLines","lineData","lineContentStartOffset","strings","commentStrEndOffset","supported","_gatherPreflightData","_executeLineComments","_createRemoveLineCommentsOperations","_normalizeInsertionPoint","_createAddLineCommentsOperations","cursorPosition","positionColumn","trackSelection","_attemptRemoveBlockComment","startTokenAllowedBeforeColumn","_executeBlockComment","firstNonWhitespaceIndex","setEndPosition","getTrackedSelection","selectionStartLineNumber","selectionStartColumn","afterCommentStr","nextVisibleColumn","currentVisibleColumn","isTab","columnSize","j","lenJ","minVisibleColumn","CommentLineAction","modelOptions","commentsOptions","prev","curr","BlockCommentAction","ContextMenuController_1","ContextMenuController","_contextMenuService","_contextViewService","_menuService","_workspaceContextService","_toDispose","_contextMenuIsBeingShownCount","onContextMenu","_onContextMenu","onMouseWheel","view","getContextViewElement","srcElement","shadowRoot","hideContextView","onKeyDown","keyCode","stopPropagation","showContextMenu","_showScrollbarContextMenu","hasSelectionAtPosition","menuActions","_getMenuActions","contextMenuId","_doShowContextMenu","createMenu","getActions","addedItems","SubmenuItemAction","subActions","SubmenuAction","Separator","pop","oldHoverSetting","updateOptions","hover","posy","useShadowDOM","isIOS","domForShadowRoot","getAnchor","getActionViewItem","_keybindingFor","ActionViewItem","isMenu","customActionViewItem","getKeyBinding","wasCancelled","isStandaloneEditorWorkspace","getWorkspace","minimapOptions","lastId","createAction","checked","createEnumAction","configName","configuredValue","createRunner","updateValue","option","createSubmenuAction","renderCharacters","size","showSlider","IContextMenuService","IContextViewService","IMenuService","IWorkspaceContextService","ShowContextMenu","CursorState","other","thisLen","equalsSelection","StackElement","cursorState","scrollTop","scrollLeft","CursorUndoRedoController","_isCursorUndoRedo","_undoStack","_redoStack","onDidChangeCursorSelection","oldSelections","oldModelVersionId","modelVersionId","prevState","getScrollTop","getScrollLeft","shift","cursorUndo","_applyState","cursorRedo","stackElement","setScrollPosition","CursorUndo","CursorRedo","DiffEditorBreadcrumbsSource","_textModel","_outlineModelService","_currentModel","observableValue","documentSymbolProviderChanged","observableSignalFromEvent","documentSymbolProvider","textModelChanged","debounce","onDidChangeContent","autorunWithStore","reader","src","DisposableCancellationTokenSource","getOrCreate","getBreadcrumbItems","startRange","m","asListOfDocumentSymbols","reverseOrder","compareBy","numberComparator","IOutlineModelService","HideUnchangedRegionsFeature","setBreadcrumbsSourceFactory","textModel","DragAndDropCommand","targetPosition","copy","targetSelection","hasTriggerModifier","isMacintosh","altKey","ctrlKey","DragAndDropController","_dndDecorationIds","_onEditorMouseDown","onMouseUp","_onEditorMouseUp","onMouseDrag","_onEditorMouseDrag","onMouseDrop","_onEditorMouseDrop","onMouseDropCanceled","_onEditorMouseDropCanceled","onEditorKeyDown","onKeyUp","onEditorKeyUp","onEditorBlur","_mouseDown","_modifierPressed","_dragSelection","_removeDecoration","mouseStyle","TRIGGER_KEY_VALUE","possibleSelections","showAt","_hitContent","_hitMargin","shiftKey","primarySelection","_DECORATION_OPTIONS","outlineService","ITextModelService","reference","createModelReference","object","textEditorModel","getTopLevelSymbols","TreeElement","parent","findId","candidateId","empty","OutlineElement","OutlineGroup","OutlineModel","CancellationTokenSource","provideDocumentSymbols","info","_makeOutlineElement","_groups","newProvider","_compact","childInfo","count","Iterable","first","child","roots","bucket","_flattenDocumentSymbols","entries","overrideContainerLabel","tags","containerName","selectionRange","OutlineModelService","debounces","onModelRemoved","source","promiseCnt","promise","outlineModel","_err","onCancellationRequested","DefaultPasteProvidersFeature","changePasteTypeCommandId","pasteWidgetVisibleCtx","changePasteType","clearWidgets","pasteAs","providerId","DefaultTextPasteOrDropEditProvider","CopyPasteController_1","vscodeClipboardMime","_bulkEditService","_clipboardService","_quickInputService","addDisposableListener","handleCopy","handlePaste","_pasteProgressManager","InlineProgressManager","_postPasteWidgetManager","PostEditWidgetManager","tryShowSelector","_pasteAsActionContext","isPasteAsEnabled","_currentPasteOperation","writeResources","clipboardData","enableEmptySelectionClipboard","wasFromEmptySelection","getLineLength","toCopy","getPlainTextToCopy","defaultPastePayload","documentPasteEditProvider","prepareDocumentPaste","setCopyMetadata","dataTransfer","toVSDataTransfer","providerCopyMimeTypes","copyMimeTypes","handle","generateUuid","results","console","reverse","mime","_currentCopyOperation","dataTransferPromise","fetchCopyMetadata","toExternalVSDataTransfer","allPotentialMimeTypes","types","Mimes","uriList","allProviders","providedPasteEditKinds","providerMatchesPreference","pasteMimeTypes","matchesMimeType","stopImmediatePropagation","showPasteAsPick","doPasteInline","showPasteAsNoEditMessage","clipboardEvent","p","tokenSource","EditorStateCancellationTokenSource","mergeInDataFromCopy","supportedProviders","isSupportedPasteProvider","applyDefaultPasteHandler","triggerKind","DocumentPasteTriggerKind","Automatic","providerEdits","getPasteEdits","canShowWidget","showPasteSelector","applyEditAndShowIfNeeded","activeEditIndex","allEdits","resolveDocumentPasteEdit","additionalEdit","PasteAs","pickedEdit","selected","combinedWorkspaceEdit","createCombinedWorkspaceEdit","withProgress","location","setData","rawMetadata","getData","ClipboardEventUtils","getTextData","toMergeDataTransfer","readResources","createStringDataTransferItem","UriList","raceCancellation","provideDocumentPasteEdits","sortEditsByYieldTo","textDataTransfer","asString","payload","matches","IProgressService","SimplePasteAndDropProvider","_ranges","getEdit","insertText","handledMimeType","yieldTo","provideDocumentDropEdits","dropMimeTypes","textEntry","PathProvider","extractUriList","uriCount","scheme","Schemas","file","fsPath","RelativePathProvider","relativeUris","root","getWorkspaceFolder","relativePath","PasteHtmlProvider","_yieldTo","mimeType","htmlText","urlListEntry","strUriList","DefaultDropProvidersFeature","workspaceContextService","documentDropEditProvider","DropIntoEditorController_1","defaultProviderConfig","changeDropTypeCommandId","dropWidgetVisibleCtx","DropIntoEditorController","_configService","_treeViewsDragAndDropService","treeItemsTransfer","LocalSelectionTransfer","_dropProgressManager","_postDropWidgetManager","onDropIntoEditor","changeDropType","dragEvent","_currentOperation","ourDataTransfer","extractDataTransferData","getDropEdits","getInitialActiveEditIndex","showDropSelector","preferredProviders","configMime","desiredKindStr","desiredKind","editIndex","VSDataTransfer","hasData","DraggedTreeItemsIdentifier","prototype","treeDataTransfer","removeDragOperationTransfer","identifier","ITreeViewsDnDService","_args","ConfigurationExtensions","additionalProperties","snippet","ResourceTextEdit","SnippetParser","escape","insertAsSnippet","yieldsTo","yTo","yieldsToMap","arr","from","visited","tempStack","visit","nodes","node","warn","slice","pre","PostEditWidget_1","PostEditWidget","typeId","visibleContext","showCommand","onSelectNewEdit","_updateButtonTitle","Button","supportIcons","showSelector","baseId","pos","toAction","_visibleContext","_showCommand","_currentWidget","any","resolvedEdit","primaryRange","editTrackingDecoration","editResult","editRange","undo","newEditIndex","onDidSelectEdit","IEditorCancellationTokens","ctxCancellableOperation","_tokens","WeakMap","removeFn","invokeWithinContext","tokens","LinkedList","EditorKeybindingCancellationTokenSource","_unregister","EditorState","flags","_equals","equalsRange","validate","_listener"],"sourceRoot":""}