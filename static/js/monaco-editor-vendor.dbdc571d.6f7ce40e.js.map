{"version":3,"file":"static/js/monaco-editor-vendor.dbdc571d.6f7ce40e.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/getHover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hoverOperation.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/contentHover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/marginHover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/markerHoverParticipant.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hoverTypes.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/markdownHoverParticipant.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/browser/inPlaceReplaceCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/browser/inPlaceReplace.js","../node_modules/monaco-editor/esm/vs/editor/contrib/indentation/browser/indentUtils.js","../node_modules/monaco-editor/esm/vs/editor/contrib/indentation/browser/indentation.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport class HoverProviderResult {\n    constructor(provider, hover, ordinal) {\n        this.provider = provider;\n        this.hover = hover;\n        this.ordinal = ordinal;\n    }\n}\nfunction executeProvider(provider, ordinal, model, position, token) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const result = yield Promise.resolve(provider.provideHover(model, position, token));\n            if (result && isValid(result)) {\n                return new HoverProviderResult(provider, result, ordinal);\n            }\n        }\n        catch (err) {\n            onUnexpectedExternalError(err);\n        }\n        return undefined;\n    });\n}\nexport function getHover(registry, model, position, token) {\n    const providers = registry.ordered(model);\n    const promises = providers.map((provider, index) => executeProvider(provider, index, model, position, token));\n    return AsyncIterableObject.fromPromises(promises).coalesce();\n}\nexport function getHoverPromise(registry, model, position, token) {\n    return getHover(registry, model, position, token).map(item => item.hover).toPromise();\n}\nregisterModelAndPositionCommand('_executeHoverProvider', (accessor, model, position) => {\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    return getHoverPromise(languageFeaturesService.hoverProvider, model, position, CancellationToken.None);\n});\nfunction isValid(result) {\n    const hasRange = (typeof result.range !== 'undefined');\n    const hasHtmlContent = typeof result.contents !== 'undefined' && result.contents && result.contents.length > 0;\n    return hasRange && hasHtmlContent;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { createCancelableAsyncIterable, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nexport class HoverResult {\n    constructor(value, isComplete, hasLoadingMessage) {\n        this.value = value;\n        this.isComplete = isComplete;\n        this.hasLoadingMessage = hasLoadingMessage;\n    }\n}\n/**\n * Computing the hover is very fine tuned.\n *\n * Suppose the hover delay is 300ms (the default). Then, when resting the mouse at an anchor:\n * - at 150ms, the async computation is triggered (i.e. semantic hover)\n *   - if async results already come in, they are not rendered yet.\n * - at 300ms, the sync computation is triggered (i.e. decorations, markers)\n *   - if there are sync or async results, they are rendered.\n * - at 900ms, if the async computation hasn't finished, a \"Loading...\" result is added.\n */\nexport class HoverOperation extends Disposable {\n    constructor(_editor, _computer) {\n        super();\n        this._editor = _editor;\n        this._computer = _computer;\n        this._onResult = this._register(new Emitter());\n        this.onResult = this._onResult.event;\n        this._firstWaitScheduler = this._register(new RunOnceScheduler(() => this._triggerAsyncComputation(), 0));\n        this._secondWaitScheduler = this._register(new RunOnceScheduler(() => this._triggerSyncComputation(), 0));\n        this._loadingMessageScheduler = this._register(new RunOnceScheduler(() => this._triggerLoadingMessage(), 0));\n        this._state = 0 /* HoverOperationState.Idle */;\n        this._asyncIterable = null;\n        this._asyncIterableDone = false;\n        this._result = [];\n    }\n    dispose() {\n        if (this._asyncIterable) {\n            this._asyncIterable.cancel();\n            this._asyncIterable = null;\n        }\n        super.dispose();\n    }\n    get _hoverTime() {\n        return this._editor.getOption(57 /* EditorOption.hover */).delay;\n    }\n    get _firstWaitTime() {\n        return this._hoverTime / 2;\n    }\n    get _secondWaitTime() {\n        return this._hoverTime - this._firstWaitTime;\n    }\n    get _loadingMessageTime() {\n        return 3 * this._hoverTime;\n    }\n    _setState(state, fireResult = true) {\n        this._state = state;\n        if (fireResult) {\n            this._fireResult();\n        }\n    }\n    _triggerAsyncComputation() {\n        this._setState(2 /* HoverOperationState.SecondWait */);\n        this._secondWaitScheduler.schedule(this._secondWaitTime);\n        if (this._computer.computeAsync) {\n            this._asyncIterableDone = false;\n            this._asyncIterable = createCancelableAsyncIterable(token => this._computer.computeAsync(token));\n            (() => __awaiter(this, void 0, void 0, function* () {\n                var _a, e_1, _b, _c;\n                try {\n                    try {\n                        for (var _d = true, _e = __asyncValues(this._asyncIterable), _f; _f = yield _e.next(), _a = _f.done, !_a;) {\n                            _c = _f.value;\n                            _d = false;\n                            try {\n                                const item = _c;\n                                if (item) {\n                                    this._result.push(item);\n                                    this._fireResult();\n                                }\n                            }\n                            finally {\n                                _d = true;\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                    this._asyncIterableDone = true;\n                    if (this._state === 3 /* HoverOperationState.WaitingForAsync */ || this._state === 4 /* HoverOperationState.WaitingForAsyncShowingLoading */) {\n                        this._setState(0 /* HoverOperationState.Idle */);\n                    }\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                }\n            }))();\n        }\n        else {\n            this._asyncIterableDone = true;\n        }\n    }\n    _triggerSyncComputation() {\n        if (this._computer.computeSync) {\n            this._result = this._result.concat(this._computer.computeSync());\n        }\n        this._setState(this._asyncIterableDone ? 0 /* HoverOperationState.Idle */ : 3 /* HoverOperationState.WaitingForAsync */);\n    }\n    _triggerLoadingMessage() {\n        if (this._state === 3 /* HoverOperationState.WaitingForAsync */) {\n            this._setState(4 /* HoverOperationState.WaitingForAsyncShowingLoading */);\n        }\n    }\n    _fireResult() {\n        if (this._state === 1 /* HoverOperationState.FirstWait */ || this._state === 2 /* HoverOperationState.SecondWait */) {\n            // Do not send out results before the hover time\n            return;\n        }\n        const isComplete = (this._state === 0 /* HoverOperationState.Idle */);\n        const hasLoadingMessage = (this._state === 4 /* HoverOperationState.WaitingForAsyncShowingLoading */);\n        this._onResult.fire(new HoverResult(this._result.slice(0), isComplete, hasLoadingMessage));\n    }\n    start(mode) {\n        if (mode === 0 /* HoverStartMode.Delayed */) {\n            if (this._state === 0 /* HoverOperationState.Idle */) {\n                this._setState(1 /* HoverOperationState.FirstWait */);\n                this._firstWaitScheduler.schedule(this._firstWaitTime);\n                this._loadingMessageScheduler.schedule(this._loadingMessageTime);\n            }\n        }\n        else {\n            switch (this._state) {\n                case 0 /* HoverOperationState.Idle */:\n                    this._triggerAsyncComputation();\n                    this._secondWaitScheduler.cancel();\n                    this._triggerSyncComputation();\n                    break;\n                case 2 /* HoverOperationState.SecondWait */:\n                    this._secondWaitScheduler.cancel();\n                    this._triggerSyncComputation();\n                    break;\n            }\n        }\n    }\n    cancel() {\n        this._firstWaitScheduler.cancel();\n        this._secondWaitScheduler.cancel();\n        this._loadingMessageScheduler.cancel();\n        if (this._asyncIterable) {\n            this._asyncIterable.cancel();\n            this._asyncIterable = null;\n        }\n        this._result = [];\n        this._setState(0 /* HoverOperationState.Idle */, false);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { HoverAction, HoverWidget } from '../../../../base/browser/ui/hover/hoverWidget.js';\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { TokenizationRegistry } from '../../../common/languages.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { HoverParticipantRegistry, HoverRangeAnchor } from './hoverTypes.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { Context as SuggestContext } from '../../suggest/browser/suggest.js';\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nconst $ = dom.$;\nlet ContentHoverController = class ContentHoverController extends Disposable {\n    constructor(_editor, _instantiationService, _keybindingService) {\n        super();\n        this._editor = _editor;\n        this._instantiationService = _instantiationService;\n        this._keybindingService = _keybindingService;\n        this._widget = this._register(this._instantiationService.createInstance(ContentHoverWidget, this._editor));\n        this._currentResult = null;\n        // Instantiate participants and sort them by `hoverOrdinal` which is relevant for rendering order.\n        this._participants = [];\n        for (const participant of HoverParticipantRegistry.getAll()) {\n            this._participants.push(this._instantiationService.createInstance(participant, this._editor));\n        }\n        this._participants.sort((p1, p2) => p1.hoverOrdinal - p2.hoverOrdinal);\n        this._computer = new ContentHoverComputer(this._editor, this._participants);\n        this._hoverOperation = this._register(new HoverOperation(this._editor, this._computer));\n        this._register(this._hoverOperation.onResult((result) => {\n            if (!this._computer.anchor) {\n                // invalid state, ignore result\n                return;\n            }\n            const messages = (result.hasLoadingMessage ? this._addLoadingMessage(result.value) : result.value);\n            this._withResult(new HoverResult(this._computer.anchor, messages, result.isComplete));\n        }));\n        this._register(dom.addStandardDisposableListener(this._widget.getDomNode(), 'keydown', (e) => {\n            if (e.equals(9 /* KeyCode.Escape */)) {\n                this.hide();\n            }\n        }));\n        this._register(TokenizationRegistry.onDidChange(() => {\n            if (this._widget.position && this._currentResult) {\n                this._widget.clear();\n                this._setCurrentResult(this._currentResult); // render again\n            }\n        }));\n    }\n    /**\n     * Returns true if the hover shows now or will show.\n     */\n    maybeShowAt(mouseEvent) {\n        const anchorCandidates = [];\n        for (const participant of this._participants) {\n            if (participant.suggestHoverAnchor) {\n                const anchor = participant.suggestHoverAnchor(mouseEvent);\n                if (anchor) {\n                    anchorCandidates.push(anchor);\n                }\n            }\n        }\n        const target = mouseEvent.target;\n        if (target.type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n            anchorCandidates.push(new HoverRangeAnchor(0, target.range, mouseEvent.event.posx, mouseEvent.event.posy));\n        }\n        if (target.type === 7 /* MouseTargetType.CONTENT_EMPTY */) {\n            const epsilon = this._editor.getOption(47 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth / 2;\n            if (!target.detail.isAfterLines && typeof target.detail.horizontalDistanceToText === 'number' && target.detail.horizontalDistanceToText < epsilon) {\n                // Let hover kick in even when the mouse is technically in the empty area after a line, given the distance is small enough\n                anchorCandidates.push(new HoverRangeAnchor(0, target.range, mouseEvent.event.posx, mouseEvent.event.posy));\n            }\n        }\n        if (anchorCandidates.length === 0) {\n            return this._startShowingOrUpdateHover(null, 0 /* HoverStartMode.Delayed */, 0 /* HoverStartSource.Mouse */, false, mouseEvent);\n        }\n        anchorCandidates.sort((a, b) => b.priority - a.priority);\n        return this._startShowingOrUpdateHover(anchorCandidates[0], 0 /* HoverStartMode.Delayed */, 0 /* HoverStartSource.Mouse */, false, mouseEvent);\n    }\n    startShowingAtRange(range, mode, source, focus) {\n        this._startShowingOrUpdateHover(new HoverRangeAnchor(0, range, undefined, undefined), mode, source, focus, null);\n    }\n    /**\n     * Returns true if the hover shows now or will show.\n     */\n    _startShowingOrUpdateHover(anchor, mode, source, focus, mouseEvent) {\n        if (!this._widget.position || !this._currentResult) {\n            // The hover is not visible\n            if (anchor) {\n                this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n                return true;\n            }\n            return false;\n        }\n        // The hover is currently visible\n        const hoverIsSticky = this._editor.getOption(57 /* EditorOption.hover */).sticky;\n        const isGettingCloser = (hoverIsSticky && mouseEvent && this._widget.isMouseGettingCloser(mouseEvent.event.posx, mouseEvent.event.posy));\n        if (isGettingCloser) {\n            // The mouse is getting closer to the hover, so we will keep the hover untouched\n            // But we will kick off a hover update at the new anchor, insisting on keeping the hover visible.\n            if (anchor) {\n                this._startHoverOperationIfNecessary(anchor, mode, source, focus, true);\n            }\n            return true;\n        }\n        if (!anchor) {\n            this._setCurrentResult(null);\n            return false;\n        }\n        if (anchor && this._currentResult.anchor.equals(anchor)) {\n            // The widget is currently showing results for the exact same anchor, so no update is needed\n            return true;\n        }\n        if (!anchor.canAdoptVisibleHover(this._currentResult.anchor, this._widget.position)) {\n            // The new anchor is not compatible with the previous anchor\n            this._setCurrentResult(null);\n            this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n            return true;\n        }\n        // We aren't getting any closer to the hover, so we will filter existing results\n        // and keep those which also apply to the new anchor.\n        this._setCurrentResult(this._currentResult.filter(anchor));\n        this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n        return true;\n    }\n    _startHoverOperationIfNecessary(anchor, mode, source, focus, insistOnKeepingHoverVisible) {\n        if (this._computer.anchor && this._computer.anchor.equals(anchor)) {\n            // We have to start a hover operation at the exact same anchor as before, so no work is needed\n            return;\n        }\n        this._hoverOperation.cancel();\n        this._computer.anchor = anchor;\n        this._computer.shouldFocus = focus;\n        this._computer.source = source;\n        this._computer.insistOnKeepingHoverVisible = insistOnKeepingHoverVisible;\n        this._hoverOperation.start(mode);\n    }\n    _setCurrentResult(hoverResult) {\n        if (this._currentResult === hoverResult) {\n            // avoid updating the DOM to avoid resetting the user selection\n            return;\n        }\n        if (hoverResult && hoverResult.messages.length === 0) {\n            hoverResult = null;\n        }\n        this._currentResult = hoverResult;\n        if (this._currentResult) {\n            this._renderMessages(this._currentResult.anchor, this._currentResult.messages);\n        }\n        else {\n            this._widget.hide();\n        }\n    }\n    hide() {\n        this._computer.anchor = null;\n        this._hoverOperation.cancel();\n        this._setCurrentResult(null);\n    }\n    isColorPickerVisible() {\n        return this._widget.isColorPickerVisible;\n    }\n    isVisibleFromKeyboard() {\n        return this._widget.isVisibleFromKeyboard;\n    }\n    containsNode(node) {\n        return this._widget.getDomNode().contains(node);\n    }\n    _addLoadingMessage(result) {\n        if (this._computer.anchor) {\n            for (const participant of this._participants) {\n                if (participant.createLoadingMessage) {\n                    const loadingMessage = participant.createLoadingMessage(this._computer.anchor);\n                    if (loadingMessage) {\n                        return result.slice(0).concat([loadingMessage]);\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    _withResult(hoverResult) {\n        if (this._widget.position && this._currentResult && this._currentResult.isComplete) {\n            // The hover is visible with a previous complete result.\n            if (!hoverResult.isComplete) {\n                // Instead of rendering the new partial result, we wait for the result to be complete.\n                return;\n            }\n            if (this._computer.insistOnKeepingHoverVisible && hoverResult.messages.length === 0) {\n                // The hover would now hide normally, so we'll keep the previous messages\n                return;\n            }\n        }\n        this._setCurrentResult(hoverResult);\n    }\n    _renderMessages(anchor, messages) {\n        const { showAtPosition, showAtSecondaryPosition, highlightRange } = ContentHoverController.computeHoverRanges(this._editor, anchor.range, messages);\n        const disposables = new DisposableStore();\n        const statusBar = disposables.add(new EditorHoverStatusBar(this._keybindingService));\n        const fragment = document.createDocumentFragment();\n        let colorPicker = null;\n        const context = {\n            fragment,\n            statusBar,\n            setColorPicker: (widget) => colorPicker = widget,\n            onContentsChanged: () => this._widget.onContentsChanged(),\n            hide: () => this.hide()\n        };\n        for (const participant of this._participants) {\n            const hoverParts = messages.filter(msg => msg.owner === participant);\n            if (hoverParts.length > 0) {\n                disposables.add(participant.renderHoverParts(context, hoverParts));\n            }\n        }\n        const isBeforeContent = messages.some(m => m.isBeforeContent);\n        if (statusBar.hasContent) {\n            fragment.appendChild(statusBar.hoverElement);\n        }\n        if (fragment.hasChildNodes()) {\n            if (highlightRange) {\n                const highlightDecoration = this._editor.createDecorationsCollection();\n                highlightDecoration.set([{\n                        range: highlightRange,\n                        options: ContentHoverController._DECORATION_OPTIONS\n                    }]);\n                disposables.add(toDisposable(() => {\n                    highlightDecoration.clear();\n                }));\n            }\n            this._widget.showAt(fragment, new ContentHoverVisibleData(colorPicker, showAtPosition, showAtSecondaryPosition, this._editor.getOption(57 /* EditorOption.hover */).above, this._computer.shouldFocus, this._computer.source, isBeforeContent, anchor.initialMousePosX, anchor.initialMousePosY, disposables));\n        }\n        else {\n            disposables.dispose();\n        }\n    }\n    static computeHoverRanges(editor, anchorRange, messages) {\n        let startColumnBoundary = 1;\n        if (editor.hasModel()) {\n            // Ensure the range is on the current view line\n            const viewModel = editor._getViewModel();\n            const coordinatesConverter = viewModel.coordinatesConverter;\n            const anchorViewRange = coordinatesConverter.convertModelRangeToViewRange(anchorRange);\n            const anchorViewRangeStart = new Position(anchorViewRange.startLineNumber, viewModel.getLineMinColumn(anchorViewRange.startLineNumber));\n            startColumnBoundary = coordinatesConverter.convertViewPositionToModelPosition(anchorViewRangeStart).column;\n        }\n        // The anchor range is always on a single line\n        const anchorLineNumber = anchorRange.startLineNumber;\n        let renderStartColumn = anchorRange.startColumn;\n        let highlightRange = messages[0].range;\n        let forceShowAtRange = null;\n        for (const msg of messages) {\n            highlightRange = Range.plusRange(highlightRange, msg.range);\n            if (msg.range.startLineNumber === anchorLineNumber && msg.range.endLineNumber === anchorLineNumber) {\n                // this message has a range that is completely sitting on the line of the anchor\n                renderStartColumn = Math.max(Math.min(renderStartColumn, msg.range.startColumn), startColumnBoundary);\n            }\n            if (msg.forceShowAtRange) {\n                forceShowAtRange = msg.range;\n            }\n        }\n        return {\n            showAtPosition: forceShowAtRange ? forceShowAtRange.getStartPosition() : new Position(anchorLineNumber, anchorRange.startColumn),\n            showAtSecondaryPosition: forceShowAtRange ? forceShowAtRange.getStartPosition() : new Position(anchorLineNumber, renderStartColumn),\n            highlightRange\n        };\n    }\n};\nContentHoverController._DECORATION_OPTIONS = ModelDecorationOptions.register({\n    description: 'content-hover-highlight',\n    className: 'hoverHighlight'\n});\nContentHoverController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IKeybindingService)\n], ContentHoverController);\nexport { ContentHoverController };\nclass HoverResult {\n    constructor(anchor, messages, isComplete) {\n        this.anchor = anchor;\n        this.messages = messages;\n        this.isComplete = isComplete;\n    }\n    filter(anchor) {\n        const filteredMessages = this.messages.filter((m) => m.isValidForHoverAnchor(anchor));\n        if (filteredMessages.length === this.messages.length) {\n            return this;\n        }\n        return new FilteredHoverResult(this, this.anchor, filteredMessages, this.isComplete);\n    }\n}\nclass FilteredHoverResult extends HoverResult {\n    constructor(original, anchor, messages, isComplete) {\n        super(anchor, messages, isComplete);\n        this.original = original;\n    }\n    filter(anchor) {\n        return this.original.filter(anchor);\n    }\n}\nclass ContentHoverVisibleData {\n    constructor(colorPicker, showAtPosition, showAtSecondaryPosition, preferAbove, stoleFocus, source, isBeforeContent, initialMousePosX, initialMousePosY, disposables) {\n        this.colorPicker = colorPicker;\n        this.showAtPosition = showAtPosition;\n        this.showAtSecondaryPosition = showAtSecondaryPosition;\n        this.preferAbove = preferAbove;\n        this.stoleFocus = stoleFocus;\n        this.source = source;\n        this.isBeforeContent = isBeforeContent;\n        this.initialMousePosX = initialMousePosX;\n        this.initialMousePosY = initialMousePosY;\n        this.disposables = disposables;\n        this.closestMouseDistance = undefined;\n    }\n}\nlet ContentHoverWidget = class ContentHoverWidget extends Disposable {\n    /**\n     * Returns `null` if the hover is not visible.\n     */\n    get position() {\n        var _a, _b;\n        return (_b = (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.showAtPosition) !== null && _b !== void 0 ? _b : null;\n    }\n    get isColorPickerVisible() {\n        var _a;\n        return Boolean((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.colorPicker);\n    }\n    get isVisibleFromKeyboard() {\n        var _a;\n        return (((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.source) === 1 /* HoverStartSource.Keyboard */);\n    }\n    constructor(_editor, _contextKeyService) {\n        super();\n        this._editor = _editor;\n        this._contextKeyService = _contextKeyService;\n        this.allowEditorOverflow = true;\n        this._hoverVisibleKey = EditorContextKeys.hoverVisible.bindTo(this._contextKeyService);\n        this._hover = this._register(new HoverWidget());\n        this._visibleData = null;\n        this._register(this._editor.onDidLayoutChange(() => this._layout()));\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(47 /* EditorOption.fontInfo */)) {\n                this._updateFont();\n            }\n        }));\n        this._setVisibleData(null);\n        this._layout();\n        this._editor.addContentWidget(this);\n    }\n    dispose() {\n        this._editor.removeContentWidget(this);\n        if (this._visibleData) {\n            this._visibleData.disposables.dispose();\n        }\n        super.dispose();\n    }\n    getId() {\n        return ContentHoverWidget.ID;\n    }\n    getDomNode() {\n        return this._hover.containerDomNode;\n    }\n    getPosition() {\n        if (!this._visibleData) {\n            return null;\n        }\n        let preferAbove = this._visibleData.preferAbove;\n        if (!preferAbove && this._contextKeyService.getContextKeyValue(SuggestContext.Visible.key)) {\n            // Prefer rendering above if the suggest widget is visible\n            preferAbove = true;\n        }\n        // :before content can align left of the text content\n        const affinity = this._visibleData.isBeforeContent ? 3 /* PositionAffinity.LeftOfInjectedText */ : undefined;\n        return {\n            position: this._visibleData.showAtPosition,\n            secondaryPosition: this._visibleData.showAtSecondaryPosition,\n            preference: (preferAbove\n                ? [1 /* ContentWidgetPositionPreference.ABOVE */, 2 /* ContentWidgetPositionPreference.BELOW */]\n                : [2 /* ContentWidgetPositionPreference.BELOW */, 1 /* ContentWidgetPositionPreference.ABOVE */]),\n            positionAffinity: affinity\n        };\n    }\n    isMouseGettingCloser(posx, posy) {\n        if (!this._visibleData) {\n            return false;\n        }\n        if (typeof this._visibleData.initialMousePosX === 'undefined' || typeof this._visibleData.initialMousePosY === 'undefined') {\n            this._visibleData.initialMousePosX = posx;\n            this._visibleData.initialMousePosY = posy;\n            return false;\n        }\n        const widgetRect = dom.getDomNodePagePosition(this.getDomNode());\n        if (typeof this._visibleData.closestMouseDistance === 'undefined') {\n            this._visibleData.closestMouseDistance = computeDistanceFromPointToRectangle(this._visibleData.initialMousePosX, this._visibleData.initialMousePosY, widgetRect.left, widgetRect.top, widgetRect.width, widgetRect.height);\n        }\n        const distance = computeDistanceFromPointToRectangle(posx, posy, widgetRect.left, widgetRect.top, widgetRect.width, widgetRect.height);\n        if (distance > this._visibleData.closestMouseDistance + 4 /* tolerance of 4 pixels */) {\n            // The mouse is getting farther away\n            return false;\n        }\n        this._visibleData.closestMouseDistance = Math.min(this._visibleData.closestMouseDistance, distance);\n        return true;\n    }\n    _setVisibleData(visibleData) {\n        if (this._visibleData) {\n            this._visibleData.disposables.dispose();\n        }\n        this._visibleData = visibleData;\n        this._hoverVisibleKey.set(!!this._visibleData);\n        this._hover.containerDomNode.classList.toggle('hidden', !this._visibleData);\n    }\n    _layout() {\n        const height = Math.max(this._editor.getLayoutInfo().height / 4, 250);\n        const { fontSize, lineHeight } = this._editor.getOption(47 /* EditorOption.fontInfo */);\n        this._hover.contentsDomNode.style.fontSize = `${fontSize}px`;\n        this._hover.contentsDomNode.style.lineHeight = `${lineHeight / fontSize}`;\n        this._hover.contentsDomNode.style.maxHeight = `${height}px`;\n        this._hover.contentsDomNode.style.maxWidth = `${Math.max(this._editor.getLayoutInfo().width * 0.66, 500)}px`;\n    }\n    _updateFont() {\n        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n        codeClasses.forEach(node => this._editor.applyFontInfo(node));\n    }\n    showAt(node, visibleData) {\n        var _a;\n        this._setVisibleData(visibleData);\n        this._hover.contentsDomNode.textContent = '';\n        this._hover.contentsDomNode.appendChild(node);\n        this._hover.contentsDomNode.style.paddingBottom = '';\n        this._updateFont();\n        this.onContentsChanged();\n        // Simply force a synchronous render on the editor\n        // such that the widget does not really render with left = '0px'\n        this._editor.render();\n        // See https://github.com/microsoft/vscode/issues/140339\n        // TODO: Doing a second layout of the hover after force rendering the editor\n        this.onContentsChanged();\n        if (visibleData.stoleFocus) {\n            this._hover.containerDomNode.focus();\n        }\n        (_a = visibleData.colorPicker) === null || _a === void 0 ? void 0 : _a.layout();\n    }\n    hide() {\n        if (this._visibleData) {\n            const stoleFocus = this._visibleData.stoleFocus;\n            this._setVisibleData(null);\n            this._editor.layoutContentWidget(this);\n            if (stoleFocus) {\n                this._editor.focus();\n            }\n        }\n    }\n    onContentsChanged() {\n        this._editor.layoutContentWidget(this);\n        this._hover.onContentsChanged();\n        const scrollDimensions = this._hover.scrollbar.getScrollDimensions();\n        const hasHorizontalScrollbar = (scrollDimensions.scrollWidth > scrollDimensions.width);\n        if (hasHorizontalScrollbar) {\n            // There is just a horizontal scrollbar\n            const extraBottomPadding = `${this._hover.scrollbar.options.horizontalScrollbarSize}px`;\n            if (this._hover.contentsDomNode.style.paddingBottom !== extraBottomPadding) {\n                this._hover.contentsDomNode.style.paddingBottom = extraBottomPadding;\n                this._editor.layoutContentWidget(this);\n                this._hover.onContentsChanged();\n            }\n        }\n    }\n    clear() {\n        this._hover.contentsDomNode.textContent = '';\n    }\n};\nContentHoverWidget.ID = 'editor.contrib.contentHoverWidget';\nContentHoverWidget = __decorate([\n    __param(1, IContextKeyService)\n], ContentHoverWidget);\nexport { ContentHoverWidget };\nlet EditorHoverStatusBar = class EditorHoverStatusBar extends Disposable {\n    get hasContent() {\n        return this._hasContent;\n    }\n    constructor(_keybindingService) {\n        super();\n        this._keybindingService = _keybindingService;\n        this._hasContent = false;\n        this.hoverElement = $('div.hover-row.status-bar');\n        this.actionsElement = dom.append(this.hoverElement, $('div.actions'));\n    }\n    addAction(actionOptions) {\n        const keybinding = this._keybindingService.lookupKeybinding(actionOptions.commandId);\n        const keybindingLabel = keybinding ? keybinding.getLabel() : null;\n        this._hasContent = true;\n        return this._register(HoverAction.render(this.actionsElement, actionOptions, keybindingLabel));\n    }\n    append(element) {\n        const result = dom.append(this.actionsElement, element);\n        this._hasContent = true;\n        return result;\n    }\n};\nEditorHoverStatusBar = __decorate([\n    __param(0, IKeybindingService)\n], EditorHoverStatusBar);\nclass ContentHoverComputer {\n    get anchor() { return this._anchor; }\n    set anchor(value) { this._anchor = value; }\n    get shouldFocus() { return this._shouldFocus; }\n    set shouldFocus(value) { this._shouldFocus = value; }\n    get source() { return this._source; }\n    set source(value) { this._source = value; }\n    get insistOnKeepingHoverVisible() { return this._insistOnKeepingHoverVisible; }\n    set insistOnKeepingHoverVisible(value) { this._insistOnKeepingHoverVisible = value; }\n    constructor(_editor, _participants) {\n        this._editor = _editor;\n        this._participants = _participants;\n        this._anchor = null;\n        this._shouldFocus = false;\n        this._source = 0 /* HoverStartSource.Mouse */;\n        this._insistOnKeepingHoverVisible = false;\n    }\n    static _getLineDecorations(editor, anchor) {\n        if (anchor.type !== 1 /* HoverAnchorType.Range */ && !anchor.supportsMarkerHover) {\n            return [];\n        }\n        const model = editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        if (lineNumber > model.getLineCount()) {\n            // invalid line\n            return [];\n        }\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        return editor.getLineDecorations(lineNumber).filter((d) => {\n            if (d.options.isWholeLine) {\n                return true;\n            }\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            if (d.options.showIfCollapsed) {\n                // Relax check around `showIfCollapsed` decorations to also include +/- 1 character\n                if (startColumn > anchor.range.startColumn + 1 || anchor.range.endColumn - 1 > endColumn) {\n                    return false;\n                }\n            }\n            else {\n                if (startColumn > anchor.range.startColumn || anchor.range.endColumn > endColumn) {\n                    return false;\n                }\n            }\n            return true;\n        });\n    }\n    computeAsync(token) {\n        const anchor = this._anchor;\n        if (!this._editor.hasModel() || !anchor) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, anchor);\n        return AsyncIterableObject.merge(this._participants.map((participant) => {\n            if (!participant.computeAsync) {\n                return AsyncIterableObject.EMPTY;\n            }\n            return participant.computeAsync(anchor, lineDecorations, token);\n        }));\n    }\n    computeSync() {\n        if (!this._editor.hasModel() || !this._anchor) {\n            return [];\n        }\n        const lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, this._anchor);\n        let result = [];\n        for (const participant of this._participants) {\n            result = result.concat(participant.computeSync(this._anchor, lineDecorations));\n        }\n        return coalesce(result);\n    }\n}\nfunction computeDistanceFromPointToRectangle(pointX, pointY, left, top, width, height) {\n    const x = (left + width / 2); // x center of rectangle\n    const y = (top + height / 2); // y center of rectangle\n    const dx = Math.max(Math.abs(pointX - x) - width / 2, 0);\n    const dy = Math.max(Math.abs(pointY - y) - height / 2, 0);\n    return Math.sqrt(dx * dx + dy * dy);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray } from '../../../../base/common/arrays.js';\nimport { isEmptyMarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { HoverWidget } from '../../../../base/browser/ui/hover/hoverWidget.js';\nconst $ = dom.$;\nclass MarginHoverWidget extends Disposable {\n    constructor(editor, languageService, openerService) {\n        super();\n        this._renderDisposeables = this._register(new DisposableStore());\n        this._editor = editor;\n        this._isVisible = false;\n        this._messages = [];\n        this._hover = this._register(new HoverWidget());\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n        this._markdownRenderer = this._register(new MarkdownRenderer({ editor: this._editor }, languageService, openerService));\n        this._computer = new MarginHoverComputer(this._editor);\n        this._hoverOperation = this._register(new HoverOperation(this._editor, this._computer));\n        this._register(this._hoverOperation.onResult((result) => {\n            this._withResult(result.value);\n        }));\n        this._register(this._editor.onDidChangeModelDecorations(() => this._onModelDecorationsChanged()));\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(47 /* EditorOption.fontInfo */)) {\n                this._updateFont();\n            }\n        }));\n        this._editor.addOverlayWidget(this);\n    }\n    dispose() {\n        this._editor.removeOverlayWidget(this);\n        super.dispose();\n    }\n    getId() {\n        return MarginHoverWidget.ID;\n    }\n    getDomNode() {\n        return this._hover.containerDomNode;\n    }\n    getPosition() {\n        return null;\n    }\n    _updateFont() {\n        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n        codeClasses.forEach(node => this._editor.applyFontInfo(node));\n    }\n    _onModelDecorationsChanged() {\n        if (this._isVisible) {\n            // The decorations have changed and the hover is visible,\n            // we need to recompute the displayed text\n            this._hoverOperation.cancel();\n            this._hoverOperation.start(0 /* HoverStartMode.Delayed */);\n        }\n    }\n    startShowingAt(lineNumber) {\n        if (this._computer.lineNumber === lineNumber) {\n            // We have to show the widget at the exact same line number as before, so no work is needed\n            return;\n        }\n        this._hoverOperation.cancel();\n        this.hide();\n        this._computer.lineNumber = lineNumber;\n        this._hoverOperation.start(0 /* HoverStartMode.Delayed */);\n    }\n    hide() {\n        this._computer.lineNumber = -1;\n        this._hoverOperation.cancel();\n        if (!this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n    }\n    _withResult(result) {\n        this._messages = result;\n        if (this._messages.length > 0) {\n            this._renderMessages(this._computer.lineNumber, this._messages);\n        }\n        else {\n            this.hide();\n        }\n    }\n    _renderMessages(lineNumber, messages) {\n        this._renderDisposeables.clear();\n        const fragment = document.createDocumentFragment();\n        for (const msg of messages) {\n            const markdownHoverElement = $('div.hover-row.markdown-hover');\n            const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n            const renderedContents = this._renderDisposeables.add(this._markdownRenderer.render(msg.value));\n            hoverContentsElement.appendChild(renderedContents.element);\n            fragment.appendChild(markdownHoverElement);\n        }\n        this._updateContents(fragment);\n        this._showAt(lineNumber);\n    }\n    _updateContents(node) {\n        this._hover.contentsDomNode.textContent = '';\n        this._hover.contentsDomNode.appendChild(node);\n        this._updateFont();\n    }\n    _showAt(lineNumber) {\n        if (!this._isVisible) {\n            this._isVisible = true;\n            this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n        }\n        const editorLayout = this._editor.getLayoutInfo();\n        const topForLineNumber = this._editor.getTopForLineNumber(lineNumber);\n        const editorScrollTop = this._editor.getScrollTop();\n        const lineHeight = this._editor.getOption(63 /* EditorOption.lineHeight */);\n        const nodeHeight = this._hover.containerDomNode.clientHeight;\n        const top = topForLineNumber - editorScrollTop - ((nodeHeight - lineHeight) / 2);\n        this._hover.containerDomNode.style.left = `${editorLayout.glyphMarginLeft + editorLayout.glyphMarginWidth}px`;\n        this._hover.containerDomNode.style.top = `${Math.max(Math.round(top), 0)}px`;\n    }\n}\nMarginHoverWidget.ID = 'editor.contrib.modesGlyphHoverWidget';\nexport { MarginHoverWidget };\nclass MarginHoverComputer {\n    get lineNumber() {\n        return this._lineNumber;\n    }\n    set lineNumber(value) {\n        this._lineNumber = value;\n    }\n    constructor(_editor) {\n        this._editor = _editor;\n        this._lineNumber = -1;\n    }\n    computeSync() {\n        const toHoverMessage = (contents) => {\n            return {\n                value: contents\n            };\n        };\n        const lineDecorations = this._editor.getLineDecorations(this._lineNumber);\n        const result = [];\n        if (!lineDecorations) {\n            return result;\n        }\n        for (const d of lineDecorations) {\n            if (!d.options.glyphMarginClassName) {\n                continue;\n            }\n            const hoverMessage = d.options.glyphMarginHoverMessage;\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n                continue;\n            }\n            result.push(...asArray(hoverMessage).map(toHoverMessage));\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, disposableTimeout } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { basename } from '../../../../base/common/resources.js';\nimport { Range } from '../../../common/core/range.js';\nimport { IMarkerDecorationsService } from '../../../common/services/markerDecorations.js';\nimport { getCodeActions } from '../../codeAction/browser/codeAction.js';\nimport { QuickFixAction, CodeActionController } from '../../codeAction/browser/codeActionCommands.js';\nimport { CodeActionKind, CodeActionTriggerSource } from '../../codeAction/common/types.js';\nimport { MarkerController, NextMarkerAction } from '../../gotoError/browser/gotoError.js';\nimport * as nls from '../../../../nls.js';\nimport { IMarkerData, MarkerSeverity } from '../../../../platform/markers/common/markers.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { Progress } from '../../../../platform/progress/common/progress.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nconst $ = dom.$;\nexport class MarkerHover {\n    constructor(owner, range, marker) {\n        this.owner = owner;\n        this.range = range;\n        this.marker = marker;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n}\nconst markerCodeActionTrigger = {\n    type: 1 /* CodeActionTriggerType.Invoke */,\n    filter: { include: CodeActionKind.QuickFix },\n    triggerAction: CodeActionTriggerSource.QuickFixHover\n};\nlet MarkerHoverParticipant = class MarkerHoverParticipant {\n    constructor(_editor, _markerDecorationsService, _openerService, _languageFeaturesService) {\n        this._editor = _editor;\n        this._markerDecorationsService = _markerDecorationsService;\n        this._openerService = _openerService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this.hoverOrdinal = 5;\n        this.recentMarkerCodeActionsInfo = undefined;\n    }\n    computeSync(anchor, lineDecorations) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */ && !anchor.supportsMarkerHover) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        const result = [];\n        for (const d of lineDecorations) {\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            const marker = this._markerDecorationsService.getMarker(model.uri, d);\n            if (!marker) {\n                continue;\n            }\n            const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\n            result.push(new MarkerHover(this, range, marker));\n        }\n        return result;\n    }\n    renderHoverParts(context, hoverParts) {\n        if (!hoverParts.length) {\n            return Disposable.None;\n        }\n        const disposables = new DisposableStore();\n        hoverParts.forEach(msg => context.fragment.appendChild(this.renderMarkerHover(msg, disposables)));\n        const markerHoverForStatusbar = hoverParts.length === 1 ? hoverParts[0] : hoverParts.sort((a, b) => MarkerSeverity.compare(a.marker.severity, b.marker.severity))[0];\n        this.renderMarkerStatusbar(context, markerHoverForStatusbar, disposables);\n        return disposables;\n    }\n    renderMarkerHover(markerHover, disposables) {\n        const hoverElement = $('div.hover-row');\n        const markerElement = dom.append(hoverElement, $('div.marker.hover-contents'));\n        const { source, message, code, relatedInformation } = markerHover.marker;\n        this._editor.applyFontInfo(markerElement);\n        const messageElement = dom.append(markerElement, $('span'));\n        messageElement.style.whiteSpace = 'pre-wrap';\n        messageElement.innerText = message;\n        if (source || code) {\n            // Code has link\n            if (code && typeof code !== 'string') {\n                const sourceAndCodeElement = $('span');\n                if (source) {\n                    const sourceElement = dom.append(sourceAndCodeElement, $('span'));\n                    sourceElement.innerText = source;\n                }\n                const codeLink = dom.append(sourceAndCodeElement, $('a.code-link'));\n                codeLink.setAttribute('href', code.target.toString());\n                disposables.add(dom.addDisposableListener(codeLink, 'click', (e) => {\n                    this._openerService.open(code.target, { allowCommands: true });\n                    e.preventDefault();\n                    e.stopPropagation();\n                }));\n                const codeElement = dom.append(codeLink, $('span'));\n                codeElement.innerText = code.value;\n                const detailsElement = dom.append(markerElement, sourceAndCodeElement);\n                detailsElement.style.opacity = '0.6';\n                detailsElement.style.paddingLeft = '6px';\n            }\n            else {\n                const detailsElement = dom.append(markerElement, $('span'));\n                detailsElement.style.opacity = '0.6';\n                detailsElement.style.paddingLeft = '6px';\n                detailsElement.innerText = source && code ? `${source}(${code})` : source ? source : `(${code})`;\n            }\n        }\n        if (isNonEmptyArray(relatedInformation)) {\n            for (const { message, resource, startLineNumber, startColumn } of relatedInformation) {\n                const relatedInfoContainer = dom.append(markerElement, $('div'));\n                relatedInfoContainer.style.marginTop = '8px';\n                const a = dom.append(relatedInfoContainer, $('a'));\n                a.innerText = `${basename(resource)}(${startLineNumber}, ${startColumn}): `;\n                a.style.cursor = 'pointer';\n                disposables.add(dom.addDisposableListener(a, 'click', (e) => {\n                    e.stopPropagation();\n                    e.preventDefault();\n                    if (this._openerService) {\n                        this._openerService.open(resource, {\n                            fromUserGesture: true,\n                            editorOptions: { selection: { startLineNumber, startColumn } }\n                        }).catch(onUnexpectedError);\n                    }\n                }));\n                const messageElement = dom.append(relatedInfoContainer, $('span'));\n                messageElement.innerText = message;\n                this._editor.applyFontInfo(messageElement);\n            }\n        }\n        return hoverElement;\n    }\n    renderMarkerStatusbar(context, markerHover, disposables) {\n        if (markerHover.marker.severity === MarkerSeverity.Error || markerHover.marker.severity === MarkerSeverity.Warning || markerHover.marker.severity === MarkerSeverity.Info) {\n            context.statusBar.addAction({\n                label: nls.localize('view problem', \"View Problem\"),\n                commandId: NextMarkerAction.ID,\n                run: () => {\n                    var _a;\n                    context.hide();\n                    (_a = MarkerController.get(this._editor)) === null || _a === void 0 ? void 0 : _a.showAtMarker(markerHover.marker);\n                    this._editor.focus();\n                }\n            });\n        }\n        if (!this._editor.getOption(86 /* EditorOption.readOnly */)) {\n            const quickfixPlaceholderElement = context.statusBar.append($('div'));\n            if (this.recentMarkerCodeActionsInfo) {\n                if (IMarkerData.makeKey(this.recentMarkerCodeActionsInfo.marker) === IMarkerData.makeKey(markerHover.marker)) {\n                    if (!this.recentMarkerCodeActionsInfo.hasCodeActions) {\n                        quickfixPlaceholderElement.textContent = nls.localize('noQuickFixes', \"No quick fixes available\");\n                    }\n                }\n                else {\n                    this.recentMarkerCodeActionsInfo = undefined;\n                }\n            }\n            const updatePlaceholderDisposable = this.recentMarkerCodeActionsInfo && !this.recentMarkerCodeActionsInfo.hasCodeActions ? Disposable.None : disposables.add(disposableTimeout(() => quickfixPlaceholderElement.textContent = nls.localize('checkingForQuickFixes', \"Checking for quick fixes...\"), 200));\n            if (!quickfixPlaceholderElement.textContent) {\n                // Have some content in here to avoid flickering\n                quickfixPlaceholderElement.textContent = String.fromCharCode(0xA0); // &nbsp;\n            }\n            const codeActionsPromise = this.getCodeActions(markerHover.marker);\n            disposables.add(toDisposable(() => codeActionsPromise.cancel()));\n            codeActionsPromise.then(actions => {\n                updatePlaceholderDisposable.dispose();\n                this.recentMarkerCodeActionsInfo = { marker: markerHover.marker, hasCodeActions: actions.validActions.length > 0 };\n                if (!this.recentMarkerCodeActionsInfo.hasCodeActions) {\n                    actions.dispose();\n                    quickfixPlaceholderElement.textContent = nls.localize('noQuickFixes', \"No quick fixes available\");\n                    return;\n                }\n                quickfixPlaceholderElement.style.display = 'none';\n                let showing = false;\n                disposables.add(toDisposable(() => {\n                    if (!showing) {\n                        actions.dispose();\n                    }\n                }));\n                context.statusBar.addAction({\n                    label: nls.localize('quick fixes', \"Quick Fix...\"),\n                    commandId: QuickFixAction.Id,\n                    run: (target) => {\n                        showing = true;\n                        const controller = CodeActionController.get(this._editor);\n                        const elementPosition = dom.getDomNodePagePosition(target);\n                        // Hide the hover pre-emptively, otherwise the editor can close the code actions\n                        // context menu as well when using keyboard navigation\n                        context.hide();\n                        controller === null || controller === void 0 ? void 0 : controller.showCodeActions(markerCodeActionTrigger, actions, {\n                            x: elementPosition.left + 6,\n                            y: elementPosition.top + elementPosition.height + 6,\n                            width: elementPosition.width,\n                            height: elementPosition.height\n                        });\n                    }\n                });\n            }, onUnexpectedError);\n        }\n    }\n    getCodeActions(marker) {\n        return createCancelablePromise(cancellationToken => {\n            return getCodeActions(this._languageFeaturesService.codeActionProvider, this._editor.getModel(), new Range(marker.startLineNumber, marker.startColumn, marker.endLineNumber, marker.endColumn), markerCodeActionTrigger, Progress.None, cancellationToken);\n        });\n    }\n};\nMarkerHoverParticipant = __decorate([\n    __param(1, IMarkerDecorationsService),\n    __param(2, IOpenerService),\n    __param(3, ILanguageFeaturesService)\n], MarkerHoverParticipant);\nexport { MarkerHoverParticipant };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { GotoDefinitionAtPositionEditorContribution } from '../../gotoSymbol/browser/link/goToDefinitionAtPosition.js';\nimport { ContentHoverWidget, ContentHoverController } from './contentHover.js';\nimport { MarginHoverWidget } from './marginHover.js';\nimport * as nls from '../../../../nls.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { editorHoverBorder } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { HoverParticipantRegistry } from './hoverTypes.js';\nimport { MarkdownHoverParticipant } from './markdownHoverParticipant.js';\nimport { MarkerHoverParticipant } from './markerHoverParticipant.js';\nimport './hover.css';\nimport { InlineSuggestionHintsContentWidget } from '../../inlineCompletions/browser/inlineSuggestionHintsWidget.js';\nlet ModesHoverController = class ModesHoverController {\n    static get(editor) {\n        return editor.getContribution(ModesHoverController.ID);\n    }\n    constructor(_editor, _instantiationService, _openerService, _languageService, _contextKeyService) {\n        this._editor = _editor;\n        this._instantiationService = _instantiationService;\n        this._openerService = _openerService;\n        this._languageService = _languageService;\n        this._toUnhook = new DisposableStore();\n        this._isMouseDown = false;\n        this._hoverClicked = false;\n        this._contentWidget = null;\n        this._glyphWidget = null;\n        this._hookEvents();\n        this._didChangeConfigurationHandler = this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(57 /* EditorOption.hover */)) {\n                this._unhookEvents();\n                this._hookEvents();\n            }\n        });\n    }\n    _hookEvents() {\n        const hideWidgetsEventHandler = () => this._hideWidgets();\n        const hoverOpts = this._editor.getOption(57 /* EditorOption.hover */);\n        this._isHoverEnabled = hoverOpts.enabled;\n        this._isHoverSticky = hoverOpts.sticky;\n        if (this._isHoverEnabled) {\n            this._toUnhook.add(this._editor.onMouseDown((e) => this._onEditorMouseDown(e)));\n            this._toUnhook.add(this._editor.onMouseUp((e) => this._onEditorMouseUp(e)));\n            this._toUnhook.add(this._editor.onMouseMove((e) => this._onEditorMouseMove(e)));\n            this._toUnhook.add(this._editor.onKeyDown((e) => this._onKeyDown(e)));\n        }\n        else {\n            this._toUnhook.add(this._editor.onMouseMove((e) => this._onEditorMouseMove(e)));\n            this._toUnhook.add(this._editor.onKeyDown((e) => this._onKeyDown(e)));\n        }\n        this._toUnhook.add(this._editor.onMouseLeave((e) => this._onEditorMouseLeave(e)));\n        this._toUnhook.add(this._editor.onDidChangeModel(hideWidgetsEventHandler));\n        this._toUnhook.add(this._editor.onDidScrollChange((e) => this._onEditorScrollChanged(e)));\n    }\n    _unhookEvents() {\n        this._toUnhook.clear();\n    }\n    _onEditorScrollChanged(e) {\n        if (e.scrollTopChanged || e.scrollLeftChanged) {\n            this._hideWidgets();\n        }\n    }\n    _onEditorMouseDown(mouseEvent) {\n        this._isMouseDown = true;\n        const target = mouseEvent.target;\n        if (target.type === 9 /* MouseTargetType.CONTENT_WIDGET */ && target.detail === ContentHoverWidget.ID) {\n            this._hoverClicked = true;\n            // mouse down on top of content hover widget\n            return;\n        }\n        if (target.type === 12 /* MouseTargetType.OVERLAY_WIDGET */ && target.detail === MarginHoverWidget.ID) {\n            // mouse down on top of overlay hover widget\n            return;\n        }\n        if (target.type !== 12 /* MouseTargetType.OVERLAY_WIDGET */) {\n            this._hoverClicked = false;\n        }\n        this._hideWidgets();\n    }\n    _onEditorMouseUp(mouseEvent) {\n        this._isMouseDown = false;\n    }\n    _onEditorMouseLeave(mouseEvent) {\n        var _a;\n        const targetEm = (mouseEvent.event.browserEvent.relatedTarget);\n        if ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.containsNode(targetEm)) {\n            // when the mouse is inside hover widget\n            return;\n        }\n        this._hideWidgets();\n    }\n    _onEditorMouseMove(mouseEvent) {\n        var _a, _b, _c, _d, _e, _f;\n        const target = mouseEvent.target;\n        if (this._isMouseDown && this._hoverClicked) {\n            return;\n        }\n        if (this._isHoverSticky && target.type === 9 /* MouseTargetType.CONTENT_WIDGET */ && target.detail === ContentHoverWidget.ID) {\n            // mouse moved on top of content hover widget\n            return;\n        }\n        if (this._isHoverSticky && !((_b = (_a = mouseEvent.event.browserEvent.view) === null || _a === void 0 ? void 0 : _a.getSelection()) === null || _b === void 0 ? void 0 : _b.isCollapsed)) {\n            // selected text within content hover widget\n            return;\n        }\n        if (!this._isHoverSticky && target.type === 9 /* MouseTargetType.CONTENT_WIDGET */ && target.detail === ContentHoverWidget.ID\n            && ((_c = this._contentWidget) === null || _c === void 0 ? void 0 : _c.isColorPickerVisible())) {\n            // though the hover is not sticky, the color picker needs to.\n            return;\n        }\n        if (this._isHoverSticky && target.type === 12 /* MouseTargetType.OVERLAY_WIDGET */ && target.detail === MarginHoverWidget.ID) {\n            // mouse moved on top of overlay hover widget\n            return;\n        }\n        if (this._isHoverSticky && ((_d = this._contentWidget) === null || _d === void 0 ? void 0 : _d.isVisibleFromKeyboard())) {\n            // Sticky mode is on and the hover has been shown via keyboard\n            // so moving the mouse has no effect\n            return;\n        }\n        if (!this._isHoverEnabled) {\n            this._hideWidgets();\n            return;\n        }\n        const contentWidget = this._getOrCreateContentWidget();\n        if (contentWidget.maybeShowAt(mouseEvent)) {\n            (_e = this._glyphWidget) === null || _e === void 0 ? void 0 : _e.hide();\n            return;\n        }\n        if (target.type === 2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */ && target.position) {\n            (_f = this._contentWidget) === null || _f === void 0 ? void 0 : _f.hide();\n            if (!this._glyphWidget) {\n                this._glyphWidget = new MarginHoverWidget(this._editor, this._languageService, this._openerService);\n            }\n            this._glyphWidget.startShowingAt(target.position.lineNumber);\n            return;\n        }\n        this._hideWidgets();\n    }\n    _onKeyDown(e) {\n        if (e.keyCode !== 5 /* KeyCode.Ctrl */ && e.keyCode !== 6 /* KeyCode.Alt */ && e.keyCode !== 57 /* KeyCode.Meta */ && e.keyCode !== 4 /* KeyCode.Shift */) {\n            // Do not hide hover when a modifier key is pressed\n            this._hideWidgets();\n        }\n    }\n    _hideWidgets() {\n        var _a, _b, _c;\n        if ((this._isMouseDown && this._hoverClicked && ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isColorPickerVisible())) || InlineSuggestionHintsContentWidget.dropDownVisible) {\n            return;\n        }\n        this._hoverClicked = false;\n        (_b = this._glyphWidget) === null || _b === void 0 ? void 0 : _b.hide();\n        (_c = this._contentWidget) === null || _c === void 0 ? void 0 : _c.hide();\n    }\n    _getOrCreateContentWidget() {\n        if (!this._contentWidget) {\n            this._contentWidget = this._instantiationService.createInstance(ContentHoverController, this._editor);\n        }\n        return this._contentWidget;\n    }\n    isColorPickerVisible() {\n        var _a;\n        return ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isColorPickerVisible()) || false;\n    }\n    showContentHover(range, mode, source, focus) {\n        this._getOrCreateContentWidget().startShowingAtRange(range, mode, source, focus);\n    }\n    dispose() {\n        var _a, _b;\n        this._unhookEvents();\n        this._toUnhook.dispose();\n        this._didChangeConfigurationHandler.dispose();\n        (_a = this._glyphWidget) === null || _a === void 0 ? void 0 : _a.dispose();\n        (_b = this._contentWidget) === null || _b === void 0 ? void 0 : _b.dispose();\n    }\n};\nModesHoverController.ID = 'editor.contrib.hover';\nModesHoverController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IOpenerService),\n    __param(3, ILanguageService),\n    __param(4, IContextKeyService)\n], ModesHoverController);\nexport { ModesHoverController };\nclass ShowHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.showHover',\n            label: nls.localize({\n                key: 'showHover',\n                comment: [\n                    'Label for action that will trigger the showing of a hover in the editor.',\n                    'This allows for users to show the hover without using the mouse.'\n                ]\n            }, \"Show Hover\"),\n            alias: 'Show Hover',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const position = editor.getPosition();\n        const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n        const focus = editor.getOption(2 /* EditorOption.accessibilitySupport */) === 2 /* AccessibilitySupport.Enabled */;\n        controller.showContentHover(range, 1 /* HoverStartMode.Immediate */, 1 /* HoverStartSource.Keyboard */, focus);\n    }\n}\nclass ShowDefinitionPreviewHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.showDefinitionPreviewHover',\n            label: nls.localize({\n                key: 'showDefinitionPreviewHover',\n                comment: [\n                    'Label for action that will trigger the showing of definition preview hover in the editor.',\n                    'This allows for users to show the definition preview hover without using the mouse.'\n                ]\n            }, \"Show Definition Preview Hover\"),\n            alias: 'Show Definition Preview Hover',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const position = editor.getPosition();\n        if (!position) {\n            return;\n        }\n        const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n        const goto = GotoDefinitionAtPositionEditorContribution.get(editor);\n        if (!goto) {\n            return;\n        }\n        const promise = goto.startFindDefinitionFromCursor(position);\n        promise.then(() => {\n            controller.showContentHover(range, 1 /* HoverStartMode.Immediate */, 1 /* HoverStartSource.Keyboard */, true);\n        });\n    }\n}\nregisterEditorContribution(ModesHoverController.ID, ModesHoverController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorAction(ShowHoverAction);\nregisterEditorAction(ShowDefinitionPreviewHoverAction);\nHoverParticipantRegistry.register(MarkdownHoverParticipant);\nHoverParticipantRegistry.register(MarkerHoverParticipant);\n// theming\nregisterThemingParticipant((theme, collector) => {\n    const hoverBorder = theme.getColor(editorHoverBorder);\n    if (hoverBorder) {\n        collector.addRule(`.monaco-editor .monaco-hover .hover-row:not(:first-child):not(:empty) { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\n        collector.addRule(`.monaco-editor .monaco-hover hr { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\n        collector.addRule(`.monaco-editor .monaco-hover hr { border-bottom: 0px solid ${hoverBorder.transparent(0.5)}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class HoverRangeAnchor {\n    constructor(priority, range, initialMousePosX, initialMousePosY) {\n        this.priority = priority;\n        this.range = range;\n        this.initialMousePosX = initialMousePosX;\n        this.initialMousePosY = initialMousePosY;\n        this.type = 1 /* HoverAnchorType.Range */;\n    }\n    equals(other) {\n        return (other.type === 1 /* HoverAnchorType.Range */ && this.range.equalsRange(other.range));\n    }\n    canAdoptVisibleHover(lastAnchor, showAtPosition) {\n        return (lastAnchor.type === 1 /* HoverAnchorType.Range */ && showAtPosition.lineNumber === this.range.startLineNumber);\n    }\n}\nexport class HoverForeignElementAnchor {\n    constructor(priority, owner, range, initialMousePosX, initialMousePosY, supportsMarkerHover) {\n        this.priority = priority;\n        this.owner = owner;\n        this.range = range;\n        this.initialMousePosX = initialMousePosX;\n        this.initialMousePosY = initialMousePosY;\n        this.supportsMarkerHover = supportsMarkerHover;\n        this.type = 2 /* HoverAnchorType.ForeignElement */;\n    }\n    equals(other) {\n        return (other.type === 2 /* HoverAnchorType.ForeignElement */ && this.owner === other.owner);\n    }\n    canAdoptVisibleHover(lastAnchor, showAtPosition) {\n        return (lastAnchor.type === 2 /* HoverAnchorType.ForeignElement */ && this.owner === lastAnchor.owner);\n    }\n}\nexport const HoverParticipantRegistry = (new class HoverParticipantRegistry {\n    constructor() {\n        this._participants = [];\n    }\n    register(ctor) {\n        this._participants.push(ctor);\n    }\n    getAll() {\n        return this._participants;\n    }\n}());\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray } from '../../../../base/common/arrays.js';\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { isEmptyMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { getHover } from './getHover.js';\nimport * as nls from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nconst $ = dom.$;\nexport class MarkdownHover {\n    constructor(owner, range, contents, isBeforeContent, ordinal) {\n        this.owner = owner;\n        this.range = range;\n        this.contents = contents;\n        this.isBeforeContent = isBeforeContent;\n        this.ordinal = ordinal;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n}\nlet MarkdownHoverParticipant = class MarkdownHoverParticipant {\n    constructor(_editor, _languageService, _openerService, _configurationService, _languageFeaturesService) {\n        this._editor = _editor;\n        this._languageService = _languageService;\n        this._openerService = _openerService;\n        this._configurationService = _configurationService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this.hoverOrdinal = 2;\n    }\n    createLoadingMessage(anchor) {\n        return new MarkdownHover(this, anchor.range, [new MarkdownString().appendText(nls.localize('modesContentHover.loading', \"Loading...\"))], false, 2000);\n    }\n    computeSync(anchor, lineDecorations) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        const result = [];\n        let index = 1000;\n        const lineLength = model.getLineLength(lineNumber);\n        const languageId = model.getLanguageIdAtPosition(anchor.range.startLineNumber, anchor.range.startColumn);\n        const stopRenderingLineAfter = this._editor.getOption(111 /* EditorOption.stopRenderingLineAfter */);\n        const maxTokenizationLineLength = this._configurationService.getValue('editor.maxTokenizationLineLength', {\n            overrideIdentifier: languageId\n        });\n        let stopRenderingMessage = false;\n        if (stopRenderingLineAfter >= 0 && lineLength > stopRenderingLineAfter && anchor.range.startColumn >= stopRenderingLineAfter) {\n            stopRenderingMessage = true;\n            result.push(new MarkdownHover(this, anchor.range, [{\n                    value: nls.localize('stopped rendering', \"Rendering paused for long line for performance reasons. This can be configured via `editor.stopRenderingLineAfter`.\")\n                }], false, index++));\n        }\n        if (!stopRenderingMessage && typeof maxTokenizationLineLength === 'number' && lineLength >= maxTokenizationLineLength) {\n            result.push(new MarkdownHover(this, anchor.range, [{\n                    value: nls.localize('too many characters', \"Tokenization is skipped for long lines for performance reasons. This can be configured via `editor.maxTokenizationLineLength`.\")\n                }], false, index++));\n        }\n        let isBeforeContent = false;\n        for (const d of lineDecorations) {\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            const hoverMessage = d.options.hoverMessage;\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n                continue;\n            }\n            if (d.options.beforeContentClassName) {\n                isBeforeContent = true;\n            }\n            const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\n            result.push(new MarkdownHover(this, range, asArray(hoverMessage), isBeforeContent, index++));\n        }\n        return result;\n    }\n    computeAsync(anchor, lineDecorations, token) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const model = this._editor.getModel();\n        if (!this._languageFeaturesService.hoverProvider.has(model)) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const position = new Position(anchor.range.startLineNumber, anchor.range.startColumn);\n        return getHover(this._languageFeaturesService.hoverProvider, model, position, token)\n            .filter(item => !isEmptyMarkdownString(item.hover.contents))\n            .map(item => {\n            const rng = item.hover.range ? Range.lift(item.hover.range) : anchor.range;\n            return new MarkdownHover(this, rng, item.hover.contents, false, item.ordinal);\n        });\n    }\n    renderHoverParts(context, hoverParts) {\n        return renderMarkdownHovers(context, hoverParts, this._editor, this._languageService, this._openerService);\n    }\n};\nMarkdownHoverParticipant = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IConfigurationService),\n    __param(4, ILanguageFeaturesService)\n], MarkdownHoverParticipant);\nexport { MarkdownHoverParticipant };\nexport function renderMarkdownHovers(context, hoverParts, editor, languageService, openerService) {\n    // Sort hover parts to keep them stable since they might come in async, out-of-order\n    hoverParts.sort((a, b) => a.ordinal - b.ordinal);\n    const disposables = new DisposableStore();\n    for (const hoverPart of hoverParts) {\n        for (const contents of hoverPart.contents) {\n            if (isEmptyMarkdownString(contents)) {\n                continue;\n            }\n            const markdownHoverElement = $('div.hover-row.markdown-hover');\n            const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n            const renderer = disposables.add(new MarkdownRenderer({ editor }, languageService, openerService));\n            disposables.add(renderer.onDidRenderAsync(() => {\n                hoverContentsElement.className = 'hover-contents code-hover-contents';\n                context.onContentsChanged();\n            }));\n            const renderedContents = disposables.add(renderer.render(contents));\n            hoverContentsElement.appendChild(renderedContents.element);\n            context.fragment.appendChild(markdownHoverElement);\n        }\n    }\n    return disposables;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Selection } from '../../../common/core/selection.js';\nexport class InPlaceReplaceCommand {\n    constructor(editRange, originalSelection, text) {\n        this._editRange = editRange;\n        this._originalSelection = originalSelection;\n        this._text = text;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._editRange, this._text);\n    }\n    computeCursorState(model, helper) {\n        const inverseEditOperations = helper.getInverseEditOperations();\n        const srcRange = inverseEditOperations[0].range;\n        if (!this._originalSelection.isEmpty()) {\n            // Preserve selection and extends to typed text\n            return new Selection(srcRange.endLineNumber, srcRange.endColumn - this._text.length, srcRange.endLineNumber, srcRange.endColumn);\n        }\n        return new Selection(srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn), srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { createCancelablePromise, timeout } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { EditorState } from '../../editorState/browser/editorState.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport * as nls from '../../../../nls.js';\nimport { InPlaceReplaceCommand } from './inPlaceReplaceCommand.js';\nimport './inPlaceReplace.css';\nlet InPlaceReplaceController = class InPlaceReplaceController {\n    static get(editor) {\n        return editor.getContribution(InPlaceReplaceController.ID);\n    }\n    constructor(editor, editorWorkerService) {\n        this.editor = editor;\n        this.editorWorkerService = editorWorkerService;\n        this.decorations = this.editor.createDecorationsCollection();\n    }\n    dispose() {\n    }\n    run(source, up) {\n        var _a;\n        // cancel any pending request\n        (_a = this.currentRequest) === null || _a === void 0 ? void 0 : _a.cancel();\n        const editorSelection = this.editor.getSelection();\n        const model = this.editor.getModel();\n        if (!model || !editorSelection) {\n            return undefined;\n        }\n        let selection = editorSelection;\n        if (selection.startLineNumber !== selection.endLineNumber) {\n            // Can't accept multiline selection\n            return undefined;\n        }\n        const state = new EditorState(this.editor, 1 /* CodeEditorStateFlag.Value */ | 4 /* CodeEditorStateFlag.Position */);\n        const modelURI = model.uri;\n        if (!this.editorWorkerService.canNavigateValueSet(modelURI)) {\n            return Promise.resolve(undefined);\n        }\n        this.currentRequest = createCancelablePromise(token => this.editorWorkerService.navigateValueSet(modelURI, selection, up));\n        return this.currentRequest.then(result => {\n            var _a;\n            if (!result || !result.range || !result.value) {\n                // No proper result\n                return;\n            }\n            if (!state.validate(this.editor)) {\n                // state has changed\n                return;\n            }\n            // Selection\n            const editRange = Range.lift(result.range);\n            let highlightRange = result.range;\n            const diff = result.value.length - (selection.endColumn - selection.startColumn);\n            // highlight\n            highlightRange = {\n                startLineNumber: highlightRange.startLineNumber,\n                startColumn: highlightRange.startColumn,\n                endLineNumber: highlightRange.endLineNumber,\n                endColumn: highlightRange.startColumn + result.value.length\n            };\n            if (diff > 1) {\n                selection = new Selection(selection.startLineNumber, selection.startColumn, selection.endLineNumber, selection.endColumn + diff - 1);\n            }\n            // Insert new text\n            const command = new InPlaceReplaceCommand(editRange, selection, result.value);\n            this.editor.pushUndoStop();\n            this.editor.executeCommand(source, command);\n            this.editor.pushUndoStop();\n            // add decoration\n            this.decorations.set([{\n                    range: highlightRange,\n                    options: InPlaceReplaceController.DECORATION\n                }]);\n            // remove decoration after delay\n            (_a = this.decorationRemover) === null || _a === void 0 ? void 0 : _a.cancel();\n            this.decorationRemover = timeout(350);\n            this.decorationRemover.then(() => this.decorations.clear()).catch(onUnexpectedError);\n        }).catch(onUnexpectedError);\n    }\n};\nInPlaceReplaceController.ID = 'editor.contrib.inPlaceReplaceController';\nInPlaceReplaceController.DECORATION = ModelDecorationOptions.register({\n    description: 'in-place-replace',\n    className: 'valueSetReplacement'\n});\nInPlaceReplaceController = __decorate([\n    __param(1, IEditorWorkerService)\n], InPlaceReplaceController);\nclass InPlaceReplaceUp extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inPlaceReplace.up',\n            label: nls.localize('InPlaceReplaceAction.previous.label', \"Replace with Previous Value\"),\n            alias: 'Replace with Previous Value',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 82 /* KeyCode.Comma */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = InPlaceReplaceController.get(editor);\n        if (!controller) {\n            return Promise.resolve(undefined);\n        }\n        return controller.run(this.id, true);\n    }\n}\nclass InPlaceReplaceDown extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inPlaceReplace.down',\n            label: nls.localize('InPlaceReplaceAction.next.label', \"Replace with Next Value\"),\n            alias: 'Replace with Next Value',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 84 /* KeyCode.Period */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = InPlaceReplaceController.get(editor);\n        if (!controller) {\n            return Promise.resolve(undefined);\n        }\n        return controller.run(this.id, false);\n    }\n}\nregisterEditorContribution(InPlaceReplaceController.ID, InPlaceReplaceController, 4 /* EditorContributionInstantiation.Lazy */);\nregisterEditorAction(InPlaceReplaceUp);\nregisterEditorAction(InPlaceReplaceDown);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function getSpaceCnt(str, tabSize) {\n    let spacesCnt = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) === '\\t') {\n            spacesCnt += tabSize;\n        }\n        else {\n            spacesCnt++;\n        }\n    }\n    return spacesCnt;\n}\nexport function generateIndent(spacesCnt, tabSize, insertSpaces) {\n    spacesCnt = spacesCnt < 0 ? 0 : spacesCnt;\n    let result = '';\n    if (!insertSpaces) {\n        const tabsCnt = Math.floor(spacesCnt / tabSize);\n        spacesCnt = spacesCnt % tabSize;\n        for (let i = 0; i < tabsCnt; i++) {\n            result += '\\t';\n        }\n    }\n    for (let i = 0; i < spacesCnt; i++) {\n        result += ' ';\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ShiftCommand } from '../../../common/commands/shiftCommand.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport * as indentUtils from './indentUtils.js';\nimport * as nls from '../../../../nls.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { normalizeIndentation } from '../../../common/core/indentation.js';\nimport { getGoodIndentForLine, getIndentMetadata } from '../../../common/languages/autoIndent.js';\nexport function getReindentEditOperations(model, languageConfigurationService, startLineNumber, endLineNumber, inheritedIndent) {\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n        // Model is empty\n        return [];\n    }\n    const indentationRules = languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).indentationRules;\n    if (!indentationRules) {\n        return [];\n    }\n    endLineNumber = Math.min(endLineNumber, model.getLineCount());\n    // Skip `unIndentedLinePattern` lines\n    while (startLineNumber <= endLineNumber) {\n        if (!indentationRules.unIndentedLinePattern) {\n            break;\n        }\n        const text = model.getLineContent(startLineNumber);\n        if (!indentationRules.unIndentedLinePattern.test(text)) {\n            break;\n        }\n        startLineNumber++;\n    }\n    if (startLineNumber > endLineNumber - 1) {\n        return [];\n    }\n    const { tabSize, indentSize, insertSpaces } = model.getOptions();\n    const shiftIndent = (indentation, count) => {\n        count = count || 1;\n        return ShiftCommand.shiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);\n    };\n    const unshiftIndent = (indentation, count) => {\n        count = count || 1;\n        return ShiftCommand.unshiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);\n    };\n    const indentEdits = [];\n    // indentation being passed to lines below\n    let globalIndent;\n    // Calculate indentation for the first line\n    // If there is no passed-in indentation, we use the indentation of the first line as base.\n    const currentLineText = model.getLineContent(startLineNumber);\n    let adjustedLineContent = currentLineText;\n    if (inheritedIndent !== undefined && inheritedIndent !== null) {\n        globalIndent = inheritedIndent;\n        const oldIndentation = strings.getLeadingWhitespace(currentLineText);\n        adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);\n        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {\n            globalIndent = unshiftIndent(globalIndent);\n            adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);\n        }\n        if (currentLineText !== adjustedLineContent) {\n            indentEdits.push(EditOperation.replaceMove(new Selection(startLineNumber, 1, startLineNumber, oldIndentation.length + 1), normalizeIndentation(globalIndent, indentSize, insertSpaces)));\n        }\n    }\n    else {\n        globalIndent = strings.getLeadingWhitespace(currentLineText);\n    }\n    // idealIndentForNextLine doesn't equal globalIndent when there is a line matching `indentNextLinePattern`.\n    let idealIndentForNextLine = globalIndent;\n    if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {\n        idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n        globalIndent = shiftIndent(globalIndent);\n    }\n    else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) {\n        idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n    }\n    startLineNumber++;\n    // Calculate indentation adjustment for all following lines\n    for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n        const text = model.getLineContent(lineNumber);\n        const oldIndentation = strings.getLeadingWhitespace(text);\n        const adjustedLineContent = idealIndentForNextLine + text.substring(oldIndentation.length);\n        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {\n            idealIndentForNextLine = unshiftIndent(idealIndentForNextLine);\n            globalIndent = unshiftIndent(globalIndent);\n        }\n        if (oldIndentation !== idealIndentForNextLine) {\n            indentEdits.push(EditOperation.replaceMove(new Selection(lineNumber, 1, lineNumber, oldIndentation.length + 1), normalizeIndentation(idealIndentForNextLine, indentSize, insertSpaces)));\n        }\n        // calculate idealIndentForNextLine\n        if (indentationRules.unIndentedLinePattern && indentationRules.unIndentedLinePattern.test(text)) {\n            // In reindent phase, if the line matches `unIndentedLinePattern` we inherit indentation from above lines\n            // but don't change globalIndent and idealIndentForNextLine.\n            continue;\n        }\n        else if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {\n            globalIndent = shiftIndent(globalIndent);\n            idealIndentForNextLine = globalIndent;\n        }\n        else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) {\n            idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n        }\n        else {\n            idealIndentForNextLine = globalIndent;\n        }\n    }\n    return indentEdits;\n}\nclass IndentationToSpacesAction extends EditorAction {\n    constructor() {\n        super({\n            id: IndentationToSpacesAction.ID,\n            label: nls.localize('indentationToSpaces', \"Convert Indentation to Spaces\"),\n            alias: 'Convert Indentation to Spaces',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const modelOpts = model.getOptions();\n        const selection = editor.getSelection();\n        if (!selection) {\n            return;\n        }\n        const command = new IndentationToSpacesCommand(selection, modelOpts.tabSize);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n        model.updateOptions({\n            insertSpaces: true\n        });\n    }\n}\nIndentationToSpacesAction.ID = 'editor.action.indentationToSpaces';\nexport { IndentationToSpacesAction };\nclass IndentationToTabsAction extends EditorAction {\n    constructor() {\n        super({\n            id: IndentationToTabsAction.ID,\n            label: nls.localize('indentationToTabs', \"Convert Indentation to Tabs\"),\n            alias: 'Convert Indentation to Tabs',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const modelOpts = model.getOptions();\n        const selection = editor.getSelection();\n        if (!selection) {\n            return;\n        }\n        const command = new IndentationToTabsCommand(selection, modelOpts.tabSize);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n        model.updateOptions({\n            insertSpaces: false\n        });\n    }\n}\nIndentationToTabsAction.ID = 'editor.action.indentationToTabs';\nexport { IndentationToTabsAction };\nexport class ChangeIndentationSizeAction extends EditorAction {\n    constructor(insertSpaces, displaySizeOnly, opts) {\n        super(opts);\n        this.insertSpaces = insertSpaces;\n        this.displaySizeOnly = displaySizeOnly;\n    }\n    run(accessor, editor) {\n        const quickInputService = accessor.get(IQuickInputService);\n        const modelService = accessor.get(IModelService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const creationOpts = modelService.getCreationOptions(model.getLanguageId(), model.uri, model.isForSimpleWidget);\n        const modelOpts = model.getOptions();\n        const picks = [1, 2, 3, 4, 5, 6, 7, 8].map(n => ({\n            id: n.toString(),\n            label: n.toString(),\n            // add description for tabSize value set in the configuration\n            description: (n === creationOpts.tabSize && n === modelOpts.tabSize\n                ? nls.localize('configuredTabSize', \"Configured Tab Size\")\n                : n === creationOpts.tabSize\n                    ? nls.localize('defaultTabSize', \"Default Tab Size\")\n                    : n === modelOpts.tabSize\n                        ? nls.localize('currentTabSize', \"Current Tab Size\")\n                        : undefined)\n        }));\n        // auto focus the tabSize set for the current editor\n        const autoFocusIndex = Math.min(model.getOptions().tabSize - 1, 7);\n        setTimeout(() => {\n            quickInputService.pick(picks, { placeHolder: nls.localize({ key: 'selectTabWidth', comment: ['Tab corresponds to the tab key'] }, \"Select Tab Size for Current File\"), activeItem: picks[autoFocusIndex] }).then(pick => {\n                if (pick) {\n                    if (model && !model.isDisposed()) {\n                        const pickedVal = parseInt(pick.label, 10);\n                        if (this.displaySizeOnly) {\n                            model.updateOptions({\n                                tabSize: pickedVal\n                            });\n                        }\n                        else {\n                            model.updateOptions({\n                                tabSize: pickedVal,\n                                indentSize: pickedVal,\n                                insertSpaces: this.insertSpaces\n                            });\n                        }\n                    }\n                }\n            });\n        }, 50 /* quick input is sensitive to being opened so soon after another */);\n    }\n}\nclass IndentUsingTabs extends ChangeIndentationSizeAction {\n    constructor() {\n        super(false, false, {\n            id: IndentUsingTabs.ID,\n            label: nls.localize('indentUsingTabs', \"Indent Using Tabs\"),\n            alias: 'Indent Using Tabs',\n            precondition: undefined\n        });\n    }\n}\nIndentUsingTabs.ID = 'editor.action.indentUsingTabs';\nexport { IndentUsingTabs };\nclass IndentUsingSpaces extends ChangeIndentationSizeAction {\n    constructor() {\n        super(true, false, {\n            id: IndentUsingSpaces.ID,\n            label: nls.localize('indentUsingSpaces', \"Indent Using Spaces\"),\n            alias: 'Indent Using Spaces',\n            precondition: undefined\n        });\n    }\n}\nIndentUsingSpaces.ID = 'editor.action.indentUsingSpaces';\nexport { IndentUsingSpaces };\nclass ChangeTabDisplaySize extends ChangeIndentationSizeAction {\n    constructor() {\n        super(true, true, {\n            id: ChangeTabDisplaySize.ID,\n            label: nls.localize('changeTabDisplaySize', \"Change Tab Display Size\"),\n            alias: 'Change Tab Display Size',\n            precondition: undefined\n        });\n    }\n}\nChangeTabDisplaySize.ID = 'editor.action.changeTabDisplaySize';\nexport { ChangeTabDisplaySize };\nclass DetectIndentation extends EditorAction {\n    constructor() {\n        super({\n            id: DetectIndentation.ID,\n            label: nls.localize('detectIndentation', \"Detect Indentation from Content\"),\n            alias: 'Detect Indentation from Content',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const modelService = accessor.get(IModelService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const creationOpts = modelService.getCreationOptions(model.getLanguageId(), model.uri, model.isForSimpleWidget);\n        model.detectIndentation(creationOpts.insertSpaces, creationOpts.tabSize);\n    }\n}\nDetectIndentation.ID = 'editor.action.detectIndentation';\nexport { DetectIndentation };\nexport class ReindentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.reindentlines',\n            label: nls.localize('editor.reindentlines', \"Reindent Lines\"),\n            alias: 'Reindent Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const edits = getReindentEditOperations(model, languageConfigurationService, 1, model.getLineCount());\n        if (edits.length > 0) {\n            editor.pushUndoStop();\n            editor.executeEdits(this.id, edits);\n            editor.pushUndoStop();\n        }\n    }\n}\nexport class ReindentSelectedLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.reindentselectedlines',\n            label: nls.localize('editor.reindentselectedlines', \"Reindent Selected Lines\"),\n            alias: 'Reindent Selected Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const edits = [];\n        for (const selection of selections) {\n            let startLineNumber = selection.startLineNumber;\n            let endLineNumber = selection.endLineNumber;\n            if (startLineNumber !== endLineNumber && selection.endColumn === 1) {\n                endLineNumber--;\n            }\n            if (startLineNumber === 1) {\n                if (startLineNumber === endLineNumber) {\n                    continue;\n                }\n            }\n            else {\n                startLineNumber--;\n            }\n            const editOperations = getReindentEditOperations(model, languageConfigurationService, startLineNumber, endLineNumber);\n            edits.push(...editOperations);\n        }\n        if (edits.length > 0) {\n            editor.pushUndoStop();\n            editor.executeEdits(this.id, edits);\n            editor.pushUndoStop();\n        }\n    }\n}\nexport class AutoIndentOnPasteCommand {\n    constructor(edits, initialSelection) {\n        this._initialSelection = initialSelection;\n        this._edits = [];\n        this._selectionId = null;\n        for (const edit of edits) {\n            if (edit.range && typeof edit.text === 'string') {\n                this._edits.push(edit);\n            }\n        }\n    }\n    getEditOperations(model, builder) {\n        for (const edit of this._edits) {\n            builder.addEditOperation(Range.lift(edit.range), edit.text);\n        }\n        let selectionIsSet = false;\n        if (Array.isArray(this._edits) && this._edits.length === 1 && this._initialSelection.isEmpty()) {\n            if (this._edits[0].range.startColumn === this._initialSelection.endColumn &&\n                this._edits[0].range.startLineNumber === this._initialSelection.endLineNumber) {\n                selectionIsSet = true;\n                this._selectionId = builder.trackSelection(this._initialSelection, true);\n            }\n            else if (this._edits[0].range.endColumn === this._initialSelection.startColumn &&\n                this._edits[0].range.endLineNumber === this._initialSelection.startLineNumber) {\n                selectionIsSet = true;\n                this._selectionId = builder.trackSelection(this._initialSelection, false);\n            }\n        }\n        if (!selectionIsSet) {\n            this._selectionId = builder.trackSelection(this._initialSelection);\n        }\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this._selectionId);\n    }\n}\nlet AutoIndentOnPaste = class AutoIndentOnPaste {\n    constructor(editor, _languageConfigurationService) {\n        this.editor = editor;\n        this._languageConfigurationService = _languageConfigurationService;\n        this.callOnDispose = new DisposableStore();\n        this.callOnModel = new DisposableStore();\n        this.callOnDispose.add(editor.onDidChangeConfiguration(() => this.update()));\n        this.callOnDispose.add(editor.onDidChangeModel(() => this.update()));\n        this.callOnDispose.add(editor.onDidChangeModelLanguage(() => this.update()));\n    }\n    update() {\n        // clean up\n        this.callOnModel.clear();\n        // we are disabled\n        if (this.editor.getOption(9 /* EditorOption.autoIndent */) < 4 /* EditorAutoIndentStrategy.Full */ || this.editor.getOption(52 /* EditorOption.formatOnPaste */)) {\n            return;\n        }\n        // no model\n        if (!this.editor.hasModel()) {\n            return;\n        }\n        this.callOnModel.add(this.editor.onDidPaste(({ range }) => {\n            this.trigger(range);\n        }));\n    }\n    trigger(range) {\n        const selections = this.editor.getSelections();\n        if (selections === null || selections.length > 1) {\n            return;\n        }\n        const model = this.editor.getModel();\n        if (!model) {\n            return;\n        }\n        if (!model.tokenization.isCheapToTokenize(range.getStartPosition().lineNumber)) {\n            return;\n        }\n        const autoIndent = this.editor.getOption(9 /* EditorOption.autoIndent */);\n        const { tabSize, indentSize, insertSpaces } = model.getOptions();\n        const textEdits = [];\n        const indentConverter = {\n            shiftIndent: (indentation) => {\n                return ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            },\n            unshiftIndent: (indentation) => {\n                return ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            }\n        };\n        let startLineNumber = range.startLineNumber;\n        while (startLineNumber <= range.endLineNumber) {\n            if (this.shouldIgnoreLine(model, startLineNumber)) {\n                startLineNumber++;\n                continue;\n            }\n            break;\n        }\n        if (startLineNumber > range.endLineNumber) {\n            return;\n        }\n        let firstLineText = model.getLineContent(startLineNumber);\n        if (!/\\S/.test(firstLineText.substring(0, range.startColumn - 1))) {\n            const indentOfFirstLine = getGoodIndentForLine(autoIndent, model, model.getLanguageId(), startLineNumber, indentConverter, this._languageConfigurationService);\n            if (indentOfFirstLine !== null) {\n                const oldIndentation = strings.getLeadingWhitespace(firstLineText);\n                const newSpaceCnt = indentUtils.getSpaceCnt(indentOfFirstLine, tabSize);\n                const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                if (newSpaceCnt !== oldSpaceCnt) {\n                    const newIndent = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                    textEdits.push({\n                        range: new Range(startLineNumber, 1, startLineNumber, oldIndentation.length + 1),\n                        text: newIndent\n                    });\n                    firstLineText = newIndent + firstLineText.substr(oldIndentation.length);\n                }\n                else {\n                    const indentMetadata = getIndentMetadata(model, startLineNumber, this._languageConfigurationService);\n                    if (indentMetadata === 0 || indentMetadata === 8 /* IndentConsts.UNINDENT_MASK */) {\n                        // we paste content into a line where only contains whitespaces\n                        // after pasting, the indentation of the first line is already correct\n                        // the first line doesn't match any indentation rule\n                        // then no-op.\n                        return;\n                    }\n                }\n            }\n        }\n        const firstLineNumber = startLineNumber;\n        // ignore empty or ignored lines\n        while (startLineNumber < range.endLineNumber) {\n            if (!/\\S/.test(model.getLineContent(startLineNumber + 1))) {\n                startLineNumber++;\n                continue;\n            }\n            break;\n        }\n        if (startLineNumber !== range.endLineNumber) {\n            const virtualModel = {\n                tokenization: {\n                    getLineTokens: (lineNumber) => {\n                        return model.tokenization.getLineTokens(lineNumber);\n                    },\n                    getLanguageId: () => {\n                        return model.getLanguageId();\n                    },\n                    getLanguageIdAtPosition: (lineNumber, column) => {\n                        return model.getLanguageIdAtPosition(lineNumber, column);\n                    },\n                },\n                getLineContent: (lineNumber) => {\n                    if (lineNumber === firstLineNumber) {\n                        return firstLineText;\n                    }\n                    else {\n                        return model.getLineContent(lineNumber);\n                    }\n                }\n            };\n            const indentOfSecondLine = getGoodIndentForLine(autoIndent, virtualModel, model.getLanguageId(), startLineNumber + 1, indentConverter, this._languageConfigurationService);\n            if (indentOfSecondLine !== null) {\n                const newSpaceCntOfSecondLine = indentUtils.getSpaceCnt(indentOfSecondLine, tabSize);\n                const oldSpaceCntOfSecondLine = indentUtils.getSpaceCnt(strings.getLeadingWhitespace(model.getLineContent(startLineNumber + 1)), tabSize);\n                if (newSpaceCntOfSecondLine !== oldSpaceCntOfSecondLine) {\n                    const spaceCntOffset = newSpaceCntOfSecondLine - oldSpaceCntOfSecondLine;\n                    for (let i = startLineNumber + 1; i <= range.endLineNumber; i++) {\n                        const lineContent = model.getLineContent(i);\n                        const originalIndent = strings.getLeadingWhitespace(lineContent);\n                        const originalSpacesCnt = indentUtils.getSpaceCnt(originalIndent, tabSize);\n                        const newSpacesCnt = originalSpacesCnt + spaceCntOffset;\n                        const newIndent = indentUtils.generateIndent(newSpacesCnt, tabSize, insertSpaces);\n                        if (newIndent !== originalIndent) {\n                            textEdits.push({\n                                range: new Range(i, 1, i, originalIndent.length + 1),\n                                text: newIndent\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        if (textEdits.length > 0) {\n            this.editor.pushUndoStop();\n            const cmd = new AutoIndentOnPasteCommand(textEdits, this.editor.getSelection());\n            this.editor.executeCommand('autoIndentOnPaste', cmd);\n            this.editor.pushUndoStop();\n        }\n    }\n    shouldIgnoreLine(model, lineNumber) {\n        model.tokenization.forceTokenization(lineNumber);\n        const nonWhitespaceColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\n        if (nonWhitespaceColumn === 0) {\n            return true;\n        }\n        const tokens = model.tokenization.getLineTokens(lineNumber);\n        if (tokens.getCount() > 0) {\n            const firstNonWhitespaceTokenIndex = tokens.findTokenIndexAtOffset(nonWhitespaceColumn);\n            if (firstNonWhitespaceTokenIndex >= 0 && tokens.getStandardTokenType(firstNonWhitespaceTokenIndex) === 1 /* StandardTokenType.Comment */) {\n                return true;\n            }\n        }\n        return false;\n    }\n    dispose() {\n        this.callOnDispose.dispose();\n        this.callOnModel.dispose();\n    }\n};\nAutoIndentOnPaste.ID = 'editor.contrib.autoIndentOnPaste';\nAutoIndentOnPaste = __decorate([\n    __param(1, ILanguageConfigurationService)\n], AutoIndentOnPaste);\nexport { AutoIndentOnPaste };\nfunction getIndentationEditOperations(model, builder, tabSize, tabsToSpaces) {\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n        // Model is empty\n        return;\n    }\n    let spaces = '';\n    for (let i = 0; i < tabSize; i++) {\n        spaces += ' ';\n    }\n    const spacesRegExp = new RegExp(spaces, 'gi');\n    for (let lineNumber = 1, lineCount = model.getLineCount(); lineNumber <= lineCount; lineNumber++) {\n        let lastIndentationColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\n        if (lastIndentationColumn === 0) {\n            lastIndentationColumn = model.getLineMaxColumn(lineNumber);\n        }\n        if (lastIndentationColumn === 1) {\n            continue;\n        }\n        const originalIndentationRange = new Range(lineNumber, 1, lineNumber, lastIndentationColumn);\n        const originalIndentation = model.getValueInRange(originalIndentationRange);\n        const newIndentation = (tabsToSpaces\n            ? originalIndentation.replace(/\\t/ig, spaces)\n            : originalIndentation.replace(spacesRegExp, '\\t'));\n        builder.addEditOperation(originalIndentationRange, newIndentation);\n    }\n}\nexport class IndentationToSpacesCommand {\n    constructor(selection, tabSize) {\n        this.selection = selection;\n        this.tabSize = tabSize;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        this.selectionId = builder.trackSelection(this.selection);\n        getIndentationEditOperations(model, builder, this.tabSize, true);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n}\nexport class IndentationToTabsCommand {\n    constructor(selection, tabSize) {\n        this.selection = selection;\n        this.tabSize = tabSize;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        this.selectionId = builder.trackSelection(this.selection);\n        getIndentationEditOperations(model, builder, this.tabSize, false);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n}\nregisterEditorContribution(AutoIndentOnPaste.ID, AutoIndentOnPaste, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorAction(IndentationToSpacesAction);\nregisterEditorAction(IndentationToTabsAction);\nregisterEditorAction(IndentUsingTabs);\nregisterEditorAction(IndentUsingSpaces);\nregisterEditorAction(ChangeTabDisplaySize);\nregisterEditorAction(DetectIndentation);\nregisterEditorAction(ReindentLinesAction);\nregisterEditorAction(ReindentSelectedLinesAction);\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","HoverProviderResult","_createClass","provider","hover","ordinal","_classCallCheck","this","getHover","registry","model","position","token","promises","ordered","map","index","_regeneratorRuntime","mark","_callee","wrap","_context","prev","provideHover","sent","isValid","abrupt","t0","onUnexpectedExternalError","undefined","stop","executeProvider","AsyncIterableObject","coalesce","hasRange","range","hasHtmlContent","contents","length","registerModelAndPositionCommand","accessor","item","toPromise","getHoverPromise","get","ILanguageFeaturesService","hoverProvider","CancellationToken","__asyncValues","o","Symbol","asyncIterator","TypeError","i","m","call","__values","iterator","verb","n","v","d","settle","HoverResult","isComplete","hasLoadingMessage","HoverOperation","_Disposable","_inherits","_super","_createSuper","_editor","_computer","_this","_onResult","_register","Emitter","onResult","event","_firstWaitScheduler","RunOnceScheduler","_triggerAsyncComputation","_secondWaitScheduler","_triggerSyncComputation","_loadingMessageScheduler","_triggerLoadingMessage","_state","_asyncIterable","_asyncIterableDone","_result","key","cancel","_get","_getPrototypeOf","prototype","getOption","delay","_hoverTime","_firstWaitTime","state","fireResult","arguments","_fireResult","_this2","_setState","schedule","_secondWaitTime","computeAsync","createCancelableAsyncIterable","_a","e_1","_b","_c","_d","_e","_f","push","error","return","finish","t1","onUnexpectedError","computeSync","concat","fire","slice","mode","_loadingMessageTime","Disposable","__decorate","decorators","target","desc","c","r","Object","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","$","dom","ContentHoverController","_instantiationService","_keybindingService","_widget","createInstance","ContentHoverWidget","_currentResult","_participants","_step","_iterator","_createForOfIteratorHelper","HoverParticipantRegistry","s","participant","err","f","sort","p1","p2","hoverOrdinal","ContentHoverComputer","_hoverOperation","anchor","messages","_addLoadingMessage","_withResult","addStandardDisposableListener","getDomNode","equals","hide","TokenizationRegistry","clear","_setCurrentResult","mouseEvent","_step2","anchorCandidates","_iterator2","suggestHoverAnchor","type","HoverRangeAnchor","posx","posy","epsilon","typicalHalfwidthCharacterWidth","detail","isAfterLines","horizontalDistanceToText","_startShowingOrUpdateHover","a","b","priority","source","focus","sticky","isMouseGettingCloser","_startHoverOperationIfNecessary","canAdoptVisibleHover","filter","insistOnKeepingHoverVisible","shouldFocus","start","hoverResult","_renderMessages","isColorPickerVisible","isVisibleFromKeyboard","node","contains","_step3","_iterator3","createLoadingMessage","loadingMessage","_step4","_ContentHoverControll","computeHoverRanges","showAtPosition","showAtSecondaryPosition","highlightRange","disposables","DisposableStore","statusBar","add","EditorHoverStatusBar","fragment","document","createDocumentFragment","colorPicker","context","setColorPicker","widget","onContentsChanged","_iterator4","_loop","hoverParts","msg","owner","renderHoverParts","isBeforeContent","some","hasContent","appendChild","hoverElement","hasChildNodes","highlightDecoration","createDecorationsCollection","set","options","_DECORATION_OPTIONS","toDisposable","showAt","ContentHoverVisibleData","above","initialMousePosX","initialMousePosY","dispose","editor","anchorRange","startColumnBoundary","hasModel","viewModel","_getViewModel","coordinatesConverter","anchorViewRange","convertModelRangeToViewRange","anchorViewRangeStart","Position","startLineNumber","getLineMinColumn","convertViewPositionToModelPosition","column","_step5","anchorLineNumber","renderStartColumn","startColumn","forceShowAtRange","_iterator5","Range","endLineNumber","Math","max","min","getStartPosition","ModelDecorationOptions","description","className","IInstantiationService","IKeybindingService","filteredMessages","isValidForHoverAnchor","FilteredHoverResult","_HoverResult","_super2","original","_this3","preferAbove","stoleFocus","closestMouseDistance","_Disposable2","_super3","_contextKeyService","_this4","allowEditorOverflow","_hoverVisibleKey","EditorContextKeys","_hover","HoverWidget","_visibleData","onDidLayoutChange","_layout","onDidChangeConfiguration","hasChanged","_updateFont","_setVisibleData","addContentWidget","_assertThisInitialized","Boolean","removeContentWidget","ID","containerDomNode","getContextKeyValue","SuggestContext","affinity","secondaryPosition","preference","positionAffinity","widgetRect","getDomNodePagePosition","computeDistanceFromPointToRectangle","left","top","width","height","distance","visibleData","classList","toggle","getLayoutInfo","_this$_editor$getOpti","fontSize","lineHeight","contentsDomNode","style","maxHeight","maxWidth","_this5","Array","getElementsByClassName","forEach","applyFontInfo","textContent","paddingBottom","render","layout","layoutContentWidget","scrollDimensions","scrollbar","getScrollDimensions","scrollWidth","extraBottomPadding","horizontalScrollbarSize","IContextKeyService","_Disposable3","_super4","_this6","_hasContent","actionsElement","append","actionOptions","keybinding","lookupKeybinding","commandId","keybindingLabel","getLabel","HoverAction","element","_anchor","_shouldFocus","_source","_insistOnKeepingHoverVisible","lineDecorations","_getLineDecorations","_step6","_iterator6","supportsMarkerHover","getModel","lineNumber","getLineCount","maxColumn","getLineMaxColumn","getLineDecorations","isWholeLine","endColumn","showIfCollapsed","pointX","pointY","x","y","dx","abs","dy","sqrt","MarginHoverWidget","languageService","openerService","_renderDisposeables","_isVisible","_messages","_markdownRenderer","MarkdownRenderer","MarginHoverComputer","onDidChangeModelDecorations","_onModelDecorationsChanged","addOverlayWidget","removeOverlayWidget","markdownHoverElement","hoverContentsElement","renderedContents","_updateContents","_showAt","editorLayout","topForLineNumber","getTopForLineNumber","editorScrollTop","getScrollTop","clientHeight","glyphMarginLeft","glyphMarginWidth","round","_lineNumber","toHoverMessage","glyphMarginClassName","hoverMessage","glyphMarginHoverMessage","isEmptyMarkdownString","_toConsumableArray","asArray","MarkerHover","marker","markerCodeActionTrigger","include","CodeActionKind","triggerAction","CodeActionTriggerSource","MarkerHoverParticipant","_markerDecorationsService","_openerService","_languageFeaturesService","recentMarkerCodeActionsInfo","getMarker","uri","renderMarkerHover","markerHoverForStatusbar","MarkerSeverity","severity","renderMarkerStatusbar","markerHover","markerElement","_markerHover$marker","message","code","relatedInformation","messageElement","whiteSpace","innerText","sourceAndCodeElement","codeLink","setAttribute","toString","addDisposableListener","open","allowCommands","preventDefault","stopPropagation","detailsElement","opacity","paddingLeft","isNonEmptyArray","_step2$value","resource","relatedInfoContainer","marginTop","basename","cursor","fromUserGesture","editorOptions","selection","catch","addAction","label","nls","NextMarkerAction","run","MarkerController","showAtMarker","quickfixPlaceholderElement","IMarkerData","hasCodeActions","updatePlaceholderDisposable","disposableTimeout","String","fromCharCode","codeActionsPromise","getCodeActions","actions","validActions","display","showing","QuickFixAction","controller","CodeActionController","elementPosition","showCodeActions","createCancelablePromise","cancellationToken","codeActionProvider","Progress","IMarkerDecorationsService","IOpenerService","ModesHoverController","_languageService","_toUnhook","_isMouseDown","_hoverClicked","_contentWidget","_glyphWidget","_hookEvents","_didChangeConfigurationHandler","_unhookEvents","hoverOpts","_isHoverEnabled","enabled","_isHoverSticky","onMouseDown","_onEditorMouseDown","onMouseUp","_onEditorMouseUp","onMouseMove","_onEditorMouseMove","onKeyDown","_onKeyDown","onMouseLeave","_onEditorMouseLeave","onDidChangeModel","_hideWidgets","onDidScrollChange","_onEditorScrollChanged","scrollTopChanged","scrollLeftChanged","targetEm","browserEvent","relatedTarget","containsNode","view","getSelection","isCollapsed","_getOrCreateContentWidget","maybeShowAt","startShowingAt","keyCode","InlineSuggestionHintsContentWidget","startShowingAtRange","getContribution","ILanguageService","ShowHoverAction","_EditorAction","id","comment","alias","precondition","kbOpts","kbExpr","primary","KeyChord","weight","getPosition","showContentHover","EditorAction","ShowDefinitionPreviewHoverAction","_EditorAction2","goto","GotoDefinitionAtPositionEditorContribution","startFindDefinitionFromCursor","registerEditorContribution","registerEditorAction","MarkdownHoverParticipant","registerThemingParticipant","theme","collector","hoverBorder","getColor","editorHoverBorder","addRule","transparent","other","equalsRange","lastAnchor","HoverForeignElementAnchor","ctor","MarkdownHover","_configurationService","MarkdownString","appendText","lineLength","getLineLength","languageId","getLanguageIdAtPosition","stopRenderingLineAfter","maxTokenizationLineLength","getValue","overrideIdentifier","stopRenderingMessage","beforeContentClassName","has","rng","renderMarkdownHovers","hoverPart","renderer","onDidRenderAsync","IConfigurationService","InPlaceReplaceCommand","editRange","originalSelection","text","_editRange","_originalSelection","_text","builder","addTrackedEditOperation","helper","srcRange","getInverseEditOperations","isEmpty","Selection","positionColumn","InPlaceReplaceController","editorWorkerService","decorations","up","currentRequest","editorSelection","EditorState","modelURI","canNavigateValueSet","navigateValueSet","validate","diff","command","pushUndoStop","executeCommand","DECORATION","decorationRemover","timeout","IEditorWorkerService","InPlaceReplaceUp","InPlaceReplaceDown","getSpaceCnt","str","tabSize","spacesCnt","charAt","generateIndent","insertSpaces","tabsCnt","floor","getReindentEditOperations","languageConfigurationService","inheritedIndent","indentationRules","getLanguageConfiguration","getLanguageId","unIndentedLinePattern","getLineContent","test","globalIndent","_model$getOptions","getOptions","indentSize","shiftIndent","indentation","count","ShiftCommand","unshiftIndent","indentEdits","currentLineText","adjustedLineContent","oldIndentation","strings","substring","decreaseIndentPattern","EditOperation","normalizeIndentation","idealIndentForNextLine","increaseIndentPattern","indentNextLinePattern","IndentationToSpacesAction","modelOpts","IndentationToSpacesCommand","executeCommands","updateOptions","IndentationToTabsAction","IndentationToTabsCommand","ChangeIndentationSizeAction","_EditorAction3","displaySizeOnly","opts","quickInputService","IQuickInputService","modelService","IModelService","creationOpts","getCreationOptions","isForSimpleWidget","picks","autoFocusIndex","setTimeout","pick","placeHolder","activeItem","isDisposed","pickedVal","parseInt","IndentUsingTabs","_ChangeIndentationSiz","IndentUsingSpaces","_ChangeIndentationSiz2","_super5","ChangeTabDisplaySize","_ChangeIndentationSiz3","_super6","DetectIndentation","_EditorAction4","_super7","detectIndentation","ReindentLinesAction","_EditorAction5","_super8","ILanguageConfigurationService","edits","executeEdits","ReindentSelectedLinesAction","_EditorAction6","_super9","selections","getSelections","editOperations","AutoIndentOnPasteCommand","initialSelection","_initialSelection","_edits","_selectionId","edit","addEditOperation","selectionIsSet","isArray","trackSelection","getTrackedSelection","AutoIndentOnPaste","_languageConfigurationService","callOnDispose","callOnModel","update","onDidChangeModelLanguage","onDidPaste","_ref","trigger","tokenization","isCheapToTokenize","autoIndent","_model$getOptions2","textEdits","indentConverter","shouldIgnoreLine","firstLineText","indentOfFirstLine","getGoodIndentForLine","newSpaceCnt","indentUtils","newIndent","substr","indentMetadata","getIndentMetadata","firstLineNumber","virtualModel","getLineTokens","indentOfSecondLine","newSpaceCntOfSecondLine","oldSpaceCntOfSecondLine","spaceCntOffset","lineContent","originalIndent","newSpacesCnt","cmd","forceTokenization","nonWhitespaceColumn","getLineFirstNonWhitespaceColumn","tokens","getCount","firstNonWhitespaceTokenIndex","findTokenIndexAtOffset","getStandardTokenType","getIndentationEditOperations","tabsToSpaces","spaces","spacesRegExp","RegExp","lineCount","lastIndentationColumn","originalIndentationRange","originalIndentation","getValueInRange","newIndentation","replace","selectionId"],"sourceRoot":""}