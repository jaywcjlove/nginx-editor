{"version":3,"file":"static/js/monaco-editor-vendor.a5bb2ee7.2f380904.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/base/browser/ui/mouseCursor/mouseCursor.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/progressbar/progressbar.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/resizable/resizable.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/sash/sash.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/scrollbar/scrollbarArrow.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/scrollbar/scrollbarVisibilityController.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/scrollbar/abstractScrollbar.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/scrollbar/horizontalScrollbar.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/scrollbar/verticalScrollbar.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/scrollbar/scrollableElement.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/scrollbar/scrollbarState.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/selectBox/selectBoxCustom.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/selectBox/selectBoxNative.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/selectBox/selectBox.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/splitview/splitview.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/table/tableWidget.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/toggle/toggle.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/toolbar/toolbar.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/tree/abstractTree.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/tree/asyncDataTree.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/tree/dataTree.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/tree/indexTreeModel.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/tree/compressedObjectTreeModel.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/tree/objectTree.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/tree/objectTreeModel.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/tree/tree.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/widget.js","../node_modules/monaco-editor/esm/vs/base/browser/window.js","../node_modules/monaco-editor/esm/vs/base/common/actions.js","../node_modules/monaco-editor/esm/vs/base/common/arrays.js","../node_modules/monaco-editor/esm/vs/base/common/arraysFind.js","../node_modules/monaco-editor/esm/vs/base/common/assert.js","../node_modules/monaco-editor/esm/vs/base/common/async.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './mouseCursor.css';\nexport const MOUSE_CURSOR_TEXT_CSS_CLASS_NAME = `monaco-mouse-cursor-text`;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { show } from '../../dom.js';\nimport { RunOnceScheduler } from '../../../common/async.js';\nimport { Disposable, MutableDisposable } from '../../../common/lifecycle.js';\nimport './progressbar.css';\nconst CSS_DONE = 'done';\nconst CSS_ACTIVE = 'active';\nconst CSS_INFINITE = 'infinite';\nconst CSS_INFINITE_LONG_RUNNING = 'infinite-long-running';\nconst CSS_DISCRETE = 'discrete';\n/**\n * A progress bar with support for infinite or discrete progress.\n */\nexport class ProgressBar extends Disposable {\n    constructor(container, options) {\n        super();\n        this.progressSignal = this._register(new MutableDisposable());\n        this.workedVal = 0;\n        this.showDelayedScheduler = this._register(new RunOnceScheduler(() => show(this.element), 0));\n        this.longRunningScheduler = this._register(new RunOnceScheduler(() => this.infiniteLongRunning(), ProgressBar.LONG_RUNNING_INFINITE_THRESHOLD));\n        this.create(container, options);\n    }\n    create(container, options) {\n        this.element = document.createElement('div');\n        this.element.classList.add('monaco-progress-container');\n        this.element.setAttribute('role', 'progressbar');\n        this.element.setAttribute('aria-valuemin', '0');\n        container.appendChild(this.element);\n        this.bit = document.createElement('div');\n        this.bit.classList.add('progress-bit');\n        this.bit.style.backgroundColor = (options === null || options === void 0 ? void 0 : options.progressBarBackground) || '#0E70C0';\n        this.element.appendChild(this.bit);\n    }\n    off() {\n        this.bit.style.width = 'inherit';\n        this.bit.style.opacity = '1';\n        this.element.classList.remove(CSS_ACTIVE, CSS_INFINITE, CSS_INFINITE_LONG_RUNNING, CSS_DISCRETE);\n        this.workedVal = 0;\n        this.totalWork = undefined;\n        this.longRunningScheduler.cancel();\n        this.progressSignal.clear();\n    }\n    /**\n     * Stops the progressbar from showing any progress instantly without fading out.\n     */\n    stop() {\n        return this.doDone(false);\n    }\n    doDone(delayed) {\n        this.element.classList.add(CSS_DONE);\n        // discrete: let it grow to 100% width and hide afterwards\n        if (!this.element.classList.contains(CSS_INFINITE)) {\n            this.bit.style.width = 'inherit';\n            if (delayed) {\n                setTimeout(() => this.off(), 200);\n            }\n            else {\n                this.off();\n            }\n        }\n        // infinite: let it fade out and hide afterwards\n        else {\n            this.bit.style.opacity = '0';\n            if (delayed) {\n                setTimeout(() => this.off(), 200);\n            }\n            else {\n                this.off();\n            }\n        }\n        return this;\n    }\n    /**\n     * Use this mode to indicate progress that has no total number of work units.\n     */\n    infinite() {\n        this.bit.style.width = '2%';\n        this.bit.style.opacity = '1';\n        this.element.classList.remove(CSS_DISCRETE, CSS_DONE, CSS_INFINITE_LONG_RUNNING);\n        this.element.classList.add(CSS_ACTIVE, CSS_INFINITE);\n        this.longRunningScheduler.schedule();\n        return this;\n    }\n    infiniteLongRunning() {\n        this.element.classList.add(CSS_INFINITE_LONG_RUNNING);\n    }\n    getContainer() {\n        return this.element;\n    }\n}\n/**\n * After a certain time of showing the progress bar, switch\n * to long-running mode and throttle animations to reduce\n * the pressure on the GPU process.\n *\n * https://github.com/microsoft/vscode/issues/97900\n * https://github.com/microsoft/vscode/issues/138396\n */\nProgressBar.LONG_RUNNING_INFINITE_THRESHOLD = 10000;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Dimension } from '../../dom.js';\nimport { OrthogonalEdge, Sash } from '../sash/sash.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { DisposableStore } from '../../../common/lifecycle.js';\nexport class ResizableHTMLElement {\n    constructor() {\n        this._onDidWillResize = new Emitter();\n        this.onDidWillResize = this._onDidWillResize.event;\n        this._onDidResize = new Emitter();\n        this.onDidResize = this._onDidResize.event;\n        this._sashListener = new DisposableStore();\n        this._size = new Dimension(0, 0);\n        this._minSize = new Dimension(0, 0);\n        this._maxSize = new Dimension(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);\n        this.domNode = document.createElement('div');\n        this._eastSash = new Sash(this.domNode, { getVerticalSashLeft: () => this._size.width }, { orientation: 0 /* Orientation.VERTICAL */ });\n        this._westSash = new Sash(this.domNode, { getVerticalSashLeft: () => 0 }, { orientation: 0 /* Orientation.VERTICAL */ });\n        this._northSash = new Sash(this.domNode, { getHorizontalSashTop: () => 0 }, { orientation: 1 /* Orientation.HORIZONTAL */, orthogonalEdge: OrthogonalEdge.North });\n        this._southSash = new Sash(this.domNode, { getHorizontalSashTop: () => this._size.height }, { orientation: 1 /* Orientation.HORIZONTAL */, orthogonalEdge: OrthogonalEdge.South });\n        this._northSash.orthogonalStartSash = this._westSash;\n        this._northSash.orthogonalEndSash = this._eastSash;\n        this._southSash.orthogonalStartSash = this._westSash;\n        this._southSash.orthogonalEndSash = this._eastSash;\n        let currentSize;\n        let deltaY = 0;\n        let deltaX = 0;\n        this._sashListener.add(Event.any(this._northSash.onDidStart, this._eastSash.onDidStart, this._southSash.onDidStart, this._westSash.onDidStart)(() => {\n            if (currentSize === undefined) {\n                this._onDidWillResize.fire();\n                currentSize = this._size;\n                deltaY = 0;\n                deltaX = 0;\n            }\n        }));\n        this._sashListener.add(Event.any(this._northSash.onDidEnd, this._eastSash.onDidEnd, this._southSash.onDidEnd, this._westSash.onDidEnd)(() => {\n            if (currentSize !== undefined) {\n                currentSize = undefined;\n                deltaY = 0;\n                deltaX = 0;\n                this._onDidResize.fire({ dimension: this._size, done: true });\n            }\n        }));\n        this._sashListener.add(this._eastSash.onDidChange(e => {\n            if (currentSize) {\n                deltaX = e.currentX - e.startX;\n                this.layout(currentSize.height + deltaY, currentSize.width + deltaX);\n                this._onDidResize.fire({ dimension: this._size, done: false, east: true });\n            }\n        }));\n        this._sashListener.add(this._westSash.onDidChange(e => {\n            if (currentSize) {\n                deltaX = -(e.currentX - e.startX);\n                this.layout(currentSize.height + deltaY, currentSize.width + deltaX);\n                this._onDidResize.fire({ dimension: this._size, done: false, west: true });\n            }\n        }));\n        this._sashListener.add(this._northSash.onDidChange(e => {\n            if (currentSize) {\n                deltaY = -(e.currentY - e.startY);\n                this.layout(currentSize.height + deltaY, currentSize.width + deltaX);\n                this._onDidResize.fire({ dimension: this._size, done: false, north: true });\n            }\n        }));\n        this._sashListener.add(this._southSash.onDidChange(e => {\n            if (currentSize) {\n                deltaY = e.currentY - e.startY;\n                this.layout(currentSize.height + deltaY, currentSize.width + deltaX);\n                this._onDidResize.fire({ dimension: this._size, done: false, south: true });\n            }\n        }));\n        this._sashListener.add(Event.any(this._eastSash.onDidReset, this._westSash.onDidReset)(e => {\n            if (this._preferredSize) {\n                this.layout(this._size.height, this._preferredSize.width);\n                this._onDidResize.fire({ dimension: this._size, done: true });\n            }\n        }));\n        this._sashListener.add(Event.any(this._northSash.onDidReset, this._southSash.onDidReset)(e => {\n            if (this._preferredSize) {\n                this.layout(this._preferredSize.height, this._size.width);\n                this._onDidResize.fire({ dimension: this._size, done: true });\n            }\n        }));\n    }\n    dispose() {\n        this._northSash.dispose();\n        this._southSash.dispose();\n        this._eastSash.dispose();\n        this._westSash.dispose();\n        this._sashListener.dispose();\n        this._onDidResize.dispose();\n        this._onDidWillResize.dispose();\n        this.domNode.remove();\n    }\n    enableSashes(north, east, south, west) {\n        this._northSash.state = north ? 3 /* SashState.Enabled */ : 0 /* SashState.Disabled */;\n        this._eastSash.state = east ? 3 /* SashState.Enabled */ : 0 /* SashState.Disabled */;\n        this._southSash.state = south ? 3 /* SashState.Enabled */ : 0 /* SashState.Disabled */;\n        this._westSash.state = west ? 3 /* SashState.Enabled */ : 0 /* SashState.Disabled */;\n    }\n    layout(height = this.size.height, width = this.size.width) {\n        const { height: minHeight, width: minWidth } = this._minSize;\n        const { height: maxHeight, width: maxWidth } = this._maxSize;\n        height = Math.max(minHeight, Math.min(maxHeight, height));\n        width = Math.max(minWidth, Math.min(maxWidth, width));\n        const newSize = new Dimension(width, height);\n        if (!Dimension.equals(newSize, this._size)) {\n            this.domNode.style.height = height + 'px';\n            this.domNode.style.width = width + 'px';\n            this._size = newSize;\n            this._northSash.layout();\n            this._eastSash.layout();\n            this._southSash.layout();\n            this._westSash.layout();\n        }\n    }\n    clearSashHoverState() {\n        this._eastSash.clearSashHoverState();\n        this._westSash.clearSashHoverState();\n        this._northSash.clearSashHoverState();\n        this._southSash.clearSashHoverState();\n    }\n    get size() {\n        return this._size;\n    }\n    set maxSize(value) {\n        this._maxSize = value;\n    }\n    get maxSize() {\n        return this._maxSize;\n    }\n    set minSize(value) {\n        this._minSize = value;\n    }\n    get minSize() {\n        return this._minSize;\n    }\n    set preferredSize(value) {\n        this._preferredSize = value;\n    }\n    get preferredSize() {\n        return this._preferredSize;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { $, append, createStyleSheet, EventHelper, getWindow } from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { EventType, Gesture } from '../../touch.js';\nimport { Delayer } from '../../../common/async.js';\nimport { memoize } from '../../../common/decorators.js';\nimport { Emitter } from '../../../common/event.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../common/lifecycle.js';\nimport { isMacintosh } from '../../../common/platform.js';\nimport './sash.css';\n/**\n * Allow the sashes to be visible at runtime.\n * @remark Use for development purposes only.\n */\nconst DEBUG = false;\nexport var OrthogonalEdge;\n(function (OrthogonalEdge) {\n    OrthogonalEdge[\"North\"] = \"north\";\n    OrthogonalEdge[\"South\"] = \"south\";\n    OrthogonalEdge[\"East\"] = \"east\";\n    OrthogonalEdge[\"West\"] = \"west\";\n})(OrthogonalEdge || (OrthogonalEdge = {}));\nlet globalSize = 4;\nconst onDidChangeGlobalSize = new Emitter();\nlet globalHoverDelay = 300;\nconst onDidChangeHoverDelay = new Emitter();\nclass MouseEventFactory {\n    constructor(el) {\n        this.el = el;\n        this.disposables = new DisposableStore();\n    }\n    get onPointerMove() {\n        return this.disposables.add(new DomEmitter(getWindow(this.el), 'mousemove')).event;\n    }\n    get onPointerUp() {\n        return this.disposables.add(new DomEmitter(getWindow(this.el), 'mouseup')).event;\n    }\n    dispose() {\n        this.disposables.dispose();\n    }\n}\n__decorate([\n    memoize\n], MouseEventFactory.prototype, \"onPointerMove\", null);\n__decorate([\n    memoize\n], MouseEventFactory.prototype, \"onPointerUp\", null);\nclass GestureEventFactory {\n    get onPointerMove() {\n        return this.disposables.add(new DomEmitter(this.el, EventType.Change)).event;\n    }\n    get onPointerUp() {\n        return this.disposables.add(new DomEmitter(this.el, EventType.End)).event;\n    }\n    constructor(el) {\n        this.el = el;\n        this.disposables = new DisposableStore();\n    }\n    dispose() {\n        this.disposables.dispose();\n    }\n}\n__decorate([\n    memoize\n], GestureEventFactory.prototype, \"onPointerMove\", null);\n__decorate([\n    memoize\n], GestureEventFactory.prototype, \"onPointerUp\", null);\nclass OrthogonalPointerEventFactory {\n    get onPointerMove() {\n        return this.factory.onPointerMove;\n    }\n    get onPointerUp() {\n        return this.factory.onPointerUp;\n    }\n    constructor(factory) {\n        this.factory = factory;\n    }\n    dispose() {\n        // noop\n    }\n}\n__decorate([\n    memoize\n], OrthogonalPointerEventFactory.prototype, \"onPointerMove\", null);\n__decorate([\n    memoize\n], OrthogonalPointerEventFactory.prototype, \"onPointerUp\", null);\nconst PointerEventsDisabledCssClass = 'pointer-events-disabled';\n/**\n * The {@link Sash} is the UI component which allows the user to resize other\n * components. It's usually an invisible horizontal or vertical line which, when\n * hovered, becomes highlighted and can be dragged along the perpendicular dimension\n * to its direction.\n *\n * Features:\n * - Touch event handling\n * - Corner sash support\n * - Hover with different mouse cursor support\n * - Configurable hover size\n * - Linked sash support, for 2x2 corner sashes\n */\nexport class Sash extends Disposable {\n    get state() { return this._state; }\n    get orthogonalStartSash() { return this._orthogonalStartSash; }\n    get orthogonalEndSash() { return this._orthogonalEndSash; }\n    /**\n     * The state of a sash defines whether it can be interacted with by the user\n     * as well as what mouse cursor to use, when hovered.\n     */\n    set state(state) {\n        if (this._state === state) {\n            return;\n        }\n        this.el.classList.toggle('disabled', state === 0 /* SashState.Disabled */);\n        this.el.classList.toggle('minimum', state === 1 /* SashState.AtMinimum */);\n        this.el.classList.toggle('maximum', state === 2 /* SashState.AtMaximum */);\n        this._state = state;\n        this.onDidEnablementChange.fire(state);\n    }\n    /**\n     * A reference to another sash, perpendicular to this one, which\n     * aligns at the start of this one. A corner sash will be created\n     * automatically at that location.\n     *\n     * The start of a horizontal sash is its left-most position.\n     * The start of a vertical sash is its top-most position.\n     */\n    set orthogonalStartSash(sash) {\n        if (this._orthogonalStartSash === sash) {\n            return;\n        }\n        this.orthogonalStartDragHandleDisposables.clear();\n        this.orthogonalStartSashDisposables.clear();\n        if (sash) {\n            const onChange = (state) => {\n                this.orthogonalStartDragHandleDisposables.clear();\n                if (state !== 0 /* SashState.Disabled */) {\n                    this._orthogonalStartDragHandle = append(this.el, $('.orthogonal-drag-handle.start'));\n                    this.orthogonalStartDragHandleDisposables.add(toDisposable(() => this._orthogonalStartDragHandle.remove()));\n                    this.orthogonalStartDragHandleDisposables.add(new DomEmitter(this._orthogonalStartDragHandle, 'mouseenter')).event(() => Sash.onMouseEnter(sash), undefined, this.orthogonalStartDragHandleDisposables);\n                    this.orthogonalStartDragHandleDisposables.add(new DomEmitter(this._orthogonalStartDragHandle, 'mouseleave')).event(() => Sash.onMouseLeave(sash), undefined, this.orthogonalStartDragHandleDisposables);\n                }\n            };\n            this.orthogonalStartSashDisposables.add(sash.onDidEnablementChange.event(onChange, this));\n            onChange(sash.state);\n        }\n        this._orthogonalStartSash = sash;\n    }\n    /**\n     * A reference to another sash, perpendicular to this one, which\n     * aligns at the end of this one. A corner sash will be created\n     * automatically at that location.\n     *\n     * The end of a horizontal sash is its right-most position.\n     * The end of a vertical sash is its bottom-most position.\n     */\n    set orthogonalEndSash(sash) {\n        if (this._orthogonalEndSash === sash) {\n            return;\n        }\n        this.orthogonalEndDragHandleDisposables.clear();\n        this.orthogonalEndSashDisposables.clear();\n        if (sash) {\n            const onChange = (state) => {\n                this.orthogonalEndDragHandleDisposables.clear();\n                if (state !== 0 /* SashState.Disabled */) {\n                    this._orthogonalEndDragHandle = append(this.el, $('.orthogonal-drag-handle.end'));\n                    this.orthogonalEndDragHandleDisposables.add(toDisposable(() => this._orthogonalEndDragHandle.remove()));\n                    this.orthogonalEndDragHandleDisposables.add(new DomEmitter(this._orthogonalEndDragHandle, 'mouseenter')).event(() => Sash.onMouseEnter(sash), undefined, this.orthogonalEndDragHandleDisposables);\n                    this.orthogonalEndDragHandleDisposables.add(new DomEmitter(this._orthogonalEndDragHandle, 'mouseleave')).event(() => Sash.onMouseLeave(sash), undefined, this.orthogonalEndDragHandleDisposables);\n                }\n            };\n            this.orthogonalEndSashDisposables.add(sash.onDidEnablementChange.event(onChange, this));\n            onChange(sash.state);\n        }\n        this._orthogonalEndSash = sash;\n    }\n    constructor(container, layoutProvider, options) {\n        super();\n        this.hoverDelay = globalHoverDelay;\n        this.hoverDelayer = this._register(new Delayer(this.hoverDelay));\n        this._state = 3 /* SashState.Enabled */;\n        this.onDidEnablementChange = this._register(new Emitter());\n        this._onDidStart = this._register(new Emitter());\n        this._onDidChange = this._register(new Emitter());\n        this._onDidReset = this._register(new Emitter());\n        this._onDidEnd = this._register(new Emitter());\n        this.orthogonalStartSashDisposables = this._register(new DisposableStore());\n        this.orthogonalStartDragHandleDisposables = this._register(new DisposableStore());\n        this.orthogonalEndSashDisposables = this._register(new DisposableStore());\n        this.orthogonalEndDragHandleDisposables = this._register(new DisposableStore());\n        /**\n         * An event which fires whenever the user starts dragging this sash.\n         */\n        this.onDidStart = this._onDidStart.event;\n        /**\n         * An event which fires whenever the user moves the mouse while\n         * dragging this sash.\n         */\n        this.onDidChange = this._onDidChange.event;\n        /**\n         * An event which fires whenever the user double clicks this sash.\n         */\n        this.onDidReset = this._onDidReset.event;\n        /**\n         * An event which fires whenever the user stops dragging this sash.\n         */\n        this.onDidEnd = this._onDidEnd.event;\n        /**\n         * A linked sash will be forwarded the same user interactions and events\n         * so it moves exactly the same way as this sash.\n         *\n         * Useful in 2x2 grids. Not meant for widespread usage.\n         */\n        this.linkedSash = undefined;\n        this.el = append(container, $('.monaco-sash'));\n        if (options.orthogonalEdge) {\n            this.el.classList.add(`orthogonal-edge-${options.orthogonalEdge}`);\n        }\n        if (isMacintosh) {\n            this.el.classList.add('mac');\n        }\n        const onMouseDown = this._register(new DomEmitter(this.el, 'mousedown')).event;\n        this._register(onMouseDown(e => this.onPointerStart(e, new MouseEventFactory(container)), this));\n        const onMouseDoubleClick = this._register(new DomEmitter(this.el, 'dblclick')).event;\n        this._register(onMouseDoubleClick(this.onPointerDoublePress, this));\n        const onMouseEnter = this._register(new DomEmitter(this.el, 'mouseenter')).event;\n        this._register(onMouseEnter(() => Sash.onMouseEnter(this)));\n        const onMouseLeave = this._register(new DomEmitter(this.el, 'mouseleave')).event;\n        this._register(onMouseLeave(() => Sash.onMouseLeave(this)));\n        this._register(Gesture.addTarget(this.el));\n        const onTouchStart = this._register(new DomEmitter(this.el, EventType.Start)).event;\n        this._register(onTouchStart(e => this.onPointerStart(e, new GestureEventFactory(this.el)), this));\n        const onTap = this._register(new DomEmitter(this.el, EventType.Tap)).event;\n        let doubleTapTimeout = undefined;\n        this._register(onTap(event => {\n            if (doubleTapTimeout) {\n                clearTimeout(doubleTapTimeout);\n                doubleTapTimeout = undefined;\n                this.onPointerDoublePress(event);\n                return;\n            }\n            clearTimeout(doubleTapTimeout);\n            doubleTapTimeout = setTimeout(() => doubleTapTimeout = undefined, 250);\n        }, this));\n        if (typeof options.size === 'number') {\n            this.size = options.size;\n            if (options.orientation === 0 /* Orientation.VERTICAL */) {\n                this.el.style.width = `${this.size}px`;\n            }\n            else {\n                this.el.style.height = `${this.size}px`;\n            }\n        }\n        else {\n            this.size = globalSize;\n            this._register(onDidChangeGlobalSize.event(size => {\n                this.size = size;\n                this.layout();\n            }));\n        }\n        this._register(onDidChangeHoverDelay.event(delay => this.hoverDelay = delay));\n        this.layoutProvider = layoutProvider;\n        this.orthogonalStartSash = options.orthogonalStartSash;\n        this.orthogonalEndSash = options.orthogonalEndSash;\n        this.orientation = options.orientation || 0 /* Orientation.VERTICAL */;\n        if (this.orientation === 1 /* Orientation.HORIZONTAL */) {\n            this.el.classList.add('horizontal');\n            this.el.classList.remove('vertical');\n        }\n        else {\n            this.el.classList.remove('horizontal');\n            this.el.classList.add('vertical');\n        }\n        this.el.classList.toggle('debug', DEBUG);\n        this.layout();\n    }\n    onPointerStart(event, pointerEventFactory) {\n        EventHelper.stop(event);\n        let isMultisashResize = false;\n        if (!event.__orthogonalSashEvent) {\n            const orthogonalSash = this.getOrthogonalSash(event);\n            if (orthogonalSash) {\n                isMultisashResize = true;\n                event.__orthogonalSashEvent = true;\n                orthogonalSash.onPointerStart(event, new OrthogonalPointerEventFactory(pointerEventFactory));\n            }\n        }\n        if (this.linkedSash && !event.__linkedSashEvent) {\n            event.__linkedSashEvent = true;\n            this.linkedSash.onPointerStart(event, new OrthogonalPointerEventFactory(pointerEventFactory));\n        }\n        if (!this.state) {\n            return;\n        }\n        const iframes = this.el.ownerDocument.getElementsByTagName('iframe');\n        for (const iframe of iframes) {\n            iframe.classList.add(PointerEventsDisabledCssClass); // disable mouse events on iframes as long as we drag the sash\n        }\n        const startX = event.pageX;\n        const startY = event.pageY;\n        const altKey = event.altKey;\n        const startEvent = { startX, currentX: startX, startY, currentY: startY, altKey };\n        this.el.classList.add('active');\n        this._onDidStart.fire(startEvent);\n        // fix https://github.com/microsoft/vscode/issues/21675\n        const style = createStyleSheet(this.el);\n        const updateStyle = () => {\n            let cursor = '';\n            if (isMultisashResize) {\n                cursor = 'all-scroll';\n            }\n            else if (this.orientation === 1 /* Orientation.HORIZONTAL */) {\n                if (this.state === 1 /* SashState.AtMinimum */) {\n                    cursor = 's-resize';\n                }\n                else if (this.state === 2 /* SashState.AtMaximum */) {\n                    cursor = 'n-resize';\n                }\n                else {\n                    cursor = isMacintosh ? 'row-resize' : 'ns-resize';\n                }\n            }\n            else {\n                if (this.state === 1 /* SashState.AtMinimum */) {\n                    cursor = 'e-resize';\n                }\n                else if (this.state === 2 /* SashState.AtMaximum */) {\n                    cursor = 'w-resize';\n                }\n                else {\n                    cursor = isMacintosh ? 'col-resize' : 'ew-resize';\n                }\n            }\n            style.textContent = `* { cursor: ${cursor} !important; }`;\n        };\n        const disposables = new DisposableStore();\n        updateStyle();\n        if (!isMultisashResize) {\n            this.onDidEnablementChange.event(updateStyle, null, disposables);\n        }\n        const onPointerMove = (e) => {\n            EventHelper.stop(e, false);\n            const event = { startX, currentX: e.pageX, startY, currentY: e.pageY, altKey };\n            this._onDidChange.fire(event);\n        };\n        const onPointerUp = (e) => {\n            EventHelper.stop(e, false);\n            this.el.removeChild(style);\n            this.el.classList.remove('active');\n            this._onDidEnd.fire();\n            disposables.dispose();\n            for (const iframe of iframes) {\n                iframe.classList.remove(PointerEventsDisabledCssClass);\n            }\n        };\n        pointerEventFactory.onPointerMove(onPointerMove, null, disposables);\n        pointerEventFactory.onPointerUp(onPointerUp, null, disposables);\n        disposables.add(pointerEventFactory);\n    }\n    onPointerDoublePress(e) {\n        const orthogonalSash = this.getOrthogonalSash(e);\n        if (orthogonalSash) {\n            orthogonalSash._onDidReset.fire();\n        }\n        if (this.linkedSash) {\n            this.linkedSash._onDidReset.fire();\n        }\n        this._onDidReset.fire();\n    }\n    static onMouseEnter(sash, fromLinkedSash = false) {\n        if (sash.el.classList.contains('active')) {\n            sash.hoverDelayer.cancel();\n            sash.el.classList.add('hover');\n        }\n        else {\n            sash.hoverDelayer.trigger(() => sash.el.classList.add('hover'), sash.hoverDelay).then(undefined, () => { });\n        }\n        if (!fromLinkedSash && sash.linkedSash) {\n            Sash.onMouseEnter(sash.linkedSash, true);\n        }\n    }\n    static onMouseLeave(sash, fromLinkedSash = false) {\n        sash.hoverDelayer.cancel();\n        sash.el.classList.remove('hover');\n        if (!fromLinkedSash && sash.linkedSash) {\n            Sash.onMouseLeave(sash.linkedSash, true);\n        }\n    }\n    /**\n     * Forcefully stop any user interactions with this sash.\n     * Useful when hiding a parent component, while the user is still\n     * interacting with the sash.\n     */\n    clearSashHoverState() {\n        Sash.onMouseLeave(this);\n    }\n    /**\n     * Layout the sash. The sash will size and position itself\n     * based on its provided {@link ISashLayoutProvider layout provider}.\n     */\n    layout() {\n        if (this.orientation === 0 /* Orientation.VERTICAL */) {\n            const verticalProvider = this.layoutProvider;\n            this.el.style.left = verticalProvider.getVerticalSashLeft(this) - (this.size / 2) + 'px';\n            if (verticalProvider.getVerticalSashTop) {\n                this.el.style.top = verticalProvider.getVerticalSashTop(this) + 'px';\n            }\n            if (verticalProvider.getVerticalSashHeight) {\n                this.el.style.height = verticalProvider.getVerticalSashHeight(this) + 'px';\n            }\n        }\n        else {\n            const horizontalProvider = this.layoutProvider;\n            this.el.style.top = horizontalProvider.getHorizontalSashTop(this) - (this.size / 2) + 'px';\n            if (horizontalProvider.getHorizontalSashLeft) {\n                this.el.style.left = horizontalProvider.getHorizontalSashLeft(this) + 'px';\n            }\n            if (horizontalProvider.getHorizontalSashWidth) {\n                this.el.style.width = horizontalProvider.getHorizontalSashWidth(this) + 'px';\n            }\n        }\n    }\n    getOrthogonalSash(e) {\n        var _a;\n        const target = (_a = e.initialTarget) !== null && _a !== void 0 ? _a : e.target;\n        if (!target || !(target instanceof HTMLElement)) {\n            return undefined;\n        }\n        if (target.classList.contains('orthogonal-drag-handle')) {\n            return target.classList.contains('start') ? this.orthogonalStartSash : this.orthogonalEndSash;\n        }\n        return undefined;\n    }\n    dispose() {\n        super.dispose();\n        this.el.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { GlobalPointerMoveMonitor } from '../../globalPointerMoveMonitor.js';\nimport { Widget } from '../widget.js';\nimport { TimeoutTimer } from '../../../common/async.js';\nimport { ThemeIcon } from '../../../common/themables.js';\nimport * as dom from '../../dom.js';\n/**\n * The arrow image size.\n */\nexport const ARROW_IMG_SIZE = 11;\nexport class ScrollbarArrow extends Widget {\n    constructor(opts) {\n        super();\n        this._onActivate = opts.onActivate;\n        this.bgDomNode = document.createElement('div');\n        this.bgDomNode.className = 'arrow-background';\n        this.bgDomNode.style.position = 'absolute';\n        this.bgDomNode.style.width = opts.bgWidth + 'px';\n        this.bgDomNode.style.height = opts.bgHeight + 'px';\n        if (typeof opts.top !== 'undefined') {\n            this.bgDomNode.style.top = '0px';\n        }\n        if (typeof opts.left !== 'undefined') {\n            this.bgDomNode.style.left = '0px';\n        }\n        if (typeof opts.bottom !== 'undefined') {\n            this.bgDomNode.style.bottom = '0px';\n        }\n        if (typeof opts.right !== 'undefined') {\n            this.bgDomNode.style.right = '0px';\n        }\n        this.domNode = document.createElement('div');\n        this.domNode.className = opts.className;\n        this.domNode.classList.add(...ThemeIcon.asClassNameArray(opts.icon));\n        this.domNode.style.position = 'absolute';\n        this.domNode.style.width = ARROW_IMG_SIZE + 'px';\n        this.domNode.style.height = ARROW_IMG_SIZE + 'px';\n        if (typeof opts.top !== 'undefined') {\n            this.domNode.style.top = opts.top + 'px';\n        }\n        if (typeof opts.left !== 'undefined') {\n            this.domNode.style.left = opts.left + 'px';\n        }\n        if (typeof opts.bottom !== 'undefined') {\n            this.domNode.style.bottom = opts.bottom + 'px';\n        }\n        if (typeof opts.right !== 'undefined') {\n            this.domNode.style.right = opts.right + 'px';\n        }\n        this._pointerMoveMonitor = this._register(new GlobalPointerMoveMonitor());\n        this._register(dom.addStandardDisposableListener(this.bgDomNode, dom.EventType.POINTER_DOWN, (e) => this._arrowPointerDown(e)));\n        this._register(dom.addStandardDisposableListener(this.domNode, dom.EventType.POINTER_DOWN, (e) => this._arrowPointerDown(e)));\n        this._pointerdownRepeatTimer = this._register(new dom.WindowIntervalTimer());\n        this._pointerdownScheduleRepeatTimer = this._register(new TimeoutTimer());\n    }\n    _arrowPointerDown(e) {\n        if (!e.target || !(e.target instanceof Element)) {\n            return;\n        }\n        const scheduleRepeater = () => {\n            this._pointerdownRepeatTimer.cancelAndSet(() => this._onActivate(), 1000 / 24, dom.getWindow(e));\n        };\n        this._onActivate();\n        this._pointerdownRepeatTimer.cancel();\n        this._pointerdownScheduleRepeatTimer.cancelAndSet(scheduleRepeater, 200);\n        this._pointerMoveMonitor.startMonitoring(e.target, e.pointerId, e.buttons, (pointerMoveData) => { }, () => {\n            this._pointerdownRepeatTimer.cancel();\n            this._pointerdownScheduleRepeatTimer.cancel();\n        });\n        e.preventDefault();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { TimeoutTimer } from '../../../common/async.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nexport class ScrollbarVisibilityController extends Disposable {\n    constructor(visibility, visibleClassName, invisibleClassName) {\n        super();\n        this._visibility = visibility;\n        this._visibleClassName = visibleClassName;\n        this._invisibleClassName = invisibleClassName;\n        this._domNode = null;\n        this._isVisible = false;\n        this._isNeeded = false;\n        this._rawShouldBeVisible = false;\n        this._shouldBeVisible = false;\n        this._revealTimer = this._register(new TimeoutTimer());\n    }\n    setVisibility(visibility) {\n        if (this._visibility !== visibility) {\n            this._visibility = visibility;\n            this._updateShouldBeVisible();\n        }\n    }\n    // ----------------- Hide / Reveal\n    setShouldBeVisible(rawShouldBeVisible) {\n        this._rawShouldBeVisible = rawShouldBeVisible;\n        this._updateShouldBeVisible();\n    }\n    _applyVisibilitySetting() {\n        if (this._visibility === 2 /* ScrollbarVisibility.Hidden */) {\n            return false;\n        }\n        if (this._visibility === 3 /* ScrollbarVisibility.Visible */) {\n            return true;\n        }\n        return this._rawShouldBeVisible;\n    }\n    _updateShouldBeVisible() {\n        const shouldBeVisible = this._applyVisibilitySetting();\n        if (this._shouldBeVisible !== shouldBeVisible) {\n            this._shouldBeVisible = shouldBeVisible;\n            this.ensureVisibility();\n        }\n    }\n    setIsNeeded(isNeeded) {\n        if (this._isNeeded !== isNeeded) {\n            this._isNeeded = isNeeded;\n            this.ensureVisibility();\n        }\n    }\n    setDomNode(domNode) {\n        this._domNode = domNode;\n        this._domNode.setClassName(this._invisibleClassName);\n        // Now that the flags & the dom node are in a consistent state, ensure the Hidden/Visible configuration\n        this.setShouldBeVisible(false);\n    }\n    ensureVisibility() {\n        if (!this._isNeeded) {\n            // Nothing to be rendered\n            this._hide(false);\n            return;\n        }\n        if (this._shouldBeVisible) {\n            this._reveal();\n        }\n        else {\n            this._hide(true);\n        }\n    }\n    _reveal() {\n        if (this._isVisible) {\n            return;\n        }\n        this._isVisible = true;\n        // The CSS animation doesn't play otherwise\n        this._revealTimer.setIfNotSet(() => {\n            var _a;\n            (_a = this._domNode) === null || _a === void 0 ? void 0 : _a.setClassName(this._visibleClassName);\n        }, 0);\n    }\n    _hide(withFadeAway) {\n        var _a;\n        this._revealTimer.cancel();\n        if (!this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        (_a = this._domNode) === null || _a === void 0 ? void 0 : _a.setClassName(this._invisibleClassName + (withFadeAway ? ' fade' : ''));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { createFastDomNode } from '../../fastDomNode.js';\nimport { GlobalPointerMoveMonitor } from '../../globalPointerMoveMonitor.js';\nimport { ScrollbarArrow } from './scrollbarArrow.js';\nimport { ScrollbarVisibilityController } from './scrollbarVisibilityController.js';\nimport { Widget } from '../widget.js';\nimport * as platform from '../../../common/platform.js';\n/**\n * The orthogonal distance to the slider at which dragging \"resets\". This implements \"snapping\"\n */\nconst POINTER_DRAG_RESET_DISTANCE = 140;\nexport class AbstractScrollbar extends Widget {\n    constructor(opts) {\n        super();\n        this._lazyRender = opts.lazyRender;\n        this._host = opts.host;\n        this._scrollable = opts.scrollable;\n        this._scrollByPage = opts.scrollByPage;\n        this._scrollbarState = opts.scrollbarState;\n        this._visibilityController = this._register(new ScrollbarVisibilityController(opts.visibility, 'visible scrollbar ' + opts.extraScrollbarClassName, 'invisible scrollbar ' + opts.extraScrollbarClassName));\n        this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n        this._pointerMoveMonitor = this._register(new GlobalPointerMoveMonitor());\n        this._shouldRender = true;\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setAttribute('role', 'presentation');\n        this.domNode.setAttribute('aria-hidden', 'true');\n        this._visibilityController.setDomNode(this.domNode);\n        this.domNode.setPosition('absolute');\n        this._register(dom.addDisposableListener(this.domNode.domNode, dom.EventType.POINTER_DOWN, (e) => this._domNodePointerDown(e)));\n    }\n    // ----------------- creation\n    /**\n     * Creates the dom node for an arrow & adds it to the container\n     */\n    _createArrow(opts) {\n        const arrow = this._register(new ScrollbarArrow(opts));\n        this.domNode.domNode.appendChild(arrow.bgDomNode);\n        this.domNode.domNode.appendChild(arrow.domNode);\n    }\n    /**\n     * Creates the slider dom node, adds it to the container & hooks up the events\n     */\n    _createSlider(top, left, width, height) {\n        this.slider = createFastDomNode(document.createElement('div'));\n        this.slider.setClassName('slider');\n        this.slider.setPosition('absolute');\n        this.slider.setTop(top);\n        this.slider.setLeft(left);\n        if (typeof width === 'number') {\n            this.slider.setWidth(width);\n        }\n        if (typeof height === 'number') {\n            this.slider.setHeight(height);\n        }\n        this.slider.setLayerHinting(true);\n        this.slider.setContain('strict');\n        this.domNode.domNode.appendChild(this.slider.domNode);\n        this._register(dom.addDisposableListener(this.slider.domNode, dom.EventType.POINTER_DOWN, (e) => {\n            if (e.button === 0) {\n                e.preventDefault();\n                this._sliderPointerDown(e);\n            }\n        }));\n        this.onclick(this.slider.domNode, e => {\n            if (e.leftButton) {\n                e.stopPropagation();\n            }\n        });\n    }\n    // ----------------- Update state\n    _onElementSize(visibleSize) {\n        if (this._scrollbarState.setVisibleSize(visibleSize)) {\n            this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n            this._shouldRender = true;\n            if (!this._lazyRender) {\n                this.render();\n            }\n        }\n        return this._shouldRender;\n    }\n    _onElementScrollSize(elementScrollSize) {\n        if (this._scrollbarState.setScrollSize(elementScrollSize)) {\n            this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n            this._shouldRender = true;\n            if (!this._lazyRender) {\n                this.render();\n            }\n        }\n        return this._shouldRender;\n    }\n    _onElementScrollPosition(elementScrollPosition) {\n        if (this._scrollbarState.setScrollPosition(elementScrollPosition)) {\n            this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n            this._shouldRender = true;\n            if (!this._lazyRender) {\n                this.render();\n            }\n        }\n        return this._shouldRender;\n    }\n    // ----------------- rendering\n    beginReveal() {\n        this._visibilityController.setShouldBeVisible(true);\n    }\n    beginHide() {\n        this._visibilityController.setShouldBeVisible(false);\n    }\n    render() {\n        if (!this._shouldRender) {\n            return;\n        }\n        this._shouldRender = false;\n        this._renderDomNode(this._scrollbarState.getRectangleLargeSize(), this._scrollbarState.getRectangleSmallSize());\n        this._updateSlider(this._scrollbarState.getSliderSize(), this._scrollbarState.getArrowSize() + this._scrollbarState.getSliderPosition());\n    }\n    // ----------------- DOM events\n    _domNodePointerDown(e) {\n        if (e.target !== this.domNode.domNode) {\n            return;\n        }\n        this._onPointerDown(e);\n    }\n    delegatePointerDown(e) {\n        const domTop = this.domNode.domNode.getClientRects()[0].top;\n        const sliderStart = domTop + this._scrollbarState.getSliderPosition();\n        const sliderStop = domTop + this._scrollbarState.getSliderPosition() + this._scrollbarState.getSliderSize();\n        const pointerPos = this._sliderPointerPosition(e);\n        if (sliderStart <= pointerPos && pointerPos <= sliderStop) {\n            // Act as if it was a pointer down on the slider\n            if (e.button === 0) {\n                e.preventDefault();\n                this._sliderPointerDown(e);\n            }\n        }\n        else {\n            // Act as if it was a pointer down on the scrollbar\n            this._onPointerDown(e);\n        }\n    }\n    _onPointerDown(e) {\n        let offsetX;\n        let offsetY;\n        if (e.target === this.domNode.domNode && typeof e.offsetX === 'number' && typeof e.offsetY === 'number') {\n            offsetX = e.offsetX;\n            offsetY = e.offsetY;\n        }\n        else {\n            const domNodePosition = dom.getDomNodePagePosition(this.domNode.domNode);\n            offsetX = e.pageX - domNodePosition.left;\n            offsetY = e.pageY - domNodePosition.top;\n        }\n        const offset = this._pointerDownRelativePosition(offsetX, offsetY);\n        this._setDesiredScrollPositionNow(this._scrollByPage\n            ? this._scrollbarState.getDesiredScrollPositionFromOffsetPaged(offset)\n            : this._scrollbarState.getDesiredScrollPositionFromOffset(offset));\n        if (e.button === 0) {\n            // left button\n            e.preventDefault();\n            this._sliderPointerDown(e);\n        }\n    }\n    _sliderPointerDown(e) {\n        if (!e.target || !(e.target instanceof Element)) {\n            return;\n        }\n        const initialPointerPosition = this._sliderPointerPosition(e);\n        const initialPointerOrthogonalPosition = this._sliderOrthogonalPointerPosition(e);\n        const initialScrollbarState = this._scrollbarState.clone();\n        this.slider.toggleClassName('active', true);\n        this._pointerMoveMonitor.startMonitoring(e.target, e.pointerId, e.buttons, (pointerMoveData) => {\n            const pointerOrthogonalPosition = this._sliderOrthogonalPointerPosition(pointerMoveData);\n            const pointerOrthogonalDelta = Math.abs(pointerOrthogonalPosition - initialPointerOrthogonalPosition);\n            if (platform.isWindows && pointerOrthogonalDelta > POINTER_DRAG_RESET_DISTANCE) {\n                // The pointer has wondered away from the scrollbar => reset dragging\n                this._setDesiredScrollPositionNow(initialScrollbarState.getScrollPosition());\n                return;\n            }\n            const pointerPosition = this._sliderPointerPosition(pointerMoveData);\n            const pointerDelta = pointerPosition - initialPointerPosition;\n            this._setDesiredScrollPositionNow(initialScrollbarState.getDesiredScrollPositionFromDelta(pointerDelta));\n        }, () => {\n            this.slider.toggleClassName('active', false);\n            this._host.onDragEnd();\n        });\n        this._host.onDragStart();\n    }\n    _setDesiredScrollPositionNow(_desiredScrollPosition) {\n        const desiredScrollPosition = {};\n        this.writeScrollPosition(desiredScrollPosition, _desiredScrollPosition);\n        this._scrollable.setScrollPositionNow(desiredScrollPosition);\n    }\n    updateScrollbarSize(scrollbarSize) {\n        this._updateScrollbarSize(scrollbarSize);\n        this._scrollbarState.setScrollbarSize(scrollbarSize);\n        this._shouldRender = true;\n        if (!this._lazyRender) {\n            this.render();\n        }\n    }\n    isNeeded() {\n        return this._scrollbarState.isNeeded();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { StandardWheelEvent } from '../../mouseEvent.js';\nimport { AbstractScrollbar } from './abstractScrollbar.js';\nimport { ARROW_IMG_SIZE } from './scrollbarArrow.js';\nimport { ScrollbarState } from './scrollbarState.js';\nimport { Codicon } from '../../../common/codicons.js';\nexport class HorizontalScrollbar extends AbstractScrollbar {\n    constructor(scrollable, options, host) {\n        const scrollDimensions = scrollable.getScrollDimensions();\n        const scrollPosition = scrollable.getCurrentScrollPosition();\n        super({\n            lazyRender: options.lazyRender,\n            host: host,\n            scrollbarState: new ScrollbarState((options.horizontalHasArrows ? options.arrowSize : 0), (options.horizontal === 2 /* ScrollbarVisibility.Hidden */ ? 0 : options.horizontalScrollbarSize), (options.vertical === 2 /* ScrollbarVisibility.Hidden */ ? 0 : options.verticalScrollbarSize), scrollDimensions.width, scrollDimensions.scrollWidth, scrollPosition.scrollLeft),\n            visibility: options.horizontal,\n            extraScrollbarClassName: 'horizontal',\n            scrollable: scrollable,\n            scrollByPage: options.scrollByPage\n        });\n        if (options.horizontalHasArrows) {\n            const arrowDelta = (options.arrowSize - ARROW_IMG_SIZE) / 2;\n            const scrollbarDelta = (options.horizontalScrollbarSize - ARROW_IMG_SIZE) / 2;\n            this._createArrow({\n                className: 'scra',\n                icon: Codicon.scrollbarButtonLeft,\n                top: scrollbarDelta,\n                left: arrowDelta,\n                bottom: undefined,\n                right: undefined,\n                bgWidth: options.arrowSize,\n                bgHeight: options.horizontalScrollbarSize,\n                onActivate: () => this._host.onMouseWheel(new StandardWheelEvent(null, 1, 0)),\n            });\n            this._createArrow({\n                className: 'scra',\n                icon: Codicon.scrollbarButtonRight,\n                top: scrollbarDelta,\n                left: undefined,\n                bottom: undefined,\n                right: arrowDelta,\n                bgWidth: options.arrowSize,\n                bgHeight: options.horizontalScrollbarSize,\n                onActivate: () => this._host.onMouseWheel(new StandardWheelEvent(null, -1, 0)),\n            });\n        }\n        this._createSlider(Math.floor((options.horizontalScrollbarSize - options.horizontalSliderSize) / 2), 0, undefined, options.horizontalSliderSize);\n    }\n    _updateSlider(sliderSize, sliderPosition) {\n        this.slider.setWidth(sliderSize);\n        this.slider.setLeft(sliderPosition);\n    }\n    _renderDomNode(largeSize, smallSize) {\n        this.domNode.setWidth(largeSize);\n        this.domNode.setHeight(smallSize);\n        this.domNode.setLeft(0);\n        this.domNode.setBottom(0);\n    }\n    onDidScroll(e) {\n        this._shouldRender = this._onElementScrollSize(e.scrollWidth) || this._shouldRender;\n        this._shouldRender = this._onElementScrollPosition(e.scrollLeft) || this._shouldRender;\n        this._shouldRender = this._onElementSize(e.width) || this._shouldRender;\n        return this._shouldRender;\n    }\n    _pointerDownRelativePosition(offsetX, offsetY) {\n        return offsetX;\n    }\n    _sliderPointerPosition(e) {\n        return e.pageX;\n    }\n    _sliderOrthogonalPointerPosition(e) {\n        return e.pageY;\n    }\n    _updateScrollbarSize(size) {\n        this.slider.setHeight(size);\n    }\n    writeScrollPosition(target, scrollPosition) {\n        target.scrollLeft = scrollPosition;\n    }\n    updateOptions(options) {\n        this.updateScrollbarSize(options.horizontal === 2 /* ScrollbarVisibility.Hidden */ ? 0 : options.horizontalScrollbarSize);\n        this._scrollbarState.setOppositeScrollbarSize(options.vertical === 2 /* ScrollbarVisibility.Hidden */ ? 0 : options.verticalScrollbarSize);\n        this._visibilityController.setVisibility(options.horizontal);\n        this._scrollByPage = options.scrollByPage;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { StandardWheelEvent } from '../../mouseEvent.js';\nimport { AbstractScrollbar } from './abstractScrollbar.js';\nimport { ARROW_IMG_SIZE } from './scrollbarArrow.js';\nimport { ScrollbarState } from './scrollbarState.js';\nimport { Codicon } from '../../../common/codicons.js';\nexport class VerticalScrollbar extends AbstractScrollbar {\n    constructor(scrollable, options, host) {\n        const scrollDimensions = scrollable.getScrollDimensions();\n        const scrollPosition = scrollable.getCurrentScrollPosition();\n        super({\n            lazyRender: options.lazyRender,\n            host: host,\n            scrollbarState: new ScrollbarState((options.verticalHasArrows ? options.arrowSize : 0), (options.vertical === 2 /* ScrollbarVisibility.Hidden */ ? 0 : options.verticalScrollbarSize), \n            // give priority to vertical scroll bar over horizontal and let it scroll all the way to the bottom\n            0, scrollDimensions.height, scrollDimensions.scrollHeight, scrollPosition.scrollTop),\n            visibility: options.vertical,\n            extraScrollbarClassName: 'vertical',\n            scrollable: scrollable,\n            scrollByPage: options.scrollByPage\n        });\n        if (options.verticalHasArrows) {\n            const arrowDelta = (options.arrowSize - ARROW_IMG_SIZE) / 2;\n            const scrollbarDelta = (options.verticalScrollbarSize - ARROW_IMG_SIZE) / 2;\n            this._createArrow({\n                className: 'scra',\n                icon: Codicon.scrollbarButtonUp,\n                top: arrowDelta,\n                left: scrollbarDelta,\n                bottom: undefined,\n                right: undefined,\n                bgWidth: options.verticalScrollbarSize,\n                bgHeight: options.arrowSize,\n                onActivate: () => this._host.onMouseWheel(new StandardWheelEvent(null, 0, 1)),\n            });\n            this._createArrow({\n                className: 'scra',\n                icon: Codicon.scrollbarButtonDown,\n                top: undefined,\n                left: scrollbarDelta,\n                bottom: arrowDelta,\n                right: undefined,\n                bgWidth: options.verticalScrollbarSize,\n                bgHeight: options.arrowSize,\n                onActivate: () => this._host.onMouseWheel(new StandardWheelEvent(null, 0, -1)),\n            });\n        }\n        this._createSlider(0, Math.floor((options.verticalScrollbarSize - options.verticalSliderSize) / 2), options.verticalSliderSize, undefined);\n    }\n    _updateSlider(sliderSize, sliderPosition) {\n        this.slider.setHeight(sliderSize);\n        this.slider.setTop(sliderPosition);\n    }\n    _renderDomNode(largeSize, smallSize) {\n        this.domNode.setWidth(smallSize);\n        this.domNode.setHeight(largeSize);\n        this.domNode.setRight(0);\n        this.domNode.setTop(0);\n    }\n    onDidScroll(e) {\n        this._shouldRender = this._onElementScrollSize(e.scrollHeight) || this._shouldRender;\n        this._shouldRender = this._onElementScrollPosition(e.scrollTop) || this._shouldRender;\n        this._shouldRender = this._onElementSize(e.height) || this._shouldRender;\n        return this._shouldRender;\n    }\n    _pointerDownRelativePosition(offsetX, offsetY) {\n        return offsetY;\n    }\n    _sliderPointerPosition(e) {\n        return e.pageY;\n    }\n    _sliderOrthogonalPointerPosition(e) {\n        return e.pageX;\n    }\n    _updateScrollbarSize(size) {\n        this.slider.setWidth(size);\n    }\n    writeScrollPosition(target, scrollPosition) {\n        target.scrollTop = scrollPosition;\n    }\n    updateOptions(options) {\n        this.updateScrollbarSize(options.vertical === 2 /* ScrollbarVisibility.Hidden */ ? 0 : options.verticalScrollbarSize);\n        // give priority to vertical scroll bar over horizontal and let it scroll all the way to the bottom\n        this._scrollbarState.setOppositeScrollbarSize(0);\n        this._visibilityController.setVisibility(options.vertical);\n        this._scrollByPage = options.scrollByPage;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getZoomFactor, isChrome } from '../../browser.js';\nimport * as dom from '../../dom.js';\nimport { createFastDomNode } from '../../fastDomNode.js';\nimport { StandardWheelEvent } from '../../mouseEvent.js';\nimport { HorizontalScrollbar } from './horizontalScrollbar.js';\nimport { VerticalScrollbar } from './verticalScrollbar.js';\nimport { Widget } from '../widget.js';\nimport { TimeoutTimer } from '../../../common/async.js';\nimport { Emitter } from '../../../common/event.js';\nimport { dispose } from '../../../common/lifecycle.js';\nimport * as platform from '../../../common/platform.js';\nimport { Scrollable } from '../../../common/scrollable.js';\nimport './media/scrollbars.css';\nconst HIDE_TIMEOUT = 500;\nconst SCROLL_WHEEL_SENSITIVITY = 50;\nconst SCROLL_WHEEL_SMOOTH_SCROLL_ENABLED = true;\nclass MouseWheelClassifierItem {\n    constructor(timestamp, deltaX, deltaY) {\n        this.timestamp = timestamp;\n        this.deltaX = deltaX;\n        this.deltaY = deltaY;\n        this.score = 0;\n    }\n}\nexport class MouseWheelClassifier {\n    constructor() {\n        this._capacity = 5;\n        this._memory = [];\n        this._front = -1;\n        this._rear = -1;\n    }\n    isPhysicalMouseWheel() {\n        if (this._front === -1 && this._rear === -1) {\n            // no elements\n            return false;\n        }\n        // 0.5 * last + 0.25 * 2nd last + 0.125 * 3rd last + ...\n        let remainingInfluence = 1;\n        let score = 0;\n        let iteration = 1;\n        let index = this._rear;\n        do {\n            const influence = (index === this._front ? remainingInfluence : Math.pow(2, -iteration));\n            remainingInfluence -= influence;\n            score += this._memory[index].score * influence;\n            if (index === this._front) {\n                break;\n            }\n            index = (this._capacity + index - 1) % this._capacity;\n            iteration++;\n        } while (true);\n        return (score <= 0.5);\n    }\n    acceptStandardWheelEvent(e) {\n        if (isChrome) {\n            const targetWindow = dom.getWindow(e.browserEvent);\n            const pageZoomFactor = getZoomFactor(targetWindow);\n            // On Chrome, the incoming delta events are multiplied with the OS zoom factor.\n            // The OS zoom factor can be reverse engineered by using the device pixel ratio and the configured zoom factor into account.\n            this.accept(Date.now(), e.deltaX * pageZoomFactor, e.deltaY * pageZoomFactor);\n        }\n        else {\n            this.accept(Date.now(), e.deltaX, e.deltaY);\n        }\n    }\n    accept(timestamp, deltaX, deltaY) {\n        let previousItem = null;\n        const item = new MouseWheelClassifierItem(timestamp, deltaX, deltaY);\n        if (this._front === -1 && this._rear === -1) {\n            this._memory[0] = item;\n            this._front = 0;\n            this._rear = 0;\n        }\n        else {\n            previousItem = this._memory[this._rear];\n            this._rear = (this._rear + 1) % this._capacity;\n            if (this._rear === this._front) {\n                // Drop oldest\n                this._front = (this._front + 1) % this._capacity;\n            }\n            this._memory[this._rear] = item;\n        }\n        item.score = this._computeScore(item, previousItem);\n    }\n    /**\n     * A score between 0 and 1 for `item`.\n     *  - a score towards 0 indicates that the source appears to be a physical mouse wheel\n     *  - a score towards 1 indicates that the source appears to be a touchpad or magic mouse, etc.\n     */\n    _computeScore(item, previousItem) {\n        if (Math.abs(item.deltaX) > 0 && Math.abs(item.deltaY) > 0) {\n            // both axes exercised => definitely not a physical mouse wheel\n            return 1;\n        }\n        let score = 0.5;\n        if (!this._isAlmostInt(item.deltaX) || !this._isAlmostInt(item.deltaY)) {\n            // non-integer deltas => indicator that this is not a physical mouse wheel\n            score += 0.25;\n        }\n        // Non-accelerating scroll => indicator that this is a physical mouse wheel\n        // These can be identified by seeing whether they are the module of one another.\n        if (previousItem) {\n            const absDeltaX = Math.abs(item.deltaX);\n            const absDeltaY = Math.abs(item.deltaY);\n            const absPreviousDeltaX = Math.abs(previousItem.deltaX);\n            const absPreviousDeltaY = Math.abs(previousItem.deltaY);\n            // Min 1 to avoid division by zero, module 1 will still be 0.\n            const minDeltaX = Math.max(Math.min(absDeltaX, absPreviousDeltaX), 1);\n            const minDeltaY = Math.max(Math.min(absDeltaY, absPreviousDeltaY), 1);\n            const maxDeltaX = Math.max(absDeltaX, absPreviousDeltaX);\n            const maxDeltaY = Math.max(absDeltaY, absPreviousDeltaY);\n            const isSameModulo = (maxDeltaX % minDeltaX === 0 && maxDeltaY % minDeltaY === 0);\n            if (isSameModulo) {\n                score -= 0.5;\n            }\n        }\n        return Math.min(Math.max(score, 0), 1);\n    }\n    _isAlmostInt(value) {\n        const delta = Math.abs(Math.round(value) - value);\n        return (delta < 0.01);\n    }\n}\nMouseWheelClassifier.INSTANCE = new MouseWheelClassifier();\nexport class AbstractScrollableElement extends Widget {\n    get options() {\n        return this._options;\n    }\n    constructor(element, options, scrollable) {\n        super();\n        this._onScroll = this._register(new Emitter());\n        this.onScroll = this._onScroll.event;\n        this._onWillScroll = this._register(new Emitter());\n        element.style.overflow = 'hidden';\n        this._options = resolveOptions(options);\n        this._scrollable = scrollable;\n        this._register(this._scrollable.onScroll((e) => {\n            this._onWillScroll.fire(e);\n            this._onDidScroll(e);\n            this._onScroll.fire(e);\n        }));\n        const scrollbarHost = {\n            onMouseWheel: (mouseWheelEvent) => this._onMouseWheel(mouseWheelEvent),\n            onDragStart: () => this._onDragStart(),\n            onDragEnd: () => this._onDragEnd(),\n        };\n        this._verticalScrollbar = this._register(new VerticalScrollbar(this._scrollable, this._options, scrollbarHost));\n        this._horizontalScrollbar = this._register(new HorizontalScrollbar(this._scrollable, this._options, scrollbarHost));\n        this._domNode = document.createElement('div');\n        this._domNode.className = 'monaco-scrollable-element ' + this._options.className;\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.style.position = 'relative';\n        this._domNode.style.overflow = 'hidden';\n        this._domNode.appendChild(element);\n        this._domNode.appendChild(this._horizontalScrollbar.domNode.domNode);\n        this._domNode.appendChild(this._verticalScrollbar.domNode.domNode);\n        if (this._options.useShadows) {\n            this._leftShadowDomNode = createFastDomNode(document.createElement('div'));\n            this._leftShadowDomNode.setClassName('shadow');\n            this._domNode.appendChild(this._leftShadowDomNode.domNode);\n            this._topShadowDomNode = createFastDomNode(document.createElement('div'));\n            this._topShadowDomNode.setClassName('shadow');\n            this._domNode.appendChild(this._topShadowDomNode.domNode);\n            this._topLeftShadowDomNode = createFastDomNode(document.createElement('div'));\n            this._topLeftShadowDomNode.setClassName('shadow');\n            this._domNode.appendChild(this._topLeftShadowDomNode.domNode);\n        }\n        else {\n            this._leftShadowDomNode = null;\n            this._topShadowDomNode = null;\n            this._topLeftShadowDomNode = null;\n        }\n        this._listenOnDomNode = this._options.listenOnDomNode || this._domNode;\n        this._mouseWheelToDispose = [];\n        this._setListeningToMouseWheel(this._options.handleMouseWheel);\n        this.onmouseover(this._listenOnDomNode, (e) => this._onMouseOver(e));\n        this.onmouseleave(this._listenOnDomNode, (e) => this._onMouseLeave(e));\n        this._hideTimeout = this._register(new TimeoutTimer());\n        this._isDragging = false;\n        this._mouseIsOver = false;\n        this._shouldRender = true;\n        this._revealOnScroll = true;\n    }\n    dispose() {\n        this._mouseWheelToDispose = dispose(this._mouseWheelToDispose);\n        super.dispose();\n    }\n    /**\n     * Get the generated 'scrollable' dom node\n     */\n    getDomNode() {\n        return this._domNode;\n    }\n    getOverviewRulerLayoutInfo() {\n        return {\n            parent: this._domNode,\n            insertBefore: this._verticalScrollbar.domNode.domNode,\n        };\n    }\n    /**\n     * Delegate a pointer down event to the vertical scrollbar.\n     * This is to help with clicking somewhere else and having the scrollbar react.\n     */\n    delegateVerticalScrollbarPointerDown(browserEvent) {\n        this._verticalScrollbar.delegatePointerDown(browserEvent);\n    }\n    getScrollDimensions() {\n        return this._scrollable.getScrollDimensions();\n    }\n    setScrollDimensions(dimensions) {\n        this._scrollable.setScrollDimensions(dimensions, false);\n    }\n    /**\n     * Update the class name of the scrollable element.\n     */\n    updateClassName(newClassName) {\n        this._options.className = newClassName;\n        // Defaults are different on Macs\n        if (platform.isMacintosh) {\n            this._options.className += ' mac';\n        }\n        this._domNode.className = 'monaco-scrollable-element ' + this._options.className;\n    }\n    /**\n     * Update configuration options for the scrollbar.\n     */\n    updateOptions(newOptions) {\n        if (typeof newOptions.handleMouseWheel !== 'undefined') {\n            this._options.handleMouseWheel = newOptions.handleMouseWheel;\n            this._setListeningToMouseWheel(this._options.handleMouseWheel);\n        }\n        if (typeof newOptions.mouseWheelScrollSensitivity !== 'undefined') {\n            this._options.mouseWheelScrollSensitivity = newOptions.mouseWheelScrollSensitivity;\n        }\n        if (typeof newOptions.fastScrollSensitivity !== 'undefined') {\n            this._options.fastScrollSensitivity = newOptions.fastScrollSensitivity;\n        }\n        if (typeof newOptions.scrollPredominantAxis !== 'undefined') {\n            this._options.scrollPredominantAxis = newOptions.scrollPredominantAxis;\n        }\n        if (typeof newOptions.horizontal !== 'undefined') {\n            this._options.horizontal = newOptions.horizontal;\n        }\n        if (typeof newOptions.vertical !== 'undefined') {\n            this._options.vertical = newOptions.vertical;\n        }\n        if (typeof newOptions.horizontalScrollbarSize !== 'undefined') {\n            this._options.horizontalScrollbarSize = newOptions.horizontalScrollbarSize;\n        }\n        if (typeof newOptions.verticalScrollbarSize !== 'undefined') {\n            this._options.verticalScrollbarSize = newOptions.verticalScrollbarSize;\n        }\n        if (typeof newOptions.scrollByPage !== 'undefined') {\n            this._options.scrollByPage = newOptions.scrollByPage;\n        }\n        this._horizontalScrollbar.updateOptions(this._options);\n        this._verticalScrollbar.updateOptions(this._options);\n        if (!this._options.lazyRender) {\n            this._render();\n        }\n    }\n    delegateScrollFromMouseWheelEvent(browserEvent) {\n        this._onMouseWheel(new StandardWheelEvent(browserEvent));\n    }\n    // -------------------- mouse wheel scrolling --------------------\n    _setListeningToMouseWheel(shouldListen) {\n        const isListening = (this._mouseWheelToDispose.length > 0);\n        if (isListening === shouldListen) {\n            // No change\n            return;\n        }\n        // Stop listening (if necessary)\n        this._mouseWheelToDispose = dispose(this._mouseWheelToDispose);\n        // Start listening (if necessary)\n        if (shouldListen) {\n            const onMouseWheel = (browserEvent) => {\n                this._onMouseWheel(new StandardWheelEvent(browserEvent));\n            };\n            this._mouseWheelToDispose.push(dom.addDisposableListener(this._listenOnDomNode, dom.EventType.MOUSE_WHEEL, onMouseWheel, { passive: false }));\n        }\n    }\n    _onMouseWheel(e) {\n        var _a;\n        if ((_a = e.browserEvent) === null || _a === void 0 ? void 0 : _a.defaultPrevented) {\n            return;\n        }\n        const classifier = MouseWheelClassifier.INSTANCE;\n        if (SCROLL_WHEEL_SMOOTH_SCROLL_ENABLED) {\n            classifier.acceptStandardWheelEvent(e);\n        }\n        // useful for creating unit tests:\n        // console.log(`${Date.now()}, ${e.deltaY}, ${e.deltaX}`);\n        let didScroll = false;\n        if (e.deltaY || e.deltaX) {\n            let deltaY = e.deltaY * this._options.mouseWheelScrollSensitivity;\n            let deltaX = e.deltaX * this._options.mouseWheelScrollSensitivity;\n            if (this._options.scrollPredominantAxis) {\n                if (this._options.scrollYToX && deltaX + deltaY === 0) {\n                    // when configured to map Y to X and we both see\n                    // no dominant axis and X and Y are competing with\n                    // identical values into opposite directions, we\n                    // ignore the delta as we cannot make a decision then\n                    deltaX = deltaY = 0;\n                }\n                else if (Math.abs(deltaY) >= Math.abs(deltaX)) {\n                    deltaX = 0;\n                }\n                else {\n                    deltaY = 0;\n                }\n            }\n            if (this._options.flipAxes) {\n                [deltaY, deltaX] = [deltaX, deltaY];\n            }\n            // Convert vertical scrolling to horizontal if shift is held, this\n            // is handled at a higher level on Mac\n            const shiftConvert = !platform.isMacintosh && e.browserEvent && e.browserEvent.shiftKey;\n            if ((this._options.scrollYToX || shiftConvert) && !deltaX) {\n                deltaX = deltaY;\n                deltaY = 0;\n            }\n            if (e.browserEvent && e.browserEvent.altKey) {\n                // fastScrolling\n                deltaX = deltaX * this._options.fastScrollSensitivity;\n                deltaY = deltaY * this._options.fastScrollSensitivity;\n            }\n            const futureScrollPosition = this._scrollable.getFutureScrollPosition();\n            let desiredScrollPosition = {};\n            if (deltaY) {\n                const deltaScrollTop = SCROLL_WHEEL_SENSITIVITY * deltaY;\n                // Here we convert values such as -0.3 to -1 or 0.3 to 1, otherwise low speed scrolling will never scroll\n                const desiredScrollTop = futureScrollPosition.scrollTop - (deltaScrollTop < 0 ? Math.floor(deltaScrollTop) : Math.ceil(deltaScrollTop));\n                this._verticalScrollbar.writeScrollPosition(desiredScrollPosition, desiredScrollTop);\n            }\n            if (deltaX) {\n                const deltaScrollLeft = SCROLL_WHEEL_SENSITIVITY * deltaX;\n                // Here we convert values such as -0.3 to -1 or 0.3 to 1, otherwise low speed scrolling will never scroll\n                const desiredScrollLeft = futureScrollPosition.scrollLeft - (deltaScrollLeft < 0 ? Math.floor(deltaScrollLeft) : Math.ceil(deltaScrollLeft));\n                this._horizontalScrollbar.writeScrollPosition(desiredScrollPosition, desiredScrollLeft);\n            }\n            // Check that we are scrolling towards a location which is valid\n            desiredScrollPosition = this._scrollable.validateScrollPosition(desiredScrollPosition);\n            if (futureScrollPosition.scrollLeft !== desiredScrollPosition.scrollLeft || futureScrollPosition.scrollTop !== desiredScrollPosition.scrollTop) {\n                const canPerformSmoothScroll = (SCROLL_WHEEL_SMOOTH_SCROLL_ENABLED\n                    && this._options.mouseWheelSmoothScroll\n                    && classifier.isPhysicalMouseWheel());\n                if (canPerformSmoothScroll) {\n                    this._scrollable.setScrollPositionSmooth(desiredScrollPosition);\n                }\n                else {\n                    this._scrollable.setScrollPositionNow(desiredScrollPosition);\n                }\n                didScroll = true;\n            }\n        }\n        let consumeMouseWheel = didScroll;\n        if (!consumeMouseWheel && this._options.alwaysConsumeMouseWheel) {\n            consumeMouseWheel = true;\n        }\n        if (!consumeMouseWheel && this._options.consumeMouseWheelIfScrollbarIsNeeded && (this._verticalScrollbar.isNeeded() || this._horizontalScrollbar.isNeeded())) {\n            consumeMouseWheel = true;\n        }\n        if (consumeMouseWheel) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n    _onDidScroll(e) {\n        this._shouldRender = this._horizontalScrollbar.onDidScroll(e) || this._shouldRender;\n        this._shouldRender = this._verticalScrollbar.onDidScroll(e) || this._shouldRender;\n        if (this._options.useShadows) {\n            this._shouldRender = true;\n        }\n        if (this._revealOnScroll) {\n            this._reveal();\n        }\n        if (!this._options.lazyRender) {\n            this._render();\n        }\n    }\n    /**\n     * Render / mutate the DOM now.\n     * Should be used together with the ctor option `lazyRender`.\n     */\n    renderNow() {\n        if (!this._options.lazyRender) {\n            throw new Error('Please use `lazyRender` together with `renderNow`!');\n        }\n        this._render();\n    }\n    _render() {\n        if (!this._shouldRender) {\n            return;\n        }\n        this._shouldRender = false;\n        this._horizontalScrollbar.render();\n        this._verticalScrollbar.render();\n        if (this._options.useShadows) {\n            const scrollState = this._scrollable.getCurrentScrollPosition();\n            const enableTop = scrollState.scrollTop > 0;\n            const enableLeft = scrollState.scrollLeft > 0;\n            const leftClassName = (enableLeft ? ' left' : '');\n            const topClassName = (enableTop ? ' top' : '');\n            const topLeftClassName = (enableLeft || enableTop ? ' top-left-corner' : '');\n            this._leftShadowDomNode.setClassName(`shadow${leftClassName}`);\n            this._topShadowDomNode.setClassName(`shadow${topClassName}`);\n            this._topLeftShadowDomNode.setClassName(`shadow${topLeftClassName}${topClassName}${leftClassName}`);\n        }\n    }\n    // -------------------- fade in / fade out --------------------\n    _onDragStart() {\n        this._isDragging = true;\n        this._reveal();\n    }\n    _onDragEnd() {\n        this._isDragging = false;\n        this._hide();\n    }\n    _onMouseLeave(e) {\n        this._mouseIsOver = false;\n        this._hide();\n    }\n    _onMouseOver(e) {\n        this._mouseIsOver = true;\n        this._reveal();\n    }\n    _reveal() {\n        this._verticalScrollbar.beginReveal();\n        this._horizontalScrollbar.beginReveal();\n        this._scheduleHide();\n    }\n    _hide() {\n        if (!this._mouseIsOver && !this._isDragging) {\n            this._verticalScrollbar.beginHide();\n            this._horizontalScrollbar.beginHide();\n        }\n    }\n    _scheduleHide() {\n        if (!this._mouseIsOver && !this._isDragging) {\n            this._hideTimeout.cancelAndSet(() => this._hide(), HIDE_TIMEOUT);\n        }\n    }\n}\nexport class ScrollableElement extends AbstractScrollableElement {\n    constructor(element, options) {\n        options = options || {};\n        options.mouseWheelSmoothScroll = false;\n        const scrollable = new Scrollable({\n            forceIntegerValues: true,\n            smoothScrollDuration: 0,\n            scheduleAtNextAnimationFrame: (callback) => dom.scheduleAtNextAnimationFrame(dom.getWindow(element), callback)\n        });\n        super(element, options, scrollable);\n        this._register(scrollable);\n    }\n    setScrollPosition(update) {\n        this._scrollable.setScrollPositionNow(update);\n    }\n}\nexport class SmoothScrollableElement extends AbstractScrollableElement {\n    constructor(element, options, scrollable) {\n        super(element, options, scrollable);\n    }\n    setScrollPosition(update) {\n        if (update.reuseAnimation) {\n            this._scrollable.setScrollPositionSmooth(update, update.reuseAnimation);\n        }\n        else {\n            this._scrollable.setScrollPositionNow(update);\n        }\n    }\n    getScrollPosition() {\n        return this._scrollable.getCurrentScrollPosition();\n    }\n}\nexport class DomScrollableElement extends AbstractScrollableElement {\n    constructor(element, options) {\n        options = options || {};\n        options.mouseWheelSmoothScroll = false;\n        const scrollable = new Scrollable({\n            forceIntegerValues: false, // See https://github.com/microsoft/vscode/issues/139877\n            smoothScrollDuration: 0,\n            scheduleAtNextAnimationFrame: (callback) => dom.scheduleAtNextAnimationFrame(dom.getWindow(element), callback)\n        });\n        super(element, options, scrollable);\n        this._register(scrollable);\n        this._element = element;\n        this._register(this.onScroll((e) => {\n            if (e.scrollTopChanged) {\n                this._element.scrollTop = e.scrollTop;\n            }\n            if (e.scrollLeftChanged) {\n                this._element.scrollLeft = e.scrollLeft;\n            }\n        }));\n        this.scanDomNode();\n    }\n    setScrollPosition(update) {\n        this._scrollable.setScrollPositionNow(update);\n    }\n    getScrollPosition() {\n        return this._scrollable.getCurrentScrollPosition();\n    }\n    scanDomNode() {\n        // width, scrollLeft, scrollWidth, height, scrollTop, scrollHeight\n        this.setScrollDimensions({\n            width: this._element.clientWidth,\n            scrollWidth: this._element.scrollWidth,\n            height: this._element.clientHeight,\n            scrollHeight: this._element.scrollHeight\n        });\n        this.setScrollPosition({\n            scrollLeft: this._element.scrollLeft,\n            scrollTop: this._element.scrollTop,\n        });\n    }\n}\nfunction resolveOptions(opts) {\n    const result = {\n        lazyRender: (typeof opts.lazyRender !== 'undefined' ? opts.lazyRender : false),\n        className: (typeof opts.className !== 'undefined' ? opts.className : ''),\n        useShadows: (typeof opts.useShadows !== 'undefined' ? opts.useShadows : true),\n        handleMouseWheel: (typeof opts.handleMouseWheel !== 'undefined' ? opts.handleMouseWheel : true),\n        flipAxes: (typeof opts.flipAxes !== 'undefined' ? opts.flipAxes : false),\n        consumeMouseWheelIfScrollbarIsNeeded: (typeof opts.consumeMouseWheelIfScrollbarIsNeeded !== 'undefined' ? opts.consumeMouseWheelIfScrollbarIsNeeded : false),\n        alwaysConsumeMouseWheel: (typeof opts.alwaysConsumeMouseWheel !== 'undefined' ? opts.alwaysConsumeMouseWheel : false),\n        scrollYToX: (typeof opts.scrollYToX !== 'undefined' ? opts.scrollYToX : false),\n        mouseWheelScrollSensitivity: (typeof opts.mouseWheelScrollSensitivity !== 'undefined' ? opts.mouseWheelScrollSensitivity : 1),\n        fastScrollSensitivity: (typeof opts.fastScrollSensitivity !== 'undefined' ? opts.fastScrollSensitivity : 5),\n        scrollPredominantAxis: (typeof opts.scrollPredominantAxis !== 'undefined' ? opts.scrollPredominantAxis : true),\n        mouseWheelSmoothScroll: (typeof opts.mouseWheelSmoothScroll !== 'undefined' ? opts.mouseWheelSmoothScroll : true),\n        arrowSize: (typeof opts.arrowSize !== 'undefined' ? opts.arrowSize : 11),\n        listenOnDomNode: (typeof opts.listenOnDomNode !== 'undefined' ? opts.listenOnDomNode : null),\n        horizontal: (typeof opts.horizontal !== 'undefined' ? opts.horizontal : 1 /* ScrollbarVisibility.Auto */),\n        horizontalScrollbarSize: (typeof opts.horizontalScrollbarSize !== 'undefined' ? opts.horizontalScrollbarSize : 10),\n        horizontalSliderSize: (typeof opts.horizontalSliderSize !== 'undefined' ? opts.horizontalSliderSize : 0),\n        horizontalHasArrows: (typeof opts.horizontalHasArrows !== 'undefined' ? opts.horizontalHasArrows : false),\n        vertical: (typeof opts.vertical !== 'undefined' ? opts.vertical : 1 /* ScrollbarVisibility.Auto */),\n        verticalScrollbarSize: (typeof opts.verticalScrollbarSize !== 'undefined' ? opts.verticalScrollbarSize : 10),\n        verticalHasArrows: (typeof opts.verticalHasArrows !== 'undefined' ? opts.verticalHasArrows : false),\n        verticalSliderSize: (typeof opts.verticalSliderSize !== 'undefined' ? opts.verticalSliderSize : 0),\n        scrollByPage: (typeof opts.scrollByPage !== 'undefined' ? opts.scrollByPage : false)\n    };\n    result.horizontalSliderSize = (typeof opts.horizontalSliderSize !== 'undefined' ? opts.horizontalSliderSize : result.horizontalScrollbarSize);\n    result.verticalSliderSize = (typeof opts.verticalSliderSize !== 'undefined' ? opts.verticalSliderSize : result.verticalScrollbarSize);\n    // Defaults are different on Macs\n    if (platform.isMacintosh) {\n        result.className += ' mac';\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * The minimal size of the slider (such that it can still be clickable) -- it is artificially enlarged.\n */\nconst MINIMUM_SLIDER_SIZE = 20;\nexport class ScrollbarState {\n    constructor(arrowSize, scrollbarSize, oppositeScrollbarSize, visibleSize, scrollSize, scrollPosition) {\n        this._scrollbarSize = Math.round(scrollbarSize);\n        this._oppositeScrollbarSize = Math.round(oppositeScrollbarSize);\n        this._arrowSize = Math.round(arrowSize);\n        this._visibleSize = visibleSize;\n        this._scrollSize = scrollSize;\n        this._scrollPosition = scrollPosition;\n        this._computedAvailableSize = 0;\n        this._computedIsNeeded = false;\n        this._computedSliderSize = 0;\n        this._computedSliderRatio = 0;\n        this._computedSliderPosition = 0;\n        this._refreshComputedValues();\n    }\n    clone() {\n        return new ScrollbarState(this._arrowSize, this._scrollbarSize, this._oppositeScrollbarSize, this._visibleSize, this._scrollSize, this._scrollPosition);\n    }\n    setVisibleSize(visibleSize) {\n        const iVisibleSize = Math.round(visibleSize);\n        if (this._visibleSize !== iVisibleSize) {\n            this._visibleSize = iVisibleSize;\n            this._refreshComputedValues();\n            return true;\n        }\n        return false;\n    }\n    setScrollSize(scrollSize) {\n        const iScrollSize = Math.round(scrollSize);\n        if (this._scrollSize !== iScrollSize) {\n            this._scrollSize = iScrollSize;\n            this._refreshComputedValues();\n            return true;\n        }\n        return false;\n    }\n    setScrollPosition(scrollPosition) {\n        const iScrollPosition = Math.round(scrollPosition);\n        if (this._scrollPosition !== iScrollPosition) {\n            this._scrollPosition = iScrollPosition;\n            this._refreshComputedValues();\n            return true;\n        }\n        return false;\n    }\n    setScrollbarSize(scrollbarSize) {\n        this._scrollbarSize = Math.round(scrollbarSize);\n    }\n    setOppositeScrollbarSize(oppositeScrollbarSize) {\n        this._oppositeScrollbarSize = Math.round(oppositeScrollbarSize);\n    }\n    static _computeValues(oppositeScrollbarSize, arrowSize, visibleSize, scrollSize, scrollPosition) {\n        const computedAvailableSize = Math.max(0, visibleSize - oppositeScrollbarSize);\n        const computedRepresentableSize = Math.max(0, computedAvailableSize - 2 * arrowSize);\n        const computedIsNeeded = (scrollSize > 0 && scrollSize > visibleSize);\n        if (!computedIsNeeded) {\n            // There is no need for a slider\n            return {\n                computedAvailableSize: Math.round(computedAvailableSize),\n                computedIsNeeded: computedIsNeeded,\n                computedSliderSize: Math.round(computedRepresentableSize),\n                computedSliderRatio: 0,\n                computedSliderPosition: 0,\n            };\n        }\n        // We must artificially increase the size of the slider if needed, since the slider would be too small to grab with the mouse otherwise\n        const computedSliderSize = Math.round(Math.max(MINIMUM_SLIDER_SIZE, Math.floor(visibleSize * computedRepresentableSize / scrollSize)));\n        // The slider can move from 0 to `computedRepresentableSize` - `computedSliderSize`\n        // in the same way `scrollPosition` can move from 0 to `scrollSize` - `visibleSize`.\n        const computedSliderRatio = (computedRepresentableSize - computedSliderSize) / (scrollSize - visibleSize);\n        const computedSliderPosition = (scrollPosition * computedSliderRatio);\n        return {\n            computedAvailableSize: Math.round(computedAvailableSize),\n            computedIsNeeded: computedIsNeeded,\n            computedSliderSize: Math.round(computedSliderSize),\n            computedSliderRatio: computedSliderRatio,\n            computedSliderPosition: Math.round(computedSliderPosition),\n        };\n    }\n    _refreshComputedValues() {\n        const r = ScrollbarState._computeValues(this._oppositeScrollbarSize, this._arrowSize, this._visibleSize, this._scrollSize, this._scrollPosition);\n        this._computedAvailableSize = r.computedAvailableSize;\n        this._computedIsNeeded = r.computedIsNeeded;\n        this._computedSliderSize = r.computedSliderSize;\n        this._computedSliderRatio = r.computedSliderRatio;\n        this._computedSliderPosition = r.computedSliderPosition;\n    }\n    getArrowSize() {\n        return this._arrowSize;\n    }\n    getScrollPosition() {\n        return this._scrollPosition;\n    }\n    getRectangleLargeSize() {\n        return this._computedAvailableSize;\n    }\n    getRectangleSmallSize() {\n        return this._scrollbarSize;\n    }\n    isNeeded() {\n        return this._computedIsNeeded;\n    }\n    getSliderSize() {\n        return this._computedSliderSize;\n    }\n    getSliderPosition() {\n        return this._computedSliderPosition;\n    }\n    /**\n     * Compute a desired `scrollPosition` such that `offset` ends up in the center of the slider.\n     * `offset` is based on the same coordinate system as the `sliderPosition`.\n     */\n    getDesiredScrollPositionFromOffset(offset) {\n        if (!this._computedIsNeeded) {\n            // no need for a slider\n            return 0;\n        }\n        const desiredSliderPosition = offset - this._arrowSize - this._computedSliderSize / 2;\n        return Math.round(desiredSliderPosition / this._computedSliderRatio);\n    }\n    /**\n     * Compute a desired `scrollPosition` from if offset is before or after the slider position.\n     * If offset is before slider, treat as a page up (or left).  If after, page down (or right).\n     * `offset` and `_computedSliderPosition` are based on the same coordinate system.\n     * `_visibleSize` corresponds to a \"page\" of lines in the returned coordinate system.\n     */\n    getDesiredScrollPositionFromOffsetPaged(offset) {\n        if (!this._computedIsNeeded) {\n            // no need for a slider\n            return 0;\n        }\n        const correctedOffset = offset - this._arrowSize; // compensate if has arrows\n        let desiredScrollPosition = this._scrollPosition;\n        if (correctedOffset < this._computedSliderPosition) {\n            desiredScrollPosition -= this._visibleSize; // page up/left\n        }\n        else {\n            desiredScrollPosition += this._visibleSize; // page down/right\n        }\n        return desiredScrollPosition;\n    }\n    /**\n     * Compute a desired `scrollPosition` such that the slider moves by `delta`.\n     */\n    getDesiredScrollPositionFromDelta(delta) {\n        if (!this._computedIsNeeded) {\n            // no need for a slider\n            return 0;\n        }\n        const desiredSliderPosition = this._computedSliderPosition + delta;\n        return Math.round(desiredSliderPosition / this._computedSliderRatio);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { renderMarkdown } from '../../markdownRenderer.js';\nimport { getBaseLayerHoverDelegate } from '../hover/hoverDelegate2.js';\nimport { getDefaultHoverDelegate } from '../hover/hoverDelegateFactory.js';\nimport { List } from '../list/listWidget.js';\nimport * as arrays from '../../../common/arrays.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { KeyCodeUtils } from '../../../common/keyCodes.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport { isMacintosh } from '../../../common/platform.js';\nimport './selectBoxCustom.css';\nimport { localize } from '../../../../nls.js';\nconst $ = dom.$;\nconst SELECT_OPTION_ENTRY_TEMPLATE_ID = 'selectOption.entry.template';\nclass SelectListRenderer {\n    get templateId() { return SELECT_OPTION_ENTRY_TEMPLATE_ID; }\n    renderTemplate(container) {\n        const data = Object.create(null);\n        data.root = container;\n        data.text = dom.append(container, $('.option-text'));\n        data.detail = dom.append(container, $('.option-detail'));\n        data.decoratorRight = dom.append(container, $('.option-decorator-right'));\n        return data;\n    }\n    renderElement(element, index, templateData) {\n        const data = templateData;\n        const text = element.text;\n        const detail = element.detail;\n        const decoratorRight = element.decoratorRight;\n        const isDisabled = element.isDisabled;\n        data.text.textContent = text;\n        data.detail.textContent = !!detail ? detail : '';\n        data.decoratorRight.innerText = !!decoratorRight ? decoratorRight : '';\n        // pseudo-select disabled option\n        if (isDisabled) {\n            data.root.classList.add('option-disabled');\n        }\n        else {\n            // Make sure we do class removal from prior template rendering\n            data.root.classList.remove('option-disabled');\n        }\n    }\n    disposeTemplate(_templateData) {\n        // noop\n    }\n}\nexport class SelectBoxList extends Disposable {\n    constructor(options, selected, contextViewProvider, styles, selectBoxOptions) {\n        super();\n        this.options = [];\n        this._currentSelection = 0;\n        this._hasDetails = false;\n        this._skipLayout = false;\n        this._sticky = false; // for dev purposes only\n        this._isVisible = false;\n        this.styles = styles;\n        this.selectBoxOptions = selectBoxOptions || Object.create(null);\n        if (typeof this.selectBoxOptions.minBottomMargin !== 'number') {\n            this.selectBoxOptions.minBottomMargin = SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_BOTTOM_MARGIN;\n        }\n        else if (this.selectBoxOptions.minBottomMargin < 0) {\n            this.selectBoxOptions.minBottomMargin = 0;\n        }\n        this.selectElement = document.createElement('select');\n        // Use custom CSS vars for padding calculation\n        this.selectElement.className = 'monaco-select-box monaco-select-box-dropdown-padding';\n        if (typeof this.selectBoxOptions.ariaLabel === 'string') {\n            this.selectElement.setAttribute('aria-label', this.selectBoxOptions.ariaLabel);\n        }\n        if (typeof this.selectBoxOptions.ariaDescription === 'string') {\n            this.selectElement.setAttribute('aria-description', this.selectBoxOptions.ariaDescription);\n        }\n        this._onDidSelect = new Emitter();\n        this._register(this._onDidSelect);\n        this.registerListeners();\n        this.constructSelectDropDown(contextViewProvider);\n        this.selected = selected || 0;\n        if (options) {\n            this.setOptions(options, selected);\n        }\n        this.initStyleSheet();\n    }\n    setTitle(title) {\n        if (!this._hover && title) {\n            this._hover = this._register(getBaseLayerHoverDelegate().setupUpdatableHover(getDefaultHoverDelegate('mouse'), this.selectElement, title));\n        }\n        else if (this._hover) {\n            this._hover.update(title);\n        }\n    }\n    // IDelegate - List renderer\n    getHeight() {\n        return 22;\n    }\n    getTemplateId() {\n        return SELECT_OPTION_ENTRY_TEMPLATE_ID;\n    }\n    constructSelectDropDown(contextViewProvider) {\n        // SetUp ContextView container to hold select Dropdown\n        this.contextViewProvider = contextViewProvider;\n        this.selectDropDownContainer = dom.$('.monaco-select-box-dropdown-container');\n        // Use custom CSS vars for padding calculation (shared with parent select)\n        this.selectDropDownContainer.classList.add('monaco-select-box-dropdown-padding');\n        // Setup container for select option details\n        this.selectionDetailsPane = dom.append(this.selectDropDownContainer, $('.select-box-details-pane'));\n        // Create span flex box item/div we can measure and control\n        const widthControlOuterDiv = dom.append(this.selectDropDownContainer, $('.select-box-dropdown-container-width-control'));\n        const widthControlInnerDiv = dom.append(widthControlOuterDiv, $('.width-control-div'));\n        this.widthControlElement = document.createElement('span');\n        this.widthControlElement.className = 'option-text-width-control';\n        dom.append(widthControlInnerDiv, this.widthControlElement);\n        // Always default to below position\n        this._dropDownPosition = 0 /* AnchorPosition.BELOW */;\n        // Inline stylesheet for themes\n        this.styleElement = dom.createStyleSheet(this.selectDropDownContainer);\n        // Prevent dragging of dropdown #114329\n        this.selectDropDownContainer.setAttribute('draggable', 'true');\n        this._register(dom.addDisposableListener(this.selectDropDownContainer, dom.EventType.DRAG_START, (e) => {\n            dom.EventHelper.stop(e, true);\n        }));\n    }\n    registerListeners() {\n        // Parent native select keyboard listeners\n        this._register(dom.addStandardDisposableListener(this.selectElement, 'change', (e) => {\n            this.selected = e.target.selectedIndex;\n            this._onDidSelect.fire({\n                index: e.target.selectedIndex,\n                selected: e.target.value\n            });\n            if (!!this.options[this.selected] && !!this.options[this.selected].text) {\n                this.setTitle(this.options[this.selected].text);\n            }\n        }));\n        // Have to implement both keyboard and mouse controllers to handle disabled options\n        // Intercept mouse events to override normal select actions on parents\n        this._register(dom.addDisposableListener(this.selectElement, dom.EventType.CLICK, (e) => {\n            dom.EventHelper.stop(e);\n            if (this._isVisible) {\n                this.hideSelectDropDown(true);\n            }\n            else {\n                this.showSelectDropDown();\n            }\n        }));\n        this._register(dom.addDisposableListener(this.selectElement, dom.EventType.MOUSE_DOWN, (e) => {\n            dom.EventHelper.stop(e);\n        }));\n        // Intercept touch events\n        // The following implementation is slightly different from the mouse event handlers above.\n        // Use the following helper variable, otherwise the list flickers.\n        let listIsVisibleOnTouchStart;\n        this._register(dom.addDisposableListener(this.selectElement, 'touchstart', (e) => {\n            listIsVisibleOnTouchStart = this._isVisible;\n        }));\n        this._register(dom.addDisposableListener(this.selectElement, 'touchend', (e) => {\n            dom.EventHelper.stop(e);\n            if (listIsVisibleOnTouchStart) {\n                this.hideSelectDropDown(true);\n            }\n            else {\n                this.showSelectDropDown();\n            }\n        }));\n        // Intercept keyboard handling\n        this._register(dom.addDisposableListener(this.selectElement, dom.EventType.KEY_DOWN, (e) => {\n            const event = new StandardKeyboardEvent(e);\n            let showDropDown = false;\n            // Create and drop down select list on keyboard select\n            if (isMacintosh) {\n                if (event.keyCode === 18 /* KeyCode.DownArrow */ || event.keyCode === 16 /* KeyCode.UpArrow */ || event.keyCode === 10 /* KeyCode.Space */ || event.keyCode === 3 /* KeyCode.Enter */) {\n                    showDropDown = true;\n                }\n            }\n            else {\n                if (event.keyCode === 18 /* KeyCode.DownArrow */ && event.altKey || event.keyCode === 16 /* KeyCode.UpArrow */ && event.altKey || event.keyCode === 10 /* KeyCode.Space */ || event.keyCode === 3 /* KeyCode.Enter */) {\n                    showDropDown = true;\n                }\n            }\n            if (showDropDown) {\n                this.showSelectDropDown();\n                dom.EventHelper.stop(e, true);\n            }\n        }));\n    }\n    get onDidSelect() {\n        return this._onDidSelect.event;\n    }\n    setOptions(options, selected) {\n        if (!arrays.equals(this.options, options)) {\n            this.options = options;\n            this.selectElement.options.length = 0;\n            this._hasDetails = false;\n            this._cachedMaxDetailsHeight = undefined;\n            this.options.forEach((option, index) => {\n                this.selectElement.add(this.createOption(option.text, index, option.isDisabled));\n                if (typeof option.description === 'string') {\n                    this._hasDetails = true;\n                }\n            });\n        }\n        if (selected !== undefined) {\n            this.select(selected);\n            // Set current = selected since this is not necessarily a user exit\n            this._currentSelection = this.selected;\n        }\n    }\n    setOptionsList() {\n        var _a;\n        // Mirror options in drop-down\n        // Populate select list for non-native select mode\n        (_a = this.selectList) === null || _a === void 0 ? void 0 : _a.splice(0, this.selectList.length, this.options);\n    }\n    select(index) {\n        if (index >= 0 && index < this.options.length) {\n            this.selected = index;\n        }\n        else if (index > this.options.length - 1) {\n            // Adjust index to end of list\n            // This could make client out of sync with the select\n            this.select(this.options.length - 1);\n        }\n        else if (this.selected < 0) {\n            this.selected = 0;\n        }\n        this.selectElement.selectedIndex = this.selected;\n        if (!!this.options[this.selected] && !!this.options[this.selected].text) {\n            this.setTitle(this.options[this.selected].text);\n        }\n    }\n    focus() {\n        if (this.selectElement) {\n            this.selectElement.tabIndex = 0;\n            this.selectElement.focus();\n        }\n    }\n    blur() {\n        if (this.selectElement) {\n            this.selectElement.tabIndex = -1;\n            this.selectElement.blur();\n        }\n    }\n    setFocusable(focusable) {\n        this.selectElement.tabIndex = focusable ? 0 : -1;\n    }\n    render(container) {\n        this.container = container;\n        container.classList.add('select-container');\n        container.appendChild(this.selectElement);\n        this.styleSelectElement();\n    }\n    initStyleSheet() {\n        const content = [];\n        // Style non-native select mode\n        if (this.styles.listFocusBackground) {\n            content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.focused { background-color: ${this.styles.listFocusBackground} !important; }`);\n        }\n        if (this.styles.listFocusForeground) {\n            content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.focused { color: ${this.styles.listFocusForeground} !important; }`);\n        }\n        if (this.styles.decoratorRightForeground) {\n            content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row:not(.focused) .option-decorator-right { color: ${this.styles.decoratorRightForeground}; }`);\n        }\n        if (this.styles.selectBackground && this.styles.selectBorder && this.styles.selectBorder !== this.styles.selectBackground) {\n            content.push(`.monaco-select-box-dropdown-container { border: 1px solid ${this.styles.selectBorder} } `);\n            content.push(`.monaco-select-box-dropdown-container > .select-box-details-pane.border-top { border-top: 1px solid ${this.styles.selectBorder} } `);\n            content.push(`.monaco-select-box-dropdown-container > .select-box-details-pane.border-bottom { border-bottom: 1px solid ${this.styles.selectBorder} } `);\n        }\n        else if (this.styles.selectListBorder) {\n            content.push(`.monaco-select-box-dropdown-container > .select-box-details-pane.border-top { border-top: 1px solid ${this.styles.selectListBorder} } `);\n            content.push(`.monaco-select-box-dropdown-container > .select-box-details-pane.border-bottom { border-bottom: 1px solid ${this.styles.selectListBorder} } `);\n        }\n        // Hover foreground - ignore for disabled options\n        if (this.styles.listHoverForeground) {\n            content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row:not(.option-disabled):not(.focused):hover { color: ${this.styles.listHoverForeground} !important; }`);\n        }\n        // Hover background - ignore for disabled options\n        if (this.styles.listHoverBackground) {\n            content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row:not(.option-disabled):not(.focused):hover { background-color: ${this.styles.listHoverBackground} !important; }`);\n        }\n        // Match quick input outline styles - ignore for disabled options\n        if (this.styles.listFocusOutline) {\n            content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.focused { outline: 1.6px dotted ${this.styles.listFocusOutline} !important; outline-offset: -1.6px !important; }`);\n        }\n        if (this.styles.listHoverOutline) {\n            content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row:not(.option-disabled):not(.focused):hover { outline: 1.6px dashed ${this.styles.listHoverOutline} !important; outline-offset: -1.6px !important; }`);\n        }\n        // Clear list styles on focus and on hover for disabled options\n        content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.option-disabled.focused { background-color: transparent !important; color: inherit !important; outline: none !important; }`);\n        content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.option-disabled:hover { background-color: transparent !important; color: inherit !important; outline: none !important; }`);\n        this.styleElement.textContent = content.join('\\n');\n    }\n    styleSelectElement() {\n        var _a, _b, _c;\n        const background = (_a = this.styles.selectBackground) !== null && _a !== void 0 ? _a : '';\n        const foreground = (_b = this.styles.selectForeground) !== null && _b !== void 0 ? _b : '';\n        const border = (_c = this.styles.selectBorder) !== null && _c !== void 0 ? _c : '';\n        this.selectElement.style.backgroundColor = background;\n        this.selectElement.style.color = foreground;\n        this.selectElement.style.borderColor = border;\n    }\n    styleList() {\n        var _a, _b;\n        const background = (_a = this.styles.selectBackground) !== null && _a !== void 0 ? _a : '';\n        const listBackground = dom.asCssValueWithDefault(this.styles.selectListBackground, background);\n        this.selectDropDownListContainer.style.backgroundColor = listBackground;\n        this.selectionDetailsPane.style.backgroundColor = listBackground;\n        const optionsBorder = (_b = this.styles.focusBorder) !== null && _b !== void 0 ? _b : '';\n        this.selectDropDownContainer.style.outlineColor = optionsBorder;\n        this.selectDropDownContainer.style.outlineOffset = '-1px';\n        this.selectList.style(this.styles);\n    }\n    createOption(value, index, disabled) {\n        const option = document.createElement('option');\n        option.value = value;\n        option.text = value;\n        option.disabled = !!disabled;\n        return option;\n    }\n    // ContextView dropdown methods\n    showSelectDropDown() {\n        this.selectionDetailsPane.innerText = '';\n        if (!this.contextViewProvider || this._isVisible) {\n            return;\n        }\n        // Lazily create and populate list only at open, moved from constructor\n        this.createSelectList(this.selectDropDownContainer);\n        this.setOptionsList();\n        // This allows us to flip the position based on measurement\n        // Set drop-down position above/below from required height and margins\n        // If pre-layout cannot fit at least one option do not show drop-down\n        this.contextViewProvider.showContextView({\n            getAnchor: () => this.selectElement,\n            render: (container) => this.renderSelectDropDown(container, true),\n            layout: () => {\n                this.layoutSelectDropDown();\n            },\n            onHide: () => {\n                this.selectDropDownContainer.classList.remove('visible');\n                this.selectElement.classList.remove('synthetic-focus');\n            },\n            anchorPosition: this._dropDownPosition\n        }, this.selectBoxOptions.optionsAsChildren ? this.container : undefined);\n        // Hide so we can relay out\n        this._isVisible = true;\n        this.hideSelectDropDown(false);\n        this.contextViewProvider.showContextView({\n            getAnchor: () => this.selectElement,\n            render: (container) => this.renderSelectDropDown(container),\n            layout: () => this.layoutSelectDropDown(),\n            onHide: () => {\n                this.selectDropDownContainer.classList.remove('visible');\n                this.selectElement.classList.remove('synthetic-focus');\n            },\n            anchorPosition: this._dropDownPosition\n        }, this.selectBoxOptions.optionsAsChildren ? this.container : undefined);\n        // Track initial selection the case user escape, blur\n        this._currentSelection = this.selected;\n        this._isVisible = true;\n        this.selectElement.setAttribute('aria-expanded', 'true');\n    }\n    hideSelectDropDown(focusSelect) {\n        if (!this.contextViewProvider || !this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        this.selectElement.setAttribute('aria-expanded', 'false');\n        if (focusSelect) {\n            this.selectElement.focus();\n        }\n        this.contextViewProvider.hideContextView();\n    }\n    renderSelectDropDown(container, preLayoutPosition) {\n        container.appendChild(this.selectDropDownContainer);\n        // Pre-Layout allows us to change position\n        this.layoutSelectDropDown(preLayoutPosition);\n        return {\n            dispose: () => {\n                // contextView will dispose itself if moving from one View to another\n                try {\n                    container.removeChild(this.selectDropDownContainer); // remove to take out the CSS rules we add\n                }\n                catch (error) {\n                    // Ignore, removed already by change of focus\n                }\n            }\n        };\n    }\n    // Iterate over detailed descriptions, find max height\n    measureMaxDetailsHeight() {\n        let maxDetailsPaneHeight = 0;\n        this.options.forEach((_option, index) => {\n            this.updateDetail(index);\n            if (this.selectionDetailsPane.offsetHeight > maxDetailsPaneHeight) {\n                maxDetailsPaneHeight = this.selectionDetailsPane.offsetHeight;\n            }\n        });\n        return maxDetailsPaneHeight;\n    }\n    layoutSelectDropDown(preLayoutPosition) {\n        // Avoid recursion from layout called in onListFocus\n        if (this._skipLayout) {\n            return false;\n        }\n        // Layout ContextView drop down select list and container\n        // Have to manage our vertical overflow, sizing, position below or above\n        // Position has to be determined and set prior to contextView instantiation\n        if (this.selectList) {\n            // Make visible to enable measurements\n            this.selectDropDownContainer.classList.add('visible');\n            const window = dom.getWindow(this.selectElement);\n            const selectPosition = dom.getDomNodePagePosition(this.selectElement);\n            const styles = dom.getWindow(this.selectElement).getComputedStyle(this.selectElement);\n            const verticalPadding = parseFloat(styles.getPropertyValue('--dropdown-padding-top')) + parseFloat(styles.getPropertyValue('--dropdown-padding-bottom'));\n            const maxSelectDropDownHeightBelow = (window.innerHeight - selectPosition.top - selectPosition.height - (this.selectBoxOptions.minBottomMargin || 0));\n            const maxSelectDropDownHeightAbove = (selectPosition.top - SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN);\n            // Determine optimal width - min(longest option), opt(parent select, excluding margins), max(ContextView controlled)\n            const selectWidth = this.selectElement.offsetWidth;\n            const selectMinWidth = this.setWidthControlElement(this.widthControlElement);\n            const selectOptimalWidth = Math.max(selectMinWidth, Math.round(selectWidth)).toString() + 'px';\n            this.selectDropDownContainer.style.width = selectOptimalWidth;\n            // Get initial list height and determine space above and below\n            this.selectList.getHTMLElement().style.height = '';\n            this.selectList.layout();\n            let listHeight = this.selectList.contentHeight;\n            if (this._hasDetails && this._cachedMaxDetailsHeight === undefined) {\n                this._cachedMaxDetailsHeight = this.measureMaxDetailsHeight();\n            }\n            const maxDetailsPaneHeight = this._hasDetails ? this._cachedMaxDetailsHeight : 0;\n            const minRequiredDropDownHeight = listHeight + verticalPadding + maxDetailsPaneHeight;\n            const maxVisibleOptionsBelow = ((Math.floor((maxSelectDropDownHeightBelow - verticalPadding - maxDetailsPaneHeight) / this.getHeight())));\n            const maxVisibleOptionsAbove = ((Math.floor((maxSelectDropDownHeightAbove - verticalPadding - maxDetailsPaneHeight) / this.getHeight())));\n            // If we are only doing pre-layout check/adjust position only\n            // Calculate vertical space available, flip up if insufficient\n            // Use reflected padding on parent select, ContextView style\n            // properties not available before DOM attachment\n            if (preLayoutPosition) {\n                // Check if select moved out of viewport , do not open\n                // If at least one option cannot be shown, don't open the drop-down or hide/remove if open\n                if ((selectPosition.top + selectPosition.height) > (window.innerHeight - 22)\n                    || selectPosition.top < SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN\n                    || ((maxVisibleOptionsBelow < 1) && (maxVisibleOptionsAbove < 1))) {\n                    // Indicate we cannot open\n                    return false;\n                }\n                // Determine if we have to flip up\n                // Always show complete list items - never more than Max available vertical height\n                if (maxVisibleOptionsBelow < SelectBoxList.DEFAULT_MINIMUM_VISIBLE_OPTIONS\n                    && maxVisibleOptionsAbove > maxVisibleOptionsBelow\n                    && this.options.length > maxVisibleOptionsBelow) {\n                    this._dropDownPosition = 1 /* AnchorPosition.ABOVE */;\n                    this.selectDropDownContainer.removeChild(this.selectDropDownListContainer);\n                    this.selectDropDownContainer.removeChild(this.selectionDetailsPane);\n                    this.selectDropDownContainer.appendChild(this.selectionDetailsPane);\n                    this.selectDropDownContainer.appendChild(this.selectDropDownListContainer);\n                    this.selectionDetailsPane.classList.remove('border-top');\n                    this.selectionDetailsPane.classList.add('border-bottom');\n                }\n                else {\n                    this._dropDownPosition = 0 /* AnchorPosition.BELOW */;\n                    this.selectDropDownContainer.removeChild(this.selectDropDownListContainer);\n                    this.selectDropDownContainer.removeChild(this.selectionDetailsPane);\n                    this.selectDropDownContainer.appendChild(this.selectDropDownListContainer);\n                    this.selectDropDownContainer.appendChild(this.selectionDetailsPane);\n                    this.selectionDetailsPane.classList.remove('border-bottom');\n                    this.selectionDetailsPane.classList.add('border-top');\n                }\n                // Do full layout on showSelectDropDown only\n                return true;\n            }\n            // Check if select out of viewport or cutting into status bar\n            if ((selectPosition.top + selectPosition.height) > (window.innerHeight - 22)\n                || selectPosition.top < SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN\n                || (this._dropDownPosition === 0 /* AnchorPosition.BELOW */ && maxVisibleOptionsBelow < 1)\n                || (this._dropDownPosition === 1 /* AnchorPosition.ABOVE */ && maxVisibleOptionsAbove < 1)) {\n                // Cannot properly layout, close and hide\n                this.hideSelectDropDown(true);\n                return false;\n            }\n            // SetUp list dimensions and layout - account for container padding\n            // Use position to check above or below available space\n            if (this._dropDownPosition === 0 /* AnchorPosition.BELOW */) {\n                if (this._isVisible && maxVisibleOptionsBelow + maxVisibleOptionsAbove < 1) {\n                    // If drop-down is visible, must be doing a DOM re-layout, hide since we don't fit\n                    // Hide drop-down, hide contextview, focus on parent select\n                    this.hideSelectDropDown(true);\n                    return false;\n                }\n                // Adjust list height to max from select bottom to margin (default/minBottomMargin)\n                if (minRequiredDropDownHeight > maxSelectDropDownHeightBelow) {\n                    listHeight = (maxVisibleOptionsBelow * this.getHeight());\n                }\n            }\n            else {\n                if (minRequiredDropDownHeight > maxSelectDropDownHeightAbove) {\n                    listHeight = (maxVisibleOptionsAbove * this.getHeight());\n                }\n            }\n            // Set adjusted list height and relayout\n            this.selectList.layout(listHeight);\n            this.selectList.domFocus();\n            // Finally set focus on selected item\n            if (this.selectList.length > 0) {\n                this.selectList.setFocus([this.selected || 0]);\n                this.selectList.reveal(this.selectList.getFocus()[0] || 0);\n            }\n            if (this._hasDetails) {\n                // Leave the selectDropDownContainer to size itself according to children (list + details) - #57447\n                this.selectList.getHTMLElement().style.height = (listHeight + verticalPadding) + 'px';\n                this.selectDropDownContainer.style.height = '';\n            }\n            else {\n                this.selectDropDownContainer.style.height = (listHeight + verticalPadding) + 'px';\n            }\n            this.updateDetail(this.selected);\n            this.selectDropDownContainer.style.width = selectOptimalWidth;\n            // Maintain focus outline on parent select as well as list container - tabindex for focus\n            this.selectDropDownListContainer.setAttribute('tabindex', '0');\n            this.selectElement.classList.add('synthetic-focus');\n            this.selectDropDownContainer.classList.add('synthetic-focus');\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    setWidthControlElement(container) {\n        let elementWidth = 0;\n        if (container) {\n            let longest = 0;\n            let longestLength = 0;\n            this.options.forEach((option, index) => {\n                const detailLength = !!option.detail ? option.detail.length : 0;\n                const rightDecoratorLength = !!option.decoratorRight ? option.decoratorRight.length : 0;\n                const len = option.text.length + detailLength + rightDecoratorLength;\n                if (len > longestLength) {\n                    longest = index;\n                    longestLength = len;\n                }\n            });\n            container.textContent = this.options[longest].text + (!!this.options[longest].decoratorRight ? (this.options[longest].decoratorRight + ' ') : '');\n            elementWidth = dom.getTotalWidth(container);\n        }\n        return elementWidth;\n    }\n    createSelectList(parent) {\n        // If we have already constructive list on open, skip\n        if (this.selectList) {\n            return;\n        }\n        // SetUp container for list\n        this.selectDropDownListContainer = dom.append(parent, $('.select-box-dropdown-list-container'));\n        this.listRenderer = new SelectListRenderer();\n        this.selectList = new List('SelectBoxCustom', this.selectDropDownListContainer, this, [this.listRenderer], {\n            useShadows: false,\n            verticalScrollMode: 3 /* ScrollbarVisibility.Visible */,\n            keyboardSupport: false,\n            mouseSupport: false,\n            accessibilityProvider: {\n                getAriaLabel: element => {\n                    let label = element.text;\n                    if (element.detail) {\n                        label += `. ${element.detail}`;\n                    }\n                    if (element.decoratorRight) {\n                        label += `. ${element.decoratorRight}`;\n                    }\n                    if (element.description) {\n                        label += `. ${element.description}`;\n                    }\n                    return label;\n                },\n                getWidgetAriaLabel: () => localize({ key: 'selectBox', comment: ['Behave like native select dropdown element.'] }, \"Select Box\"),\n                getRole: () => isMacintosh ? '' : 'option',\n                getWidgetRole: () => 'listbox'\n            }\n        });\n        if (this.selectBoxOptions.ariaLabel) {\n            this.selectList.ariaLabel = this.selectBoxOptions.ariaLabel;\n        }\n        // SetUp list keyboard controller - control navigation, disabled items, focus\n        const onKeyDown = this._register(new DomEmitter(this.selectDropDownListContainer, 'keydown'));\n        const onSelectDropDownKeyDown = Event.chain(onKeyDown.event, $ => $.filter(() => this.selectList.length > 0)\n            .map(e => new StandardKeyboardEvent(e)));\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 3 /* KeyCode.Enter */))(this.onEnter, this));\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 2 /* KeyCode.Tab */))(this.onEnter, this)); // Tab should behave the same as enter, #79339\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 9 /* KeyCode.Escape */))(this.onEscape, this));\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 16 /* KeyCode.UpArrow */))(this.onUpArrow, this));\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 18 /* KeyCode.DownArrow */))(this.onDownArrow, this));\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 12 /* KeyCode.PageDown */))(this.onPageDown, this));\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 11 /* KeyCode.PageUp */))(this.onPageUp, this));\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 14 /* KeyCode.Home */))(this.onHome, this));\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 13 /* KeyCode.End */))(this.onEnd, this));\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => (e.keyCode >= 21 /* KeyCode.Digit0 */ && e.keyCode <= 56 /* KeyCode.KeyZ */) || (e.keyCode >= 85 /* KeyCode.Semicolon */ && e.keyCode <= 113 /* KeyCode.NumpadDivide */)))(this.onCharacter, this));\n        // SetUp list mouse controller - control navigation, disabled items, focus\n        this._register(dom.addDisposableListener(this.selectList.getHTMLElement(), dom.EventType.POINTER_UP, e => this.onPointerUp(e)));\n        this._register(this.selectList.onMouseOver(e => typeof e.index !== 'undefined' && this.selectList.setFocus([e.index])));\n        this._register(this.selectList.onDidChangeFocus(e => this.onListFocus(e)));\n        this._register(dom.addDisposableListener(this.selectDropDownContainer, dom.EventType.FOCUS_OUT, e => {\n            if (!this._isVisible || dom.isAncestor(e.relatedTarget, this.selectDropDownContainer)) {\n                return;\n            }\n            this.onListBlur();\n        }));\n        this.selectList.getHTMLElement().setAttribute('aria-label', this.selectBoxOptions.ariaLabel || '');\n        this.selectList.getHTMLElement().setAttribute('aria-expanded', 'true');\n        this.styleList();\n    }\n    // List methods\n    // List mouse controller - active exit, select option, fire onDidSelect if change, return focus to parent select\n    // Also takes in touchend events\n    onPointerUp(e) {\n        if (!this.selectList.length) {\n            return;\n        }\n        dom.EventHelper.stop(e);\n        const target = e.target;\n        if (!target) {\n            return;\n        }\n        // Check our mouse event is on an option (not scrollbar)\n        if (target.classList.contains('slider')) {\n            return;\n        }\n        const listRowElement = target.closest('.monaco-list-row');\n        if (!listRowElement) {\n            return;\n        }\n        const index = Number(listRowElement.getAttribute('data-index'));\n        const disabled = listRowElement.classList.contains('option-disabled');\n        // Ignore mouse selection of disabled options\n        if (index >= 0 && index < this.options.length && !disabled) {\n            this.selected = index;\n            this.select(this.selected);\n            this.selectList.setFocus([this.selected]);\n            this.selectList.reveal(this.selectList.getFocus()[0]);\n            // Only fire if selection change\n            if (this.selected !== this._currentSelection) {\n                // Set current = selected\n                this._currentSelection = this.selected;\n                this._onDidSelect.fire({\n                    index: this.selectElement.selectedIndex,\n                    selected: this.options[this.selected].text\n                });\n                if (!!this.options[this.selected] && !!this.options[this.selected].text) {\n                    this.setTitle(this.options[this.selected].text);\n                }\n            }\n            this.hideSelectDropDown(true);\n        }\n    }\n    // List Exit - passive - implicit no selection change, hide drop-down\n    onListBlur() {\n        if (this._sticky) {\n            return;\n        }\n        if (this.selected !== this._currentSelection) {\n            // Reset selected to current if no change\n            this.select(this._currentSelection);\n        }\n        this.hideSelectDropDown(false);\n    }\n    renderDescriptionMarkdown(text, actionHandler) {\n        const cleanRenderedMarkdown = (element) => {\n            for (let i = 0; i < element.childNodes.length; i++) {\n                const child = element.childNodes.item(i);\n                const tagName = child.tagName && child.tagName.toLowerCase();\n                if (tagName === 'img') {\n                    element.removeChild(child);\n                }\n                else {\n                    cleanRenderedMarkdown(child);\n                }\n            }\n        };\n        const rendered = renderMarkdown({ value: text, supportThemeIcons: true }, { actionHandler });\n        rendered.element.classList.add('select-box-description-markdown');\n        cleanRenderedMarkdown(rendered.element);\n        return rendered.element;\n    }\n    // List Focus Change - passive - update details pane with newly focused element's data\n    onListFocus(e) {\n        // Skip during initial layout\n        if (!this._isVisible || !this._hasDetails) {\n            return;\n        }\n        this.updateDetail(e.indexes[0]);\n    }\n    updateDetail(selectedIndex) {\n        var _a, _b;\n        this.selectionDetailsPane.innerText = '';\n        const option = this.options[selectedIndex];\n        const description = (_a = option === null || option === void 0 ? void 0 : option.description) !== null && _a !== void 0 ? _a : '';\n        const descriptionIsMarkdown = (_b = option === null || option === void 0 ? void 0 : option.descriptionIsMarkdown) !== null && _b !== void 0 ? _b : false;\n        if (description) {\n            if (descriptionIsMarkdown) {\n                const actionHandler = option.descriptionMarkdownActionHandler;\n                this.selectionDetailsPane.appendChild(this.renderDescriptionMarkdown(description, actionHandler));\n            }\n            else {\n                this.selectionDetailsPane.innerText = description;\n            }\n            this.selectionDetailsPane.style.display = 'block';\n        }\n        else {\n            this.selectionDetailsPane.style.display = 'none';\n        }\n        // Avoid recursion\n        this._skipLayout = true;\n        this.contextViewProvider.layout();\n        this._skipLayout = false;\n    }\n    // List keyboard controller\n    // List exit - active - hide ContextView dropdown, reset selection, return focus to parent select\n    onEscape(e) {\n        dom.EventHelper.stop(e);\n        // Reset selection to value when opened\n        this.select(this._currentSelection);\n        this.hideSelectDropDown(true);\n    }\n    // List exit - active - hide ContextView dropdown, return focus to parent select, fire onDidSelect if change\n    onEnter(e) {\n        dom.EventHelper.stop(e);\n        // Only fire if selection change\n        if (this.selected !== this._currentSelection) {\n            this._currentSelection = this.selected;\n            this._onDidSelect.fire({\n                index: this.selectElement.selectedIndex,\n                selected: this.options[this.selected].text\n            });\n            if (!!this.options[this.selected] && !!this.options[this.selected].text) {\n                this.setTitle(this.options[this.selected].text);\n            }\n        }\n        this.hideSelectDropDown(true);\n    }\n    // List navigation - have to handle a disabled option (jump over)\n    onDownArrow(e) {\n        if (this.selected < this.options.length - 1) {\n            dom.EventHelper.stop(e, true);\n            // Skip disabled options\n            const nextOptionDisabled = this.options[this.selected + 1].isDisabled;\n            if (nextOptionDisabled && this.options.length > this.selected + 2) {\n                this.selected += 2;\n            }\n            else if (nextOptionDisabled) {\n                return;\n            }\n            else {\n                this.selected++;\n            }\n            // Set focus/selection - only fire event when closing drop-down or on blur\n            this.select(this.selected);\n            this.selectList.setFocus([this.selected]);\n            this.selectList.reveal(this.selectList.getFocus()[0]);\n        }\n    }\n    onUpArrow(e) {\n        if (this.selected > 0) {\n            dom.EventHelper.stop(e, true);\n            // Skip disabled options\n            const previousOptionDisabled = this.options[this.selected - 1].isDisabled;\n            if (previousOptionDisabled && this.selected > 1) {\n                this.selected -= 2;\n            }\n            else {\n                this.selected--;\n            }\n            // Set focus/selection - only fire event when closing drop-down or on blur\n            this.select(this.selected);\n            this.selectList.setFocus([this.selected]);\n            this.selectList.reveal(this.selectList.getFocus()[0]);\n        }\n    }\n    onPageUp(e) {\n        dom.EventHelper.stop(e);\n        this.selectList.focusPreviousPage();\n        // Allow scrolling to settle\n        setTimeout(() => {\n            this.selected = this.selectList.getFocus()[0];\n            // Shift selection down if we land on a disabled option\n            if (this.options[this.selected].isDisabled && this.selected < this.options.length - 1) {\n                this.selected++;\n                this.selectList.setFocus([this.selected]);\n            }\n            this.selectList.reveal(this.selected);\n            this.select(this.selected);\n        }, 1);\n    }\n    onPageDown(e) {\n        dom.EventHelper.stop(e);\n        this.selectList.focusNextPage();\n        // Allow scrolling to settle\n        setTimeout(() => {\n            this.selected = this.selectList.getFocus()[0];\n            // Shift selection up if we land on a disabled option\n            if (this.options[this.selected].isDisabled && this.selected > 0) {\n                this.selected--;\n                this.selectList.setFocus([this.selected]);\n            }\n            this.selectList.reveal(this.selected);\n            this.select(this.selected);\n        }, 1);\n    }\n    onHome(e) {\n        dom.EventHelper.stop(e);\n        if (this.options.length < 2) {\n            return;\n        }\n        this.selected = 0;\n        if (this.options[this.selected].isDisabled && this.selected > 1) {\n            this.selected++;\n        }\n        this.selectList.setFocus([this.selected]);\n        this.selectList.reveal(this.selected);\n        this.select(this.selected);\n    }\n    onEnd(e) {\n        dom.EventHelper.stop(e);\n        if (this.options.length < 2) {\n            return;\n        }\n        this.selected = this.options.length - 1;\n        if (this.options[this.selected].isDisabled && this.selected > 1) {\n            this.selected--;\n        }\n        this.selectList.setFocus([this.selected]);\n        this.selectList.reveal(this.selected);\n        this.select(this.selected);\n    }\n    // Mimic option first character navigation of native select\n    onCharacter(e) {\n        const ch = KeyCodeUtils.toString(e.keyCode);\n        let optionIndex = -1;\n        for (let i = 0; i < this.options.length - 1; i++) {\n            optionIndex = (i + this.selected + 1) % this.options.length;\n            if (this.options[optionIndex].text.charAt(0).toUpperCase() === ch && !this.options[optionIndex].isDisabled) {\n                this.select(optionIndex);\n                this.selectList.setFocus([optionIndex]);\n                this.selectList.reveal(this.selectList.getFocus()[0]);\n                dom.EventHelper.stop(e);\n                break;\n            }\n        }\n    }\n    dispose() {\n        this.hideSelectDropDown(false);\n        super.dispose();\n    }\n}\nSelectBoxList.DEFAULT_DROPDOWN_MINIMUM_BOTTOM_MARGIN = 32;\nSelectBoxList.DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN = 2;\nSelectBoxList.DEFAULT_MINIMUM_VISIBLE_OPTIONS = 3;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { EventType, Gesture } from '../../touch.js';\nimport * as arrays from '../../../common/arrays.js';\nimport { Emitter } from '../../../common/event.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport { isMacintosh } from '../../../common/platform.js';\nexport class SelectBoxNative extends Disposable {\n    constructor(options, selected, styles, selectBoxOptions) {\n        super();\n        this.selected = 0;\n        this.selectBoxOptions = selectBoxOptions || Object.create(null);\n        this.options = [];\n        this.selectElement = document.createElement('select');\n        this.selectElement.className = 'monaco-select-box';\n        if (typeof this.selectBoxOptions.ariaLabel === 'string') {\n            this.selectElement.setAttribute('aria-label', this.selectBoxOptions.ariaLabel);\n        }\n        if (typeof this.selectBoxOptions.ariaDescription === 'string') {\n            this.selectElement.setAttribute('aria-description', this.selectBoxOptions.ariaDescription);\n        }\n        this._onDidSelect = this._register(new Emitter());\n        this.styles = styles;\n        this.registerListeners();\n        this.setOptions(options, selected);\n    }\n    registerListeners() {\n        this._register(Gesture.addTarget(this.selectElement));\n        [EventType.Tap].forEach(eventType => {\n            this._register(dom.addDisposableListener(this.selectElement, eventType, (e) => {\n                this.selectElement.focus();\n            }));\n        });\n        this._register(dom.addStandardDisposableListener(this.selectElement, 'click', (e) => {\n            dom.EventHelper.stop(e, true);\n        }));\n        this._register(dom.addStandardDisposableListener(this.selectElement, 'change', (e) => {\n            this.selectElement.title = e.target.value;\n            this._onDidSelect.fire({\n                index: e.target.selectedIndex,\n                selected: e.target.value\n            });\n        }));\n        this._register(dom.addStandardDisposableListener(this.selectElement, 'keydown', (e) => {\n            let showSelect = false;\n            if (isMacintosh) {\n                if (e.keyCode === 18 /* KeyCode.DownArrow */ || e.keyCode === 16 /* KeyCode.UpArrow */ || e.keyCode === 10 /* KeyCode.Space */) {\n                    showSelect = true;\n                }\n            }\n            else {\n                if (e.keyCode === 18 /* KeyCode.DownArrow */ && e.altKey || e.keyCode === 10 /* KeyCode.Space */ || e.keyCode === 3 /* KeyCode.Enter */) {\n                    showSelect = true;\n                }\n            }\n            if (showSelect) {\n                // Space, Enter, is used to expand select box, do not propagate it (prevent action bar action run)\n                e.stopPropagation();\n            }\n        }));\n    }\n    get onDidSelect() {\n        return this._onDidSelect.event;\n    }\n    setOptions(options, selected) {\n        if (!this.options || !arrays.equals(this.options, options)) {\n            this.options = options;\n            this.selectElement.options.length = 0;\n            this.options.forEach((option, index) => {\n                this.selectElement.add(this.createOption(option.text, index, option.isDisabled));\n            });\n        }\n        if (selected !== undefined) {\n            this.select(selected);\n        }\n    }\n    select(index) {\n        if (this.options.length === 0) {\n            this.selected = 0;\n        }\n        else if (index >= 0 && index < this.options.length) {\n            this.selected = index;\n        }\n        else if (index > this.options.length - 1) {\n            // Adjust index to end of list\n            // This could make client out of sync with the select\n            this.select(this.options.length - 1);\n        }\n        else if (this.selected < 0) {\n            this.selected = 0;\n        }\n        this.selectElement.selectedIndex = this.selected;\n        if ((this.selected < this.options.length) && typeof this.options[this.selected].text === 'string') {\n            this.selectElement.title = this.options[this.selected].text;\n        }\n        else {\n            this.selectElement.title = '';\n        }\n    }\n    focus() {\n        if (this.selectElement) {\n            this.selectElement.tabIndex = 0;\n            this.selectElement.focus();\n        }\n    }\n    blur() {\n        if (this.selectElement) {\n            this.selectElement.tabIndex = -1;\n            this.selectElement.blur();\n        }\n    }\n    setFocusable(focusable) {\n        this.selectElement.tabIndex = focusable ? 0 : -1;\n    }\n    render(container) {\n        container.classList.add('select-container');\n        container.appendChild(this.selectElement);\n        this.setOptions(this.options, this.selected);\n        this.applyStyles();\n    }\n    applyStyles() {\n        var _a, _b, _c;\n        // Style native select\n        if (this.selectElement) {\n            this.selectElement.style.backgroundColor = (_a = this.styles.selectBackground) !== null && _a !== void 0 ? _a : '';\n            this.selectElement.style.color = (_b = this.styles.selectForeground) !== null && _b !== void 0 ? _b : '';\n            this.selectElement.style.borderColor = (_c = this.styles.selectBorder) !== null && _c !== void 0 ? _c : '';\n        }\n    }\n    createOption(value, index, disabled) {\n        const option = document.createElement('option');\n        option.value = value;\n        option.text = value;\n        option.disabled = !!disabled;\n        return option;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SelectBoxList } from './selectBoxCustom.js';\nimport { SelectBoxNative } from './selectBoxNative.js';\nimport { Widget } from '../widget.js';\nimport { isMacintosh } from '../../../common/platform.js';\nimport './selectBox.css';\nexport class SelectBox extends Widget {\n    constructor(options, selected, contextViewProvider, styles, selectBoxOptions) {\n        super();\n        // Default to native SelectBox for OSX unless overridden\n        if (isMacintosh && !(selectBoxOptions === null || selectBoxOptions === void 0 ? void 0 : selectBoxOptions.useCustomDrawn)) {\n            this.selectBoxDelegate = new SelectBoxNative(options, selected, styles, selectBoxOptions);\n        }\n        else {\n            this.selectBoxDelegate = new SelectBoxList(options, selected, contextViewProvider, styles, selectBoxOptions);\n        }\n        this._register(this.selectBoxDelegate);\n    }\n    // Public SelectBox Methods - routed through delegate interface\n    get onDidSelect() {\n        return this.selectBoxDelegate.onDidSelect;\n    }\n    setOptions(options, selected) {\n        this.selectBoxDelegate.setOptions(options, selected);\n    }\n    select(index) {\n        this.selectBoxDelegate.select(index);\n    }\n    focus() {\n        this.selectBoxDelegate.focus();\n    }\n    blur() {\n        this.selectBoxDelegate.blur();\n    }\n    setFocusable(focusable) {\n        this.selectBoxDelegate.setFocusable(focusable);\n    }\n    render(container) {\n        this.selectBoxDelegate.render(container);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, addDisposableListener, append, getWindow, scheduleAtNextAnimationFrame } from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { Sash } from '../sash/sash.js';\nimport { SmoothScrollableElement } from '../scrollbar/scrollableElement.js';\nimport { pushToEnd, pushToStart, range } from '../../../common/arrays.js';\nimport { Color } from '../../../common/color.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { combinedDisposable, Disposable, dispose, toDisposable } from '../../../common/lifecycle.js';\nimport { clamp } from '../../../common/numbers.js';\nimport { Scrollable } from '../../../common/scrollable.js';\nimport * as types from '../../../common/types.js';\nimport './splitview.css';\nconst defaultStyles = {\n    separatorBorder: Color.transparent\n};\nclass ViewItem {\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    setVisible(visible, size) {\n        var _a, _b;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp(this._cachedVisibleSize, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize = typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        try {\n            (_b = (_a = this.view).setVisible) === null || _b === void 0 ? void 0 : _b.call(_a, visible);\n        }\n        catch (e) {\n            console.error('Splitview: Failed to set visible view');\n            console.error(e);\n        }\n    }\n    get minimumSize() { return this.visible ? this.view.minimumSize : 0; }\n    get viewMinimumSize() { return this.view.minimumSize; }\n    get maximumSize() { return this.visible ? this.view.maximumSize : 0; }\n    get viewMaximumSize() { return this.view.maximumSize; }\n    get priority() { return this.view.priority; }\n    get proportionalLayout() { var _a; return (_a = this.view.proportionalLayout) !== null && _a !== void 0 ? _a : true; }\n    get snap() { return !!this.view.snap; }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    layout(offset, layoutContext) {\n        this.layoutContainer(offset);\n        try {\n            this.view.layout(this.size, offset, layoutContext);\n        }\n        catch (e) {\n            console.error('Splitview: Failed to layout view');\n            console.error(e);\n        }\n    }\n    dispose() {\n        this.disposable.dispose();\n    }\n}\nclass VerticalViewItem extends ViewItem {\n    layoutContainer(offset) {\n        this.container.style.top = `${offset}px`;\n        this.container.style.height = `${this.size}px`;\n    }\n}\nclass HorizontalViewItem extends ViewItem {\n    layoutContainer(offset) {\n        this.container.style.left = `${offset}px`;\n        this.container.style.width = `${this.size}px`;\n    }\n}\nvar State;\n(function (State) {\n    State[State[\"Idle\"] = 0] = \"Idle\";\n    State[State[\"Busy\"] = 1] = \"Busy\";\n})(State || (State = {}));\nexport var Sizing;\n(function (Sizing) {\n    /**\n     * When adding or removing views, distribute the delta space among\n     * all other views.\n     */\n    Sizing.Distribute = { type: 'distribute' };\n    /**\n     * When adding or removing views, split the delta space with another\n     * specific view, indexed by the provided `index`.\n     */\n    function Split(index) { return { type: 'split', index }; }\n    Sizing.Split = Split;\n    /**\n     * When adding a view, use DistributeSizing when all pre-existing views are\n     * distributed evenly, otherwise use SplitSizing.\n     */\n    function Auto(index) { return { type: 'auto', index }; }\n    Sizing.Auto = Auto;\n    /**\n     * When adding or removing views, assume the view is invisible.\n     */\n    function Invisible(cachedVisibleSize) { return { type: 'invisible', cachedVisibleSize }; }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\n/**\n * The {@link SplitView} is the UI component which implements a one dimensional\n * flex-like layout algorithm for a collection of {@link IView} instances, which\n * are essentially HTMLElement instances with the following size constraints:\n *\n * - {@link IView.minimumSize}\n * - {@link IView.maximumSize}\n * - {@link IView.priority}\n * - {@link IView.snap}\n *\n * In case the SplitView doesn't have enough size to fit all views, it will overflow\n * its content with a scrollbar.\n *\n * In between each pair of views there will be a {@link Sash} allowing the user\n * to resize the views, making sure the constraints are respected.\n *\n * An optional {@link TLayoutContext layout context type} may be used in order to\n * pass along layout contextual data from the {@link SplitView.layout} method down\n * to each view's {@link IView.layout} calls.\n *\n * Features:\n * - Flex-like layout algorithm\n * - Snap support\n * - Orthogonal sash support, for corner sashes\n * - View hide/show support\n * - View swap/move support\n * - Alt key modifier behavior, macOS style\n */\nexport class SplitView extends Disposable {\n    get orthogonalStartSash() { return this._orthogonalStartSash; }\n    get orthogonalEndSash() { return this._orthogonalEndSash; }\n    get startSnappingEnabled() { return this._startSnappingEnabled; }\n    get endSnappingEnabled() { return this._endSnappingEnabled; }\n    /**\n     * A reference to a sash, perpendicular to all sashes in this {@link SplitView},\n     * located at the left- or top-most side of the SplitView.\n     * Corner sashes will be created automatically at the intersections.\n     */\n    set orthogonalStartSash(sash) {\n        for (const sashItem of this.sashItems) {\n            sashItem.sash.orthogonalStartSash = sash;\n        }\n        this._orthogonalStartSash = sash;\n    }\n    /**\n     * A reference to a sash, perpendicular to all sashes in this {@link SplitView},\n     * located at the right- or bottom-most side of the SplitView.\n     * Corner sashes will be created automatically at the intersections.\n     */\n    set orthogonalEndSash(sash) {\n        for (const sashItem of this.sashItems) {\n            sashItem.sash.orthogonalEndSash = sash;\n        }\n        this._orthogonalEndSash = sash;\n    }\n    /**\n     * Enable/disable snapping at the beginning of this {@link SplitView}.\n     */\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    /**\n     * Enable/disable snapping at the end of this {@link SplitView}.\n     */\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    /**\n     * Create a new {@link SplitView} instance.\n     */\n    constructor(container, options = {}) {\n        var _a, _b, _c, _d, _e;\n        super();\n        this.size = 0;\n        this._contentSize = 0;\n        this.proportions = undefined;\n        this.viewItems = [];\n        this.sashItems = []; // used in tests\n        this.state = State.Idle;\n        this._onDidSashChange = this._register(new Emitter());\n        this._onDidSashReset = this._register(new Emitter());\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        /**\n         * Fires whenever the user resizes a {@link Sash sash}.\n         */\n        this.onDidSashChange = this._onDidSashChange.event;\n        /**\n         * Fires whenever the user double clicks a {@link Sash sash}.\n         */\n        this.onDidSashReset = this._onDidSashReset.event;\n        this.orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : 0 /* Orientation.VERTICAL */;\n        this.inverseAltBehavior = (_b = options.inverseAltBehavior) !== null && _b !== void 0 ? _b : false;\n        this.proportionalLayout = (_c = options.proportionalLayout) !== null && _c !== void 0 ? _c : true;\n        this.getSashOrthogonalSize = options.getSashOrthogonalSize;\n        this.el = document.createElement('div');\n        this.el.classList.add('monaco-split-view2');\n        this.el.classList.add(this.orientation === 0 /* Orientation.VERTICAL */ ? 'vertical' : 'horizontal');\n        container.appendChild(this.el);\n        this.sashContainer = append(this.el, $('.sash-container'));\n        this.viewContainer = $('.split-view-container');\n        this.scrollable = this._register(new Scrollable({\n            forceIntegerValues: true,\n            smoothScrollDuration: 125,\n            scheduleAtNextAnimationFrame: callback => scheduleAtNextAnimationFrame(getWindow(this.el), callback),\n        }));\n        this.scrollableElement = this._register(new SmoothScrollableElement(this.viewContainer, {\n            vertical: this.orientation === 0 /* Orientation.VERTICAL */ ? ((_d = options.scrollbarVisibility) !== null && _d !== void 0 ? _d : 1 /* ScrollbarVisibility.Auto */) : 2 /* ScrollbarVisibility.Hidden */,\n            horizontal: this.orientation === 1 /* Orientation.HORIZONTAL */ ? ((_e = options.scrollbarVisibility) !== null && _e !== void 0 ? _e : 1 /* ScrollbarVisibility.Auto */) : 2 /* ScrollbarVisibility.Hidden */\n        }, this.scrollable));\n        // https://github.com/microsoft/vscode/issues/157737\n        const onDidScrollViewContainer = this._register(new DomEmitter(this.viewContainer, 'scroll')).event;\n        this._register(onDidScrollViewContainer(_ => {\n            const position = this.scrollableElement.getScrollPosition();\n            const scrollLeft = Math.abs(this.viewContainer.scrollLeft - position.scrollLeft) <= 1 ? undefined : this.viewContainer.scrollLeft;\n            const scrollTop = Math.abs(this.viewContainer.scrollTop - position.scrollTop) <= 1 ? undefined : this.viewContainer.scrollTop;\n            if (scrollLeft !== undefined || scrollTop !== undefined) {\n                this.scrollableElement.setScrollPosition({ scrollLeft, scrollTop });\n            }\n        }));\n        this.onDidScroll = this.scrollableElement.onScroll;\n        this._register(this.onDidScroll(e => {\n            if (e.scrollTopChanged) {\n                this.viewContainer.scrollTop = e.scrollTop;\n            }\n            if (e.scrollLeftChanged) {\n                this.viewContainer.scrollLeft = e.scrollLeft;\n            }\n        }));\n        append(this.el, this.scrollableElement.getDomNode());\n        this.style(options.styles || defaultStyles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this.size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = types.isUndefined(viewDescriptor.visible) || viewDescriptor.visible ? viewDescriptor.size : { type: 'invisible', cachedVisibleSize: viewDescriptor.size };\n                const view = viewDescriptor.view;\n                this.doAddView(view, sizing, index, true);\n            });\n            // Initialize content size and proportions for first layout\n            this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    style(styles) {\n        if (styles.separatorBorder.isTransparent()) {\n            this.el.classList.remove('separator-border');\n            this.el.style.removeProperty('--separator-border');\n        }\n        else {\n            this.el.classList.add('separator-border');\n            this.el.style.setProperty('--separator-border', styles.separatorBorder.toString());\n        }\n    }\n    /**\n     * Add a {@link IView view} to this {@link SplitView}.\n     *\n     * @param view The view to add.\n     * @param size Either a fixed size, or a dynamic {@link Sizing} strategy.\n     * @param index The index to insert the view on.\n     * @param skipLayout Whether layout should be skipped.\n     */\n    addView(view, size, index = this.viewItems.length, skipLayout) {\n        this.doAddView(view, size, index, skipLayout);\n    }\n    /**\n     * Layout the {@link SplitView}.\n     *\n     * @param size The entire size of the {@link SplitView}.\n     * @param layoutContext An optional layout context to pass along to {@link IView views}.\n     */\n    layout(size, layoutContext) {\n        const previousSize = Math.max(this.size, this._contentSize);\n        this.size = size;\n        this.layoutContext = layoutContext;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 1 /* LayoutPriority.Low */);\n            const highPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 2 /* LayoutPriority.High */);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            let total = 0;\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number') {\n                    total += proportion;\n                }\n                else {\n                    size -= item.size;\n                }\n            }\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                const proportion = this.proportions[i];\n                if (typeof proportion === 'number' && total > 0) {\n                    item.size = clamp(Math.round(proportion * size / total), item.minimumSize, item.maximumSize);\n                }\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this._contentSize > 0) {\n            this.proportions = this.viewItems.map(v => v.proportionalLayout && v.visible ? v.size / this._contentSize : undefined);\n        }\n    }\n    onSashStart({ sash, start, alt }) {\n        for (const item of this.viewItems) {\n            item.enabled = false;\n        }\n        const index = this.sashItems.findIndex(item => item.sash === sash);\n        // This way, we can press Alt while we resize a sash, macOS style!\n        const disposable = combinedDisposable(addDisposableListener(this.el.ownerDocument.body, 'keydown', e => resetSashDragState(this.sashDragState.current, e.altKey)), addDisposableListener(this.el.ownerDocument.body, 'keyup', () => resetSashDragState(this.sashDragState.current, false)));\n        const resetSashDragState = (start, alt) => {\n            const sizes = this.viewItems.map(i => i.size);\n            let minDelta = Number.NEGATIVE_INFINITY;\n            let maxDelta = Number.POSITIVE_INFINITY;\n            if (this.inverseAltBehavior) {\n                alt = !alt;\n            }\n            if (alt) {\n                // When we're using the last sash with Alt, we're resizing\n                // the view to the left/up, instead of right/down as usual\n                // Thus, we must do the inverse of the usual\n                const isLastSash = index === this.sashItems.length - 1;\n                if (isLastSash) {\n                    const viewItem = this.viewItems[index];\n                    minDelta = (viewItem.minimumSize - viewItem.size) / 2;\n                    maxDelta = (viewItem.maximumSize - viewItem.size) / 2;\n                }\n                else {\n                    const viewItem = this.viewItems[index + 1];\n                    minDelta = (viewItem.size - viewItem.maximumSize) / 2;\n                    maxDelta = (viewItem.size - viewItem.minimumSize) / 2;\n                }\n            }\n            let snapBefore;\n            let snapAfter;\n            if (!alt) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0 ? Number.POSITIVE_INFINITY : downIndexes.reduce((r, i) => r + (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0 ? Number.NEGATIVE_INFINITY : downIndexes.reduce((r, i) => r + (sizes[i] - this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const viewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(viewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: viewItem.visible ? minDelta - halfSize : minDelta + halfSize,\n                        size: viewItem.size\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const viewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(viewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: viewItem.visible ? maxDelta + halfSize : maxDelta - halfSize,\n                        size: viewItem.size\n                    };\n                }\n            }\n            this.sashDragState = { start, current: start, index, sizes, minDelta, maxDelta, alt, snapBefore, snapAfter, disposable };\n        };\n        resetSashDragState(start, alt);\n    }\n    onSashChange({ current }) {\n        const { index, start, sizes, alt, minDelta, maxDelta, snapBefore, snapAfter } = this.sashDragState;\n        this.sashDragState.current = current;\n        const delta = current - start;\n        const newDelta = this.resize(index, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n        if (alt) {\n            const isLastSash = index === this.sashItems.length - 1;\n            const newSizes = this.viewItems.map(i => i.size);\n            const viewItemIndex = isLastSash ? index : index + 1;\n            const viewItem = this.viewItems[viewItemIndex];\n            const newMinDelta = viewItem.size - viewItem.maximumSize;\n            const newMaxDelta = viewItem.size - viewItem.minimumSize;\n            const resizeIndex = isLastSash ? index - 1 : index + 1;\n            this.resize(resizeIndex, -newDelta, newSizes, undefined, undefined, newMinDelta, newMaxDelta);\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    onSashEnd(index) {\n        this._onDidSashChange.fire(index);\n        this.sashDragState.disposable.dispose();\n        this.saveProportions();\n        for (const item of this.viewItems) {\n            item.enabled = true;\n        }\n    }\n    onViewChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        if (this.inverseAltBehavior && index > 0) {\n            // In this case, we want the view to grow or shrink both sides equally\n            // so we just resize the \"left\" side by half and let `resize` do the clamping magic\n            this.resize(index - 1, Math.floor((item.size - size) / 2));\n            this.distributeEmptySpace();\n            this.layoutViews();\n        }\n        else {\n            item.size = size;\n            this.relayout([index], undefined);\n        }\n    }\n    /**\n     * Resize a {@link IView view} within the {@link SplitView}.\n     *\n     * @param index The {@link IView view} index.\n     * @param size The {@link IView view} size.\n     */\n    resizeView(index, size) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        if (this.state !== State.Idle) {\n            throw new Error('Cant modify splitview');\n        }\n        this.state = State.Busy;\n        try {\n            const indexes = range(this.viewItems.length).filter(i => i !== index);\n            const lowPriorityIndexes = [...indexes.filter(i => this.viewItems[i].priority === 1 /* LayoutPriority.Low */), index];\n            const highPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 2 /* LayoutPriority.High */);\n            const item = this.viewItems[index];\n            size = Math.round(size);\n            size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this.size));\n            item.size = size;\n            this.relayout(lowPriorityIndexes, highPriorityIndexes);\n        }\n        finally {\n            this.state = State.Idle;\n        }\n    }\n    /**\n     * Distribute the entire {@link SplitView} size among all {@link IView views}.\n     */\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 1 /* LayoutPriority.Low */);\n        const highPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 2 /* LayoutPriority.High */);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    /**\n     * Returns the size of a {@link IView view}.\n     */\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    doAddView(view, size, index = this.viewItems.length, skipLayout) {\n        if (this.state !== State.Idle) {\n            throw new Error('Cant modify splitview');\n        }\n        this.state = State.Busy;\n        try {\n            // Add view\n            const container = $('.split-view-view');\n            if (index === this.viewItems.length) {\n                this.viewContainer.appendChild(container);\n            }\n            else {\n                this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n            }\n            const onChangeDisposable = view.onDidChange(size => this.onViewChange(item, size));\n            const containerDisposable = toDisposable(() => this.viewContainer.removeChild(container));\n            const disposable = combinedDisposable(onChangeDisposable, containerDisposable);\n            let viewSize;\n            if (typeof size === 'number') {\n                viewSize = size;\n            }\n            else {\n                if (size.type === 'auto') {\n                    if (this.areViewsDistributed()) {\n                        size = { type: 'distribute' };\n                    }\n                    else {\n                        size = { type: 'split', index: size.index };\n                    }\n                }\n                if (size.type === 'split') {\n                    viewSize = this.getViewSize(size.index) / 2;\n                }\n                else if (size.type === 'invisible') {\n                    viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n                }\n                else {\n                    viewSize = view.minimumSize;\n                }\n            }\n            const item = this.orientation === 0 /* Orientation.VERTICAL */\n                ? new VerticalViewItem(container, view, viewSize, disposable)\n                : new HorizontalViewItem(container, view, viewSize, disposable);\n            this.viewItems.splice(index, 0, item);\n            // Add sash\n            if (this.viewItems.length > 1) {\n                const opts = { orthogonalStartSash: this.orthogonalStartSash, orthogonalEndSash: this.orthogonalEndSash };\n                const sash = this.orientation === 0 /* Orientation.VERTICAL */\n                    ? new Sash(this.sashContainer, { getHorizontalSashTop: s => this.getSashPosition(s), getHorizontalSashWidth: this.getSashOrthogonalSize }, { ...opts, orientation: 1 /* Orientation.HORIZONTAL */ })\n                    : new Sash(this.sashContainer, { getVerticalSashLeft: s => this.getSashPosition(s), getVerticalSashHeight: this.getSashOrthogonalSize }, { ...opts, orientation: 0 /* Orientation.VERTICAL */ });\n                const sashEventMapper = this.orientation === 0 /* Orientation.VERTICAL */\n                    ? (e) => ({ sash, start: e.startY, current: e.currentY, alt: e.altKey })\n                    : (e) => ({ sash, start: e.startX, current: e.currentX, alt: e.altKey });\n                const onStart = Event.map(sash.onDidStart, sashEventMapper);\n                const onStartDisposable = onStart(this.onSashStart, this);\n                const onChange = Event.map(sash.onDidChange, sashEventMapper);\n                const onChangeDisposable = onChange(this.onSashChange, this);\n                const onEnd = Event.map(sash.onDidEnd, () => this.sashItems.findIndex(item => item.sash === sash));\n                const onEndDisposable = onEnd(this.onSashEnd, this);\n                const onDidResetDisposable = sash.onDidReset(() => {\n                    const index = this.sashItems.findIndex(item => item.sash === sash);\n                    const upIndexes = range(index, -1);\n                    const downIndexes = range(index + 1, this.viewItems.length);\n                    const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                    const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                    if (typeof snapBeforeIndex === 'number' && !this.viewItems[snapBeforeIndex].visible) {\n                        return;\n                    }\n                    if (typeof snapAfterIndex === 'number' && !this.viewItems[snapAfterIndex].visible) {\n                        return;\n                    }\n                    this._onDidSashReset.fire(index);\n                });\n                const disposable = combinedDisposable(onStartDisposable, onChangeDisposable, onEndDisposable, onDidResetDisposable, sash);\n                const sashItem = { sash, disposable };\n                this.sashItems.splice(index - 1, 0, sashItem);\n            }\n            container.appendChild(view.element);\n            let highPriorityIndexes;\n            if (typeof size !== 'number' && size.type === 'split') {\n                highPriorityIndexes = [size.index];\n            }\n            if (!skipLayout) {\n                this.relayout([index], highPriorityIndexes);\n            }\n            if (!skipLayout && typeof size !== 'number' && size.type === 'distribute') {\n                this.distributeViewSizes();\n            }\n        }\n        finally {\n            this.state = State.Idle;\n        }\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this.size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    resize(index, delta, sizes = this.viewItems.map(i => i.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return 0;\n        }\n        const upIndexes = range(index, -1);\n        const downIndexes = range(index + 1, this.viewItems.length);\n        if (highPriorityIndexes) {\n            for (const index of highPriorityIndexes) {\n                pushToStart(upIndexes, index);\n                pushToStart(downIndexes, index);\n            }\n        }\n        if (lowPriorityIndexes) {\n            for (const index of lowPriorityIndexes) {\n                pushToEnd(upIndexes, index);\n                pushToEnd(downIndexes, index);\n            }\n        }\n        const upItems = upIndexes.map(i => this.viewItems[i]);\n        const upSizes = upIndexes.map(i => sizes[i]);\n        const downItems = downIndexes.map(i => this.viewItems[i]);\n        const downSizes = downIndexes.map(i => sizes[i]);\n        const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n        const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].maximumSize - sizes[i]), 0);\n        const maxDeltaDown = downIndexes.length === 0 ? Number.POSITIVE_INFINITY : downIndexes.reduce((r, i) => r + (sizes[i] - this.viewItems[i].minimumSize), 0);\n        const minDeltaDown = downIndexes.length === 0 ? Number.NEGATIVE_INFINITY : downIndexes.reduce((r, i) => r + (sizes[i] - this.viewItems[i].maximumSize), 0);\n        const minDelta = Math.max(minDeltaUp, minDeltaDown, overloadMinDelta);\n        const maxDelta = Math.min(maxDeltaDown, maxDeltaUp, overloadMaxDelta);\n        let snapped = false;\n        if (snapBefore) {\n            const snapView = this.viewItems[snapBefore.index];\n            const visible = delta >= snapBefore.limitDelta;\n            snapped = visible !== snapView.visible;\n            snapView.setVisible(visible, snapBefore.size);\n        }\n        if (!snapped && snapAfter) {\n            const snapView = this.viewItems[snapAfter.index];\n            const visible = delta < snapAfter.limitDelta;\n            snapped = visible !== snapView.visible;\n            snapView.setVisible(visible, snapAfter.size);\n        }\n        if (snapped) {\n            return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n        }\n        delta = clamp(delta, minDelta, maxDelta);\n        for (let i = 0, deltaUp = delta; i < upItems.length; i++) {\n            const item = upItems[i];\n            const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n            const viewDelta = size - upSizes[i];\n            deltaUp -= viewDelta;\n            item.size = size;\n        }\n        for (let i = 0, deltaDown = delta; i < downItems.length; i++) {\n            const item = downItems[i];\n            const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n            const viewDelta = size - downSizes[i];\n            deltaDown += viewDelta;\n            item.size = size;\n        }\n        return delta;\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 1 /* LayoutPriority.Low */);\n        const highPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 2 /* LayoutPriority.High */);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    layoutViews() {\n        // Save new content size\n        this._contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        // Layout views\n        let offset = 0;\n        for (const viewItem of this.viewItems) {\n            viewItem.layout(offset, this.layoutContext);\n            offset += viewItem.size;\n        }\n        // Layout sashes\n        this.sashItems.forEach(item => item.sash.layout());\n        this.updateSashEnablement();\n        this.updateScrollableElement();\n    }\n    updateScrollableElement() {\n        if (this.orientation === 0 /* Orientation.VERTICAL */) {\n            this.scrollableElement.setScrollDimensions({\n                height: this.size,\n                scrollHeight: this._contentSize\n            });\n        }\n        else {\n            this.scrollableElement.setScrollDimensions({\n                width: this.size,\n                scrollWidth: this._contentSize\n            });\n        }\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map(i => previous = (i.size - i.minimumSize > 0) || previous);\n        previous = false;\n        const expandsDown = this.viewItems.map(i => previous = (i.maximumSize - i.size > 0) || previous);\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews.map(i => previous = (i.size - i.minimumSize > 0) || previous).reverse();\n        previous = false;\n        const expandsUp = reverseViews.map(i => previous = (i.maximumSize - i.size > 0) || previous).reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashItems.length; index++) {\n            const { sash } = this.sashItems[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' && !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' && !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore && collapsesUp[index] && (position > 0 || this.startSnappingEnabled)) {\n                    sash.state = 1 /* SashState.AtMinimum */;\n                }\n                else if (snappedAfter && collapsesDown[index] && (position < this._contentSize || this.endSnappingEnabled)) {\n                    sash.state = 2 /* SashState.AtMaximum */;\n                }\n                else {\n                    sash.state = 0 /* SashState.Disabled */;\n                }\n            }\n            else if (min && !max) {\n                sash.state = 1 /* SashState.AtMinimum */;\n            }\n            else if (!min && max) {\n                sash.state = 2 /* SashState.AtMaximum */;\n            }\n            else {\n                sash.state = 3 /* SashState.Enabled */;\n            }\n        }\n    }\n    getSashPosition(sash) {\n        let position = 0;\n        for (let i = 0; i < this.sashItems.length; i++) {\n            position += this.viewItems[i].size;\n            if (this.sashItems[i].sash === sash) {\n                return position;\n            }\n        }\n        return 0;\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible && viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    areViewsDistributed() {\n        let min = undefined, max = undefined;\n        for (const view of this.viewItems) {\n            min = min === undefined ? view.size : Math.min(min, view.size);\n            max = max === undefined ? view.size : Math.max(max, view.size);\n            if (max - min > 2) {\n                return false;\n            }\n        }\n        return true;\n    }\n    dispose() {\n        var _a;\n        (_a = this.sashDragState) === null || _a === void 0 ? void 0 : _a.disposable.dispose();\n        dispose(this.viewItems);\n        this.viewItems = [];\n        this.sashItems.forEach(i => i.disposable.dispose());\n        this.sashItems = [];\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, append, clearNode, createStyleSheet } from '../../dom.js';\nimport { getBaseLayerHoverDelegate } from '../hover/hoverDelegate2.js';\nimport { getDefaultHoverDelegate } from '../hover/hoverDelegateFactory.js';\nimport { List, unthemedListStyles } from '../list/listWidget.js';\nimport { SplitView } from '../splitview/splitview.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { Disposable, DisposableStore } from '../../../common/lifecycle.js';\nimport './table.css';\nclass TableListRenderer {\n    constructor(columns, renderers, getColumnSize) {\n        this.columns = columns;\n        this.getColumnSize = getColumnSize;\n        this.templateId = TableListRenderer.TemplateId;\n        this.renderedTemplates = new Set();\n        const rendererMap = new Map(renderers.map(r => [r.templateId, r]));\n        this.renderers = [];\n        for (const column of columns) {\n            const renderer = rendererMap.get(column.templateId);\n            if (!renderer) {\n                throw new Error(`Table cell renderer for template id ${column.templateId} not found.`);\n            }\n            this.renderers.push(renderer);\n        }\n    }\n    renderTemplate(container) {\n        const rowContainer = append(container, $('.monaco-table-tr'));\n        const cellContainers = [];\n        const cellTemplateData = [];\n        for (let i = 0; i < this.columns.length; i++) {\n            const renderer = this.renderers[i];\n            const cellContainer = append(rowContainer, $('.monaco-table-td', { 'data-col-index': i }));\n            cellContainer.style.width = `${this.getColumnSize(i)}px`;\n            cellContainers.push(cellContainer);\n            cellTemplateData.push(renderer.renderTemplate(cellContainer));\n        }\n        const result = { container, cellContainers, cellTemplateData };\n        this.renderedTemplates.add(result);\n        return result;\n    }\n    renderElement(element, index, templateData, height) {\n        for (let i = 0; i < this.columns.length; i++) {\n            const column = this.columns[i];\n            const cell = column.project(element);\n            const renderer = this.renderers[i];\n            renderer.renderElement(cell, index, templateData.cellTemplateData[i], height);\n        }\n    }\n    disposeElement(element, index, templateData, height) {\n        for (let i = 0; i < this.columns.length; i++) {\n            const renderer = this.renderers[i];\n            if (renderer.disposeElement) {\n                const column = this.columns[i];\n                const cell = column.project(element);\n                renderer.disposeElement(cell, index, templateData.cellTemplateData[i], height);\n            }\n        }\n    }\n    disposeTemplate(templateData) {\n        for (let i = 0; i < this.columns.length; i++) {\n            const renderer = this.renderers[i];\n            renderer.disposeTemplate(templateData.cellTemplateData[i]);\n        }\n        clearNode(templateData.container);\n        this.renderedTemplates.delete(templateData);\n    }\n    layoutColumn(index, size) {\n        for (const { cellContainers } of this.renderedTemplates) {\n            cellContainers[index].style.width = `${size}px`;\n        }\n    }\n}\nTableListRenderer.TemplateId = 'row';\nfunction asListVirtualDelegate(delegate) {\n    return {\n        getHeight(row) { return delegate.getHeight(row); },\n        getTemplateId() { return TableListRenderer.TemplateId; },\n    };\n}\nclass ColumnHeader extends Disposable {\n    get minimumSize() { var _a; return (_a = this.column.minimumWidth) !== null && _a !== void 0 ? _a : 120; }\n    get maximumSize() { var _a; return (_a = this.column.maximumWidth) !== null && _a !== void 0 ? _a : Number.POSITIVE_INFINITY; }\n    get onDidChange() { var _a; return (_a = this.column.onDidChangeWidthConstraints) !== null && _a !== void 0 ? _a : Event.None; }\n    constructor(column, index) {\n        super();\n        this.column = column;\n        this.index = index;\n        this._onDidLayout = new Emitter();\n        this.onDidLayout = this._onDidLayout.event;\n        this.element = $('.monaco-table-th', { 'data-col-index': index }, column.label);\n        if (column.tooltip) {\n            this._register(getBaseLayerHoverDelegate().setupUpdatableHover(getDefaultHoverDelegate('mouse'), this.element, column.tooltip));\n        }\n    }\n    layout(size) {\n        this._onDidLayout.fire([this.index, size]);\n    }\n}\nexport class Table {\n    get onDidChangeFocus() { return this.list.onDidChangeFocus; }\n    get onDidChangeSelection() { return this.list.onDidChangeSelection; }\n    get onDidScroll() { return this.list.onDidScroll; }\n    get onMouseDblClick() { return this.list.onMouseDblClick; }\n    get onPointer() { return this.list.onPointer; }\n    get onDidFocus() { return this.list.onDidFocus; }\n    get scrollTop() { return this.list.scrollTop; }\n    set scrollTop(scrollTop) { this.list.scrollTop = scrollTop; }\n    get scrollHeight() { return this.list.scrollHeight; }\n    get renderHeight() { return this.list.renderHeight; }\n    get onDidDispose() { return this.list.onDidDispose; }\n    constructor(user, container, virtualDelegate, columns, renderers, _options) {\n        this.virtualDelegate = virtualDelegate;\n        this.domId = `table_id_${++Table.InstanceCount}`;\n        this.disposables = new DisposableStore();\n        this.cachedWidth = 0;\n        this.cachedHeight = 0;\n        this.domNode = append(container, $(`.monaco-table.${this.domId}`));\n        const headers = columns.map((c, i) => this.disposables.add(new ColumnHeader(c, i)));\n        const descriptor = {\n            size: headers.reduce((a, b) => a + b.column.weight, 0),\n            views: headers.map(view => ({ size: view.column.weight, view }))\n        };\n        this.splitview = this.disposables.add(new SplitView(this.domNode, {\n            orientation: 1 /* Orientation.HORIZONTAL */,\n            scrollbarVisibility: 2 /* ScrollbarVisibility.Hidden */,\n            getSashOrthogonalSize: () => this.cachedHeight,\n            descriptor\n        }));\n        this.splitview.el.style.height = `${virtualDelegate.headerRowHeight}px`;\n        this.splitview.el.style.lineHeight = `${virtualDelegate.headerRowHeight}px`;\n        const renderer = new TableListRenderer(columns, renderers, i => this.splitview.getViewSize(i));\n        this.list = this.disposables.add(new List(user, this.domNode, asListVirtualDelegate(virtualDelegate), [renderer], _options));\n        Event.any(...headers.map(h => h.onDidLayout))(([index, size]) => renderer.layoutColumn(index, size), null, this.disposables);\n        this.splitview.onDidSashReset(index => {\n            const totalWeight = columns.reduce((r, c) => r + c.weight, 0);\n            const size = columns[index].weight / totalWeight * this.cachedWidth;\n            this.splitview.resizeView(index, size);\n        }, null, this.disposables);\n        this.styleElement = createStyleSheet(this.domNode);\n        this.style(unthemedListStyles);\n    }\n    updateOptions(options) {\n        this.list.updateOptions(options);\n    }\n    splice(start, deleteCount, elements = []) {\n        this.list.splice(start, deleteCount, elements);\n    }\n    getHTMLElement() {\n        return this.domNode;\n    }\n    style(styles) {\n        const content = [];\n        content.push(`.monaco-table.${this.domId} > .monaco-split-view2 .monaco-sash.vertical::before {\n\t\t\ttop: ${this.virtualDelegate.headerRowHeight + 1}px;\n\t\t\theight: calc(100% - ${this.virtualDelegate.headerRowHeight}px);\n\t\t}`);\n        this.styleElement.textContent = content.join('\\n');\n        this.list.style(styles);\n    }\n    getSelectedElements() {\n        return this.list.getSelectedElements();\n    }\n    getSelection() {\n        return this.list.getSelection();\n    }\n    getFocus() {\n        return this.list.getFocus();\n    }\n    dispose() {\n        this.disposables.dispose();\n    }\n}\nTable.InstanceCount = 0;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Widget } from '../widget.js';\nimport { ThemeIcon } from '../../../common/themables.js';\nimport { Emitter } from '../../../common/event.js';\nimport './toggle.css';\nimport { getDefaultHoverDelegate } from '../hover/hoverDelegateFactory.js';\nimport { getBaseLayerHoverDelegate } from '../hover/hoverDelegate2.js';\nexport const unthemedToggleStyles = {\n    inputActiveOptionBorder: '#007ACC00',\n    inputActiveOptionForeground: '#FFFFFF',\n    inputActiveOptionBackground: '#0E639C50'\n};\nexport class Toggle extends Widget {\n    constructor(opts) {\n        var _a;\n        super();\n        this._onChange = this._register(new Emitter());\n        this.onChange = this._onChange.event;\n        this._onKeyDown = this._register(new Emitter());\n        this.onKeyDown = this._onKeyDown.event;\n        this._opts = opts;\n        this._checked = this._opts.isChecked;\n        const classes = ['monaco-custom-toggle'];\n        if (this._opts.icon) {\n            this._icon = this._opts.icon;\n            classes.push(...ThemeIcon.asClassNameArray(this._icon));\n        }\n        if (this._opts.actionClassName) {\n            classes.push(...this._opts.actionClassName.split(' '));\n        }\n        if (this._checked) {\n            classes.push('checked');\n        }\n        this.domNode = document.createElement('div');\n        this._hover = this._register(getBaseLayerHoverDelegate().setupUpdatableHover((_a = opts.hoverDelegate) !== null && _a !== void 0 ? _a : getDefaultHoverDelegate('mouse'), this.domNode, this._opts.title));\n        this.domNode.classList.add(...classes);\n        if (!this._opts.notFocusable) {\n            this.domNode.tabIndex = 0;\n        }\n        this.domNode.setAttribute('role', 'checkbox');\n        this.domNode.setAttribute('aria-checked', String(this._checked));\n        this.domNode.setAttribute('aria-label', this._opts.title);\n        this.applyStyles();\n        this.onclick(this.domNode, (ev) => {\n            if (this.enabled) {\n                this.checked = !this._checked;\n                this._onChange.fire(false);\n                ev.preventDefault();\n            }\n        });\n        this._register(this.ignoreGesture(this.domNode));\n        this.onkeydown(this.domNode, (keyboardEvent) => {\n            if (keyboardEvent.keyCode === 10 /* KeyCode.Space */ || keyboardEvent.keyCode === 3 /* KeyCode.Enter */) {\n                this.checked = !this._checked;\n                this._onChange.fire(true);\n                keyboardEvent.preventDefault();\n                keyboardEvent.stopPropagation();\n                return;\n            }\n            this._onKeyDown.fire(keyboardEvent);\n        });\n    }\n    get enabled() {\n        return this.domNode.getAttribute('aria-disabled') !== 'true';\n    }\n    focus() {\n        this.domNode.focus();\n    }\n    get checked() {\n        return this._checked;\n    }\n    set checked(newIsChecked) {\n        this._checked = newIsChecked;\n        this.domNode.setAttribute('aria-checked', String(this._checked));\n        this.domNode.classList.toggle('checked', this._checked);\n        this.applyStyles();\n    }\n    width() {\n        return 2 /*margin left*/ + 2 /*border*/ + 2 /*padding*/ + 16 /* icon width */;\n    }\n    applyStyles() {\n        if (this.domNode) {\n            this.domNode.style.borderColor = (this._checked && this._opts.inputActiveOptionBorder) || '';\n            this.domNode.style.color = (this._checked && this._opts.inputActiveOptionForeground) || 'inherit';\n            this.domNode.style.backgroundColor = (this._checked && this._opts.inputActiveOptionBackground) || '';\n        }\n    }\n    enable() {\n        this.domNode.setAttribute('aria-disabled', String(false));\n    }\n    disable() {\n        this.domNode.setAttribute('aria-disabled', String(true));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ActionBar } from '../actionbar/actionbar.js';\nimport { DropdownMenuActionViewItem } from '../dropdown/dropdownActionViewItem.js';\nimport { Action, SubmenuAction } from '../../../common/actions.js';\nimport { Codicon } from '../../../common/codicons.js';\nimport { ThemeIcon } from '../../../common/themables.js';\nimport { EventMultiplexer } from '../../../common/event.js';\nimport { Disposable, DisposableStore } from '../../../common/lifecycle.js';\nimport './toolbar.css';\nimport * as nls from '../../../../nls.js';\nimport { createInstantHoverDelegate } from '../hover/hoverDelegateFactory.js';\n/**\n * A widget that combines an action bar for primary actions and a dropdown for secondary actions.\n */\nexport class ToolBar extends Disposable {\n    constructor(container, contextMenuProvider, options = { orientation: 0 /* ActionsOrientation.HORIZONTAL */ }) {\n        var _a;\n        super();\n        this.submenuActionViewItems = [];\n        this.hasSecondaryActions = false;\n        this._onDidChangeDropdownVisibility = this._register(new EventMultiplexer());\n        this.onDidChangeDropdownVisibility = this._onDidChangeDropdownVisibility.event;\n        this.disposables = this._register(new DisposableStore());\n        options.hoverDelegate = (_a = options.hoverDelegate) !== null && _a !== void 0 ? _a : this._register(createInstantHoverDelegate());\n        this.options = options;\n        this.lookupKeybindings = typeof this.options.getKeyBinding === 'function';\n        this.toggleMenuAction = this._register(new ToggleMenuAction(() => { var _a; return (_a = this.toggleMenuActionViewItem) === null || _a === void 0 ? void 0 : _a.show(); }, options.toggleMenuTitle));\n        this.element = document.createElement('div');\n        this.element.className = 'monaco-toolbar';\n        container.appendChild(this.element);\n        this.actionBar = this._register(new ActionBar(this.element, {\n            orientation: options.orientation,\n            ariaLabel: options.ariaLabel,\n            actionRunner: options.actionRunner,\n            allowContextMenu: options.allowContextMenu,\n            highlightToggledItems: options.highlightToggledItems,\n            hoverDelegate: options.hoverDelegate,\n            actionViewItemProvider: (action, viewItemOptions) => {\n                var _a;\n                if (action.id === ToggleMenuAction.ID) {\n                    this.toggleMenuActionViewItem = new DropdownMenuActionViewItem(action, action.menuActions, contextMenuProvider, {\n                        actionViewItemProvider: this.options.actionViewItemProvider,\n                        actionRunner: this.actionRunner,\n                        keybindingProvider: this.options.getKeyBinding,\n                        classNames: ThemeIcon.asClassNameArray((_a = options.moreIcon) !== null && _a !== void 0 ? _a : Codicon.toolBarMore),\n                        anchorAlignmentProvider: this.options.anchorAlignmentProvider,\n                        menuAsChild: !!this.options.renderDropdownAsChildElement,\n                        skipTelemetry: this.options.skipTelemetry,\n                        isMenu: true,\n                        hoverDelegate: this.options.hoverDelegate\n                    });\n                    this.toggleMenuActionViewItem.setActionContext(this.actionBar.context);\n                    this.disposables.add(this._onDidChangeDropdownVisibility.add(this.toggleMenuActionViewItem.onDidChangeVisibility));\n                    return this.toggleMenuActionViewItem;\n                }\n                if (options.actionViewItemProvider) {\n                    const result = options.actionViewItemProvider(action, viewItemOptions);\n                    if (result) {\n                        return result;\n                    }\n                }\n                if (action instanceof SubmenuAction) {\n                    const result = new DropdownMenuActionViewItem(action, action.actions, contextMenuProvider, {\n                        actionViewItemProvider: this.options.actionViewItemProvider,\n                        actionRunner: this.actionRunner,\n                        keybindingProvider: this.options.getKeyBinding,\n                        classNames: action.class,\n                        anchorAlignmentProvider: this.options.anchorAlignmentProvider,\n                        menuAsChild: !!this.options.renderDropdownAsChildElement,\n                        skipTelemetry: this.options.skipTelemetry,\n                        hoverDelegate: this.options.hoverDelegate\n                    });\n                    result.setActionContext(this.actionBar.context);\n                    this.submenuActionViewItems.push(result);\n                    this.disposables.add(this._onDidChangeDropdownVisibility.add(result.onDidChangeVisibility));\n                    return result;\n                }\n                return undefined;\n            }\n        }));\n    }\n    set actionRunner(actionRunner) {\n        this.actionBar.actionRunner = actionRunner;\n    }\n    get actionRunner() {\n        return this.actionBar.actionRunner;\n    }\n    getElement() {\n        return this.element;\n    }\n    getItemAction(indexOrElement) {\n        return this.actionBar.getAction(indexOrElement);\n    }\n    setActions(primaryActions, secondaryActions) {\n        this.clear();\n        const primaryActionsToSet = primaryActions ? primaryActions.slice(0) : [];\n        // Inject additional action to open secondary actions if present\n        this.hasSecondaryActions = !!(secondaryActions && secondaryActions.length > 0);\n        if (this.hasSecondaryActions && secondaryActions) {\n            this.toggleMenuAction.menuActions = secondaryActions.slice(0);\n            primaryActionsToSet.push(this.toggleMenuAction);\n        }\n        primaryActionsToSet.forEach(action => {\n            this.actionBar.push(action, { icon: true, label: false, keybinding: this.getKeybindingLabel(action) });\n        });\n    }\n    getKeybindingLabel(action) {\n        var _a, _b, _c;\n        const key = this.lookupKeybindings ? (_b = (_a = this.options).getKeyBinding) === null || _b === void 0 ? void 0 : _b.call(_a, action) : undefined;\n        return (_c = key === null || key === void 0 ? void 0 : key.getLabel()) !== null && _c !== void 0 ? _c : undefined;\n    }\n    clear() {\n        this.submenuActionViewItems = [];\n        this.disposables.clear();\n        this.actionBar.clear();\n    }\n    dispose() {\n        this.clear();\n        this.disposables.dispose();\n        super.dispose();\n    }\n}\nexport class ToggleMenuAction extends Action {\n    constructor(toggleDropdownMenu, title) {\n        title = title || nls.localize('moreActions', \"More Actions...\");\n        super(ToggleMenuAction.ID, title, undefined, true);\n        this._menuActions = [];\n        this.toggleDropdownMenu = toggleDropdownMenu;\n    }\n    async run() {\n        this.toggleDropdownMenu();\n    }\n    get menuActions() {\n        return this._menuActions;\n    }\n    set menuActions(actions) {\n        this._menuActions = actions;\n    }\n}\nToggleMenuAction.ID = 'toolbar.toggle.more';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, append, clearNode, createStyleSheet, getWindow, h, hasParentWithClass, asCssValueWithDefault, isKeyboardEvent } from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { ActionBar } from '../actionbar/actionbar.js';\nimport { FindInput } from '../findinput/findInput.js';\nimport { unthemedInboxStyles } from '../inputbox/inputBox.js';\nimport { ElementsDragAndDropData } from '../list/listView.js';\nimport { isActionItem, isButton, isInputElement, isMonacoCustomToggle, isMonacoEditor, isStickyScrollContainer, isStickyScrollElement, List, MouseController } from '../list/listWidget.js';\nimport { Toggle, unthemedToggleStyles } from '../toggle/toggle.js';\nimport { getVisibleState, isFilterResult } from './indexTreeModel.js';\nimport { TreeMouseEventTarget } from './tree.js';\nimport { Action } from '../../../common/actions.js';\nimport { distinct, equals, range } from '../../../common/arrays.js';\nimport { Delayer, disposableTimeout, timeout } from '../../../common/async.js';\nimport { Codicon } from '../../../common/codicons.js';\nimport { ThemeIcon } from '../../../common/themables.js';\nimport { SetMap } from '../../../common/map.js';\nimport { Emitter, Event, EventBufferer, Relay } from '../../../common/event.js';\nimport { fuzzyScore, FuzzyScore } from '../../../common/filters.js';\nimport { Disposable, DisposableStore, dispose, toDisposable } from '../../../common/lifecycle.js';\nimport { clamp } from '../../../common/numbers.js';\nimport { isNumber } from '../../../common/types.js';\nimport './media/tree.css';\nimport { localize } from '../../../../nls.js';\nimport { createInstantHoverDelegate, getDefaultHoverDelegate } from '../hover/hoverDelegateFactory.js';\nimport { autorun, constObservable } from '../../../common/observable.js';\nclass TreeElementsDragAndDropData extends ElementsDragAndDropData {\n    constructor(data) {\n        super(data.elements.map(node => node.element));\n        this.data = data;\n    }\n}\nfunction asTreeDragAndDropData(data) {\n    if (data instanceof ElementsDragAndDropData) {\n        return new TreeElementsDragAndDropData(data);\n    }\n    return data;\n}\nclass TreeNodeListDragAndDrop {\n    constructor(modelProvider, dnd) {\n        this.modelProvider = modelProvider;\n        this.dnd = dnd;\n        this.autoExpandDisposable = Disposable.None;\n        this.disposables = new DisposableStore();\n    }\n    getDragURI(node) {\n        return this.dnd.getDragURI(node.element);\n    }\n    getDragLabel(nodes, originalEvent) {\n        if (this.dnd.getDragLabel) {\n            return this.dnd.getDragLabel(nodes.map(node => node.element), originalEvent);\n        }\n        return undefined;\n    }\n    onDragStart(data, originalEvent) {\n        var _a, _b;\n        (_b = (_a = this.dnd).onDragStart) === null || _b === void 0 ? void 0 : _b.call(_a, asTreeDragAndDropData(data), originalEvent);\n    }\n    onDragOver(data, targetNode, targetIndex, targetSector, originalEvent, raw = true) {\n        const result = this.dnd.onDragOver(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, targetSector, originalEvent);\n        const didChangeAutoExpandNode = this.autoExpandNode !== targetNode;\n        if (didChangeAutoExpandNode) {\n            this.autoExpandDisposable.dispose();\n            this.autoExpandNode = targetNode;\n        }\n        if (typeof targetNode === 'undefined') {\n            return result;\n        }\n        if (didChangeAutoExpandNode && typeof result !== 'boolean' && result.autoExpand) {\n            this.autoExpandDisposable = disposableTimeout(() => {\n                const model = this.modelProvider();\n                const ref = model.getNodeLocation(targetNode);\n                if (model.isCollapsed(ref)) {\n                    model.setCollapsed(ref, false);\n                }\n                this.autoExpandNode = undefined;\n            }, 500, this.disposables);\n        }\n        if (typeof result === 'boolean' || !result.accept || typeof result.bubble === 'undefined' || result.feedback) {\n            if (!raw) {\n                const accept = typeof result === 'boolean' ? result : result.accept;\n                const effect = typeof result === 'boolean' ? undefined : result.effect;\n                return { accept, effect, feedback: [targetIndex] };\n            }\n            return result;\n        }\n        if (result.bubble === 1 /* TreeDragOverBubble.Up */) {\n            const model = this.modelProvider();\n            const ref = model.getNodeLocation(targetNode);\n            const parentRef = model.getParentNodeLocation(ref);\n            const parentNode = model.getNode(parentRef);\n            const parentIndex = parentRef && model.getListIndex(parentRef);\n            return this.onDragOver(data, parentNode, parentIndex, targetSector, originalEvent, false);\n        }\n        const model = this.modelProvider();\n        const ref = model.getNodeLocation(targetNode);\n        const start = model.getListIndex(ref);\n        const length = model.getListRenderCount(ref);\n        return { ...result, feedback: range(start, start + length) };\n    }\n    drop(data, targetNode, targetIndex, targetSector, originalEvent) {\n        this.autoExpandDisposable.dispose();\n        this.autoExpandNode = undefined;\n        this.dnd.drop(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, targetSector, originalEvent);\n    }\n    onDragEnd(originalEvent) {\n        var _a, _b;\n        (_b = (_a = this.dnd).onDragEnd) === null || _b === void 0 ? void 0 : _b.call(_a, originalEvent);\n    }\n    dispose() {\n        this.disposables.dispose();\n        this.dnd.dispose();\n    }\n}\nfunction asListOptions(modelProvider, options) {\n    return options && {\n        ...options,\n        identityProvider: options.identityProvider && {\n            getId(el) {\n                return options.identityProvider.getId(el.element);\n            }\n        },\n        dnd: options.dnd && new TreeNodeListDragAndDrop(modelProvider, options.dnd),\n        multipleSelectionController: options.multipleSelectionController && {\n            isSelectionSingleChangeEvent(e) {\n                return options.multipleSelectionController.isSelectionSingleChangeEvent({ ...e, element: e.element });\n            },\n            isSelectionRangeChangeEvent(e) {\n                return options.multipleSelectionController.isSelectionRangeChangeEvent({ ...e, element: e.element });\n            }\n        },\n        accessibilityProvider: options.accessibilityProvider && {\n            ...options.accessibilityProvider,\n            getSetSize(node) {\n                const model = modelProvider();\n                const ref = model.getNodeLocation(node);\n                const parentRef = model.getParentNodeLocation(ref);\n                const parentNode = model.getNode(parentRef);\n                return parentNode.visibleChildrenCount;\n            },\n            getPosInSet(node) {\n                return node.visibleChildIndex + 1;\n            },\n            isChecked: options.accessibilityProvider && options.accessibilityProvider.isChecked ? (node) => {\n                return options.accessibilityProvider.isChecked(node.element);\n            } : undefined,\n            getRole: options.accessibilityProvider && options.accessibilityProvider.getRole ? (node) => {\n                return options.accessibilityProvider.getRole(node.element);\n            } : () => 'treeitem',\n            getAriaLabel(e) {\n                return options.accessibilityProvider.getAriaLabel(e.element);\n            },\n            getWidgetAriaLabel() {\n                return options.accessibilityProvider.getWidgetAriaLabel();\n            },\n            getWidgetRole: options.accessibilityProvider && options.accessibilityProvider.getWidgetRole ? () => options.accessibilityProvider.getWidgetRole() : () => 'tree',\n            getAriaLevel: options.accessibilityProvider && options.accessibilityProvider.getAriaLevel ? (node) => options.accessibilityProvider.getAriaLevel(node.element) : (node) => {\n                return node.depth;\n            },\n            getActiveDescendantId: options.accessibilityProvider.getActiveDescendantId && (node => {\n                return options.accessibilityProvider.getActiveDescendantId(node.element);\n            })\n        },\n        keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && {\n            ...options.keyboardNavigationLabelProvider,\n            getKeyboardNavigationLabel(node) {\n                return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(node.element);\n            }\n        }\n    };\n}\nexport class ComposedTreeDelegate {\n    constructor(delegate) {\n        this.delegate = delegate;\n    }\n    getHeight(element) {\n        return this.delegate.getHeight(element.element);\n    }\n    getTemplateId(element) {\n        return this.delegate.getTemplateId(element.element);\n    }\n    hasDynamicHeight(element) {\n        return !!this.delegate.hasDynamicHeight && this.delegate.hasDynamicHeight(element.element);\n    }\n    setDynamicHeight(element, height) {\n        var _a, _b;\n        (_b = (_a = this.delegate).setDynamicHeight) === null || _b === void 0 ? void 0 : _b.call(_a, element.element, height);\n    }\n}\nexport var RenderIndentGuides;\n(function (RenderIndentGuides) {\n    RenderIndentGuides[\"None\"] = \"none\";\n    RenderIndentGuides[\"OnHover\"] = \"onHover\";\n    RenderIndentGuides[\"Always\"] = \"always\";\n})(RenderIndentGuides || (RenderIndentGuides = {}));\nclass EventCollection {\n    get elements() {\n        return this._elements;\n    }\n    constructor(onDidChange, _elements = []) {\n        this._elements = _elements;\n        this.disposables = new DisposableStore();\n        this.onDidChange = Event.forEach(onDidChange, elements => this._elements = elements, this.disposables);\n    }\n    dispose() {\n        this.disposables.dispose();\n    }\n}\nexport class TreeRenderer {\n    constructor(renderer, modelProvider, onDidChangeCollapseState, activeNodes, renderedIndentGuides, options = {}) {\n        var _a;\n        this.renderer = renderer;\n        this.modelProvider = modelProvider;\n        this.activeNodes = activeNodes;\n        this.renderedIndentGuides = renderedIndentGuides;\n        this.renderedElements = new Map();\n        this.renderedNodes = new Map();\n        this.indent = TreeRenderer.DefaultIndent;\n        this.hideTwistiesOfChildlessElements = false;\n        this.shouldRenderIndentGuides = false;\n        this.activeIndentNodes = new Set();\n        this.indentGuidesDisposable = Disposable.None;\n        this.disposables = new DisposableStore();\n        this.templateId = renderer.templateId;\n        this.updateOptions(options);\n        Event.map(onDidChangeCollapseState, e => e.node)(this.onDidChangeNodeTwistieState, this, this.disposables);\n        (_a = renderer.onDidChangeTwistieState) === null || _a === void 0 ? void 0 : _a.call(renderer, this.onDidChangeTwistieState, this, this.disposables);\n    }\n    updateOptions(options = {}) {\n        if (typeof options.indent !== 'undefined') {\n            const indent = clamp(options.indent, 0, 40);\n            if (indent !== this.indent) {\n                this.indent = indent;\n                for (const [node, templateData] of this.renderedNodes) {\n                    this.renderTreeElement(node, templateData);\n                }\n            }\n        }\n        if (typeof options.renderIndentGuides !== 'undefined') {\n            const shouldRenderIndentGuides = options.renderIndentGuides !== RenderIndentGuides.None;\n            if (shouldRenderIndentGuides !== this.shouldRenderIndentGuides) {\n                this.shouldRenderIndentGuides = shouldRenderIndentGuides;\n                for (const [node, templateData] of this.renderedNodes) {\n                    this._renderIndentGuides(node, templateData);\n                }\n                this.indentGuidesDisposable.dispose();\n                if (shouldRenderIndentGuides) {\n                    const disposables = new DisposableStore();\n                    this.activeNodes.onDidChange(this._onDidChangeActiveNodes, this, disposables);\n                    this.indentGuidesDisposable = disposables;\n                    this._onDidChangeActiveNodes(this.activeNodes.elements);\n                }\n            }\n        }\n        if (typeof options.hideTwistiesOfChildlessElements !== 'undefined') {\n            this.hideTwistiesOfChildlessElements = options.hideTwistiesOfChildlessElements;\n        }\n    }\n    renderTemplate(container) {\n        const el = append(container, $('.monaco-tl-row'));\n        const indent = append(el, $('.monaco-tl-indent'));\n        const twistie = append(el, $('.monaco-tl-twistie'));\n        const contents = append(el, $('.monaco-tl-contents'));\n        const templateData = this.renderer.renderTemplate(contents);\n        return { container, indent, twistie, indentGuidesDisposable: Disposable.None, templateData };\n    }\n    renderElement(node, index, templateData, height) {\n        this.renderedNodes.set(node, templateData);\n        this.renderedElements.set(node.element, node);\n        this.renderTreeElement(node, templateData);\n        this.renderer.renderElement(node, index, templateData.templateData, height);\n    }\n    disposeElement(node, index, templateData, height) {\n        var _a, _b;\n        templateData.indentGuidesDisposable.dispose();\n        (_b = (_a = this.renderer).disposeElement) === null || _b === void 0 ? void 0 : _b.call(_a, node, index, templateData.templateData, height);\n        if (typeof height === 'number') {\n            this.renderedNodes.delete(node);\n            this.renderedElements.delete(node.element);\n        }\n    }\n    disposeTemplate(templateData) {\n        this.renderer.disposeTemplate(templateData.templateData);\n    }\n    onDidChangeTwistieState(element) {\n        const node = this.renderedElements.get(element);\n        if (!node) {\n            return;\n        }\n        this.onDidChangeNodeTwistieState(node);\n    }\n    onDidChangeNodeTwistieState(node) {\n        const templateData = this.renderedNodes.get(node);\n        if (!templateData) {\n            return;\n        }\n        this._onDidChangeActiveNodes(this.activeNodes.elements);\n        this.renderTreeElement(node, templateData);\n    }\n    renderTreeElement(node, templateData) {\n        const indent = TreeRenderer.DefaultIndent + (node.depth - 1) * this.indent;\n        templateData.twistie.style.paddingLeft = `${indent}px`;\n        templateData.indent.style.width = `${indent + this.indent - 16}px`;\n        if (node.collapsible) {\n            templateData.container.setAttribute('aria-expanded', String(!node.collapsed));\n        }\n        else {\n            templateData.container.removeAttribute('aria-expanded');\n        }\n        templateData.twistie.classList.remove(...ThemeIcon.asClassNameArray(Codicon.treeItemExpanded));\n        let twistieRendered = false;\n        if (this.renderer.renderTwistie) {\n            twistieRendered = this.renderer.renderTwistie(node.element, templateData.twistie);\n        }\n        if (node.collapsible && (!this.hideTwistiesOfChildlessElements || node.visibleChildrenCount > 0)) {\n            if (!twistieRendered) {\n                templateData.twistie.classList.add(...ThemeIcon.asClassNameArray(Codicon.treeItemExpanded));\n            }\n            templateData.twistie.classList.add('collapsible');\n            templateData.twistie.classList.toggle('collapsed', node.collapsed);\n        }\n        else {\n            templateData.twistie.classList.remove('collapsible', 'collapsed');\n        }\n        this._renderIndentGuides(node, templateData);\n    }\n    _renderIndentGuides(node, templateData) {\n        clearNode(templateData.indent);\n        templateData.indentGuidesDisposable.dispose();\n        if (!this.shouldRenderIndentGuides) {\n            return;\n        }\n        const disposableStore = new DisposableStore();\n        const model = this.modelProvider();\n        while (true) {\n            const ref = model.getNodeLocation(node);\n            const parentRef = model.getParentNodeLocation(ref);\n            if (!parentRef) {\n                break;\n            }\n            const parent = model.getNode(parentRef);\n            const guide = $('.indent-guide', { style: `width: ${this.indent}px` });\n            if (this.activeIndentNodes.has(parent)) {\n                guide.classList.add('active');\n            }\n            if (templateData.indent.childElementCount === 0) {\n                templateData.indent.appendChild(guide);\n            }\n            else {\n                templateData.indent.insertBefore(guide, templateData.indent.firstElementChild);\n            }\n            this.renderedIndentGuides.add(parent, guide);\n            disposableStore.add(toDisposable(() => this.renderedIndentGuides.delete(parent, guide)));\n            node = parent;\n        }\n        templateData.indentGuidesDisposable = disposableStore;\n    }\n    _onDidChangeActiveNodes(nodes) {\n        if (!this.shouldRenderIndentGuides) {\n            return;\n        }\n        const set = new Set();\n        const model = this.modelProvider();\n        nodes.forEach(node => {\n            const ref = model.getNodeLocation(node);\n            try {\n                const parentRef = model.getParentNodeLocation(ref);\n                if (node.collapsible && node.children.length > 0 && !node.collapsed) {\n                    set.add(node);\n                }\n                else if (parentRef) {\n                    set.add(model.getNode(parentRef));\n                }\n            }\n            catch (_a) {\n                // noop\n            }\n        });\n        this.activeIndentNodes.forEach(node => {\n            if (!set.has(node)) {\n                this.renderedIndentGuides.forEach(node, line => line.classList.remove('active'));\n            }\n        });\n        set.forEach(node => {\n            if (!this.activeIndentNodes.has(node)) {\n                this.renderedIndentGuides.forEach(node, line => line.classList.add('active'));\n            }\n        });\n        this.activeIndentNodes = set;\n    }\n    dispose() {\n        this.renderedNodes.clear();\n        this.renderedElements.clear();\n        this.indentGuidesDisposable.dispose();\n        dispose(this.disposables);\n    }\n}\nTreeRenderer.DefaultIndent = 8;\nclass FindFilter {\n    get totalCount() { return this._totalCount; }\n    get matchCount() { return this._matchCount; }\n    constructor(tree, keyboardNavigationLabelProvider, _filter) {\n        this.tree = tree;\n        this.keyboardNavigationLabelProvider = keyboardNavigationLabelProvider;\n        this._filter = _filter;\n        this._totalCount = 0;\n        this._matchCount = 0;\n        this._pattern = '';\n        this._lowercasePattern = '';\n        this.disposables = new DisposableStore();\n        tree.onWillRefilter(this.reset, this, this.disposables);\n    }\n    filter(element, parentVisibility) {\n        let visibility = 1 /* TreeVisibility.Visible */;\n        if (this._filter) {\n            const result = this._filter.filter(element, parentVisibility);\n            if (typeof result === 'boolean') {\n                visibility = result ? 1 /* TreeVisibility.Visible */ : 0 /* TreeVisibility.Hidden */;\n            }\n            else if (isFilterResult(result)) {\n                visibility = getVisibleState(result.visibility);\n            }\n            else {\n                visibility = result;\n            }\n            if (visibility === 0 /* TreeVisibility.Hidden */) {\n                return false;\n            }\n        }\n        this._totalCount++;\n        if (!this._pattern) {\n            this._matchCount++;\n            return { data: FuzzyScore.Default, visibility };\n        }\n        const label = this.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(element);\n        const labels = Array.isArray(label) ? label : [label];\n        for (const l of labels) {\n            const labelStr = l && l.toString();\n            if (typeof labelStr === 'undefined') {\n                return { data: FuzzyScore.Default, visibility };\n            }\n            let score;\n            if (this.tree.findMatchType === TreeFindMatchType.Contiguous) {\n                const index = labelStr.toLowerCase().indexOf(this._lowercasePattern);\n                if (index > -1) {\n                    score = [Number.MAX_SAFE_INTEGER, 0];\n                    for (let i = this._lowercasePattern.length; i > 0; i--) {\n                        score.push(index + i - 1);\n                    }\n                }\n            }\n            else {\n                score = fuzzyScore(this._pattern, this._lowercasePattern, 0, labelStr, labelStr.toLowerCase(), 0, { firstMatchCanBeWeak: true, boostFullMatch: true });\n            }\n            if (score) {\n                this._matchCount++;\n                return labels.length === 1 ?\n                    { data: score, visibility } :\n                    { data: { label: labelStr, score: score }, visibility };\n            }\n        }\n        if (this.tree.findMode === TreeFindMode.Filter) {\n            if (typeof this.tree.options.defaultFindVisibility === 'number') {\n                return this.tree.options.defaultFindVisibility;\n            }\n            else if (this.tree.options.defaultFindVisibility) {\n                return this.tree.options.defaultFindVisibility(element);\n            }\n            else {\n                return 2 /* TreeVisibility.Recurse */;\n            }\n        }\n        else {\n            return { data: FuzzyScore.Default, visibility };\n        }\n    }\n    reset() {\n        this._totalCount = 0;\n        this._matchCount = 0;\n    }\n    dispose() {\n        dispose(this.disposables);\n    }\n}\nexport class ModeToggle extends Toggle {\n    constructor(opts) {\n        var _a, _b;\n        super({\n            icon: Codicon.listFilter,\n            title: localize('filter', \"Filter\"),\n            isChecked: (_a = opts.isChecked) !== null && _a !== void 0 ? _a : false,\n            hoverDelegate: (_b = opts.hoverDelegate) !== null && _b !== void 0 ? _b : getDefaultHoverDelegate('element'),\n            inputActiveOptionBorder: opts.inputActiveOptionBorder,\n            inputActiveOptionForeground: opts.inputActiveOptionForeground,\n            inputActiveOptionBackground: opts.inputActiveOptionBackground\n        });\n    }\n}\nexport class FuzzyToggle extends Toggle {\n    constructor(opts) {\n        var _a, _b;\n        super({\n            icon: Codicon.searchFuzzy,\n            title: localize('fuzzySearch', \"Fuzzy Match\"),\n            isChecked: (_a = opts.isChecked) !== null && _a !== void 0 ? _a : false,\n            hoverDelegate: (_b = opts.hoverDelegate) !== null && _b !== void 0 ? _b : getDefaultHoverDelegate('element'),\n            inputActiveOptionBorder: opts.inputActiveOptionBorder,\n            inputActiveOptionForeground: opts.inputActiveOptionForeground,\n            inputActiveOptionBackground: opts.inputActiveOptionBackground\n        });\n    }\n}\nconst unthemedFindWidgetStyles = {\n    inputBoxStyles: unthemedInboxStyles,\n    toggleStyles: unthemedToggleStyles,\n    listFilterWidgetBackground: undefined,\n    listFilterWidgetNoMatchesOutline: undefined,\n    listFilterWidgetOutline: undefined,\n    listFilterWidgetShadow: undefined\n};\nexport var TreeFindMode;\n(function (TreeFindMode) {\n    TreeFindMode[TreeFindMode[\"Highlight\"] = 0] = \"Highlight\";\n    TreeFindMode[TreeFindMode[\"Filter\"] = 1] = \"Filter\";\n})(TreeFindMode || (TreeFindMode = {}));\nexport var TreeFindMatchType;\n(function (TreeFindMatchType) {\n    TreeFindMatchType[TreeFindMatchType[\"Fuzzy\"] = 0] = \"Fuzzy\";\n    TreeFindMatchType[TreeFindMatchType[\"Contiguous\"] = 1] = \"Contiguous\";\n})(TreeFindMatchType || (TreeFindMatchType = {}));\nclass FindWidget extends Disposable {\n    set mode(mode) {\n        this.modeToggle.checked = mode === TreeFindMode.Filter;\n        this.findInput.inputBox.setPlaceHolder(mode === TreeFindMode.Filter ? localize('type to filter', \"Type to filter\") : localize('type to search', \"Type to search\"));\n    }\n    set matchType(matchType) {\n        this.matchTypeToggle.checked = matchType === TreeFindMatchType.Fuzzy;\n    }\n    constructor(container, tree, contextViewProvider, mode, matchType, options) {\n        var _a;\n        super();\n        this.tree = tree;\n        this.elements = h('.monaco-tree-type-filter', [\n            h('.monaco-tree-type-filter-grab.codicon.codicon-debug-gripper@grab', { tabIndex: 0 }),\n            h('.monaco-tree-type-filter-input@findInput'),\n            h('.monaco-tree-type-filter-actionbar@actionbar'),\n        ]);\n        this.width = 0;\n        this.right = 0;\n        this.top = 0;\n        this._onDidDisable = new Emitter();\n        container.appendChild(this.elements.root);\n        this._register(toDisposable(() => container.removeChild(this.elements.root)));\n        const styles = (_a = options === null || options === void 0 ? void 0 : options.styles) !== null && _a !== void 0 ? _a : unthemedFindWidgetStyles;\n        if (styles.listFilterWidgetBackground) {\n            this.elements.root.style.backgroundColor = styles.listFilterWidgetBackground;\n        }\n        if (styles.listFilterWidgetShadow) {\n            this.elements.root.style.boxShadow = `0 0 8px 2px ${styles.listFilterWidgetShadow}`;\n        }\n        const toggleHoverDelegate = this._register(createInstantHoverDelegate());\n        this.modeToggle = this._register(new ModeToggle({ ...styles.toggleStyles, isChecked: mode === TreeFindMode.Filter, hoverDelegate: toggleHoverDelegate }));\n        this.matchTypeToggle = this._register(new FuzzyToggle({ ...styles.toggleStyles, isChecked: matchType === TreeFindMatchType.Fuzzy, hoverDelegate: toggleHoverDelegate }));\n        this.onDidChangeMode = Event.map(this.modeToggle.onChange, () => this.modeToggle.checked ? TreeFindMode.Filter : TreeFindMode.Highlight, this._store);\n        this.onDidChangeMatchType = Event.map(this.matchTypeToggle.onChange, () => this.matchTypeToggle.checked ? TreeFindMatchType.Fuzzy : TreeFindMatchType.Contiguous, this._store);\n        this.findInput = this._register(new FindInput(this.elements.findInput, contextViewProvider, {\n            label: localize('type to search', \"Type to search\"),\n            additionalToggles: [this.modeToggle, this.matchTypeToggle],\n            showCommonFindToggles: false,\n            inputBoxStyles: styles.inputBoxStyles,\n            toggleStyles: styles.toggleStyles,\n            history: options === null || options === void 0 ? void 0 : options.history\n        }));\n        this.actionbar = this._register(new ActionBar(this.elements.actionbar));\n        this.mode = mode;\n        const emitter = this._register(new DomEmitter(this.findInput.inputBox.inputElement, 'keydown'));\n        const onKeyDown = Event.chain(emitter.event, $ => $.map(e => new StandardKeyboardEvent(e)));\n        this._register(onKeyDown((e) => {\n            // Using equals() so we reserve modified keys for future use\n            if (e.equals(3 /* KeyCode.Enter */)) {\n                // This is the only keyboard way to return to the tree from a history item that isn't the last one\n                e.preventDefault();\n                e.stopPropagation();\n                this.findInput.inputBox.addToHistory();\n                this.tree.domFocus();\n                return;\n            }\n            if (e.equals(18 /* KeyCode.DownArrow */)) {\n                e.preventDefault();\n                e.stopPropagation();\n                if (this.findInput.inputBox.isAtLastInHistory() || this.findInput.inputBox.isNowhereInHistory()) {\n                    // Retain original pre-history DownArrow behavior\n                    this.findInput.inputBox.addToHistory();\n                    this.tree.domFocus();\n                }\n                else {\n                    // Downward through history\n                    this.findInput.inputBox.showNextValue();\n                }\n                return;\n            }\n            if (e.equals(16 /* KeyCode.UpArrow */)) {\n                e.preventDefault();\n                e.stopPropagation();\n                // Upward through history\n                this.findInput.inputBox.showPreviousValue();\n                return;\n            }\n        }));\n        const closeAction = this._register(new Action('close', localize('close', \"Close\"), 'codicon codicon-close', true, () => this.dispose()));\n        this.actionbar.push(closeAction, { icon: true, label: false });\n        const onGrabMouseDown = this._register(new DomEmitter(this.elements.grab, 'mousedown'));\n        this._register(onGrabMouseDown.event(e => {\n            const disposables = new DisposableStore();\n            const onWindowMouseMove = disposables.add(new DomEmitter(getWindow(e), 'mousemove'));\n            const onWindowMouseUp = disposables.add(new DomEmitter(getWindow(e), 'mouseup'));\n            const startRight = this.right;\n            const startX = e.pageX;\n            const startTop = this.top;\n            const startY = e.pageY;\n            this.elements.grab.classList.add('grabbing');\n            const transition = this.elements.root.style.transition;\n            this.elements.root.style.transition = 'unset';\n            const update = (e) => {\n                const deltaX = e.pageX - startX;\n                this.right = startRight - deltaX;\n                const deltaY = e.pageY - startY;\n                this.top = startTop + deltaY;\n                this.layout();\n            };\n            disposables.add(onWindowMouseMove.event(update));\n            disposables.add(onWindowMouseUp.event(e => {\n                update(e);\n                this.elements.grab.classList.remove('grabbing');\n                this.elements.root.style.transition = transition;\n                disposables.dispose();\n            }));\n        }));\n        const onGrabKeyDown = Event.chain(this._register(new DomEmitter(this.elements.grab, 'keydown')).event, $ => $.map(e => new StandardKeyboardEvent(e)));\n        this._register(onGrabKeyDown((e) => {\n            let right;\n            let top;\n            if (e.keyCode === 15 /* KeyCode.LeftArrow */) {\n                right = Number.POSITIVE_INFINITY;\n            }\n            else if (e.keyCode === 17 /* KeyCode.RightArrow */) {\n                right = 0;\n            }\n            else if (e.keyCode === 10 /* KeyCode.Space */) {\n                right = this.right === 0 ? Number.POSITIVE_INFINITY : 0;\n            }\n            if (e.keyCode === 16 /* KeyCode.UpArrow */) {\n                top = 0;\n            }\n            else if (e.keyCode === 18 /* KeyCode.DownArrow */) {\n                top = Number.POSITIVE_INFINITY;\n            }\n            if (right !== undefined) {\n                e.preventDefault();\n                e.stopPropagation();\n                this.right = right;\n                this.layout();\n            }\n            if (top !== undefined) {\n                e.preventDefault();\n                e.stopPropagation();\n                this.top = top;\n                const transition = this.elements.root.style.transition;\n                this.elements.root.style.transition = 'unset';\n                this.layout();\n                setTimeout(() => {\n                    this.elements.root.style.transition = transition;\n                }, 0);\n            }\n        }));\n        this.onDidChangeValue = this.findInput.onDidChange;\n    }\n    layout(width = this.width) {\n        this.width = width;\n        this.right = clamp(this.right, 0, Math.max(0, width - 212));\n        this.elements.root.style.right = `${this.right}px`;\n        this.top = clamp(this.top, 0, 24);\n        this.elements.root.style.top = `${this.top}px`;\n    }\n    showMessage(message) {\n        this.findInput.showMessage(message);\n    }\n    clearMessage() {\n        this.findInput.clearMessage();\n    }\n    async dispose() {\n        this._onDidDisable.fire();\n        this.elements.root.classList.add('disabled');\n        await timeout(300);\n        super.dispose();\n    }\n}\nclass FindController {\n    get pattern() { return this._pattern; }\n    get mode() { return this._mode; }\n    set mode(mode) {\n        if (mode === this._mode) {\n            return;\n        }\n        this._mode = mode;\n        if (this.widget) {\n            this.widget.mode = this._mode;\n        }\n        this.tree.refilter();\n        this.render();\n        this._onDidChangeMode.fire(mode);\n    }\n    get matchType() { return this._matchType; }\n    set matchType(matchType) {\n        if (matchType === this._matchType) {\n            return;\n        }\n        this._matchType = matchType;\n        if (this.widget) {\n            this.widget.matchType = this._matchType;\n        }\n        this.tree.refilter();\n        this.render();\n        this._onDidChangeMatchType.fire(matchType);\n    }\n    constructor(tree, model, view, filter, contextViewProvider, options = {}) {\n        var _a, _b;\n        this.tree = tree;\n        this.view = view;\n        this.filter = filter;\n        this.contextViewProvider = contextViewProvider;\n        this.options = options;\n        this._pattern = '';\n        this.width = 0;\n        this._onDidChangeMode = new Emitter();\n        this.onDidChangeMode = this._onDidChangeMode.event;\n        this._onDidChangeMatchType = new Emitter();\n        this.onDidChangeMatchType = this._onDidChangeMatchType.event;\n        this._onDidChangePattern = new Emitter();\n        this._onDidChangeOpenState = new Emitter();\n        this.onDidChangeOpenState = this._onDidChangeOpenState.event;\n        this.enabledDisposables = new DisposableStore();\n        this.disposables = new DisposableStore();\n        this._mode = (_a = tree.options.defaultFindMode) !== null && _a !== void 0 ? _a : TreeFindMode.Highlight;\n        this._matchType = (_b = tree.options.defaultFindMatchType) !== null && _b !== void 0 ? _b : TreeFindMatchType.Fuzzy;\n        model.onDidSplice(this.onDidSpliceModel, this, this.disposables);\n    }\n    updateOptions(optionsUpdate = {}) {\n        if (optionsUpdate.defaultFindMode !== undefined) {\n            this.mode = optionsUpdate.defaultFindMode;\n        }\n        if (optionsUpdate.defaultFindMatchType !== undefined) {\n            this.matchType = optionsUpdate.defaultFindMatchType;\n        }\n    }\n    onDidSpliceModel() {\n        if (!this.widget || this.pattern.length === 0) {\n            return;\n        }\n        this.tree.refilter();\n        this.render();\n    }\n    render() {\n        var _a, _b, _c, _d;\n        const noMatches = this.filter.totalCount > 0 && this.filter.matchCount === 0;\n        if (this.pattern && noMatches) {\n            if ((_a = this.tree.options.showNotFoundMessage) !== null && _a !== void 0 ? _a : true) {\n                (_b = this.widget) === null || _b === void 0 ? void 0 : _b.showMessage({ type: 2 /* MessageType.WARNING */, content: localize('not found', \"No elements found.\") });\n            }\n            else {\n                (_c = this.widget) === null || _c === void 0 ? void 0 : _c.showMessage({ type: 2 /* MessageType.WARNING */ });\n            }\n        }\n        else {\n            (_d = this.widget) === null || _d === void 0 ? void 0 : _d.clearMessage();\n        }\n    }\n    shouldAllowFocus(node) {\n        if (!this.widget || !this.pattern) {\n            return true;\n        }\n        if (this.filter.totalCount > 0 && this.filter.matchCount <= 1) {\n            return true;\n        }\n        return !FuzzyScore.isDefault(node.filterData);\n    }\n    layout(width) {\n        var _a;\n        this.width = width;\n        (_a = this.widget) === null || _a === void 0 ? void 0 : _a.layout(width);\n    }\n    dispose() {\n        this._history = undefined;\n        this._onDidChangePattern.dispose();\n        this.enabledDisposables.dispose();\n        this.disposables.dispose();\n    }\n}\nfunction stickyScrollNodeStateEquals(node1, node2) {\n    return node1.position === node2.position && stickyScrollNodeEquals(node1, node2);\n}\nfunction stickyScrollNodeEquals(node1, node2) {\n    return node1.node.element === node2.node.element &&\n        node1.startIndex === node2.startIndex &&\n        node1.height === node2.height &&\n        node1.endIndex === node2.endIndex;\n}\nclass StickyScrollState {\n    constructor(stickyNodes = []) {\n        this.stickyNodes = stickyNodes;\n    }\n    get count() { return this.stickyNodes.length; }\n    equal(state) {\n        return equals(this.stickyNodes, state.stickyNodes, stickyScrollNodeStateEquals);\n    }\n    lastNodePartiallyVisible() {\n        if (this.count === 0) {\n            return false;\n        }\n        const lastStickyNode = this.stickyNodes[this.count - 1];\n        if (this.count === 1) {\n            return lastStickyNode.position !== 0;\n        }\n        const secondLastStickyNode = this.stickyNodes[this.count - 2];\n        return secondLastStickyNode.position + secondLastStickyNode.height !== lastStickyNode.position;\n    }\n    animationStateChanged(previousState) {\n        if (!equals(this.stickyNodes, previousState.stickyNodes, stickyScrollNodeEquals)) {\n            return false;\n        }\n        if (this.count === 0) {\n            return false;\n        }\n        const lastStickyNode = this.stickyNodes[this.count - 1];\n        const previousLastStickyNode = previousState.stickyNodes[previousState.count - 1];\n        return lastStickyNode.position !== previousLastStickyNode.position;\n    }\n}\nclass DefaultStickyScrollDelegate {\n    constrainStickyScrollNodes(stickyNodes, stickyScrollMaxItemCount, maxWidgetHeight) {\n        for (let i = 0; i < stickyNodes.length; i++) {\n            const stickyNode = stickyNodes[i];\n            const stickyNodeBottom = stickyNode.position + stickyNode.height;\n            if (stickyNodeBottom > maxWidgetHeight || i >= stickyScrollMaxItemCount) {\n                return stickyNodes.slice(0, i);\n            }\n        }\n        return stickyNodes;\n    }\n}\nclass StickyScrollController extends Disposable {\n    constructor(tree, model, view, renderers, treeDelegate, options = {}) {\n        var _a;\n        super();\n        this.tree = tree;\n        this.model = model;\n        this.view = view;\n        this.treeDelegate = treeDelegate;\n        this.maxWidgetViewRatio = 0.4;\n        const stickyScrollOptions = this.validateStickySettings(options);\n        this.stickyScrollMaxItemCount = stickyScrollOptions.stickyScrollMaxItemCount;\n        this.stickyScrollDelegate = (_a = options.stickyScrollDelegate) !== null && _a !== void 0 ? _a : new DefaultStickyScrollDelegate();\n        this._widget = this._register(new StickyScrollWidget(view.getScrollableElement(), view, tree, renderers, treeDelegate, options.accessibilityProvider));\n        this.onDidChangeHasFocus = this._widget.onDidChangeHasFocus;\n        this.onContextMenu = this._widget.onContextMenu;\n        this._register(view.onDidScroll(() => this.update()));\n        this._register(view.onDidChangeContentHeight(() => this.update()));\n        this._register(tree.onDidChangeCollapseState(() => this.update()));\n        this.update();\n    }\n    get height() {\n        return this._widget.height;\n    }\n    getNodeAtHeight(height) {\n        let index;\n        if (height === 0) {\n            index = this.view.firstVisibleIndex;\n        }\n        else {\n            index = this.view.indexAt(height + this.view.scrollTop);\n        }\n        if (index < 0 || index >= this.view.length) {\n            return undefined;\n        }\n        return this.view.element(index);\n    }\n    update() {\n        const firstVisibleNode = this.getNodeAtHeight(0);\n        // Don't render anything if there are no elements\n        if (!firstVisibleNode || this.tree.scrollTop === 0) {\n            this._widget.setState(undefined);\n            return;\n        }\n        const stickyState = this.findStickyState(firstVisibleNode);\n        this._widget.setState(stickyState);\n    }\n    findStickyState(firstVisibleNode) {\n        const stickyNodes = [];\n        let firstVisibleNodeUnderWidget = firstVisibleNode;\n        let stickyNodesHeight = 0;\n        let nextStickyNode = this.getNextStickyNode(firstVisibleNodeUnderWidget, undefined, stickyNodesHeight);\n        while (nextStickyNode) {\n            stickyNodes.push(nextStickyNode);\n            stickyNodesHeight += nextStickyNode.height;\n            if (stickyNodes.length <= this.stickyScrollMaxItemCount) {\n                firstVisibleNodeUnderWidget = this.getNextVisibleNode(nextStickyNode);\n                if (!firstVisibleNodeUnderWidget) {\n                    break;\n                }\n            }\n            nextStickyNode = this.getNextStickyNode(firstVisibleNodeUnderWidget, nextStickyNode.node, stickyNodesHeight);\n        }\n        const contrainedStickyNodes = this.constrainStickyNodes(stickyNodes);\n        return contrainedStickyNodes.length ? new StickyScrollState(contrainedStickyNodes) : undefined;\n    }\n    getNextVisibleNode(previousStickyNode) {\n        return this.getNodeAtHeight(previousStickyNode.position + previousStickyNode.height);\n    }\n    getNextStickyNode(firstVisibleNodeUnderWidget, previousStickyNode, stickyNodesHeight) {\n        const nextStickyNode = this.getAncestorUnderPrevious(firstVisibleNodeUnderWidget, previousStickyNode);\n        if (!nextStickyNode) {\n            return undefined;\n        }\n        if (nextStickyNode === firstVisibleNodeUnderWidget) {\n            if (!this.nodeIsUncollapsedParent(firstVisibleNodeUnderWidget)) {\n                return undefined;\n            }\n            if (this.nodeTopAlignsWithStickyNodesBottom(firstVisibleNodeUnderWidget, stickyNodesHeight)) {\n                return undefined;\n            }\n        }\n        return this.createStickyScrollNode(nextStickyNode, stickyNodesHeight);\n    }\n    nodeTopAlignsWithStickyNodesBottom(node, stickyNodesHeight) {\n        const nodeIndex = this.getNodeIndex(node);\n        const elementTop = this.view.getElementTop(nodeIndex);\n        const stickyPosition = stickyNodesHeight;\n        return this.view.scrollTop === elementTop - stickyPosition;\n    }\n    createStickyScrollNode(node, currentStickyNodesHeight) {\n        const height = this.treeDelegate.getHeight(node);\n        const { startIndex, endIndex } = this.getNodeRange(node);\n        const position = this.calculateStickyNodePosition(endIndex, currentStickyNodesHeight, height);\n        return { node, position, height, startIndex, endIndex };\n    }\n    getAncestorUnderPrevious(node, previousAncestor = undefined) {\n        let currentAncestor = node;\n        let parentOfcurrentAncestor = this.getParentNode(currentAncestor);\n        while (parentOfcurrentAncestor) {\n            if (parentOfcurrentAncestor === previousAncestor) {\n                return currentAncestor;\n            }\n            currentAncestor = parentOfcurrentAncestor;\n            parentOfcurrentAncestor = this.getParentNode(currentAncestor);\n        }\n        if (previousAncestor === undefined) {\n            return currentAncestor;\n        }\n        return undefined;\n    }\n    calculateStickyNodePosition(lastDescendantIndex, stickyRowPositionTop, stickyNodeHeight) {\n        let lastChildRelativeTop = this.view.getRelativeTop(lastDescendantIndex);\n        // If the last descendant is only partially visible at the top of the view, getRelativeTop() returns null\n        // In that case, utilize the next node's relative top to calculate the sticky node's position\n        if (lastChildRelativeTop === null && this.view.firstVisibleIndex === lastDescendantIndex && lastDescendantIndex + 1 < this.view.length) {\n            const nodeHeight = this.treeDelegate.getHeight(this.view.element(lastDescendantIndex));\n            const nextNodeRelativeTop = this.view.getRelativeTop(lastDescendantIndex + 1);\n            lastChildRelativeTop = nextNodeRelativeTop ? nextNodeRelativeTop - nodeHeight / this.view.renderHeight : null;\n        }\n        if (lastChildRelativeTop === null) {\n            return stickyRowPositionTop;\n        }\n        const lastChildNode = this.view.element(lastDescendantIndex);\n        const lastChildHeight = this.treeDelegate.getHeight(lastChildNode);\n        const topOfLastChild = lastChildRelativeTop * this.view.renderHeight;\n        const bottomOfLastChild = topOfLastChild + lastChildHeight;\n        if (stickyRowPositionTop + stickyNodeHeight > bottomOfLastChild && stickyRowPositionTop <= bottomOfLastChild) {\n            return bottomOfLastChild - stickyNodeHeight;\n        }\n        return stickyRowPositionTop;\n    }\n    constrainStickyNodes(stickyNodes) {\n        if (stickyNodes.length === 0) {\n            return [];\n        }\n        // Check if sticky nodes need to be constrained\n        const maximumStickyWidgetHeight = this.view.renderHeight * this.maxWidgetViewRatio;\n        const lastStickyNode = stickyNodes[stickyNodes.length - 1];\n        if (stickyNodes.length <= this.stickyScrollMaxItemCount && lastStickyNode.position + lastStickyNode.height <= maximumStickyWidgetHeight) {\n            return stickyNodes;\n        }\n        // constrain sticky nodes\n        const constrainedStickyNodes = this.stickyScrollDelegate.constrainStickyScrollNodes(stickyNodes, this.stickyScrollMaxItemCount, maximumStickyWidgetHeight);\n        if (!constrainedStickyNodes.length) {\n            return [];\n        }\n        // Validate constraints\n        const lastConstrainedStickyNode = constrainedStickyNodes[constrainedStickyNodes.length - 1];\n        if (constrainedStickyNodes.length > this.stickyScrollMaxItemCount || lastConstrainedStickyNode.position + lastConstrainedStickyNode.height > maximumStickyWidgetHeight) {\n            throw new Error('stickyScrollDelegate violates constraints');\n        }\n        return constrainedStickyNodes;\n    }\n    getParentNode(node) {\n        const nodeLocation = this.model.getNodeLocation(node);\n        const parentLocation = this.model.getParentNodeLocation(nodeLocation);\n        return parentLocation ? this.model.getNode(parentLocation) : undefined;\n    }\n    nodeIsUncollapsedParent(node) {\n        const nodeLocation = this.model.getNodeLocation(node);\n        return this.model.getListRenderCount(nodeLocation) > 1;\n    }\n    getNodeIndex(node) {\n        const nodeLocation = this.model.getNodeLocation(node);\n        const nodeIndex = this.model.getListIndex(nodeLocation);\n        return nodeIndex;\n    }\n    getNodeRange(node) {\n        const nodeLocation = this.model.getNodeLocation(node);\n        const startIndex = this.model.getListIndex(nodeLocation);\n        if (startIndex < 0) {\n            throw new Error('Node not found in tree');\n        }\n        const renderCount = this.model.getListRenderCount(nodeLocation);\n        const endIndex = startIndex + renderCount - 1;\n        return { startIndex, endIndex };\n    }\n    nodePositionTopBelowWidget(node) {\n        const ancestors = [];\n        let currentAncestor = this.getParentNode(node);\n        while (currentAncestor) {\n            ancestors.push(currentAncestor);\n            currentAncestor = this.getParentNode(currentAncestor);\n        }\n        let widgetHeight = 0;\n        for (let i = 0; i < ancestors.length && i < this.stickyScrollMaxItemCount; i++) {\n            widgetHeight += this.treeDelegate.getHeight(ancestors[i]);\n        }\n        return widgetHeight;\n    }\n    domFocus() {\n        this._widget.domFocus();\n    }\n    // Whether sticky scroll was the last focused part in the tree or not\n    focusedLast() {\n        return this._widget.focusedLast();\n    }\n    updateOptions(optionsUpdate = {}) {\n        if (!optionsUpdate.stickyScrollMaxItemCount) {\n            return;\n        }\n        const validatedOptions = this.validateStickySettings(optionsUpdate);\n        if (this.stickyScrollMaxItemCount !== validatedOptions.stickyScrollMaxItemCount) {\n            this.stickyScrollMaxItemCount = validatedOptions.stickyScrollMaxItemCount;\n            this.update();\n        }\n    }\n    validateStickySettings(options) {\n        let stickyScrollMaxItemCount = 7;\n        if (typeof options.stickyScrollMaxItemCount === 'number') {\n            stickyScrollMaxItemCount = Math.max(options.stickyScrollMaxItemCount, 1);\n        }\n        return { stickyScrollMaxItemCount };\n    }\n}\nclass StickyScrollWidget {\n    constructor(container, view, tree, treeRenderers, treeDelegate, accessibilityProvider) {\n        this.view = view;\n        this.tree = tree;\n        this.treeRenderers = treeRenderers;\n        this.treeDelegate = treeDelegate;\n        this.accessibilityProvider = accessibilityProvider;\n        this._previousElements = [];\n        this._previousStateDisposables = new DisposableStore();\n        this._rootDomNode = $('.monaco-tree-sticky-container.empty');\n        container.appendChild(this._rootDomNode);\n        const shadow = $('.monaco-tree-sticky-container-shadow');\n        this._rootDomNode.appendChild(shadow);\n        this.stickyScrollFocus = new StickyScrollFocus(this._rootDomNode, view);\n        this.onDidChangeHasFocus = this.stickyScrollFocus.onDidChangeHasFocus;\n        this.onContextMenu = this.stickyScrollFocus.onContextMenu;\n    }\n    get height() {\n        if (!this._previousState) {\n            return 0;\n        }\n        const lastElement = this._previousState.stickyNodes[this._previousState.count - 1];\n        return lastElement.position + lastElement.height;\n    }\n    setState(state) {\n        const wasVisible = !!this._previousState && this._previousState.count > 0;\n        const isVisible = !!state && state.count > 0;\n        // If state has not changed, do nothing\n        if ((!wasVisible && !isVisible) || (wasVisible && isVisible && this._previousState.equal(state))) {\n            return;\n        }\n        // Update visibility of the widget if changed\n        if (wasVisible !== isVisible) {\n            this.setVisible(isVisible);\n        }\n        if (!isVisible) {\n            this._previousState = undefined;\n            this._previousElements = [];\n            this._previousStateDisposables.clear();\n            return;\n        }\n        const lastStickyNode = state.stickyNodes[state.count - 1];\n        // If the new state is only a change in the last node's position, update the position of the last element\n        if (this._previousState && state.animationStateChanged(this._previousState)) {\n            this._previousElements[this._previousState.count - 1].style.top = `${lastStickyNode.position}px`;\n        }\n        // create new dom elements\n        else {\n            this._previousStateDisposables.clear();\n            const elements = Array(state.count);\n            for (let stickyIndex = state.count - 1; stickyIndex >= 0; stickyIndex--) {\n                const stickyNode = state.stickyNodes[stickyIndex];\n                const { element, disposable } = this.createElement(stickyNode, stickyIndex, state.count);\n                elements[stickyIndex] = element;\n                this._rootDomNode.appendChild(element);\n                this._previousStateDisposables.add(disposable);\n            }\n            this.stickyScrollFocus.updateElements(elements, state);\n            this._previousElements = elements;\n        }\n        this._previousState = state;\n        // Set the height of the widget to the bottom of the last sticky node\n        this._rootDomNode.style.height = `${lastStickyNode.position + lastStickyNode.height}px`;\n    }\n    createElement(stickyNode, stickyIndex, stickyNodesTotal) {\n        const nodeIndex = stickyNode.startIndex;\n        // Sticky element container\n        const stickyElement = document.createElement('div');\n        stickyElement.style.top = `${stickyNode.position}px`;\n        if (this.tree.options.setRowHeight !== false) {\n            stickyElement.style.height = `${stickyNode.height}px`;\n        }\n        if (this.tree.options.setRowLineHeight !== false) {\n            stickyElement.style.lineHeight = `${stickyNode.height}px`;\n        }\n        stickyElement.classList.add('monaco-tree-sticky-row');\n        stickyElement.classList.add('monaco-list-row');\n        stickyElement.setAttribute('data-index', `${nodeIndex}`);\n        stickyElement.setAttribute('data-parity', nodeIndex % 2 === 0 ? 'even' : 'odd');\n        stickyElement.setAttribute('id', this.view.getElementID(nodeIndex));\n        const accessibilityDisposable = this.setAccessibilityAttributes(stickyElement, stickyNode.node.element, stickyIndex, stickyNodesTotal);\n        // Get the renderer for the node\n        const nodeTemplateId = this.treeDelegate.getTemplateId(stickyNode.node);\n        const renderer = this.treeRenderers.find((renderer) => renderer.templateId === nodeTemplateId);\n        if (!renderer) {\n            throw new Error(`No renderer found for template id ${nodeTemplateId}`);\n        }\n        // To make sure we do not influence the original node, we create a copy of the node\n        // We need to check if it is already a unique instance of the node by the delegate\n        let nodeCopy = stickyNode.node;\n        if (nodeCopy === this.tree.getNode(this.tree.getNodeLocation(stickyNode.node))) {\n            nodeCopy = new Proxy(stickyNode.node, {});\n        }\n        // Render the element\n        const templateData = renderer.renderTemplate(stickyElement);\n        renderer.renderElement(nodeCopy, stickyNode.startIndex, templateData, stickyNode.height);\n        // Remove the element from the DOM when state is disposed\n        const disposable = toDisposable(() => {\n            accessibilityDisposable.dispose();\n            renderer.disposeElement(nodeCopy, stickyNode.startIndex, templateData, stickyNode.height);\n            renderer.disposeTemplate(templateData);\n            stickyElement.remove();\n        });\n        return { element: stickyElement, disposable };\n    }\n    setAccessibilityAttributes(container, element, stickyIndex, stickyNodesTotal) {\n        var _a;\n        if (!this.accessibilityProvider) {\n            return Disposable.None;\n        }\n        if (this.accessibilityProvider.getSetSize) {\n            container.setAttribute('aria-setsize', String(this.accessibilityProvider.getSetSize(element, stickyIndex, stickyNodesTotal)));\n        }\n        if (this.accessibilityProvider.getPosInSet) {\n            container.setAttribute('aria-posinset', String(this.accessibilityProvider.getPosInSet(element, stickyIndex)));\n        }\n        if (this.accessibilityProvider.getRole) {\n            container.setAttribute('role', (_a = this.accessibilityProvider.getRole(element)) !== null && _a !== void 0 ? _a : 'treeitem');\n        }\n        const ariaLabel = this.accessibilityProvider.getAriaLabel(element);\n        const observable = (ariaLabel && typeof ariaLabel !== 'string') ? ariaLabel : constObservable(ariaLabel);\n        const result = autorun(reader => {\n            const value = reader.readObservable(observable);\n            if (value) {\n                container.setAttribute('aria-label', value);\n            }\n            else {\n                container.removeAttribute('aria-label');\n            }\n        });\n        if (typeof ariaLabel === 'string') {\n        }\n        else if (ariaLabel) {\n            container.setAttribute('aria-label', ariaLabel.get());\n        }\n        const ariaLevel = this.accessibilityProvider.getAriaLevel && this.accessibilityProvider.getAriaLevel(element);\n        if (typeof ariaLevel === 'number') {\n            container.setAttribute('aria-level', `${ariaLevel}`);\n        }\n        // Sticky Scroll elements can not be selected\n        container.setAttribute('aria-selected', String(false));\n        return result;\n    }\n    setVisible(visible) {\n        this._rootDomNode.classList.toggle('empty', !visible);\n        if (!visible) {\n            this.stickyScrollFocus.updateElements([], undefined);\n        }\n    }\n    domFocus() {\n        this.stickyScrollFocus.domFocus();\n    }\n    focusedLast() {\n        return this.stickyScrollFocus.focusedLast();\n    }\n    dispose() {\n        this.stickyScrollFocus.dispose();\n        this._previousStateDisposables.dispose();\n        this._rootDomNode.remove();\n    }\n}\nclass StickyScrollFocus extends Disposable {\n    get domHasFocus() { return this._domHasFocus; }\n    set domHasFocus(hasFocus) {\n        if (hasFocus !== this._domHasFocus) {\n            this._onDidChangeHasFocus.fire(hasFocus);\n            this._domHasFocus = hasFocus;\n        }\n    }\n    constructor(container, view) {\n        super();\n        this.container = container;\n        this.view = view;\n        this.focusedIndex = -1;\n        this.elements = [];\n        this._onDidChangeHasFocus = new Emitter();\n        this.onDidChangeHasFocus = this._onDidChangeHasFocus.event;\n        this._onContextMenu = new Emitter();\n        this.onContextMenu = this._onContextMenu.event;\n        this._domHasFocus = false;\n        this.container.addEventListener('focus', () => this.onFocus());\n        this.container.addEventListener('blur', () => this.onBlur());\n        this._register(this.view.onDidFocus(() => this.toggleStickyScrollFocused(false)));\n        this._register(this.view.onKeyDown((e) => this.onKeyDown(e)));\n        this._register(this.view.onMouseDown((e) => this.onMouseDown(e)));\n        this._register(this.view.onContextMenu((e) => this.handleContextMenu(e)));\n    }\n    handleContextMenu(e) {\n        const target = e.browserEvent.target;\n        if (!isStickyScrollContainer(target) && !isStickyScrollElement(target)) {\n            if (this.focusedLast()) {\n                this.view.domFocus();\n            }\n            return;\n        }\n        // The list handles the context menu triggered by a mouse event\n        // In that case only set the focus of the element clicked and leave the rest to the list to handle\n        if (!isKeyboardEvent(e.browserEvent)) {\n            if (!this.state) {\n                throw new Error('Context menu should not be triggered when state is undefined');\n            }\n            const stickyIndex = this.state.stickyNodes.findIndex(stickyNode => { var _a; return stickyNode.node.element === ((_a = e.element) === null || _a === void 0 ? void 0 : _a.element); });\n            if (stickyIndex === -1) {\n                throw new Error('Context menu should not be triggered when element is not in sticky scroll widget');\n            }\n            this.container.focus();\n            this.setFocus(stickyIndex);\n            return;\n        }\n        if (!this.state || this.focusedIndex < 0) {\n            throw new Error('Context menu key should not be triggered when focus is not in sticky scroll widget');\n        }\n        const stickyNode = this.state.stickyNodes[this.focusedIndex];\n        const element = stickyNode.node.element;\n        const anchor = this.elements[this.focusedIndex];\n        this._onContextMenu.fire({ element, anchor, browserEvent: e.browserEvent, isStickyScroll: true });\n    }\n    onKeyDown(e) {\n        // Sticky Scroll Navigation\n        if (this.domHasFocus && this.state) {\n            // Move up\n            if (e.key === 'ArrowUp') {\n                this.setFocusedElement(Math.max(0, this.focusedIndex - 1));\n                e.preventDefault();\n                e.stopPropagation();\n            }\n            // Move down, if last sticky node is focused, move focus into first child of last sticky node\n            else if (e.key === 'ArrowDown' || e.key === 'ArrowRight') {\n                if (this.focusedIndex >= this.state.count - 1) {\n                    const nodeIndexToFocus = this.state.stickyNodes[this.state.count - 1].startIndex + 1;\n                    this.view.domFocus();\n                    this.view.setFocus([nodeIndexToFocus]);\n                    this.scrollNodeUnderWidget(nodeIndexToFocus, this.state);\n                }\n                else {\n                    this.setFocusedElement(this.focusedIndex + 1);\n                }\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        }\n    }\n    onMouseDown(e) {\n        const target = e.browserEvent.target;\n        if (!isStickyScrollContainer(target) && !isStickyScrollElement(target)) {\n            return;\n        }\n        e.browserEvent.preventDefault();\n        e.browserEvent.stopPropagation();\n    }\n    updateElements(elements, state) {\n        if (state && state.count === 0) {\n            throw new Error('Sticky scroll state must be undefined when there are no sticky nodes');\n        }\n        if (state && state.count !== elements.length) {\n            throw new Error('Sticky scroll focus received illigel state');\n        }\n        const previousIndex = this.focusedIndex;\n        this.removeFocus();\n        this.elements = elements;\n        this.state = state;\n        if (state) {\n            const newFocusedIndex = clamp(previousIndex, 0, state.count - 1);\n            this.setFocus(newFocusedIndex);\n        }\n        else {\n            if (this.domHasFocus) {\n                this.view.domFocus();\n            }\n        }\n        // must come last as it calls blur()\n        this.container.tabIndex = state ? 0 : -1;\n    }\n    setFocusedElement(stickyIndex) {\n        // doesn't imply that the widget has (or will have) focus\n        const state = this.state;\n        if (!state) {\n            throw new Error('Cannot set focus when state is undefined');\n        }\n        this.setFocus(stickyIndex);\n        if (stickyIndex < state.count - 1) {\n            return;\n        }\n        // If the last sticky node is not fully visible, scroll it into view\n        if (state.lastNodePartiallyVisible()) {\n            const lastStickyNode = state.stickyNodes[stickyIndex];\n            this.scrollNodeUnderWidget(lastStickyNode.endIndex + 1, state);\n        }\n    }\n    scrollNodeUnderWidget(nodeIndex, state) {\n        const lastStickyNode = state.stickyNodes[state.count - 1];\n        const secondLastStickyNode = state.count > 1 ? state.stickyNodes[state.count - 2] : undefined;\n        const elementScrollTop = this.view.getElementTop(nodeIndex);\n        const elementTargetViewTop = secondLastStickyNode ? secondLastStickyNode.position + secondLastStickyNode.height + lastStickyNode.height : lastStickyNode.height;\n        this.view.scrollTop = elementScrollTop - elementTargetViewTop;\n    }\n    domFocus() {\n        if (!this.state) {\n            throw new Error('Cannot focus when state is undefined');\n        }\n        this.container.focus();\n    }\n    focusedLast() {\n        if (!this.state) {\n            return false;\n        }\n        return this.view.getHTMLElement().classList.contains('sticky-scroll-focused');\n    }\n    removeFocus() {\n        if (this.focusedIndex === -1) {\n            return;\n        }\n        this.toggleElementFocus(this.elements[this.focusedIndex], false);\n        this.focusedIndex = -1;\n    }\n    setFocus(newFocusIndex) {\n        if (0 > newFocusIndex) {\n            throw new Error('addFocus() can not remove focus');\n        }\n        if (!this.state && newFocusIndex >= 0) {\n            throw new Error('Cannot set focus index when state is undefined');\n        }\n        if (this.state && newFocusIndex >= this.state.count) {\n            throw new Error('Cannot set focus index to an index that does not exist');\n        }\n        const oldIndex = this.focusedIndex;\n        if (oldIndex >= 0) {\n            this.toggleElementFocus(this.elements[oldIndex], false);\n        }\n        if (newFocusIndex >= 0) {\n            this.toggleElementFocus(this.elements[newFocusIndex], true);\n        }\n        this.focusedIndex = newFocusIndex;\n    }\n    toggleElementFocus(element, focused) {\n        this.toggleElementActiveFocus(element, focused && this.domHasFocus);\n        this.toggleElementPassiveFocus(element, focused);\n    }\n    toggleCurrentElementActiveFocus(focused) {\n        if (this.focusedIndex === -1) {\n            return;\n        }\n        this.toggleElementActiveFocus(this.elements[this.focusedIndex], focused);\n    }\n    toggleElementActiveFocus(element, focused) {\n        // active focus is set when sticky scroll has focus\n        element.classList.toggle('focused', focused);\n    }\n    toggleElementPassiveFocus(element, focused) {\n        // passive focus allows to show focus when sticky scroll does not have focus\n        // for example when the context menu has focus\n        element.classList.toggle('passive-focused', focused);\n    }\n    toggleStickyScrollFocused(focused) {\n        // Weather the last focus in the view was sticky scroll and not the list\n        // Is only removed when the focus is back in the tree an no longer in sticky scroll\n        this.view.getHTMLElement().classList.toggle('sticky-scroll-focused', focused);\n    }\n    onFocus() {\n        if (!this.state || this.elements.length === 0) {\n            throw new Error('Cannot focus when state is undefined or elements are empty');\n        }\n        this.domHasFocus = true;\n        this.toggleStickyScrollFocused(true);\n        this.toggleCurrentElementActiveFocus(true);\n        if (this.focusedIndex === -1) {\n            this.setFocus(0);\n        }\n    }\n    onBlur() {\n        this.domHasFocus = false;\n        this.toggleCurrentElementActiveFocus(false);\n    }\n    dispose() {\n        this.toggleStickyScrollFocused(false);\n        this._onDidChangeHasFocus.fire(false);\n        super.dispose();\n    }\n}\nfunction asTreeMouseEvent(event) {\n    let target = TreeMouseEventTarget.Unknown;\n    if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-twistie', 'monaco-tl-row')) {\n        target = TreeMouseEventTarget.Twistie;\n    }\n    else if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-contents', 'monaco-tl-row')) {\n        target = TreeMouseEventTarget.Element;\n    }\n    else if (hasParentWithClass(event.browserEvent.target, 'monaco-tree-type-filter', 'monaco-list')) {\n        target = TreeMouseEventTarget.Filter;\n    }\n    return {\n        browserEvent: event.browserEvent,\n        element: event.element ? event.element.element : null,\n        target\n    };\n}\nfunction asTreeContextMenuEvent(event) {\n    const isStickyScroll = isStickyScrollContainer(event.browserEvent.target);\n    return {\n        element: event.element ? event.element.element : null,\n        browserEvent: event.browserEvent,\n        anchor: event.anchor,\n        isStickyScroll\n    };\n}\nfunction dfs(node, fn) {\n    fn(node);\n    node.children.forEach(child => dfs(child, fn));\n}\n/**\n * The trait concept needs to exist at the tree level, because collapsed\n * tree nodes will not be known by the list.\n */\nclass Trait {\n    get nodeSet() {\n        if (!this._nodeSet) {\n            this._nodeSet = this.createNodeSet();\n        }\n        return this._nodeSet;\n    }\n    constructor(getFirstViewElementWithTrait, identityProvider) {\n        this.getFirstViewElementWithTrait = getFirstViewElementWithTrait;\n        this.identityProvider = identityProvider;\n        this.nodes = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n    }\n    set(nodes, browserEvent) {\n        if (!(browserEvent === null || browserEvent === void 0 ? void 0 : browserEvent.__forceEvent) && equals(this.nodes, nodes)) {\n            return;\n        }\n        this._set(nodes, false, browserEvent);\n    }\n    _set(nodes, silent, browserEvent) {\n        this.nodes = [...nodes];\n        this.elements = undefined;\n        this._nodeSet = undefined;\n        if (!silent) {\n            const that = this;\n            this._onDidChange.fire({ get elements() { return that.get(); }, browserEvent });\n        }\n    }\n    get() {\n        if (!this.elements) {\n            this.elements = this.nodes.map(node => node.element);\n        }\n        return [...this.elements];\n    }\n    getNodes() {\n        return this.nodes;\n    }\n    has(node) {\n        return this.nodeSet.has(node);\n    }\n    onDidModelSplice({ insertedNodes, deletedNodes }) {\n        if (!this.identityProvider) {\n            const set = this.createNodeSet();\n            const visit = (node) => set.delete(node);\n            deletedNodes.forEach(node => dfs(node, visit));\n            this.set([...set.values()]);\n            return;\n        }\n        const deletedNodesIdSet = new Set();\n        const deletedNodesVisitor = (node) => deletedNodesIdSet.add(this.identityProvider.getId(node.element).toString());\n        deletedNodes.forEach(node => dfs(node, deletedNodesVisitor));\n        const insertedNodesMap = new Map();\n        const insertedNodesVisitor = (node) => insertedNodesMap.set(this.identityProvider.getId(node.element).toString(), node);\n        insertedNodes.forEach(node => dfs(node, insertedNodesVisitor));\n        const nodes = [];\n        for (const node of this.nodes) {\n            const id = this.identityProvider.getId(node.element).toString();\n            const wasDeleted = deletedNodesIdSet.has(id);\n            if (!wasDeleted) {\n                nodes.push(node);\n            }\n            else {\n                const insertedNode = insertedNodesMap.get(id);\n                if (insertedNode && insertedNode.visible) {\n                    nodes.push(insertedNode);\n                }\n            }\n        }\n        if (this.nodes.length > 0 && nodes.length === 0) {\n            const node = this.getFirstViewElementWithTrait();\n            if (node) {\n                nodes.push(node);\n            }\n        }\n        this._set(nodes, true);\n    }\n    createNodeSet() {\n        const set = new Set();\n        for (const node of this.nodes) {\n            set.add(node);\n        }\n        return set;\n    }\n}\nclass TreeNodeListMouseController extends MouseController {\n    constructor(list, tree, stickyScrollProvider) {\n        super(list);\n        this.tree = tree;\n        this.stickyScrollProvider = stickyScrollProvider;\n    }\n    onViewPointer(e) {\n        if (isButton(e.browserEvent.target) ||\n            isInputElement(e.browserEvent.target) ||\n            isMonacoEditor(e.browserEvent.target)) {\n            return;\n        }\n        if (e.browserEvent.isHandledByList) {\n            return;\n        }\n        const node = e.element;\n        if (!node) {\n            return super.onViewPointer(e);\n        }\n        if (this.isSelectionRangeChangeEvent(e) || this.isSelectionSingleChangeEvent(e)) {\n            return super.onViewPointer(e);\n        }\n        const target = e.browserEvent.target;\n        const onTwistie = target.classList.contains('monaco-tl-twistie')\n            || (target.classList.contains('monaco-icon-label') && target.classList.contains('folder-icon') && e.browserEvent.offsetX < 16);\n        const isStickyElement = isStickyScrollElement(e.browserEvent.target);\n        let expandOnlyOnTwistieClick = false;\n        if (isStickyElement) {\n            expandOnlyOnTwistieClick = true;\n        }\n        else if (typeof this.tree.expandOnlyOnTwistieClick === 'function') {\n            expandOnlyOnTwistieClick = this.tree.expandOnlyOnTwistieClick(node.element);\n        }\n        else {\n            expandOnlyOnTwistieClick = !!this.tree.expandOnlyOnTwistieClick;\n        }\n        if (!isStickyElement) {\n            if (expandOnlyOnTwistieClick && !onTwistie && e.browserEvent.detail !== 2) {\n                return super.onViewPointer(e);\n            }\n            if (!this.tree.expandOnDoubleClick && e.browserEvent.detail === 2) {\n                return super.onViewPointer(e);\n            }\n        }\n        else {\n            this.handleStickyScrollMouseEvent(e, node);\n        }\n        if (node.collapsible && (!isStickyElement || onTwistie)) {\n            const location = this.tree.getNodeLocation(node);\n            const recursive = e.browserEvent.altKey;\n            this.tree.setFocus([location]);\n            this.tree.toggleCollapsed(location, recursive);\n            if (onTwistie) {\n                // Do not set this before calling a handler on the super class, because it will reject it as handled\n                e.browserEvent.isHandledByList = true;\n                return;\n            }\n        }\n        if (!isStickyElement) {\n            super.onViewPointer(e);\n        }\n    }\n    handleStickyScrollMouseEvent(e, node) {\n        if (isMonacoCustomToggle(e.browserEvent.target) || isActionItem(e.browserEvent.target)) {\n            return;\n        }\n        const stickyScrollController = this.stickyScrollProvider();\n        if (!stickyScrollController) {\n            throw new Error('Sticky scroll controller not found');\n        }\n        const nodeIndex = this.list.indexOf(node);\n        const elementScrollTop = this.list.getElementTop(nodeIndex);\n        const elementTargetViewTop = stickyScrollController.nodePositionTopBelowWidget(node);\n        this.tree.scrollTop = elementScrollTop - elementTargetViewTop;\n        this.list.domFocus();\n        this.list.setFocus([nodeIndex]);\n        this.list.setSelection([nodeIndex]);\n    }\n    onDoubleClick(e) {\n        const onTwistie = e.browserEvent.target.classList.contains('monaco-tl-twistie');\n        if (onTwistie || !this.tree.expandOnDoubleClick) {\n            return;\n        }\n        if (e.browserEvent.isHandledByList) {\n            return;\n        }\n        super.onDoubleClick(e);\n    }\n    // to make sure dom focus is not stolen (for example with context menu)\n    onMouseDown(e) {\n        const target = e.browserEvent.target;\n        if (!isStickyScrollContainer(target) && !isStickyScrollElement(target)) {\n            super.onMouseDown(e);\n            return;\n        }\n    }\n    onContextMenu(e) {\n        const target = e.browserEvent.target;\n        if (!isStickyScrollContainer(target) && !isStickyScrollElement(target)) {\n            super.onContextMenu(e);\n            return;\n        }\n    }\n}\n/**\n * We use this List subclass to restore selection and focus as nodes\n * get rendered in the list, possibly due to a node expand() call.\n */\nclass TreeNodeList extends List {\n    constructor(user, container, virtualDelegate, renderers, focusTrait, selectionTrait, anchorTrait, options) {\n        super(user, container, virtualDelegate, renderers, options);\n        this.focusTrait = focusTrait;\n        this.selectionTrait = selectionTrait;\n        this.anchorTrait = anchorTrait;\n    }\n    createMouseController(options) {\n        return new TreeNodeListMouseController(this, options.tree, options.stickyScrollProvider);\n    }\n    splice(start, deleteCount, elements = []) {\n        super.splice(start, deleteCount, elements);\n        if (elements.length === 0) {\n            return;\n        }\n        const additionalFocus = [];\n        const additionalSelection = [];\n        let anchor;\n        elements.forEach((node, index) => {\n            if (this.focusTrait.has(node)) {\n                additionalFocus.push(start + index);\n            }\n            if (this.selectionTrait.has(node)) {\n                additionalSelection.push(start + index);\n            }\n            if (this.anchorTrait.has(node)) {\n                anchor = start + index;\n            }\n        });\n        if (additionalFocus.length > 0) {\n            super.setFocus(distinct([...super.getFocus(), ...additionalFocus]));\n        }\n        if (additionalSelection.length > 0) {\n            super.setSelection(distinct([...super.getSelection(), ...additionalSelection]));\n        }\n        if (typeof anchor === 'number') {\n            super.setAnchor(anchor);\n        }\n    }\n    setFocus(indexes, browserEvent, fromAPI = false) {\n        super.setFocus(indexes, browserEvent);\n        if (!fromAPI) {\n            this.focusTrait.set(indexes.map(i => this.element(i)), browserEvent);\n        }\n    }\n    setSelection(indexes, browserEvent, fromAPI = false) {\n        super.setSelection(indexes, browserEvent);\n        if (!fromAPI) {\n            this.selectionTrait.set(indexes.map(i => this.element(i)), browserEvent);\n        }\n    }\n    setAnchor(index, fromAPI = false) {\n        super.setAnchor(index);\n        if (!fromAPI) {\n            if (typeof index === 'undefined') {\n                this.anchorTrait.set([]);\n            }\n            else {\n                this.anchorTrait.set([this.element(index)]);\n            }\n        }\n    }\n}\nexport class AbstractTree {\n    get onDidScroll() { return this.view.onDidScroll; }\n    get onDidChangeFocus() { return this.eventBufferer.wrapEvent(this.focus.onDidChange); }\n    get onDidChangeSelection() { return this.eventBufferer.wrapEvent(this.selection.onDidChange); }\n    get onMouseDblClick() { return Event.filter(Event.map(this.view.onMouseDblClick, asTreeMouseEvent), e => e.target !== TreeMouseEventTarget.Filter); }\n    get onMouseOver() { return Event.map(this.view.onMouseOver, asTreeMouseEvent); }\n    get onMouseOut() { return Event.map(this.view.onMouseOut, asTreeMouseEvent); }\n    get onContextMenu() { var _a, _b; return Event.any(Event.filter(Event.map(this.view.onContextMenu, asTreeContextMenuEvent), e => !e.isStickyScroll), (_b = (_a = this.stickyScrollController) === null || _a === void 0 ? void 0 : _a.onContextMenu) !== null && _b !== void 0 ? _b : Event.None); }\n    get onPointer() { return Event.map(this.view.onPointer, asTreeMouseEvent); }\n    get onKeyDown() { return this.view.onKeyDown; }\n    get onDidFocus() { return this.view.onDidFocus; }\n    get onDidChangeModel() { return Event.signal(this.model.onDidSplice); }\n    get onDidChangeCollapseState() { return this.model.onDidChangeCollapseState; }\n    get findMode() { var _a, _b; return (_b = (_a = this.findController) === null || _a === void 0 ? void 0 : _a.mode) !== null && _b !== void 0 ? _b : TreeFindMode.Highlight; }\n    set findMode(findMode) { if (this.findController) {\n        this.findController.mode = findMode;\n    } }\n    get findMatchType() { var _a, _b; return (_b = (_a = this.findController) === null || _a === void 0 ? void 0 : _a.matchType) !== null && _b !== void 0 ? _b : TreeFindMatchType.Fuzzy; }\n    set findMatchType(findFuzzy) { if (this.findController) {\n        this.findController.matchType = findFuzzy;\n    } }\n    get expandOnDoubleClick() { return typeof this._options.expandOnDoubleClick === 'undefined' ? true : this._options.expandOnDoubleClick; }\n    get expandOnlyOnTwistieClick() { return typeof this._options.expandOnlyOnTwistieClick === 'undefined' ? true : this._options.expandOnlyOnTwistieClick; }\n    get onDidDispose() { return this.view.onDidDispose; }\n    constructor(_user, container, delegate, renderers, _options = {}) {\n        var _a;\n        this._user = _user;\n        this._options = _options;\n        this.eventBufferer = new EventBufferer();\n        this.onDidChangeFindOpenState = Event.None;\n        this.onDidChangeStickyScrollFocused = Event.None;\n        this.disposables = new DisposableStore();\n        this._onWillRefilter = new Emitter();\n        this.onWillRefilter = this._onWillRefilter.event;\n        this._onDidUpdateOptions = new Emitter();\n        this.treeDelegate = new ComposedTreeDelegate(delegate);\n        const onDidChangeCollapseStateRelay = new Relay();\n        const onDidChangeActiveNodes = new Relay();\n        const activeNodes = this.disposables.add(new EventCollection(onDidChangeActiveNodes.event));\n        const renderedIndentGuides = new SetMap();\n        this.renderers = renderers.map(r => new TreeRenderer(r, () => this.model, onDidChangeCollapseStateRelay.event, activeNodes, renderedIndentGuides, _options));\n        for (const r of this.renderers) {\n            this.disposables.add(r);\n        }\n        let filter;\n        if (_options.keyboardNavigationLabelProvider) {\n            filter = new FindFilter(this, _options.keyboardNavigationLabelProvider, _options.filter);\n            _options = { ..._options, filter: filter }; // TODO need typescript help here\n            this.disposables.add(filter);\n        }\n        this.focus = new Trait(() => this.view.getFocusedElements()[0], _options.identityProvider);\n        this.selection = new Trait(() => this.view.getSelectedElements()[0], _options.identityProvider);\n        this.anchor = new Trait(() => this.view.getAnchorElement(), _options.identityProvider);\n        this.view = new TreeNodeList(_user, container, this.treeDelegate, this.renderers, this.focus, this.selection, this.anchor, { ...asListOptions(() => this.model, _options), tree: this, stickyScrollProvider: () => this.stickyScrollController });\n        this.model = this.createModel(_user, this.view, _options);\n        onDidChangeCollapseStateRelay.input = this.model.onDidChangeCollapseState;\n        const onDidModelSplice = Event.forEach(this.model.onDidSplice, e => {\n            this.eventBufferer.bufferEvents(() => {\n                this.focus.onDidModelSplice(e);\n                this.selection.onDidModelSplice(e);\n            });\n        }, this.disposables);\n        // Make sure the `forEach` always runs\n        onDidModelSplice(() => null, null, this.disposables);\n        // Active nodes can change when the model changes or when focus or selection change.\n        // We debounce it with 0 delay since these events may fire in the same stack and we only\n        // want to run this once. It also doesn't matter if it runs on the next tick since it's only\n        // a nice to have UI feature.\n        const activeNodesEmitter = this.disposables.add(new Emitter());\n        const activeNodesDebounce = this.disposables.add(new Delayer(0));\n        this.disposables.add(Event.any(onDidModelSplice, this.focus.onDidChange, this.selection.onDidChange)(() => {\n            activeNodesDebounce.trigger(() => {\n                const set = new Set();\n                for (const node of this.focus.getNodes()) {\n                    set.add(node);\n                }\n                for (const node of this.selection.getNodes()) {\n                    set.add(node);\n                }\n                activeNodesEmitter.fire([...set.values()]);\n            });\n        }));\n        onDidChangeActiveNodes.input = activeNodesEmitter.event;\n        if (_options.keyboardSupport !== false) {\n            const onKeyDown = Event.chain(this.view.onKeyDown, $ => $.filter(e => !isInputElement(e.target))\n                .map(e => new StandardKeyboardEvent(e)));\n            Event.chain(onKeyDown, $ => $.filter(e => e.keyCode === 15 /* KeyCode.LeftArrow */))(this.onLeftArrow, this, this.disposables);\n            Event.chain(onKeyDown, $ => $.filter(e => e.keyCode === 17 /* KeyCode.RightArrow */))(this.onRightArrow, this, this.disposables);\n            Event.chain(onKeyDown, $ => $.filter(e => e.keyCode === 10 /* KeyCode.Space */))(this.onSpace, this, this.disposables);\n        }\n        if (((_a = _options.findWidgetEnabled) !== null && _a !== void 0 ? _a : true) && _options.keyboardNavigationLabelProvider && _options.contextViewProvider) {\n            const opts = this.options.findWidgetStyles ? { styles: this.options.findWidgetStyles } : undefined;\n            this.findController = new FindController(this, this.model, this.view, filter, _options.contextViewProvider, opts);\n            this.focusNavigationFilter = node => this.findController.shouldAllowFocus(node);\n            this.onDidChangeFindOpenState = this.findController.onDidChangeOpenState;\n            this.disposables.add(this.findController);\n            this.onDidChangeFindMode = this.findController.onDidChangeMode;\n            this.onDidChangeFindMatchType = this.findController.onDidChangeMatchType;\n        }\n        else {\n            this.onDidChangeFindMode = Event.None;\n            this.onDidChangeFindMatchType = Event.None;\n        }\n        if (_options.enableStickyScroll) {\n            this.stickyScrollController = new StickyScrollController(this, this.model, this.view, this.renderers, this.treeDelegate, _options);\n            this.onDidChangeStickyScrollFocused = this.stickyScrollController.onDidChangeHasFocus;\n        }\n        this.styleElement = createStyleSheet(this.view.getHTMLElement());\n        this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\n    }\n    updateOptions(optionsUpdate = {}) {\n        var _a;\n        this._options = { ...this._options, ...optionsUpdate };\n        for (const renderer of this.renderers) {\n            renderer.updateOptions(optionsUpdate);\n        }\n        this.view.updateOptions(this._options);\n        (_a = this.findController) === null || _a === void 0 ? void 0 : _a.updateOptions(optionsUpdate);\n        this.updateStickyScroll(optionsUpdate);\n        this._onDidUpdateOptions.fire(this._options);\n        this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\n    }\n    get options() {\n        return this._options;\n    }\n    updateStickyScroll(optionsUpdate) {\n        var _a;\n        if (!this.stickyScrollController && this._options.enableStickyScroll) {\n            this.stickyScrollController = new StickyScrollController(this, this.model, this.view, this.renderers, this.treeDelegate, this._options);\n            this.onDidChangeStickyScrollFocused = this.stickyScrollController.onDidChangeHasFocus;\n        }\n        else if (this.stickyScrollController && !this._options.enableStickyScroll) {\n            this.onDidChangeStickyScrollFocused = Event.None;\n            this.stickyScrollController.dispose();\n            this.stickyScrollController = undefined;\n        }\n        (_a = this.stickyScrollController) === null || _a === void 0 ? void 0 : _a.updateOptions(optionsUpdate);\n    }\n    // Widget\n    getHTMLElement() {\n        return this.view.getHTMLElement();\n    }\n    get scrollTop() {\n        return this.view.scrollTop;\n    }\n    set scrollTop(scrollTop) {\n        this.view.scrollTop = scrollTop;\n    }\n    get scrollHeight() {\n        return this.view.scrollHeight;\n    }\n    get renderHeight() {\n        return this.view.renderHeight;\n    }\n    get ariaLabel() {\n        return this.view.ariaLabel;\n    }\n    set ariaLabel(value) {\n        this.view.ariaLabel = value;\n    }\n    domFocus() {\n        var _a;\n        if ((_a = this.stickyScrollController) === null || _a === void 0 ? void 0 : _a.focusedLast()) {\n            this.stickyScrollController.domFocus();\n        }\n        else {\n            this.view.domFocus();\n        }\n    }\n    layout(height, width) {\n        var _a;\n        this.view.layout(height, width);\n        if (isNumber(width)) {\n            (_a = this.findController) === null || _a === void 0 ? void 0 : _a.layout(width);\n        }\n    }\n    style(styles) {\n        var _a, _b;\n        const suffix = `.${this.view.domId}`;\n        const content = [];\n        if (styles.treeIndentGuidesStroke) {\n            content.push(`.monaco-list${suffix}:hover .monaco-tl-indent > .indent-guide, .monaco-list${suffix}.always .monaco-tl-indent > .indent-guide  { border-color: ${styles.treeInactiveIndentGuidesStroke}; }`);\n            content.push(`.monaco-list${suffix} .monaco-tl-indent > .indent-guide.active { border-color: ${styles.treeIndentGuidesStroke}; }`);\n        }\n        // Sticky Scroll Background\n        const stickyScrollBackground = (_a = styles.treeStickyScrollBackground) !== null && _a !== void 0 ? _a : styles.listBackground;\n        if (stickyScrollBackground) {\n            content.push(`.monaco-list${suffix} .monaco-scrollable-element .monaco-tree-sticky-container { background-color: ${stickyScrollBackground}; }`);\n            content.push(`.monaco-list${suffix} .monaco-scrollable-element .monaco-tree-sticky-container .monaco-tree-sticky-row { background-color: ${stickyScrollBackground}; }`);\n        }\n        // Sticky Scroll Border\n        if (styles.treeStickyScrollBorder) {\n            content.push(`.monaco-list${suffix} .monaco-scrollable-element .monaco-tree-sticky-container { border-bottom: 1px solid ${styles.treeStickyScrollBorder}; }`);\n        }\n        // Sticky Scroll Shadow\n        if (styles.treeStickyScrollShadow) {\n            content.push(`.monaco-list${suffix} .monaco-scrollable-element .monaco-tree-sticky-container .monaco-tree-sticky-container-shadow { box-shadow: ${styles.treeStickyScrollShadow} 0 6px 6px -6px inset; height: 3px; }`);\n        }\n        // Sticky Scroll Focus\n        if (styles.listFocusForeground) {\n            content.push(`.monaco-list${suffix}.sticky-scroll-focused .monaco-scrollable-element .monaco-tree-sticky-container:focus .monaco-list-row.focused { color: ${styles.listFocusForeground}; }`);\n            content.push(`.monaco-list${suffix}:not(.sticky-scroll-focused) .monaco-scrollable-element .monaco-tree-sticky-container .monaco-list-row.focused { color: inherit; }`);\n        }\n        // Sticky Scroll Focus Outlines\n        const focusAndSelectionOutline = asCssValueWithDefault(styles.listFocusAndSelectionOutline, asCssValueWithDefault(styles.listSelectionOutline, (_b = styles.listFocusOutline) !== null && _b !== void 0 ? _b : ''));\n        if (focusAndSelectionOutline) { // default: listFocusOutline\n            content.push(`.monaco-list${suffix}.sticky-scroll-focused .monaco-scrollable-element .monaco-tree-sticky-container:focus .monaco-list-row.focused.selected { outline: 1px solid ${focusAndSelectionOutline}; outline-offset: -1px;}`);\n            content.push(`.monaco-list${suffix}:not(.sticky-scroll-focused) .monaco-scrollable-element .monaco-tree-sticky-container .monaco-list-row.focused.selected { outline: inherit;}`);\n        }\n        if (styles.listFocusOutline) { // default: set\n            content.push(`.monaco-list${suffix}.sticky-scroll-focused .monaco-scrollable-element .monaco-tree-sticky-container:focus .monaco-list-row.focused { outline: 1px solid ${styles.listFocusOutline}; outline-offset: -1px; }`);\n            content.push(`.monaco-list${suffix}:not(.sticky-scroll-focused) .monaco-scrollable-element .monaco-tree-sticky-container .monaco-list-row.focused { outline: inherit; }`);\n            content.push(`.monaco-workbench.context-menu-visible .monaco-list${suffix}.last-focused.sticky-scroll-focused .monaco-scrollable-element .monaco-tree-sticky-container .monaco-list-row.passive-focused { outline: 1px solid ${styles.listFocusOutline}; outline-offset: -1px; }`);\n            content.push(`.monaco-workbench.context-menu-visible .monaco-list${suffix}.last-focused.sticky-scroll-focused .monaco-list-rows .monaco-list-row.focused { outline: inherit; }`);\n            content.push(`.monaco-workbench.context-menu-visible .monaco-list${suffix}.last-focused:not(.sticky-scroll-focused) .monaco-tree-sticky-container .monaco-list-rows .monaco-list-row.focused { outline: inherit; }`);\n        }\n        this.styleElement.textContent = content.join('\\n');\n        this.view.style(styles);\n    }\n    // Tree navigation\n    getParentElement(location) {\n        const parentRef = this.model.getParentNodeLocation(location);\n        const parentNode = this.model.getNode(parentRef);\n        return parentNode.element;\n    }\n    getFirstElementChild(location) {\n        return this.model.getFirstElementChild(location);\n    }\n    // Tree\n    getNode(location) {\n        return this.model.getNode(location);\n    }\n    getNodeLocation(node) {\n        return this.model.getNodeLocation(node);\n    }\n    collapse(location, recursive = false) {\n        return this.model.setCollapsed(location, true, recursive);\n    }\n    expand(location, recursive = false) {\n        return this.model.setCollapsed(location, false, recursive);\n    }\n    toggleCollapsed(location, recursive = false) {\n        return this.model.setCollapsed(location, undefined, recursive);\n    }\n    isCollapsible(location) {\n        return this.model.isCollapsible(location);\n    }\n    setCollapsible(location, collapsible) {\n        return this.model.setCollapsible(location, collapsible);\n    }\n    isCollapsed(location) {\n        return this.model.isCollapsed(location);\n    }\n    refilter() {\n        this._onWillRefilter.fire(undefined);\n        this.model.refilter();\n    }\n    setSelection(elements, browserEvent) {\n        this.eventBufferer.bufferEvents(() => {\n            const nodes = elements.map(e => this.model.getNode(e));\n            this.selection.set(nodes, browserEvent);\n            const indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\n            this.view.setSelection(indexes, browserEvent, true);\n        });\n    }\n    getSelection() {\n        return this.selection.get();\n    }\n    setFocus(elements, browserEvent) {\n        this.eventBufferer.bufferEvents(() => {\n            const nodes = elements.map(e => this.model.getNode(e));\n            this.focus.set(nodes, browserEvent);\n            const indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\n            this.view.setFocus(indexes, browserEvent, true);\n        });\n    }\n    focusNext(n = 1, loop = false, browserEvent, filter = (isKeyboardEvent(browserEvent) && browserEvent.altKey) ? undefined : this.focusNavigationFilter) {\n        this.view.focusNext(n, loop, browserEvent, filter);\n    }\n    focusPrevious(n = 1, loop = false, browserEvent, filter = (isKeyboardEvent(browserEvent) && browserEvent.altKey) ? undefined : this.focusNavigationFilter) {\n        this.view.focusPrevious(n, loop, browserEvent, filter);\n    }\n    focusNextPage(browserEvent, filter = (isKeyboardEvent(browserEvent) && browserEvent.altKey) ? undefined : this.focusNavigationFilter) {\n        return this.view.focusNextPage(browserEvent, filter);\n    }\n    focusPreviousPage(browserEvent, filter = (isKeyboardEvent(browserEvent) && browserEvent.altKey) ? undefined : this.focusNavigationFilter) {\n        return this.view.focusPreviousPage(browserEvent, filter, () => { var _a, _b; return (_b = (_a = this.stickyScrollController) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : 0; });\n    }\n    focusFirst(browserEvent, filter = (isKeyboardEvent(browserEvent) && browserEvent.altKey) ? undefined : this.focusNavigationFilter) {\n        this.view.focusFirst(browserEvent, filter);\n    }\n    getFocus() {\n        return this.focus.get();\n    }\n    reveal(location, relativeTop) {\n        this.model.expandTo(location);\n        const index = this.model.getListIndex(location);\n        if (index === -1) {\n            return;\n        }\n        if (!this.stickyScrollController) {\n            this.view.reveal(index, relativeTop);\n        }\n        else {\n            const paddingTop = this.stickyScrollController.nodePositionTopBelowWidget(this.getNode(location));\n            this.view.reveal(index, relativeTop, paddingTop);\n        }\n    }\n    // List\n    onLeftArrow(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const nodes = this.view.getFocusedElements();\n        if (nodes.length === 0) {\n            return;\n        }\n        const node = nodes[0];\n        const location = this.model.getNodeLocation(node);\n        const didChange = this.model.setCollapsed(location, true);\n        if (!didChange) {\n            const parentLocation = this.model.getParentNodeLocation(location);\n            if (!parentLocation) {\n                return;\n            }\n            const parentListIndex = this.model.getListIndex(parentLocation);\n            this.view.reveal(parentListIndex);\n            this.view.setFocus([parentListIndex]);\n        }\n    }\n    onRightArrow(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const nodes = this.view.getFocusedElements();\n        if (nodes.length === 0) {\n            return;\n        }\n        const node = nodes[0];\n        const location = this.model.getNodeLocation(node);\n        const didChange = this.model.setCollapsed(location, false);\n        if (!didChange) {\n            if (!node.children.some(child => child.visible)) {\n                return;\n            }\n            const [focusedIndex] = this.view.getFocus();\n            const firstChildIndex = focusedIndex + 1;\n            this.view.reveal(firstChildIndex);\n            this.view.setFocus([firstChildIndex]);\n        }\n    }\n    onSpace(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const nodes = this.view.getFocusedElements();\n        if (nodes.length === 0) {\n            return;\n        }\n        const node = nodes[0];\n        const location = this.model.getNodeLocation(node);\n        const recursive = e.browserEvent.altKey;\n        this.model.setCollapsed(location, undefined, recursive);\n    }\n    dispose() {\n        var _a;\n        dispose(this.disposables);\n        (_a = this.stickyScrollController) === null || _a === void 0 ? void 0 : _a.dispose();\n        this.view.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ElementsDragAndDropData } from '../list/listView.js';\nimport { ComposedTreeDelegate } from './abstractTree.js';\nimport { getVisibleState, isFilterResult } from './indexTreeModel.js';\nimport { CompressibleObjectTree, ObjectTree } from './objectTree.js';\nimport { ObjectTreeElementCollapseState, TreeError, WeakMapper } from './tree.js';\nimport { createCancelablePromise, Promises, timeout } from '../../../common/async.js';\nimport { Codicon } from '../../../common/codicons.js';\nimport { ThemeIcon } from '../../../common/themables.js';\nimport { isCancellationError, onUnexpectedError } from '../../../common/errors.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { Iterable } from '../../../common/iterator.js';\nimport { DisposableStore, dispose } from '../../../common/lifecycle.js';\nimport { isIterable } from '../../../common/types.js';\nfunction createAsyncDataTreeNode(props) {\n    return {\n        ...props,\n        children: [],\n        refreshPromise: undefined,\n        stale: true,\n        slow: false,\n        forceExpanded: false\n    };\n}\nfunction isAncestor(ancestor, descendant) {\n    if (!descendant.parent) {\n        return false;\n    }\n    else if (descendant.parent === ancestor) {\n        return true;\n    }\n    else {\n        return isAncestor(ancestor, descendant.parent);\n    }\n}\nfunction intersects(node, other) {\n    return node === other || isAncestor(node, other) || isAncestor(other, node);\n}\nclass AsyncDataTreeNodeWrapper {\n    get element() { return this.node.element.element; }\n    get children() { return this.node.children.map(node => new AsyncDataTreeNodeWrapper(node)); }\n    get depth() { return this.node.depth; }\n    get visibleChildrenCount() { return this.node.visibleChildrenCount; }\n    get visibleChildIndex() { return this.node.visibleChildIndex; }\n    get collapsible() { return this.node.collapsible; }\n    get collapsed() { return this.node.collapsed; }\n    get visible() { return this.node.visible; }\n    get filterData() { return this.node.filterData; }\n    constructor(node) {\n        this.node = node;\n    }\n}\nclass AsyncDataTreeRenderer {\n    constructor(renderer, nodeMapper, onDidChangeTwistieState) {\n        this.renderer = renderer;\n        this.nodeMapper = nodeMapper;\n        this.onDidChangeTwistieState = onDidChangeTwistieState;\n        this.renderedNodes = new Map();\n        this.templateId = renderer.templateId;\n    }\n    renderTemplate(container) {\n        const templateData = this.renderer.renderTemplate(container);\n        return { templateData };\n    }\n    renderElement(node, index, templateData, height) {\n        this.renderer.renderElement(this.nodeMapper.map(node), index, templateData.templateData, height);\n    }\n    renderTwistie(element, twistieElement) {\n        if (element.slow) {\n            twistieElement.classList.add(...ThemeIcon.asClassNameArray(Codicon.treeItemLoading));\n            return true;\n        }\n        else {\n            twistieElement.classList.remove(...ThemeIcon.asClassNameArray(Codicon.treeItemLoading));\n            return false;\n        }\n    }\n    disposeElement(node, index, templateData, height) {\n        var _a, _b;\n        (_b = (_a = this.renderer).disposeElement) === null || _b === void 0 ? void 0 : _b.call(_a, this.nodeMapper.map(node), index, templateData.templateData, height);\n    }\n    disposeTemplate(templateData) {\n        this.renderer.disposeTemplate(templateData.templateData);\n    }\n    dispose() {\n        this.renderedNodes.clear();\n    }\n}\nfunction asTreeEvent(e) {\n    return {\n        browserEvent: e.browserEvent,\n        elements: e.elements.map(e => e.element)\n    };\n}\nfunction asTreeMouseEvent(e) {\n    return {\n        browserEvent: e.browserEvent,\n        element: e.element && e.element.element,\n        target: e.target\n    };\n}\nclass AsyncDataTreeElementsDragAndDropData extends ElementsDragAndDropData {\n    constructor(data) {\n        super(data.elements.map(node => node.element));\n        this.data = data;\n    }\n}\nfunction asAsyncDataTreeDragAndDropData(data) {\n    if (data instanceof ElementsDragAndDropData) {\n        return new AsyncDataTreeElementsDragAndDropData(data);\n    }\n    return data;\n}\nclass AsyncDataTreeNodeListDragAndDrop {\n    constructor(dnd) {\n        this.dnd = dnd;\n    }\n    getDragURI(node) {\n        return this.dnd.getDragURI(node.element);\n    }\n    getDragLabel(nodes, originalEvent) {\n        if (this.dnd.getDragLabel) {\n            return this.dnd.getDragLabel(nodes.map(node => node.element), originalEvent);\n        }\n        return undefined;\n    }\n    onDragStart(data, originalEvent) {\n        var _a, _b;\n        (_b = (_a = this.dnd).onDragStart) === null || _b === void 0 ? void 0 : _b.call(_a, asAsyncDataTreeDragAndDropData(data), originalEvent);\n    }\n    onDragOver(data, targetNode, targetIndex, targetSector, originalEvent, raw = true) {\n        return this.dnd.onDragOver(asAsyncDataTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, targetSector, originalEvent);\n    }\n    drop(data, targetNode, targetIndex, targetSector, originalEvent) {\n        this.dnd.drop(asAsyncDataTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, targetSector, originalEvent);\n    }\n    onDragEnd(originalEvent) {\n        var _a, _b;\n        (_b = (_a = this.dnd).onDragEnd) === null || _b === void 0 ? void 0 : _b.call(_a, originalEvent);\n    }\n    dispose() {\n        this.dnd.dispose();\n    }\n}\nfunction asObjectTreeOptions(options) {\n    return options && {\n        ...options,\n        collapseByDefault: true,\n        identityProvider: options.identityProvider && {\n            getId(el) {\n                return options.identityProvider.getId(el.element);\n            }\n        },\n        dnd: options.dnd && new AsyncDataTreeNodeListDragAndDrop(options.dnd),\n        multipleSelectionController: options.multipleSelectionController && {\n            isSelectionSingleChangeEvent(e) {\n                return options.multipleSelectionController.isSelectionSingleChangeEvent({ ...e, element: e.element });\n            },\n            isSelectionRangeChangeEvent(e) {\n                return options.multipleSelectionController.isSelectionRangeChangeEvent({ ...e, element: e.element });\n            }\n        },\n        accessibilityProvider: options.accessibilityProvider && {\n            ...options.accessibilityProvider,\n            getPosInSet: undefined,\n            getSetSize: undefined,\n            getRole: options.accessibilityProvider.getRole ? (el) => {\n                return options.accessibilityProvider.getRole(el.element);\n            } : () => 'treeitem',\n            isChecked: options.accessibilityProvider.isChecked ? (e) => {\n                var _a;\n                return !!((_a = options.accessibilityProvider) === null || _a === void 0 ? void 0 : _a.isChecked(e.element));\n            } : undefined,\n            getAriaLabel(e) {\n                return options.accessibilityProvider.getAriaLabel(e.element);\n            },\n            getWidgetAriaLabel() {\n                return options.accessibilityProvider.getWidgetAriaLabel();\n            },\n            getWidgetRole: options.accessibilityProvider.getWidgetRole ? () => options.accessibilityProvider.getWidgetRole() : () => 'tree',\n            getAriaLevel: options.accessibilityProvider.getAriaLevel && (node => {\n                return options.accessibilityProvider.getAriaLevel(node.element);\n            }),\n            getActiveDescendantId: options.accessibilityProvider.getActiveDescendantId && (node => {\n                return options.accessibilityProvider.getActiveDescendantId(node.element);\n            })\n        },\n        filter: options.filter && {\n            filter(e, parentVisibility) {\n                return options.filter.filter(e.element, parentVisibility);\n            }\n        },\n        keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && {\n            ...options.keyboardNavigationLabelProvider,\n            getKeyboardNavigationLabel(e) {\n                return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(e.element);\n            }\n        },\n        sorter: undefined,\n        expandOnlyOnTwistieClick: typeof options.expandOnlyOnTwistieClick === 'undefined' ? undefined : (typeof options.expandOnlyOnTwistieClick !== 'function' ? options.expandOnlyOnTwistieClick : (e => options.expandOnlyOnTwistieClick(e.element))),\n        defaultFindVisibility: e => {\n            if (e.hasChildren && e.stale) {\n                return 1 /* TreeVisibility.Visible */;\n            }\n            else if (typeof options.defaultFindVisibility === 'number') {\n                return options.defaultFindVisibility;\n            }\n            else if (typeof options.defaultFindVisibility === 'undefined') {\n                return 2 /* TreeVisibility.Recurse */;\n            }\n            else {\n                return options.defaultFindVisibility(e.element);\n            }\n        }\n    };\n}\nfunction dfs(node, fn) {\n    fn(node);\n    node.children.forEach(child => dfs(child, fn));\n}\nexport class AsyncDataTree {\n    get onDidScroll() { return this.tree.onDidScroll; }\n    get onDidChangeFocus() { return Event.map(this.tree.onDidChangeFocus, asTreeEvent); }\n    get onDidChangeSelection() { return Event.map(this.tree.onDidChangeSelection, asTreeEvent); }\n    get onMouseDblClick() { return Event.map(this.tree.onMouseDblClick, asTreeMouseEvent); }\n    get onPointer() { return Event.map(this.tree.onPointer, asTreeMouseEvent); }\n    get onDidFocus() { return this.tree.onDidFocus; }\n    /**\n     * To be used internally only!\n     * @deprecated\n     */\n    get onDidChangeModel() { return this.tree.onDidChangeModel; }\n    get onDidChangeCollapseState() { return this.tree.onDidChangeCollapseState; }\n    get onDidChangeFindOpenState() { return this.tree.onDidChangeFindOpenState; }\n    get onDidChangeStickyScrollFocused() { return this.tree.onDidChangeStickyScrollFocused; }\n    get onDidDispose() { return this.tree.onDidDispose; }\n    constructor(user, container, delegate, renderers, dataSource, options = {}) {\n        this.user = user;\n        this.dataSource = dataSource;\n        this.nodes = new Map();\n        this.subTreeRefreshPromises = new Map();\n        this.refreshPromises = new Map();\n        this._onDidRender = new Emitter();\n        this._onDidChangeNodeSlowState = new Emitter();\n        this.nodeMapper = new WeakMapper(node => new AsyncDataTreeNodeWrapper(node));\n        this.disposables = new DisposableStore();\n        this.identityProvider = options.identityProvider;\n        this.autoExpandSingleChildren = typeof options.autoExpandSingleChildren === 'undefined' ? false : options.autoExpandSingleChildren;\n        this.sorter = options.sorter;\n        this.getDefaultCollapseState = e => options.collapseByDefault ? (options.collapseByDefault(e) ? ObjectTreeElementCollapseState.PreserveOrCollapsed : ObjectTreeElementCollapseState.PreserveOrExpanded) : undefined;\n        this.tree = this.createTree(user, container, delegate, renderers, options);\n        this.onDidChangeFindMode = this.tree.onDidChangeFindMode;\n        this.onDidChangeFindMatchType = this.tree.onDidChangeFindMatchType;\n        this.root = createAsyncDataTreeNode({\n            element: undefined,\n            parent: null,\n            hasChildren: true,\n            defaultCollapseState: undefined\n        });\n        if (this.identityProvider) {\n            this.root = {\n                ...this.root,\n                id: null\n            };\n        }\n        this.nodes.set(null, this.root);\n        this.tree.onDidChangeCollapseState(this._onDidChangeCollapseState, this, this.disposables);\n    }\n    createTree(user, container, delegate, renderers, options) {\n        const objectTreeDelegate = new ComposedTreeDelegate(delegate);\n        const objectTreeRenderers = renderers.map(r => new AsyncDataTreeRenderer(r, this.nodeMapper, this._onDidChangeNodeSlowState.event));\n        const objectTreeOptions = asObjectTreeOptions(options) || {};\n        return new ObjectTree(user, container, objectTreeDelegate, objectTreeRenderers, objectTreeOptions);\n    }\n    updateOptions(options = {}) {\n        this.tree.updateOptions(options);\n    }\n    // Widget\n    getHTMLElement() {\n        return this.tree.getHTMLElement();\n    }\n    get scrollTop() {\n        return this.tree.scrollTop;\n    }\n    set scrollTop(scrollTop) {\n        this.tree.scrollTop = scrollTop;\n    }\n    get scrollHeight() {\n        return this.tree.scrollHeight;\n    }\n    get renderHeight() {\n        return this.tree.renderHeight;\n    }\n    domFocus() {\n        this.tree.domFocus();\n    }\n    layout(height, width) {\n        this.tree.layout(height, width);\n    }\n    style(styles) {\n        this.tree.style(styles);\n    }\n    // Model\n    getInput() {\n        return this.root.element;\n    }\n    async setInput(input, viewState) {\n        this.refreshPromises.forEach(promise => promise.cancel());\n        this.refreshPromises.clear();\n        this.root.element = input;\n        const viewStateContext = viewState && { viewState, focus: [], selection: [] };\n        await this._updateChildren(input, true, false, viewStateContext);\n        if (viewStateContext) {\n            this.tree.setFocus(viewStateContext.focus);\n            this.tree.setSelection(viewStateContext.selection);\n        }\n        if (viewState && typeof viewState.scrollTop === 'number') {\n            this.scrollTop = viewState.scrollTop;\n        }\n    }\n    async _updateChildren(element = this.root.element, recursive = true, rerender = false, viewStateContext, options) {\n        if (typeof this.root.element === 'undefined') {\n            throw new TreeError(this.user, 'Tree input not set');\n        }\n        if (this.root.refreshPromise) {\n            await this.root.refreshPromise;\n            await Event.toPromise(this._onDidRender.event);\n        }\n        const node = this.getDataNode(element);\n        await this.refreshAndRenderNode(node, recursive, viewStateContext, options);\n        if (rerender) {\n            try {\n                this.tree.rerender(node);\n            }\n            catch (_a) {\n                // missing nodes are fine, this could've resulted from\n                // parallel refresh calls, removing `node` altogether\n            }\n        }\n    }\n    // View\n    rerender(element) {\n        if (element === undefined || element === this.root.element) {\n            this.tree.rerender();\n            return;\n        }\n        const node = this.getDataNode(element);\n        this.tree.rerender(node);\n    }\n    // Tree\n    getNode(element = this.root.element) {\n        const dataNode = this.getDataNode(element);\n        const node = this.tree.getNode(dataNode === this.root ? null : dataNode);\n        return this.nodeMapper.map(node);\n    }\n    collapse(element, recursive = false) {\n        const node = this.getDataNode(element);\n        return this.tree.collapse(node === this.root ? null : node, recursive);\n    }\n    async expand(element, recursive = false) {\n        if (typeof this.root.element === 'undefined') {\n            throw new TreeError(this.user, 'Tree input not set');\n        }\n        if (this.root.refreshPromise) {\n            await this.root.refreshPromise;\n            await Event.toPromise(this._onDidRender.event);\n        }\n        const node = this.getDataNode(element);\n        if (this.tree.hasElement(node) && !this.tree.isCollapsible(node)) {\n            return false;\n        }\n        if (node.refreshPromise) {\n            await this.root.refreshPromise;\n            await Event.toPromise(this._onDidRender.event);\n        }\n        if (node !== this.root && !node.refreshPromise && !this.tree.isCollapsed(node)) {\n            return false;\n        }\n        const result = this.tree.expand(node === this.root ? null : node, recursive);\n        if (node.refreshPromise) {\n            await this.root.refreshPromise;\n            await Event.toPromise(this._onDidRender.event);\n        }\n        return result;\n    }\n    setSelection(elements, browserEvent) {\n        const nodes = elements.map(e => this.getDataNode(e));\n        this.tree.setSelection(nodes, browserEvent);\n    }\n    getSelection() {\n        const nodes = this.tree.getSelection();\n        return nodes.map(n => n.element);\n    }\n    setFocus(elements, browserEvent) {\n        const nodes = elements.map(e => this.getDataNode(e));\n        this.tree.setFocus(nodes, browserEvent);\n    }\n    getFocus() {\n        const nodes = this.tree.getFocus();\n        return nodes.map(n => n.element);\n    }\n    reveal(element, relativeTop) {\n        this.tree.reveal(this.getDataNode(element), relativeTop);\n    }\n    // Tree navigation\n    getParentElement(element) {\n        const node = this.tree.getParentElement(this.getDataNode(element));\n        return (node && node.element);\n    }\n    getFirstElementChild(element = this.root.element) {\n        const dataNode = this.getDataNode(element);\n        const node = this.tree.getFirstElementChild(dataNode === this.root ? null : dataNode);\n        return (node && node.element);\n    }\n    // Implementation\n    getDataNode(element) {\n        const node = this.nodes.get((element === this.root.element ? null : element));\n        if (!node) {\n            throw new TreeError(this.user, `Data tree node not found: ${element}`);\n        }\n        return node;\n    }\n    async refreshAndRenderNode(node, recursive, viewStateContext, options) {\n        await this.refreshNode(node, recursive, viewStateContext);\n        if (this.disposables.isDisposed) {\n            return; // tree disposed during refresh (#199264)\n        }\n        this.render(node, viewStateContext, options);\n    }\n    async refreshNode(node, recursive, viewStateContext) {\n        let result;\n        this.subTreeRefreshPromises.forEach((refreshPromise, refreshNode) => {\n            if (!result && intersects(refreshNode, node)) {\n                result = refreshPromise.then(() => this.refreshNode(node, recursive, viewStateContext));\n            }\n        });\n        if (result) {\n            return result;\n        }\n        if (node !== this.root) {\n            const treeNode = this.tree.getNode(node);\n            if (treeNode.collapsed) {\n                node.hasChildren = !!this.dataSource.hasChildren(node.element);\n                node.stale = true;\n                this.setChildren(node, [], recursive, viewStateContext);\n                return;\n            }\n        }\n        return this.doRefreshSubTree(node, recursive, viewStateContext);\n    }\n    async doRefreshSubTree(node, recursive, viewStateContext) {\n        let done;\n        node.refreshPromise = new Promise(c => done = c);\n        this.subTreeRefreshPromises.set(node, node.refreshPromise);\n        node.refreshPromise.finally(() => {\n            node.refreshPromise = undefined;\n            this.subTreeRefreshPromises.delete(node);\n        });\n        try {\n            const childrenToRefresh = await this.doRefreshNode(node, recursive, viewStateContext);\n            node.stale = false;\n            await Promises.settled(childrenToRefresh.map(child => this.doRefreshSubTree(child, recursive, viewStateContext)));\n        }\n        finally {\n            done();\n        }\n    }\n    async doRefreshNode(node, recursive, viewStateContext) {\n        node.hasChildren = !!this.dataSource.hasChildren(node.element);\n        let childrenPromise;\n        if (!node.hasChildren) {\n            childrenPromise = Promise.resolve(Iterable.empty());\n        }\n        else {\n            const children = this.doGetChildren(node);\n            if (isIterable(children)) {\n                childrenPromise = Promise.resolve(children);\n            }\n            else {\n                const slowTimeout = timeout(800);\n                slowTimeout.then(() => {\n                    node.slow = true;\n                    this._onDidChangeNodeSlowState.fire(node);\n                }, _ => null);\n                childrenPromise = children.finally(() => slowTimeout.cancel());\n            }\n        }\n        try {\n            const children = await childrenPromise;\n            return this.setChildren(node, children, recursive, viewStateContext);\n        }\n        catch (err) {\n            if (node !== this.root && this.tree.hasElement(node)) {\n                this.tree.collapse(node);\n            }\n            if (isCancellationError(err)) {\n                return [];\n            }\n            throw err;\n        }\n        finally {\n            if (node.slow) {\n                node.slow = false;\n                this._onDidChangeNodeSlowState.fire(node);\n            }\n        }\n    }\n    doGetChildren(node) {\n        let result = this.refreshPromises.get(node);\n        if (result) {\n            return result;\n        }\n        const children = this.dataSource.getChildren(node.element);\n        if (isIterable(children)) {\n            return this.processChildren(children);\n        }\n        else {\n            result = createCancelablePromise(async () => this.processChildren(await children));\n            this.refreshPromises.set(node, result);\n            return result.finally(() => { this.refreshPromises.delete(node); });\n        }\n    }\n    _onDidChangeCollapseState({ node, deep }) {\n        if (node.element === null) {\n            return;\n        }\n        if (!node.collapsed && node.element.stale) {\n            if (deep) {\n                this.collapse(node.element.element);\n            }\n            else {\n                this.refreshAndRenderNode(node.element, false)\n                    .catch(onUnexpectedError);\n            }\n        }\n    }\n    setChildren(node, childrenElementsIterable, recursive, viewStateContext) {\n        const childrenElements = [...childrenElementsIterable];\n        // perf: if the node was and still is a leaf, avoid all this hassle\n        if (node.children.length === 0 && childrenElements.length === 0) {\n            return [];\n        }\n        const nodesToForget = new Map();\n        const childrenTreeNodesById = new Map();\n        for (const child of node.children) {\n            nodesToForget.set(child.element, child);\n            if (this.identityProvider) {\n                childrenTreeNodesById.set(child.id, { node: child, collapsed: this.tree.hasElement(child) && this.tree.isCollapsed(child) });\n            }\n        }\n        const childrenToRefresh = [];\n        const children = childrenElements.map(element => {\n            const hasChildren = !!this.dataSource.hasChildren(element);\n            if (!this.identityProvider) {\n                const asyncDataTreeNode = createAsyncDataTreeNode({ element, parent: node, hasChildren, defaultCollapseState: this.getDefaultCollapseState(element) });\n                if (hasChildren && asyncDataTreeNode.defaultCollapseState === ObjectTreeElementCollapseState.PreserveOrExpanded) {\n                    childrenToRefresh.push(asyncDataTreeNode);\n                }\n                return asyncDataTreeNode;\n            }\n            const id = this.identityProvider.getId(element).toString();\n            const result = childrenTreeNodesById.get(id);\n            if (result) {\n                const asyncDataTreeNode = result.node;\n                nodesToForget.delete(asyncDataTreeNode.element);\n                this.nodes.delete(asyncDataTreeNode.element);\n                this.nodes.set(element, asyncDataTreeNode);\n                asyncDataTreeNode.element = element;\n                asyncDataTreeNode.hasChildren = hasChildren;\n                if (recursive) {\n                    if (result.collapsed) {\n                        asyncDataTreeNode.children.forEach(node => dfs(node, node => this.nodes.delete(node.element)));\n                        asyncDataTreeNode.children.splice(0, asyncDataTreeNode.children.length);\n                        asyncDataTreeNode.stale = true;\n                    }\n                    else {\n                        childrenToRefresh.push(asyncDataTreeNode);\n                    }\n                }\n                else if (hasChildren && !result.collapsed) {\n                    childrenToRefresh.push(asyncDataTreeNode);\n                }\n                return asyncDataTreeNode;\n            }\n            const childAsyncDataTreeNode = createAsyncDataTreeNode({ element, parent: node, id, hasChildren, defaultCollapseState: this.getDefaultCollapseState(element) });\n            if (viewStateContext && viewStateContext.viewState.focus && viewStateContext.viewState.focus.indexOf(id) > -1) {\n                viewStateContext.focus.push(childAsyncDataTreeNode);\n            }\n            if (viewStateContext && viewStateContext.viewState.selection && viewStateContext.viewState.selection.indexOf(id) > -1) {\n                viewStateContext.selection.push(childAsyncDataTreeNode);\n            }\n            if (viewStateContext && viewStateContext.viewState.expanded && viewStateContext.viewState.expanded.indexOf(id) > -1) {\n                childrenToRefresh.push(childAsyncDataTreeNode);\n            }\n            else if (hasChildren && childAsyncDataTreeNode.defaultCollapseState === ObjectTreeElementCollapseState.PreserveOrExpanded) {\n                childrenToRefresh.push(childAsyncDataTreeNode);\n            }\n            return childAsyncDataTreeNode;\n        });\n        for (const node of nodesToForget.values()) {\n            dfs(node, node => this.nodes.delete(node.element));\n        }\n        for (const child of children) {\n            this.nodes.set(child.element, child);\n        }\n        node.children.splice(0, node.children.length, ...children);\n        // TODO@joao this doesn't take filter into account\n        if (node !== this.root && this.autoExpandSingleChildren && children.length === 1 && childrenToRefresh.length === 0) {\n            children[0].forceExpanded = true;\n            childrenToRefresh.push(children[0]);\n        }\n        return childrenToRefresh;\n    }\n    render(node, viewStateContext, options) {\n        const children = node.children.map(node => this.asTreeElement(node, viewStateContext));\n        const objectTreeOptions = options && {\n            ...options,\n            diffIdentityProvider: options.diffIdentityProvider && {\n                getId(node) {\n                    return options.diffIdentityProvider.getId(node.element);\n                }\n            }\n        };\n        this.tree.setChildren(node === this.root ? null : node, children, objectTreeOptions);\n        if (node !== this.root) {\n            this.tree.setCollapsible(node, node.hasChildren);\n        }\n        this._onDidRender.fire();\n    }\n    asTreeElement(node, viewStateContext) {\n        if (node.stale) {\n            return {\n                element: node,\n                collapsible: node.hasChildren,\n                collapsed: true\n            };\n        }\n        let collapsed;\n        if (viewStateContext && viewStateContext.viewState.expanded && node.id && viewStateContext.viewState.expanded.indexOf(node.id) > -1) {\n            collapsed = false;\n        }\n        else if (node.forceExpanded) {\n            collapsed = false;\n            node.forceExpanded = false;\n        }\n        else {\n            collapsed = node.defaultCollapseState;\n        }\n        return {\n            element: node,\n            children: node.hasChildren ? Iterable.map(node.children, child => this.asTreeElement(child, viewStateContext)) : [],\n            collapsible: node.hasChildren,\n            collapsed\n        };\n    }\n    processChildren(children) {\n        if (this.sorter) {\n            children = [...children].sort(this.sorter.compare.bind(this.sorter));\n        }\n        return children;\n    }\n    dispose() {\n        this.disposables.dispose();\n        this.tree.dispose();\n    }\n}\nclass CompressibleAsyncDataTreeNodeWrapper {\n    get element() {\n        return {\n            elements: this.node.element.elements.map(e => e.element),\n            incompressible: this.node.element.incompressible\n        };\n    }\n    get children() { return this.node.children.map(node => new CompressibleAsyncDataTreeNodeWrapper(node)); }\n    get depth() { return this.node.depth; }\n    get visibleChildrenCount() { return this.node.visibleChildrenCount; }\n    get visibleChildIndex() { return this.node.visibleChildIndex; }\n    get collapsible() { return this.node.collapsible; }\n    get collapsed() { return this.node.collapsed; }\n    get visible() { return this.node.visible; }\n    get filterData() { return this.node.filterData; }\n    constructor(node) {\n        this.node = node;\n    }\n}\nclass CompressibleAsyncDataTreeRenderer {\n    constructor(renderer, nodeMapper, compressibleNodeMapperProvider, onDidChangeTwistieState) {\n        this.renderer = renderer;\n        this.nodeMapper = nodeMapper;\n        this.compressibleNodeMapperProvider = compressibleNodeMapperProvider;\n        this.onDidChangeTwistieState = onDidChangeTwistieState;\n        this.renderedNodes = new Map();\n        this.disposables = [];\n        this.templateId = renderer.templateId;\n    }\n    renderTemplate(container) {\n        const templateData = this.renderer.renderTemplate(container);\n        return { templateData };\n    }\n    renderElement(node, index, templateData, height) {\n        this.renderer.renderElement(this.nodeMapper.map(node), index, templateData.templateData, height);\n    }\n    renderCompressedElements(node, index, templateData, height) {\n        this.renderer.renderCompressedElements(this.compressibleNodeMapperProvider().map(node), index, templateData.templateData, height);\n    }\n    renderTwistie(element, twistieElement) {\n        if (element.slow) {\n            twistieElement.classList.add(...ThemeIcon.asClassNameArray(Codicon.treeItemLoading));\n            return true;\n        }\n        else {\n            twistieElement.classList.remove(...ThemeIcon.asClassNameArray(Codicon.treeItemLoading));\n            return false;\n        }\n    }\n    disposeElement(node, index, templateData, height) {\n        var _a, _b;\n        (_b = (_a = this.renderer).disposeElement) === null || _b === void 0 ? void 0 : _b.call(_a, this.nodeMapper.map(node), index, templateData.templateData, height);\n    }\n    disposeCompressedElements(node, index, templateData, height) {\n        var _a, _b;\n        (_b = (_a = this.renderer).disposeCompressedElements) === null || _b === void 0 ? void 0 : _b.call(_a, this.compressibleNodeMapperProvider().map(node), index, templateData.templateData, height);\n    }\n    disposeTemplate(templateData) {\n        this.renderer.disposeTemplate(templateData.templateData);\n    }\n    dispose() {\n        this.renderedNodes.clear();\n        this.disposables = dispose(this.disposables);\n    }\n}\nfunction asCompressibleObjectTreeOptions(options) {\n    const objectTreeOptions = options && asObjectTreeOptions(options);\n    return objectTreeOptions && {\n        ...objectTreeOptions,\n        keyboardNavigationLabelProvider: objectTreeOptions.keyboardNavigationLabelProvider && {\n            ...objectTreeOptions.keyboardNavigationLabelProvider,\n            getCompressedNodeKeyboardNavigationLabel(els) {\n                return options.keyboardNavigationLabelProvider.getCompressedNodeKeyboardNavigationLabel(els.map(e => e.element));\n            }\n        }\n    };\n}\nexport class CompressibleAsyncDataTree extends AsyncDataTree {\n    constructor(user, container, virtualDelegate, compressionDelegate, renderers, dataSource, options = {}) {\n        super(user, container, virtualDelegate, renderers, dataSource, options);\n        this.compressionDelegate = compressionDelegate;\n        this.compressibleNodeMapper = new WeakMapper(node => new CompressibleAsyncDataTreeNodeWrapper(node));\n        this.filter = options.filter;\n    }\n    createTree(user, container, delegate, renderers, options) {\n        const objectTreeDelegate = new ComposedTreeDelegate(delegate);\n        const objectTreeRenderers = renderers.map(r => new CompressibleAsyncDataTreeRenderer(r, this.nodeMapper, () => this.compressibleNodeMapper, this._onDidChangeNodeSlowState.event));\n        const objectTreeOptions = asCompressibleObjectTreeOptions(options) || {};\n        return new CompressibleObjectTree(user, container, objectTreeDelegate, objectTreeRenderers, objectTreeOptions);\n    }\n    asTreeElement(node, viewStateContext) {\n        return {\n            incompressible: this.compressionDelegate.isIncompressible(node.element),\n            ...super.asTreeElement(node, viewStateContext)\n        };\n    }\n    updateOptions(options = {}) {\n        this.tree.updateOptions(options);\n    }\n    render(node, viewStateContext, options) {\n        if (!this.identityProvider) {\n            return super.render(node, viewStateContext);\n        }\n        // Preserve traits across compressions. Hacky but does the trick.\n        // This is hard to fix properly since it requires rewriting the traits\n        // across trees and lists. Let's just keep it this way for now.\n        const getId = (element) => this.identityProvider.getId(element).toString();\n        const getUncompressedIds = (nodes) => {\n            const result = new Set();\n            for (const node of nodes) {\n                const compressedNode = this.tree.getCompressedTreeNode(node === this.root ? null : node);\n                if (!compressedNode.element) {\n                    continue;\n                }\n                for (const node of compressedNode.element.elements) {\n                    result.add(getId(node.element));\n                }\n            }\n            return result;\n        };\n        const oldSelection = getUncompressedIds(this.tree.getSelection());\n        const oldFocus = getUncompressedIds(this.tree.getFocus());\n        super.render(node, viewStateContext, options);\n        const selection = this.getSelection();\n        let didChangeSelection = false;\n        const focus = this.getFocus();\n        let didChangeFocus = false;\n        const visit = (node) => {\n            const compressedNode = node.element;\n            if (compressedNode) {\n                for (let i = 0; i < compressedNode.elements.length; i++) {\n                    const id = getId(compressedNode.elements[i].element);\n                    const element = compressedNode.elements[compressedNode.elements.length - 1].element;\n                    // github.com/microsoft/vscode/issues/85938\n                    if (oldSelection.has(id) && selection.indexOf(element) === -1) {\n                        selection.push(element);\n                        didChangeSelection = true;\n                    }\n                    if (oldFocus.has(id) && focus.indexOf(element) === -1) {\n                        focus.push(element);\n                        didChangeFocus = true;\n                    }\n                }\n            }\n            node.children.forEach(visit);\n        };\n        visit(this.tree.getCompressedTreeNode(node === this.root ? null : node));\n        if (didChangeSelection) {\n            this.setSelection(selection);\n        }\n        if (didChangeFocus) {\n            this.setFocus(focus);\n        }\n    }\n    // For compressed async data trees, `TreeVisibility.Recurse` doesn't currently work\n    // and we have to filter everything beforehand\n    // Related to #85193 and #85835\n    processChildren(children) {\n        if (this.filter) {\n            children = Iterable.filter(children, e => {\n                const result = this.filter.filter(e, 1 /* TreeVisibility.Visible */);\n                const visibility = getVisibility(result);\n                if (visibility === 2 /* TreeVisibility.Recurse */) {\n                    throw new Error('Recursive tree visibility not supported in async data compressed trees');\n                }\n                return visibility === 1 /* TreeVisibility.Visible */;\n            });\n        }\n        return super.processChildren(children);\n    }\n}\nfunction getVisibility(filterResult) {\n    if (typeof filterResult === 'boolean') {\n        return filterResult ? 1 /* TreeVisibility.Visible */ : 0 /* TreeVisibility.Hidden */;\n    }\n    else if (isFilterResult(filterResult)) {\n        return getVisibleState(filterResult.visibility);\n    }\n    else {\n        return getVisibleState(filterResult);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { AbstractTree } from './abstractTree.js';\nimport { ObjectTreeModel } from './objectTreeModel.js';\nexport class DataTree extends AbstractTree {\n    constructor(user, container, delegate, renderers, dataSource, options = {}) {\n        super(user, container, delegate, renderers, options);\n        this.user = user;\n        this.dataSource = dataSource;\n        this.identityProvider = options.identityProvider;\n    }\n    createModel(user, view, options) {\n        return new ObjectTreeModel(user, view, options);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { TreeError } from './tree.js';\nimport { splice, tail2 } from '../../../common/arrays.js';\nimport { Delayer } from '../../../common/async.js';\nimport { MicrotaskDelay } from '../../../common/symbols.js';\nimport { LcsDiff } from '../../../common/diff/diff.js';\nimport { Emitter, EventBufferer } from '../../../common/event.js';\nimport { Iterable } from '../../../common/iterator.js';\nexport function isFilterResult(obj) {\n    return typeof obj === 'object' && 'visibility' in obj && 'data' in obj;\n}\nexport function getVisibleState(visibility) {\n    switch (visibility) {\n        case true: return 1 /* TreeVisibility.Visible */;\n        case false: return 0 /* TreeVisibility.Hidden */;\n        default: return visibility;\n    }\n}\nfunction isCollapsibleStateUpdate(update) {\n    return typeof update.collapsible === 'boolean';\n}\nexport class IndexTreeModel {\n    constructor(user, list, rootElement, options = {}) {\n        var _a;\n        this.user = user;\n        this.list = list;\n        this.rootRef = [];\n        this.eventBufferer = new EventBufferer();\n        this._onDidChangeCollapseState = new Emitter();\n        this.onDidChangeCollapseState = this.eventBufferer.wrapEvent(this._onDidChangeCollapseState.event);\n        this._onDidChangeRenderNodeCount = new Emitter();\n        this.onDidChangeRenderNodeCount = this.eventBufferer.wrapEvent(this._onDidChangeRenderNodeCount.event);\n        this._onDidSplice = new Emitter();\n        this.onDidSplice = this._onDidSplice.event;\n        this.refilterDelayer = new Delayer(MicrotaskDelay);\n        this.collapseByDefault = typeof options.collapseByDefault === 'undefined' ? false : options.collapseByDefault;\n        this.allowNonCollapsibleParents = (_a = options.allowNonCollapsibleParents) !== null && _a !== void 0 ? _a : false;\n        this.filter = options.filter;\n        this.autoExpandSingleChildren = typeof options.autoExpandSingleChildren === 'undefined' ? false : options.autoExpandSingleChildren;\n        this.root = {\n            parent: undefined,\n            element: rootElement,\n            children: [],\n            depth: 0,\n            visibleChildrenCount: 0,\n            visibleChildIndex: -1,\n            collapsible: false,\n            collapsed: false,\n            renderNodeCount: 0,\n            visibility: 1 /* TreeVisibility.Visible */,\n            visible: true,\n            filterData: undefined\n        };\n    }\n    splice(location, deleteCount, toInsert = Iterable.empty(), options = {}) {\n        if (location.length === 0) {\n            throw new TreeError(this.user, 'Invalid tree location');\n        }\n        if (options.diffIdentityProvider) {\n            this.spliceSmart(options.diffIdentityProvider, location, deleteCount, toInsert, options);\n        }\n        else {\n            this.spliceSimple(location, deleteCount, toInsert, options);\n        }\n    }\n    spliceSmart(identity, location, deleteCount, toInsertIterable, options, recurseLevels) {\n        var _a;\n        if (toInsertIterable === void 0) { toInsertIterable = Iterable.empty(); }\n        if (recurseLevels === void 0) { recurseLevels = (_a = options.diffDepth) !== null && _a !== void 0 ? _a : 0; }\n        const { parentNode } = this.getParentNodeWithListIndex(location);\n        if (!parentNode.lastDiffIds) {\n            return this.spliceSimple(location, deleteCount, toInsertIterable, options);\n        }\n        const toInsert = [...toInsertIterable];\n        const index = location[location.length - 1];\n        const diff = new LcsDiff({ getElements: () => parentNode.lastDiffIds }, {\n            getElements: () => [\n                ...parentNode.children.slice(0, index),\n                ...toInsert,\n                ...parentNode.children.slice(index + deleteCount),\n            ].map(e => identity.getId(e.element).toString())\n        }).ComputeDiff(false);\n        // if we were given a 'best effort' diff, use default behavior\n        if (diff.quitEarly) {\n            parentNode.lastDiffIds = undefined;\n            return this.spliceSimple(location, deleteCount, toInsert, options);\n        }\n        const locationPrefix = location.slice(0, -1);\n        const recurseSplice = (fromOriginal, fromModified, count) => {\n            if (recurseLevels > 0) {\n                for (let i = 0; i < count; i++) {\n                    fromOriginal--;\n                    fromModified--;\n                    this.spliceSmart(identity, [...locationPrefix, fromOriginal, 0], Number.MAX_SAFE_INTEGER, toInsert[fromModified].children, options, recurseLevels - 1);\n                }\n            }\n        };\n        let lastStartO = Math.min(parentNode.children.length, index + deleteCount);\n        let lastStartM = toInsert.length;\n        for (const change of diff.changes.sort((a, b) => b.originalStart - a.originalStart)) {\n            recurseSplice(lastStartO, lastStartM, lastStartO - (change.originalStart + change.originalLength));\n            lastStartO = change.originalStart;\n            lastStartM = change.modifiedStart - index;\n            this.spliceSimple([...locationPrefix, lastStartO], change.originalLength, Iterable.slice(toInsert, lastStartM, lastStartM + change.modifiedLength), options);\n        }\n        // at this point, startO === startM === count since any remaining prefix should match\n        recurseSplice(lastStartO, lastStartM, lastStartO);\n    }\n    spliceSimple(location, deleteCount, toInsert = Iterable.empty(), { onDidCreateNode, onDidDeleteNode, diffIdentityProvider }) {\n        const { parentNode, listIndex, revealed, visible } = this.getParentNodeWithListIndex(location);\n        const treeListElementsToInsert = [];\n        const nodesToInsertIterator = Iterable.map(toInsert, el => this.createTreeNode(el, parentNode, parentNode.visible ? 1 /* TreeVisibility.Visible */ : 0 /* TreeVisibility.Hidden */, revealed, treeListElementsToInsert, onDidCreateNode));\n        const lastIndex = location[location.length - 1];\n        // figure out what's the visible child start index right before the\n        // splice point\n        let visibleChildStartIndex = 0;\n        for (let i = lastIndex; i >= 0 && i < parentNode.children.length; i--) {\n            const child = parentNode.children[i];\n            if (child.visible) {\n                visibleChildStartIndex = child.visibleChildIndex;\n                break;\n            }\n        }\n        const nodesToInsert = [];\n        let insertedVisibleChildrenCount = 0;\n        let renderNodeCount = 0;\n        for (const child of nodesToInsertIterator) {\n            nodesToInsert.push(child);\n            renderNodeCount += child.renderNodeCount;\n            if (child.visible) {\n                child.visibleChildIndex = visibleChildStartIndex + insertedVisibleChildrenCount++;\n            }\n        }\n        const deletedNodes = splice(parentNode.children, lastIndex, deleteCount, nodesToInsert);\n        if (!diffIdentityProvider) {\n            parentNode.lastDiffIds = undefined;\n        }\n        else if (parentNode.lastDiffIds) {\n            splice(parentNode.lastDiffIds, lastIndex, deleteCount, nodesToInsert.map(n => diffIdentityProvider.getId(n.element).toString()));\n        }\n        else {\n            parentNode.lastDiffIds = parentNode.children.map(n => diffIdentityProvider.getId(n.element).toString());\n        }\n        // figure out what is the count of deleted visible children\n        let deletedVisibleChildrenCount = 0;\n        for (const child of deletedNodes) {\n            if (child.visible) {\n                deletedVisibleChildrenCount++;\n            }\n        }\n        // and adjust for all visible children after the splice point\n        if (deletedVisibleChildrenCount !== 0) {\n            for (let i = lastIndex + nodesToInsert.length; i < parentNode.children.length; i++) {\n                const child = parentNode.children[i];\n                if (child.visible) {\n                    child.visibleChildIndex -= deletedVisibleChildrenCount;\n                }\n            }\n        }\n        // update parent's visible children count\n        parentNode.visibleChildrenCount += insertedVisibleChildrenCount - deletedVisibleChildrenCount;\n        if (revealed && visible) {\n            const visibleDeleteCount = deletedNodes.reduce((r, node) => r + (node.visible ? node.renderNodeCount : 0), 0);\n            this._updateAncestorsRenderNodeCount(parentNode, renderNodeCount - visibleDeleteCount);\n            this.list.splice(listIndex, visibleDeleteCount, treeListElementsToInsert);\n        }\n        if (deletedNodes.length > 0 && onDidDeleteNode) {\n            const visit = (node) => {\n                onDidDeleteNode(node);\n                node.children.forEach(visit);\n            };\n            deletedNodes.forEach(visit);\n        }\n        this._onDidSplice.fire({ insertedNodes: nodesToInsert, deletedNodes });\n        let node = parentNode;\n        while (node) {\n            if (node.visibility === 2 /* TreeVisibility.Recurse */) {\n                // delayed to avoid excessive refiltering, see #135941\n                this.refilterDelayer.trigger(() => this.refilter());\n                break;\n            }\n            node = node.parent;\n        }\n    }\n    rerender(location) {\n        if (location.length === 0) {\n            throw new TreeError(this.user, 'Invalid tree location');\n        }\n        const { node, listIndex, revealed } = this.getTreeNodeWithListIndex(location);\n        if (node.visible && revealed) {\n            this.list.splice(listIndex, 1, [node]);\n        }\n    }\n    has(location) {\n        return this.hasTreeNode(location);\n    }\n    getListIndex(location) {\n        const { listIndex, visible, revealed } = this.getTreeNodeWithListIndex(location);\n        return visible && revealed ? listIndex : -1;\n    }\n    getListRenderCount(location) {\n        return this.getTreeNode(location).renderNodeCount;\n    }\n    isCollapsible(location) {\n        return this.getTreeNode(location).collapsible;\n    }\n    setCollapsible(location, collapsible) {\n        const node = this.getTreeNode(location);\n        if (typeof collapsible === 'undefined') {\n            collapsible = !node.collapsible;\n        }\n        const update = { collapsible };\n        return this.eventBufferer.bufferEvents(() => this._setCollapseState(location, update));\n    }\n    isCollapsed(location) {\n        return this.getTreeNode(location).collapsed;\n    }\n    setCollapsed(location, collapsed, recursive) {\n        const node = this.getTreeNode(location);\n        if (typeof collapsed === 'undefined') {\n            collapsed = !node.collapsed;\n        }\n        const update = { collapsed, recursive: recursive || false };\n        return this.eventBufferer.bufferEvents(() => this._setCollapseState(location, update));\n    }\n    _setCollapseState(location, update) {\n        const { node, listIndex, revealed } = this.getTreeNodeWithListIndex(location);\n        const result = this._setListNodeCollapseState(node, listIndex, revealed, update);\n        if (node !== this.root && this.autoExpandSingleChildren && result && !isCollapsibleStateUpdate(update) && node.collapsible && !node.collapsed && !update.recursive) {\n            let onlyVisibleChildIndex = -1;\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                if (child.visible) {\n                    if (onlyVisibleChildIndex > -1) {\n                        onlyVisibleChildIndex = -1;\n                        break;\n                    }\n                    else {\n                        onlyVisibleChildIndex = i;\n                    }\n                }\n            }\n            if (onlyVisibleChildIndex > -1) {\n                this._setCollapseState([...location, onlyVisibleChildIndex], update);\n            }\n        }\n        return result;\n    }\n    _setListNodeCollapseState(node, listIndex, revealed, update) {\n        const result = this._setNodeCollapseState(node, update, false);\n        if (!revealed || !node.visible || !result) {\n            return result;\n        }\n        const previousRenderNodeCount = node.renderNodeCount;\n        const toInsert = this.updateNodeAfterCollapseChange(node);\n        const deleteCount = previousRenderNodeCount - (listIndex === -1 ? 0 : 1);\n        this.list.splice(listIndex + 1, deleteCount, toInsert.slice(1));\n        return result;\n    }\n    _setNodeCollapseState(node, update, deep) {\n        let result;\n        if (node === this.root) {\n            result = false;\n        }\n        else {\n            if (isCollapsibleStateUpdate(update)) {\n                result = node.collapsible !== update.collapsible;\n                node.collapsible = update.collapsible;\n            }\n            else if (!node.collapsible) {\n                result = false;\n            }\n            else {\n                result = node.collapsed !== update.collapsed;\n                node.collapsed = update.collapsed;\n            }\n            if (result) {\n                this._onDidChangeCollapseState.fire({ node, deep });\n            }\n        }\n        if (!isCollapsibleStateUpdate(update) && update.recursive) {\n            for (const child of node.children) {\n                result = this._setNodeCollapseState(child, update, true) || result;\n            }\n        }\n        return result;\n    }\n    expandTo(location) {\n        this.eventBufferer.bufferEvents(() => {\n            let node = this.getTreeNode(location);\n            while (node.parent) {\n                node = node.parent;\n                location = location.slice(0, location.length - 1);\n                if (node.collapsed) {\n                    this._setCollapseState(location, { collapsed: false, recursive: false });\n                }\n            }\n        });\n    }\n    refilter() {\n        const previousRenderNodeCount = this.root.renderNodeCount;\n        const toInsert = this.updateNodeAfterFilterChange(this.root);\n        this.list.splice(0, previousRenderNodeCount, toInsert);\n        this.refilterDelayer.cancel();\n    }\n    createTreeNode(treeElement, parent, parentVisibility, revealed, treeListElements, onDidCreateNode) {\n        const node = {\n            parent,\n            element: treeElement.element,\n            children: [],\n            depth: parent.depth + 1,\n            visibleChildrenCount: 0,\n            visibleChildIndex: -1,\n            collapsible: typeof treeElement.collapsible === 'boolean' ? treeElement.collapsible : (typeof treeElement.collapsed !== 'undefined'),\n            collapsed: typeof treeElement.collapsed === 'undefined' ? this.collapseByDefault : treeElement.collapsed,\n            renderNodeCount: 1,\n            visibility: 1 /* TreeVisibility.Visible */,\n            visible: true,\n            filterData: undefined\n        };\n        const visibility = this._filterNode(node, parentVisibility);\n        node.visibility = visibility;\n        if (revealed) {\n            treeListElements.push(node);\n        }\n        const childElements = treeElement.children || Iterable.empty();\n        const childRevealed = revealed && visibility !== 0 /* TreeVisibility.Hidden */ && !node.collapsed;\n        let visibleChildrenCount = 0;\n        let renderNodeCount = 1;\n        for (const el of childElements) {\n            const child = this.createTreeNode(el, node, visibility, childRevealed, treeListElements, onDidCreateNode);\n            node.children.push(child);\n            renderNodeCount += child.renderNodeCount;\n            if (child.visible) {\n                child.visibleChildIndex = visibleChildrenCount++;\n            }\n        }\n        if (!this.allowNonCollapsibleParents) {\n            node.collapsible = node.collapsible || node.children.length > 0;\n        }\n        node.visibleChildrenCount = visibleChildrenCount;\n        node.visible = visibility === 2 /* TreeVisibility.Recurse */ ? visibleChildrenCount > 0 : (visibility === 1 /* TreeVisibility.Visible */);\n        if (!node.visible) {\n            node.renderNodeCount = 0;\n            if (revealed) {\n                treeListElements.pop();\n            }\n        }\n        else if (!node.collapsed) {\n            node.renderNodeCount = renderNodeCount;\n        }\n        onDidCreateNode === null || onDidCreateNode === void 0 ? void 0 : onDidCreateNode(node);\n        return node;\n    }\n    updateNodeAfterCollapseChange(node) {\n        const previousRenderNodeCount = node.renderNodeCount;\n        const result = [];\n        this._updateNodeAfterCollapseChange(node, result);\n        this._updateAncestorsRenderNodeCount(node.parent, result.length - previousRenderNodeCount);\n        return result;\n    }\n    _updateNodeAfterCollapseChange(node, result) {\n        if (node.visible === false) {\n            return 0;\n        }\n        result.push(node);\n        node.renderNodeCount = 1;\n        if (!node.collapsed) {\n            for (const child of node.children) {\n                node.renderNodeCount += this._updateNodeAfterCollapseChange(child, result);\n            }\n        }\n        this._onDidChangeRenderNodeCount.fire(node);\n        return node.renderNodeCount;\n    }\n    updateNodeAfterFilterChange(node) {\n        const previousRenderNodeCount = node.renderNodeCount;\n        const result = [];\n        this._updateNodeAfterFilterChange(node, node.visible ? 1 /* TreeVisibility.Visible */ : 0 /* TreeVisibility.Hidden */, result);\n        this._updateAncestorsRenderNodeCount(node.parent, result.length - previousRenderNodeCount);\n        return result;\n    }\n    _updateNodeAfterFilterChange(node, parentVisibility, result, revealed = true) {\n        let visibility;\n        if (node !== this.root) {\n            visibility = this._filterNode(node, parentVisibility);\n            if (visibility === 0 /* TreeVisibility.Hidden */) {\n                node.visible = false;\n                node.renderNodeCount = 0;\n                return false;\n            }\n            if (revealed) {\n                result.push(node);\n            }\n        }\n        const resultStartLength = result.length;\n        node.renderNodeCount = node === this.root ? 0 : 1;\n        let hasVisibleDescendants = false;\n        if (!node.collapsed || visibility !== 0 /* TreeVisibility.Hidden */) {\n            let visibleChildIndex = 0;\n            for (const child of node.children) {\n                hasVisibleDescendants = this._updateNodeAfterFilterChange(child, visibility, result, revealed && !node.collapsed) || hasVisibleDescendants;\n                if (child.visible) {\n                    child.visibleChildIndex = visibleChildIndex++;\n                }\n            }\n            node.visibleChildrenCount = visibleChildIndex;\n        }\n        else {\n            node.visibleChildrenCount = 0;\n        }\n        if (node !== this.root) {\n            node.visible = visibility === 2 /* TreeVisibility.Recurse */ ? hasVisibleDescendants : (visibility === 1 /* TreeVisibility.Visible */);\n            node.visibility = visibility;\n        }\n        if (!node.visible) {\n            node.renderNodeCount = 0;\n            if (revealed) {\n                result.pop();\n            }\n        }\n        else if (!node.collapsed) {\n            node.renderNodeCount += result.length - resultStartLength;\n        }\n        this._onDidChangeRenderNodeCount.fire(node);\n        return node.visible;\n    }\n    _updateAncestorsRenderNodeCount(node, diff) {\n        if (diff === 0) {\n            return;\n        }\n        while (node) {\n            node.renderNodeCount += diff;\n            this._onDidChangeRenderNodeCount.fire(node);\n            node = node.parent;\n        }\n    }\n    _filterNode(node, parentVisibility) {\n        const result = this.filter ? this.filter.filter(node.element, parentVisibility) : 1 /* TreeVisibility.Visible */;\n        if (typeof result === 'boolean') {\n            node.filterData = undefined;\n            return result ? 1 /* TreeVisibility.Visible */ : 0 /* TreeVisibility.Hidden */;\n        }\n        else if (isFilterResult(result)) {\n            node.filterData = result.data;\n            return getVisibleState(result.visibility);\n        }\n        else {\n            node.filterData = undefined;\n            return getVisibleState(result);\n        }\n    }\n    // cheap\n    hasTreeNode(location, node = this.root) {\n        if (!location || location.length === 0) {\n            return true;\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index > node.children.length) {\n            return false;\n        }\n        return this.hasTreeNode(rest, node.children[index]);\n    }\n    // cheap\n    getTreeNode(location, node = this.root) {\n        if (!location || location.length === 0) {\n            return node;\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index > node.children.length) {\n            throw new TreeError(this.user, 'Invalid tree location');\n        }\n        return this.getTreeNode(rest, node.children[index]);\n    }\n    // expensive\n    getTreeNodeWithListIndex(location) {\n        if (location.length === 0) {\n            return { node: this.root, listIndex: -1, revealed: true, visible: false };\n        }\n        const { parentNode, listIndex, revealed, visible } = this.getParentNodeWithListIndex(location);\n        const index = location[location.length - 1];\n        if (index < 0 || index > parentNode.children.length) {\n            throw new TreeError(this.user, 'Invalid tree location');\n        }\n        const node = parentNode.children[index];\n        return { node, listIndex, revealed, visible: visible && node.visible };\n    }\n    getParentNodeWithListIndex(location, node = this.root, listIndex = 0, revealed = true, visible = true) {\n        const [index, ...rest] = location;\n        if (index < 0 || index > node.children.length) {\n            throw new TreeError(this.user, 'Invalid tree location');\n        }\n        // TODO@joao perf!\n        for (let i = 0; i < index; i++) {\n            listIndex += node.children[i].renderNodeCount;\n        }\n        revealed = revealed && !node.collapsed;\n        visible = visible && node.visible;\n        if (rest.length === 0) {\n            return { parentNode: node, listIndex, revealed, visible };\n        }\n        return this.getParentNodeWithListIndex(rest, node.children[index], listIndex + 1, revealed, visible);\n    }\n    getNode(location = []) {\n        return this.getTreeNode(location);\n    }\n    // TODO@joao perf!\n    getNodeLocation(node) {\n        const location = [];\n        let indexTreeNode = node; // typing woes\n        while (indexTreeNode.parent) {\n            location.push(indexTreeNode.parent.children.indexOf(indexTreeNode));\n            indexTreeNode = indexTreeNode.parent;\n        }\n        return location.reverse();\n    }\n    getParentNodeLocation(location) {\n        if (location.length === 0) {\n            return undefined;\n        }\n        else if (location.length === 1) {\n            return [];\n        }\n        else {\n            return tail2(location)[0];\n        }\n    }\n    getFirstElementChild(location) {\n        const node = this.getTreeNode(location);\n        if (node.children.length === 0) {\n            return undefined;\n        }\n        return node.children[0].element;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ObjectTreeModel } from './objectTreeModel.js';\nimport { TreeError, WeakMapper } from './tree.js';\nimport { equals } from '../../../common/arrays.js';\nimport { Event } from '../../../common/event.js';\nimport { Iterable } from '../../../common/iterator.js';\nfunction noCompress(element) {\n    const elements = [element.element];\n    const incompressible = element.incompressible || false;\n    return {\n        element: { elements, incompressible },\n        children: Iterable.map(Iterable.from(element.children), noCompress),\n        collapsible: element.collapsible,\n        collapsed: element.collapsed\n    };\n}\n// Exported only for test reasons, do not use directly\nexport function compress(element) {\n    const elements = [element.element];\n    const incompressible = element.incompressible || false;\n    let childrenIterator;\n    let children;\n    while (true) {\n        [children, childrenIterator] = Iterable.consume(Iterable.from(element.children), 2);\n        if (children.length !== 1) {\n            break;\n        }\n        if (children[0].incompressible) {\n            break;\n        }\n        element = children[0];\n        elements.push(element.element);\n    }\n    return {\n        element: { elements, incompressible },\n        children: Iterable.map(Iterable.concat(children, childrenIterator), compress),\n        collapsible: element.collapsible,\n        collapsed: element.collapsed\n    };\n}\nfunction _decompress(element, index = 0) {\n    let children;\n    if (index < element.element.elements.length - 1) {\n        children = [_decompress(element, index + 1)];\n    }\n    else {\n        children = Iterable.map(Iterable.from(element.children), el => _decompress(el, 0));\n    }\n    if (index === 0 && element.element.incompressible) {\n        return {\n            element: element.element.elements[index],\n            children,\n            incompressible: true,\n            collapsible: element.collapsible,\n            collapsed: element.collapsed\n        };\n    }\n    return {\n        element: element.element.elements[index],\n        children,\n        collapsible: element.collapsible,\n        collapsed: element.collapsed\n    };\n}\n// Exported only for test reasons, do not use directly\nexport function decompress(element) {\n    return _decompress(element, 0);\n}\nfunction splice(treeElement, element, children) {\n    if (treeElement.element === element) {\n        return { ...treeElement, children };\n    }\n    return { ...treeElement, children: Iterable.map(Iterable.from(treeElement.children), e => splice(e, element, children)) };\n}\nconst wrapIdentityProvider = (base) => ({\n    getId(node) {\n        return node.elements.map(e => base.getId(e).toString()).join('\\0');\n    }\n});\n// Exported only for test reasons, do not use directly\nexport class CompressedObjectTreeModel {\n    get onDidSplice() { return this.model.onDidSplice; }\n    get onDidChangeCollapseState() { return this.model.onDidChangeCollapseState; }\n    get onDidChangeRenderNodeCount() { return this.model.onDidChangeRenderNodeCount; }\n    constructor(user, list, options = {}) {\n        this.user = user;\n        this.rootRef = null;\n        this.nodes = new Map();\n        this.model = new ObjectTreeModel(user, list, options);\n        this.enabled = typeof options.compressionEnabled === 'undefined' ? true : options.compressionEnabled;\n        this.identityProvider = options.identityProvider;\n    }\n    setChildren(element, children = Iterable.empty(), options) {\n        // Diffs must be deep, since the compression can affect nested elements.\n        // @see https://github.com/microsoft/vscode/pull/114237#issuecomment-759425034\n        const diffIdentityProvider = options.diffIdentityProvider && wrapIdentityProvider(options.diffIdentityProvider);\n        if (element === null) {\n            const compressedChildren = Iterable.map(children, this.enabled ? compress : noCompress);\n            this._setChildren(null, compressedChildren, { diffIdentityProvider, diffDepth: Infinity });\n            return;\n        }\n        const compressedNode = this.nodes.get(element);\n        if (!compressedNode) {\n            throw new TreeError(this.user, 'Unknown compressed tree node');\n        }\n        const node = this.model.getNode(compressedNode);\n        const compressedParentNode = this.model.getParentNodeLocation(compressedNode);\n        const parent = this.model.getNode(compressedParentNode);\n        const decompressedElement = decompress(node);\n        const splicedElement = splice(decompressedElement, element, children);\n        const recompressedElement = (this.enabled ? compress : noCompress)(splicedElement);\n        // If the recompressed node is identical to the original, just set its children.\n        // Saves work and churn diffing the parent element.\n        const elementComparator = options.diffIdentityProvider\n            ? ((a, b) => options.diffIdentityProvider.getId(a) === options.diffIdentityProvider.getId(b))\n            : undefined;\n        if (equals(recompressedElement.element.elements, node.element.elements, elementComparator)) {\n            this._setChildren(compressedNode, recompressedElement.children || Iterable.empty(), { diffIdentityProvider, diffDepth: 1 });\n            return;\n        }\n        const parentChildren = parent.children\n            .map(child => child === node ? recompressedElement : child);\n        this._setChildren(parent.element, parentChildren, {\n            diffIdentityProvider,\n            diffDepth: node.depth - parent.depth,\n        });\n    }\n    isCompressionEnabled() {\n        return this.enabled;\n    }\n    setCompressionEnabled(enabled) {\n        if (enabled === this.enabled) {\n            return;\n        }\n        this.enabled = enabled;\n        const root = this.model.getNode();\n        const rootChildren = root.children;\n        const decompressedRootChildren = Iterable.map(rootChildren, decompress);\n        const recompressedRootChildren = Iterable.map(decompressedRootChildren, enabled ? compress : noCompress);\n        // it should be safe to always use deep diff mode here if an identity\n        // provider is available, since we know the raw nodes are unchanged.\n        this._setChildren(null, recompressedRootChildren, {\n            diffIdentityProvider: this.identityProvider,\n            diffDepth: Infinity,\n        });\n    }\n    _setChildren(node, children, options) {\n        const insertedElements = new Set();\n        const onDidCreateNode = (node) => {\n            for (const element of node.element.elements) {\n                insertedElements.add(element);\n                this.nodes.set(element, node.element);\n            }\n        };\n        const onDidDeleteNode = (node) => {\n            for (const element of node.element.elements) {\n                if (!insertedElements.has(element)) {\n                    this.nodes.delete(element);\n                }\n            }\n        };\n        this.model.setChildren(node, children, { ...options, onDidCreateNode, onDidDeleteNode });\n    }\n    has(element) {\n        return this.nodes.has(element);\n    }\n    getListIndex(location) {\n        const node = this.getCompressedNode(location);\n        return this.model.getListIndex(node);\n    }\n    getListRenderCount(location) {\n        const node = this.getCompressedNode(location);\n        return this.model.getListRenderCount(node);\n    }\n    getNode(location) {\n        if (typeof location === 'undefined') {\n            return this.model.getNode();\n        }\n        const node = this.getCompressedNode(location);\n        return this.model.getNode(node);\n    }\n    // TODO: review this\n    getNodeLocation(node) {\n        const compressedNode = this.model.getNodeLocation(node);\n        if (compressedNode === null) {\n            return null;\n        }\n        return compressedNode.elements[compressedNode.elements.length - 1];\n    }\n    // TODO: review this\n    getParentNodeLocation(location) {\n        const compressedNode = this.getCompressedNode(location);\n        const parentNode = this.model.getParentNodeLocation(compressedNode);\n        if (parentNode === null) {\n            return null;\n        }\n        return parentNode.elements[parentNode.elements.length - 1];\n    }\n    getFirstElementChild(location) {\n        const compressedNode = this.getCompressedNode(location);\n        return this.model.getFirstElementChild(compressedNode);\n    }\n    isCollapsible(location) {\n        const compressedNode = this.getCompressedNode(location);\n        return this.model.isCollapsible(compressedNode);\n    }\n    setCollapsible(location, collapsible) {\n        const compressedNode = this.getCompressedNode(location);\n        return this.model.setCollapsible(compressedNode, collapsible);\n    }\n    isCollapsed(location) {\n        const compressedNode = this.getCompressedNode(location);\n        return this.model.isCollapsed(compressedNode);\n    }\n    setCollapsed(location, collapsed, recursive) {\n        const compressedNode = this.getCompressedNode(location);\n        return this.model.setCollapsed(compressedNode, collapsed, recursive);\n    }\n    expandTo(location) {\n        const compressedNode = this.getCompressedNode(location);\n        this.model.expandTo(compressedNode);\n    }\n    rerender(location) {\n        const compressedNode = this.getCompressedNode(location);\n        this.model.rerender(compressedNode);\n    }\n    refilter() {\n        this.model.refilter();\n    }\n    getCompressedNode(element) {\n        if (element === null) {\n            return null;\n        }\n        const node = this.nodes.get(element);\n        if (!node) {\n            throw new TreeError(this.user, `Tree element not found: ${element}`);\n        }\n        return node;\n    }\n}\nexport const DefaultElementMapper = elements => elements[elements.length - 1];\nclass CompressedTreeNodeWrapper {\n    get element() { return this.node.element === null ? null : this.unwrapper(this.node.element); }\n    get children() { return this.node.children.map(node => new CompressedTreeNodeWrapper(this.unwrapper, node)); }\n    get depth() { return this.node.depth; }\n    get visibleChildrenCount() { return this.node.visibleChildrenCount; }\n    get visibleChildIndex() { return this.node.visibleChildIndex; }\n    get collapsible() { return this.node.collapsible; }\n    get collapsed() { return this.node.collapsed; }\n    get visible() { return this.node.visible; }\n    get filterData() { return this.node.filterData; }\n    constructor(unwrapper, node) {\n        this.unwrapper = unwrapper;\n        this.node = node;\n    }\n}\nfunction mapList(nodeMapper, list) {\n    return {\n        splice(start, deleteCount, toInsert) {\n            list.splice(start, deleteCount, toInsert.map(node => nodeMapper.map(node)));\n        },\n        updateElementHeight(index, height) {\n            list.updateElementHeight(index, height);\n        }\n    };\n}\nfunction mapOptions(compressedNodeUnwrapper, options) {\n    return {\n        ...options,\n        identityProvider: options.identityProvider && {\n            getId(node) {\n                return options.identityProvider.getId(compressedNodeUnwrapper(node));\n            }\n        },\n        sorter: options.sorter && {\n            compare(node, otherNode) {\n                return options.sorter.compare(node.elements[0], otherNode.elements[0]);\n            }\n        },\n        filter: options.filter && {\n            filter(node, parentVisibility) {\n                return options.filter.filter(compressedNodeUnwrapper(node), parentVisibility);\n            }\n        }\n    };\n}\nexport class CompressibleObjectTreeModel {\n    get onDidSplice() {\n        return Event.map(this.model.onDidSplice, ({ insertedNodes, deletedNodes }) => ({\n            insertedNodes: insertedNodes.map(node => this.nodeMapper.map(node)),\n            deletedNodes: deletedNodes.map(node => this.nodeMapper.map(node)),\n        }));\n    }\n    get onDidChangeCollapseState() {\n        return Event.map(this.model.onDidChangeCollapseState, ({ node, deep }) => ({\n            node: this.nodeMapper.map(node),\n            deep\n        }));\n    }\n    get onDidChangeRenderNodeCount() {\n        return Event.map(this.model.onDidChangeRenderNodeCount, node => this.nodeMapper.map(node));\n    }\n    constructor(user, list, options = {}) {\n        this.rootRef = null;\n        this.elementMapper = options.elementMapper || DefaultElementMapper;\n        const compressedNodeUnwrapper = node => this.elementMapper(node.elements);\n        this.nodeMapper = new WeakMapper(node => new CompressedTreeNodeWrapper(compressedNodeUnwrapper, node));\n        this.model = new CompressedObjectTreeModel(user, mapList(this.nodeMapper, list), mapOptions(compressedNodeUnwrapper, options));\n    }\n    setChildren(element, children = Iterable.empty(), options = {}) {\n        this.model.setChildren(element, children, options);\n    }\n    isCompressionEnabled() {\n        return this.model.isCompressionEnabled();\n    }\n    setCompressionEnabled(enabled) {\n        this.model.setCompressionEnabled(enabled);\n    }\n    has(location) {\n        return this.model.has(location);\n    }\n    getListIndex(location) {\n        return this.model.getListIndex(location);\n    }\n    getListRenderCount(location) {\n        return this.model.getListRenderCount(location);\n    }\n    getNode(location) {\n        return this.nodeMapper.map(this.model.getNode(location));\n    }\n    getNodeLocation(node) {\n        return node.element;\n    }\n    getParentNodeLocation(location) {\n        return this.model.getParentNodeLocation(location);\n    }\n    getFirstElementChild(location) {\n        const result = this.model.getFirstElementChild(location);\n        if (result === null || typeof result === 'undefined') {\n            return result;\n        }\n        return this.elementMapper(result.elements);\n    }\n    isCollapsible(location) {\n        return this.model.isCollapsible(location);\n    }\n    setCollapsible(location, collapsed) {\n        return this.model.setCollapsible(location, collapsed);\n    }\n    isCollapsed(location) {\n        return this.model.isCollapsed(location);\n    }\n    setCollapsed(location, collapsed, recursive) {\n        return this.model.setCollapsed(location, collapsed, recursive);\n    }\n    expandTo(location) {\n        return this.model.expandTo(location);\n    }\n    rerender(location) {\n        return this.model.rerender(location);\n    }\n    refilter() {\n        return this.model.refilter();\n    }\n    getCompressedTreeNode(location = null) {\n        return this.model.getNode(location);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { AbstractTree } from './abstractTree.js';\nimport { CompressibleObjectTreeModel } from './compressedObjectTreeModel.js';\nimport { ObjectTreeModel } from './objectTreeModel.js';\nimport { memoize } from '../../../common/decorators.js';\nimport { Iterable } from '../../../common/iterator.js';\nexport class ObjectTree extends AbstractTree {\n    get onDidChangeCollapseState() { return this.model.onDidChangeCollapseState; }\n    constructor(user, container, delegate, renderers, options = {}) {\n        super(user, container, delegate, renderers, options);\n        this.user = user;\n    }\n    setChildren(element, children = Iterable.empty(), options) {\n        this.model.setChildren(element, children, options);\n    }\n    rerender(element) {\n        if (element === undefined) {\n            this.view.rerender();\n            return;\n        }\n        this.model.rerender(element);\n    }\n    hasElement(element) {\n        return this.model.has(element);\n    }\n    createModel(user, view, options) {\n        return new ObjectTreeModel(user, view, options);\n    }\n}\nclass CompressibleRenderer {\n    get compressedTreeNodeProvider() {\n        return this._compressedTreeNodeProvider();\n    }\n    constructor(_compressedTreeNodeProvider, stickyScrollDelegate, renderer) {\n        this._compressedTreeNodeProvider = _compressedTreeNodeProvider;\n        this.stickyScrollDelegate = stickyScrollDelegate;\n        this.renderer = renderer;\n        this.templateId = renderer.templateId;\n        if (renderer.onDidChangeTwistieState) {\n            this.onDidChangeTwistieState = renderer.onDidChangeTwistieState;\n        }\n    }\n    renderTemplate(container) {\n        const data = this.renderer.renderTemplate(container);\n        return { compressedTreeNode: undefined, data };\n    }\n    renderElement(node, index, templateData, height) {\n        let compressedTreeNode = this.stickyScrollDelegate.getCompressedNode(node);\n        if (!compressedTreeNode) {\n            compressedTreeNode = this.compressedTreeNodeProvider.getCompressedTreeNode(node.element);\n        }\n        if (compressedTreeNode.element.elements.length === 1) {\n            templateData.compressedTreeNode = undefined;\n            this.renderer.renderElement(node, index, templateData.data, height);\n        }\n        else {\n            templateData.compressedTreeNode = compressedTreeNode;\n            this.renderer.renderCompressedElements(compressedTreeNode, index, templateData.data, height);\n        }\n    }\n    disposeElement(node, index, templateData, height) {\n        var _a, _b, _c, _d;\n        if (templateData.compressedTreeNode) {\n            (_b = (_a = this.renderer).disposeCompressedElements) === null || _b === void 0 ? void 0 : _b.call(_a, templateData.compressedTreeNode, index, templateData.data, height);\n        }\n        else {\n            (_d = (_c = this.renderer).disposeElement) === null || _d === void 0 ? void 0 : _d.call(_c, node, index, templateData.data, height);\n        }\n    }\n    disposeTemplate(templateData) {\n        this.renderer.disposeTemplate(templateData.data);\n    }\n    renderTwistie(element, twistieElement) {\n        if (this.renderer.renderTwistie) {\n            return this.renderer.renderTwistie(element, twistieElement);\n        }\n        return false;\n    }\n}\n__decorate([\n    memoize\n], CompressibleRenderer.prototype, \"compressedTreeNodeProvider\", null);\nclass CompressibleStickyScrollDelegate {\n    constructor(modelProvider) {\n        this.modelProvider = modelProvider;\n        this.compressedStickyNodes = new Map();\n    }\n    getCompressedNode(node) {\n        return this.compressedStickyNodes.get(node);\n    }\n    constrainStickyScrollNodes(stickyNodes, stickyScrollMaxItemCount, maxWidgetHeight) {\n        this.compressedStickyNodes.clear();\n        if (stickyNodes.length === 0) {\n            return [];\n        }\n        for (let i = 0; i < stickyNodes.length; i++) {\n            const stickyNode = stickyNodes[i];\n            const stickyNodeBottom = stickyNode.position + stickyNode.height;\n            const followingReachesMaxHeight = i + 1 < stickyNodes.length && stickyNodeBottom + stickyNodes[i + 1].height > maxWidgetHeight;\n            if (followingReachesMaxHeight || i >= stickyScrollMaxItemCount - 1 && stickyScrollMaxItemCount < stickyNodes.length) {\n                const uncompressedStickyNodes = stickyNodes.slice(0, i);\n                const overflowingStickyNodes = stickyNodes.slice(i);\n                const compressedStickyNode = this.compressStickyNodes(overflowingStickyNodes);\n                return [...uncompressedStickyNodes, compressedStickyNode];\n            }\n        }\n        return stickyNodes;\n    }\n    compressStickyNodes(stickyNodes) {\n        if (stickyNodes.length === 0) {\n            throw new Error('Can\\'t compress empty sticky nodes');\n        }\n        const compressionModel = this.modelProvider();\n        if (!compressionModel.isCompressionEnabled()) {\n            return stickyNodes[0];\n        }\n        // Collect all elements to be compressed\n        const elements = [];\n        for (let i = 0; i < stickyNodes.length; i++) {\n            const stickyNode = stickyNodes[i];\n            const compressedNode = compressionModel.getCompressedTreeNode(stickyNode.node.element);\n            if (compressedNode.element) {\n                // if an element is incompressible, it can't be compressed with it's parent element\n                if (i !== 0 && compressedNode.element.incompressible) {\n                    break;\n                }\n                elements.push(...compressedNode.element.elements);\n            }\n        }\n        if (elements.length < 2) {\n            return stickyNodes[0];\n        }\n        // Compress the elements\n        const lastStickyNode = stickyNodes[stickyNodes.length - 1];\n        const compressedElement = { elements, incompressible: false };\n        const compressedNode = { ...lastStickyNode.node, children: [], element: compressedElement };\n        const stickyTreeNode = new Proxy(stickyNodes[0].node, {});\n        const compressedStickyNode = {\n            node: stickyTreeNode,\n            startIndex: stickyNodes[0].startIndex,\n            endIndex: lastStickyNode.endIndex,\n            position: stickyNodes[0].position,\n            height: stickyNodes[0].height,\n        };\n        this.compressedStickyNodes.set(stickyTreeNode, compressedNode);\n        return compressedStickyNode;\n    }\n}\nfunction asObjectTreeOptions(compressedTreeNodeProvider, options) {\n    return options && {\n        ...options,\n        keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && {\n            getKeyboardNavigationLabel(e) {\n                let compressedTreeNode;\n                try {\n                    compressedTreeNode = compressedTreeNodeProvider().getCompressedTreeNode(e);\n                }\n                catch (_a) {\n                    return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(e);\n                }\n                if (compressedTreeNode.element.elements.length === 1) {\n                    return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(e);\n                }\n                else {\n                    return options.keyboardNavigationLabelProvider.getCompressedNodeKeyboardNavigationLabel(compressedTreeNode.element.elements);\n                }\n            }\n        }\n    };\n}\nexport class CompressibleObjectTree extends ObjectTree {\n    constructor(user, container, delegate, renderers, options = {}) {\n        const compressedTreeNodeProvider = () => this;\n        const stickyScrollDelegate = new CompressibleStickyScrollDelegate(() => this.model);\n        const compressibleRenderers = renderers.map(r => new CompressibleRenderer(compressedTreeNodeProvider, stickyScrollDelegate, r));\n        super(user, container, delegate, compressibleRenderers, { ...asObjectTreeOptions(compressedTreeNodeProvider, options), stickyScrollDelegate });\n    }\n    setChildren(element, children = Iterable.empty(), options) {\n        this.model.setChildren(element, children, options);\n    }\n    createModel(user, view, options) {\n        return new CompressibleObjectTreeModel(user, view, options);\n    }\n    updateOptions(optionsUpdate = {}) {\n        super.updateOptions(optionsUpdate);\n        if (typeof optionsUpdate.compressionEnabled !== 'undefined') {\n            this.model.setCompressionEnabled(optionsUpdate.compressionEnabled);\n        }\n    }\n    getCompressedTreeNode(element = null) {\n        return this.model.getCompressedTreeNode(element);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { IndexTreeModel } from './indexTreeModel.js';\nimport { ObjectTreeElementCollapseState, TreeError } from './tree.js';\nimport { Iterable } from '../../../common/iterator.js';\nexport class ObjectTreeModel {\n    constructor(user, list, options = {}) {\n        this.user = user;\n        this.rootRef = null;\n        this.nodes = new Map();\n        this.nodesByIdentity = new Map();\n        this.model = new IndexTreeModel(user, list, null, options);\n        this.onDidSplice = this.model.onDidSplice;\n        this.onDidChangeCollapseState = this.model.onDidChangeCollapseState;\n        this.onDidChangeRenderNodeCount = this.model.onDidChangeRenderNodeCount;\n        if (options.sorter) {\n            this.sorter = {\n                compare(a, b) {\n                    return options.sorter.compare(a.element, b.element);\n                }\n            };\n        }\n        this.identityProvider = options.identityProvider;\n    }\n    setChildren(element, children = Iterable.empty(), options = {}) {\n        const location = this.getElementLocation(element);\n        this._setChildren(location, this.preserveCollapseState(children), options);\n    }\n    _setChildren(location, children = Iterable.empty(), options) {\n        const insertedElements = new Set();\n        const insertedElementIds = new Set();\n        const onDidCreateNode = (node) => {\n            var _a;\n            if (node.element === null) {\n                return;\n            }\n            const tnode = node;\n            insertedElements.add(tnode.element);\n            this.nodes.set(tnode.element, tnode);\n            if (this.identityProvider) {\n                const id = this.identityProvider.getId(tnode.element).toString();\n                insertedElementIds.add(id);\n                this.nodesByIdentity.set(id, tnode);\n            }\n            (_a = options.onDidCreateNode) === null || _a === void 0 ? void 0 : _a.call(options, tnode);\n        };\n        const onDidDeleteNode = (node) => {\n            var _a;\n            if (node.element === null) {\n                return;\n            }\n            const tnode = node;\n            if (!insertedElements.has(tnode.element)) {\n                this.nodes.delete(tnode.element);\n            }\n            if (this.identityProvider) {\n                const id = this.identityProvider.getId(tnode.element).toString();\n                if (!insertedElementIds.has(id)) {\n                    this.nodesByIdentity.delete(id);\n                }\n            }\n            (_a = options.onDidDeleteNode) === null || _a === void 0 ? void 0 : _a.call(options, tnode);\n        };\n        this.model.splice([...location, 0], Number.MAX_VALUE, children, { ...options, onDidCreateNode, onDidDeleteNode });\n    }\n    preserveCollapseState(elements = Iterable.empty()) {\n        if (this.sorter) {\n            elements = [...elements].sort(this.sorter.compare.bind(this.sorter));\n        }\n        return Iterable.map(elements, treeElement => {\n            let node = this.nodes.get(treeElement.element);\n            if (!node && this.identityProvider) {\n                const id = this.identityProvider.getId(treeElement.element).toString();\n                node = this.nodesByIdentity.get(id);\n            }\n            if (!node) {\n                let collapsed;\n                if (typeof treeElement.collapsed === 'undefined') {\n                    collapsed = undefined;\n                }\n                else if (treeElement.collapsed === ObjectTreeElementCollapseState.Collapsed || treeElement.collapsed === ObjectTreeElementCollapseState.PreserveOrCollapsed) {\n                    collapsed = true;\n                }\n                else if (treeElement.collapsed === ObjectTreeElementCollapseState.Expanded || treeElement.collapsed === ObjectTreeElementCollapseState.PreserveOrExpanded) {\n                    collapsed = false;\n                }\n                else {\n                    collapsed = Boolean(treeElement.collapsed);\n                }\n                return {\n                    ...treeElement,\n                    children: this.preserveCollapseState(treeElement.children),\n                    collapsed\n                };\n            }\n            const collapsible = typeof treeElement.collapsible === 'boolean' ? treeElement.collapsible : node.collapsible;\n            let collapsed;\n            if (typeof treeElement.collapsed === 'undefined' || treeElement.collapsed === ObjectTreeElementCollapseState.PreserveOrCollapsed || treeElement.collapsed === ObjectTreeElementCollapseState.PreserveOrExpanded) {\n                collapsed = node.collapsed;\n            }\n            else if (treeElement.collapsed === ObjectTreeElementCollapseState.Collapsed) {\n                collapsed = true;\n            }\n            else if (treeElement.collapsed === ObjectTreeElementCollapseState.Expanded) {\n                collapsed = false;\n            }\n            else {\n                collapsed = Boolean(treeElement.collapsed);\n            }\n            return {\n                ...treeElement,\n                collapsible,\n                collapsed,\n                children: this.preserveCollapseState(treeElement.children)\n            };\n        });\n    }\n    rerender(element) {\n        const location = this.getElementLocation(element);\n        this.model.rerender(location);\n    }\n    getFirstElementChild(ref = null) {\n        const location = this.getElementLocation(ref);\n        return this.model.getFirstElementChild(location);\n    }\n    has(element) {\n        return this.nodes.has(element);\n    }\n    getListIndex(element) {\n        const location = this.getElementLocation(element);\n        return this.model.getListIndex(location);\n    }\n    getListRenderCount(element) {\n        const location = this.getElementLocation(element);\n        return this.model.getListRenderCount(location);\n    }\n    isCollapsible(element) {\n        const location = this.getElementLocation(element);\n        return this.model.isCollapsible(location);\n    }\n    setCollapsible(element, collapsible) {\n        const location = this.getElementLocation(element);\n        return this.model.setCollapsible(location, collapsible);\n    }\n    isCollapsed(element) {\n        const location = this.getElementLocation(element);\n        return this.model.isCollapsed(location);\n    }\n    setCollapsed(element, collapsed, recursive) {\n        const location = this.getElementLocation(element);\n        return this.model.setCollapsed(location, collapsed, recursive);\n    }\n    expandTo(element) {\n        const location = this.getElementLocation(element);\n        this.model.expandTo(location);\n    }\n    refilter() {\n        this.model.refilter();\n    }\n    getNode(element = null) {\n        if (element === null) {\n            return this.model.getNode(this.model.rootRef);\n        }\n        const node = this.nodes.get(element);\n        if (!node) {\n            throw new TreeError(this.user, `Tree element not found: ${element}`);\n        }\n        return node;\n    }\n    getNodeLocation(node) {\n        return node.element;\n    }\n    getParentNodeLocation(element) {\n        if (element === null) {\n            throw new TreeError(this.user, `Invalid getParentNodeLocation call`);\n        }\n        const node = this.nodes.get(element);\n        if (!node) {\n            throw new TreeError(this.user, `Tree element not found: ${element}`);\n        }\n        const location = this.model.getNodeLocation(node);\n        const parentLocation = this.model.getParentNodeLocation(location);\n        const parent = this.model.getNode(parentLocation);\n        return parent.element;\n    }\n    getElementLocation(element) {\n        if (element === null) {\n            return [];\n        }\n        const node = this.nodes.get(element);\n        if (!node) {\n            throw new TreeError(this.user, `Tree element not found: ${element}`);\n        }\n        return this.model.getNodeLocation(node);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var ObjectTreeElementCollapseState;\n(function (ObjectTreeElementCollapseState) {\n    ObjectTreeElementCollapseState[ObjectTreeElementCollapseState[\"Expanded\"] = 0] = \"Expanded\";\n    ObjectTreeElementCollapseState[ObjectTreeElementCollapseState[\"Collapsed\"] = 1] = \"Collapsed\";\n    /**\n     * If the element is already in the tree, preserve its current state. Else, expand it.\n     */\n    ObjectTreeElementCollapseState[ObjectTreeElementCollapseState[\"PreserveOrExpanded\"] = 2] = \"PreserveOrExpanded\";\n    /**\n     * If the element is already in the tree, preserve its current state. Else, collapse it.\n     */\n    ObjectTreeElementCollapseState[ObjectTreeElementCollapseState[\"PreserveOrCollapsed\"] = 3] = \"PreserveOrCollapsed\";\n})(ObjectTreeElementCollapseState || (ObjectTreeElementCollapseState = {}));\nexport var TreeMouseEventTarget;\n(function (TreeMouseEventTarget) {\n    TreeMouseEventTarget[TreeMouseEventTarget[\"Unknown\"] = 0] = \"Unknown\";\n    TreeMouseEventTarget[TreeMouseEventTarget[\"Twistie\"] = 1] = \"Twistie\";\n    TreeMouseEventTarget[TreeMouseEventTarget[\"Element\"] = 2] = \"Element\";\n    TreeMouseEventTarget[TreeMouseEventTarget[\"Filter\"] = 3] = \"Filter\";\n})(TreeMouseEventTarget || (TreeMouseEventTarget = {}));\nexport class TreeError extends Error {\n    constructor(user, message) {\n        super(`TreeError [${user}] ${message}`);\n    }\n}\nexport class WeakMapper {\n    constructor(fn) {\n        this.fn = fn;\n        this._map = new WeakMap();\n    }\n    map(key) {\n        let result = this._map.get(key);\n        if (!result) {\n            result = this.fn(key);\n            this._map.set(key, result);\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../dom.js';\nimport { StandardKeyboardEvent } from '../keyboardEvent.js';\nimport { StandardMouseEvent } from '../mouseEvent.js';\nimport { Gesture } from '../touch.js';\nimport { Disposable } from '../../common/lifecycle.js';\nexport class Widget extends Disposable {\n    onclick(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.CLICK, (e) => listener(new StandardMouseEvent(dom.getWindow(domNode), e))));\n    }\n    onmousedown(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.MOUSE_DOWN, (e) => listener(new StandardMouseEvent(dom.getWindow(domNode), e))));\n    }\n    onmouseover(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.MOUSE_OVER, (e) => listener(new StandardMouseEvent(dom.getWindow(domNode), e))));\n    }\n    onmouseleave(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.MOUSE_LEAVE, (e) => listener(new StandardMouseEvent(dom.getWindow(domNode), e))));\n    }\n    onkeydown(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.KEY_DOWN, (e) => listener(new StandardKeyboardEvent(e))));\n    }\n    onkeyup(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.KEY_UP, (e) => listener(new StandardKeyboardEvent(e))));\n    }\n    oninput(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.INPUT, listener));\n    }\n    onblur(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.BLUR, listener));\n    }\n    onfocus(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.FOCUS, listener));\n    }\n    ignoreGesture(domNode) {\n        return Gesture.ignoreTarget(domNode);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function ensureCodeWindow(targetWindow, fallbackWindowId) {\n    const codeWindow = targetWindow;\n    if (typeof codeWindow.vscodeWindowId !== 'number') {\n        Object.defineProperty(codeWindow, 'vscodeWindowId', {\n            get: () => fallbackWindowId\n        });\n    }\n}\n// eslint-disable-next-line no-restricted-globals\nexport const mainWindow = window;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from './event.js';\nimport { Disposable } from './lifecycle.js';\nimport * as nls from '../../nls.js';\nexport class Action extends Disposable {\n    constructor(id, label = '', cssClass = '', enabled = true, actionCallback) {\n        super();\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this._enabled = true;\n        this._id = id;\n        this._label = label;\n        this._cssClass = cssClass;\n        this._enabled = enabled;\n        this._actionCallback = actionCallback;\n    }\n    get id() {\n        return this._id;\n    }\n    get label() {\n        return this._label;\n    }\n    set label(value) {\n        this._setLabel(value);\n    }\n    _setLabel(value) {\n        if (this._label !== value) {\n            this._label = value;\n            this._onDidChange.fire({ label: value });\n        }\n    }\n    get tooltip() {\n        return this._tooltip || '';\n    }\n    set tooltip(value) {\n        this._setTooltip(value);\n    }\n    _setTooltip(value) {\n        if (this._tooltip !== value) {\n            this._tooltip = value;\n            this._onDidChange.fire({ tooltip: value });\n        }\n    }\n    get class() {\n        return this._cssClass;\n    }\n    set class(value) {\n        this._setClass(value);\n    }\n    _setClass(value) {\n        if (this._cssClass !== value) {\n            this._cssClass = value;\n            this._onDidChange.fire({ class: value });\n        }\n    }\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._setEnabled(value);\n    }\n    _setEnabled(value) {\n        if (this._enabled !== value) {\n            this._enabled = value;\n            this._onDidChange.fire({ enabled: value });\n        }\n    }\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        this._setChecked(value);\n    }\n    _setChecked(value) {\n        if (this._checked !== value) {\n            this._checked = value;\n            this._onDidChange.fire({ checked: value });\n        }\n    }\n    async run(event, data) {\n        if (this._actionCallback) {\n            await this._actionCallback(event);\n        }\n    }\n}\nexport class ActionRunner extends Disposable {\n    constructor() {\n        super(...arguments);\n        this._onWillRun = this._register(new Emitter());\n        this.onWillRun = this._onWillRun.event;\n        this._onDidRun = this._register(new Emitter());\n        this.onDidRun = this._onDidRun.event;\n    }\n    async run(action, context) {\n        if (!action.enabled) {\n            return;\n        }\n        this._onWillRun.fire({ action });\n        let error = undefined;\n        try {\n            await this.runAction(action, context);\n        }\n        catch (e) {\n            error = e;\n        }\n        this._onDidRun.fire({ action, error });\n    }\n    async runAction(action, context) {\n        await action.run(context);\n    }\n}\nexport class Separator {\n    constructor() {\n        this.id = Separator.ID;\n        this.label = '';\n        this.tooltip = '';\n        this.class = 'separator';\n        this.enabled = false;\n        this.checked = false;\n    }\n    /**\n     * Joins all non-empty lists of actions with separators.\n     */\n    static join(...actionLists) {\n        let out = [];\n        for (const list of actionLists) {\n            if (!list.length) {\n                // skip\n            }\n            else if (out.length) {\n                out = [...out, new Separator(), ...list];\n            }\n            else {\n                out = list;\n            }\n        }\n        return out;\n    }\n    async run() { }\n}\nSeparator.ID = 'vs.actions.separator';\nexport class SubmenuAction {\n    get actions() { return this._actions; }\n    constructor(id, label, actions, cssClass) {\n        this.tooltip = '';\n        this.enabled = true;\n        this.checked = undefined;\n        this.id = id;\n        this.label = label;\n        this.class = cssClass;\n        this._actions = actions;\n    }\n    async run() { }\n}\nexport class EmptySubmenuAction extends Action {\n    constructor() {\n        super(EmptySubmenuAction.ID, nls.localize('submenu.empty', '(empty)'), undefined, false);\n    }\n}\nEmptySubmenuAction.ID = 'vs.actions.empty';\nexport function toAction(props) {\n    var _a;\n    return {\n        id: props.id,\n        label: props.label,\n        class: props.class,\n        enabled: (_a = props.enabled) !== null && _a !== void 0 ? _a : true,\n        checked: props.checked,\n        run: async (...args) => props.run(...args),\n        tooltip: props.label\n    };\n}\n","/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail(array, n = 0) {\n    return array[array.length - (1 + n)];\n}\nexport function tail2(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function equals(one, other, itemEquals = (a, b) => a === b) {\n    if (one === other) {\n        return true;\n    }\n    if (!one || !other) {\n        return false;\n    }\n    if (one.length !== other.length) {\n        return false;\n    }\n    for (let i = 0, len = one.length; i < len; i++) {\n        if (!itemEquals(one[i], other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Remove the element at `index` by replacing it with the last element. This is faster than `splice`\n * but changes the order of the array\n */\nexport function removeFastWithoutKeepingOrder(array, index) {\n    const last = array.length - 1;\n    if (index < last) {\n        array[index] = array[last];\n    }\n    array.pop();\n}\n/**\n * Performs a binary search algorithm over a sorted array.\n *\n * @param array The array being searched.\n * @param key The value we search for.\n * @param comparator A function that takes two array elements and returns zero\n *   if they are equal, a negative number if the first element precedes the\n *   second one in the sorting order, or a positive number if the second element\n *   precedes the first one.\n * @return See {@link binarySearch2}\n */\nexport function binarySearch(array, key, comparator) {\n    return binarySearch2(array.length, i => comparator(array[i], key));\n}\n/**\n * Performs a binary search algorithm over a sorted collection. Useful for cases\n * when we need to perform a binary search over something that isn't actually an\n * array, and converting data to an array would defeat the use of binary search\n * in the first place.\n *\n * @param length The collection length.\n * @param compareToKey A function that takes an index of an element in the\n *   collection and returns zero if the value at this index is equal to the\n *   search key, a negative number if the value precedes the search key in the\n *   sorting order, or a positive number if the search key precedes the value.\n * @return A non-negative index of an element, if found. If not found, the\n *   result is -(n+1) (or ~n, using bitwise notation), where n is the index\n *   where the key should be inserted to maintain the sorting order.\n */\nexport function binarySearch2(length, compareToKey) {\n    let low = 0, high = length - 1;\n    while (low <= high) {\n        const mid = ((low + high) / 2) | 0;\n        const comp = compareToKey(mid);\n        if (comp < 0) {\n            low = mid + 1;\n        }\n        else if (comp > 0) {\n            high = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return -(low + 1);\n}\nexport function quickSelect(nth, data, compare) {\n    nth = nth | 0;\n    if (nth >= data.length) {\n        throw new TypeError('invalid index');\n    }\n    const pivotValue = data[Math.floor(data.length * Math.random())];\n    const lower = [];\n    const higher = [];\n    const pivots = [];\n    for (const value of data) {\n        const val = compare(value, pivotValue);\n        if (val < 0) {\n            lower.push(value);\n        }\n        else if (val > 0) {\n            higher.push(value);\n        }\n        else {\n            pivots.push(value);\n        }\n    }\n    if (nth < lower.length) {\n        return quickSelect(nth, lower, compare);\n    }\n    else if (nth < lower.length + pivots.length) {\n        return pivots[0];\n    }\n    else {\n        return quickSelect(nth - (lower.length + pivots.length), higher, compare);\n    }\n}\nexport function groupBy(data, compare) {\n    const result = [];\n    let currentGroup = undefined;\n    for (const element of data.slice(0).sort(compare)) {\n        if (!currentGroup || compare(currentGroup[0], element) !== 0) {\n            currentGroup = [element];\n            result.push(currentGroup);\n        }\n        else {\n            currentGroup.push(element);\n        }\n    }\n    return result;\n}\n/**\n * Splits the given items into a list of (non-empty) groups.\n * `shouldBeGrouped` is used to decide if two consecutive items should be in the same group.\n * The order of the items is preserved.\n */\nexport function* groupAdjacentBy(items, shouldBeGrouped) {\n    let currentGroup;\n    let last;\n    for (const item of items) {\n        if (last !== undefined && shouldBeGrouped(last, item)) {\n            currentGroup.push(item);\n        }\n        else {\n            if (currentGroup) {\n                yield currentGroup;\n            }\n            currentGroup = [item];\n        }\n        last = item;\n    }\n    if (currentGroup) {\n        yield currentGroup;\n    }\n}\nexport function forEachAdjacent(arr, f) {\n    for (let i = 0; i <= arr.length; i++) {\n        f(i === 0 ? undefined : arr[i - 1], i === arr.length ? undefined : arr[i]);\n    }\n}\nexport function forEachWithNeighbors(arr, f) {\n    for (let i = 0; i < arr.length; i++) {\n        f(i === 0 ? undefined : arr[i - 1], arr[i], i + 1 === arr.length ? undefined : arr[i + 1]);\n    }\n}\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce(array) {\n    return array.filter(e => !!e);\n}\n/**\n * Remove all falsy values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace(array) {\n    let to = 0;\n    for (let i = 0; i < array.length; i++) {\n        if (!!array[i]) {\n            array[to] = array[i];\n            to += 1;\n        }\n    }\n    array.length = to;\n}\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj) {\n    return !Array.isArray(obj) || obj.length === 0;\n}\nexport function isNonEmptyArray(obj) {\n    return Array.isArray(obj) && obj.length > 0;\n}\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equality by returning an alternate value for each.\n */\nexport function distinct(array, keyFn = value => value) {\n    const seen = new Set();\n    return array.filter(element => {\n        const key = keyFn(element);\n        if (seen.has(key)) {\n            return false;\n        }\n        seen.add(key);\n        return true;\n    });\n}\nexport function firstOrDefault(array, notFoundValue) {\n    return array.length > 0 ? array[0] : notFoundValue;\n}\nexport function range(arg, to) {\n    let from = typeof to === 'number' ? arg : 0;\n    if (typeof to === 'number') {\n        from = arg;\n    }\n    else {\n        from = 0;\n        to = arg;\n    }\n    const result = [];\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert(target, insertIndex, insertArr) {\n    const before = target.slice(0, insertIndex);\n    const after = target.slice(insertIndex);\n    return before.concat(insertArr, after);\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function pushMany(arr, items) {\n    for (const item of items) {\n        arr.push(item);\n    }\n}\nexport function asArray(x) {\n    return Array.isArray(x) ? x : [x];\n}\n/**\n * Insert the new items in the array.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start inserting elements.\n * @param newItems The items to be inserted\n */\nexport function insertInto(array, start, newItems) {\n    const startIdx = getActualStartIndex(array, start);\n    const originalLength = array.length;\n    const newItemsLength = newItems.length;\n    array.length = originalLength + newItemsLength;\n    // Move the items after the start index, start from the end so that we don't overwrite any value.\n    for (let i = originalLength - 1; i >= startIdx; i--) {\n        array[i + newItemsLength] = array[i];\n    }\n    for (let i = 0; i < newItemsLength; i++) {\n        array[i + startIdx] = newItems[i];\n    }\n}\n/**\n * Removes elements from an array and inserts new elements in their place, returning the deleted elements. Alternative to the native Array.splice method, it\n * can only support limited number of items due to the maximum call stack size limit.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start removing elements.\n * @param deleteCount The number of elements to remove.\n * @returns An array containing the elements that were deleted.\n */\nexport function splice(array, start, deleteCount, newItems) {\n    const index = getActualStartIndex(array, start);\n    let result = array.splice(index, deleteCount);\n    if (result === undefined) {\n        // see https://bugs.webkit.org/show_bug.cgi?id=261140\n        result = [];\n    }\n    insertInto(array, index, newItems);\n    return result;\n}\n/**\n * Determine the actual start index (same logic as the native splice() or slice())\n * If greater than the length of the array, start will be set to the length of the array. In this case, no element will be deleted but the method will behave as an adding function, adding as many element as item[n*] provided.\n * If negative, it will begin that many elements from the end of the array. (In this case, the origin -1, meaning -n is the index of the nth last element, and is therefore equivalent to the index of array.length - n.) If array.length + start is less than 0, it will begin from index 0.\n * @param array The target array.\n * @param start The operation index.\n */\nfunction getActualStartIndex(array, start) {\n    return start < 0 ? Math.max(start + array.length, 0) : Math.min(start, array.length);\n}\nexport var CompareResult;\n(function (CompareResult) {\n    function isLessThan(result) {\n        return result < 0;\n    }\n    CompareResult.isLessThan = isLessThan;\n    function isLessThanOrEqual(result) {\n        return result <= 0;\n    }\n    CompareResult.isLessThanOrEqual = isLessThanOrEqual;\n    function isGreaterThan(result) {\n        return result > 0;\n    }\n    CompareResult.isGreaterThan = isGreaterThan;\n    function isNeitherLessOrGreaterThan(result) {\n        return result === 0;\n    }\n    CompareResult.isNeitherLessOrGreaterThan = isNeitherLessOrGreaterThan;\n    CompareResult.greaterThan = 1;\n    CompareResult.lessThan = -1;\n    CompareResult.neitherLessOrGreaterThan = 0;\n})(CompareResult || (CompareResult = {}));\nexport function compareBy(selector, comparator) {\n    return (a, b) => comparator(selector(a), selector(b));\n}\nexport function tieBreakComparators(...comparators) {\n    return (item1, item2) => {\n        for (const comparator of comparators) {\n            const result = comparator(item1, item2);\n            if (!CompareResult.isNeitherLessOrGreaterThan(result)) {\n                return result;\n            }\n        }\n        return CompareResult.neitherLessOrGreaterThan;\n    };\n}\n/**\n * The natural order on numbers.\n*/\nexport const numberComparator = (a, b) => a - b;\nexport const booleanComparator = (a, b) => numberComparator(a ? 1 : 0, b ? 1 : 0);\nexport function reverseOrder(comparator) {\n    return (a, b) => -comparator(a, b);\n}\nexport class ArrayQueue {\n    /**\n     * Constructs a queue that is backed by the given array. Runtime is O(1).\n    */\n    constructor(items) {\n        this.items = items;\n        this.firstIdx = 0;\n        this.lastIdx = this.items.length - 1;\n    }\n    get length() {\n        return this.lastIdx - this.firstIdx + 1;\n    }\n    /**\n     * Consumes elements from the beginning of the queue as long as the predicate returns true.\n     * If no elements were consumed, `null` is returned. Has a runtime of O(result.length).\n    */\n    takeWhile(predicate) {\n        // P(k) := k <= this.lastIdx && predicate(this.items[k])\n        // Find s := min { k | k >= this.firstIdx && !P(k) } and return this.data[this.firstIdx...s)\n        let startIdx = this.firstIdx;\n        while (startIdx < this.items.length && predicate(this.items[startIdx])) {\n            startIdx++;\n        }\n        const result = startIdx === this.firstIdx ? null : this.items.slice(this.firstIdx, startIdx);\n        this.firstIdx = startIdx;\n        return result;\n    }\n    /**\n     * Consumes elements from the end of the queue as long as the predicate returns true.\n     * If no elements were consumed, `null` is returned.\n     * The result has the same order as the underlying array!\n    */\n    takeFromEndWhile(predicate) {\n        // P(k) := this.firstIdx >= k && predicate(this.items[k])\n        // Find s := max { k | k <= this.lastIdx && !P(k) } and return this.data(s...this.lastIdx]\n        let endIdx = this.lastIdx;\n        while (endIdx >= 0 && predicate(this.items[endIdx])) {\n            endIdx--;\n        }\n        const result = endIdx === this.lastIdx ? null : this.items.slice(endIdx + 1, this.lastIdx + 1);\n        this.lastIdx = endIdx;\n        return result;\n    }\n    peek() {\n        if (this.length === 0) {\n            return undefined;\n        }\n        return this.items[this.firstIdx];\n    }\n    dequeue() {\n        const result = this.items[this.firstIdx];\n        this.firstIdx++;\n        return result;\n    }\n    takeCount(count) {\n        const result = this.items.slice(this.firstIdx, this.firstIdx + count);\n        this.firstIdx += count;\n        return result;\n    }\n}\n/**\n * This class is faster than an iterator and array for lazy computed data.\n*/\nexport class CallbackIterable {\n    constructor(\n    /**\n     * Calls the callback for every item.\n     * Stops when the callback returns false.\n    */\n    iterate) {\n        this.iterate = iterate;\n    }\n    toArray() {\n        const result = [];\n        this.iterate(item => { result.push(item); return true; });\n        return result;\n    }\n    filter(predicate) {\n        return new CallbackIterable(cb => this.iterate(item => predicate(item) ? cb(item) : true));\n    }\n    map(mapFn) {\n        return new CallbackIterable(cb => this.iterate(item => cb(mapFn(item))));\n    }\n    findLast(predicate) {\n        let result;\n        this.iterate(item => {\n            if (predicate(item)) {\n                result = item;\n            }\n            return true;\n        });\n        return result;\n    }\n    findLastMaxBy(comparator) {\n        let result;\n        let first = true;\n        this.iterate(item => {\n            if (first || CompareResult.isGreaterThan(comparator(item, result))) {\n                first = false;\n                result = item;\n            }\n            return true;\n        });\n        return result;\n    }\n}\nCallbackIterable.empty = new CallbackIterable(_callback => { });\n/**\n * Represents a re-arrangement of items in an array.\n */\nexport class Permutation {\n    constructor(_indexMap) {\n        this._indexMap = _indexMap;\n    }\n    /**\n     * Returns a permutation that sorts the given array according to the given compare function.\n     */\n    static createSortPermutation(arr, compareFn) {\n        const sortIndices = Array.from(arr.keys()).sort((index1, index2) => compareFn(arr[index1], arr[index2]));\n        return new Permutation(sortIndices);\n    }\n    /**\n     * Returns a new array with the elements of the given array re-arranged according to this permutation.\n     */\n    apply(arr) {\n        return arr.map((_, index) => arr[this._indexMap[index]]);\n    }\n    /**\n     * Returns a new permutation that undoes the re-arrangement of this permutation.\n    */\n    inverse() {\n        const inverseIndexMap = this._indexMap.slice();\n        for (let i = 0; i < this._indexMap.length; i++) {\n            inverseIndexMap[this._indexMap[i]] = i;\n        }\n        return new Permutation(inverseIndexMap);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function findLast(array, predicate) {\n    const idx = findLastIdx(array, predicate);\n    if (idx === -1) {\n        return undefined;\n    }\n    return array[idx];\n}\nexport function findLastIdx(array, predicate, fromIndex = array.length - 1) {\n    for (let i = fromIndex; i >= 0; i--) {\n        const element = array[i];\n        if (predicate(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Finds the last item where predicate is true using binary search.\n * `predicate` must be monotonous, i.e. `arr.map(predicate)` must be like `[true, ..., true, false, ..., false]`!\n *\n * @returns `undefined` if no item matches, otherwise the last item that matches the predicate.\n */\nexport function findLastMonotonous(array, predicate) {\n    const idx = findLastIdxMonotonous(array, predicate);\n    return idx === -1 ? undefined : array[idx];\n}\n/**\n * Finds the last item where predicate is true using binary search.\n * `predicate` must be monotonous, i.e. `arr.map(predicate)` must be like `[true, ..., true, false, ..., false]`!\n *\n * @returns `startIdx - 1` if predicate is false for all items, otherwise the index of the last item that matches the predicate.\n */\nexport function findLastIdxMonotonous(array, predicate, startIdx = 0, endIdxEx = array.length) {\n    let i = startIdx;\n    let j = endIdxEx;\n    while (i < j) {\n        const k = Math.floor((i + j) / 2);\n        if (predicate(array[k])) {\n            i = k + 1;\n        }\n        else {\n            j = k;\n        }\n    }\n    return i - 1;\n}\n/**\n * Finds the first item where predicate is true using binary search.\n * `predicate` must be monotonous, i.e. `arr.map(predicate)` must be like `[false, ..., false, true, ..., true]`!\n *\n * @returns `undefined` if no item matches, otherwise the first item that matches the predicate.\n */\nexport function findFirstMonotonous(array, predicate) {\n    const idx = findFirstIdxMonotonousOrArrLen(array, predicate);\n    return idx === array.length ? undefined : array[idx];\n}\n/**\n * Finds the first item where predicate is true using binary search.\n * `predicate` must be monotonous, i.e. `arr.map(predicate)` must be like `[false, ..., false, true, ..., true]`!\n *\n * @returns `endIdxEx` if predicate is false for all items, otherwise the index of the first item that matches the predicate.\n */\nexport function findFirstIdxMonotonousOrArrLen(array, predicate, startIdx = 0, endIdxEx = array.length) {\n    let i = startIdx;\n    let j = endIdxEx;\n    while (i < j) {\n        const k = Math.floor((i + j) / 2);\n        if (predicate(array[k])) {\n            j = k;\n        }\n        else {\n            i = k + 1;\n        }\n    }\n    return i;\n}\n/**\n * Use this when\n * * You have a sorted array\n * * You query this array with a monotonous predicate to find the last item that has a certain property.\n * * You query this array multiple times with monotonous predicates that get weaker and weaker.\n */\nexport class MonotonousArray {\n    constructor(_array) {\n        this._array = _array;\n        this._findLastMonotonousLastIdx = 0;\n    }\n    /**\n     * The predicate must be monotonous, i.e. `arr.map(predicate)` must be like `[true, ..., true, false, ..., false]`!\n     * For subsequent calls, current predicate must be weaker than (or equal to) the previous predicate, i.e. more entries must be `true`.\n     */\n    findLastMonotonous(predicate) {\n        if (MonotonousArray.assertInvariants) {\n            if (this._prevFindLastPredicate) {\n                for (const item of this._array) {\n                    if (this._prevFindLastPredicate(item) && !predicate(item)) {\n                        throw new Error('MonotonousArray: current predicate must be weaker than (or equal to) the previous predicate.');\n                    }\n                }\n            }\n            this._prevFindLastPredicate = predicate;\n        }\n        const idx = findLastIdxMonotonous(this._array, predicate, this._findLastMonotonousLastIdx);\n        this._findLastMonotonousLastIdx = idx + 1;\n        return idx === -1 ? undefined : this._array[idx];\n    }\n}\nMonotonousArray.assertInvariants = false;\n/**\n * Returns the first item that is equal to or greater than every other item.\n*/\nexport function findFirstMax(array, comparator) {\n    if (array.length === 0) {\n        return undefined;\n    }\n    let max = array[0];\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, max) > 0) {\n            max = item;\n        }\n    }\n    return max;\n}\n/**\n * Returns the last item that is equal to or greater than every other item.\n*/\nexport function findLastMax(array, comparator) {\n    if (array.length === 0) {\n        return undefined;\n    }\n    let max = array[0];\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, max) >= 0) {\n            max = item;\n        }\n    }\n    return max;\n}\n/**\n * Returns the first item that is equal to or less than every other item.\n*/\nexport function findFirstMin(array, comparator) {\n    return findFirstMax(array, (a, b) => -comparator(a, b));\n}\nexport function findMaxIdx(array, comparator) {\n    if (array.length === 0) {\n        return -1;\n    }\n    let maxIdx = 0;\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, array[maxIdx]) > 0) {\n            maxIdx = i;\n        }\n    }\n    return maxIdx;\n}\n/**\n * Returns the first mapped value of the array which is not undefined.\n */\nexport function mapFindFirst(items, mapFn) {\n    for (const value of items) {\n        const mapped = mapFn(value);\n        if (mapped !== undefined) {\n            return mapped;\n        }\n    }\n    return undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BugIndicatingError, onUnexpectedError } from './errors.js';\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n *\n * @deprecated Use `assert(...)` instead.\n * This method is usually used like this:\n * ```ts\n * import * as assert from 'vs/base/common/assert';\n * assert.ok(...);\n * ```\n *\n * However, `assert` in that example is a user chosen name.\n * There is no tooling for generating such an import statement.\n * Thus, the `assert(...)` function should be used instead.\n */\nexport function ok(value, message) {\n    if (!value) {\n        throw new Error(message ? `Assertion failed (${message})` : 'Assertion Failed');\n    }\n}\nexport function assertNever(value, message = 'Unreachable') {\n    throw new Error(message);\n}\n/**\n * Like assert, but doesn't throw.\n */\nexport function softAssert(condition) {\n    if (!condition) {\n        onUnexpectedError(new BugIndicatingError('Soft Assertion Failed'));\n    }\n}\n/**\n * condition must be side-effect free!\n */\nexport function assertFn(condition) {\n    if (!condition()) {\n        // eslint-disable-next-line no-debugger\n        debugger;\n        // Reevaluate `condition` again to make debugging easier\n        condition();\n        onUnexpectedError(new BugIndicatingError('Assertion Failed'));\n    }\n}\nexport function checkAdjacentItems(items, predicate) {\n    let i = 0;\n    while (i < items.length - 1) {\n        const a = items[i];\n        const b = items[i + 1];\n        if (!predicate(a, b)) {\n            return false;\n        }\n        i++;\n    }\n    return true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationTokenSource } from './cancellation.js';\nimport { CancellationError } from './errors.js';\nimport { Emitter, Event } from './event.js';\nimport { toDisposable } from './lifecycle.js';\nimport { setTimeout0 } from './platform.js';\nimport { MicrotaskDelay } from './symbols.js';\nexport function isThenable(obj) {\n    return !!obj && typeof obj.then === 'function';\n}\nexport function createCancelablePromise(callback) {\n    const source = new CancellationTokenSource();\n    const thenable = callback(source.token);\n    const promise = new Promise((resolve, reject) => {\n        const subscription = source.token.onCancellationRequested(() => {\n            subscription.dispose();\n            reject(new CancellationError());\n        });\n        Promise.resolve(thenable).then(value => {\n            subscription.dispose();\n            source.dispose();\n            resolve(value);\n        }, err => {\n            subscription.dispose();\n            source.dispose();\n            reject(err);\n        });\n    });\n    return new class {\n        cancel() {\n            source.cancel();\n            source.dispose();\n        }\n        then(resolve, reject) {\n            return promise.then(resolve, reject);\n        }\n        catch(reject) {\n            return this.then(undefined, reject);\n        }\n        finally(onfinally) {\n            return promise.finally(onfinally);\n        }\n    };\n}\nexport function raceCancellation(promise, token, defaultValue) {\n    return new Promise((resolve, reject) => {\n        const ref = token.onCancellationRequested(() => {\n            ref.dispose();\n            resolve(defaultValue);\n        });\n        promise.then(resolve, reject).finally(() => ref.dispose());\n    });\n}\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n    constructor() {\n        this.isDisposed = false;\n        this.activePromise = null;\n        this.queuedPromise = null;\n        this.queuedPromiseFactory = null;\n    }\n    queue(promiseFactory) {\n        if (this.isDisposed) {\n            return Promise.reject(new Error('Throttler is disposed'));\n        }\n        if (this.activePromise) {\n            this.queuedPromiseFactory = promiseFactory;\n            if (!this.queuedPromise) {\n                const onComplete = () => {\n                    this.queuedPromise = null;\n                    if (this.isDisposed) {\n                        return;\n                    }\n                    const result = this.queue(this.queuedPromiseFactory);\n                    this.queuedPromiseFactory = null;\n                    return result;\n                };\n                this.queuedPromise = new Promise(resolve => {\n                    this.activePromise.then(onComplete, onComplete).then(resolve);\n                });\n            }\n            return new Promise((resolve, reject) => {\n                this.queuedPromise.then(resolve, reject);\n            });\n        }\n        this.activePromise = promiseFactory();\n        return new Promise((resolve, reject) => {\n            this.activePromise.then((result) => {\n                this.activePromise = null;\n                resolve(result);\n            }, (err) => {\n                this.activePromise = null;\n                reject(err);\n            });\n        });\n    }\n    dispose() {\n        this.isDisposed = true;\n    }\n}\nconst timeoutDeferred = (timeout, fn) => {\n    let scheduled = true;\n    const handle = setTimeout(() => {\n        scheduled = false;\n        fn();\n    }, timeout);\n    return {\n        isTriggered: () => scheduled,\n        dispose: () => {\n            clearTimeout(handle);\n            scheduled = false;\n        },\n    };\n};\nconst microtaskDeferred = (fn) => {\n    let scheduled = true;\n    queueMicrotask(() => {\n        if (scheduled) {\n            scheduled = false;\n            fn();\n        }\n    });\n    return {\n        isTriggered: () => scheduled,\n        dispose: () => { scheduled = false; },\n    };\n};\n/**\n * A helper to delay (debounce) execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer {\n    constructor(defaultDelay) {\n        this.defaultDelay = defaultDelay;\n        this.deferred = null;\n        this.completionPromise = null;\n        this.doResolve = null;\n        this.doReject = null;\n        this.task = null;\n    }\n    trigger(task, delay = this.defaultDelay) {\n        this.task = task;\n        this.cancelTimeout();\n        if (!this.completionPromise) {\n            this.completionPromise = new Promise((resolve, reject) => {\n                this.doResolve = resolve;\n                this.doReject = reject;\n            }).then(() => {\n                this.completionPromise = null;\n                this.doResolve = null;\n                if (this.task) {\n                    const task = this.task;\n                    this.task = null;\n                    return task();\n                }\n                return undefined;\n            });\n        }\n        const fn = () => {\n            var _a;\n            this.deferred = null;\n            (_a = this.doResolve) === null || _a === void 0 ? void 0 : _a.call(this, null);\n        };\n        this.deferred = delay === MicrotaskDelay ? microtaskDeferred(fn) : timeoutDeferred(delay, fn);\n        return this.completionPromise;\n    }\n    isTriggered() {\n        var _a;\n        return !!((_a = this.deferred) === null || _a === void 0 ? void 0 : _a.isTriggered());\n    }\n    cancel() {\n        var _a;\n        this.cancelTimeout();\n        if (this.completionPromise) {\n            (_a = this.doReject) === null || _a === void 0 ? void 0 : _a.call(this, new CancellationError());\n            this.completionPromise = null;\n        }\n    }\n    cancelTimeout() {\n        var _a;\n        (_a = this.deferred) === null || _a === void 0 ? void 0 : _a.dispose();\n        this.deferred = null;\n    }\n    dispose() {\n        this.cancel();\n    }\n}\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer {\n    constructor(defaultDelay) {\n        this.delayer = new Delayer(defaultDelay);\n        this.throttler = new Throttler();\n    }\n    trigger(promiseFactory, delay) {\n        return this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay);\n    }\n    cancel() {\n        this.delayer.cancel();\n    }\n    dispose() {\n        this.delayer.dispose();\n        this.throttler.dispose();\n    }\n}\nexport function timeout(millis, token) {\n    if (!token) {\n        return createCancelablePromise(token => timeout(millis, token));\n    }\n    return new Promise((resolve, reject) => {\n        const handle = setTimeout(() => {\n            disposable.dispose();\n            resolve();\n        }, millis);\n        const disposable = token.onCancellationRequested(() => {\n            clearTimeout(handle);\n            disposable.dispose();\n            reject(new CancellationError());\n        });\n    });\n}\n/**\n * Creates a timeout that can be disposed using its returned value.\n * @param handler The timeout handler.\n * @param timeout An optional timeout in milliseconds.\n * @param store An optional {@link DisposableStore} that will have the timeout disposable managed automatically.\n *\n * @example\n * const store = new DisposableStore;\n * // Call the timeout after 1000ms at which point it will be automatically\n * // evicted from the store.\n * const timeoutDisposable = disposableTimeout(() => {}, 1000, store);\n *\n * if (foo) {\n *   // Cancel the timeout and evict it from store.\n *   timeoutDisposable.dispose();\n * }\n */\nexport function disposableTimeout(handler, timeout = 0, store) {\n    const timer = setTimeout(() => {\n        handler();\n        if (store) {\n            disposable.dispose();\n        }\n    }, timeout);\n    const disposable = toDisposable(() => {\n        clearTimeout(timer);\n        store === null || store === void 0 ? void 0 : store.deleteAndLeak(disposable);\n    });\n    store === null || store === void 0 ? void 0 : store.add(disposable);\n    return disposable;\n}\nexport function first(promiseFactories, shouldStop = t => !!t, defaultValue = null) {\n    let index = 0;\n    const len = promiseFactories.length;\n    const loop = () => {\n        if (index >= len) {\n            return Promise.resolve(defaultValue);\n        }\n        const factory = promiseFactories[index++];\n        const promise = Promise.resolve(factory());\n        return promise.then(result => {\n            if (shouldStop(result)) {\n                return Promise.resolve(result);\n            }\n            return loop();\n        });\n    };\n    return loop();\n}\nexport class TimeoutTimer {\n    constructor(runner, timeout) {\n        this._token = -1;\n        if (typeof runner === 'function' && typeof timeout === 'number') {\n            this.setIfNotSet(runner, timeout);\n        }\n    }\n    dispose() {\n        this.cancel();\n    }\n    cancel() {\n        if (this._token !== -1) {\n            clearTimeout(this._token);\n            this._token = -1;\n        }\n    }\n    cancelAndSet(runner, timeout) {\n        this.cancel();\n        this._token = setTimeout(() => {\n            this._token = -1;\n            runner();\n        }, timeout);\n    }\n    setIfNotSet(runner, timeout) {\n        if (this._token !== -1) {\n            // timer is already set\n            return;\n        }\n        this._token = setTimeout(() => {\n            this._token = -1;\n            runner();\n        }, timeout);\n    }\n}\nexport class IntervalTimer {\n    constructor() {\n        this.disposable = undefined;\n    }\n    cancel() {\n        var _a;\n        (_a = this.disposable) === null || _a === void 0 ? void 0 : _a.dispose();\n        this.disposable = undefined;\n    }\n    cancelAndSet(runner, interval, context = globalThis) {\n        this.cancel();\n        const handle = context.setInterval(() => {\n            runner();\n        }, interval);\n        this.disposable = toDisposable(() => {\n            context.clearInterval(handle);\n            this.disposable = undefined;\n        });\n    }\n    dispose() {\n        this.cancel();\n    }\n}\nexport class RunOnceScheduler {\n    constructor(runner, delay) {\n        this.timeoutToken = -1;\n        this.runner = runner;\n        this.timeout = delay;\n        this.timeoutHandler = this.onTimeout.bind(this);\n    }\n    /**\n     * Dispose RunOnceScheduler\n     */\n    dispose() {\n        this.cancel();\n        this.runner = null;\n    }\n    /**\n     * Cancel current scheduled runner (if any).\n     */\n    cancel() {\n        if (this.isScheduled()) {\n            clearTimeout(this.timeoutToken);\n            this.timeoutToken = -1;\n        }\n    }\n    /**\n     * Cancel previous runner (if any) & schedule a new runner.\n     */\n    schedule(delay = this.timeout) {\n        this.cancel();\n        this.timeoutToken = setTimeout(this.timeoutHandler, delay);\n    }\n    get delay() {\n        return this.timeout;\n    }\n    set delay(value) {\n        this.timeout = value;\n    }\n    /**\n     * Returns true if scheduled.\n     */\n    isScheduled() {\n        return this.timeoutToken !== -1;\n    }\n    onTimeout() {\n        this.timeoutToken = -1;\n        if (this.runner) {\n            this.doRun();\n        }\n    }\n    doRun() {\n        var _a;\n        (_a = this.runner) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n/**\n * Execute the callback the next time the browser is idle, returning an\n * {@link IDisposable} that will cancel the callback when disposed. This wraps\n * [requestIdleCallback] so it will fallback to [setTimeout] if the environment\n * doesn't support it.\n *\n * @param callback The callback to run when idle, this includes an\n * [IdleDeadline] that provides the time alloted for the idle callback by the\n * browser. Not respecting this deadline will result in a degraded user\n * experience.\n * @param timeout A timeout at which point to queue no longer wait for an idle\n * callback but queue it on the regular event loop (like setTimeout). Typically\n * this should not be used.\n *\n * [IdleDeadline]: https://developer.mozilla.org/en-US/docs/Web/API/IdleDeadline\n * [requestIdleCallback]: https://developer.mozilla.org/en-US/docs/Web/API/Window/requestIdleCallback\n * [setTimeout]: https://developer.mozilla.org/en-US/docs/Web/API/Window/setTimeout\n *\n * **Note** that there is `dom.ts#runWhenWindowIdle` which is better suited when running inside a browser\n * context\n */\nexport let runWhenGlobalIdle;\nexport let _runWhenIdle;\n(function () {\n    if (typeof globalThis.requestIdleCallback !== 'function' || typeof globalThis.cancelIdleCallback !== 'function') {\n        _runWhenIdle = (_targetWindow, runner) => {\n            setTimeout0(() => {\n                if (disposed) {\n                    return;\n                }\n                const end = Date.now() + 15; // one frame at 64fps\n                const deadline = {\n                    didTimeout: true,\n                    timeRemaining() {\n                        return Math.max(0, end - Date.now());\n                    }\n                };\n                runner(Object.freeze(deadline));\n            });\n            let disposed = false;\n            return {\n                dispose() {\n                    if (disposed) {\n                        return;\n                    }\n                    disposed = true;\n                }\n            };\n        };\n    }\n    else {\n        _runWhenIdle = (targetWindow, runner, timeout) => {\n            const handle = targetWindow.requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n            let disposed = false;\n            return {\n                dispose() {\n                    if (disposed) {\n                        return;\n                    }\n                    disposed = true;\n                    targetWindow.cancelIdleCallback(handle);\n                }\n            };\n        };\n    }\n    runWhenGlobalIdle = (runner) => _runWhenIdle(globalThis, runner);\n})();\nexport class AbstractIdleValue {\n    constructor(targetWindow, executor) {\n        this._didRun = false;\n        this._executor = () => {\n            try {\n                this._value = executor();\n            }\n            catch (err) {\n                this._error = err;\n            }\n            finally {\n                this._didRun = true;\n            }\n        };\n        this._handle = _runWhenIdle(targetWindow, () => this._executor());\n    }\n    dispose() {\n        this._handle.dispose();\n    }\n    get value() {\n        if (!this._didRun) {\n            this._handle.dispose();\n            this._executor();\n        }\n        if (this._error) {\n            throw this._error;\n        }\n        return this._value;\n    }\n    get isInitialized() {\n        return this._didRun;\n    }\n}\n/**\n * An `IdleValue` that always uses the current window (which might be throttled or inactive)\n *\n * **Note** that there is `dom.ts#WindowIdleValue` which is better suited when running inside a browser\n * context\n */\nexport class GlobalIdleValue extends AbstractIdleValue {\n    constructor(executor) {\n        super(globalThis, executor);\n    }\n}\n/**\n * Creates a promise whose resolution or rejection can be controlled imperatively.\n */\nexport class DeferredPromise {\n    get isRejected() {\n        var _a;\n        return ((_a = this.outcome) === null || _a === void 0 ? void 0 : _a.outcome) === 1 /* DeferredOutcome.Rejected */;\n    }\n    get isSettled() {\n        return !!this.outcome;\n    }\n    constructor() {\n        this.p = new Promise((c, e) => {\n            this.completeCallback = c;\n            this.errorCallback = e;\n        });\n    }\n    complete(value) {\n        return new Promise(resolve => {\n            this.completeCallback(value);\n            this.outcome = { outcome: 0 /* DeferredOutcome.Resolved */, value };\n            resolve();\n        });\n    }\n    error(err) {\n        return new Promise(resolve => {\n            this.errorCallback(err);\n            this.outcome = { outcome: 1 /* DeferredOutcome.Rejected */, value: err };\n            resolve();\n        });\n    }\n    cancel() {\n        return this.error(new CancellationError());\n    }\n}\n//#endregion\n//#region Promises\nexport var Promises;\n(function (Promises) {\n    /**\n     * A drop-in replacement for `Promise.all` with the only difference\n     * that the method awaits every promise to either fulfill or reject.\n     *\n     * Similar to `Promise.all`, only the first error will be returned\n     * if any.\n     */\n    async function settled(promises) {\n        let firstError = undefined;\n        const result = await Promise.all(promises.map(promise => promise.then(value => value, error => {\n            if (!firstError) {\n                firstError = error;\n            }\n            return undefined; // do not rethrow so that other promises can settle\n        })));\n        if (typeof firstError !== 'undefined') {\n            throw firstError;\n        }\n        return result; // cast is needed and protected by the `throw` above\n    }\n    Promises.settled = settled;\n    /**\n     * A helper to create a new `Promise<T>` with a body that is a promise\n     * itself. By default, an error that raises from the async body will\n     * end up as a unhandled rejection, so this utility properly awaits the\n     * body and rejects the promise as a normal promise does without async\n     * body.\n     *\n     * This method should only be used in rare cases where otherwise `async`\n     * cannot be used (e.g. when callbacks are involved that require this).\n     */\n    function withAsyncBody(bodyFn) {\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(async (resolve, reject) => {\n            try {\n                await bodyFn(resolve, reject);\n            }\n            catch (error) {\n                reject(error);\n            }\n        });\n    }\n    Promises.withAsyncBody = withAsyncBody;\n})(Promises || (Promises = {}));\n/**\n * A rich implementation for an `AsyncIterable<T>`.\n */\nexport class AsyncIterableObject {\n    static fromArray(items) {\n        return new AsyncIterableObject((writer) => {\n            writer.emitMany(items);\n        });\n    }\n    static fromPromise(promise) {\n        return new AsyncIterableObject(async (emitter) => {\n            emitter.emitMany(await promise);\n        });\n    }\n    static fromPromises(promises) {\n        return new AsyncIterableObject(async (emitter) => {\n            await Promise.all(promises.map(async (p) => emitter.emitOne(await p)));\n        });\n    }\n    static merge(iterables) {\n        return new AsyncIterableObject(async (emitter) => {\n            await Promise.all(iterables.map(async (iterable) => {\n                for await (const item of iterable) {\n                    emitter.emitOne(item);\n                }\n            }));\n        });\n    }\n    constructor(executor, onReturn) {\n        this._state = 0 /* AsyncIterableSourceState.Initial */;\n        this._results = [];\n        this._error = null;\n        this._onReturn = onReturn;\n        this._onStateChanged = new Emitter();\n        queueMicrotask(async () => {\n            const writer = {\n                emitOne: (item) => this.emitOne(item),\n                emitMany: (items) => this.emitMany(items),\n                reject: (error) => this.reject(error)\n            };\n            try {\n                await Promise.resolve(executor(writer));\n                this.resolve();\n            }\n            catch (err) {\n                this.reject(err);\n            }\n            finally {\n                writer.emitOne = undefined;\n                writer.emitMany = undefined;\n                writer.reject = undefined;\n            }\n        });\n    }\n    [Symbol.asyncIterator]() {\n        let i = 0;\n        return {\n            next: async () => {\n                do {\n                    if (this._state === 2 /* AsyncIterableSourceState.DoneError */) {\n                        throw this._error;\n                    }\n                    if (i < this._results.length) {\n                        return { done: false, value: this._results[i++] };\n                    }\n                    if (this._state === 1 /* AsyncIterableSourceState.DoneOK */) {\n                        return { done: true, value: undefined };\n                    }\n                    await Event.toPromise(this._onStateChanged.event);\n                } while (true);\n            },\n            return: async () => {\n                var _a;\n                (_a = this._onReturn) === null || _a === void 0 ? void 0 : _a.call(this);\n                return { done: true, value: undefined };\n            }\n        };\n    }\n    static map(iterable, mapFn) {\n        return new AsyncIterableObject(async (emitter) => {\n            for await (const item of iterable) {\n                emitter.emitOne(mapFn(item));\n            }\n        });\n    }\n    map(mapFn) {\n        return AsyncIterableObject.map(this, mapFn);\n    }\n    static filter(iterable, filterFn) {\n        return new AsyncIterableObject(async (emitter) => {\n            for await (const item of iterable) {\n                if (filterFn(item)) {\n                    emitter.emitOne(item);\n                }\n            }\n        });\n    }\n    filter(filterFn) {\n        return AsyncIterableObject.filter(this, filterFn);\n    }\n    static coalesce(iterable) {\n        return AsyncIterableObject.filter(iterable, item => !!item);\n    }\n    coalesce() {\n        return AsyncIterableObject.coalesce(this);\n    }\n    static async toPromise(iterable) {\n        const result = [];\n        for await (const item of iterable) {\n            result.push(item);\n        }\n        return result;\n    }\n    toPromise() {\n        return AsyncIterableObject.toPromise(this);\n    }\n    /**\n     * The value will be appended at the end.\n     *\n     * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n     */\n    emitOne(value) {\n        if (this._state !== 0 /* AsyncIterableSourceState.Initial */) {\n            return;\n        }\n        // it is important to add new values at the end,\n        // as we may have iterators already running on the array\n        this._results.push(value);\n        this._onStateChanged.fire();\n    }\n    /**\n     * The values will be appended at the end.\n     *\n     * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n     */\n    emitMany(values) {\n        if (this._state !== 0 /* AsyncIterableSourceState.Initial */) {\n            return;\n        }\n        // it is important to add new values at the end,\n        // as we may have iterators already running on the array\n        this._results = this._results.concat(values);\n        this._onStateChanged.fire();\n    }\n    /**\n     * Calling `resolve()` will mark the result array as complete.\n     *\n     * **NOTE** `resolve()` must be called, otherwise all consumers of this iterable will hang indefinitely, similar to a non-resolved promise.\n     * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n     */\n    resolve() {\n        if (this._state !== 0 /* AsyncIterableSourceState.Initial */) {\n            return;\n        }\n        this._state = 1 /* AsyncIterableSourceState.DoneOK */;\n        this._onStateChanged.fire();\n    }\n    /**\n     * Writing an error will permanently invalidate this iterable.\n     * The current users will receive an error thrown, as will all future users.\n     *\n     * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n     */\n    reject(error) {\n        if (this._state !== 0 /* AsyncIterableSourceState.Initial */) {\n            return;\n        }\n        this._state = 2 /* AsyncIterableSourceState.DoneError */;\n        this._error = error;\n        this._onStateChanged.fire();\n    }\n}\nAsyncIterableObject.EMPTY = AsyncIterableObject.fromArray([]);\nexport class CancelableAsyncIterableObject extends AsyncIterableObject {\n    constructor(_source, executor) {\n        super(executor);\n        this._source = _source;\n    }\n    cancel() {\n        this._source.cancel();\n    }\n}\nexport function createCancelableAsyncIterable(callback) {\n    const source = new CancellationTokenSource();\n    const innerIterable = callback(source.token);\n    return new CancelableAsyncIterableObject(source, async (emitter) => {\n        const subscription = source.token.onCancellationRequested(() => {\n            subscription.dispose();\n            source.dispose();\n            emitter.reject(new CancellationError());\n        });\n        try {\n            for await (const item of innerIterable) {\n                if (source.token.isCancellationRequested) {\n                    // canceled in the meantime\n                    return;\n                }\n                emitter.emitOne(item);\n            }\n            subscription.dispose();\n            source.dispose();\n        }\n        catch (err) {\n            subscription.dispose();\n            source.dispose();\n            emitter.reject(err);\n        }\n    });\n}\n//#endregion\n"],"names":["MOUSE_CURSOR_TEXT_CSS_CLASS_NAME","CSS_DONE","CSS_ACTIVE","CSS_INFINITE","CSS_INFINITE_LONG_RUNNING","CSS_DISCRETE","ProgressBar","Disposable","constructor","container","options","super","this","progressSignal","_register","MutableDisposable","workedVal","showDelayedScheduler","RunOnceScheduler","show","element","longRunningScheduler","infiniteLongRunning","LONG_RUNNING_INFINITE_THRESHOLD","create","document","createElement","classList","add","setAttribute","appendChild","bit","style","backgroundColor","progressBarBackground","off","width","opacity","remove","totalWork","undefined","cancel","clear","stop","doDone","delayed","contains","setTimeout","infinite","schedule","getContainer","ResizableHTMLElement","currentSize","_onDidWillResize","Emitter","onDidWillResize","event","_onDidResize","onDidResize","_sashListener","DisposableStore","_size","Dimension","_minSize","_maxSize","Number","MAX_SAFE_INTEGER","domNode","_eastSash","Sash","getVerticalSashLeft","orientation","_westSash","_northSash","getHorizontalSashTop","orthogonalEdge","OrthogonalEdge","North","_southSash","height","South","orthogonalStartSash","orthogonalEndSash","deltaY","deltaX","Event","any","onDidStart","fire","onDidEnd","dimension","done","onDidChange","e","currentX","startX","layout","east","west","currentY","startY","north","south","onDidReset","_preferredSize","dispose","enableSashes","state","arguments","length","size","minHeight","minWidth","maxHeight","maxWidth","Math","max","min","newSize","equals","clearSashHoverState","maxSize","value","minSize","preferredSize","__decorate","decorators","target","key","desc","d","c","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","onDidChangeGlobalSize","onDidChangeHoverDelay","MouseEventFactory","el","disposables","onPointerMove","DomEmitter","getWindow","onPointerUp","memoize","prototype","GestureEventFactory","EventType","Change","End","OrthogonalPointerEventFactory","factory","PointerEventsDisabledCssClass","_state","_orthogonalStartSash","_orthogonalEndSash","toggle","onDidEnablementChange","sash","orthogonalStartDragHandleDisposables","orthogonalStartSashDisposables","onChange","_orthogonalStartDragHandle","append","$","toDisposable","onMouseEnter","onMouseLeave","orthogonalEndDragHandleDisposables","orthogonalEndSashDisposables","_orthogonalEndDragHandle","layoutProvider","hoverDelay","hoverDelayer","Delayer","_onDidStart","_onDidChange","_onDidReset","_onDidEnd","linkedSash","concat","isMacintosh","onMouseDown","onPointerStart","onMouseDoubleClick","onPointerDoublePress","Gesture","addTarget","onTouchStart","Start","onTap","Tap","doubleTapTimeout","clearTimeout","delay","pointerEventFactory","EventHelper","isMultisashResize","__orthogonalSashEvent","orthogonalSash","getOrthogonalSash","__linkedSashEvent","iframes","ownerDocument","getElementsByTagName","iframe","pageX","pageY","altKey","startEvent","createStyleSheet","updateStyle","cursor","textContent","removeChild","fromLinkedSash","trigger","then","verticalProvider","left","getVerticalSashTop","top","getVerticalSashHeight","horizontalProvider","getHorizontalSashLeft","getHorizontalSashWidth","_a","initialTarget","HTMLElement","ARROW_IMG_SIZE","ScrollbarArrow","Widget","opts","_onActivate","onActivate","bgDomNode","className","position","bgWidth","bgHeight","bottom","right","ThemeIcon","asClassNameArray","icon","_pointerMoveMonitor","GlobalPointerMoveMonitor","dom","POINTER_DOWN","_arrowPointerDown","_pointerdownRepeatTimer","_pointerdownScheduleRepeatTimer","TimeoutTimer","Element","cancelAndSet","scheduleRepeater","startMonitoring","pointerId","buttons","pointerMoveData","preventDefault","ScrollbarVisibilityController","visibility","visibleClassName","invisibleClassName","_visibility","_visibleClassName","_invisibleClassName","_domNode","_isVisible","_isNeeded","_rawShouldBeVisible","_shouldBeVisible","_revealTimer","setVisibility","_updateShouldBeVisible","setShouldBeVisible","rawShouldBeVisible","_applyVisibilitySetting","shouldBeVisible","ensureVisibility","setIsNeeded","isNeeded","setDomNode","setClassName","_reveal","_hide","setIfNotSet","withFadeAway","AbstractScrollbar","_lazyRender","lazyRender","_host","host","_scrollable","scrollable","_scrollByPage","scrollByPage","_scrollbarState","scrollbarState","_visibilityController","extraScrollbarClassName","_shouldRender","createFastDomNode","setPosition","_domNodePointerDown","_createArrow","arrow","_createSlider","slider","setTop","setLeft","setWidth","setHeight","setLayerHinting","setContain","button","_sliderPointerDown","onclick","leftButton","stopPropagation","_onElementSize","visibleSize","setVisibleSize","render","_onElementScrollSize","elementScrollSize","setScrollSize","_onElementScrollPosition","elementScrollPosition","setScrollPosition","beginReveal","beginHide","_renderDomNode","getRectangleLargeSize","getRectangleSmallSize","_updateSlider","getSliderSize","getArrowSize","getSliderPosition","_onPointerDown","delegatePointerDown","domTop","getClientRects","sliderStart","sliderStop","pointerPos","_sliderPointerPosition","offsetX","offsetY","domNodePosition","offset","_pointerDownRelativePosition","_setDesiredScrollPositionNow","getDesiredScrollPositionFromOffsetPaged","getDesiredScrollPositionFromOffset","initialPointerPosition","initialPointerOrthogonalPosition","_sliderOrthogonalPointerPosition","initialScrollbarState","clone","toggleClassName","pointerOrthogonalPosition","pointerOrthogonalDelta","abs","platform","getScrollPosition","pointerDelta","getDesiredScrollPositionFromDelta","onDragEnd","onDragStart","_desiredScrollPosition","desiredScrollPosition","writeScrollPosition","setScrollPositionNow","updateScrollbarSize","scrollbarSize","_updateScrollbarSize","setScrollbarSize","HorizontalScrollbar","scrollDimensions","getScrollDimensions","scrollPosition","getCurrentScrollPosition","ScrollbarState","horizontalHasArrows","arrowSize","horizontal","horizontalScrollbarSize","vertical","verticalScrollbarSize","scrollWidth","scrollLeft","arrowDelta","scrollbarDelta","Codicon","scrollbarButtonLeft","onMouseWheel","StandardWheelEvent","scrollbarButtonRight","floor","horizontalSliderSize","sliderSize","sliderPosition","largeSize","smallSize","setBottom","onDidScroll","updateOptions","setOppositeScrollbarSize","VerticalScrollbar","verticalHasArrows","scrollHeight","scrollTop","scrollbarButtonUp","scrollbarButtonDown","verticalSliderSize","setRight","MouseWheelClassifierItem","timestamp","score","MouseWheelClassifier","_capacity","_memory","_front","_rear","isPhysicalMouseWheel","remainingInfluence","iteration","index","influence","pow","acceptStandardWheelEvent","isChrome","targetWindow","browserEvent","pageZoomFactor","getZoomFactor","accept","Date","now","previousItem","item","_computeScore","_isAlmostInt","absDeltaX","absDeltaY","absPreviousDeltaX","absPreviousDeltaY","minDeltaX","minDeltaY","maxDeltaX","maxDeltaY","round","INSTANCE","AbstractScrollableElement","_options","_onScroll","onScroll","_onWillScroll","overflow","result","useShadows","handleMouseWheel","flipAxes","consumeMouseWheelIfScrollbarIsNeeded","alwaysConsumeMouseWheel","scrollYToX","mouseWheelScrollSensitivity","fastScrollSensitivity","scrollPredominantAxis","mouseWheelSmoothScroll","listenOnDomNode","resolveOptions","_onDidScroll","scrollbarHost","mouseWheelEvent","_onMouseWheel","_onDragStart","_onDragEnd","_verticalScrollbar","_horizontalScrollbar","_leftShadowDomNode","_topShadowDomNode","_topLeftShadowDomNode","_listenOnDomNode","_mouseWheelToDispose","_setListeningToMouseWheel","onmouseover","_onMouseOver","onmouseleave","_onMouseLeave","_hideTimeout","_isDragging","_mouseIsOver","_revealOnScroll","getDomNode","getOverviewRulerLayoutInfo","parent","insertBefore","delegateVerticalScrollbarPointerDown","setScrollDimensions","dimensions","updateClassName","newClassName","newOptions","_render","delegateScrollFromMouseWheelEvent","shouldListen","push","MOUSE_WHEEL","passive","defaultPrevented","classifier","didScroll","shiftConvert","shiftKey","futureScrollPosition","getFutureScrollPosition","deltaScrollTop","desiredScrollTop","ceil","deltaScrollLeft","desiredScrollLeft","validateScrollPosition","setScrollPositionSmooth","consumeMouseWheel","renderNow","Error","scrollState","enableTop","enableLeft","leftClassName","topClassName","topLeftClassName","_scheduleHide","ScrollableElement","Scrollable","forceIntegerValues","smoothScrollDuration","scheduleAtNextAnimationFrame","callback","update","SmoothScrollableElement","reuseAnimation","DomScrollableElement","_element","scrollTopChanged","scrollLeftChanged","scanDomNode","clientWidth","clientHeight","oppositeScrollbarSize","scrollSize","_scrollbarSize","_oppositeScrollbarSize","_arrowSize","_visibleSize","_scrollSize","_scrollPosition","_computedAvailableSize","_computedIsNeeded","_computedSliderSize","_computedSliderRatio","_computedSliderPosition","_refreshComputedValues","iVisibleSize","iScrollSize","iScrollPosition","_computeValues","computedAvailableSize","computedRepresentableSize","computedIsNeeded","computedSliderSize","computedSliderRatio","computedSliderPosition","desiredSliderPosition","correctedOffset","delta","SELECT_OPTION_ENTRY_TEMPLATE_ID","SelectListRenderer","templateId","renderTemplate","data","root","text","detail","decoratorRight","renderElement","templateData","isDisabled","innerText","disposeTemplate","_templateData","SelectBoxList","selected","contextViewProvider","styles","selectBoxOptions","_currentSelection","_hasDetails","_skipLayout","_sticky","minBottomMargin","DEFAULT_DROPDOWN_MINIMUM_BOTTOM_MARGIN","selectElement","ariaLabel","ariaDescription","_onDidSelect","registerListeners","constructSelectDropDown","setOptions","initStyleSheet","setTitle","title","_hover","getBaseLayerHoverDelegate","setupUpdatableHover","getDefaultHoverDelegate","getHeight","getTemplateId","selectDropDownContainer","selectionDetailsPane","widthControlOuterDiv","widthControlInnerDiv","widthControlElement","_dropDownPosition","styleElement","DRAG_START","listIsVisibleOnTouchStart","selectedIndex","CLICK","hideSelectDropDown","showSelectDropDown","MOUSE_DOWN","KEY_DOWN","StandardKeyboardEvent","showDropDown","keyCode","onDidSelect","arrays","_cachedMaxDetailsHeight","forEach","option","createOption","description","select","setOptionsList","selectList","splice","focus","tabIndex","blur","setFocusable","focusable","styleSelectElement","content","listFocusBackground","listFocusForeground","decoratorRightForeground","selectBackground","selectBorder","selectListBorder","listHoverForeground","listHoverBackground","listFocusOutline","listHoverOutline","join","_b","_c","background","foreground","selectForeground","border","color","borderColor","styleList","listBackground","selectListBackground","selectDropDownListContainer","optionsBorder","focusBorder","outlineColor","outlineOffset","disabled","createSelectList","showContextView","getAnchor","renderSelectDropDown","layoutSelectDropDown","onHide","anchorPosition","optionsAsChildren","focusSelect","hideContextView","preLayoutPosition","error","measureMaxDetailsHeight","maxDetailsPaneHeight","_option","updateDetail","offsetHeight","window","selectPosition","getComputedStyle","verticalPadding","parseFloat","getPropertyValue","maxSelectDropDownHeightBelow","innerHeight","maxSelectDropDownHeightAbove","DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN","selectWidth","offsetWidth","selectMinWidth","setWidthControlElement","selectOptimalWidth","toString","getHTMLElement","listHeight","contentHeight","minRequiredDropDownHeight","maxVisibleOptionsBelow","maxVisibleOptionsAbove","DEFAULT_MINIMUM_VISIBLE_OPTIONS","domFocus","setFocus","reveal","getFocus","elementWidth","longest","longestLength","detailLength","rightDecoratorLength","len","listRenderer","List","verticalScrollMode","keyboardSupport","mouseSupport","accessibilityProvider","getAriaLabel","label","getWidgetAriaLabel","localize","comment","getRole","getWidgetRole","onKeyDown","onSelectDropDownKeyDown","chain","filter","map","onEnter","onEscape","onUpArrow","onDownArrow","onPageDown","onPageUp","onHome","onEnd","onCharacter","POINTER_UP","onMouseOver","onDidChangeFocus","onListFocus","FOCUS_OUT","relatedTarget","onListBlur","listRowElement","closest","getAttribute","renderDescriptionMarkdown","actionHandler","cleanRenderedMarkdown","childNodes","child","tagName","toLowerCase","rendered","renderMarkdown","supportThemeIcons","indexes","descriptionIsMarkdown","descriptionMarkdownActionHandler","display","nextOptionDisabled","focusPreviousPage","focusNextPage","ch","KeyCodeUtils","optionIndex","charAt","toUpperCase","SelectBoxNative","eventType","showSelect","applyStyles","SelectBox","useCustomDrawn","selectBoxDelegate","defaultStyles","separatorBorder","Color","transparent","ViewItem","visible","_cachedVisibleSize","setVisible","clamp","viewMinimumSize","viewMaximumSize","view","call","console","minimumSize","maximumSize","priority","proportionalLayout","snap","enabled","pointerEvents","disposable","cachedVisibleSize","layoutContext","layoutContainer","VerticalViewItem","HorizontalViewItem","State","Sizing","Distribute","type","Split","Auto","Invisible","SplitView","startSnappingEnabled","_startSnappingEnabled","endSnappingEnabled","_endSnappingEnabled","sashItem","sashItems","updateSashEnablement","_d","_e","_contentSize","proportions","viewItems","Idle","_onDidSashChange","_onDidSashReset","onDidSashChange","onDidSashReset","inverseAltBehavior","getSashOrthogonalSize","sashContainer","viewContainer","scrollableElement","scrollbarVisibility","onDidScrollViewContainer","_","descriptor","views","viewDescriptor","sizing","types","doAddView","reduce","saveProportions","isTransparent","removeProperty","setProperty","addView","skipLayout","previousSize","total","proportion","range","lowPriorityIndexes","highPriorityIndexes","resize","distributeEmptySpace","layoutViews","v","onSashStart","_ref","start","alt","findIndex","combinedDisposable","addDisposableListener","body","resetSashDragState","sashDragState","current","sizes","snapBefore","snapAfter","minDelta","NEGATIVE_INFINITY","maxDelta","POSITIVE_INFINITY","viewItem","upIndexes","downIndexes","minDeltaUp","maxDeltaUp","maxDeltaDown","minDeltaDown","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","halfSize","limitDelta","onSashChange","_ref2","newDelta","isLastSash","newSizes","viewItemIndex","newMinDelta","newMaxDelta","resizeIndex","onSashEnd","onViewChange","indexOf","relayout","resizeView","Busy","distributeViewSizes","flexibleViewItems","flexibleSize","getViewSize","children","onChangeDisposable","containerDisposable","viewSize","areViewsDistributed","s","getSashPosition","sashEventMapper","onStartDisposable","onStart","onEndDisposable","onDidResetDisposable","contentSize","overloadMinDelta","overloadMaxDelta","pushToStart","pushToEnd","upItems","upSizes","downItems","downSizes","snapped","snapView","deltaUp","deltaDown","lowPriorityIndex","emptyDelta","updateScrollableElement","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","snappedBefore","snappedAfter","TableListRenderer","columns","renderers","getColumnSize","TemplateId","renderedTemplates","Set","rendererMap","Map","column","renderer","get","rowContainer","cellContainers","cellTemplateData","cellContainer","cell","project","disposeElement","clearNode","delete","layoutColumn","ColumnHeader","minimumWidth","maximumWidth","onDidChangeWidthConstraints","None","_onDidLayout","onDidLayout","tooltip","Table","list","onDidChangeSelection","onMouseDblClick","onPointer","onDidFocus","renderHeight","onDidDispose","user","virtualDelegate","domId","InstanceCount","cachedWidth","cachedHeight","headers","a","b","weight","splitview","headerRowHeight","lineHeight","delegate","row","h","totalWeight","unthemedListStyles","deleteCount","elements","getSelectedElements","getSelection","unthemedToggleStyles","inputActiveOptionBorder","inputActiveOptionForeground","inputActiveOptionBackground","Toggle","_onChange","_onKeyDown","_opts","_checked","isChecked","classes","_icon","actionClassName","split","hoverDelegate","notFocusable","String","ev","checked","ignoreGesture","onkeydown","keyboardEvent","newIsChecked","enable","disable","ToolBar","contextMenuProvider","submenuActionViewItems","hasSecondaryActions","_onDidChangeDropdownVisibility","EventMultiplexer","onDidChangeDropdownVisibility","createInstantHoverDelegate","lookupKeybindings","getKeyBinding","toggleMenuAction","ToggleMenuAction","toggleMenuActionViewItem","toggleMenuTitle","actionBar","ActionBar","actionRunner","allowContextMenu","highlightToggledItems","actionViewItemProvider","action","viewItemOptions","id","ID","DropdownMenuActionViewItem","menuActions","keybindingProvider","classNames","moreIcon","toolBarMore","anchorAlignmentProvider","menuAsChild","renderDropdownAsChildElement","skipTelemetry","isMenu","setActionContext","context","onDidChangeVisibility","SubmenuAction","actions","class","getElement","getItemAction","indexOrElement","getAction","setActions","primaryActions","secondaryActions","primaryActionsToSet","slice","keybinding","getKeybindingLabel","getLabel","Action","toggleDropdownMenu","nls","_menuActions","run","RenderIndentGuides","TreeElementsDragAndDropData","ElementsDragAndDropData","node","asTreeDragAndDropData","TreeNodeListDragAndDrop","modelProvider","dnd","autoExpandDisposable","getDragURI","getDragLabel","nodes","originalEvent","onDragOver","targetNode","targetIndex","targetSector","raw","didChangeAutoExpandNode","autoExpandNode","autoExpand","disposableTimeout","model","ref","getNodeLocation","isCollapsed","setCollapsed","bubble","feedback","effect","parentRef","getParentNodeLocation","parentNode","getNode","parentIndex","getListIndex","getListRenderCount","drop","ComposedTreeDelegate","hasDynamicHeight","setDynamicHeight","EventCollection","_elements","TreeRenderer","onDidChangeCollapseState","activeNodes","renderedIndentGuides","renderedElements","renderedNodes","indent","DefaultIndent","hideTwistiesOfChildlessElements","shouldRenderIndentGuides","activeIndentNodes","indentGuidesDisposable","onDidChangeNodeTwistieState","onDidChangeTwistieState","renderTreeElement","renderIndentGuides","_renderIndentGuides","_onDidChangeActiveNodes","twistie","contents","set","depth","paddingLeft","collapsible","collapsed","removeAttribute","treeItemExpanded","twistieRendered","renderTwistie","visibleChildrenCount","disposableStore","guide","has","childElementCount","firstElementChild","line","FindFilter","totalCount","_totalCount","matchCount","_matchCount","tree","keyboardNavigationLabelProvider","_filter","_pattern","_lowercasePattern","onWillRefilter","reset","parentVisibility","isFilterResult","getVisibleState","FuzzyScore","Default","getKeyboardNavigationLabel","labels","Array","isArray","l","labelStr","findMatchType","TreeFindMatchType","Contiguous","fuzzyScore","firstMatchCanBeWeak","boostFullMatch","findMode","TreeFindMode","Filter","defaultFindVisibility","unthemedInboxStyles","FindController","pattern","mode","_mode","widget","refilter","_onDidChangeMode","matchType","_matchType","_onDidChangeMatchType","onDidChangeMode","onDidChangeMatchType","_onDidChangePattern","_onDidChangeOpenState","onDidChangeOpenState","enabledDisposables","defaultFindMode","Highlight","defaultFindMatchType","Fuzzy","onDidSplice","onDidSpliceModel","optionsUpdate","noMatches","showNotFoundMessage","showMessage","clearMessage","shouldAllowFocus","isDefault","filterData","_history","stickyScrollNodeStateEquals","node1","node2","stickyScrollNodeEquals","startIndex","endIndex","StickyScrollState","stickyNodes","count","equal","lastNodePartiallyVisible","lastStickyNode","secondLastStickyNode","animationStateChanged","previousState","previousLastStickyNode","DefaultStickyScrollDelegate","constrainStickyScrollNodes","stickyScrollMaxItemCount","maxWidgetHeight","stickyNode","StickyScrollController","treeDelegate","maxWidgetViewRatio","stickyScrollOptions","validateStickySettings","stickyScrollDelegate","_widget","StickyScrollWidget","getScrollableElement","onDidChangeHasFocus","onContextMenu","onDidChangeContentHeight","getNodeAtHeight","firstVisibleIndex","indexAt","firstVisibleNode","setState","stickyState","findStickyState","firstVisibleNodeUnderWidget","stickyNodesHeight","nextStickyNode","getNextStickyNode","getNextVisibleNode","contrainedStickyNodes","constrainStickyNodes","previousStickyNode","getAncestorUnderPrevious","nodeIsUncollapsedParent","nodeTopAlignsWithStickyNodesBottom","createStickyScrollNode","nodeIndex","getNodeIndex","elementTop","getElementTop","stickyPosition","currentStickyNodesHeight","getNodeRange","calculateStickyNodePosition","previousAncestor","currentAncestor","parentOfcurrentAncestor","getParentNode","lastDescendantIndex","stickyRowPositionTop","stickyNodeHeight","lastChildRelativeTop","getRelativeTop","nodeHeight","nextNodeRelativeTop","lastChildNode","lastChildHeight","bottomOfLastChild","maximumStickyWidgetHeight","constrainedStickyNodes","lastConstrainedStickyNode","nodeLocation","parentLocation","nodePositionTopBelowWidget","ancestors","widgetHeight","focusedLast","validatedOptions","treeRenderers","_previousElements","_previousStateDisposables","_rootDomNode","shadow","stickyScrollFocus","StickyScrollFocus","_previousState","lastElement","wasVisible","isVisible","stickyIndex","updateElements","stickyNodesTotal","stickyElement","setRowHeight","setRowLineHeight","getElementID","accessibilityDisposable","setAccessibilityAttributes","nodeTemplateId","find","nodeCopy","Proxy","getSetSize","getPosInSet","observable","constObservable","autorun","reader","readObservable","ariaLevel","getAriaLevel","domHasFocus","_domHasFocus","hasFocus","_onDidChangeHasFocus","focusedIndex","_onContextMenu","addEventListener","onFocus","onBlur","toggleStickyScrollFocused","handleContextMenu","isStickyScrollContainer","isStickyScrollElement","isKeyboardEvent","anchor","isStickyScroll","setFocusedElement","nodeIndexToFocus","scrollNodeUnderWidget","previousIndex","removeFocus","newFocusedIndex","elementScrollTop","elementTargetViewTop","toggleElementFocus","newFocusIndex","oldIndex","focused","toggleElementActiveFocus","toggleElementPassiveFocus","toggleCurrentElementActiveFocus","asTreeMouseEvent","TreeMouseEventTarget","Unknown","hasParentWithClass","Twistie","asTreeContextMenuEvent","dfs","fn","Trait","nodeSet","_nodeSet","createNodeSet","getFirstViewElementWithTrait","identityProvider","__forceEvent","_set","silent","that","getNodes","onDidModelSplice","insertedNodes","deletedNodes","visit","values","deletedNodesIdSet","deletedNodesVisitor","getId","insertedNodesMap","insertedNodesVisitor","insertedNode","TreeNodeListMouseController","MouseController","stickyScrollProvider","onViewPointer","isButton","isInputElement","isMonacoEditor","isHandledByList","isSelectionRangeChangeEvent","isSelectionSingleChangeEvent","onTwistie","isStickyElement","expandOnlyOnTwistieClick","handleStickyScrollMouseEvent","expandOnDoubleClick","location","recursive","toggleCollapsed","isMonacoCustomToggle","isActionItem","stickyScrollController","setSelection","onDoubleClick","TreeNodeList","focusTrait","selectionTrait","anchorTrait","createMouseController","additionalFocus","additionalSelection","distinct","setAnchor","fromAPI","AbstractTree","eventBufferer","wrapEvent","selection","onMouseOut","onDidChangeModel","signal","findController","findFuzzy","_user","EventBufferer","onDidChangeFindOpenState","onDidChangeStickyScrollFocused","_onWillRefilter","_onDidUpdateOptions","onDidChangeCollapseStateRelay","Relay","onDidChangeActiveNodes","SetMap","getFocusedElements","getAnchorElement","multipleSelectionController","visibleChildIndex","getActiveDescendantId","createModel","input","bufferEvents","activeNodesEmitter","activeNodesDebounce","onLeftArrow","onRightArrow","onSpace","findWidgetEnabled","findWidgetStyles","focusNavigationFilter","onDidChangeFindMode","onDidChangeFindMatchType","enableStickyScroll","Always","updateStickyScroll","isNumber","suffix","treeIndentGuidesStroke","treeInactiveIndentGuidesStroke","stickyScrollBackground","treeStickyScrollBackground","treeStickyScrollBorder","treeStickyScrollShadow","focusAndSelectionOutline","asCssValueWithDefault","listFocusAndSelectionOutline","listSelectionOutline","getParentElement","getFirstElementChild","collapse","expand","isCollapsible","setCollapsible","focusNext","n","loop","focusPrevious","focusFirst","relativeTop","expandTo","paddingTop","parentListIndex","some","firstChildIndex","createAsyncDataTreeNode","props","refreshPromise","stale","slow","forceExpanded","isAncestor","ancestor","descendant","AsyncDataTreeNodeWrapper","AsyncDataTreeRenderer","nodeMapper","twistieElement","treeItemLoading","asTreeEvent","AsyncDataTreeElementsDragAndDropData","asAsyncDataTreeDragAndDropData","AsyncDataTreeNodeListDragAndDrop","asObjectTreeOptions","collapseByDefault","sorter","hasChildren","AsyncDataTree","dataSource","subTreeRefreshPromises","refreshPromises","_onDidRender","_onDidChangeNodeSlowState","WeakMapper","autoExpandSingleChildren","getDefaultCollapseState","ObjectTreeElementCollapseState","PreserveOrCollapsed","PreserveOrExpanded","createTree","defaultCollapseState","_onDidChangeCollapseState","objectTreeDelegate","objectTreeRenderers","objectTreeOptions","ObjectTree","getInput","setInput","viewState","promise","viewStateContext","_updateChildren","rerender","TreeError","toPromise","getDataNode","refreshAndRenderNode","dataNode","hasElement","refreshNode","isDisposed","other","intersects","setChildren","doRefreshSubTree","Promise","finally","childrenToRefresh","doRefreshNode","Promises","settled","childrenPromise","doGetChildren","isIterable","resolve","slowTimeout","timeout","Iterable","empty","err","isCancellationError","getChildren","processChildren","createCancelablePromise","async","deep","catch","onUnexpectedError","childrenElementsIterable","childrenElements","nodesToForget","childrenTreeNodesById","asyncDataTreeNode","childAsyncDataTreeNode","expanded","asTreeElement","diffIdentityProvider","sort","compare","bind","CompressibleAsyncDataTreeNodeWrapper","incompressible","CompressibleAsyncDataTreeRenderer","compressibleNodeMapperProvider","renderCompressedElements","disposeCompressedElements","CompressibleAsyncDataTree","compressionDelegate","compressibleNodeMapper","getCompressedNodeKeyboardNavigationLabel","els","asCompressibleObjectTreeOptions","CompressibleObjectTree","isIncompressible","getUncompressedIds","compressedNode","getCompressedTreeNode","oldSelection","oldFocus","didChangeSelection","didChangeFocus","filterResult","DataTree","ObjectTreeModel","obj","isCollapsibleStateUpdate","IndexTreeModel","rootElement","rootRef","_onDidChangeRenderNodeCount","onDidChangeRenderNodeCount","_onDidSplice","refilterDelayer","MicrotaskDelay","allowNonCollapsibleParents","renderNodeCount","toInsert","spliceSmart","spliceSimple","identity","toInsertIterable","recurseLevels","diffDepth","getParentNodeWithListIndex","lastDiffIds","diff","LcsDiff","getElements","ComputeDiff","quitEarly","locationPrefix","recurseSplice","fromOriginal","fromModified","lastStartO","lastStartM","change","changes","originalStart","originalLength","modifiedStart","modifiedLength","onDidCreateNode","onDidDeleteNode","listIndex","revealed","treeListElementsToInsert","nodesToInsertIterator","createTreeNode","lastIndex","visibleChildStartIndex","nodesToInsert","insertedVisibleChildrenCount","deletedVisibleChildrenCount","visibleDeleteCount","_updateAncestorsRenderNodeCount","getTreeNodeWithListIndex","hasTreeNode","getTreeNode","_setCollapseState","_setListNodeCollapseState","onlyVisibleChildIndex","_setNodeCollapseState","previousRenderNodeCount","updateNodeAfterCollapseChange","updateNodeAfterFilterChange","treeElement","treeListElements","_filterNode","childElements","childRevealed","pop","_updateNodeAfterCollapseChange","_updateNodeAfterFilterChange","resultStartLength","hasVisibleDescendants","rest","indexTreeNode","tail2","noCompress","from","compress","childrenIterator","consume","_decompress","decompress","CompressedObjectTreeModel","compressionEnabled","base","compressedChildren","_setChildren","Infinity","compressedParentNode","splicedElement","recompressedElement","elementComparator","parentChildren","isCompressionEnabled","setCompressionEnabled","rootChildren","decompressedRootChildren","recompressedRootChildren","insertedElements","getCompressedNode","DefaultElementMapper","CompressedTreeNodeWrapper","unwrapper","CompressibleObjectTreeModel","elementMapper","compressedNodeUnwrapper","updateElementHeight","mapList","otherNode","mapOptions","CompressibleRenderer","compressedTreeNodeProvider","_compressedTreeNodeProvider","compressedTreeNode","CompressibleStickyScrollDelegate","compressedStickyNodes","stickyNodeBottom","uncompressedStickyNodes","overflowingStickyNodes","compressStickyNodes","compressionModel","compressedElement","stickyTreeNode","compressedStickyNode","nodesByIdentity","getElementLocation","preserveCollapseState","insertedElementIds","MAX_VALUE","tnode","Collapsed","Expanded","Boolean","message","_map","WeakMap","listener","StandardMouseEvent","onmousedown","MOUSE_OVER","MOUSE_LEAVE","onkeyup","KEY_UP","oninput","INPUT","onblur","BLUR","onfocus","FOCUS","ignoreTarget","ensureCodeWindow","fallbackWindowId","codeWindow","vscodeWindowId","mainWindow","cssClass","actionCallback","_enabled","_id","_label","_cssClass","_actionCallback","_setLabel","_tooltip","_setTooltip","_setClass","_setEnabled","_setChecked","ActionRunner","_onWillRun","onWillRun","_onDidRun","onDidRun","runAction","Separator","out","_len","actionLists","_key","_actions","EmptySubmenuAction","toAction","tail","array","arr","one","itemEquals","removeFastWithoutKeepingOrder","last","binarySearch","comparator","compareToKey","low","high","mid","comp","binarySearch2","quickSelect","nth","TypeError","pivotValue","random","lower","higher","pivots","val","groupBy","currentGroup","groupAdjacentBy","items","shouldBeGrouped","forEachAdjacent","f","forEachWithNeighbors","coalesce","coalesceInPlace","to","isFalsyOrEmpty","isNonEmptyArray","keyFn","seen","firstOrDefault","notFoundValue","arg","arrayInsert","insertIndex","insertArr","before","after","unshift","pushMany","asArray","x","newItems","getActualStartIndex","startIdx","newItemsLength","insertInto","CompareResult","compareBy","selector","tieBreakComparators","comparators","item1","item2","isNeitherLessOrGreaterThan","neitherLessOrGreaterThan","isLessThan","isLessThanOrEqual","isGreaterThan","greaterThan","lessThan","numberComparator","booleanComparator","reverseOrder","ArrayQueue","firstIdx","lastIdx","takeWhile","predicate","takeFromEndWhile","endIdx","peek","dequeue","takeCount","CallbackIterable","iterate","toArray","cb","mapFn","findLast","findLastMaxBy","first","_callback","Permutation","_indexMap","createSortPermutation","compareFn","sortIndices","keys","index1","index2","apply","inverse","inverseIndexMap","idx","findLastIdx","findLastMonotonous","findLastIdxMonotonous","j","k","findFirstMonotonous","findFirstIdxMonotonousOrArrLen","MonotonousArray","_array","_findLastMonotonousLastIdx","assertInvariants","_prevFindLastPredicate","findFirstMax","findLastMax","findFirstMin","findMaxIdx","maxIdx","mapFindFirst","mapped","ok","assertNever","softAssert","condition","BugIndicatingError","assertFn","checkAdjacentItems","isThenable","source","CancellationTokenSource","thenable","token","reject","subscription","onCancellationRequested","CancellationError","onfinally","raceCancellation","defaultValue","Throttler","activePromise","queuedPromise","queuedPromiseFactory","queue","promiseFactory","onComplete","defaultDelay","deferred","completionPromise","doResolve","doReject","task","cancelTimeout","scheduled","queueMicrotask","isTriggered","microtaskDeferred","timeoutDeferred","handle","ThrottledDelayer","delayer","throttler","millis","handler","store","timer","deleteAndLeak","promiseFactories","shouldStop","t","runner","_token","IntervalTimer","interval","globalThis","setInterval","clearInterval","timeoutToken","timeoutHandler","onTimeout","isScheduled","doRun","runWhenGlobalIdle","_runWhenIdle","requestIdleCallback","cancelIdleCallback","_targetWindow","setTimeout0","disposed","end","deadline","didTimeout","timeRemaining","freeze","AbstractIdleValue","executor","_didRun","_executor","_value","_error","_handle","isInitialized","GlobalIdleValue","DeferredPromise","isRejected","outcome","isSettled","p","completeCallback","errorCallback","complete","promises","firstError","all","withAsyncBody","bodyFn","AsyncIterableObject","fromArray","writer","emitMany","fromPromise","emitter","fromPromises","emitOne","merge","iterables","iterable","onReturn","_results","_onReturn","_onStateChanged","Symbol","asyncIterator","next","return","filterFn","EMPTY","CancelableAsyncIterableObject","_source","createCancelableAsyncIterable","innerIterable","isCancellationRequested"],"sourceRoot":""}