{"version":3,"file":"static/js/monaco-editor-vendor.60419dca.f9cb2cb1.js","mappings":"0UAgCaA,EAAgB,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GACzB,SAAAA,EAAYK,EAAYC,EAAcC,GAAW,IAAAC,EAGjB,OAHiBC,EAAAA,EAAAA,GAAA,KAAAT,IAC7CQ,EAAAL,EAAAO,KAAA,KAAML,EAAYC,IACbK,4BAAyBC,EAC9BJ,EAAKK,WAAaN,EAAUC,CAChC,CAMC,OANAM,EAAAA,EAAAA,GAAAd,EAAA,EAAAe,IAAA,6BAAAC,MACD,SAA2BC,EAAOC,GAC9B,OAAOC,KAAKN,WAAWO,2BAA2BH,EAAOC,EAC7D,GAAC,CAAAH,IAAA,0BAAAC,MACD,SAAwBK,GACpB,OAAOF,KAAKN,WAAWS,wBAAwBD,EACnD,KAACrB,CAAA,CAXwB,CA5BU,WACnC,SAAAuB,EAAYlB,EAAYC,IAAcG,EAAAA,EAAAA,GAAA,KAAAc,GAClCJ,KAAKK,sCAAmCZ,EACxCO,KAAKM,YAAcpB,EACnBc,KAAKb,aAAeA,EACpBa,KAAKO,YAAcP,KAAKM,YAAYE,iBACpCR,KAAKS,aAAeT,KAAKM,YAAYI,kBACrCV,KAAKW,aAAeX,KAAKb,aAAawB,aACtCX,KAAKY,gBAAkBZ,KAAKb,aAAayB,gBACzC,IAAMC,EAAQb,KAAKM,YAAYQ,qBAC/Bd,KAAKe,UAAYF,EAAMG,IACvBhB,KAAKiB,WAAaJ,EAAMK,KACxBlB,KAAKmB,cAAgBN,EAAMO,MAC3BpB,KAAKqB,eAAiBR,EAAMS,MAChC,CAYC,OAZA3B,EAAAA,EAAAA,GAAAS,EAAA,EAAAR,IAAA,gCAAAC,MACD,SAA8B0B,GAC1B,OAAOA,EAAcvB,KAAKe,SAC9B,GAAC,CAAAnB,IAAA,iCAAAC,MACD,SAA+B2B,EAAYC,GACvC,OAAOzB,KAAKM,YAAYoB,+BAA+BF,EAAYC,EACvE,GAAC,CAAA7B,IAAA,mCAAAC,MACD,SAAiC2B,EAAYC,GACzC,OAAOzB,KAAKM,YAAYqB,iCAAiCH,EAAYC,EACzE,GAAC,CAAA7B,IAAA,2BAAAC,MACD,WACI,OAAOG,KAAKb,aAAayC,0BAC7B,KAACxB,CAAA,CA1BkC,IAyC1ByB,GAAiBlC,EAAAA,EAAAA,IAC1B,SAAAkC,EAAYC,EAAqBN,EAAYO,IAAQzC,EAAAA,EAAAA,GAAA,KAAAuC,GACjD7B,KAAK8B,oBAAsBA,EAC3B9B,KAAKwB,WAAaA,EAClBxB,KAAK+B,OAASA,CAClB,IAESC,EAAe,WASxB,SAAAA,EAAYd,EAAME,IAAO9B,EAAAA,EAAAA,GAAA,KAAA0C,GACrBhC,KAAKiC,2BAAwBxC,EAC7BO,KAAKkB,KAAOgB,KAAKC,MAAMjB,GACvBlB,KAAKoB,MAAQc,KAAKC,MAAMf,EAC5B,CALC,OAKAzB,EAAAA,EAAAA,GAAAqC,EAAA,EAAApC,IAAA,WAAAC,MACD,WACI,MAAO,IAAPuC,OAAWpC,KAAKkB,KAAI,KAAAkB,OAAIpC,KAAKoB,MAAK,IACtC,IAAC,EAAAxB,IAAA,OAAAC,MAfD,SAAYkC,GAER,IADA,IAAMM,EAAS,IAAIC,MAAMP,EAAOQ,QACvBC,EAAI,EAAGC,EAAMV,EAAOQ,OAAQC,EAAIC,EAAKD,IAAK,CAC/C,IAAM1C,EAAQiC,EAAOS,GACrBH,EAAOG,GAAK,IAAIR,EAAgBlC,EAAMoB,KAAMpB,EAAMsB,MACtD,CACA,OAAOiB,CACX,KAACL,CAAA,CARuB,GAkBfU,EAAoB,WAC7B,SAAAA,EAAYxB,EAAME,IAAO9B,EAAAA,EAAAA,GAAA,KAAAoD,GACrB1C,KAAK2C,gCAA6BlD,EAClCO,KAAKkB,KAAOA,EACZlB,KAAKoB,MAAQA,CACjB,CAMC,OANAzB,EAAAA,EAAAA,GAAA+C,EAAA,EAAA9C,IAAA,WAAAC,MACD,WACI,MAAO,IAAPuC,OAAWpC,KAAKkB,KAAI,KAAAkB,OAAIpC,KAAKoB,MAAK,IACtC,IAAC,EAAAxB,IAAA,UAAAC,MACD,SAAe+C,EAAGC,GACd,OAAOD,EAAE1B,KAAO2B,EAAE3B,IACtB,KAACwB,CAAA,CAX4B,GAapBI,GAAkBnD,EAAAA,EAAAA,IAC3B,SAAAmD,EAAYhB,EAAqBZ,IAAM5B,EAAAA,EAAAA,GAAA,KAAAwD,GACnC9C,KAAK8B,oBAAsBA,EAC3B9B,KAAK+C,aAAe7B,EACpBlB,KAAKkB,KAAOgB,KAAKC,MAAMnC,KAAK+C,aAChC,IAESC,GAAarD,EAAAA,EAAAA,IACtB,SAAAqD,EAAYlB,EAAqBC,IAAQzC,EAAAA,EAAAA,GAAA,KAAA0D,GACrChD,KAAK8B,oBAAsBA,EAC3B9B,KAAK+B,OAASA,CAClB,G,mHCvFSkB,EAAc,WACvB,SAAAA,EAAYC,EAAeC,EAAWC,EAAiBC,IAAiB/D,EAAAA,EAAAA,GAAA,KAAA2D,GACpEjD,KAAKkD,cAAgBA,EACrBlD,KAAKmD,UAAYA,EACjBnD,KAAKoD,gBAAkBA,EACvBpD,KAAKqD,gBAAkBA,CAC3B,CA4PC,OA5PA1D,EAAAA,EAAAA,GAAAsD,EAAA,EAAArD,IAAA,QAAAC,MACD,SAAMyD,EAAMC,EAAgBC,EAAiBC,GACzCzD,KAAKqD,gBAAgBK,MAAMJ,EAAMC,EAAgBC,EAAiBC,EACtE,GAAC,CAAA7D,IAAA,OAAAC,MACD,SAAKyD,GACDtD,KAAKqD,gBAAgBM,KAAKL,EAC9B,GAAC,CAAA1D,IAAA,kBAAAC,MACD,SAAgByD,EAAMM,EAAoBC,EAAoBC,GAC1D9D,KAAKqD,gBAAgBU,gBAAgBT,EAAMM,EAAoBC,EAAoBC,EACvF,GAAC,CAAAlE,IAAA,mBAAAC,MACD,WACIG,KAAKqD,gBAAgBW,kBACzB,GAAC,CAAApE,IAAA,iBAAAC,MACD,WACIG,KAAKqD,gBAAgBY,gBACzB,GAAC,CAAArE,IAAA,MAAAC,MACD,WACIG,KAAKqD,gBAAgBa,KACzB,GAAC,CAAAtE,IAAA,eAAAC,MACD,SAAasE,GACTC,EAAAA,GAAuBC,aAAaC,qBAAqBtE,KAAKmD,UAAW,CACrEoB,OAAQ,WACRC,UAAWL,GAEnB,GAAC,CAAAvE,IAAA,sBAAAC,MACD,SAAoB4E,GAChB,IAAMC,EAAY1E,KAAKmD,UAAUwB,iBAAiBF,EAAajD,YAC/D,OAAIiD,EAAaG,OAASF,EACf,IAAIG,EAAAA,EAASJ,EAAajD,WAAYkD,GAE1CD,CACX,GAAC,CAAA7E,IAAA,0BAAAC,MACD,SAAwBiF,GACpB,OAAQ9E,KAAKkD,cAAc6B,QAAQC,IAAI,KACnC,IAAK,SACD,OAAOF,EAAKG,OAChB,IAAK,UACD,OAAOH,EAAKI,QAChB,IAAK,UACD,OAAOJ,EAAKK,QAChB,QACI,OAAO,EAEnB,GAAC,CAAAvF,IAAA,6BAAAC,MACD,SAA2BiF,GACvB,OAAQ9E,KAAKkD,cAAc6B,QAAQC,IAAI,KACnC,IAAK,SACD,OAAOF,EAAKI,SAAWJ,EAAKK,QAChC,IAAK,UACD,OAAOL,EAAKG,QAAUH,EAAKK,QAC/B,IAAK,UACD,OAAOL,EAAKI,SAAWJ,EAAKG,OAChC,QACI,OAAO,EAEnB,GAAC,CAAArF,IAAA,gBAAAC,MACD,SAAciF,GACV,IAAMC,EAAU/E,KAAKkD,cAAc6B,QAC7BK,EAA0BC,EAAAA,IAAoBN,EAAQC,IAAI,KAC1DM,EAAkBP,EAAQC,IAAI,IAChCF,EAAKS,eAAiBH,EACtBpF,KAAKwF,cAAcV,EAAK5E,SAAU4E,EAAKW,YAAaX,EAAKY,iBAEpDZ,EAAKa,qBAEN3F,KAAK4F,wBAAwBd,GACzBA,EAAKY,gBACL1F,KAAK6F,sBAAsBf,EAAK5E,SAAU4E,EAAKgB,YAG/C9F,KAAK+F,cAAcjB,EAAK5E,UAAU,GAIlC4E,EAAKY,gBACL1F,KAAKgG,gBAAgBlB,EAAK5E,SAAU4E,EAAKgB,YAGzC9F,KAAKiG,YAAYnB,EAAK5E,SAAU4E,EAAKgB,YAIxChB,EAAKoB,gBAAkB,EAC5BlG,KAAKmG,aAEwB,IAAxBrB,EAAKoB,eACNlG,KAAK4F,wBAAwBd,GACzBA,EAAKY,gBACL1F,KAAKoG,0BAA0BtB,EAAK5E,SAAU4E,EAAKgB,YAGnD9F,KAAK6F,sBAAsBf,EAAK5E,SAAU4E,EAAKgB,YAI/ChB,EAAKY,gBACL1F,KAAKgG,gBAAgBlB,EAAK5E,SAAU4E,EAAKgB,YAGzC9F,KAAKiG,YAAYnB,EAAK5E,SAAU4E,EAAKgB,YAIhB,IAAxBhB,EAAKoB,eACLpB,EAAKuB,iBACFrG,KAAK4F,wBAAwBd,GAC7B9E,KAAKsG,sBAAsBxB,EAAK5E,SAAU4E,EAAKgB,YAG3ChB,EAAKY,gBACL1F,KAAKuG,gBAAgBzB,EAAK5E,SAAU4E,EAAKgB,YAGzC9F,KAAKwG,YAAY1B,EAAK5E,SAAU4E,EAAKgB,aAM7C9F,KAAK4F,wBAAwBd,GACxB9E,KAAKyG,2BAA2B3B,KAC7BA,EAAK4B,SACL1G,KAAKwF,cAAcV,EAAK5E,SAAU4E,EAAKW,aAAa,GAIhDX,EAAKY,gBACL1F,KAAK2G,wBAAwB7B,EAAK5E,SAAU4E,EAAKgB,YAGjD9F,KAAK+F,cAAcjB,EAAK5E,UAAU,IAM1C4E,EAAKY,gBACDZ,EAAKG,QAIDK,EAHJtF,KAAKwF,cAAcV,EAAK5E,SAAU4E,EAAKW,aAAa,GAOhDzF,KAAK4G,cAAc9B,EAAK5E,SAAU4E,EAAKgB,YAK/C9F,KAAK6G,OAAO/B,EAAK5E,SAAU4E,EAAKgB,WAIhD,GAAC,CAAAlG,IAAA,aAAAC,MACD,SAAW4E,EAAcqB,GAErB,OADArB,EAAezE,KAAK8G,oBAAoBrC,GACjC,CACHF,OAAQ,QACRrE,SAAUF,KAAK+G,4BAA4BtC,GAC3CA,aAAAA,EACAqB,WAAAA,EAER,GAAC,CAAAlG,IAAA,SAAAC,MACD,SAAO4E,EAAcqB,GACjB1B,EAAAA,GAAuB4C,OAAO1C,qBAAqBtE,KAAKmD,UAAWnD,KAAKiH,WAAWxC,EAAcqB,GACrG,GAAC,CAAAlG,IAAA,gBAAAC,MACD,SAAc4E,EAAcqB,GACxB1B,EAAAA,GAAuB8C,aAAa5C,qBAAqBtE,KAAKmD,UAAWnD,KAAKiH,WAAWxC,EAAcqB,GAC3G,GAAC,CAAAlG,IAAA,gBAAAC,MACD,SAAc4E,EAAcgB,EAAa0B,GACrC1C,EAAezE,KAAK8G,oBAAoBrC,GACxCL,EAAAA,GAAuBgD,aAAa9C,qBAAqBtE,KAAKmD,UAAW,CACrEoB,OAAQ,QACRrE,SAAUF,KAAK+G,4BAA4BtC,GAC3CA,aAAcA,EACdgB,YAAaA,EACb0B,eAAgBA,GAExB,GAAC,CAAAvH,IAAA,gBAAAC,MACD,SAAc4E,EAAc4C,GACxB5C,EAAezE,KAAK8G,oBAAoBrC,GACxCL,EAAAA,GAAuBkD,aAAahD,qBAAqBtE,KAAKmD,UAAW,CACrEoB,OAAQ,QACRrE,SAAUF,KAAK+G,4BAA4BtC,GAC3CA,aAAcA,EACd4C,UAAWA,GAEnB,GAAC,CAAAzH,IAAA,0BAAAC,MACD,SAAwB4E,EAAcqB,GAClC1B,EAAAA,GAAuBmD,uBAAuBjD,qBAAqBtE,KAAKmD,UAAWnD,KAAKiH,WAAWxC,EAAcqB,GACrH,GAAC,CAAAlG,IAAA,cAAAC,MACD,SAAY4E,EAAcqB,GACtB1B,EAAAA,GAAuBoD,WAAWlD,qBAAqBtE,KAAKmD,UAAWnD,KAAKiH,WAAWxC,EAAcqB,GACzG,GAAC,CAAAlG,IAAA,kBAAAC,MACD,SAAgB4E,EAAcqB,GAC1B1B,EAAAA,GAAuBqD,eAAenD,qBAAqBtE,KAAKmD,UAAWnD,KAAKiH,WAAWxC,EAAcqB,GAC7G,GAAC,CAAAlG,IAAA,wBAAAC,MACD,SAAsB4E,EAAcqB,GAChC1B,EAAAA,GAAuBsD,qBAAqBpD,qBAAqBtE,KAAKmD,UAAWnD,KAAKiH,WAAWxC,EAAcqB,GACnH,GAAC,CAAAlG,IAAA,cAAAC,MACD,SAAY4E,EAAcqB,GACtB1B,EAAAA,GAAuBuD,WAAWrD,qBAAqBtE,KAAKmD,UAAWnD,KAAKiH,WAAWxC,EAAcqB,GACzG,GAAC,CAAAlG,IAAA,kBAAAC,MACD,SAAgB4E,EAAcqB,GAC1B1B,EAAAA,GAAuBwD,eAAetD,qBAAqBtE,KAAKmD,UAAWnD,KAAKiH,WAAWxC,EAAcqB,GAC7G,GAAC,CAAAlG,IAAA,wBAAAC,MACD,SAAsB4E,EAAcqB,GAChC1B,EAAAA,GAAuByD,qBAAqBvD,qBAAqBtE,KAAKmD,UAAWnD,KAAKiH,WAAWxC,EAAcqB,GACnH,GAAC,CAAAlG,IAAA,4BAAAC,MACD,SAA0B4E,EAAcqB,GACpC1B,EAAAA,GAAuB0D,yBAAyBxD,qBAAqBtE,KAAKmD,UAAWnD,KAAKiH,WAAWxC,EAAcqB,GACvH,GAAC,CAAAlG,IAAA,aAAAC,MACD,WACIuE,EAAAA,GAAuB2D,UAAUzD,qBAAqBtE,KAAKmD,UAAW,CAAEoB,OAAQ,SACpF,GACA,CAAA3E,IAAA,8BAAAC,MACA,SAA4B4E,GACxB,OAAOzE,KAAKmD,UAAU6E,qBAAqBC,mCAAmCxD,EAClF,GAAC,CAAA7E,IAAA,cAAAC,MACD,SAAYqI,GACRlI,KAAKoD,gBAAgB+E,YAAYD,EACrC,GAAC,CAAAtI,IAAA,YAAAC,MACD,SAAUqI,GACNlI,KAAKoD,gBAAgBgF,UAAUF,EACnC,GAAC,CAAAtI,IAAA,kBAAAC,MACD,SAAgBqI,GACZlI,KAAKoD,gBAAgBiF,gBAAgBH,EACzC,GAAC,CAAAtI,IAAA,gBAAAC,MACD,SAAcqI,GACVlI,KAAKoD,gBAAgBkF,cAAcJ,EACvC,GAAC,CAAAtI,IAAA,iBAAAC,MACD,SAAeqI,GACXlI,KAAKoD,gBAAgBmF,eAAeL,EACxC,GAAC,CAAAtI,IAAA,cAAAC,MACD,SAAYqI,GACRlI,KAAKoD,gBAAgBoF,YAAYN,EACrC,GAAC,CAAAtI,IAAA,gBAAAC,MACD,SAAcqI,GACVlI,KAAKoD,gBAAgBqF,cAAcP,EACvC,GAAC,CAAAtI,IAAA,gBAAAC,MACD,SAAcqI,GACVlI,KAAKoD,gBAAgBsF,cAAcR,EACvC,GAAC,CAAAtI,IAAA,gBAAAC,MACD,SAAcqI,GACVlI,KAAKoD,gBAAgBuF,cAAcT,EACvC,GAAC,CAAAtI,IAAA,wBAAAC,MACD,WACIG,KAAKoD,gBAAgBwF,uBACzB,GAAC,CAAAhJ,IAAA,iBAAAC,MACD,SAAeqI,GACXlI,KAAKoD,gBAAgByF,eAAeX,EACxC,KAACjF,CAAA,CAlQsB,E,mFCHvB6F,E,4CAGSC,EAAuB,WAChC,SAAAA,EAAYC,IAAY1J,EAAAA,EAAAA,GAAA,KAAAyJ,GACpB/I,KAAKiJ,YAAcD,EACnBhJ,KAAKkJ,KAAK,EAAG,GACjB,CAoKC,OApKAvJ,EAAAA,EAAAA,GAAAoJ,EAAA,EAAAnJ,IAAA,QAAAC,MACD,WACIG,KAAKkJ,KAAK,EAAG,GACjB,GAAC,CAAAtJ,IAAA,OAAAC,MACD,SAAKsJ,EAAqBC,GACtBpJ,KAAKqJ,OAASD,EACdpJ,KAAKsJ,qBAAuBH,CAChC,GAAC,CAAAvJ,IAAA,OAAAC,MACD,WACI,MAAO,CACHsJ,oBAAqBnJ,KAAKsJ,qBAC1BF,MAAOpJ,KAAKqJ,OAEpB,GACA,CAAAzJ,IAAA,qBAAAC,MAGA,WACI,OAAOG,KAAKsJ,oBAChB,GACA,CAAA1J,IAAA,mBAAAC,MAGA,WACI,OAAOG,KAAKsJ,qBAAuBtJ,KAAKqJ,OAAO9G,OAAS,CAC5D,GAAC,CAAA3C,IAAA,WAAAC,MACD,WACI,OAAOG,KAAKqJ,OAAO9G,MACvB,GAAC,CAAA3C,IAAA,UAAAC,MACD,SAAQ2B,GACJ,IAAM+H,EAAY/H,EAAaxB,KAAKsJ,qBACpC,GAAIC,EAAY,GAAKA,GAAavJ,KAAKqJ,OAAO9G,OAC1C,MAAM,IAAIiH,MAAM,gCAEpB,OAAOxJ,KAAKqJ,OAAOE,EACvB,GACA,CAAA3J,IAAA,iBAAAC,MAGA,SAAe4J,EAAsBC,GACjC,GAAwB,IAApB1J,KAAK2J,WAEL,OAAO,KAEX,IAAMC,EAAkB5J,KAAK6J,qBACvBC,EAAgB9J,KAAK+J,mBAC3B,GAAIL,EAAqBE,EAAiB,CAEtC,IAAMI,EAAYN,EAAqBD,EAAuB,EAE9D,OADAzJ,KAAKsJ,sBAAwBU,EACtB,IACX,CACA,GAAIP,EAAuBK,EAEvB,OAAO,KAKX,IAFA,IAAIG,EAAmB,EACnBC,EAAc,EACT1I,EAAaoI,EAAiBpI,GAAcsI,EAAetI,IAAc,CAC9E,IAAM+H,EAAY/H,EAAaxB,KAAKsJ,qBAChCG,GAAwBjI,GAAcA,GAAckI,IAEhC,IAAhBQ,GAEAD,EAAmBV,EACnBW,EAAc,GAGdA,IAGZ,CAEA,GAAIT,EAAuBG,EAAiB,CAExC,IAAIO,EAAmB,EAGnBA,EAFAT,EAAqBE,EAEFF,EAAqBD,EAAuB,EAG5CG,EAAkBH,EAEzCzJ,KAAKsJ,sBAAwBa,CACjC,CAEA,OADgBnK,KAAKqJ,OAAOe,OAAOH,EAAkBC,EAEzD,GAAC,CAAAtK,IAAA,iBAAAC,MACD,SAAewK,EAAsBC,GACjC,IAAMC,EAAqBF,EAAuBC,EAAc,EAChE,GAAwB,IAApBtK,KAAK2J,WAEL,OAAO,EAKX,IAHA,IAAMC,EAAkB5J,KAAK6J,qBACvBC,EAAgB9J,KAAK+J,mBACvBS,GAAkB,EACbC,EAAoBJ,EAAsBI,GAAqBF,EAAoBE,IACpFA,GAAqBb,GAAmBa,GAAqBX,IAE7D9J,KAAKqJ,OAAOoB,EAAoBzK,KAAKsJ,sBAAsBoB,mBAC3DF,GAAkB,GAG1B,OAAOA,CACX,GAAC,CAAA5K,IAAA,kBAAAC,MACD,SAAgB8K,EAAsBC,GAClC,GAAwB,IAApB5K,KAAK2J,WAEL,OAAO,KAEX,IAAMkB,EAAYD,EAAqBD,EAAuB,EACxDf,EAAkB5J,KAAK6J,qBACvBC,EAAgB9J,KAAK+J,mBAC3B,GAAIY,GAAwBf,EAGxB,OADA5J,KAAKsJ,sBAAwBuB,EACtB,KAEX,GAAIF,EAAuBb,EAEvB,OAAO,KAEX,GAAIe,EAAYF,EAAuBb,EAGnC,OADgB9J,KAAKqJ,OAAOe,OAAOO,EAAuB3K,KAAKsJ,qBAAsBQ,EAAgBa,EAAuB,GAKhI,IADA,IAAMG,EAAW,GACRtI,EAAI,EAAGA,EAAIqI,EAAWrI,IAC3BsI,EAAStI,GAAKxC,KAAKiJ,cAEvB,IAAM8B,EAAcJ,EAAuB3K,KAAKsJ,qBAC1C0B,EAAchL,KAAKqJ,OAAO4B,MAAM,EAAGF,GACnCG,EAAalL,KAAKqJ,OAAO4B,MAAMF,EAAa/K,KAAKqJ,OAAO9G,OAASsI,GACjEM,EAAenL,KAAKqJ,OAAO4B,MAAMjL,KAAKqJ,OAAO9G,OAASsI,EAAW7K,KAAKqJ,OAAO9G,QAEnF,OADAvC,KAAKqJ,OAAS2B,EAAY5I,OAAO0I,GAAU1I,OAAO8I,GAC3CC,CACX,GAAC,CAAAvL,IAAA,kBAAAC,MACD,SAAgBkC,GACZ,GAAwB,IAApB/B,KAAK2J,WAEL,OAAO,EAKX,IAHA,IAAMC,EAAkB5J,KAAK6J,qBACvBC,EAAgB9J,KAAK+J,mBACvBqB,GAAkB,EACb5I,EAAI,EAAGC,EAAMV,EAAOQ,OAAQC,EAAIC,EAAKD,IAAK,CAC/C,IAAM6I,EAAMtJ,EAAOS,GACnB,KAAI6I,EAAIC,aAAe1B,GAAmByB,EAAIE,eAAiBzB,GAM/D,IAFA,IAAM0B,EAAOtJ,KAAKuJ,IAAI7B,EAAiByB,EAAIE,gBACrCG,EAAKxJ,KAAKyJ,IAAI7B,EAAeuB,EAAIC,cAC9B9J,EAAagK,EAAMhK,GAAckK,EAAIlK,IAAc,CACxD,IAAM+H,EAAY/H,EAAaxB,KAAKsJ,qBACpCtJ,KAAKqJ,OAAOE,GAAWqC,kBACvBR,GAAkB,CACtB,CACJ,CACA,OAAOA,CACX,KAACrC,CAAA,CAxK+B,GA0KvB8C,EAAsB,WAC/B,SAAAA,EAAYC,GAAM,IAAAzM,EAAA,MAAAC,EAAAA,EAAAA,GAAA,KAAAuM,GACd7L,KAAK+L,MAAQD,EACb9L,KAAKgM,QAAUhM,KAAKiM,iBACpBjM,KAAKkM,iBAAmB,IAAInD,GAAwB,kBAAM1J,EAAK0M,MAAMI,mBAAmB,GAC5F,CAgFC,OAhFAxM,EAAAA,EAAAA,GAAAkM,EAAA,EAAAjM,IAAA,iBAAAC,MACD,WACI,IAAMmM,GAAUI,EAAAA,EAAAA,GAAkBC,SAASC,cAAc,QAKzD,OAJAN,EAAQO,aAAa,cACrBP,EAAQQ,YAAY,YACpBR,EAAQA,QAAQS,aAAa,OAAQ,gBACrCT,EAAQA,QAAQS,aAAa,cAAe,QACrCT,CACX,GACA,CAAApM,IAAA,yBAAAC,MACA,SAAuBqI,GACnB,QAAIA,EAAEwE,WAAW,IAIrB,GAAC,CAAA9M,IAAA,YAAAC,MACD,SAAUqI,GAGN,OAFAlI,KAAKkM,iBAAiBS,SAEf,CACX,GAAC,CAAA/M,IAAA,iBAAAC,MACD,SAAeqI,GACX,OAAOlI,KAAKkM,iBAAiBU,eAAe1E,EAAEqD,eAAgBrD,EAAE2E,MACpE,GAAC,CAAAjN,IAAA,iBAAAC,MACD,SAAeqI,GACX,IAAM4E,EAAU9M,KAAKkM,iBAAiBa,eAAe7E,EAAEqD,eAAgBrD,EAAEoD,cACzE,GAAIwB,EAEA,IAAK,IAAItK,EAAI,EAAGC,EAAMqK,EAAQvK,OAAQC,EAAIC,EAAKD,IAAK,CAChD,IAAMwK,EAAcF,EAAQtK,GAAGyK,aAC3BD,GACAhN,KAAKgM,QAAQA,QAAQkB,YAAYF,EAEzC,CAEJ,OAAO,CACX,GAAC,CAAApN,IAAA,kBAAAC,MACD,SAAgBqI,GACZ,IAAM4E,EAAU9M,KAAKkM,iBAAiBiB,gBAAgBjF,EAAEqD,eAAgBrD,EAAEoD,cAC1E,GAAIwB,EAEA,IAAK,IAAItK,EAAI,EAAGC,EAAMqK,EAAQvK,OAAQC,EAAIC,EAAKD,IAAK,CAChD,IAAMwK,EAAcF,EAAQtK,GAAGyK,aAC3BD,GACAhN,KAAKgM,QAAQA,QAAQkB,YAAYF,EAEzC,CAEJ,OAAO,CACX,GAAC,CAAApN,IAAA,kBAAAC,MACD,SAAgBqI,GACZ,OAAOA,EAAEkF,gBACb,GAAC,CAAAxN,IAAA,kBAAAC,MACD,SAAgBqI,GACZ,OAAOlI,KAAKkM,iBAAiBN,gBAAgB1D,EAAEnG,OACnD,GAAC,CAAAnC,IAAA,iBAAAC,MACD,SAAeqI,GACX,OAAO,CACX,GACA,CAAAtI,IAAA,qBAAAC,MACA,WACI,OAAOG,KAAKkM,iBAAiBrC,oBACjC,GAAC,CAAAjK,IAAA,mBAAAC,MACD,WACI,OAAOG,KAAKkM,iBAAiBnC,kBACjC,GAAC,CAAAnK,IAAA,iBAAAC,MACD,SAAe2B,GACX,OAAOxB,KAAKkM,iBAAiBmB,QAAQ7L,EACzC,GAAC,CAAA5B,IAAA,cAAAC,MACD,SAAYV,GACR,IAAMmO,EAAMtN,KAAKkM,iBAAiBqB,OAC5BC,EAAW,IAAIC,EAAkBzN,KAAKgM,QAAQA,QAAShM,KAAK+L,MAAO5M,GACnEuO,EAAM,CACRvE,oBAAqBmE,EAAInE,oBACzBC,MAAOkE,EAAIlE,MACXuE,YAAaL,EAAIlE,MAAM7G,QAGrBqL,EAASJ,EAASK,OAAOH,EAAKvO,EAAayK,gBAAiBzK,EAAa2K,cAAe3K,EAAa2O,wBAC3G9N,KAAKkM,iBAAiBhD,KAAK0E,EAAOzE,oBAAqByE,EAAOxE,MAClE,KAACyC,CAAA,CArF8B,GAuF7B4B,EAAiB,WACnB,SAAAA,EAAYzB,EAASF,EAAM3M,IAAcG,EAAAA,EAAAA,GAAA,KAAAmO,GACrCzN,KAAKgM,QAAUA,EACfhM,KAAK8L,KAAOA,EACZ9L,KAAKb,aAAeA,CACxB,CA+LC,OA/LAQ,EAAAA,EAAAA,GAAA8N,EAAA,EAAA7N,IAAA,SAAAC,MACD,SAAOkO,EAAWnE,EAAiBoE,EAAgBC,GAC/C,IAAMP,EAAM,CACRvE,oBAAqB4E,EAAU5E,oBAC/BC,MAAO2E,EAAU3E,MAAM6B,MAAM,GAC7B0C,YAAaI,EAAUJ,aAE3B,GAAKD,EAAIvE,oBAAsBuE,EAAIC,YAAc,EAAI/D,GAAqBoE,EAAiBN,EAAIvE,oBAAsB,CAEjHuE,EAAIvE,oBAAsBS,EAC1B8D,EAAIC,YAAcK,EAAiBpE,EAAkB,EACrD8D,EAAItE,MAAQ,GACZ,IAAK,IAAI8E,EAAItE,EAAiBsE,GAAKF,EAAgBE,IAC/CR,EAAItE,MAAM8E,EAAItE,GAAmB5J,KAAK8L,KAAKK,oBAG/C,OADAnM,KAAKmO,iBAAiBT,GAAK,EAAMO,GAC1BP,CACX,CAGA,GADA1N,KAAKoO,sBAAsBV,EAAKxL,KAAKuJ,IAAI7B,EAAkB8D,EAAIvE,oBAAqB,GAAIjH,KAAKyJ,IAAIqC,EAAiBN,EAAIvE,oBAAqBuE,EAAIC,YAAc,GAAIM,EAAUrE,GACvK8D,EAAIvE,oBAAsBS,EAAiB,CAE3C,IAAM2B,EAAiB3B,EACjB0B,EAAepJ,KAAKyJ,IAAIqC,EAAgBN,EAAIvE,oBAAsB,GACpEoC,GAAkBD,IAClBtL,KAAKqO,mBAAmBX,EAAKnC,EAAgBD,EAAc2C,EAAUrE,GACrE8D,EAAIC,aAAerC,EAAeC,EAAiB,EAE3D,MACK,GAAImC,EAAIvE,oBAAsBS,EAAiB,CAEhD,IAAM0E,EAAYpM,KAAKyJ,IAAI+B,EAAIC,YAAa/D,EAAkB8D,EAAIvE,qBAC9DmF,EAAY,IACZtO,KAAKuO,mBAAmBb,EAAKY,GAC7BZ,EAAIC,aAAeW,EAE3B,CAEA,GADAZ,EAAIvE,oBAAsBS,EACtB8D,EAAIvE,oBAAsBuE,EAAIC,YAAc,EAAIK,EAAgB,CAEhE,IAAMzC,EAAiBmC,EAAIvE,oBAAsBuE,EAAIC,YAC/CrC,EAAe0C,EACjBzC,GAAkBD,IAClBtL,KAAKwO,kBAAkBd,EAAKnC,EAAgBD,EAAc2C,EAAUrE,GACpE8D,EAAIC,aAAerC,EAAeC,EAAiB,EAE3D,MACK,GAAImC,EAAIvE,oBAAsBuE,EAAIC,YAAc,EAAIK,EAAgB,CAErE,IAAMzC,EAAiBrJ,KAAKuJ,IAAI,EAAGuC,EAAiBN,EAAIvE,oBAAsB,GAExEmF,EADeZ,EAAIC,YAAc,EACNpC,EAAiB,EAC9C+C,EAAY,IACZtO,KAAKyO,kBAAkBf,EAAKY,GAC5BZ,EAAIC,aAAeW,EAE3B,CAEA,OADAtO,KAAKmO,iBAAiBT,GAAK,EAAOO,GAC3BP,CACX,GAAC,CAAA9N,IAAA,wBAAAC,MACD,SAAsB6N,EAAKgB,EAAYC,EAAUV,EAAUW,GAGvD,IAFA,IAAMzF,EAAsBuE,EAAIvE,oBAC1BC,EAAQsE,EAAItE,MACT5G,EAAIkM,EAAYlM,GAAKmM,EAAUnM,IAAK,CACzC,IAAMhB,EAAa2H,EAAsB3G,EACzC4G,EAAM5G,GAAGqM,WAAWrN,EAAYyM,EAASzM,EAAaoN,GAC1D,CACJ,GAAC,CAAAhP,IAAA,qBAAAC,MACD,SAAmB6N,EAAKnC,EAAgBD,EAAc2C,EAAUW,GAG5D,IAFA,IAAM9D,EAAW,GACbgE,EAAc,EACTtN,EAAa+J,EAAgB/J,GAAc8J,EAAc9J,IAC9DsJ,EAASgE,KAAiB9O,KAAK8L,KAAKK,oBAExCuB,EAAItE,MAAQ0B,EAAS1I,OAAOsL,EAAItE,MACpC,GAAC,CAAAxJ,IAAA,qBAAAC,MACD,SAAmB6N,EAAKqB,GACpB,IAAK,IAAIvM,EAAI,EAAGA,EAAIuM,EAAavM,IAAK,CAClC,IAAMwK,EAAcU,EAAItE,MAAM5G,GAAGyK,aAC7BD,GACAhN,KAAKgM,QAAQkB,YAAYF,EAEjC,CACAU,EAAItE,MAAMgB,OAAO,EAAG2E,EACxB,GAAC,CAAAnP,IAAA,oBAAAC,MACD,SAAkB6N,EAAKnC,EAAgBD,EAAc2C,EAAUW,GAG3D,IAFA,IAAM9D,EAAW,GACbgE,EAAc,EACTtN,EAAa+J,EAAgB/J,GAAc8J,EAAc9J,IAC9DsJ,EAASgE,KAAiB9O,KAAK8L,KAAKK,oBAExCuB,EAAItE,MAAQsE,EAAItE,MAAMhH,OAAO0I,EACjC,GAAC,CAAAlL,IAAA,oBAAAC,MACD,SAAkB6N,EAAKqB,GAEnB,IADA,IAAMC,EAActB,EAAIC,YAAcoB,EAC7BvM,EAAI,EAAGA,EAAIuM,EAAavM,IAAK,CAClC,IAAMwK,EAAcU,EAAItE,MAAM4F,EAAcxM,GAAGyK,aAC3CD,GACAhN,KAAKgM,QAAQkB,YAAYF,EAEjC,CACAU,EAAItE,MAAMgB,OAAO4E,EAAaD,EAClC,GAAC,CAAAnP,IAAA,2BAAAC,MACD,SAAyB6N,EAAKuB,EAAgBC,EAAcC,GACpD1B,EAAkB2B,YAClBF,EAAezB,EAAkB2B,UAAUC,WAAWH,IAE1D,IAAMI,EAAYtP,KAAKgM,QAAQsD,UAC3BL,IAAmBK,EACnBtP,KAAKgM,QAAQuD,UAAYL,EAGzBI,EAAUE,mBAAmB,WAAYN,GAG7C,IADA,IAAIO,EAAYzP,KAAKgM,QAAQsD,UACpB9M,EAAIkL,EAAIC,YAAc,EAAGnL,GAAK,EAAGA,IAAK,CAC3C,IAAMkN,EAAOhC,EAAItE,MAAM5G,GACnB2M,EAAO3M,KACPkN,EAAKC,WAAWF,GAChBA,EAAYA,EAAUG,gBAE9B,CACJ,GAAC,CAAAhQ,IAAA,+BAAAC,MACD,SAA6B6N,EAAKmC,EAAkBC,GAChD,IAAMC,EAAc1D,SAASC,cAAc,OACvCmB,EAAkB2B,YAClBS,EAAmBpC,EAAkB2B,UAAUC,WAAWQ,IAE9DE,EAAYR,UAAYM,EACxB,IAAK,IAAIrN,EAAI,EAAGA,EAAIkL,EAAIC,YAAanL,IAAK,CACtC,IAAMkN,EAAOhC,EAAItE,MAAM5G,GACvB,GAAIsN,EAAWtN,GAAI,CACf,IAAM+B,EAASwL,EAAYC,WACrBhD,EAAc0C,EAAKzC,aACzBD,EAAYiD,WAAWC,aAAa3L,EAAQyI,GAC5C0C,EAAKC,WAAWpL,EACpB,CACJ,CACJ,GAAC,CAAA3E,IAAA,mBAAAC,MACD,SAAiB6N,EAAKuB,EAAgBhB,GAClC,IAAMkC,EAAK1C,EAAkB2C,IACvBzC,EAAcD,EAAIC,YAClBvE,EAAQsE,EAAItE,MACZD,EAAsBuE,EAAIvE,oBAC1BgG,EAAS,GAEXgB,EAAGE,QAEH,IADA,IAAIC,GAAa,EACR9N,EAAI,EAAGA,EAAImL,EAAanL,IAAK,CAClC,IAAMkN,EAAOtG,EAAM5G,GAGnB,GAFA2M,EAAO3M,IAAK,GACQkN,EAAKzC,aAKJyC,EAAKa,WAAW/N,EAAI2G,EAAqB8E,EAASzL,GAAIxC,KAAKb,aAAcgR,KAK9FhB,EAAO3M,IAAK,EACZ8N,GAAa,EACjB,CACIA,GACAtQ,KAAKwQ,yBAAyB9C,EAAKuB,EAAgBkB,EAAGM,QAAStB,GAInEgB,EAAGE,QAGH,IAFA,IAAIK,GAAiB,EACfZ,EAAa,GACVtN,EAAI,EAAGA,EAAImL,EAAanL,IAAK,CAClC,IAAMkN,EAAOtG,EAAM5G,GAEnB,GADAsN,EAAWtN,IAAK,GACZ2M,EAAO3M,GAIUkN,EAAKa,WAAW/N,EAAI2G,EAAqB8E,EAASzL,GAAIxC,KAAKb,aAAcgR,KAK9FL,EAAWtN,IAAK,EAChBkO,GAAiB,EACrB,CACIA,GACA1Q,KAAK2Q,6BAA6BjD,EAAKyC,EAAGM,QAASX,EAG/D,KAACrC,CAAA,CApMkB,GAsMvBA,EAAkB2B,UAA2C,QAA9BtG,EAAK8H,OAAOC,oBAAiC,IAAP/H,OAAgB,EAASA,EAAGgI,aAAa,kBAAmB,CAAEzB,WAAY,SAAAxP,GAAK,OAAIA,CAAK,IAC7J4N,EAAkB2C,IAAM,IAAIW,EAAAA,GAAc,I,mMCvc7BC,EAAY,SAAAC,IAAAlS,EAAAA,EAAAA,GAAAiS,EAAAC,GAAA,IAAAjS,GAAAC,EAAAA,EAAAA,GAAA+R,GACrB,SAAAA,EAAYE,GAAS,IAAA7R,GAAAC,EAAAA,EAAAA,GAAA,KAAA0R,IACjB3R,EAAAL,EAAAO,KAAA,KAAM2R,IACDC,cAAgB,IAAItF,EAAAA,GAAsBuF,EAAAA,EAAAA,GAAA/R,IAC/CA,EAAK2M,QAAU3M,EAAK8R,cAAcnF,QAClC,IACMqF,EADUhS,EAAKiS,SAASpO,cAAc6B,QACnBC,IAAI,IAIc,OAH3CuM,EAAAA,EAAAA,GAAclS,EAAK2M,QAASqF,GAC5BhS,EAAKmS,iBAAmB,GACxBnS,EAAKoS,YAAa,EAClBpS,EAAK2M,QAAQO,aAAa,iBAAiBlN,CAC/C,CAuFC,OAvFAM,EAAAA,EAAAA,GAAAqR,EAAA,EAAApR,IAAA,eAAAC,MACD,WACI,IAAA0N,EAAAA,EAAAA,IAAAmE,EAAAA,EAAAA,GAAAV,EAAAW,WAAA,qBAAApS,KAAA,MACI,OAAO,EAEX,IAAK,IAAIiD,EAAI,EAAGC,EAAMzC,KAAKwR,iBAAiBjP,OAAQC,EAAIC,EAAKD,IAAK,CAE9D,GADuBxC,KAAKwR,iBAAiBhP,GAC1BoP,eACf,OAAO,CAEf,CACA,OAAO,CACX,GAAC,CAAAhS,IAAA,UAAAC,MACD,YACI0N,EAAAA,EAAAA,IAAAmE,EAAAA,EAAAA,GAAAV,EAAAW,WAAA,gBAAApS,KAAA,MACA,IAAK,IAAIiD,EAAI,EAAGC,EAAMzC,KAAKwR,iBAAiBjP,OAAQC,EAAIC,EAAKD,IAAK,CACvCxC,KAAKwR,iBAAiBhP,GAC9BqP,SACnB,CACA7R,KAAKwR,iBAAmB,EAC5B,GAAC,CAAA5R,IAAA,aAAAC,MACD,WACI,OAAOG,KAAKgM,OAChB,GACA,CAAApM,IAAA,oBAAAC,MACA,WACI,OAAO,IAAIiS,EAAgB9R,KAAKsR,SAASpO,cAAelD,KAAKwR,iBACjE,GACA,CAAA5R,IAAA,oBAAAC,MACA,SAAkBkS,GACd/R,KAAKwR,iBAAiBQ,KAAKD,EAC/B,GACA,CAAAnS,IAAA,yBAAAC,MACA,SAAuBqI,GACnBlI,KAAKmR,cAAcc,uBAAuB/J,GAG1C,IAFA,IAAM0B,EAAkB5J,KAAKmR,cAActH,qBACrCC,EAAgB9J,KAAKmR,cAAcpH,mBAChCvI,EAAaoI,EAAiBpI,GAAcsI,EAAetI,IAAc,CACjExB,KAAKmR,cAAce,eAAe1Q,GAC1CyQ,uBAAuB/J,EAChC,CACA,IACMmJ,EADUrR,KAAKsR,SAASpO,cAAc6B,QACnBC,IAAI,IAE7B,OADAuM,EAAAA,EAAAA,GAAcvR,KAAKgM,QAASqF,IACrB,CACX,GAAC,CAAAzR,IAAA,YAAAC,MACD,SAAUqI,GACN,OAAOlI,KAAKmR,cAAcgB,UAAUjK,EACxC,GAAC,CAAAtI,IAAA,iBAAAC,MACD,SAAeqI,GAEX,OADAlI,KAAKyR,WAAavJ,EAAEkK,WACb,CACX,GAAC,CAAAxS,IAAA,iBAAAC,MACD,SAAeqI,GACX,OAAOlI,KAAKmR,cAAcvE,eAAe1E,EAC7C,GAAC,CAAAtI,IAAA,iBAAAC,MACD,SAAeqI,GACX,OAAOlI,KAAKmR,cAAcpE,eAAe7E,EAC7C,GAAC,CAAAtI,IAAA,kBAAAC,MACD,SAAgBqI,GACZ,OAAOlI,KAAKmR,cAAchE,gBAAgBjF,EAC9C,GAAC,CAAAtI,IAAA,kBAAAC,MACD,SAAgBqI,GACZ,OAAOlI,KAAKmR,cAAckB,gBAAgBnK,KAAM,CACpD,GAAC,CAAAtI,IAAA,kBAAAC,MACD,SAAgBqI,GACZ,OAAOlI,KAAKmR,cAAcvF,gBAAgB1D,EAC9C,GAAC,CAAAtI,IAAA,iBAAAC,MACD,SAAeqI,GACX,OAAOlI,KAAKmR,cAAcmB,eAAepK,EAC7C,GACA,CAAAtI,IAAA,gBAAAC,MACA,SAAc6N,GAEV,IADA,IAAM6E,EAAWvS,KAAKwR,iBAAiBgB,QAAO,SAAAT,GAAO,OAAIA,EAAQH,cAAc,IACtEpP,EAAI,EAAGC,EAAM8P,EAAShQ,OAAQC,EAAIC,EAAKD,IAAK,CACjD,IAAMiQ,EAAiBF,EAAS/P,GAChCiQ,EAAeC,cAAchF,GAC7B+E,EAAeE,aACnB,CACJ,GAAC,CAAA/S,IAAA,SAAAC,MACD,SAAO6N,GAEH1N,KAAK4S,oBAAoBlF,GACzB1N,KAAKgM,QAAQ6G,gBAAgB,UAAW7S,KAAKyR,WACjD,GAAC,CAAA7R,IAAA,sBAAAC,MACD,SAAoB6N,GAChB1N,KAAKmR,cAAc2B,YAAYpF,EAAIvO,aACvC,KAAC6R,CAAA,CAlGoB,C,SAAS+B,GAoGrBjB,EAAe,WACxB,SAAAA,EAAY5O,EAAe8P,IAAiB1T,EAAAA,EAAAA,GAAA,KAAAwS,GACxC9R,KAAKiT,eAAiB/P,EACtBlD,KAAKkT,YAAclT,KAAKiT,eAAelO,QAAQC,IAAI,IACnDhF,KAAKwR,iBAAmBwB,EACxBhT,KAAKmT,SAAW,KAChBnT,KAAKoT,iBAAmB,IAC5B,CA4CC,OA5CAzT,EAAAA,EAAAA,GAAAmS,EAAA,EAAAlS,IAAA,aAAAC,MACD,WACI,OAAKG,KAAKmT,SAGHnT,KAAKmT,SAASnH,QAFV,IAGf,GAAC,CAAApM,IAAA,aAAAC,MACD,SAAWmM,GACPhM,KAAKmT,UAAW/G,EAAAA,EAAAA,GAAkBJ,EACtC,GAAC,CAAApM,IAAA,mBAAAC,MACD,WACI,GACH,CAAAD,IAAA,kBAAAC,MACD,WACI,GACH,CAAAD,IAAA,yBAAAC,MACD,SAAuBqI,GACnBlI,KAAKkT,YAAclT,KAAKiT,eAAelO,QAAQC,IAAI,GACvD,GAAC,CAAApF,IAAA,aAAAC,MACD,SAAW2B,EAAYyM,EAAU9O,EAAcgR,GAE3C,IADA,IAAI9N,EAAS,GACJG,EAAI,EAAGC,EAAMzC,KAAKwR,iBAAiBjP,OAAQC,EAAIC,EAAKD,IAAK,CAE9DH,GADuBrC,KAAKwR,iBAAiBhP,GACpBqL,OAAO1O,EAAayK,gBAAiBpI,EAClE,CACA,OAAIxB,KAAKoT,mBAAqB/Q,IAI9BrC,KAAKoT,iBAAmB/Q,EACxB8N,EAAGkD,aAAa,sCAChBlD,EAAGkD,aAAaC,OAAOrF,IACvBkC,EAAGkD,aAAa,yBAChBlD,EAAGkD,aAAaC,OAAOtT,KAAKkT,cAC5B/C,EAAGkD,aAAa,SAChBlD,EAAGkD,aAAahR,GAChB8N,EAAGkD,aAAa,WACT,EACX,GAAC,CAAAzT,IAAA,aAAAC,MACD,SAAW2B,EAAYyM,GACfjO,KAAKmT,WACLnT,KAAKmT,SAASI,OAAOtF,GACrBjO,KAAKmT,SAASK,UAAUxT,KAAKkT,aAErC,KAACpB,CAAA,CAnDuB,GAqDf2B,EAAmB,SAAAC,IAAA3U,EAAAA,EAAAA,GAAA0U,EAAAC,GAAA,IAAAC,GAAA1U,EAAAA,EAAAA,GAAAwU,GAC5B,SAAAA,EAAYvC,GAAS,IAAA0C,GAAAtU,EAAAA,EAAAA,GAAA,KAAAmU,GAEjB,IACMI,GAFND,EAAAD,EAAApU,KAAA,KAAM2R,IACeI,SAASpO,cAAc6B,QACjBC,IAAI,KAEL,OAD1B4O,EAAKE,cAAgBD,EAAWE,aAChCH,EAAK5H,QAAQwH,UAAU,GAAGI,CAC9B,CAeC,OAdDjU,EAAAA,EAAAA,GAAA8T,EAAA,EAAA7T,IAAA,yBAAAC,MACA,SAAuBqI,GACnB,IACM2L,EADU7T,KAAKsR,SAASpO,cAAc6B,QACjBC,IAAI,KAE/B,OADAhF,KAAK8T,cAAgBD,EAAWE,cACzBxG,EAAAA,EAAAA,IAAAmE,EAAAA,EAAAA,GAAA+B,EAAA9B,WAAA,+BAAApS,KAAA,KAA6B2I,KAAM,CAC9C,GAAC,CAAAtI,IAAA,kBAAAC,MACD,SAAgBqI,GACZ,OAAOqF,EAAAA,EAAAA,IAAAmE,EAAAA,EAAAA,GAAA+B,EAAA9B,WAAA,wBAAApS,KAAA,KAAsB2I,IAAMA,EAAE8L,kBACzC,GACA,CAAApU,IAAA,sBAAAC,MACA,SAAoB6N,IAChBH,EAAAA,EAAAA,IAAAmE,EAAAA,EAAAA,GAAA+B,EAAA9B,WAAA,4BAAApS,KAAA,KAA0BmO,GAC1B1N,KAAKgM,QAAQiI,SAAS/R,KAAKuJ,IAAIiC,EAAInN,YAAaP,KAAK8T,eACzD,KAACL,CAAA,CAtB2B,CAASzC,GAwB5BkD,EAAkB,SAAAC,IAAApV,EAAAA,EAAAA,GAAAmV,EAAAC,GAAA,IAAAC,GAAAnV,EAAAA,EAAAA,GAAAiV,GAC3B,SAAAA,EAAYhD,GAAS,IAAAmD,GAAA/U,EAAAA,EAAAA,GAAA,KAAA4U,GAEjB,IAAMnP,GADNsP,EAAAD,EAAA7U,KAAA,KAAM2R,IACeI,SAASpO,cAAc6B,QACtC8O,EAAa9O,EAAQC,IAAI,KAI0C,OAHzEqP,EAAKC,aAAeT,EAAWU,YAC/BF,EAAKrI,QAAQO,aAAa,wBAC1B8H,EAAKrI,QAAQiI,SAAS,IACtB1C,EAAAA,EAAAA,GAAc8C,EAAKrI,QAASjH,EAAQC,IAAI,KAAiCqP,CAC7E,CAgBC,OAhBA1U,EAAAA,EAAAA,GAAAuU,EAAA,EAAAtU,IAAA,yBAAAC,MACD,SAAuBqI,GACnB,IAAMnD,EAAU/E,KAAKsR,SAASpO,cAAc6B,SAC5CwM,EAAAA,EAAAA,GAAcvR,KAAKgM,QAASjH,EAAQC,IAAI,KACxC,IAAM6O,EAAa9O,EAAQC,IAAI,KAE/B,OADAhF,KAAKsU,aAAeT,EAAWU,aACxBhH,EAAAA,EAAAA,IAAAmE,EAAAA,EAAAA,GAAAwC,EAAAvC,WAAA,+BAAApS,KAAA,KAA6B2I,KAAM,CAC9C,GAAC,CAAAtI,IAAA,kBAAAC,MACD,SAAgBqI,GACZ,OAAOqF,EAAAA,EAAAA,IAAAmE,EAAAA,EAAAA,GAAAwC,EAAAvC,WAAA,wBAAApS,KAAA,KAAsB2I,IAAMA,EAAEsM,mBACzC,GAAC,CAAA5U,IAAA,sBAAAC,MACD,SAAoB6N,IAChBH,EAAAA,EAAAA,IAAAmE,EAAAA,EAAAA,GAAAwC,EAAAvC,WAAA,4BAAApS,KAAA,KAA0BmO,GAC1B,IAAMpM,EAASY,KAAKyJ,IAAI+B,EAAIjN,aAAc,KAC1CT,KAAKgM,QAAQwH,UAAUlS,GACvBtB,KAAKgM,QAAQiI,SAASjU,KAAKsU,aAC/B,KAACJ,CAAA,CAzB0B,CAASlD,E,gKCpL3B+B,EAAQ,SAAA0B,IAAA1V,EAAAA,EAAAA,GAAAgU,EAAA0B,GAAA,IAAAzV,GAAAC,EAAAA,EAAAA,GAAA8T,GACjB,SAAAA,EAAY7B,GAAS,IAAA7R,EAGmB,OAHnBC,EAAAA,EAAAA,GAAA,KAAAyT,IACjB1T,EAAAL,EAAAO,KAAA,OACK+R,SAAWJ,EAChB7R,EAAKiS,SAASoD,iBAAetD,EAAAA,EAAAA,GAAA/R,IAAOA,CACxC,CAIC,OAJAM,EAAAA,EAAAA,GAAAoT,EAAA,EAAAnT,IAAA,UAAAC,MACD,WACIG,KAAKsR,SAASqD,mBAAmB3U,OACjCuN,EAAAA,EAAAA,IAAAmE,EAAAA,EAAAA,GAAAqB,EAAApB,WAAA,gBAAApS,KAAA,KACJ,KAACwT,CAAA,CATgB,C,SAAS6B,GAWjBC,EAAgB,oBAAAA,KAAAvV,EAAAA,EAAAA,GAAA,KAAAuV,EAAA,CA4BxB,OA5BwBlV,EAAAA,EAAAA,GAAAkV,EAAA,OAAAjV,IAAA,QAAAC,MACzB,SAAaiV,EAAQC,GACjBD,EAAOrI,aAAa,YAAa6G,OAAOyB,GAC5C,GAAC,CAAAnV,IAAA,OAAAC,MACD,SAAYiV,GACR,IAAME,EAAIF,EAAOG,aAAa,aAC9B,OAAU,OAAND,EACO,EAEJE,SAASF,EAAG,GACvB,GAAC,CAAApV,IAAA,UAAAC,MACD,SAAesV,EAAOC,GAGlB,IAFA,IAAM/S,EAAS,GACXgT,EAAY,EACTF,GAASA,IAAU9I,SAASiJ,MAC3BH,IAAUC,GAGVD,EAAMI,WAAaJ,EAAMK,eACzBnT,EAAOgT,KAAerV,KAAKyV,KAAKN,IAEpCA,EAAQA,EAAMO,cAGlB,IADA,IAAMV,EAAI,IAAIW,WAAWN,GAChB7S,EAAI,EAAGA,EAAI6S,EAAW7S,IAC3BwS,EAAExS,GAAKH,EAAOgT,EAAY7S,EAAI,GAElC,OAAOwS,CACX,KAACH,CAAA,CA5BwB,E,kFCZhBe,EAAmB,WAC5B,SAAAA,EAAY5N,IAAsB1I,EAAAA,EAAAA,GAAA,KAAAsW,GAC9B5V,KAAK6V,UAAY,KACjB7V,KAAK8V,QAAU,KACf9V,KAAK+V,cAAgB,KACrB/V,KAAKgW,YAAc,KACnBhW,KAAKiW,aAAe,KACpBjW,KAAKkW,YAAc,KACnBlW,KAAKmW,UAAY,KACjBnW,KAAKoW,YAAc,KACnBpW,KAAKqW,YAAc,KACnBrW,KAAKsW,oBAAsB,KAC3BtW,KAAKuW,aAAe,KACpBvW,KAAKwW,sBAAwBxO,CACjC,CAkEC,OAlEArI,EAAAA,EAAAA,GAAAiW,EAAA,EAAAhW,IAAA,cAAAC,MACD,SAAYqI,GACR,IAAIY,EACsB,QAAzBA,EAAK9I,KAAK6V,iBAA8B,IAAP/M,GAAyBA,EAAGvJ,KAAKS,KAAMkI,EAC7E,GAAC,CAAAtI,IAAA,YAAAC,MACD,SAAUqI,GACN,IAAIY,EACoB,QAAvBA,EAAK9I,KAAK8V,eAA4B,IAAPhN,GAAyBA,EAAGvJ,KAAKS,KAAMkI,EAC3E,GAAC,CAAAtI,IAAA,kBAAAC,MACD,SAAgBqI,GACZ,IAAIY,EAC0B,QAA7BA,EAAK9I,KAAK+V,qBAAkC,IAAPjN,GAAyBA,EAAGvJ,KAAKS,KAAMA,KAAKyW,8BAA8BvO,GACpH,GAAC,CAAAtI,IAAA,gBAAAC,MACD,SAAcqI,GACV,IAAIY,EACwB,QAA3BA,EAAK9I,KAAKgW,mBAAgC,IAAPlN,GAAyBA,EAAGvJ,KAAKS,KAAMA,KAAKyW,8BAA8BvO,GAClH,GAAC,CAAAtI,IAAA,iBAAAC,MACD,SAAeqI,GACX,IAAIY,EACyB,QAA5BA,EAAK9I,KAAKiW,oBAAiC,IAAPnN,GAAyBA,EAAGvJ,KAAKS,KAAMA,KAAKyW,8BAA8BvO,GACnH,GAAC,CAAAtI,IAAA,gBAAAC,MACD,SAAcqI,GACV,IAAIY,EACwB,QAA3BA,EAAK9I,KAAKkW,mBAAgC,IAAPpN,GAAyBA,EAAGvJ,KAAKS,KAAMA,KAAKyW,8BAA8BvO,GAClH,GAAC,CAAAtI,IAAA,cAAAC,MACD,SAAYqI,GACR,IAAIY,EACsB,QAAzBA,EAAK9I,KAAKmW,iBAA8B,IAAPrN,GAAyBA,EAAGvJ,KAAKS,KAAMA,KAAKyW,8BAA8BvO,GAChH,GAAC,CAAAtI,IAAA,gBAAAC,MACD,SAAcqI,GACV,IAAIY,EACwB,QAA3BA,EAAK9I,KAAKoW,mBAAgC,IAAPtN,GAAyBA,EAAGvJ,KAAKS,KAAMA,KAAKyW,8BAA8BvO,GAClH,GAAC,CAAAtI,IAAA,gBAAAC,MACD,SAAcqI,GACV,IAAIY,EACwB,QAA3BA,EAAK9I,KAAKqW,mBAAgC,IAAPvN,GAAyBA,EAAGvJ,KAAKS,KAAMA,KAAKyW,8BAA8BvO,GAClH,GAAC,CAAAtI,IAAA,wBAAAC,MACD,WACI,IAAIiJ,EACgC,QAAnCA,EAAK9I,KAAKsW,2BAAwC,IAAPxN,GAAyBA,EAAGvJ,KAAKS,KACjF,GAAC,CAAAJ,IAAA,iBAAAC,MACD,SAAeqI,GACX,IAAIY,EACyB,QAA5BA,EAAK9I,KAAKuW,oBAAiC,IAAPzN,GAAyBA,EAAGvJ,KAAKS,KAAMkI,EAChF,GAAC,CAAAtI,IAAA,gCAAAC,MACD,SAA8BqI,GAC1B,OAAIA,EAAE4M,OACK,CACH4B,MAAOxO,EAAEwO,MACT5B,OAAQ9U,KAAK2W,+BAA+BzO,EAAE4M,SAG/C5M,CACX,GAAC,CAAAtI,IAAA,iCAAAC,MACD,SAA+BiV,GAC3B,OAAOc,EAAoBgB,8BAA8B9B,EAAQ9U,KAAKwW,sBAC1E,IAAC,EAAA5W,IAAA,gCAAAC,MACD,SAAqCiV,EAAQ9M,GACzC,IAAM3F,EAASwU,OAAOC,OAAO,CAAC,EAAGhC,GAOjC,OANIzS,EAAOnC,WACPmC,EAAOnC,SAAW8H,EAAqBC,mCAAmC5F,EAAOnC,WAEjFmC,EAAOvC,QACPuC,EAAOvC,MAAQkI,EAAqB+O,6BAA6B1U,EAAOvC,QAErEuC,CACX,KAACuT,CAAA,CAhF2B,E,olBCGnBoB,EAAuB,SAAAC,IAAAlY,EAAAA,EAAAA,GAAAiY,EAAAC,GAAA,IAAAjY,GAAAC,EAAAA,EAAAA,GAAA+X,GAChC,SAAAA,IAAc,IAAA3X,EAmB8E,OAnB9EC,EAAAA,EAAAA,GAAA,KAAA0X,IACV3X,EAAAL,EAAAO,KAAA,OACK2X,QAAU,KACf7X,EAAK8X,sBAAwB,KAI7B9X,EAAK+X,WAAa/X,EAAKgY,UAAU,IAAIC,EAAAA,IAIrCjY,EAAKkY,SAAW,IAAIC,IAIpBnY,EAAKoY,uBAAyB,GAC9BpY,EAAKoY,uBAAuB,IAAiD,EAC7EpY,EAAKoY,uBAAuB,IAA4D,EACxFpY,EAAKoY,uBAAuB,IAAkE,EAC9FpY,EAAKoY,uBAAuB,IAAsD,EAAMpY,CAC5F,CAmGC,OAnGAM,EAAAA,EAAAA,GAAAqX,EAAA,EAAApX,IAAA,aAAAC,MACD,SAAW6X,EAAQC,EAAeC,GAAsB,IAAAhE,EAAA,KACpD5T,KAAKkX,QAAUQ,EACf1X,KAAKmX,sBAAwBS,EAAqB,IAClBC,EADkBC,GAAAC,EAAAA,EAAAA,GAC/BJ,GAAa,IAAhC,IAAAG,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAkC,KAAvBC,EAAIN,EAAAhY,MACPG,KAAKuX,SAASa,IAAID,EAAKE,KACvBC,EAAAA,EAAAA,IAAkB,IAAI9O,MAAM,kDAADpH,OAAmD+V,EAAKE,MAGvFrY,KAAKuX,SAASgB,IAAIJ,EAAKE,GAAIF,EAC/B,CAAC,OAAAK,GAAAV,EAAA5P,EAAAsQ,EAAA,SAAAV,EAAAW,GAAA,CACDzY,KAAK0Y,iBAAiB,GAItB1Y,KAAKqX,WAAUsB,EAAAA,EAAAA,KAAY,WACvB/E,EAAK8E,iBAAiB,EAC1B,KAIA1Y,KAAKqX,WAAUsB,EAAAA,EAAAA,KAAY,WACvB/E,EAAK8E,iBAAiB,EAC1B,KAIA1Y,KAAKqX,WAAUsB,EAAAA,EAAAA,KAAY,WACvB/E,EAAK8E,iBAAiB,EAC1B,GAAG,KACP,GAAC,CAAA9Y,IAAA,gBAAAC,MACD,WACI,IACgD+Y,EAD1CC,EAAqB,CAAC,EAAEC,GAAAf,EAAAA,EAAAA,GACG/X,KAAKoX,YAAU,IAAhD,IAAA0B,EAAAd,MAAAY,EAAAE,EAAAb,KAAAC,MAAkD,KAAAa,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA/Y,MAAA,GAAtCwY,EAAEU,EAAA,GAAEE,EAAYF,EAAA,GACkB,oBAA/BE,EAAaC,gBACpBL,EAAmBR,GAAMY,EAAaC,gBAE9C,CAAC,OAAAV,GAAAM,EAAA5Q,EAAAsQ,EAAA,SAAAM,EAAAL,GAAA,CACD,OAAOI,CACX,GAAC,CAAAjZ,IAAA,mBAAAC,MACD,SAAiBgZ,GAAoB,IACeM,EADfC,GAAArB,EAAAA,EAAAA,GACA/X,KAAKoX,YAAU,IAAhD,IAAAgC,EAAApB,MAAAmB,EAAAC,EAAAnB,KAAAC,MAAkD,KAAAmB,GAAAL,EAAAA,EAAAA,GAAAG,EAAAtZ,MAAA,GAAtCwY,EAAEgB,EAAA,GAAEJ,EAAYI,EAAA,GACqB,oBAAlCJ,EAAaK,kBACpBL,EAAaK,iBAAiBT,EAAmBR,GAEzD,CAAC,OAAAG,GAAAY,EAAAlR,EAAAsQ,EAAA,SAAAY,EAAAX,GAAA,CACL,GAAC,CAAA7Y,IAAA,MAAAC,MACD,SAAIwY,GAEA,OADArY,KAAKuZ,iBAAiBlB,GACfrY,KAAKoX,WAAWpS,IAAIqT,IAAO,IACtC,GAAC,CAAAzY,IAAA,2BAAAC,MACD,WAEIG,KAAK0Y,iBAAiB,EAC1B,GAAC,CAAA9Y,IAAA,uBAAAC,MACD,WAAuB,IAAAwU,EAAA,KACnBrU,KAAKqX,WAAUsB,EAAAA,EAAAA,KAAY,WACvBtE,EAAKqE,iBAAiB,EAC1B,GAAG,IACP,GAAC,CAAA9Y,IAAA,mBAAAC,MACD,SAAiB2Z,GACb,IAAIxZ,KAAKyX,uBAAuB+B,GAAhC,CAIAxZ,KAAKyX,uBAAuB+B,IAAiB,EAC7C,IAC8BC,EADxBC,EAAW1Z,KAAK2Z,yCAAyCH,GAAeI,GAAA7B,EAAAA,EAAAA,GACxD2B,GAAQ,IAA9B,IAAAE,EAAA5B,MAAAyB,EAAAG,EAAA3B,KAAAC,MAAgC,KAArB2B,EAAOJ,EAAA5Z,MACdG,KAAKuZ,iBAAiBM,EAAQxB,GAClC,CAAC,OAAAG,GAAAoB,EAAA1R,EAAAsQ,EAAA,SAAAoB,EAAAnB,GAAA,CALD,CAMJ,GAAC,CAAA7Y,IAAA,2CAAAC,MACD,SAAyC2Z,GACrC,IACoCM,EAD9BzX,EAAS,GAAG0X,GAAAhC,EAAAA,EAAAA,GACK/X,KAAKuX,UAAQ,IAApC,IAAAwC,EAAA/B,MAAA8B,EAAAC,EAAA9B,KAAAC,MAAsC,KAAxBC,GAAwBa,EAAAA,EAAAA,GAAAc,EAAAja,MAAA,GAApB,GACVsY,EAAKqB,gBAAkBA,GACvBnX,EAAO2P,KAAKmG,EAEpB,CAAC,OAAAK,GAAAuB,EAAA7R,EAAAsQ,EAAA,SAAAuB,EAAAtB,GAAA,CACD,OAAOpW,CACX,GAAC,CAAAzC,IAAA,mBAAAC,MACD,SAAiBwY,GACb,IAAMF,EAAOnY,KAAKuX,SAASvS,IAAIqT,GAC/B,GAAKF,EAAL,CAIA,GADAnY,KAAKuX,SAASyC,OAAO3B,IAChBrY,KAAKmX,wBAA0BnX,KAAKkX,QACrC,MAAM,IAAI1N,MAAM,8DAEpB,IACI,IAAMyQ,EAAWja,KAAKmX,sBAAsB+C,eAAe/B,EAAKgC,KAAMna,KAAKkX,SAC3ElX,KAAKoX,WAAWmB,IAAIJ,EAAKE,GAAI4B,GACY,oBAA9BA,EAASX,kBAA0D,IAAvBnB,EAAKqB,eACxDY,QAAQC,KAAK,wBAADjY,OAAyB+V,EAAKE,GAAE,oFAEpD,CACA,MAAOG,IACHF,EAAAA,EAAAA,IAAkBE,EACtB,CAdA,CAeJ,KAACxB,CAAA,CAxH+B,CAASsD,EAAAA,I,WCHzCC,EAA0C,SAAUC,EAAY1F,EAAQlV,EAAKuY,GAC7E,IAA2HsC,EAAvHC,EAAIC,UAAUpY,OAAQyS,EAAI0F,EAAI,EAAI5F,EAAkB,OAATqD,EAAgBA,EAAOtB,OAAO+D,yBAAyB9F,EAAQlV,GAAOuY,EACrH,GAAuB,kBAAZ0C,SAAoD,oBAArBA,QAAQC,SAAyB9F,EAAI6F,QAAQC,SAASN,EAAY1F,EAAQlV,EAAKuY,QACpH,IAAK,IAAI3V,EAAIgY,EAAWjY,OAAS,EAAGC,GAAK,EAAGA,KAASiY,EAAID,EAAWhY,MAAIwS,GAAK0F,EAAI,EAAID,EAAEzF,GAAK0F,EAAI,EAAID,EAAE3F,EAAQlV,EAAKoV,GAAKyF,EAAE3F,EAAQlV,KAASoV,GAChJ,OAAO0F,EAAI,GAAK1F,GAAK6B,OAAOkE,eAAejG,EAAQlV,EAAKoV,GAAIA,CAChE,EACIgG,GAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUpG,EAAQlV,GAAOsb,EAAUpG,EAAQlV,EAAKqb,EAAa,CACxE,EACIE,GAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAU9b,GAAS,IAAM+b,EAAKL,EAAUM,KAAKhc,GAAS,CAAE,MAAOqI,GAAKwT,EAAOxT,EAAI,CAAE,CAC1F,SAAS4T,EAASjc,GAAS,IAAM+b,EAAKL,EAAiB,MAAE1b,GAAS,CAAE,MAAOqI,GAAKwT,EAAOxT,EAAI,CAAE,CAC7F,SAAS0T,EAAKvZ,GAJlB,IAAexC,EAIawC,EAAO6V,KAAOuD,EAAQpZ,EAAOxC,QAJ1CA,EAIyDwC,EAAOxC,MAJhDA,aAAiByb,EAAIzb,EAAQ,IAAIyb,GAAE,SAAUG,GAAWA,EAAQ5b,EAAQ,KAIjBkc,KAAKJ,EAAWG,EAAW,CAC7GF,GAAML,EAAYA,EAAUS,MAAMZ,EAASC,GAAc,KAAKQ,OAClE,GACJ,EA0CII,GAAY,EACVC,GAAS,WACX,SAAAA,EAAYC,EAAOhZ,EAAWiZ,EAAMC,EAAaC,IAAmBhd,EAAAA,EAAAA,GAAA,KAAA4c,GAChElc,KAAKmc,MAAQA,EACbnc,KAAKmD,UAAYA,EACjBnD,KAAKoc,KAAOA,EACZpc,KAAKqc,YAAcA,EACnBrc,KAAKsc,kBAAoBA,CAC7B,CAQC,OARA3c,EAAAA,EAAAA,GAAAuc,EAAA,EAAAtc,IAAA,UAAAC,MACD,YACIgS,EAAAA,EAAAA,IAAQ7R,KAAKsc,mBACbtc,KAAKmc,MAAMI,mBACPvc,KAAKqc,aACLrc,KAAKoc,KAAKvK,UAEd7R,KAAKmD,UAAU0O,SACnB,KAACqK,CAAA,CAfU,GAiBXM,GAAgB,SAAAvF,IAAAlY,EAAAA,EAAAA,GAAAyd,EAAAvF,GAAA,IAAAjY,GAAAC,EAAAA,EAAAA,GAAAud,GAKhB,SAAAA,EAAYC,EAAYC,EAAUC,EAAyB/E,EAAsBgF,EAAmBC,EAAgBC,EAAmBC,EAAcC,EAAqBC,EAAsBC,EAA8BC,GAAyB,IAAA9d,GAAAC,EAAAA,EAAAA,GAAA,KAAAkd,IACnPnd,EAAAL,EAAAO,KAAA,OACK2d,6BAA+BA,EAEpC7d,EAAK+d,eAAiB,IAAIC,EAAAA,GAC1Bhe,EAAKie,eAAiBje,EAAKgY,UAAU,IAAIL,GACzC3X,EAAKke,cAAgBle,EAAKgY,UAAU,IAAImG,EAAAA,IACxCne,EAAKoe,aAAepe,EAAKke,cAAc7G,MACvCrX,EAAKqe,yBAA2Bre,EAAKgY,UAAU,IAAImG,EAAAA,GAAQ,CAAEG,cAAete,EAAK+d,kBACjF/d,EAAKue,wBAA0Bve,EAAKqe,yBAAyBhH,MAC7DrX,EAAKwe,0BAA4Bxe,EAAKgY,UAAU,IAAImG,EAAAA,GAAQ,CAAEG,cAAete,EAAK+d,kBAClF/d,EAAKye,yBAA2Bze,EAAKwe,0BAA0BnH,MAC/DrX,EAAK0e,uCAAyC1e,EAAKgY,UAAU,IAAImG,EAAAA,GAAQ,CAAEG,cAAete,EAAK+d,kBAC/F/d,EAAK2e,sCAAwC3e,EAAK0e,uCAAuCrH,MACzFrX,EAAK4e,yBAA2B5e,EAAKgY,UAAU,IAAImG,EAAAA,GAAQ,CAAEG,cAAete,EAAK+d,kBACjF/d,EAAK6e,wBAA0B7e,EAAK4e,yBAAyBvH,MAC7DrX,EAAK8e,6BAA+B9e,EAAKgY,UAAU,IAAImG,EAAAA,GAAQ,CAAEG,cAAete,EAAK+d,kBACrF/d,EAAK+e,4BAA8B/e,EAAK8e,6BAA6BzH,MACrErX,EAAKgf,wBAA0Bhf,EAAKgY,UAAU,IAAImG,EAAAA,GAAQ,CAAEG,cAAete,EAAK+d,kBAChF/d,EAAKif,uBAAyBjf,EAAKgf,wBAAwB3H,MAC3DrX,EAAKkf,0BAA4Blf,EAAKgY,UAAU,IAAImG,EAAAA,GAAQ,CAAEG,cAAete,EAAK+d,kBAClF/d,EAAKmf,yBAA2Bnf,EAAKkf,0BAA0B7H,MAC/DrX,EAAKof,kBAAoBpf,EAAKgY,UAAU,IAAImG,EAAAA,GAAQ,CAAEG,cAAete,EAAK+d,kBAC1E/d,EAAKqf,iBAAmBrf,EAAKof,kBAAkB/H,MAC/CrX,EAAKsf,2BAA6Btf,EAAKgY,UAAU,IAAImG,EAAAA,GAAQ,CAAEG,cAAete,EAAK+d,kBACnF/d,EAAKuf,0BAA4Bvf,EAAKsf,2BAA2BjI,MACjErX,EAAKwf,4BAA8Bxf,EAAKgY,UAAU,IAAImG,EAAAA,GAAQ,CAAEG,cAAete,EAAK+d,kBACpF/d,EAAKyf,2BAA6Bzf,EAAKwf,4BAA4BnI,MACnErX,EAAK0f,0BAA4B1f,EAAKgY,UAAU,IAAI2H,GAAmB3f,EAAKie,eAAgBje,EAAK+d,iBACjG/d,EAAK4f,yBAA2B5f,EAAK0f,0BAA0BrI,MAC/DrX,EAAK6f,mBAAqB7f,EAAKgY,UAAU,IAAImG,EAAAA,GAAQ,CAAEG,cAAete,EAAK+d,kBAC3E/d,EAAK8f,kBAAoB9f,EAAK6f,mBAAmBxI,MACjDrX,EAAK+f,iBAAmB/f,EAAKgY,UAAU,IAAIgI,GAAoB,CAAE1B,cAAete,EAAK+d,kBACrF/d,EAAKigB,qBAAuBjgB,EAAK+f,iBAAiBG,kBAClDlgB,EAAKmgB,oBAAsBngB,EAAK+f,iBAAiBK,mBACjDpgB,EAAKqgB,mBAAqBrgB,EAAKgY,UAAU,IAAIgI,GAAoB,CAAE1B,cAAete,EAAK+d,kBACvF/d,EAAKsgB,uBAAyBtgB,EAAKqgB,mBAAmBH,kBACtDlgB,EAAKugB,sBAAwBvgB,EAAKqgB,mBAAmBD,mBACrDpgB,EAAKwgB,YAAcxgB,EAAKgY,UAAU,IAAI2H,GAAmB3f,EAAKie,eAAgBje,EAAK+d,iBACnF/d,EAAKygB,WAAazgB,EAAKwgB,YAAYnJ,MACnCrX,EAAK0gB,WAAa1gB,EAAKgY,UAAU,IAAI2H,GAAmB3f,EAAKie,eAAgBje,EAAK+d,iBAClF/d,EAAK2gB,UAAY3gB,EAAK0gB,WAAWrJ,MACjCrX,EAAK4gB,uBAAyB5gB,EAAKgY,UAAU,IAAI2H,GAAmB3f,EAAKie,eAAgBje,EAAK+d,iBAC9F/d,EAAK6gB,sBAAwB7gB,EAAK4gB,uBAAuBvJ,MACzDrX,EAAK8gB,qBAAuB9gB,EAAKgY,UAAU,IAAI2H,GAAmB3f,EAAKie,eAAgBje,EAAK+d,iBAC5F/d,EAAK+gB,oBAAsB/gB,EAAK8gB,qBAAqBzJ,MACrDrX,EAAKghB,YAAchhB,EAAKgY,UAAU,IAAI2H,GAAmB3f,EAAKie,eAAgBje,EAAK+d,iBACnF/d,EAAKihB,WAAajhB,EAAKghB,YAAY3J,MACnCrX,EAAKkhB,WAAalhB,EAAKgY,UAAU,IAAI2H,GAAmB3f,EAAKie,eAAgBje,EAAK+d,iBAClF/d,EAAK8W,UAAY9W,EAAKkhB,WAAW7J,MACjCrX,EAAKmhB,aAAenhB,EAAKgY,UAAU,IAAI2H,GAAmB3f,EAAKie,eAAgBje,EAAK+d,iBACpF/d,EAAK6W,YAAc7W,EAAKmhB,aAAa9J,MACrCrX,EAAKohB,aAAephB,EAAKgY,UAAU,IAAI2H,GAAmB3f,EAAKie,eAAgBje,EAAK+d,iBACpF/d,EAAK+W,YAAc/W,EAAKohB,aAAa/J,MACrCrX,EAAKqhB,aAAerhB,EAAKgY,UAAU,IAAI2H,GAAmB3f,EAAKie,eAAgBje,EAAK+d,iBACpF/d,EAAKgX,YAAchX,EAAKqhB,aAAahK,MACrCrX,EAAKshB,qBAAuBthB,EAAKgY,UAAU,IAAI2H,GAAmB3f,EAAKie,eAAgBje,EAAK+d,iBAC5F/d,EAAKiX,oBAAsBjX,EAAKshB,qBAAqBjK,MACrDrX,EAAKuhB,kBAAoBvhB,EAAKgY,UAAU,IAAI2H,GAAmB3f,EAAKie,eAAgBje,EAAK+d,iBACzF/d,EAAKwhB,iBAAmBxhB,EAAKuhB,kBAAkBlK,MAC/CrX,EAAKyhB,eAAiBzhB,EAAKgY,UAAU,IAAI2H,GAAmB3f,EAAKie,eAAgBje,EAAK+d,iBACtF/d,EAAK0W,cAAgB1W,EAAKyhB,eAAepK,MACzCrX,EAAK0hB,aAAe1hB,EAAKgY,UAAU,IAAI2H,GAAmB3f,EAAKie,eAAgBje,EAAK+d,iBACpF/d,EAAK2W,YAAc3W,EAAK0hB,aAAarK,MACrCrX,EAAK2hB,cAAgB3hB,EAAKgY,UAAU,IAAI2H,GAAmB3f,EAAKie,eAAgBje,EAAK+d,iBACrF/d,EAAK4W,aAAe5W,EAAK2hB,cAActK,MACvCrX,EAAK4hB,cAAgB5hB,EAAKgY,UAAU,IAAI2H,GAAmB3f,EAAKie,eAAgBje,EAAK+d,iBACrF/d,EAAKkX,aAAelX,EAAK4hB,cAAcvK,MACvCrX,EAAK6hB,SAAW7hB,EAAKgY,UAAU,IAAI2H,GAAmB3f,EAAKie,eAAgBje,EAAK+d,iBAChF/d,EAAKyW,QAAUzW,EAAK6hB,SAASxK,MAC7BrX,EAAK8hB,WAAa9hB,EAAKgY,UAAU,IAAI2H,GAAmB3f,EAAKie,eAAgBje,EAAK+d,iBAClF/d,EAAKwW,UAAYxW,EAAK8hB,WAAWzK,MACjCrX,EAAK+hB,wBAA0B/hB,EAAKgY,UAAU,IAAImG,EAAAA,GAAQ,CAAEG,cAAete,EAAK+d,kBAChF/d,EAAKgiB,uBAAyBhiB,EAAK+hB,wBAAwB1K,MAC3DrX,EAAKiiB,mBAAqBjiB,EAAKgY,UAAU,IAAImG,EAAAA,GAAQ,CAAEG,cAAete,EAAK+d,kBAC3E/d,EAAKkiB,kBAAoBliB,EAAKiiB,mBAAmB5K,MACjDrX,EAAKmiB,sBAAwBniB,EAAKgY,UAAU,IAAImG,EAAAA,GAAQ,CAAEG,cAAete,EAAK+d,kBAC9E/d,EAAKoiB,qBAAuBpiB,EAAKmiB,sBAAsB9K,MACvDrX,EAAKqiB,wBAA0BriB,EAAKgY,UAAU,IAAImG,EAAAA,GAAQ,CAAEG,cAAete,EAAK+d,kBAChF/d,EAAKsiB,uBAAyBtiB,EAAKqiB,wBAAwBhL,MAC3DrX,EAAKuiB,SAAW,IAAIpK,IACpBnY,EAAKwiB,eAAiB,KACtBxiB,EAAKyiB,2BAA6BziB,EAAK0iB,8BACvCnF,EAAkBoF,uBAClB,IAgCIrK,EAhCE5S,EAAU8R,OAAOC,OAAO,CAAC,EAAG4F,GAClCrd,EAAK4iB,YAAcxF,EACnBpd,EAAK6iB,wBAA0Bnd,EAAQod,8BAChCpd,EAAQod,uBACf9iB,EAAK+iB,MAASnG,GACd5c,EAAKgjB,yBAA2B,CAAC,EACjChjB,EAAKijB,wBAA0B,CAAC,EAChCjjB,EAAKkjB,eAAiB5F,EAAwB6F,cAC9CnjB,EAAK4T,eAAiB5T,EAAKgY,UAAUhY,EAAKojB,qBAAqB9F,EAAwB+F,iBAAkB,EAAO3d,EAASkY,IACzH5d,EAAKgY,UAAUhY,EAAK4T,eAAe0P,aAAY,SAACza,GAC5C7I,EAAKkf,0BAA0BqE,KAAK1a,GACpC,IAAMnD,EAAU1F,EAAK4T,eAAelO,QACpC,GAAImD,EAAEwE,WAAW,KAAoC,CACjD,IAAMmH,EAAa9O,EAAQC,IAAI,KAC/B3F,EAAK6f,mBAAmB0D,KAAK/O,EACjC,CACJ,KACAxU,EAAKwjB,mBAAqBxjB,EAAKgY,UAAUyF,EAAkBgG,aAAazjB,EAAK4iB,cAC7E5iB,EAAK0jB,qBAAuB/F,EAC5B3d,EAAK2jB,mBAAqBpG,EAC1Bvd,EAAK4jB,gBAAkBpG,EACvBxd,EAAK6jB,cAAgBnG,EACrB1d,EAAKgY,UAAU,IAAI8L,IAAwB/R,EAAAA,EAAAA,GAAA/R,GAAOA,EAAKwjB,qBACvDxjB,EAAKgY,UAAU,IAAI+L,IAAiBhS,EAAAA,EAAAA,GAAA/R,GAAOA,EAAKwjB,mBAAoB1F,IACpE9d,EAAK8X,sBAAwBS,EAAqByL,YAAY,IAAIC,EAAAA,EAAkB,CAACC,EAAAA,GAAoBlkB,EAAKwjB,sBAC9GxjB,EAAKmkB,WAAa,KAClBnkB,EAAKokB,cAAgB,IAAIC,GAA6BjH,GACtDpd,EAAKgY,UAAUhY,EAAKokB,cAAcE,UAAS,WACvCtkB,EAAKqgB,mBAAmBkE,SAASvkB,EAAKokB,cAAcI,WACxD,KACAxkB,EAAKykB,gBAAkB,CAAC,EACxBzkB,EAAK0kB,gBAAkB,CAAC,EAGpBpM,EADArV,MAAM0hB,QAAQrH,EAAwBhF,eACtBgF,EAAwBhF,cAGxBsM,EAAAA,GAAyBC,yBAE7C7kB,EAAKie,eAAe6G,YAAU/S,EAAAA,EAAAA,GAAA/R,GAAOsY,EAAetY,EAAK8X,uBAAuB,IAChBU,EADgBC,GAAAC,EAAAA,EAAAA,GAC3DkM,EAAAA,GAAyBG,oBAAkB,QAAAC,EAAA,WAAE,IAAvDC,EAAMzM,EAAAhY,MACb,GAAIR,EAAKuiB,SAASxJ,IAAIkM,EAAOjM,IAC6D,OAAtFC,EAAAA,EAAAA,IAAkB,IAAI9O,MAAM,4CAADpH,OAA6CkiB,EAAOjM,MAAO,WAG1F,IAAMkM,EAAiB,IAAIC,EAAAA,EAAqBF,EAAOjM,GAAIiM,EAAOG,MAAOH,EAAOI,OAAOC,EAAAA,EAAAA,IAAoBL,EAAOM,eAAe,WAC7H,OAAOvlB,EAAK8X,sBAAsB0N,gBAAe,SAACC,GAC9C,OAAOtJ,QAAQC,QAAQ6I,EAAOS,iBAAiBD,GAAQ1T,EAAAA,EAAAA,GAAA/R,GAAQ,MACnE,GACJ,GAAGA,EAAKwjB,oBACRxjB,EAAKuiB,SAASrJ,IAAIgM,EAAelM,GAAIkM,EACzC,EAXA,IAAAzM,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAAmM,GAWC,OAAA7L,GAAAV,EAAA5P,EAAAsQ,EAAA,SAAAV,EAAAW,GAAA,CACD,IAAMuM,EAAoB,WACtB,OAAQ3lB,EAAK4T,eAAelO,QAAQC,IAAI,KACjC3F,EAAK4T,eAAelO,QAAQC,IAAI,IAAsCigB,OACjF,EAgC4C,OA/B5C5lB,EAAKgY,UAAU,IAAI6N,EAAIC,oBAAoB9lB,EAAK4iB,YAAa,CACzDmD,YAAa,WAAe,EAC5BC,WAAY,SAAAnd,GACR,GAAK8c,IAAL,CAGA,IAAMlQ,EAASzV,EAAKimB,uBAAuBpd,EAAEqd,QAASrd,EAAEsd,UACzC,OAAX1Q,QAA8B,IAAXA,OAAoB,EAASA,EAAO5U,WACvDb,EAAKomB,oBAAoB3Q,EAAO5U,SAHpC,CAKJ,EACAwlB,OAAQ,SAACxd,GAAC,OAAKiT,IAAS/J,EAAAA,EAAAA,GAAA/R,QAAO,OAAQ,GAAMsmB,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAA/Q,EAAA,OAAA6Q,EAAAA,EAAAA,KAAAG,MAAA,SAAAxU,GAAA,cAAAA,EAAAyU,KAAAzU,EAAAuK,MAAA,UACtCmJ,IAAqB,CAAF1T,EAAAuK,KAAA,eAAAvK,EAAA0U,OAAA,iBAGG,GAA3BhmB,KAAKimB,sBACA/d,EAAEge,aAAc,CAAF5U,EAAAuK,KAAA,eAAAvK,EAAA0U,OAAA,kBAIJ,QADTlR,EAAS9U,KAAKslB,uBAAuBpd,EAAEqd,QAASrd,EAAEsd,gBACtB,IAAX1Q,OAAoB,EAASA,EAAO5U,WACvDF,KAAK4gB,kBAAkBgC,KAAK,CAAE1iB,SAAU4U,EAAO5U,SAAUwW,MAAOxO,IACnE,wBAAAoJ,EAAA6U,OAAA,GAAAN,EAAA,SACH,EACFO,YAAa,WACT/mB,EAAK4mB,qBACT,EACAI,UAAW,WACPhnB,EAAK4mB,qBACT,KAEJ5mB,EAAK2jB,mBAAmBsD,eAAalV,EAAAA,EAAAA,GAAA/R,IAAOA,CAChD,CA6JC,OA7JAM,EAAAA,EAAAA,GAAA6c,EAAA,EAAA5c,IAAA,iBAAAoF,IA/KD,WACI,OAAOhF,KAAKiT,eAAeyP,cAC/B,GAAC,CAAA9iB,IAAA,2BAAAC,MA8KD,SAAyB0mB,GACrB,IAAIzd,EACuB,QAA1BA,EAAK9I,KAAKwjB,kBAA+B,IAAP1a,GAAyBA,EAAGsT,KAAKoK,yBAAyBD,EACjG,GAAC,CAAA3mB,IAAA,uBAAAC,MACD,SAAqB6iB,EAAgB3d,EAASkY,GAC1C,OAAO,IAAIwJ,EAAAA,EAAoB/D,EAAgB3d,EAAS/E,KAAKiiB,YAAahF,EAC9E,GAAC,CAAArd,IAAA,QAAAC,MACD,WACI,OAAOG,KAAK0mB,gBAAkB,IAAM1mB,KAAKoiB,GAC7C,GAAC,CAAAxiB,IAAA,gBAAAC,MACD,WACI,OAAO8mB,EAAAA,EAAwBC,WACnC,GAAC,CAAAhnB,IAAA,UAAAC,MACD,WACIG,KAAKgjB,mBAAmB6D,iBAAiB7mB,MACzCA,KAAKyjB,cAAc5R,UACnB7R,KAAK4hB,SAASkF,QACd9mB,KAAK8jB,gBAAkB,CAAC,EACxB9jB,KAAK+jB,gBAAkB,CAAC,EACxB/jB,KAAK+mB,yBACL/mB,KAAKgnB,wBAAwBhnB,KAAKinB,gBAClCjnB,KAAKud,cAAcqF,QACnBrV,EAAAA,EAAAA,IAAAmE,EAAAA,EAAAA,GAAA8K,EAAA7K,WAAA,gBAAApS,KAAA,KACJ,GAAC,CAAAK,IAAA,sBAAAC,MACD,SAAoBqnB,GAChB,OAAOlnB,KAAKmX,sBAAsB0N,eAAeqC,EACrD,GAAC,CAAAtnB,IAAA,gBAAAC,MACD,SAAcsnB,GACVnnB,KAAKiT,eAAemU,cAAcD,GAAc,CAAC,EACrD,GAAC,CAAAvnB,IAAA,aAAAC,MACD,WACI,OAAOG,KAAKiT,eAAelO,OAC/B,GAAC,CAAAnF,IAAA,YAAAC,MACD,SAAUwY,GACN,OAAOrY,KAAKiT,eAAelO,QAAQC,IAAIqT,EAC3C,GAAC,CAAAzY,IAAA,gBAAAC,MACD,WACI,OAAOG,KAAKiT,eAAeoU,eAC/B,GAAC,CAAAznB,IAAA,4BAAAC,MACD,WACI,OAAOG,KAAKkiB,uBAChB,GAAC,CAAAtiB,IAAA,8BAAAC,MACD,SAA4BK,GACxB,OAAKF,KAAKwjB,WAGH8D,EAAAA,EAAeC,kBAAkBvnB,KAAKwjB,WAAWrH,MAAOnc,KAAKiT,eAAelO,QAAQC,IAAI,KAAwC9E,GAF5H,IAGf,GAAC,CAAAN,IAAA,WAAAC,MACD,WAAyB,IAAhBkF,EAAO4V,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,KACf,IAAK3a,KAAKwjB,WACN,MAAO,GAEX,IAAMgE,KAAeziB,IAAWA,EAAQyiB,aACpCC,EAAgB,EAOpB,OANI1iB,GAAWA,EAAQ2iB,YAAqC,OAAvB3iB,EAAQ2iB,WACzCD,EAAgB,EAEX1iB,GAAWA,EAAQ2iB,YAAqC,SAAvB3iB,EAAQ2iB,aAC9CD,EAAgB,GAEbznB,KAAKwjB,WAAWrH,MAAMwL,SAASF,EAAeD,EACzD,GAAC,CAAA5nB,IAAA,WAAAC,MACD,SAAS+nB,GACA5nB,KAAKwjB,YAGVxjB,KAAKwjB,WAAWrH,MAAMyH,SAASgE,EACnC,GAAC,CAAAhoB,IAAA,WAAAC,MACD,WACI,OAAKG,KAAKwjB,WAGHxjB,KAAKwjB,WAAWrH,MAFZ,IAGf,GAAC,CAAAvc,IAAA,WAAAC,MACD,WAAwB,IACdsc,EADKxB,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,KAEd,IAAwB,OAApB3a,KAAKwjB,YAAiC,OAAVrH,MAI5Bnc,KAAKwjB,YAAcxjB,KAAKwjB,WAAWrH,QAAUA,GAAjD,CAIA,IAAM0L,EAAe7nB,KAAK6nB,eACpBC,EAAgB9nB,KAAKinB,eAC3BjnB,KAAK+nB,aAAa5L,GACd0L,GAAgB7nB,KAAKgoB,YACrBhoB,KAAKioB,QAET,IAAM/f,EAAI,CACNggB,YAAaJ,EAAgBA,EAAcK,IAAM,KACjDC,YAAajM,EAAQA,EAAMgM,IAAM,MAErCnoB,KAAK+mB,yBACL/mB,KAAKye,kBAAkBmE,KAAK1a,GAC5BlI,KAAKgnB,wBAAwBc,GAC7B9nB,KAAKsd,eAAe+K,sBAdpB,CAeJ,GAAC,CAAAzoB,IAAA,yBAAAC,MACD,WAEI,GADAG,KAAKqiB,yBAA2B,CAAC,EAC7BriB,KAAKsiB,wBAAyB,CAC9B,IAAK,IAAMgG,KAAkBtoB,KAAKsiB,wBAAyB,CACvD,IAAMiG,EAAWvoB,KAAKsiB,wBAAwBgG,GAC9C,IAAK,IAAME,KAAWD,EAClBvoB,KAAKyoB,sBAAsBH,EAAiB,IAAME,EAE1D,CACAxoB,KAAKsiB,wBAA0B,CAAC,CACpC,CACJ,GAAC,CAAA1iB,IAAA,mBAAAC,MACD,WACI,OAAKG,KAAKwjB,WAGHxjB,KAAKwjB,WAAWrgB,UAAUulB,mBAFtB,EAGf,GAAC,CAAA9oB,IAAA,yCAAAC,MACD,WACI,OAAKG,KAAKwjB,WAGHxjB,KAAKwjB,WAAWrgB,UAAUwlB,yCAFtB,EAGf,GAAC,CAAA/oB,IAAA,iBAAAC,MACD,WACI,OAAKG,KAAKwjB,WAGHxjB,KAAKwjB,WAAWrgB,UAAUjE,WAAW0pB,iBAFjC,EAGf,GAAC,CAAAhpB,IAAA,sBAAAC,MASD,SAAoB2B,GAAsC,IAA1BC,EAAgBkZ,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,IAAAA,UAAA,GAC5C,OAAK3a,KAAKwjB,WAGHhH,EAAiBqM,8BAA8B7oB,KAAKwjB,WAAYhiB,EAAY,EAAGC,IAF1E,CAGhB,GAAC,CAAA7B,IAAA,oBAAAC,MACD,SAAkB2B,EAAYoD,GAC1B,OAAK5E,KAAKwjB,WAGHhH,EAAiBqM,8BAA8B7oB,KAAKwjB,WAAYhiB,EAAYoD,GAAQ,IAF/E,CAGhB,GAAC,CAAAhF,IAAA,yBAAAC,MASD,SAAuB2B,GAAsC,IAA1BC,EAAgBkZ,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,IAAAA,UAAA,GAC/C,OAAK3a,KAAKwjB,WAGHhH,EAAiBsM,gCAAgC9oB,KAAKwjB,WAAYhiB,EAAY,EAAGC,IAF5E,CAGhB,GAAC,CAAA7B,IAAA,iBAAAC,MACD,SAAekC,EAAQwC,GACnB,IAAIuE,EACuB,QAA1BA,EAAK9I,KAAKwjB,kBAA+B,IAAP1a,GAAyBA,EAAG3F,UAAU4lB,eAAehnB,EAAOinB,KAAI,SAAAhU,GAAC,OAAIiU,EAAAA,EAAMC,KAAKlU,EAAE,IAAGzQ,EAC5H,GAAC,CAAA3E,IAAA,+BAAAC,MACD,SAA6BspB,GACzB,IAAKnpB,KAAKwjB,WACN,OAAO2F,EAAYvkB,OAEvB,IAAM1E,EAAWF,KAAKwjB,WAAWrH,MAAMiN,iBAAiBD,GAClDE,EAAUrpB,KAAKwjB,WAAWrH,MAAMmN,aAAaD,QACnD,OAAOE,EAAAA,EAAcC,wBAAwBxpB,KAAKwjB,WAAWrH,MAAMsN,eAAevpB,EAASsB,YAAatB,EAAS0E,OAAQykB,GAAW,CACxI,GAAC,CAAAzpB,IAAA,cAAAC,MACD,WACI,OAAKG,KAAKwjB,WAGHxjB,KAAKwjB,WAAWrgB,UAAUumB,cAFtB,IAGf,GAAC,CAAA9pB,IAAA,cAAAC,MACD,SAAYK,GAA0B,IAAhBqE,EAAMoW,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,MAC3B,GAAK3a,KAAKwjB,WAAV,CAGA,IAAK3e,EAAAA,EAAS8kB,YAAYzpB,GACtB,MAAM,IAAIsJ,MAAM,qBAEpBxJ,KAAKwjB,WAAWrgB,UAAUymB,cAAcrlB,EAAQ,CAAC,CACzCslB,yBAA0B3pB,EAASsB,WACnCsoB,qBAAsB5pB,EAAS0E,OAC/BmlB,mBAAoB7pB,EAASsB,WAC7BwoB,eAAgB9pB,EAAS0E,SARjC,CAUJ,GAAC,CAAAhF,IAAA,mBAAAC,MACD,SAAiBoqB,EAAYC,EAAcC,EAAkBC,GACzD,GAAKpqB,KAAKwjB,WAAV,CAGA,IAAKyF,EAAAA,EAAMoB,SAASJ,GAChB,MAAM,IAAIzgB,MAAM,qBAEpB,IAAM8gB,EAAsBtqB,KAAKwjB,WAAWrH,MAAMoO,cAAcN,GAC1DO,EAAYxqB,KAAKwjB,WAAWrgB,UAAU6E,qBAAqByiB,6BAA6BH,GAC9FtqB,KAAKwjB,WAAWrgB,UAAUunB,YAAY,MAAOP,EAAkBK,EAAWN,EAAcE,EANxF,CAOJ,GAAC,CAAAxqB,IAAA,aAAAC,MACD,SAAW2B,GAAiE,IAArD4oB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EAChC3a,KAAK2qB,YAAYnpB,EAAY,EAAmC4oB,EACpE,GAAC,CAAAxqB,IAAA,qBAAAC,MACD,SAAmB2B,GAAiE,IAArD4oB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EACxC3a,KAAK2qB,YAAYnpB,EAAY,EAAmC4oB,EACpE,GAAC,CAAAxqB,IAAA,sCAAAC,MACD,SAAoC2B,GAAiE,IAArD4oB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EACzD3a,KAAK2qB,YAAYnpB,EAAY,EAAoD4oB,EACrF,GAAC,CAAAxqB,IAAA,oBAAAC,MACD,SAAkB2B,GAAiE,IAArD4oB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EACvC3a,KAAK2qB,YAAYnpB,EAAY,EAAoC4oB,EACrE,GAAC,CAAAxqB,IAAA,cAAAC,MACD,SAAY2B,EAAYsE,EAAYskB,GAChC,GAA0B,kBAAf5oB,EACP,MAAM,IAAIgI,MAAM,qBAEpBxJ,KAAK4qB,iBAAiB,IAAI3B,EAAAA,EAAMznB,EAAY,EAAGA,EAAY,GAAIsE,GAAY,EAAOskB,EACtF,GAAC,CAAAxqB,IAAA,iBAAAC,MACD,SAAeK,GAA+D,IAArDkqB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EAClC3a,KAAK6qB,gBAAgB3qB,EAAU,GAAmC,EAAMkqB,EAC5E,GAAC,CAAAxqB,IAAA,yBAAAC,MACD,SAAuBK,GAA+D,IAArDkqB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EAC1C3a,KAAK6qB,gBAAgB3qB,EAAU,GAAmC,EAAMkqB,EAC5E,GAAC,CAAAxqB,IAAA,0CAAAC,MACD,SAAwCK,GAA+D,IAArDkqB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EAC3D3a,KAAK6qB,gBAAgB3qB,EAAU,GAAoD,EAAMkqB,EAC7F,GAAC,CAAAxqB,IAAA,wBAAAC,MACD,SAAsBK,GAA+D,IAArDkqB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EACzC3a,KAAK6qB,gBAAgB3qB,EAAU,GAAoC,EAAMkqB,EAC7E,GAAC,CAAAxqB,IAAA,kBAAAC,MACD,SAAgBK,EAAUgqB,EAAcC,EAAkBC,GACtD,IAAKvlB,EAAAA,EAAS8kB,YAAYzpB,GACtB,MAAM,IAAIsJ,MAAM,qBAEpBxJ,KAAK4qB,iBAAiB,IAAI3B,EAAAA,EAAM/oB,EAASsB,WAAYtB,EAAS0E,OAAQ1E,EAASsB,WAAYtB,EAAS0E,QAASslB,EAAcC,EAAkBC,EACjJ,GAAC,CAAAxqB,IAAA,eAAAC,MACD,WACI,OAAKG,KAAKwjB,WAGHxjB,KAAKwjB,WAAWrgB,UAAU2nB,eAFtB,IAGf,GAAC,CAAAlrB,IAAA,gBAAAC,MACD,WACI,OAAKG,KAAKwjB,WAGHxjB,KAAKwjB,WAAWrgB,UAAU4nB,gBAFtB,IAGf,GAAC,CAAAnrB,IAAA,eAAAC,MACD,SAAamrB,GAA2B,IAAhBzmB,EAAMoW,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,MACvBsQ,EAAcC,EAAAA,EAAUC,aAAaH,GACrCI,EAAUnC,EAAAA,EAAMoB,SAASW,GAC/B,IAAKC,IAAgBG,EACjB,MAAM,IAAI5hB,MAAM,qBAEpB,GAAIyhB,EACAjrB,KAAKqrB,kBAAkBL,EAAWzmB,QAEjC,GAAI6mB,EAAS,CAEd,IAAM5mB,EAAY,CACdqlB,yBAA0BmB,EAAUphB,gBACpCkgB,qBAAsBkB,EAAUM,YAChCvB,mBAAoBiB,EAAUlhB,cAC9BkgB,eAAgBgB,EAAUO,WAE9BvrB,KAAKqrB,kBAAkB7mB,EAAWD,EACtC,CACJ,GAAC,CAAA3E,IAAA,oBAAAC,MACD,SAAkB2rB,EAAKjnB,GACnB,GAAKvE,KAAKwjB,WAAV,CAGA,IAAMhf,EAAY,IAAI0mB,EAAAA,EAAUM,EAAI3B,yBAA0B2B,EAAI1B,qBAAsB0B,EAAIzB,mBAAoByB,EAAIxB,gBACpHhqB,KAAKwjB,WAAWrgB,UAAUymB,cAAcrlB,EAAQ,CAACC,GAFjD,CAGJ,GAAC,CAAA5E,IAAA,cAAAC,MACD,SAAY+J,EAAiBE,GAAoE,IAArDsgB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EACrD3a,KAAKyrB,aAAa7hB,EAAiBE,EAAe,EAAmCsgB,EACzF,GAAC,CAAAxqB,IAAA,sBAAAC,MACD,SAAoB+J,EAAiBE,GAAoE,IAArDsgB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EAC7D3a,KAAKyrB,aAAa7hB,EAAiBE,EAAe,EAAmCsgB,EACzF,GAAC,CAAAxqB,IAAA,uCAAAC,MACD,SAAqC+J,EAAiBE,GAAoE,IAArDsgB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EAC9E3a,KAAKyrB,aAAa7hB,EAAiBE,EAAe,EAAoDsgB,EAC1G,GAAC,CAAAxqB,IAAA,qBAAAC,MACD,SAAmB+J,EAAiBE,GAAoE,IAArDsgB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EAC5D3a,KAAKyrB,aAAa7hB,EAAiBE,EAAe,EAAoCsgB,EAC1F,GAAC,CAAAxqB,IAAA,eAAAC,MACD,SAAa+J,EAAiBE,EAAeogB,EAAcE,GACvD,GAA+B,kBAApBxgB,GAAyD,kBAAlBE,EAC9C,MAAM,IAAIN,MAAM,qBAEpBxJ,KAAK4qB,iBAAiB,IAAI3B,EAAAA,EAAMrf,EAAiB,EAAGE,EAAe,GAAIogB,GAAc,EAAOE,EAChG,GAAC,CAAAxqB,IAAA,cAAAC,MACD,SAAYC,GAAqH,IAA9GsqB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EAAwC+Q,EAAsB/Q,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,IAAAA,UAAA,GAAUwP,IAAgBxP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,KAAAA,UAAA,GACpH3a,KAAK2rB,aAAa7rB,EAAO4rB,EAAyB,EAAoC,EAAmCvB,EAAkBC,EAC/I,GAAC,CAAAxqB,IAAA,sBAAAC,MACD,SAAoBC,GAA4D,IAArDsqB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EACpC3a,KAAK2rB,aAAa7rB,EAAO,GAAmC,EAAMsqB,EACtE,GAAC,CAAAxqB,IAAA,uCAAAC,MACD,SAAqCC,GAA4D,IAArDsqB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EACrD3a,KAAK2rB,aAAa7rB,EAAO,GAAoD,EAAMsqB,EACvF,GAAC,CAAAxqB,IAAA,qBAAAC,MACD,SAAmBC,GAA4D,IAArDsqB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EACnC3a,KAAK2rB,aAAa7rB,EAAO,GAAoC,EAAMsqB,EACvE,GAAC,CAAAxqB,IAAA,sCAAAC,MACD,SAAoCC,GAA4D,IAArDsqB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EACpD3a,KAAK2rB,aAAa7rB,EAAO,GAAqD,EAAMsqB,EACxF,GAAC,CAAAxqB,IAAA,mBAAAC,MACD,SAAiBC,GAA4D,IAArDsqB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EACjC3a,KAAK2rB,aAAa7rB,EAAO,GAAgC,EAAMsqB,EACnE,GAAC,CAAAxqB,IAAA,eAAAC,MACD,SAAaC,EAAOoqB,EAAcC,EAAkBC,GAChD,IAAKnB,EAAAA,EAAMoB,SAASvqB,GAChB,MAAM,IAAI0J,MAAM,qBAEpBxJ,KAAK4qB,iBAAiB3B,EAAAA,EAAMC,KAAKppB,GAAQoqB,EAAcC,EAAkBC,EAC7E,GAAC,CAAAxqB,IAAA,gBAAAC,MACD,SAAckC,GAAoE,IAA5DwC,EAAMoW,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,MAAO4L,EAAM5L,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EAC3C,GAAK3a,KAAKwjB,WAAV,CAGA,IAAKzhB,GAA4B,IAAlBA,EAAOQ,OAClB,MAAM,IAAIiH,MAAM,qBAEpB,IAAK,IAAIhH,EAAI,EAAGC,EAAMV,EAAOQ,OAAQC,EAAIC,EAAKD,IAC1C,IAAK0oB,EAAAA,EAAUC,aAAappB,EAAOS,IAC/B,MAAM,IAAIgH,MAAM,qBAGxBxJ,KAAKwjB,WAAWrgB,UAAUymB,cAAcrlB,EAAQxC,EAAQwkB,EATxD,CAUJ,GAAC,CAAA3mB,IAAA,kBAAAC,MACD,WACI,OAAKG,KAAKwjB,WAGHxjB,KAAKwjB,WAAWrgB,UAAUjE,WAAW0sB,mBAFhC,CAGhB,GAAC,CAAAhsB,IAAA,iBAAAC,MACD,WACI,OAAKG,KAAKwjB,WAGHxjB,KAAKwjB,WAAWrgB,UAAUjE,WAAWsB,kBAFhC,CAGhB,GAAC,CAAAZ,IAAA,gBAAAC,MACD,WACI,OAAKG,KAAKwjB,WAGHxjB,KAAKwjB,WAAWrgB,UAAUjE,WAAW2sB,wBAFhC,CAGhB,GAAC,CAAAjsB,IAAA,mBAAAC,MACD,WACI,OAAKG,KAAKwjB,WAGHxjB,KAAKwjB,WAAWrgB,UAAUjE,WAAW4sB,oBAFhC,CAGhB,GAAC,CAAAlsB,IAAA,kBAAAC,MACD,WACI,OAAKG,KAAKwjB,WAGHxjB,KAAKwjB,WAAWrgB,UAAUjE,WAAWwB,mBAFhC,CAGhB,GAAC,CAAAd,IAAA,eAAAC,MACD,WACI,OAAKG,KAAKwjB,WAGHxjB,KAAKwjB,WAAWrgB,UAAUjE,WAAW6sB,uBAFhC,CAGhB,GAAC,CAAAnsB,IAAA,gBAAAC,MACD,SAAcmsB,GAAuE,IAAxD5B,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EACtC,GAAK3a,KAAKwjB,WAAV,CAGA,GAA6B,kBAAlBwI,EACP,MAAM,IAAIxiB,MAAM,qBAEpBxJ,KAAKwjB,WAAWrgB,UAAUjE,WAAW+sB,kBAAkB,CACnDhrB,WAAY+qB,GACb5B,EANH,CAOJ,GAAC,CAAAxqB,IAAA,eAAAC,MACD,SAAaqsB,GAAsE,IAAxD9B,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EACpC,GAAK3a,KAAKwjB,WAAV,CAGA,GAA4B,kBAAjB0I,EACP,MAAM,IAAI1iB,MAAM,qBAEpBxJ,KAAKwjB,WAAWrgB,UAAUjE,WAAW+sB,kBAAkB,CACnDlrB,UAAWmrB,GACZ9B,EANH,CAOJ,GAAC,CAAAxqB,IAAA,oBAAAC,MACD,SAAkBK,GAAkE,IAAxDkqB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EAChC3a,KAAKwjB,YAGVxjB,KAAKwjB,WAAWrgB,UAAUjE,WAAW+sB,kBAAkB/rB,EAAUkqB,EACrE,GAAC,CAAAxqB,IAAA,gBAAAC,MACD,WACI,IAAKG,KAAKwjB,WACN,OAAO,KAEX,IAAM3K,EAAqB7Y,KAAKsd,eAAepE,gBAG/C,MAAO,CACHiT,YAHgBnsB,KAAKwjB,WAAWrgB,UAAUipB,kBAI1CC,UAHcrsB,KAAKwjB,WAAWrgB,UAAUmpB,YAIxCzT,mBAAoBA,EAE5B,GAAC,CAAAjZ,IAAA,mBAAAC,MACD,SAAiBmY,GACb,GAAKhY,KAAKwjB,YAAexjB,KAAKwjB,WAAWnH,YAAzC,CAGA,IAAMkQ,EAAkBvU,EACxB,GAAIuU,GAAmBA,EAAgBJ,aAAeI,EAAgBF,UAAW,CAC7E,IAAMF,EAAcI,EAAgBJ,YAChC7pB,MAAM0hB,QAAQmI,GACVA,EAAY5pB,OAAS,GACrBvC,KAAKwjB,WAAWrgB,UAAUqpB,mBAAmBL,GAKjDnsB,KAAKwjB,WAAWrgB,UAAUqpB,mBAAmB,CAACL,IAElDnsB,KAAKsd,eAAehE,iBAAiBiT,EAAgB1T,oBAAsB,CAAC,GAC5E,IAAM4T,EAAezsB,KAAKwjB,WAAWrgB,UAAUupB,mBAAmBH,EAAgBF,WAClFrsB,KAAKwjB,WAAWpH,KAAKuQ,aAAaF,EACtC,CAhBA,CAiBJ,GAAC,CAAA7sB,IAAA,kBAAAC,MACD,SAAgBwY,GACZ,OAAOrY,KAAKsd,eAAetY,IAAIqT,EACnC,GAAC,CAAAzY,IAAA,aAAAC,MACD,WACI,OAAOyC,MAAMkJ,KAAKxL,KAAK4hB,SAASgL,SACpC,GAAC,CAAAhtB,IAAA,sBAAAC,MACD,WACI,IAAIwC,EAASrC,KAAK6sB,aAElB,OADAxqB,EAASA,EAAOmQ,QAAO,SAAA8R,GAAM,OAAIA,EAAOwI,aAAa,GAEzD,GAAC,CAAAltB,IAAA,YAAAC,MACD,SAAUwY,GACN,OAAOrY,KAAK4hB,SAAS5c,IAAIqT,IAAO,IACpC,GAAC,CAAAzY,IAAA,UAAAC,MACD,SAAQ0E,EAAQwoB,EAAWC,GAEvB,OADAA,EAAUA,GAAW,CAAC,EACdD,GACJ,IAAK,mBAED,YADA/sB,KAAKitB,oBAET,IAAK,iBAED,YADAjtB,KAAKktB,gBAAgB3oB,GAEzB,IAAK,OACD,IAAM4oB,EAAOH,EAEb,YADAhtB,KAAKotB,MAAM7oB,EAAQ4oB,EAAK7pB,MAAQ,IAGpC,IAAK,sBACD,IAAM6pB,EAAOH,EAEb,YADAhtB,KAAKqtB,iBAAiB9oB,EAAQ4oB,EAAK7pB,MAAQ,GAAI6pB,EAAKG,gBAAkB,EAAG,EAAG,GAGhF,IAAK,kBACD,IAAMH,EAAOH,EAEb,YADAhtB,KAAKqtB,iBAAiB9oB,EAAQ4oB,EAAK7pB,MAAQ,GAAI6pB,EAAKvpB,oBAAsB,EAAGupB,EAAKtpB,oBAAsB,EAAGspB,EAAKrpB,eAAiB,GAGrI,IAAK,QACD,IAAMqpB,EAAOH,EAEb,YADAhtB,KAAKutB,OAAOhpB,EAAQ4oB,EAAK7pB,MAAQ,GAAI6pB,EAAK5pB,iBAAkB,EAAO4pB,EAAK3pB,iBAAmB,KAAM2pB,EAAK1pB,MAAQ,MAGlH,IAAK,MAED,YADAzD,KAAKwtB,KAAKjpB,GAGlB,IAAM+f,EAAStkB,KAAKytB,UAAUV,GAC1BzI,EACA9I,QAAQC,QAAQ6I,EAAOoJ,OAAO3R,UAAKtc,EAAW6Y,EAAAA,IAG7CtY,KAAKwjB,aAGNxjB,KAAK2tB,sBAAsBppB,EAAQwoB,EAAWC,IAGlDhtB,KAAK4tB,gBAAgBb,EAAWC,GACpC,GAAC,CAAAptB,IAAA,kBAAAC,MACD,SAAgBktB,EAAWC,GACvBhtB,KAAKijB,gBAAgB4K,eAAed,EAAWC,EACnD,GAAC,CAAAptB,IAAA,oBAAAC,MACD,WACSG,KAAKwjB,aAGVxjB,KAAKwjB,WAAWrgB,UAAUa,mBAC1BhE,KAAKigB,uBAAuB2C,OAChC,GAAC,CAAAhjB,IAAA,kBAAAC,MACD,SAAgB0E,GACPvE,KAAKwjB,aAGVxjB,KAAKwjB,WAAWrgB,UAAUc,eAAeM,GACzCvE,KAAKmgB,qBAAqByC,OAC9B,GAAC,CAAAhjB,IAAA,QAAAC,MACD,SAAM0E,EAAQjB,GACLtD,KAAKwjB,YAA8B,IAAhBlgB,EAAKf,SAGd,aAAXgC,GACAvE,KAAK6f,YAAY+C,KAAKtf,GAE1BtD,KAAKwjB,WAAWrgB,UAAUQ,KAAKL,EAAMiB,GACtB,aAAXA,GACAvE,KAAK+f,WAAW6C,KAAKtf,GAE7B,GAAC,CAAA1D,IAAA,mBAAAC,MACD,SAAiB0E,EAAQjB,EAAMM,EAAoBC,EAAoBC,GAC9D9D,KAAKwjB,YAGVxjB,KAAKwjB,WAAWrgB,UAAUY,gBAAgBT,EAAMM,EAAoBC,EAAoBC,EAAeS,EAC3G,GAAC,CAAA3E,IAAA,SAAAC,MACD,SAAO0E,EAAQjB,EAAMC,EAAgBC,EAAiBC,GAClD,GAAKzD,KAAKwjB,YAA8B,IAAhBlgB,EAAKf,OAA7B,CAGA,IAAMY,EAAYnD,KAAKwjB,WAAWrgB,UAC5B2qB,EAAgB3qB,EAAU2nB,eAAeiD,mBAC/C5qB,EAAUO,MAAMJ,EAAMC,EAAgBC,EAAiBe,GACvD,IAAMypB,EAAc7qB,EAAU2nB,eAAeiD,mBAC9B,aAAXxpB,GACAvE,KAAKqgB,YAAYuC,KAAK,CAClB9iB,MAAO,IAAImpB,EAAAA,EAAM6E,EAActsB,WAAYssB,EAAclpB,OAAQopB,EAAYxsB,WAAYwsB,EAAYppB,QACrGqpB,WAAYxqB,GARpB,CAWJ,GAAC,CAAA7D,IAAA,OAAAC,MACD,SAAK0E,GACIvE,KAAKwjB,YAGVxjB,KAAKwjB,WAAWrgB,UAAUe,IAAIK,EAClC,GAAC,CAAA3E,IAAA,wBAAAC,MACD,SAAsB0E,EAAQwoB,EAAWC,GAAS,IAAApZ,EAAA,KACxCsa,EAAUjK,EAAAA,GAAyBkK,iBAAiBpB,GAC1D,QAAImB,KACAlB,EAAUA,GAAW,CAAC,GACdzoB,OAASA,EACjBvE,KAAKmX,sBAAsB0N,gBAAe,SAACC,GACvCtJ,QAAQC,QAAQyS,EAAQnJ,iBAAiBD,EAAUlR,EAAMoZ,IAAUjR,UAAKtc,EAAW6Y,EAAAA,GACvF,KACO,EAGf,GAAC,CAAA1Y,IAAA,gBAAAC,MACD,WACI,OAAKG,KAAKwjB,WAGHxjB,KAAKwjB,WAAWrgB,UAFZ,IAGf,GAAC,CAAAvD,IAAA,eAAAC,MACD,WACI,QAAKG,KAAKwjB,cAGNxjB,KAAKiT,eAAelO,QAAQC,IAAI,MAIpChF,KAAKwjB,WAAWrH,MAAMiS,oBACf,GACX,GAAC,CAAAxuB,IAAA,cAAAC,MACD,WACI,QAAKG,KAAKwjB,cAGNxjB,KAAKiT,eAAelO,QAAQC,IAAI,MAIpChF,KAAKwjB,WAAWrH,MAAMkS,mBACf,GACX,GAAC,CAAAzuB,IAAA,eAAAC,MACD,SAAa0E,EAAQ+pB,EAAOC,GACxB,QAAKvuB,KAAKwjB,cAGNxjB,KAAKiT,eAAelO,QAAQC,IAAI,MAShCwpB,EAJCD,EAGIjsB,MAAM0hB,QAAQuK,GACG,kBAAMA,CAAc,EAGpBA,EANA,kBAAM,IAAI,EAQpCvuB,KAAKwjB,WAAWrgB,UAAUsrB,aAAalqB,EAAQ+pB,EAAOE,IAC/C,IAXP,IAAIA,CAYR,GAAC,CAAA5uB,IAAA,iBAAAC,MACD,SAAe0E,EAAQ2pB,GACdluB,KAAKwjB,YAGVxjB,KAAKwjB,WAAWrgB,UAAU0qB,eAAeK,EAAS3pB,EACtD,GAAC,CAAA3E,IAAA,kBAAAC,MACD,SAAgB0E,EAAQmqB,GACf1uB,KAAKwjB,YAGVxjB,KAAKwjB,WAAWrgB,UAAUwrB,gBAAgBD,EAAUnqB,EACxD,GAAC,CAAA3E,IAAA,8BAAAC,MACD,SAA4B+uB,GACxB,OAAO,IAAIC,GAA4B7uB,KAAM4uB,EACjD,GAAC,CAAAhvB,IAAA,oBAAAC,MACD,SAAkBivB,GACd,OAAK9uB,KAAKwjB,WAIHxjB,KAAKwjB,WAAWrH,MAAM4S,kBAAkBD,EAAU9uB,KAAKoiB,KAFnD,IAGf,GAAC,CAAAxiB,IAAA,qBAAAC,MACD,SAAmB2B,GACf,OAAKxB,KAAKwjB,WAGHxjB,KAAKwjB,WAAWrH,MAAM6S,mBAAmBxtB,EAAYxB,KAAKoiB,KAAK6M,EAAAA,EAAAA,IAA4BjvB,KAAKiT,eAAelO,UAF3G,IAGf,GAAC,CAAAnF,IAAA,wBAAAC,MACD,SAAsBC,GAClB,OAAKE,KAAKwjB,WAGHxjB,KAAKwjB,WAAWrH,MAAM+S,sBAAsBpvB,EAAOE,KAAKoiB,KAAK6M,EAAAA,EAAAA,IAA4BjvB,KAAKiT,eAAelO,UAFzG,IAGf,GACA,CAAAnF,IAAA,mBAAAC,MAGA,SAAiBsvB,EAAgBC,GAC7B,OAAKpvB,KAAKwjB,WAGoB,IAA1B2L,EAAe5sB,QAA0C,IAA1B6sB,EAAe7sB,OACvC4sB,EAEJnvB,KAAKwjB,WAAWrH,MAAMkT,iBAAiBF,EAAgBC,EAAgBpvB,KAAKoiB,KALxE,EAMf,GAAC,CAAAxiB,IAAA,oBAAAC,MACD,SAAkByvB,GACTtvB,KAAKwjB,YAAuC,IAAzB8L,EAAc/sB,QAGtCvC,KAAKwjB,WAAWrH,MAAM4S,mBAAkB,SAACQ,GACrCA,EAAeF,iBAAiBC,EAAe,GACnD,GACJ,GAAC,CAAA1vB,IAAA,0BAAAC,MACD,SAAwB2vB,GAEpB,IAAMC,EAAoBzvB,KAAKqiB,yBAAyBmN,GACpDC,GACAzvB,KAAKqvB,iBAAiBI,EAAmB,IAEzCzvB,KAAKqiB,yBAAyBqN,eAAeF,WACtCxvB,KAAKqiB,yBAAyBmN,GAErCxvB,KAAKsiB,wBAAwBoN,eAAeF,WACrCxvB,KAAKsiB,wBAAwBkN,EAE5C,GAAC,CAAA5vB,IAAA,gBAAAC,MACD,WAGI,OAFgBG,KAAKiT,eAAelO,QACTC,IAAI,IAEnC,GAAC,CAAApF,IAAA,sBAAAC,MACD,SAAoB8vB,GAChB,OAAK3vB,KAAKwjB,YAAexjB,KAAKwjB,WAAWnH,YAGlCrc,KAAKwjB,WAAWpH,KAAKwT,oBAAoBD,GAFrC,IAGf,GAAC,CAAA/vB,IAAA,sBAAAC,MACD,WACI,OAAOG,KAAKiiB,WAChB,GAAC,CAAAriB,IAAA,aAAAC,MACD,WACI,OAAKG,KAAKwjB,YAAexjB,KAAKwjB,WAAWnH,YAGlCrc,KAAKwjB,WAAWpH,KAAKpQ,QAAQA,QAFzB,IAGf,GAAC,CAAApM,IAAA,uCAAAC,MACD,SAAqCgwB,GAC5B7vB,KAAKwjB,YAAexjB,KAAKwjB,WAAWnH,aAGzCrc,KAAKwjB,WAAWpH,KAAK0T,qCAAqCD,EAC9D,GAAC,CAAAjwB,IAAA,oCAAAC,MACD,SAAkCgwB,GACzB7vB,KAAKwjB,YAAexjB,KAAKwjB,WAAWnH,aAGzCrc,KAAKwjB,WAAWpH,KAAK2T,kCAAkCF,EAC3D,GAAC,CAAAjwB,IAAA,SAAAC,MACD,SAAOmwB,GACHhwB,KAAKiT,eAAegd,iBAAiBD,GACrChwB,KAAK6N,QACT,GAAC,CAAAjO,IAAA,QAAAC,MACD,WACSG,KAAKwjB,YAAexjB,KAAKwjB,WAAWnH,aAGzCrc,KAAKwjB,WAAWpH,KAAK6L,OACzB,GAAC,CAAAroB,IAAA,eAAAC,MACD,WACI,SAAKG,KAAKwjB,aAAexjB,KAAKwjB,WAAWnH,cAGlCrc,KAAKwjB,WAAWpH,KAAKhK,WAChC,GAAC,CAAAxS,IAAA,iBAAAC,MACD,WACI,OAAOG,KAAKyjB,eAAiBzjB,KAAKyjB,cAAcI,UACpD,GAAC,CAAAjkB,IAAA,mBAAAC,MACD,SAAiBqwB,GACb,IAAMC,EAAa,CACfD,OAAQA,EACRhwB,SAAUgwB,EAAOxG,eAEjB1pB,KAAK8jB,gBAAgB4L,eAAeQ,EAAOE,UAC3ChW,QAAQC,KAAK,kDAEjBra,KAAK8jB,gBAAgBoM,EAAOE,SAAWD,EACnCnwB,KAAKwjB,YAAcxjB,KAAKwjB,WAAWnH,aACnCrc,KAAKwjB,WAAWpH,KAAKiU,iBAAiBF,EAE9C,GAAC,CAAAvwB,IAAA,sBAAAC,MACD,SAAoBqwB,GAChB,IAAMI,EAAWJ,EAAOE,QACxB,GAAIpwB,KAAK8jB,gBAAgB4L,eAAeY,GAAW,CAC/C,IAAMH,EAAanwB,KAAK8jB,gBAAgBwM,GACxCH,EAAWjwB,SAAWgwB,EAAOxG,cACzB1pB,KAAKwjB,YAAcxjB,KAAKwjB,WAAWnH,aACnCrc,KAAKwjB,WAAWpH,KAAKmU,oBAAoBJ,EAEjD,CACJ,GAAC,CAAAvwB,IAAA,sBAAAC,MACD,SAAoBqwB,GAChB,IAAMI,EAAWJ,EAAOE,QACxB,GAAIpwB,KAAK8jB,gBAAgB4L,eAAeY,GAAW,CAC/C,IAAMH,EAAanwB,KAAK8jB,gBAAgBwM,UACjCtwB,KAAK8jB,gBAAgBwM,GACxBtwB,KAAKwjB,YAAcxjB,KAAKwjB,WAAWnH,aACnCrc,KAAKwjB,WAAWpH,KAAKoU,oBAAoBL,EAEjD,CACJ,GAAC,CAAAvwB,IAAA,mBAAAC,MACD,SAAiBqwB,GACb,IAAMC,EAAa,CACfD,OAAQA,EACRhwB,SAAUgwB,EAAOxG,eAEjB1pB,KAAK+jB,gBAAgB2L,eAAeQ,EAAOE,UAC3ChW,QAAQC,KAAK,mDAEjBra,KAAK+jB,gBAAgBmM,EAAOE,SAAWD,EACnCnwB,KAAKwjB,YAAcxjB,KAAKwjB,WAAWnH,aACnCrc,KAAKwjB,WAAWpH,KAAKqU,iBAAiBN,EAE9C,GAAC,CAAAvwB,IAAA,sBAAAC,MACD,SAAoBqwB,GAChB,IAAMI,EAAWJ,EAAOE,QACxB,GAAIpwB,KAAK+jB,gBAAgB2L,eAAeY,GAAW,CAC/C,IAAMH,EAAanwB,KAAK+jB,gBAAgBuM,GACxCH,EAAWjwB,SAAWgwB,EAAOxG,cACzB1pB,KAAKwjB,YAAcxjB,KAAKwjB,WAAWnH,aACnCrc,KAAKwjB,WAAWpH,KAAKsU,oBAAoBP,EAEjD,CACJ,GAAC,CAAAvwB,IAAA,sBAAAC,MACD,SAAoBqwB,GAChB,IAAMI,EAAWJ,EAAOE,QACxB,GAAIpwB,KAAK+jB,gBAAgB2L,eAAeY,GAAW,CAC/C,IAAMH,EAAanwB,KAAK+jB,gBAAgBuM,UACjCtwB,KAAK+jB,gBAAgBuM,GACxBtwB,KAAKwjB,YAAcxjB,KAAKwjB,WAAWnH,aACnCrc,KAAKwjB,WAAWpH,KAAKuU,oBAAoBR,EAEjD,CACJ,GAAC,CAAAvwB,IAAA,kBAAAC,MACD,SAAgBivB,GACP9uB,KAAKwjB,YAAexjB,KAAKwjB,WAAWnH,aAGzCrc,KAAKwjB,WAAWpH,KAAKwU,OAAO9B,EAChC,GAAC,CAAAlvB,IAAA,yBAAAC,MACD,SAAuB0lB,EAASC,GAC5B,OAAKxlB,KAAKwjB,YAAexjB,KAAKwjB,WAAWnH,YAGlCrc,KAAKwjB,WAAWpH,KAAKkJ,uBAAuBC,EAASC,GAFjD,IAGf,GAAC,CAAA5lB,IAAA,6BAAAC,MACD,SAA2BspB,GACvB,IAAKnpB,KAAKwjB,aAAexjB,KAAKwjB,WAAWnH,YACrC,OAAO,KAEX,IAAMnc,EAAWF,KAAKwjB,WAAWrH,MAAMiN,iBAAiBD,GAClDpkB,EAAU/E,KAAKiT,eAAelO,QAC9B8O,EAAa9O,EAAQC,IAAI,KAG/B,MAAO,CACHhE,IAHQwb,EAAiBqM,8BAA8B7oB,KAAKwjB,WAAYtjB,EAASsB,WAAYtB,EAAS0E,QAAU5E,KAAK6wB,eAIrH3vB,KAHSlB,KAAKwjB,WAAWpH,KAAK0U,mBAAmB5wB,EAASsB,WAAYtB,EAAS0E,QAAUiP,EAAWkd,iBAAmBld,EAAWmd,iBAAmBnd,EAAWod,iBAAmBjxB,KAAKkxB,gBAIxL5vB,OAAQyD,EAAQC,IAAI,IAE5B,GAAC,CAAApF,IAAA,qBAAAC,MACD,SAAmB2B,EAAYoD,GAC3B,OAAK5E,KAAKwjB,YAAexjB,KAAKwjB,WAAWnH,YAGlCrc,KAAKwjB,WAAWpH,KAAK0U,mBAAmBtvB,EAAYoD,IAF/C,CAGhB,GAAC,CAAAhF,IAAA,SAAAC,MACD,WAA4B,IAArBsxB,EAAWxW,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,IAAAA,UAAA,GACT3a,KAAKwjB,YAAexjB,KAAKwjB,WAAWnH,aAGzCrc,KAAKwjB,WAAWpH,KAAKvO,QAAO,EAAMsjB,EACtC,GAAC,CAAAvxB,IAAA,iBAAAC,MACD,SAAekF,GACN/E,KAAKwjB,YAAexjB,KAAKwjB,WAAWnH,aAGzCrc,KAAKwjB,WAAWpH,KAAKgV,eAAersB,EACxC,GAAC,CAAAnF,IAAA,gBAAAC,MACD,SAAciV,IACVvD,EAAAA,EAAAA,GAAcuD,EAAQ9U,KAAKiT,eAAelO,QAAQC,IAAI,IAC1D,GAAC,CAAApF,IAAA,YAAAC,MACD,SAAUmM,EAASqlB,GACXrxB,KAAK6hB,gBAAkB7hB,KAAKiiB,YAAYqP,SAAStxB,KAAK6hB,iBACtD7hB,KAAKiiB,YAAY/U,YAAYlN,KAAK6hB,gBAEtC7hB,KAAK6hB,eAAiB7V,EACtBhM,KAAKiT,eAAese,kBAAkBvlB,EAAUqlB,EAAgB,GAC5DrxB,KAAK6hB,gBACL7hB,KAAKiiB,YAAYuP,QAAQxxB,KAAK6hB,eAEtC,GAAC,CAAAjiB,IAAA,eAAAC,MACD,SAAasc,GAAO,IAAA9H,EAAA,KAChB,GAAK8H,EAAL,CAIA,IAAMG,EAAoB,GAC1Btc,KAAKiiB,YAAYxV,aAAa,eAAgB0P,EAAMsV,iBACpDzxB,KAAKiT,eAAeye,0BAA0BvV,EAAMwV,0BACpD3xB,KAAKiT,eAAe2e,kBAAkBzV,EAAM0V,gBAC5C1V,EAAM2V,mBACN,IAAM3uB,EAAY,IAAI4uB,EAAAA,EAAU/xB,KAAKoiB,IAAKpiB,KAAKiT,eAAgBkJ,EAAO6V,EAAAA,EAA6BC,SAAUC,EAAAA,EAAmCD,OAAOjyB,KAAKiT,eAAelO,UAAU,SAAC+pB,GAAQ,OAAK5J,EAAIiN,6BAA6BrD,EAAS,GAAE9uB,KAAKkd,6BAA8Bld,KAAKkjB,eAEvR5G,EAAkBtK,KAAKmK,EAAMiW,eAAc,kBAAM/d,EAAKge,SAAS,KAAK,KACpE/V,EAAkBtK,KAAK7O,EAAUmvB,SAAQ,SAACpqB,GACtC,OAAQA,EAAEqqB,MACN,KAAK,EACDle,EAAK+M,wBAAwBwB,KAAK1a,GAClC,MACJ,KAAK,EACDmM,EAAK+K,iBAAiBwE,SAAS1b,EAAE2b,UACjC,MACJ,KAAK,EACDxP,EAAKiN,mBAAmBsB,KAAK1a,GAC7B,MACJ,KAAK,EACDmM,EAAKmN,sBAAsBoB,OAC3B,MACJ,KAAK,EACDvO,EAAKqN,wBAAwBkB,OAC7B,MACJ,KAAK,EACDvO,EAAK0K,0BAA0B6D,OAC/B,MACJ,KAAK,EACD,GAAI1a,EAAEsqB,sBAAuB,CACzB,IAAMC,EAAmBpe,EAAKqe,UAAU,IAClCC,EAAUC,EAAAA,GAAa,kBAAmB,iOAAkOH,GAClRpe,EAAK0O,qBAAqB8P,OAAOC,EAAAA,GAASC,QAASJ,EAAS,CACxD,CACIlO,MAAO,mBACPiJ,IAAK,WACDrZ,EAAK4O,gBAAgB4K,eAAe,uCACxC,GAEJ,CACIpJ,MAAOmO,EAAAA,GAAa,cAAe,+BACnClF,IAAK,WACDrZ,EAAK4O,gBAAgB4K,eAAe,iCAAkC,CAClEmF,MAAO,2BAEf,IAGZ,CAEA,IADA,IAAMC,EAAY,GACTzwB,EAAI,EAAGC,EAAMyF,EAAEgrB,WAAW3wB,OAAQC,EAAIC,EAAKD,IAChDywB,EAAUzwB,GAAK0F,EAAEgrB,WAAW1wB,GAAGknB,cAEnC,IAAMyJ,EAAK,CACPjzB,SAAU+yB,EAAU,GACpBG,mBAAoBH,EAAUhoB,MAAM,GACpCsb,OAAQre,EAAEqe,OACVhiB,OAAQ2D,EAAE3D,QAEd8P,EAAKsK,2BAA2BiE,KAAKuQ,GACrC,IAAME,EAAK,CACP7uB,UAAW0D,EAAEgrB,WAAW,GACxBI,oBAAqBprB,EAAEgrB,WAAWjoB,MAAM,GACxCsoB,eAAgBrrB,EAAEqrB,eAClBC,cAAetrB,EAAEsrB,cACjBC,kBAAmBvrB,EAAEurB,kBACrBlvB,OAAQ2D,EAAE3D,OACVgiB,OAAQre,EAAEqe,QAEdlS,EAAKwK,4BAA4B+D,KAAKyQ,GACtC,MAEJ,KAAK,EACDhf,EAAK8J,6BAA6ByE,KAAK1a,EAAEwO,OACzC,MACJ,KAAK,EACDrC,EAAK4N,YAAYxV,aAAa,eAAgB0P,EAAMsV,iBACpDpd,EAAKwJ,0BAA0B+E,KAAK1a,EAAEwO,OACtC,MACJ,KAAK,EACDrC,EAAK0J,uCAAuC6E,KAAK1a,EAAEwO,OACnD,MACJ,KAAK,GACDrC,EAAKqJ,yBAAyBkF,KAAK1a,EAAEwO,OACrC,MACJ,KAAK,GACDrC,EAAK4J,yBAAyB2E,KAAK1a,EAAEwO,OACrC,MACJ,KAAK,GACDrC,EAAKgK,wBAAwBuE,KAAK1a,EAAEwO,OAGhD,KACA,IAAAgd,EAA4B1zB,KAAK2zB,YAAYxwB,GAAUywB,GAAA5a,EAAAA,EAAAA,GAAA0a,EAAA,GAAhDtX,EAAIwX,EAAA,GAAEvX,EAAWuX,EAAA,GACxB,GAAIvX,EAAa,CACbrc,KAAKiiB,YAAY4R,YAAYzX,EAAKpQ,QAAQA,SAE1C,IADA,IAAI8nB,EAAOjd,OAAOid,KAAK9zB,KAAK8jB,iBACnBthB,EAAI,EAAGC,EAAMqxB,EAAKvxB,OAAQC,EAAIC,EAAKD,IAAK,CAC7C,IAAM8tB,EAAWwD,EAAKtxB,GACtB4Z,EAAKiU,iBAAiBrwB,KAAK8jB,gBAAgBwM,GAC/C,CAEA,IAAK,IAAI9tB,EAAI,EAAGC,GADhBqxB,EAAOjd,OAAOid,KAAK9zB,KAAK+jB,kBACGxhB,OAAQC,EAAIC,EAAKD,IAAK,CAC7C,IAAM8tB,EAAWwD,EAAKtxB,GACtB4Z,EAAKqU,iBAAiBzwB,KAAK+jB,gBAAgBuM,GAC/C,CACAlU,EAAKvO,QAAO,GAAO,GACnBuO,EAAKpQ,QAAQA,QAAQS,aAAa,WAAY0P,EAAMgM,IAAI4L,WAC5D,CACA/zB,KAAKwjB,WAAa,IAAItH,GAAUC,EAAOhZ,EAAWiZ,EAAMC,EAAaC,EA9GrE,MAFItc,KAAKwjB,WAAa,IAiH1B,GAAC,CAAA5jB,IAAA,cAAAC,MACD,SAAYsD,GAAW,IACfE,EADe2wB,EAAA,KAGf3wB,EADArD,KAAK0iB,eACa,CACdhf,MAAO,SAACJ,EAAMC,EAAgBC,EAAiBC,GAC3CuwB,EAAKzG,OAAO,WAAYjqB,EAAMC,EAAgBC,EAAiBC,EACnE,EACAE,KAAM,SAACL,GACH0wB,EAAK5G,MAAM,WAAY9pB,EAC3B,EACAS,gBAAiB,SAACT,EAAMM,EAAoBC,EAAoBC,GAC5DkwB,EAAK3G,iBAAiB,WAAY/pB,EAAMM,EAAoBC,EAAoBC,EACpF,EACAE,iBAAkB,WACdgwB,EAAK/G,mBACT,EACAhpB,eAAgB,WACZ+vB,EAAK9G,gBAAgB,WACzB,EACAhpB,IAAK,WACD8vB,EAAKxG,KAAK,WACd,GAIc,CACd9pB,MAAO,SAACJ,EAAMC,EAAgBC,EAAiBC,GAC3C,IAAMupB,EAAU,CAAE1pB,KAAAA,EAAMC,eAAAA,EAAgBC,gBAAAA,EAAiBC,KAAAA,GACzDuwB,EAAK/Q,gBAAgB4K,eAAe,QAA0Cb,EAClF,EACArpB,KAAM,SAACL,GACH,IAAM0pB,EAAU,CAAE1pB,KAAAA,GAClB0wB,EAAK/Q,gBAAgB4K,eAAe,OAAwCb,EAChF,EACAjpB,gBAAiB,SAACT,EAAMM,EAAoBC,EAAoBC,GAE5D,GAAID,GAAsBC,EAAe,CAErC,IAAMkpB,EAAU,CAAE1pB,KAAAA,EAAMM,mBAAAA,EAAoBC,mBAAAA,EAAoBC,cAAAA,GAChEkwB,EAAK/Q,gBAAgB4K,eAAe,kBAA8Db,EACtG,KACK,CACD,IAAMA,EAAU,CAAE1pB,KAAAA,EAAMgqB,eAAgB1pB,GACxCowB,EAAK/Q,gBAAgB4K,eAAe,sBAAsEb,EAC9G,CACJ,EACAhpB,iBAAkB,WACdgwB,EAAK/Q,gBAAgB4K,eAAe,mBAAgE,CAAC,EACzG,EACA5pB,eAAgB,WACZ+vB,EAAK/Q,gBAAgB4K,eAAe,iBAA4D,CAAC,EACrG,EACA3pB,IAAK,WACD8vB,EAAK/Q,gBAAgB4K,eAAe,MAAsC,CAAC,EAC/E,GAGR,IAAMoG,EAAsB,IAAIre,EAAAA,EAAoBzS,EAAU6E,sBAa9D,OAZAisB,EAAoBpe,UAAY,SAAC3N,GAAC,OAAK8rB,EAAK7S,WAAWyB,KAAK1a,EAAE,EAC9D+rB,EAAoBne,QAAU,SAAC5N,GAAC,OAAK8rB,EAAK9S,SAAS0B,KAAK1a,EAAE,EAC1D+rB,EAAoBle,cAAgB,SAAC7N,GAAC,OAAK8rB,EAAKlT,eAAe8B,KAAK1a,EAAE,EACtE+rB,EAAoBje,YAAc,SAAC9N,GAAC,OAAK8rB,EAAKjT,aAAa6B,KAAK1a,EAAE,EAClE+rB,EAAoBhe,aAAe,SAAC/N,GAAC,OAAK8rB,EAAKhT,cAAc4B,KAAK1a,EAAE,EACpE+rB,EAAoB/d,YAAc,SAAChO,GAAC,OAAK8rB,EAAKxT,aAAaoC,KAAK1a,EAAE,EAClE+rB,EAAoB9d,UAAY,SAACjO,GAAC,OAAK8rB,EAAKzT,WAAWqC,KAAK1a,EAAE,EAC9D+rB,EAAoB7d,YAAc,SAAClO,GAAC,OAAK8rB,EAAKvT,aAAamC,KAAK1a,EAAE,EAClE+rB,EAAoB5d,YAAc,SAACnO,GAAC,OAAK8rB,EAAKtT,aAAakC,KAAK1a,EAAE,EAClE+rB,EAAoB3d,oBAAsB,SAACpO,GAAC,OAAK8rB,EAAKrT,qBAAqBiC,KAAK1a,EAAE,EAClF+rB,EAAoB1d,aAAe,SAACrO,GAAC,OAAK8rB,EAAK/S,cAAc2B,KAAK1a,EAAE,EAE7D,CADM,IAAIgsB,EAAAA,EAAK7wB,EAAiBrD,KAAKiT,eAAgBjT,KAAKkjB,cAAciR,gBAAiBhxB,EAAW8wB,EAAqBj0B,KAAKkiB,0BACvH,EAClB,GAAC,CAAAtiB,IAAA,0BAAAC,MACD,SAAwBioB,GACF,OAAlBA,QAA4C,IAAlBA,GAAoCA,EAAcsM,gCAAgCp0B,KAAKoiB,IACrH,GAAC,CAAAxiB,IAAA,eAAAC,MACD,WACI,IAAKG,KAAKwjB,WACN,OAAO,KAEX,IAAMrH,EAAQnc,KAAKwjB,WAAWrH,MACxBkY,EAAgBr0B,KAAKwjB,WAAWnH,YAAcrc,KAAKwjB,WAAWpH,KAAKpQ,QAAQA,QAAU,KAU3F,OATAhM,KAAKwjB,WAAW3R,UAChB7R,KAAKwjB,WAAa,KAClBxjB,KAAKiiB,YAAYqS,gBAAgB,gBAC7BD,GAAiBr0B,KAAKiiB,YAAYqP,SAAS+C,IAC3Cr0B,KAAKiiB,YAAY/U,YAAYmnB,GAE7Br0B,KAAK6hB,gBAAkB7hB,KAAKiiB,YAAYqP,SAAStxB,KAAK6hB,iBACtD7hB,KAAKiiB,YAAY/U,YAAYlN,KAAK6hB,gBAE/B1F,CACX,GAAC,CAAAvc,IAAA,wBAAAC,MACD,SAAsBD,GAClBI,KAAKgjB,mBAAmBuR,qBAAqB30B,EACjD,GAAC,CAAAA,IAAA,WAAAC,MACD,WACI,OAA4B,OAApBG,KAAKwjB,UACjB,GAAC,CAAA5jB,IAAA,sBAAAC,MACD,SAAoBK,GAChB,IAAMkvB,EAAiB,CAAC,CAChBtvB,MAAO,IAAImpB,EAAAA,EAAM/oB,EAASsB,WAAYtB,EAAS0E,OAAQ1E,EAASsB,WAAYtB,EAAS0E,QACrFG,QAASyX,EAAiBgY,kCAElCx0B,KAAK8hB,2BAA2BvJ,IAAI6W,GACpCpvB,KAAKy0B,eAAev0B,EAAU,EAClC,GAAC,CAAAN,IAAA,sBAAAC,MACD,WACIG,KAAK8hB,2BAA2BgF,OACpC,IAAC,EAAAlnB,IAAA,kCAAAC,MAr7BD,SAAuC60B,EAAWC,EAAiBC,EAAanzB,GAC5E,IAAMozB,EAAgBH,EAAUvY,MAAMiN,iBAAiB,CACnD5nB,WAAYmzB,EACZ/vB,OAAQgwB,IAENnwB,EAAeiwB,EAAUvxB,UAAU6E,qBAAqB8sB,mCAAmCD,GACjG,OAAOH,EAAUvxB,UAAUjE,WAAWyC,iCAAiC8C,EAAajD,WAAYC,EACpG,GAAC,CAAA7B,IAAA,gCAAAC,MAaD,SAAqC60B,EAAWC,EAAiBC,GAAuC,IAA1BnzB,EAAgBkZ,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,IAAAA,UAAA,GACpFka,EAAgBH,EAAUvY,MAAMiN,iBAAiB,CACnD5nB,WAAYmzB,EACZ/vB,OAAQgwB,IAENnwB,EAAeiwB,EAAUvxB,UAAU6E,qBAAqB8sB,mCAAmCD,GACjG,OAAOH,EAAUvxB,UAAUjE,WAAWwC,+BAA+B+C,EAAajD,WAAYC,EAClG,KAAC+a,CAAA,CA9Ue,CAAkClC,EAAAA,IA0uCtDkC,GAAiBgY,gCAAkCO,EAAAA,GAAuBC,SAAS,CAC/EC,YAAa,uBACbC,UAAW,eAEf1Y,GAAmBjC,EAAW,CAC1BS,GAAQ,EAAGma,EAAAA,IACXna,GAAQ,EAAGoa,EAAAA,GACXpa,GAAQ,EAAGqa,EAAAA,GACXra,GAAQ,EAAGuI,EAAAA,IACXvI,GAAQ,EAAGsa,EAAAA,IACXta,GAAQ,EAAGua,EAAAA,IACXva,GAAQ,EAAGwa,EAAAA,GACXxa,GAAQ,GAAIya,EAAAA,IACZza,GAAQ,GAAI0a,EAAAA,IACblZ,IAEI,IAAM6C,GAAmB,SAAAsW,IAAA52B,EAAAA,EAAAA,GAAAsgB,EAAAsW,GAAA,IAAAhiB,GAAA1U,EAAAA,EAAAA,GAAAogB,GAC5B,SAAAA,EAAYuW,GAAiB,IAAAC,EAOsB,OAPtBv2B,EAAAA,EAAAA,GAAA,KAAA+f,IACzBwW,EAAAliB,EAAApU,KAAA,OACKq2B,gBAAkBA,EACvBC,EAAKC,mBAAqBD,EAAKxe,UAAU,IAAImG,EAAAA,GAAQqY,EAAKD,kBAC1DC,EAAKtW,kBAAoBsW,EAAKC,mBAAmBpf,MACjDmf,EAAKE,oBAAsBF,EAAKxe,UAAU,IAAImG,EAAAA,GAAQqY,EAAKD,kBAC3DC,EAAKpW,mBAAqBoW,EAAKE,oBAAoBrf,MACnDmf,EAAKG,OAAS,EAAiCH,CACnD,CAaC,OAbAl2B,EAAAA,EAAAA,GAAA0f,EAAA,EAAAzf,IAAA,WAAAC,MACD,SAASm2B,GACL,IAAMn2B,EAASm2B,EAAS,EAAiC,EACrDh2B,KAAKg2B,SAAWn2B,IAGpBG,KAAKg2B,OAASn2B,EACM,IAAhBG,KAAKg2B,OACLh2B,KAAK81B,mBAAmBlT,OAEH,IAAhB5iB,KAAKg2B,QACVh2B,KAAK+1B,oBAAoBnT,OAEjC,KAACvD,CAAA,CAtB2B,CAAS/E,EAAAA,IA2BnC0E,GAAkB,SAAAiX,IAAAl3B,EAAAA,EAAAA,GAAAigB,EAAAiX,GAAA,IAAA7hB,GAAAnV,EAAAA,EAAAA,GAAA+f,GACpB,SAAAA,EAAY1B,EAAgBK,GAAe,IAAAuY,EAEF,OAFE52B,EAAAA,EAAAA,GAAA,KAAA0f,IACvCkX,EAAA9hB,EAAA7U,KAAA,KAAM,CAAEoe,cAAAA,KACHL,eAAiBA,EAAe4Y,CACzC,CAIC,OAJAv2B,EAAAA,EAAAA,GAAAqf,EAAA,EAAApf,IAAA,OAAAC,MACD,SAAK6W,GACD1W,KAAKsd,eAAe6Y,4BACpB5oB,EAAAA,EAAAA,IAAAmE,EAAAA,EAAAA,GAAAsN,EAAArN,WAAA,aAAApS,KAAA,KAAWmX,EACf,KAACsI,CAAA,CARmB,CAASxB,EAAAA,IAU3B2F,GAAwB,SAAAiT,IAAAr3B,EAAAA,EAAAA,GAAAokB,EAAAiT,GAAA,IAAAC,GAAAp3B,EAAAA,EAAAA,GAAAkkB,GAC1B,SAAAA,EAAYzL,EAAQoF,GAAmB,IAAAwZ,EA6BsB,OA7BtBh3B,EAAAA,EAAAA,GAAA,KAAA6jB,IACnCmT,EAAAD,EAAA92B,KAAA,OACK2X,QAAUQ,EACfoF,EAAkByZ,UAAU,WAAY7e,EAAO0Y,SAC/CkG,EAAKE,mBAAqBC,EAAAA,EAAkBC,kBAAkBC,OAAO7Z,GACrEwZ,EAAKM,aAAeH,EAAAA,EAAkBxO,MAAM0O,OAAO7Z,GACnDwZ,EAAKO,gBAAkBJ,EAAAA,EAAkBK,eAAeH,OAAO7Z,GAC/DwZ,EAAKlX,iBAAmBqX,EAAAA,EAAkBM,gBAAgBJ,OAAO7Z,GACjEwZ,EAAKU,qBAAuBP,EAAAA,EAAkBQ,cAAcN,OAAO7Z,GACnEwZ,EAAKY,gBAAkBT,EAAAA,EAAkBU,SAASR,OAAO7Z,GACzDwZ,EAAKc,cAAgBX,EAAAA,EAAkBY,aAAaV,OAAO7Z,GAC3DwZ,EAAKgB,uBAAyBb,EAAAA,EAAkBnxB,gBAAgBqxB,OAAO7Z,GACvEwZ,EAAKiB,uBAAyBd,EAAAA,EAAkBe,sBAAsBb,OAAO7Z,GAC7EwZ,EAAKmB,sBAAwBhB,EAAAA,EAAkBiB,qBAAqBf,OAAO7Z,GAC3EwZ,EAAKqB,SAAWlB,EAAAA,EAAkBmB,QAAQjB,OAAO7Z,GACjDwZ,EAAKuB,SAAWpB,EAAAA,EAAkBqB,QAAQnB,OAAO7Z,GACjDwZ,EAAKjf,UAAUif,EAAKpf,QAAQsH,0BAAyB,kBAAM8X,EAAKyB,mBAAmB,KACnFzB,EAAKjf,UAAUif,EAAKpf,QAAQ4H,4BAA2B,kBAAMwX,EAAK0B,sBAAsB,KACxF1B,EAAKjf,UAAUif,EAAKpf,QAAQyI,wBAAuB,kBAAM2W,EAAK2B,kBAAkB,KAChF3B,EAAKjf,UAAUif,EAAKpf,QAAQ0I,uBAAsB,kBAAM0W,EAAK2B,kBAAkB,KAC/E3B,EAAKjf,UAAUif,EAAKpf,QAAQoI,sBAAqB,kBAAMgX,EAAK2B,kBAAkB,KAC9E3B,EAAKjf,UAAUif,EAAKpf,QAAQsI,qBAAoB,kBAAM8W,EAAK2B,kBAAkB,KAC7E3B,EAAKjf,UAAUif,EAAKpf,QAAQwH,kBAAiB,kBAAM4X,EAAK4B,kBAAkB,KAC1E5B,EAAKjf,UAAUif,EAAKpf,QAAQsH,0BAAyB,kBAAM8X,EAAK4B,kBAAkB,KAClF5B,EAAKjf,UAAU8gB,EAAAA,EAASC,qBAAoB,kBAAM9B,EAAKU,qBAAqBze,IAAI4f,EAAAA,EAASE,gBAAgB,eAA4C,KACrJ/B,EAAKyB,oBACLzB,EAAK0B,uBACL1B,EAAK2B,mBACL3B,EAAK4B,mBACL5B,EAAKE,mBAAmBje,IAAI+d,EAAKpf,QAAQwL,gBAAgB4T,CAC7D,CA4BC,OA5BA32B,EAAAA,EAAAA,GAAAwjB,EAAA,EAAAvjB,IAAA,oBAAAC,MACD,WACI,IAAMkF,EAAU/E,KAAKkX,QAAQoS,aAC7BtpB,KAAKg3B,qBAAqBze,IAAIxT,EAAQC,IAAI,MAC1ChF,KAAKk3B,gBAAgB3e,IAAIxT,EAAQC,IAAI,KACrChF,KAAKo3B,cAAc7e,IAAIxT,EAAQC,IAAI,KACnChF,KAAKs3B,uBAAuB/e,IAAIxT,EAAQC,IAAI,IAChD,GAAC,CAAApF,IAAA,uBAAAC,MACD,WACI,IAAMqzB,EAAalzB,KAAKkX,QAAQ6T,gBAC3BmI,GAKDlzB,KAAKu3B,uBAAuBhf,IAAI2a,EAAW3wB,OAAS,GACpDvC,KAAKy3B,sBAAsBlf,IAAI2a,EAAWoF,MAAK,SAAAtgB,GAAC,OAAKA,EAAEugB,SAAS,OALhEv4B,KAAKu3B,uBAAuBlnB,QAC5BrQ,KAAKy3B,sBAAsBpnB,QAMnC,GAAC,CAAAzQ,IAAA,mBAAAC,MACD,WACIG,KAAK42B,aAAare,IAAIvY,KAAKkX,QAAQshB,mBAAqBx4B,KAAKkX,QAAQwL,gBACrE1iB,KAAKof,iBAAiB7G,IAAIvY,KAAKkX,QAAQ2Q,iBAAmB7nB,KAAKkX,QAAQwL,gBACvE1iB,KAAK62B,gBAAgBte,IAAIvY,KAAKkX,QAAQ2Q,eAC1C,GAAC,CAAAjoB,IAAA,mBAAAC,MACD,WACI,IAAMsc,EAAQnc,KAAKkX,QAAQuhB,WAC3Bz4B,KAAK23B,SAASpf,IAAImgB,QAAQvc,GAASA,EAAMyb,YACzC53B,KAAK63B,SAAStf,IAAImgB,QAAQvc,GAASA,EAAM2b,WAC7C,KAAC3U,CAAA,CA3DyB,CAAS7I,EAAAA,IA6D1B8I,GAAiB,SAAAuV,IAAA55B,EAAAA,EAAAA,GAAAqkB,EAAAuV,GAAA,IAAAC,GAAA35B,EAAAA,EAAAA,GAAAmkB,GAC1B,SAAAA,EAAYlM,EAAS2L,EAAoBgW,GAA0B,IAAAC,GAAAx5B,EAAAA,EAAAA,GAAA,KAAA8jB,IAC/D0V,EAAAF,EAAAr5B,KAAA,OACK2X,QAAUA,EACf4hB,EAAKjW,mBAAqBA,EAC1BiW,EAAKD,yBAA2BA,EAChCC,EAAKC,QAAUtC,EAAAA,EAAkBxI,WAAW0I,OAAO9T,GACnDiW,EAAKE,2BAA6BvC,EAAAA,EAAkBwC,0BAA0BtC,OAAO9T,GACrFiW,EAAKI,wBAA0BzC,EAAAA,EAAkB0C,uBAAuBxC,OAAO9T,GAC/EiW,EAAKM,qBAAuB3C,EAAAA,EAAkB4C,oBAAoB1C,OAAO9T,GACzEiW,EAAKQ,uBAAyB7C,EAAAA,EAAkB8C,sBAAsB5C,OAAO9T,GAC7EiW,EAAKU,wBAA0B/C,EAAAA,EAAkBgD,uBAAuB9C,OAAO9T,GAC/EiW,EAAKY,2BAA6BjD,EAAAA,EAAkBkD,0BAA0BhD,OAAO9T,GACrFiW,EAAKc,2BAA6BnD,EAAAA,EAAkBoD,0BAA0BlD,OAAO9T,GACrFiW,EAAKgB,kBAAoBrD,EAAAA,EAAkBsD,iBAAiBpD,OAAO9T,GACnEiW,EAAKkB,8BAAgCvD,EAAAA,EAAkBwD,6BAA6BtD,OAAO9T,GAC3FiW,EAAKoB,2BAA6BzD,EAAAA,EAAkB0D,0BAA0BxD,OAAO9T,GACrFiW,EAAKsB,sBAAwB3D,EAAAA,EAAkB4D,qBAAqB1D,OAAO9T,GAC3EiW,EAAKwB,mBAAqB7D,EAAAA,EAAkB8D,kBAAkB5D,OAAO9T,GACrEiW,EAAK0B,0BAA4B/D,EAAAA,EAAkBgE,yBAAyB9D,OAAO9T,GACnFiW,EAAK4B,uBAAyBjE,EAAAA,EAAkBkE,sBAAsBhE,OAAO9T,GAC7EiW,EAAK8B,+BAAiCnE,EAAAA,EAAkBoE,8BAA8BlE,OAAO9T,GAC7FiW,EAAKgC,wCAA0CrE,EAAAA,EAAkBsE,uCAAuCpE,OAAO9T,GAC/GiW,EAAKkC,uCAAyCvE,EAAAA,EAAkBwE,sCAAsCtE,OAAO9T,GAC7GiW,EAAKoC,gDAAkDzE,EAAAA,EAAkB0E,+CAA+CxE,OAAO9T,GAC/HiW,EAAKsC,iBAAmB3E,EAAAA,EAAkB4E,uBAAuB1E,OAAO9T,GACxE,IAAMyY,EAAS,WAAH,OAASxC,EAAKyC,SAAS,EAqB1B,OAnBTzC,EAAKzhB,UAAUH,EAAQwH,iBAAiB4c,IACxCxC,EAAKzhB,UAAUH,EAAQ4G,yBAAyBwd,IAEhDxC,EAAKzhB,UAAUwhB,EAAyB2C,mBAAmB7Y,YAAY2Y,IACvExC,EAAKzhB,UAAUwhB,EAAyB4C,mBAAmB9Y,YAAY2Y,IACvExC,EAAKzhB,UAAUwhB,EAAyB6C,iBAAiB/Y,YAAY2Y,IACrExC,EAAKzhB,UAAUwhB,EAAyB8C,mBAAmBhZ,YAAY2Y,IACvExC,EAAKzhB,UAAUwhB,EAAyB+C,oBAAoBjZ,YAAY2Y,IACxExC,EAAKzhB,UAAUwhB,EAAyBgD,uBAAuBlZ,YAAY2Y,IAC3ExC,EAAKzhB,UAAUwhB,EAAyBiD,uBAAuBnZ,YAAY2Y,IAC3ExC,EAAKzhB,UAAUwhB,EAAyBkD,cAAcpZ,YAAY2Y,IAClExC,EAAKzhB,UAAUwhB,EAAyBmD,0BAA0BrZ,YAAY2Y,IAC9ExC,EAAKzhB,UAAUwhB,EAAyBoD,uBAAuBtZ,YAAY2Y,IAC3ExC,EAAKzhB,UAAUwhB,EAAyBqD,kBAAkBvZ,YAAY2Y,IACtExC,EAAKzhB,UAAUwhB,EAAyBsD,eAAexZ,YAAY2Y,IACnExC,EAAKzhB,UAAUwhB,EAAyBuD,+BAA+BzZ,YAAY2Y,IACnFxC,EAAKzhB,UAAUwhB,EAAyBwD,oCAAoC1Z,YAAY2Y,IACxFxC,EAAKzhB,UAAUwhB,EAAyByD,sBAAsB3Z,YAAY2Y,IAC1ExC,EAAKzhB,UAAUwhB,EAAyB0D,mBAAmB5Z,YAAY2Y,IACvEA,IAASxC,CACb,CAqDC,OArDAn5B,EAAAA,EAAAA,GAAAyjB,EAAA,EAAAxjB,IAAA,UAAAC,MACD,YACI0N,EAAAA,EAAAA,IAAAmE,EAAAA,EAAAA,GAAA0R,EAAAzR,WAAA,gBAAApS,KAAA,KACJ,GAAC,CAAAK,IAAA,QAAAC,MACD,WAAQ,IAAA28B,EAAA,KACJx8B,KAAK6iB,mBAAmB4Z,oBAAmB,WACvCD,EAAKzD,QAAQ1oB,QACbmsB,EAAKxD,2BAA2B3oB,QAChCmsB,EAAKtD,wBAAwB7oB,QAC7BmsB,EAAKpD,qBAAqB/oB,QAC1BmsB,EAAKlD,uBAAuBjpB,QAC5BmsB,EAAKhD,wBAAwBnpB,QAC7BmsB,EAAK9C,2BAA2BrpB,QAChCmsB,EAAK5C,2BAA2BvpB,QAChCmsB,EAAK1C,kBAAkBzpB,QACvBmsB,EAAKxC,8BAA8B3pB,QACnCmsB,EAAKtC,2BAA2B7pB,QAChCmsB,EAAKpC,sBAAsB/pB,QAC3BmsB,EAAKlC,mBAAmBjqB,QACxBmsB,EAAK5B,+BAA+BvqB,QACpCmsB,EAAK1B,wCAAwCzqB,QAC7CmsB,EAAKhC,0BAA0BnqB,QAC/BmsB,EAAKpB,iBAAiB/qB,OAC1B,GACJ,GAAC,CAAAzQ,IAAA,UAAAC,MACD,WAAU,IAAA68B,EAAA,KACAvgB,EAAQnc,KAAKkX,QAAQuhB,WACtBtc,EAILnc,KAAK6iB,mBAAmB4Z,oBAAmB,WACvCC,EAAK3D,QAAQxgB,IAAI4D,EAAMsV,iBACvBiL,EAAK1D,2BAA2BzgB,IAAImkB,EAAK7D,yBAAyB2C,mBAAmBpjB,IAAI+D,IACzFugB,EAAKxD,wBAAwB3gB,IAAImkB,EAAK7D,yBAAyB4C,mBAAmBrjB,IAAI+D,IACtFugB,EAAKtD,qBAAqB7gB,IAAImkB,EAAK7D,yBAAyB6C,iBAAiBtjB,IAAI+D,IACjFugB,EAAKpD,uBAAuB/gB,IAAImkB,EAAK7D,yBAAyB8C,mBAAmBvjB,IAAI+D,IACrFugB,EAAKlD,wBAAwBjhB,IAAImkB,EAAK7D,yBAAyB+C,oBAAoBxjB,IAAI+D,IACvFugB,EAAKhD,2BAA2BnhB,IAAImkB,EAAK7D,yBAAyBgD,uBAAuBzjB,IAAI+D,IAC7FugB,EAAK9C,2BAA2BrhB,IAAImkB,EAAK7D,yBAAyBiD,uBAAuB1jB,IAAI+D,IAC7FugB,EAAK5C,kBAAkBvhB,IAAImkB,EAAK7D,yBAAyBkD,cAAc3jB,IAAI+D,IAC3EugB,EAAK1C,8BAA8BzhB,IAAImkB,EAAK7D,yBAAyBmD,0BAA0B5jB,IAAI+D,IACnGugB,EAAKxC,2BAA2B3hB,IAAImkB,EAAK7D,yBAAyBoD,uBAAuB7jB,IAAI+D,IAC7FugB,EAAKtC,sBAAsB7hB,IAAImkB,EAAK7D,yBAAyBqD,kBAAkB9jB,IAAI+D,IACnFugB,EAAKpC,mBAAmB/hB,IAAImkB,EAAK7D,yBAAyBsD,eAAe/jB,IAAI+D,IAC7EugB,EAAKlC,0BAA0BjiB,IAAImkB,EAAK7D,yBAAyByD,sBAAsBlkB,IAAI+D,IAC3FugB,EAAKhC,uBAAuBniB,IAAImkB,EAAK7D,yBAAyB0D,mBAAmBnkB,IAAI+D,IACrFugB,EAAK9B,+BAA+BriB,IAAImkB,EAAK7D,yBAAyBuD,+BAA+BhkB,IAAI+D,IAAUugB,EAAK7D,yBAAyBwD,oCAAoCjkB,IAAI+D,IACzLugB,EAAK5B,wCAAwCviB,IAAImkB,EAAK7D,yBAAyBwD,oCAAoCjkB,IAAI+D,IACvHugB,EAAK1B,uCAAuCziB,IAAImkB,EAAK7D,yBAAyBuD,+BAA+BO,IAAIxgB,GAAO5Z,OAASm6B,EAAK7D,yBAAyBwD,oCAAoCM,IAAIxgB,GAAO5Z,OAAS,GACvNm6B,EAAKxB,gDAAgD3iB,IAAImkB,EAAK7D,yBAAyBwD,oCAAoCM,IAAIxgB,GAAO5Z,OAAS,GAC/Im6B,EAAKtB,iBAAiB7iB,IAAI4D,EAAMgM,IAAIyU,SAAWC,EAAAA,GAAQC,mBAC3D,IAxBI98B,KAAKqQ,OAyBb,KAAC+S,CAAA,CArGyB,CAAS9I,EAAAA,IAuGjCoJ,GAA4B,SAAAqZ,IAAAh+B,EAAAA,EAAAA,GAAA2kB,EAAAqZ,GAAA,IAAAC,GAAA/9B,EAAAA,EAAAA,GAAAykB,GAC9B,SAAAA,EAAYjH,GAAY,IAAAwgB,EAahB,OAbgB39B,EAAAA,EAAAA,GAAA,KAAAokB,IACpBuZ,EAAAD,EAAAz9B,KAAA,OACK29B,UAAYD,EAAK5lB,UAAU,IAAImG,EAAAA,IACpCyf,EAAKtZ,SAAWsZ,EAAKC,UAAUxmB,MAC/BumB,EAAKE,WAAY,EACjBF,EAAKG,iBAAmBH,EAAK5lB,UAAU6N,EAAImY,WAAW5gB,IACtDwgB,EAAK5lB,UAAU4lB,EAAKG,iBAAiBE,YAAW,WAC5CL,EAAKE,WAAY,EACjBF,EAAKC,UAAUta,UAAKnjB,EACxB,KACAw9B,EAAK5lB,UAAU4lB,EAAKG,iBAAiBG,WAAU,WAC3CN,EAAKE,WAAY,EACjBF,EAAKC,UAAUta,UAAKnjB,EACxB,KAAIw9B,CACR,CAGC,OAHAt9B,EAAAA,EAAAA,GAAA+jB,EAAA,EAAA9jB,IAAA,WAAAC,MACD,WACI,OAAOG,KAAKm9B,SAChB,KAACzZ,CAAA,CAlB6B,CAASpJ,EAAAA,IAoBrCuU,GAA2B,WAI7B,SAAAA,EAAY3X,EAAS0X,IAAatvB,EAAAA,EAAAA,GAAA,KAAAuvB,GAC9B7uB,KAAKkX,QAAUA,EACflX,KAAKw9B,eAAiB,GACtBx9B,KAAKy9B,wBAAyB,EAC1Bn7B,MAAM0hB,QAAQ4K,IAAgBA,EAAYrsB,OAAS,GACnDvC,KAAKuY,IAAIqW,EAEjB,CAoDC,OApDAjvB,EAAAA,EAAAA,GAAAkvB,EAAA,EAAAjvB,IAAA,SAAAoF,IAVD,WACI,OAAOhF,KAAKw9B,eAAej7B,MAC/B,GAAC,CAAA3C,IAAA,cAAAC,MASD,SAAY69B,EAAUC,EAAUC,GAAa,IAAAC,EAAA,KACzC,OAAO79B,KAAKkX,QAAQkH,6BAA4B,SAAClW,GACzC21B,EAAKJ,wBAGTC,EAASn+B,KAAKo+B,EAAUz1B,EAC5B,GAAG01B,EACP,GAAC,CAAAh+B,IAAA,WAAAC,MACD,SAASi+B,GACL,OAAK99B,KAAKkX,QAAQ8Q,WAGd8V,GAAS99B,KAAKw9B,eAAej7B,OACtB,KAEJvC,KAAKkX,QAAQuhB,WAAWsF,mBAAmB/9B,KAAKw9B,eAAeM,IAL3D,IAMf,GAAC,CAAAl+B,IAAA,YAAAC,MACD,WACI,IAAKG,KAAKkX,QAAQ8Q,WACd,MAAO,GAEX,IAE8CpP,EAFxCuD,EAAQnc,KAAKkX,QAAQuhB,WACrBp2B,EAAS,GAAGyW,GAAAf,EAAAA,EAAAA,GACS/X,KAAKw9B,gBAAc,IAA9C,IAAA1kB,EAAAd,MAAAY,EAAAE,EAAAb,KAAAC,MAAgD,KAArC8lB,EAAYplB,EAAA/Y,MACbC,EAAQqc,EAAM4hB,mBAAmBC,GACnCl+B,GACAuC,EAAO2P,KAAKlS,EAEpB,CAAC,OAAA0Y,GAAAM,EAAA5Q,EAAAsQ,EAAA,SAAAM,EAAAL,GAAA,CACD,OAAOpW,CACX,GAAC,CAAAzC,IAAA,MAAAC,MACD,SAAIo+B,GACA,OAAOj+B,KAAKw9B,eAAeU,SAASD,EAAW5lB,GACnD,GAAC,CAAAzY,IAAA,QAAAC,MACD,WACuC,IAA/BG,KAAKw9B,eAAej7B,QAIxBvC,KAAKuY,IAAI,GACb,GAAC,CAAA3Y,IAAA,MAAAC,MACD,SAAIuvB,GAAgB,IAAA+O,EAAA,KAChB,IACIn+B,KAAKy9B,wBAAyB,EAC9Bz9B,KAAKkX,QAAQ6X,mBAAkB,SAACjK,GAC5BqZ,EAAKX,eAAiB1Y,EAASuK,iBAAiB8O,EAAKX,eAAgBpO,EACzE,GACJ,CAAC,QAEGpvB,KAAKy9B,wBAAyB,CAClC,CACJ,KAAC5O,CAAA,CA/D4B,GAiE3BuP,GAAgBC,mBAAmB,4HACnCC,GAAcD,mBAAmB,yIACvC,SAASE,GAAmBC,GACxB,OAAOJ,GAAgBC,mBAAmBG,EAAMzK,YAAcuK,EAClE,CACA,IAAMG,GAAiBJ,mBAAmB,2EACpCK,GAAeL,mBAAmB,wGAIxCM,EAAAA,EAAAA,KAA2B,SAACC,EAAOC,GAC/B,IAAMC,EAAkBF,EAAMG,SAASC,EAAAA,KACnCF,GACAD,EAAUI,QAAQ,mBAAD78B,OAAoB,iBAAiB,0CAA+Em8B,GAAmBO,GAAgB,+BAE5K,IAAMI,EAAoBN,EAAMG,SAASI,EAAAA,KACrCD,GACAL,EAAUI,QAAQ,mBAAD78B,OAAoB,mBAAmB,0CAAiFm8B,GAAmBW,GAAkB,+BAElL,IAAME,EAAiBR,EAAMG,SAASM,EAAAA,KAClCD,GACAP,EAAUI,QAAQ,mBAAD78B,OAAoB,gBAAgB,0CAA8Em8B,GAAmBa,GAAe,+BAEzK,IAAME,EAAiBV,EAAMG,SAASQ,EAAAA,KAClCD,GACAT,EAAUI,QAAQ,mBAAD78B,OAAoB,gBAAgB,0CAjBlDq8B,GAAiBJ,mBAiBmIiB,EAjB1GvL,YAAc2K,GAiB2G,gCAE1K,IAAMc,EAAwBZ,EAAMG,SAASU,EAAAA,IACzCD,GACAX,EAAUI,QAAQ,8BAAD78B,OAA+B,8BAA8B,eAAgEo9B,EAAsBE,KAAK98B,EAAC,OAElL,G,6DClnDIkG,E,uaAlBAyR,EAA0C,SAAUC,EAAY1F,EAAQlV,EAAKuY,GAC7E,IAA2HsC,EAAvHC,EAAIC,UAAUpY,OAAQyS,EAAI0F,EAAI,EAAI5F,EAAkB,OAATqD,EAAgBA,EAAOtB,OAAO+D,yBAAyB9F,EAAQlV,GAAOuY,EACrH,GAAuB,kBAAZ0C,SAAoD,oBAArBA,QAAQC,SAAyB9F,EAAI6F,QAAQC,SAASN,EAAY1F,EAAQlV,EAAKuY,QACpH,IAAK,IAAI3V,EAAIgY,EAAWjY,OAAS,EAAGC,GAAK,EAAGA,KAASiY,EAAID,EAAWhY,MAAIwS,GAAK0F,EAAI,EAAID,EAAEzF,GAAK0F,EAAI,EAAID,EAAE3F,EAAQlV,EAAKoV,GAAKyF,EAAE3F,EAAQlV,KAASoV,GAChJ,OAAO0F,EAAI,GAAK1F,GAAK6B,OAAOkE,eAAejG,EAAQlV,EAAKoV,GAAIA,CAChE,EACIgG,EAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUpG,EAAQlV,GAAOsb,EAAUpG,EAAQlV,EAAKqb,EAAa,CACxE,EACIE,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAU9b,GAAS,IAAM+b,EAAKL,EAAUM,KAAKhc,GAAS,CAAE,MAAOqI,GAAKwT,EAAOxT,EAAI,CAAE,CAC1F,SAAS4T,EAASjc,GAAS,IAAM+b,EAAKL,EAAiB,MAAE1b,GAAS,CAAE,MAAOqI,GAAKwT,EAAOxT,EAAI,CAAE,CAC7F,SAAS0T,EAAKvZ,GAJlB,IAAexC,EAIawC,EAAO6V,KAAOuD,EAAQpZ,EAAOxC,QAJ1CA,EAIyDwC,EAAOxC,MAJhDA,aAAiByb,EAAIzb,EAAQ,IAAIyb,GAAE,SAAUG,GAAWA,EAAQ5b,EAAQ,KAIjBkc,KAAKJ,EAAWG,EAAW,CAC7GF,GAAML,EAAYA,EAAUS,MAAMZ,EAASC,GAAc,KAAKQ,OAClE,GACJ,EAyBM8jB,EAAS,WACX,SAAAA,EAAYC,EAAmBC,EAAiBC,EAAmBC,IAAiBzgC,EAAAA,EAAAA,GAAA,KAAAqgC,GAChF3/B,KAAK4/B,kBAAoBA,EACzB5/B,KAAK6/B,gBAAkBA,EACvB7/B,KAAK8/B,kBAAoBA,EACzB9/B,KAAK+/B,gBAAkBA,CAC3B,CASC,OATApgC,EAAAA,EAAAA,GAAAggC,EAAA,EAAA//B,IAAA,UAAAC,MACD,WACI,OAA+B,IAA3BG,KAAK4/B,kBACE,EAEoB,IAA3B5/B,KAAK8/B,kBACE,EAEJ,CACX,KAACH,CAAA,CAfU,GAiBTK,GAAIrgC,EAAAA,EAAAA,IACN,SAAAqgC,EAAYC,IAAS3gC,EAAAA,EAAAA,GAAA,KAAA0gC,GACjBhgC,KAAKigC,QAAUA,CACnB,IAEEC,GAAuBC,EAAAA,EAAAA,IAAa,qBAAsBC,EAAAA,EAAQC,IAAKzN,EAAAA,GAAa,uBAAwB,sCAC5G0N,GAAuBH,EAAAA,EAAAA,IAAa,qBAAsBC,EAAAA,EAAQG,OAAQ3N,EAAAA,GAAa,uBAAwB,sCAC/G4N,GAAsBL,EAAAA,EAAAA,IAAa,oBAAqBC,EAAAA,EAAQK,MAAO7N,EAAAA,GAAa,sBAAuB,qCAC7G8N,EAAU,SAAAzpB,IAAAlY,EAAAA,EAAAA,GAAA2hC,EAAAzpB,GAAA,IAAAjY,GAAAC,EAAAA,EAAAA,GAAAyhC,GACV,SAAAA,EAAYC,EAAYC,EAAkBC,GAAkB,IAAAxhC,EAgE/B,OAhE+BC,EAAAA,EAAAA,GAAA,KAAAohC,IACxDrhC,EAAAL,EAAAO,KAAA,OACKqhC,iBAAmBA,EACxBvhC,EAAKwhC,iBAAmBA,EACxBxhC,EAAKyhC,OAAS,EACdzhC,EAAK0hC,YAAcJ,EACnBthC,EAAK2hC,YAAa,EAClB3hC,EAAK4hC,QAAS70B,EAAAA,EAAAA,GAAkBC,SAASC,cAAc,QACvDjN,EAAK4hC,OAAO10B,aAAa,sBACzBlN,EAAK6hC,oBAAqB90B,EAAAA,EAAAA,GAAkBC,SAASC,cAAc,QACnEjN,EAAK6hC,mBAAmB30B,aAAa,uBACrClN,EAAK8hC,WAAa9hC,EAAKgY,UAAU,IAAI+pB,EAAAA,EAAU/hC,EAAK6hC,mBAAmBl1B,UACvE3M,EAAK8hC,WAAWnvB,KAAK,IAAIqvB,EAAAA,GAAO,mBAAoBzO,EAAAA,GAAa,cAAe,SAAU,qBAAuB0O,EAAAA,EAAUC,YAAYf,IAAsB,GAAM,kBAAMrlB,GAAS/J,EAAAA,EAAAA,GAAA/R,QAAO,OAAQ,GAAMsmB,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAxU,GAAA,cAAAA,EAAAyU,KAAAzU,EAAAuK,MAAA,cAAAvK,EAAA0U,OAAA,SAAsBhmB,KAAKwhC,QAAM,wBAAAlwB,EAAA6U,OAAA,GAAAN,EAAA,SAAI,IAAG,CAAEpB,OAAO,EAAOgd,MAAM,IACvQpiC,EAAK2M,SAAUI,EAAAA,EAAAA,GAAkBC,SAASC,cAAc,QACxDjN,EAAK2M,QAAQO,aAAa,wCAC1BlN,EAAKqiC,UAAWt1B,EAAAA,EAAAA,GAAkBC,SAASC,cAAc,QACzDjN,EAAKqiC,SAASn1B,aAAa,uBAC3BlN,EAAKqiC,SAASj1B,aAAa,OAAQ,QACnCpN,EAAKsiC,UAAYtiC,EAAKgY,UAAU,IAAIuqB,EAAAA,GAAqBviC,EAAKqiC,SAAS11B,QAAS,CAAC,IACjF3M,EAAK2M,QAAQA,QAAQ6nB,YAAYx0B,EAAKsiC,UAAU10B,cAChD5N,EAAKgY,UAAUspB,EAAWkB,iBAAgB,WACjCxiC,EAAK2hC,aAGV3hC,EAAKyiC,OAASziC,EAAK0iC,WACnB1iC,EAAK2iC,UACT,KACA3iC,EAAKgY,UAAUspB,EAAWsB,oBAAoBrjB,2BAA0B,WAC/Dvf,EAAK2hC,YAGV3hC,EAAK2iC,SACT,KACA3iC,EAAKgY,UAAU6N,EAAIgd,8BAA8B7iC,EAAK2M,QAAQA,QAAS,SAAS,SAAC9D,GAC7EA,EAAEi6B,iBACF,IAAMC,EAAMld,EAAImd,oBAAoBn6B,EAAE4M,OAAQ,mBAC1CstB,GACA/iC,EAAKijC,SAASF,EAEtB,KACA/iC,EAAKgY,UAAU6N,EAAIgd,8BAA8B7iC,EAAK2M,QAAQA,QAAS,WAAW,SAAC9D,IAC3EA,EAAEq6B,OAAO,KACNr6B,EAAEq6B,OAAO,OACTr6B,EAAEq6B,OAAO,QACZr6B,EAAEi6B,iBACF9iC,EAAKijC,SAASjjC,EAAKmjC,cAAe,UAElCt6B,EAAEq6B,OAAO,KACNr6B,EAAEq6B,OAAO,OACTr6B,EAAEq6B,OAAO,QACZr6B,EAAEi6B,iBACF9iC,EAAKijC,SAASjjC,EAAKojC,cAAe,cAElCv6B,EAAEq6B,OAAO,IACNr6B,EAAEq6B,OAAO,OACTr6B,EAAEq6B,OAAO,MACTr6B,EAAEq6B,OAAO,OACTr6B,EAAEq6B,OAAO,KACTr6B,EAAEq6B,OAAO,MACZr6B,EAAEi6B,iBACF9iC,EAAKqjC,SAEb,KACArjC,EAAKyiC,OAAS,GACdziC,EAAKsjC,aAAe,KAAKtjC,CAC7B,CAygBC,OAzgBAM,EAAAA,EAAAA,GAAA+gC,EAAA,EAAA9gC,IAAA,OAAAC,MACD,WACI,IAAIi+B,EAAQ,EAIZ,GAHK99B,KAAKghC,aACNhhC,KAAK8hC,OAAS9hC,KAAK+hC,YAEnB/hC,KAAKghC,WAAY,CAEjB,IADA,IAAI4B,GAAgB,EACXpgC,EAAI,EAAGC,EAAMzC,KAAK8hC,OAAOv/B,OAAQC,EAAIC,EAAKD,IAC/C,GAAIxC,KAAK8hC,OAAOt/B,KAAOxC,KAAK2iC,aAAc,CACtCC,EAAepgC,EACf,KACJ,CAEJs7B,EAAS99B,KAAK8hC,OAAOv/B,OAASqgC,EAAe,CACjD,MAEI9E,EAAQ99B,KAAK6iC,eAAe7iC,KAAK+gC,YAAYrX,eAEjD,GAA2B,IAAvB1pB,KAAK8hC,OAAOv/B,OAAhB,CAIAu7B,GAAgB99B,KAAK8hC,OAAOv/B,OAC5B,IAAM09B,EAAUjgC,KAAK8hC,OAAOhE,GAAOmC,QACnCjgC,KAAK+gC,YAAYv0B,YAAY,IAAI3H,EAAAA,EAASo7B,EAAQ,GAAGH,kBAAmB,IACxE9/B,KAAK+gC,YAAY+B,aAAa,CAAExX,YAAa,EAAG1hB,gBAAiBq2B,EAAQ,GAAGH,kBAAmBvU,UAAW,WAAmDzhB,cAAem2B,EAAQA,EAAQ19B,OAAS,GAAGw9B,kBACxM//B,KAAKghC,YAAa,EAClBhhC,KAAK+gC,YAAYgC,WACjB/iC,KAAKgiC,UACLhiC,KAAKsiC,SAAStiC,KAAKyiC,cAAe,WARlC,CASJ,GAAC,CAAA7iC,IAAA,OAAAC,MACD,WACI,IAAIi+B,EAAQ,EAIZ,GAHK99B,KAAKghC,aACNhhC,KAAK8hC,OAAS9hC,KAAK+hC,YAEnB/hC,KAAKghC,WAAY,CAEjB,IADA,IAAI4B,GAAgB,EACXpgC,EAAI,EAAGC,EAAMzC,KAAK8hC,OAAOv/B,OAAQC,EAAIC,EAAKD,IAC/C,GAAIxC,KAAK8hC,OAAOt/B,KAAOxC,KAAK2iC,aAAc,CACtCC,EAAepgC,EACf,KACJ,CAEJs7B,EAAS8E,EAAe,CAC5B,MAEI9E,EAAQ99B,KAAK6iC,eAAe7iC,KAAK+gC,YAAYrX,eAEjD,GAA2B,IAAvB1pB,KAAK8hC,OAAOv/B,OAAhB,CAIAu7B,GAAgB99B,KAAK8hC,OAAOv/B,OAC5B,IAAM09B,EAAUjgC,KAAK8hC,OAAOhE,GAAOmC,QACnCjgC,KAAK+gC,YAAYv0B,YAAY,IAAI3H,EAAAA,EAASo7B,EAAQ,GAAGH,kBAAmB,IACxE9/B,KAAK+gC,YAAY+B,aAAa,CAAExX,YAAa,EAAG1hB,gBAAiBq2B,EAAQ,GAAGH,kBAAmBvU,UAAW,WAAmDzhB,cAAem2B,EAAQA,EAAQ19B,OAAS,GAAGw9B,kBACxM//B,KAAKghC,YAAa,EAClBhhC,KAAK+gC,YAAYgC,WACjB/iC,KAAKgiC,UACLhiC,KAAKsiC,SAAStiC,KAAKwiC,cAAe,OARlC,CASJ,GAAC,CAAA5iC,IAAA,SAAAC,MACD,WACI,IAAImjC,GAAoB,EAClBC,EAAUjjC,KAAKkjC,wBACrB,GAAID,EAAS,CACT,IAAMzhC,EAAa0T,SAAS+tB,EAAQhuB,aAAa,aAAc,IAC1DkuB,MAAM3hC,KACPwhC,EAAmBxhC,EAE3B,CACAxB,KAAKwhC,QACqB,IAAtBwB,IACAhjC,KAAK+gC,YAAYv0B,YAAY,IAAI3H,EAAAA,EAASm+B,EAAkB,IAC5DhjC,KAAK+gC,YAAYtM,eAAe,IAAI5vB,EAAAA,EAASm+B,EAAkB,GAAI,GAE3E,GAAC,CAAApjC,IAAA,OAAAC,MACD,WACIG,KAAKghC,YAAa,EAClBhhC,KAAK+gC,YAAY3Z,cAAc,CAAE+P,UAAU,IAC3Cn3B,KAAK+gC,YAAY9Y,QACjBjoB,KAAK+gC,YAAYgC,WACjB/iC,KAAKgiC,SACT,GAAC,CAAApiC,IAAA,cAAAC,MACD,WACI,IAAMojC,EAAUjjC,KAAKkjC,wBACrB,OAAKD,EAGDA,EAAQG,uBACDH,EAAQG,uBAEZH,EALIjjC,KAAKqjC,cAMpB,GAAC,CAAAzjC,IAAA,cAAAC,MACD,WACI,IAAMojC,EAAUjjC,KAAKkjC,wBACrB,OAAKD,EAGDA,EAAQK,mBACDL,EAAQK,mBAEZL,EALIjjC,KAAKqjC,cAMpB,GAAC,CAAAzjC,IAAA,eAAAC,MACD,WACI,OAAOG,KAAKgM,QAAQA,QAAQu3B,cAAc,mBAC9C,GAAC,CAAA3jC,IAAA,wBAAAC,MACD,WACI,IAAMwC,EAASgK,SAASm3B,cACxB,OAAInhC,GAAU,kBAAkBohC,KAAKphC,EAAO6yB,WACjC7yB,EAEJ,IACX,GAAC,CAAAzC,IAAA,WAAAC,MACD,SAASuiC,EAAKz+B,GACV,IAAMs/B,EAAUjjC,KAAKkjC,wBACrBd,EAAIsB,SAAW,EACftB,EAAIna,QACAgb,GAAWA,IAAYb,IACvBa,EAAQS,UAAY,GAExB,IAAMC,EAAWhgC,EAA0B,SAATA,EAA8B,OAAZs/B,QAAgC,IAAZA,OAAqB,EAASA,EAAQK,mBAAiC,OAAZL,QAAgC,IAAZA,OAAqB,EAASA,EAAQG,uBAArKH,GACR,OAAZU,QAAgC,IAAZA,OAAqB,EAASA,EAAQC,UAAUtS,SAAS,gBAC7EtxB,KAAK6gC,iBAAiBgD,aAAaC,EAAAA,GAASC,kBAAkB,IAE7C,OAAZJ,QAAgC,IAAZA,OAAqB,EAASA,EAAQC,UAAUtS,SAAS,iBAClFtxB,KAAK6gC,iBAAiBgD,aAAaC,EAAAA,GAASE,iBAAiB,GAEjEhkC,KAAK2hC,UAAUsC,aACnB,GAAC,CAAArkC,IAAA,YAAAC,MACD,WACI,OAAOG,KAAKghC,UAChB,GAAC,CAAAphC,IAAA,SAAAC,MACD,SAAOmB,EAAKI,EAAOE,GACftB,KAAK8gC,OAAS1/B,EACdpB,KAAKihC,OAAO1tB,OAAOvS,EAAM,GACzBhB,KAAKihC,OAAOhtB,SAAS7S,GACrBpB,KAAKihC,OAAOztB,UAAUxT,KAAKghC,WAAa,EAAI,GAC5ChhC,KAAKgM,QAAQuH,OAAOvS,GACpBhB,KAAKgM,QAAQiI,SAAS7S,GACtBpB,KAAKgM,QAAQwH,UAAUlS,GACvBtB,KAAK0hC,SAASluB,UAAUlS,GACxBtB,KAAK0hC,SAASztB,SAAS7S,GACnBpB,KAAKghC,YACLhhC,KAAKkhC,mBAAmBz0B,aAAa,cAAe,SACpDzM,KAAKkhC,mBAAmBgD,WAAW,WAGnClkC,KAAKkhC,mBAAmBz0B,aAAa,cAAe,QACpDzM,KAAKkhC,mBAAmBgD,WAAW,QAE3C,GAAC,CAAAtkC,IAAA,WAAAC,MACD,WACI,IAAMskC,EAAcnkC,KAAK+gC,YAAYqD,iBACrC,IAAKD,GAAsC,IAAvBA,EAAY5hC,OAC5B,MAAO,GAEX,IAAM8hC,EAAgBrkC,KAAK+gC,YAAYuD,oBAAoB7L,WACrD8L,EAAgBvkC,KAAK+gC,YAAYkB,oBAAoBxJ,WAC3D,OAAK4L,GAAkBE,EAGhB7D,EAAW8D,eAAeL,EAAaE,EAAcxS,eAAgB0S,EAAc1S,gBAF/E,EAGf,GAAC,CAAAjyB,IAAA,iBAAAC,MA2HD,SAAe4kC,GAEX,IADA,IAAMjjC,EAAaijC,EAAIjjC,WACdgB,EAAI,EAAGC,EAAMzC,KAAK8hC,OAAOv/B,OAAQC,EAAIC,EAAKD,IAAK,CACpD,IAAMkiC,EAAO1kC,KAAK8hC,OAAOt/B,GAAGy9B,QAE5B,GAAIz+B,GADqBkjC,EAAKA,EAAKniC,OAAS,GAAGw9B,gBAE3C,OAAOv9B,CAEf,CACA,OAAO,CACX,GAAC,CAAA5C,IAAA,UAAAC,MACD,WACI,IAAM8kC,EAAkB3kC,KAAK+gC,YAAYuD,oBAAoBhb,aACvDsb,EAAkB5kC,KAAK+gC,YAAYkB,oBAAoB3Y,aACvD+a,EAAgBrkC,KAAK+gC,YAAYuD,oBAAoB7L,WACrD8L,EAAgBvkC,KAAK+gC,YAAYkB,oBAAoBxJ,WACrDoM,EAAoBR,EAAc/a,aAClCwb,EAAoBP,EAAcjb,aACxC,IAAKtpB,KAAKghC,aAAeqD,IAAkBE,EAIvC,OAHArf,EAAI6f,UAAU/kC,KAAK0hC,SAAS11B,SAC5BhM,KAAK2iC,aAAe,UACpB3iC,KAAK2hC,UAAUsC,cAGnBjkC,KAAK+gC,YAAY3Z,cAAc,CAAE+P,UAAU,IAC3C,IAAM6N,EAAYhlC,KAAK6iC,eAAe7iC,KAAK+gC,YAAYrX,eACvD,GAAI1pB,KAAK8hC,OAAOkD,KAAehlC,KAAK2iC,aAApC,CAGA3iC,KAAK2iC,aAAe3iC,KAAK8hC,OAAOkD,GAChC,IAAMC,EAAQjlC,KAAK8hC,OAAOkD,GAAW/E,QAC/BiF,EAAY74B,SAASC,cAAc,OACzC44B,EAAUhQ,UAAY,oBACtBgQ,EAAUz4B,aAAa,OAAQ,QAC/By4B,EAAUz4B,aAAa,aAAc,+EACrC8E,EAAAA,EAAAA,GAAc2zB,EAAWN,EAAgB5/B,IAAI,KAK7C,IAJA,IAAImgC,EAAkB,EAClBC,EAAkB,EAClBC,EAAkB,EAClBC,EAAkB,EACb9iC,EAAI,EAAGC,EAAMwiC,EAAM1iC,OAAQC,EAAIC,EAAKD,IAAK,CAC9C,IAAM+iC,EAAYN,EAAMziC,GAClBo9B,EAAoB2F,EAAU3F,kBAC9BC,EAAkB0F,EAAU1F,gBAC5BC,EAAoByF,EAAUzF,kBAC9BC,EAAkBwF,EAAUxF,gBACR,IAAtBH,IAAiD,IAApBuF,GAAyBvF,EAAoBuF,KAC1EA,EAAkBvF,GAEE,IAApBC,IAA+C,IAApBuF,GAAyBvF,EAAkBuF,KACtEA,EAAkBvF,GAEI,IAAtBC,IAAiD,IAApBuF,GAAyBvF,EAAoBuF,KAC1EA,EAAkBvF,GAEE,IAApBC,IAA+C,IAApBuF,GAAyBvF,EAAkBuF,KACtEA,EAAkBvF,EAE1B,CACA,IAAMyF,EAASn5B,SAASC,cAAc,OACtCk5B,EAAOtQ,UAAY,kBACnB,IAAMuQ,EAAOp5B,SAASC,cAAc,OACpCm5B,EAAKvQ,UAAY,uCACjB,IAAMwQ,EAA0BN,EAAkBD,EAAkB,EAC9DQ,EAA0BL,EAAkBD,EAAkB,EACpEI,EAAK5R,YAAYxnB,SAASu5B,eAAe,GAADxjC,OAAI4iC,EAAY,EAAC,KAAA5iC,OAAIpC,KAAK8hC,OAAOv/B,OAAM,UAAAH,OAAS+iC,EAAe,KAAA/iC,OAAIsjC,EAAuB,MAAAtjC,OAAKijC,EAAe,KAAAjjC,OAAIujC,EAAuB,SACjLH,EAAO/4B,aAAa,YAAa6G,OAAO+xB,IACxC,IAAMQ,EAAe,SAACz8B,GAClB,OAAc,IAAVA,EACOwpB,EAAAA,GAAa,mBAAoB,oBAEzB,IAAVxpB,EACEwpB,EAAAA,GAAa,mBAAoB,kBAGjCA,EAAAA,GAAa,qBAAsB,oBAAqBxpB,EAEvE,EACM08B,EAA8BD,EAAaH,GAC3CK,EAA8BF,EAAaF,GACjDH,EAAO/4B,aAAa,aAAcmmB,EAAAA,GAAa,CAC3ChzB,IAAK,SACLomC,QAAS,CACL,gDACA,4DACA,+GACA,0EACA,qDACA,+GAEL,wEAA0EhB,EAAY,EAAIhlC,KAAK8hC,OAAOv/B,OAAQ4iC,EAAiBW,EAA6BT,EAAiBU,IAChLP,EAAO3R,YAAY4R,GAEnBD,EAAO/4B,aAAa,OAAQ,YAC5By4B,EAAUrR,YAAY2R,GAGtB,IAFA,IAAMS,EAAarB,EAAgB5/B,IAAI,IACnCkhC,EAAUb,EACL7iC,EAAI,EAAGC,EAAMwiC,EAAM1iC,OAAQC,EAAIC,EAAKD,IAAK,CAC9C,IAAM+iC,EAAYN,EAAMziC,GACxBk+B,EAAWyF,eAAejB,EAAWK,EAAWW,EAASD,EAAYjmC,KAAK8gC,OAAQ6D,EAAiBN,EAAeQ,EAAmBD,EAAiBL,EAAeO,EAAmB9kC,KAAK4gC,iBAAiBwF,iBAC1K,IAAhCb,EAAUzF,oBACVoG,EAAUX,EAAUxF,gBAE5B,CACA7a,EAAI6f,UAAU/kC,KAAK0hC,SAAS11B,SAC5BhM,KAAK0hC,SAAS11B,QAAQ6nB,YAAYqR,GAClCllC,KAAK2hC,UAAUsC,aA9Ef,CA+EJ,IAAC,EAAArkC,IAAA,iBAAAC,MArOD,SAAsBskC,EAAakC,EAAmBC,GAClD,IAAKnC,GAAsC,IAAvBA,EAAY5hC,OAC5B,MAAO,GAIX,IAFA,IAAM0iC,EAAQ,GACVsB,EAAc,EACT/jC,EAAI,EAAGC,EAAM0hC,EAAY5hC,OAAQC,EAAIC,EAAKD,IAAK,CACpD,IAAMgkC,EAAarC,EAAY3hC,GACzBikC,EAAgBD,EAAWE,wBAC3BC,EAAcH,EAAWI,sBACzBC,EAAgBL,EAAWM,wBAC3BC,EAAcP,EAAWQ,sBACzBhyB,EAAI,GACNiyB,EAAU,EAGJC,EAAsC,IAAhBP,EAAoBF,EAAgBA,EAAgB,EAC1EU,EAAsC,IAAhBJ,EAAoBF,EAAgBA,EAAgB,EAE5EO,EAAc,EACdC,EAAc,EAClB,GAAI7kC,EAAI,EAAG,CACP,IAAM8kC,EAAiBnD,EAAY3hC,EAAI,GAEnC4kC,EADyC,IAAzCE,EAAeV,sBACDU,EAAeZ,wBAA0B,EAGzCY,EAAeV,sBAAwB,EAGrDS,EADyC,IAAzCC,EAAeN,sBACDM,EAAeR,wBAA0B,EAGzCQ,EAAeN,sBAAwB,CAE7D,CACA,IAAIO,EAAeL,EArSR,EAqSkD,EACzDM,EAAeL,EAtSR,EAsSkD,EAC7D,GAAII,EAAeH,EAAa,CAC5B,IAAMK,EAAQL,EAAcG,EAC5BA,GAA8BE,EAC9BD,GAA8BC,CAClC,CACA,GAAID,EAAeH,EAAa,CAC5B,IAAMI,EAAQJ,EAAcG,EAC5BD,GAA8BE,EAC9BD,GAA8BC,CAClC,CACAzyB,EAAEiyB,KAAa,IAAItH,EAAU4H,EAAcL,EAAoBM,EAAcL,GAIzD,IAAhBR,IACA3xB,EAAEiyB,KAAa,IAAItH,EAAU8G,EAAeE,EAAa,EAAG,IAK5C,IAAhBI,IACA/xB,EAAEiyB,KAAa,IAAItH,EAAU,EAAG,EAAGkH,EAAeE,IAKtD,IAAMW,EAAsC,IAAhBf,EAAoBF,EAAgB,EAAIE,EAAc,EAC5EgB,EAAsC,IAAhBZ,EAAoBF,EAAgB,EAAIE,EAAc,EAE9Ea,EAAcvB,EACdwB,EAAcvB,EAClB,GAAI9jC,EAAI,EAAIC,EAAK,CACb,IAAMqlC,EAAiB3D,EAAY3hC,EAAI,GAEnColC,EADyC,IAAzCE,EAAelB,sBACDkB,EAAepB,wBAGfoB,EAAepB,wBAA0B,EAGvDmB,EADyC,IAAzCC,EAAed,sBACDc,EAAehB,wBAGfgB,EAAehB,wBAA0B,CAE/D,CACA,IAAIiB,EAAaL,EArVN,EAqVgD,EACvDM,EAAaL,EAtVN,EAsVgD,EAC3D,GAAII,EAAaH,EAAa,CAC1B,IAAMH,EAAQG,EAAcG,EAC5BA,GAA0BN,EAC1BO,GAA0BP,CAC9B,CACA,GAAIO,EAAaH,EAAa,CAC1B,IAAMJ,EAAQI,EAAcG,EAC5BD,GAA0BN,EAC1BO,GAA0BP,CAC9B,CACAzyB,EAAEiyB,KAAa,IAAItH,EAAU+H,EAAoBK,EAAYJ,EAAoBK,GAErF/C,EAAMsB,KAAiB,IAAIvG,EAAKhrB,EACpC,CAKA,IAHA,IAAIizB,EAAOhD,EAAM,GAAGhF,QACdjrB,EAAI,GACNiyB,EAAU,EACLzkC,EAAI,EAAGC,EAAMwiC,EAAM1iC,OAAQC,EAAIC,EAAKD,IAAK,CAC9C,IAAM0lC,EAAWjD,EAAMziC,GAAGy9B,QACpBkI,EAAWF,EAAKA,EAAK1lC,OAAS,GAC9B6lC,EAAYF,EAAS,GACA,IAAvBC,EAASE,WACkB,IAAxBD,EAAUC,WACVD,EAAUxI,mBAAqBuI,EAAStI,iBAE3CoI,EAAKA,EAAK1lC,OAAS,GAAK,IAAIo9B,EAAUwI,EAASvI,kBAAmBwI,EAAUvI,gBAAiBsI,EAASrI,kBAAmBsI,EAAUrI,iBACnIkI,EAAOA,EAAK7lC,OAAO8lC,EAASj9B,MAAM,MAGtC+J,EAAEiyB,KAAa,IAAIjH,EAAKiI,GACxBA,EAAOC,EACX,CAEA,OADAlzB,EAAEiyB,KAAa,IAAIjH,EAAKiI,GACjBjzB,CACX,GAAC,CAAApV,IAAA,iBAAAC,MA6GD,SAAsByoC,EAAM/C,EAAWW,EAASD,EAAY7kC,EAAOujC,EAAiBN,EAAeQ,EAAmBD,EAAiBL,EAAeO,EAAmBsB,GACrK,IAAMziC,EAAO4hC,EAAU8C,UACnBE,EAAe,kBACfC,EAA4B,GAE5BC,EAAa,KACjB,OAAQ9kC,GACJ,KAAK,EACD4kC,EAAe,8BACfC,EAA4B,eAC5BC,EAAavI,EACb,MACJ,KAAK,EACDqI,EAAe,8BACfC,EAA4B,eAC5BC,EAAanI,EAYrB,IATA,IAAMV,EAAoB2F,EAAU3F,kBAC9BC,EAAkB0F,EAAU1F,gBAC5BC,EAAoByF,EAAUzF,kBAC9BC,EAAkBwF,EAAUxF,gBAC5B2I,EAAMxmC,KAAKuJ,IAAIs0B,EAAkBD,EAAmBD,EAAkBD,GACtE+I,EAAqBhE,EAAgB3/B,IAAI,KACzC4jC,EAA2BD,EAAmB5X,iBAAmB4X,EAAmB3X,iBACpF6X,EAAqBjE,EAAgB5/B,IAAI,KACzC8jC,EAA2B,GAAKD,EAAmB9X,iBAAmB8X,EAAmB7X,iBACtFxuB,EAAI,EAAGA,GAAKkmC,EAAKlmC,IAAK,CAC3B,IAAMumC,EAAsC,IAAtBnJ,EAA0B,EAAIA,EAAoBp9B,EAClEwmC,EAAsC,IAAtBlJ,EAA0B,EAAIA,EAAoBt9B,EAClE4/B,EAAM/1B,SAASC,cAAc,OACnC81B,EAAI6G,MAAMC,SAAW9nC,EAAQ,KAC7BghC,EAAIlN,UAAYqT,EAChBnG,EAAI31B,aAAa,OAAQ,YACJ,IAAjBu8B,IACA9C,EAAU8C,GAEd5G,EAAI31B,aAAa,YAAa6G,OAAO4yB,IACrC,IAAMT,EAAOp5B,SAASC,cAAc,OACpCm5B,EAAKvQ,UAAY,mBACjBuQ,EAAKwD,MAAM3nC,OAAS,GAAHc,OAAM6jC,EAAU,MACjC7D,EAAIvO,YAAY4R,GAChB,IAAM0D,EAAqB98B,SAASC,cAAc,QAClD68B,EAAmBF,MAAM7nC,MAASwnC,EAA2B,KAC7DO,EAAmBF,MAAMC,SAAYN,EAA2B,KAChEO,EAAmBjU,UAAY,0BAA4BsT,EACtC,IAAjBO,EACAI,EAAmBtV,YAAYxnB,SAASu5B,eAAetyB,OAAOy1B,KAG9DI,EAAmBC,UAAY,OAEnC3D,EAAK5R,YAAYsV,GACjB,IAAME,EAAqBh9B,SAASC,cAAc,QAClD+8B,EAAmBJ,MAAM7nC,MAAS0nC,EAA2B,KAC7DO,EAAmBJ,MAAMC,SAAYJ,EAA2B,KAChEO,EAAmBJ,MAAMK,aAAe,OACxCD,EAAmBnU,UAAY,0BAA4BsT,EACtC,IAAjBQ,EACAK,EAAmBxV,YAAYxnB,SAASu5B,eAAetyB,OAAO01B,KAG9DK,EAAmBD,UAAY,OAEnC3D,EAAK5R,YAAYwV,GACjB,IAAME,EAASl9B,SAASC,cAAc,QAEtC,GADAi9B,EAAOrU,UA9Da,qBA+DhBuT,EAAY,CACZ,IAAMe,EAAgBn9B,SAASC,cAAc,QAC7Ck9B,EAActU,UAAYoM,EAAAA,EAAUC,YAAYkH,GAChDe,EAAcJ,UAAY,WAC1BG,EAAO1V,YAAY2V,EACvB,MAEID,EAAOH,UAAY,WAEvB3D,EAAK5R,YAAY0V,GACjB,IAAIE,OAAW,EACf,GAAqB,IAAjBT,EAAoB,CACpB,IAAIU,EAAO1pC,KAAK2pC,YAAYpF,EAAeK,EAAiBE,EAAkBzb,QAAS2f,EAAc5C,GACjG1F,EAAWtxB,YACXs6B,EAAOhJ,EAAWtxB,UAAUC,WAAWq6B,IAE3CjE,EAAKj2B,mBAAmB,YAAak6B,GACrCD,EAAclF,EAAc9a,eAAeuf,EAC/C,KACK,CACD,IAAIU,EAAO1pC,KAAK2pC,YAAYtF,EAAeM,EAAiBE,EAAkBxb,QAAS0f,EAAc3C,GACjG1F,EAAWtxB,YACXs6B,EAAOhJ,EAAWtxB,UAAUC,WAAWq6B,IAE3CjE,EAAKj2B,mBAAmB,YAAak6B,GACrCD,EAAcpF,EAAc5a,eAAesf,EAC/C,CAC2B,IAAvBU,EAAYlnC,SACZknC,EAAc7W,EAAAA,GAAa,YAAa,UAE5C,IAAIgX,EAAY,GAChB,OAAQjmC,GACJ,KAAK,EAEGimC,EADAb,IAAiBC,EACLpW,EAAAA,GAAa,CAAEhzB,IAAK,gBAAiBomC,QAAS,CAAC,4EAA8E,yBAA0ByD,EAAaV,GAGpKnW,EAAAA,GAAa,YAAa,0CAA2C6W,EAAaV,EAAcC,GAEhH,MACJ,KAAK,EACDY,EAAYhX,EAAAA,GAAa,aAAc,0BAA2B6W,EAAaT,GAC/E,MACJ,KAAK,EACDY,EAAYhX,EAAAA,GAAa,aAAc,0BAA2B6W,EAAaV,GAGvF3G,EAAI31B,aAAa,aAAcm9B,GAC/BtB,EAAKzU,YAAYuO,EACrB,CACJ,GAAC,CAAAxiC,IAAA,cAAAC,MACD,SAAmBsc,EAAOpX,EAASskB,EAAS7nB,EAAY4kC,GACpD,IAAMqD,EAActtB,EAAMsN,eAAejoB,GACnC6P,EAAWtM,EAAQC,IAAI,IACvB6kC,EAAaC,EAAAA,EAAWC,YAAYN,EAAarD,GACjD4D,EAAeC,EAAAA,GAAsBD,aAAaP,EAAattB,EAAM+tB,6BACrEC,EAAcF,EAAAA,GAAsBE,YAAYV,EAAaO,EAAc7tB,EAAMiuB,mBAEvF,OADUC,EAAAA,EAAAA,IAAe,IAAIC,EAAAA,GAAiBj5B,EAASk5B,cAAgBxlC,EAAQC,IAAI,IAAuDqM,EAASm5B,+BAAgCf,GAAa,EAAOO,EAAcG,EAAa,EAAGN,EAAY,GAAIxgB,EAAS,EAAGhY,EAASo5B,WAAYp5B,EAASq5B,YAAar5B,EAASs5B,cAAe5lC,EAAQC,IAAI,KAAgDD,EAAQC,IAAI,IAAyCD,EAAQC,IAAI,IAAgDD,EAAQC,IAAI,MAAyC4lC,EAAAA,GAAoBC,IAAK,OACtjBnB,IACb,KAAChJ,CAAA,CA3kBS,CAA4BpmB,EAAAA,IA6kB1ComB,EAAWtxB,UAA2C,QAA9BtG,EAAK8H,OAAOC,oBAAiC,IAAP/H,OAAgB,EAASA,EAAGgI,aAAa,aAAc,CAAEzB,WAAY,SAAAxP,GAAK,OAAIA,CAAK,IACjJ6gC,EAAanmB,EAAW,CACpBS,EAAQ,EAAG8vB,EAAAA,GACX9vB,EAAQ,EAAG+vB,EAAAA,KACZrK,GAEH,IACMsK,EAAc,SAAAC,IAAAlsC,EAAAA,EAAAA,GAAAisC,EAAAC,GAAA,IAAAt3B,GAAA1U,EAAAA,EAAAA,GAAA+rC,GAChB,SAAAA,IAAc,OAAA1rC,EAAAA,EAAAA,GAAA,KAAA0rC,GAAAr3B,EAAApU,KAAA,KACJ,CACF8Y,GAAI,gCACJoM,MAAOmO,EAAAA,GAAa,gCAAiC,yBACrDlO,MAAO,wBACPE,aAAcsmB,EAAAA,GAAe9yB,IAAI,kBACjC+yB,OAAQ,CACJC,OAAQ,KACRC,QAAS,GACTC,OAAQ,MAGpB,CAIC,OAJA3rC,EAAAA,EAAAA,GAAAqrC,EAAA,EAAAprC,IAAA,MAAAC,MACD,SAAIilB,EAAUpN,GACV,IAAMipB,EAAa4K,GAAsBzmB,GAC1B,OAAf6b,QAAsC,IAAfA,GAAiCA,EAAW6K,gBACvE,KAACR,CAAA,CAjBe,CAASS,EAAAA,IAmBvBC,EAAc,SAAAC,IAAA5sC,EAAAA,EAAAA,GAAA2sC,EAAAC,GAAA,IAAAv3B,GAAAnV,EAAAA,EAAAA,GAAAysC,GAChB,SAAAA,IAAc,OAAApsC,EAAAA,EAAAA,GAAA,KAAAosC,GAAAt3B,EAAA7U,KAAA,KACJ,CACF8Y,GAAI,gCACJoM,MAAOmO,EAAAA,GAAa,gCAAiC,6BACrDlO,MAAO,4BACPE,aAAcsmB,EAAAA,GAAe9yB,IAAI,kBACjC+yB,OAAQ,CACJC,OAAQ,KACRC,QAAS,KACTC,OAAQ,MAGpB,CAIC,OAJA3rC,EAAAA,EAAAA,GAAA+rC,EAAA,EAAA9rC,IAAA,MAAAC,MACD,SAAIilB,EAAUpN,GACV,IAAMipB,EAAa4K,GAAsBzmB,GAC1B,OAAf6b,QAAsC,IAAfA,GAAiCA,EAAWiL,gBACvE,KAACF,CAAA,CAjBe,CAASD,EAAAA,IAmB7B,SAASF,GAAsBzmB,GAC3B,IAAMlI,EAAoBkI,EAAS9f,IAAIowB,EAAAA,GACjCyW,EAAcjvB,EAAkBkvB,kBAChCC,EAAmBnvB,EAAkBovB,sBAC3C,IAAKD,EACD,OAAO,KAEX,IAAK,IAAIvpC,EAAI,EAAGC,EAAMopC,EAAYtpC,OAAQC,EAAIC,EAAKD,IAAK,CACpD,IAAMm+B,EAAakL,EAAYrpC,GAC/B,GAAIm+B,EAAWsB,oBAAoB7R,UAAY2b,EAAiB3b,SAAWuQ,EAAW2D,oBAAoBlU,UAAY2b,EAAiB3b,QACnI,OAAOuQ,CAEf,CACA,OAAO,IACX,EACAsL,EAAAA,EAAAA,IAAqBjB,IACrBiB,EAAAA,EAAAA,IAAqBP,G,cC7sBjBvwB,GAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAU9b,GAAS,IAAM+b,EAAKL,EAAUM,KAAKhc,GAAS,CAAE,MAAOqI,GAAKwT,EAAOxT,EAAI,CAAE,CAC1F,SAAS4T,EAASjc,GAAS,IAAM+b,EAAKL,EAAiB,MAAE1b,GAAS,CAAE,MAAOqI,GAAKwT,EAAOxT,EAAI,CAAE,CAC7F,SAAS0T,EAAKvZ,GAJlB,IAAexC,EAIawC,EAAO6V,KAAOuD,EAAQpZ,EAAOxC,QAJ1CA,EAIyDwC,EAAOxC,MAJhDA,aAAiByb,EAAIzb,EAAQ,IAAIyb,GAAE,SAAUG,GAAWA,EAAQ5b,EAAQ,KAIjBkc,KAAKJ,EAAWG,EAAW,CAC7GF,GAAML,EAAYA,EAAUS,MAAMZ,EAASC,GAAc,KAAKQ,OAClE,GACJ,EAQaqwB,GAAgB,SAAAj1B,IAAAlY,EAAAA,EAAAA,GAAAmtC,EAAAj1B,GAAA,IAAAjY,GAAAC,EAAAA,EAAAA,GAAAitC,GAezB,SAAAA,EAAYC,EAAaC,EAAgB10B,EAAQgtB,EAAM2H,EAAqBC,GAAmB,IAAAjtC,GAAAC,EAAAA,EAAAA,GAAA,KAAA4sC,IAC3F7sC,EAAAL,EAAAO,KAAA,OACK4sC,YAAcA,EACnB9sC,EAAK+sC,eAAiBA,EACtB/sC,EAAKqY,OAASA,EACdrY,EAAKqlC,KAAOA,EACZrlC,EAAKgtC,oBAAsBA,EAC3BhtC,EAAKitC,kBAAoBA,EACzBjtC,EAAKktC,aAAc,EAEnBltC,EAAK+sC,eAAenD,MAAMuD,OAAS,KACnCntC,EAAKotC,aAAepgC,SAASC,cAAc,OAC3CjN,EAAKotC,aAAavX,UAAYoM,EAAAA,EAAUC,YAAYnB,EAAAA,EAAQsM,WAAa,mBACzErtC,EAAKotC,aAAaxD,MAAM/oC,SAAW,WACnC,IAAM+lC,EAAavuB,EAAOgb,UAAU,IAC9Bia,EAAWj1B,EAAO+gB,WAAWmU,SACnCvtC,EAAKotC,aAAaxD,MAAM4D,MAAQ,MAChCxtC,EAAKotC,aAAaxD,MAAM6D,WAAa,SACrCztC,EAAKotC,aAAaxD,MAAM3nC,OAAS,GAAHc,OAAM6jC,EAAU,MAC9C5mC,EAAKotC,aAAaxD,MAAMhD,WAAa,GAAH7jC,OAAM6jC,EAAU,MAClD5mC,EAAK+sC,eAAevY,YAAYx0B,EAAKotC,cACrC,IAAMM,EAAU,GACVC,EAA4C,IAA/BtI,EAAKsC,sBAExB+F,EAAQ/6B,KAAK,IAAIqvB,EAAAA,GAAO,oCAAqC2L,EACtDtI,EAAKkC,sBAAwBlC,EAAKoC,wBAC/BlU,EAAAA,GAAa,+CAAgD,sBAC7DA,EAAAA,GAAa,sDAAuD,qBACvE8R,EAAKkC,sBAAwBlC,EAAKoC,wBAC/BlU,EAAAA,GAAa,+CAAgD,sBAC7DA,EAAAA,GAAa,sDAAuD,0BAAuBnzB,GAAW,GAAM,kBAAM0b,IAAS/J,EAAAA,EAAAA,GAAA/R,QAAO,OAAQ,GAAMsmB,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAA/lB,EAAAmtC,EAAA,OAAAtnB,EAAAA,EAAAA,KAAAG,MAAA,SAAAxU,GAAA,cAAAA,EAAAyU,KAAAzU,EAAAuK,MAAA,OAGxJ,OAFM/b,EAAQ,IAAImpB,GAAAA,EAAMyb,EAAKgC,wBAAyB,EAAGhC,EAAKkC,sBAAwB,EAAG,GACnFqG,EAAcvI,EAAKL,cAAc6I,gBAAgBptC,GAAMwR,EAAAuK,KAAA,EACvD7b,KAAKssC,kBAAkBa,UAAUF,GAAY,wBAAA37B,EAAA6U,OAAA,GAAAN,EAAA,SACrD,KACF,IAAIunB,EAA0B,EAC1BC,OAAiB5tC,EACjBilC,EAAKkC,sBAAwBlC,EAAKoC,0BAClCuG,EAAiB,IAAIhM,EAAAA,GAAO,wCAAyC2L,EAC/Dpa,EAAAA,GAAa,8CAA+C,0BAA2B8R,EAAKgC,yBAC5F9T,EAAAA,GAAa,8CAA+C,0BAA2B8R,EAAKgC,8BAA0BjnC,GAAW,GAAM,kBAAM0b,IAAS/J,EAAAA,EAAAA,GAAA/R,QAAO,OAAQ,GAAMsmB,EAAAA,EAAAA,KAAAC,MAAE,SAAA0nB,IAAA,IAAA7D,EAAA8D,EAAA,OAAA5nB,EAAAA,EAAAA,KAAAG,MAAA,SAAA0nB,GAAA,cAAAA,EAAAznB,KAAAynB,EAAA3xB,MAAA,OAClE,GACzF,MADd4tB,EAAc/E,EAAKL,cAAc5a,eAAeib,EAAKgC,wBAA0B0G,IAC/D,CAAAI,EAAA3xB,KAAA,QAGlB,OADM0xB,EAAM7I,EAAKL,cAAcoJ,uBAAsBD,EAAA3xB,KAAA,EAC/C7b,KAAKssC,kBAAkBa,UAAkB,IAARI,EAAuC,KAAO,QAAO,OAAAC,EAAA3xB,KAAA,eAG5F,OAH4F2xB,EAAA3xB,KAAA,EAGtF7b,KAAKssC,kBAAkBa,UAAU1D,GAAY,wBAAA+D,EAAArnB,OAAA,GAAAmnB,EAAA,SAEzD,IACFP,EAAQ/6B,KAAKq7B,IAEA31B,EAAOgb,UAAU,KAE9Bqa,EAAQ/6B,KAAK,IAAIqvB,EAAAA,GAAO,2BAA4BzO,EAAAA,GAAa,iCAAkC,2BAAuBnzB,GAAW,GAAM,kBAAM0b,IAAS/J,EAAAA,EAAAA,GAAA/R,QAAO,OAAQ,GAAMsmB,EAAAA,EAAAA,KAAAC,MAAE,SAAA8nB,IAAA,IAAA5tC,EAAAmtC,EAAAroC,EAAA+oC,EAAA,OAAAhoB,EAAAA,EAAAA,KAAAG,MAAA,SAAA8nB,GAAA,cAAAA,EAAA7nB,KAAA6nB,EAAA/xB,MAAA,OACvK/b,EAAQ,IAAImpB,GAAAA,EAAMyb,EAAKgC,wBAAyB,EAAGhC,EAAKkC,sBAAuBlC,EAAKL,cAAcwJ,iBAAiBnJ,EAAKkC,wBACxHqG,EAAcvI,EAAKL,cAAc6I,gBAAgBptC,GACpB,IAA/B4kC,EAAKsC,uBAECpiC,EAAS8S,EAAO+gB,WAAWoV,iBAAiBnJ,EAAKoC,yBACvDpvB,EAAO+W,aAAa,aAAc,CAC9B,CACI3uB,MAAO,IAAImpB,GAAAA,EAAMyb,EAAKoC,wBAAyBliC,EAAQ8/B,EAAKoC,wBAAyBliC,GACrFtB,KAAMqpC,EAAWM,OAKnBroC,EAAS8S,EAAO+gB,WAAWoV,iBAAiBnJ,EAAKsC,uBACvDtvB,EAAO+W,aAAa,aAAc,CAC9B,CACI3uB,MAAO,IAAImpB,GAAAA,EAAMyb,EAAKoC,wBAAyB,EAAGpC,EAAKsC,sBAAuBpiC,GAC9EtB,KAAM2pC,MAGjB,wBAAAW,EAAAznB,OAAA,GAAAunB,EAAA,IACH,KAEN,IAAMI,EAAkB,SAAC5/B,EAAG6/B,GACxB1uC,EAAKgtC,oBAAoByB,gBAAgB,CACrCE,UAAW,WACP,MAAO,CACH9/B,EAAAA,EACA6/B,EAAAA,EAER,EACAlhB,WAAY,WAOR,OANIwgB,IACAA,EAAe5oB,MACXuoB,EACMpa,EAAAA,GAAa,8CAA+C,0BAA2B8R,EAAKgC,wBAA0B0G,GACtHxa,EAAAA,GAAa,8CAA+C,0BAA2B8R,EAAKgC,wBAA0B0G,IAE7HL,CACX,EACAkB,qBAAqB,GAE7B,EAkCI,OAjCJ5uC,EAAKgY,UAAU6N,EAAIgd,8BAA8B7iC,EAAKotC,aAAc,aAAa,SAAAvkC,GAC7E,IAAAgmC,EAAwBhpB,EAAIipB,uBAAuB9uC,EAAKotC,cAAhDzrC,EAAGktC,EAAHltC,IAAKM,EAAM4sC,EAAN5sC,OACP8sC,EAAMlsC,KAAKmsC,MAAMpI,EAAa,GACpC/9B,EAAEi6B,iBACF2L,EAAgB5lC,EAAEomC,KAAMttC,EAAMM,EAAS8sC,EAC3C,KACA/uC,EAAKgY,UAAUK,EAAO1B,aAAY,SAAC9N,GACT,IAAlBA,EAAE4M,OAAOnR,MAAwE,IAAlBuE,EAAE4M,OAAOnR,KACrDuE,EAAE4M,OAAOy5B,OAAOC,aAChBnvC,EAAK8sC,aACpB9sC,EAAKytC,YAAa,EAClBM,EAA0B/tC,EAAKovC,yBAAyBpvC,EAAK+sC,eAAgBlkC,EAAEwO,MAAMmZ,aAAake,EAAG9H,IAGrG5mC,EAAKytC,YAAa,EAItBztC,EAAKytC,YAAa,CAE1B,KACAztC,EAAKgY,UAAUK,EAAOxB,aAAY,SAAChO,GAC1BA,EAAEwO,MAAMg4B,cAGS,IAAlBxmC,EAAE4M,OAAOnR,MAAwE,IAAlBuE,EAAE4M,OAAOnR,MACrDuE,EAAE4M,OAAOy5B,OAAOC,aAChBnvC,EAAK8sC,cACpBjkC,EAAEwO,MAAMyrB,iBACRiL,EAA0B/tC,EAAKovC,yBAAyBpvC,EAAK+sC,eAAgBlkC,EAAEwO,MAAMmZ,aAAake,EAAG9H,GACrG6H,EAAgB5lC,EAAEwO,MAAM43B,KAAMpmC,EAAEwO,MAAMi4B,KAAO1I,IAGzD,KAAI5mC,CACR,CAiBC,OAjBAM,EAAAA,EAAAA,GAAAusC,EAAA,EAAAtsC,IAAA,aAAAoF,IAnJD,WACI,OAAOhF,KAAKusC,WAChB,EAACh0B,IACD,SAAeg0B,GACPvsC,KAAKusC,cAAgBA,IACrBvsC,KAAKusC,YAAcA,EAEfvsC,KAAKysC,aAAaxD,MAAM6D,WADxBP,EACqC,UAGA,SAGjD,GAAC,CAAA3sC,IAAA,2BAAAC,MAuID,SAAyB+uC,EAAeb,EAAG9H,GACvC,IACM4I,EAASd,EADC7oB,EAAIipB,uBAAuBS,GAAnC5tC,IAEF8tC,EAAmB5sC,KAAKmsC,MAAMQ,EAAS5I,GACvC8I,EAASD,EAAmB7I,EAElC,GADAjmC,KAAKysC,aAAaxD,MAAMjoC,IAAM,GAAHoB,OAAM2sC,EAAM,MACnC/uC,KAAK0kC,KAAKsK,eAEV,IADA,IAAIC,EAAM,EACDzsC,EAAI,EAAGA,EAAIxC,KAAK0kC,KAAKsK,eAAezsC,OAAQC,IAEjD,GAAIssC,GADJG,GAAOjvC,KAAK0kC,KAAKsK,eAAexsC,IAE5B,OAAOA,EAInB,OAAOssC,CACX,KAAC5C,CAAA,CArKwB,CAAS5xB,EAAAA,I,YChBlCC,GAA0C,SAAUC,EAAY1F,EAAQlV,EAAKuY,GAC7E,IAA2HsC,EAAvHC,EAAIC,UAAUpY,OAAQyS,EAAI0F,EAAI,EAAI5F,EAAkB,OAATqD,EAAgBA,EAAOtB,OAAO+D,yBAAyB9F,EAAQlV,GAAOuY,EACrH,GAAuB,kBAAZ0C,SAAoD,oBAArBA,QAAQC,SAAyB9F,EAAI6F,QAAQC,SAASN,EAAY1F,EAAQlV,EAAKuY,QACpH,IAAK,IAAI3V,EAAIgY,EAAWjY,OAAS,EAAGC,GAAK,EAAGA,KAASiY,EAAID,EAAWhY,MAAIwS,GAAK0F,EAAI,EAAID,EAAEzF,GAAK0F,EAAI,EAAID,EAAE3F,EAAQlV,EAAKoV,GAAKyF,EAAE3F,EAAQlV,KAASoV,GAChJ,OAAO0F,EAAI,GAAK1F,GAAK6B,OAAOkE,eAAejG,EAAQlV,EAAKoV,GAAIA,CAChE,EACIgG,GAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUpG,EAAQlV,GAAOsb,EAAUpG,EAAQlV,EAAKqb,EAAa,CACxE,EACIE,GAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAU9b,GAAS,IAAM+b,EAAKL,EAAUM,KAAKhc,GAAS,CAAE,MAAOqI,GAAKwT,EAAOxT,EAAI,CAAE,CAC1F,SAAS4T,EAASjc,GAAS,IAAM+b,EAAKL,EAAiB,MAAE1b,GAAS,CAAE,MAAOqI,GAAKwT,EAAOxT,EAAI,CAAE,CAC7F,SAAS0T,EAAKvZ,GAJlB,IAAexC,EAIawC,EAAO6V,KAAOuD,EAAQpZ,EAAOxC,QAJ1CA,EAIyDwC,EAAOxC,MAJhDA,aAAiByb,EAAIzb,EAAQ,IAAIyb,GAAE,SAAUG,GAAWA,EAAQ5b,EAAQ,KAIjBkc,KAAKJ,EAAWG,EAAW,CAC7GF,GAAML,EAAYA,EAAUS,MAAMZ,EAASC,GAAc,KAAKQ,OAClE,GACJ,EAGIqzB,GAA+B,WAC/B,SAAAA,EAAYnqC,EAASoqC,IAAqB7vC,EAAAA,EAAAA,GAAA,KAAA4vC,GACtClvC,KAAKmvC,oBAAsBA,EAC3BnvC,KAAKovC,wBAA0B,IAAI5xB,EAAAA,GACnCxd,KAAK2iB,YAAc3iB,KAAKovC,wBAAwB14B,MAChD1W,KAAKqvC,cAAgB,QACrBrvC,KAAKsvC,0CAAuC7vC,EAC5CO,KAAKuvC,WAAWxqC,EACpB,CAkCC,OAlCApF,EAAAA,EAAAA,GAAAuvC,EAAA,EAAAtvC,IAAA,UAAAC,MACD,WACI,IAAIiJ,EACiD,QAApDA,EAAK9I,KAAKsvC,4CAAyD,IAAPxmC,GAAyBA,EAAG+I,SAC7F,GAAC,CAAAjS,IAAA,cAAAC,MACD,SAAY2vC,EAAUC,EAAU1qC,GAC5B,OAAOoW,GAAUnb,UAAM,OAAQ,GAAM2lB,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAAxjB,EAAA,OAAAsjB,EAAAA,EAAAA,KAAAG,MAAA,SAAAxU,GAAA,cAAAA,EAAAyU,KAAAzU,EAAAuK,MAAA,UACD,kBAAvB7b,KAAKqvC,cAA0B,CAAA/9B,EAAAuK,KAAA,eAAAvK,EAAA0U,OAAA,SAC/BhmB,KAAKqvC,cAAcK,YAAYF,EAAUC,EAAU1qC,IAAQ,OAEvD,OAFuDuM,EAAAuK,KAAA,EAEjD7b,KAAKmvC,oBAAoBO,YAAYF,EAASrnB,IAAKsnB,EAAStnB,IAAKpjB,EAAS/E,KAAKqvC,eAAc,OAAtG,GAANhtC,EAAMiP,EAAAq+B,KACC,CAAFr+B,EAAAuK,KAAA,cACD,IAAIrS,MAAM,4BAA2B,cAAA8H,EAAA0U,OAAA,SAExC3jB,GAAM,wBAAAiP,EAAA6U,OAAA,GAAAN,EAAA,SAErB,GAAC,CAAAjmB,IAAA,aAAAC,MACD,SAAWsnB,GAAY,IACfre,EADezJ,EAAA,KAEfuwC,GAAY,EACZzoB,EAAWkoB,eACPrvC,KAAKqvC,gBAAkBloB,EAAWkoB,gBACmB,QAApDvmC,EAAK9I,KAAKsvC,4CAAyD,IAAPxmC,GAAyBA,EAAG+I,UACzF7R,KAAKsvC,0CAAuC7vC,EAC5CO,KAAKqvC,cAAgBloB,EAAWkoB,cACQ,kBAA7BloB,EAAWkoB,gBAClBrvC,KAAKsvC,qCAAuCnoB,EAAWkoB,cAAc1sB,aAAY,kBAAMtjB,EAAK+vC,wBAAwBxsB,MAAM,KAE9HgtB,GAAY,GAGhBA,GACA5vC,KAAKovC,wBAAwBxsB,MAErC,KAACssB,CAAA,CA1C8B,GA4CnCA,GAAkC30B,GAAW,CACzCS,GAAQ,EAAG60B,GAAAA,IACZX,I,ICzDCpmC,G,2JATAyR,GAA0C,SAAUC,EAAY1F,EAAQlV,EAAKuY,GAC7E,IAA2HsC,EAAvHC,EAAIC,UAAUpY,OAAQyS,EAAI0F,EAAI,EAAI5F,EAAkB,OAATqD,EAAgBA,EAAOtB,OAAO+D,yBAAyB9F,EAAQlV,GAAOuY,EACrH,GAAuB,kBAAZ0C,SAAoD,oBAArBA,QAAQC,SAAyB9F,EAAI6F,QAAQC,SAASN,EAAY1F,EAAQlV,EAAKuY,QACpH,IAAK,IAAI3V,EAAIgY,EAAWjY,OAAS,EAAGC,GAAK,EAAGA,KAASiY,EAAID,EAAWhY,MAAIwS,GAAK0F,EAAI,EAAID,EAAEzF,GAAK0F,EAAI,EAAID,EAAE3F,EAAQlV,EAAKoV,GAAKyF,EAAE3F,EAAQlV,KAASoV,GAChJ,OAAO0F,EAAI,GAAK1F,GAAK6B,OAAOkE,eAAejG,EAAQlV,EAAKoV,GAAIA,CAChE,EACIgG,GAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUpG,EAAQlV,GAAOsb,EAAUpG,EAAQlV,EAAKqb,EAAa,CACxE,EA4CM60B,GAAiB,WACnB,SAAAA,EAAYzD,EAAqBC,IAAmBhtC,EAAAA,EAAAA,GAAA,KAAAwwC,GAChD9vC,KAAKqsC,oBAAsBA,EAC3BrsC,KAAKssC,kBAAoBA,EACzBtsC,KAAK+vC,OAAS,GACd/vC,KAAKgwC,mBAAqB,GAC1BhwC,KAAKiwC,UAAY,CAAC,EAClBjwC,KAAKkwC,aAAe,EACxB,CAwDC,OAxDAvwC,EAAAA,EAAAA,GAAAmwC,EAAA,EAAAlwC,IAAA,sBAAAC,MACD,SAAoBswC,GAAc,IAAA9wC,EAAA,KAC9B,OAAO8wC,EAAa39B,QAAO,SAAC49B,GAAC,OAAM/wC,EAAK4wC,UAAU38B,OAAO88B,EAAE/3B,IAAI,GACnE,GAAC,CAAAzY,IAAA,QAAAC,MACD,SAAM6X,GAAQ,IAAA9D,EAAA,KAEN5T,KAAK+vC,OAAOxtC,OAAS,GACrBmV,EAAO24B,iBAAgB,SAACC,GAAuB,IACXz4B,EADWC,GAAAC,EAAAA,EAAAA,GACtBnE,EAAKm8B,QAAM,IAAhC,IAAAj4B,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAkC,KAAvBq4B,EAAM14B,EAAAhY,MACbywC,EAAmBE,WAAWD,EAClC,CAAC,OAAA/3B,GAAAV,EAAA5P,EAAAsQ,EAAA,SAAAV,EAAAW,GAAA,CACL,IAEJzY,KAAK+vC,OAAS,GACd/vC,KAAKiwC,UAAY,CAAC,EAElBv4B,EAAOqX,mBAAkB,SAACQ,GACtB3b,EAAKs8B,aAAe3gB,EAAeF,iBAAiBzb,EAAKs8B,aAAc,GAC3E,GACJ,GAAC,CAAAtwC,IAAA,QAAAC,MACD,SAAM6X,EAAQ+4B,EAAerhB,EAAgBshB,GAAoB,IAAAr8B,EAAA,KACvDs8B,EAAcD,EAAqBE,EAAAA,EAAwBC,QAAQn5B,GAAU,KAEnFA,EAAO24B,iBAAgB,SAACC,GACpB,IAAIxnC,EAC4B8P,EADzBE,GAAAf,EAAAA,EAAAA,GACc1D,EAAK07B,QAAM,IAAhC,IAAAj3B,EAAAd,MAAAY,EAAAE,EAAAb,KAAAC,MAAkC,KAAvBq4B,EAAM33B,EAAA/Y,MACbywC,EAAmBE,WAAWD,EAClC,CAAC,OAAA/3B,GAAAM,EAAA5Q,EAAAsQ,EAAA,SAAAM,EAAAL,GAAA,KACqDU,EADrDC,GAAArB,EAAAA,EAAAA,GAC8B1D,EAAK27B,oBAAkB,IAAtD,IAAA52B,EAAApB,MAAAmB,EAAAC,EAAAnB,KAAAC,MAAwD,CAA7BiB,EAAAtZ,MACNgS,SACrB,CAAC,OAAA2G,GAAAY,EAAAlR,EAAAsQ,EAAA,SAAAY,EAAAX,GAAA,CACDpE,EAAK07B,OAAS,GACd17B,EAAK47B,UAAY,CAAC,EAClB57B,EAAK27B,mBAAqB,GAC1B,IAAK,IAAIxtC,EAAI,EAAGD,EAAS6sB,EAAe0hB,MAAMvuC,OAAQC,EAAID,EAAQC,IAAK,CACnE,IAAMuuC,EAAW3hB,EAAe0hB,MAAMtuC,GACtCuuC,EAASC,mBAAoB,EAC7B,IAAMT,EAASD,EAAmBW,QAAQF,GAC1C18B,EAAK07B,OAAO/9B,KAAKu+B,GACjBl8B,EAAK47B,UAAU38B,OAAOi9B,KAAW,EAC7BnhB,EAAe0hB,MAAMtuC,GAAGkiC,MAAQqM,EAASnC,gBACzCmC,EAASC,mBAAoB,EACwF,KAAxE,QAAvCloC,EAAKsmB,EAAe0hB,MAAMtuC,GAAGkiC,YAAyB,IAAP57B,OAAgB,EAASA,EAAGu7B,cAAc6M,mBAE3F78B,EAAK27B,mBAAmBh+B,KAAK,IAAIk6B,GAAiBqE,EAAQQ,EAASnC,cAAel3B,EAAQ0X,EAAe0hB,MAAMtuC,GAAGkiC,KAAMrwB,EAAKg4B,oBAAqBh4B,EAAKi4B,oBAGnK,CACJ,IACgB,OAAhBqE,QAAwC,IAAhBA,GAAkCA,EAAYQ,QAAQz5B,GAE9EA,EAAOqX,mBAAkB,SAACQ,GACtBlb,EAAK67B,aAAe3gB,EAAeF,iBAAiBhb,EAAK67B,aAAc9gB,EAAeR,YAC1F,IAEkB,OAAlB6hB,QAA4C,IAAlBA,GAAoCA,EAAcW,SAAShiB,EAAeiiB,cACxG,KAACvB,CAAA,CAhEkB,GAkEnBwB,GAAiB,EACfC,IAAiBpR,EAAAA,EAAAA,IAAa,cAAeC,EAAAA,EAAQC,IAAKzN,EAAAA,GAAa,iBAAkB,oDACzF4e,IAAiBrR,EAAAA,EAAAA,IAAa,cAAeC,EAAAA,EAAQG,OAAQ3N,EAAAA,GAAa,iBAAkB,qDAC5F6e,GAA0C,QAA9B3oC,GAAK8H,OAAOC,oBAAiC,IAAP/H,QAAgB,EAASA,GAAGgI,aAAa,mBAAoB,CAAEzB,WAAY,SAAAxP,GAAK,OAAIA,CAAK,IAC3I6xC,GAAoB9e,EAAAA,GAAa,2BAA4B,uCAC/D+e,GAAgB,SAAA16B,IAAAlY,EAAAA,EAAAA,GAAA4yC,EAAA16B,GAAA,IAAAjY,GAAAC,EAAAA,EAAAA,GAAA0yC,GAChB,SAAAA,EAAYl1B,EAAY1X,EAAS4X,EAAyBi1B,EAAkB90B,EAAmBlF,EAAsBgF,EAAmBG,EAAcC,EAAqB60B,EAAoBC,GAAwB,IAAA9d,GAAA10B,EAAAA,EAAAA,GAAA,KAAAqyC,IACnN3d,EAAAh1B,EAAAO,KAAA,OACKuyC,uBAAyBA,EAC9B9d,EAAKzW,cAAgByW,EAAK3c,UAAU,IAAImG,EAAAA,IACxCwW,EAAKvW,aAAeuW,EAAKzW,cAAc7G,MACvCsd,EAAKvV,kBAAoBuV,EAAK3c,UAAU,IAAImG,EAAAA,IAC5CwW,EAAKtV,iBAAmBsV,EAAKvV,kBAAkB/H,MAC/Csd,EAAK+d,iBAAmB/d,EAAK3c,UAAU,IAAImG,EAAAA,IAC3CwW,EAAK6N,gBAAkB7N,EAAK+d,iBAAiBr7B,MAC7Csd,EAAK5S,wBAA0B4S,EAAK3c,UAAU,IAAImG,EAAAA,IAClDwW,EAAKge,qBAAuB,KAC5Bhe,EAAKie,qBAAuB,KAC5Br1B,EAAkBs1B,uBAClBle,EAAKme,sBAAwBne,EAAK3c,UAAUO,EAAqBsC,eAAeg1B,GAAiCnqC,IACjHivB,EAAK3c,UAAU2c,EAAKme,sBAAsBxvB,aAAY,SAAAza,GAAC,OAAI8rB,EAAKoe,6BAA6B,KAC7Fpe,EAAKhR,mBAAqBpG,EAC1BoX,EAAKnR,mBAAqBmR,EAAK3c,UAAUyF,EAAkBgG,aAAarG,IACxEuX,EAAK7c,sBAAwBS,EAAqByL,YAAY,IAAIC,GAAAA,EAAkB,CAACC,EAAAA,GAAoByQ,EAAKnR,sBAC9GmR,EAAKnR,mBAAmB0T,UAAU,kBAAkB,GACpDvC,EAAK9Q,cAAgBnG,EACrBiX,EAAKjR,qBAAuB/F,EAC5BgX,EAAK5R,MAASkvB,GACdtd,EAAKqe,OAAS,EACdre,EAAKse,sBAAwB,KAC7Bte,EAAK/R,YAAcxF,EACnB1X,EAAUA,GAAW,CAAC,EACtBivB,EAAKtX,SAAW61B,GAA0BxtC,EAAS,CAC/CytC,yBAAyB,EACzBC,kBAAkB,EAClBC,wBAAwB,EACxBC,mBAAoB,IACpBC,YAAa,GACbC,sBAAsB,EACtBC,kBAAkB,EAClBC,kBAAkB,EAClBC,cAAc,EACdC,qBAAqB,EACrBC,aAAc,UACd7D,cAAe,UAEuB,qBAA/BtqC,EAAQouC,mBACfnf,EAAKnR,mBAAmB0T,UAAU,yBAA0BxxB,EAAQouC,oBAGpEnf,EAAKnR,mBAAmB0T,UAAU,0BAA0B,GAEhEvC,EAAKof,yBAA2Bpf,EAAK3c,UAAU,IAAIg8B,EAAAA,IAAiB,kBAAMrf,EAAKsf,oBAAoB,GAAE,IACrGtf,EAAKuf,qBAAuBlnC,SAASC,cAAc,OACnD0nB,EAAKuf,qBAAqBre,UAAYyc,EAAiB6B,cAAcxf,EAAK9Q,cAAciR,gBAAiBH,EAAKtX,SAAS+1B,kBACvHze,EAAKuf,qBAAqBtK,MAAM/oC,SAAW,WAC3C8zB,EAAKuf,qBAAqBtK,MAAM3nC,OAAS,OACzC0yB,EAAK/R,YAAY4R,YAAYG,EAAKuf,sBAClCvf,EAAKyf,6BAA8BrnC,EAAAA,EAAAA,GAAkBC,SAASC,cAAc,QAC5E0nB,EAAKyf,4BAA4BlnC,aAAa,gBAC9CynB,EAAKyf,4BAA4BjnC,YAAY,YAC7CwnB,EAAK0f,oBAAsBrnC,SAASC,cAAc,OAClD0nB,EAAK0f,oBAAoBxe,UAAY,eACrClB,EAAK0f,oBAAoBzK,MAAM/oC,SAAW,WAC1C8zB,EAAK0f,oBAAoB7f,YAAYG,EAAKyf,4BAA4BznC,SACtEgoB,EAAK3c,UAAU6N,EAAIgd,8BAA8BlO,EAAK0f,oBAAqBxuB,EAAIyuB,UAAUC,cAAc,SAAC1rC,GACpG8rB,EAAK6f,gBAAgB/jB,qCAAqC5nB,EAC9D,KACA8rB,EAAK3c,UAAU6N,EAAI4uB,sBAAsB9f,EAAK0f,oBAAqBxuB,EAAIyuB,UAAUI,aAAa,SAAC7rC,GAC3F8rB,EAAK6f,gBAAgB9jB,kCAAkC7nB,EAC3D,GAAG,CAAE8rC,SAAS,KACVhgB,EAAKtX,SAASu2B,qBACdjf,EAAKuf,qBAAqB1f,YAAYG,EAAK0f,qBAG/C1f,EAAKigB,iBAAmB5nC,SAASC,cAAc,OAC/C0nB,EAAKigB,iBAAiB/e,UAAY,kBAClClB,EAAKigB,iBAAiBhL,MAAM/oC,SAAW,WACvC8zB,EAAKigB,iBAAiBhL,MAAM3nC,OAAS,OACrC0yB,EAAKuf,qBAAqB1f,YAAYG,EAAKigB,kBAE3CjgB,EAAKkgB,iBAAmB7nC,SAASC,cAAc,OAC/C0nB,EAAKkgB,iBAAiBhf,UAAY,kBAClClB,EAAKkgB,iBAAiBjL,MAAM/oC,SAAW,WACvC8zB,EAAKkgB,iBAAiBjL,MAAM3nC,OAAS,OACrC0yB,EAAKuf,qBAAqB1f,YAAYG,EAAKkgB,kBAC3ClgB,EAAKmgB,gCAAkC,EACvCngB,EAAKogB,6BAA8B,EACnCpgB,EAAKqgB,sBAAwB,EAC7BrgB,EAAKsgB,qBAAuB,IAAIxE,GAAkB+B,EAAoBD,GACtE5d,EAAKugB,qBAAuB,IAAIzE,GAAkB+B,EAAoBD,GACtE5d,EAAKgN,YAAa,EAClBhN,EAAKwgB,wBAAyB,EAC9BxgB,EAAKygB,qBAAuBzgB,EAAK3c,UAAU,IAAIq9B,EAAAA,EAAoB1gB,EAAKuf,qBAAsBxuC,EAAQirB,YACtGgE,EAAK3c,UAAU2c,EAAKygB,qBAAqB9xB,aAAY,kBAAMqR,EAAK2gB,4BAA4B,KACxF5vC,EAAQ6vC,iBACR5gB,EAAKygB,qBAAqBI,iBAE9B7gB,EAAK8gB,uBAAyB,KAC9B9gB,EAAK+gB,gBAAkB/gB,EAAKghB,0BAA0BjwC,EAAS4X,EAAwBs4B,gBAAkB,CAAC,GAC1GjhB,EAAK6f,gBAAkB7f,EAAKkhB,2BAA2BnwC,EAAS4X,EAAwBw4B,gBAAkB,CAAC,GAC3GnhB,EAAKohB,uBAAyB,KAC9BphB,EAAKqhB,uBAAyB,KAC9BrhB,EAAKshB,YAAc19B,EAAqBsC,eAAewmB,GAAUtvB,EAAAA,EAAAA,GAAA4iB,IACjEA,EAAKuf,qBAAqB1f,YAAYG,EAAKshB,YAAYtpC,QAAQA,SAC/DgoB,EAAKuf,qBAAqB1f,YAAYG,EAAKshB,YAAYrU,OAAOj1B,SAC9DgoB,EAAKuf,qBAAqB1f,YAAYG,EAAKshB,YAAYpU,mBAAmBl1B,SACtEgoB,EAAKtX,SAAS+1B,iBACdze,EAAKuhB,aAAa,IAAIC,GAA2BxhB,EAAKyhB,oBAAqBzhB,EAAKtX,SAAS81B,0BAGzFxe,EAAKuhB,aAAa,IAAIG,GAAuB1hB,EAAKyhB,oBAAqBzhB,EAAKtX,SAAS81B,0BAEzFxe,EAAK3c,UAAU0F,EAAa44B,uBAAsB,SAAAC,GAC1C5hB,EAAK6hB,WAAa7hB,EAAK6hB,UAAUC,YAAYF,IAC7C5hB,EAAKof,yBAAyB2C,WAElC/hB,EAAKuf,qBAAqBre,UAAYyc,EAAiB6B,cAAcxf,EAAK9Q,cAAciR,gBAAiBH,EAAKtX,SAAS+1B,iBAC3H,KACA,IACgCh5B,EAD1B9B,EAAgBsM,EAAAA,GAAyB+xB,6BAA6Bp8B,GAAA7B,EAAAA,EAAAA,GACzDJ,GAAa,IAAhC,IAAAiC,EAAA5B,MAAAyB,EAAAG,EAAA3B,KAAAC,MAAkC,KAAvBC,EAAIsB,EAAA5Z,MACX,IACIm0B,EAAK3c,UAAUO,EAAqBsC,eAAe/B,EAAKgC,MAAI/I,EAAAA,EAAAA,GAAA4iB,IAChE,CACA,MAAOxb,IACHF,EAAAA,EAAAA,IAAkBE,EACtB,CACJ,CAAC,OAAAA,GAAAoB,EAAA1R,EAAAsQ,EAAA,SAAAoB,EAAAnB,GAAA,CAC2C,OAA5Cub,EAAKhR,mBAAmBizB,eAAa7kC,EAAAA,EAAAA,GAAA4iB,IAAOA,CAChD,CAyhBC,OAzhBAr0B,EAAAA,EAAAA,GAAAgyC,EAAA,EAAA/xC,IAAA,YAAAC,MACD,SAAUq2C,GACFl2C,KAAKqyC,SAAW6D,IAGpBl2C,KAAKqyC,OAAS6D,EACVl2C,KAAKsyC,wBACLtyC,KAAKsyC,sBAAsBp6B,OAC3BlY,KAAKsyC,sBAAwB,MAEb,IAAhBtyC,KAAKqyC,SACLryC,KAAKsyC,sBAAwBtyC,KAAK8xC,uBAAuBqE,MAAK,EAAM,MAE5E,GAAC,CAAAv2C,IAAA,iBAAAC,MACD,WACIG,KAAKs1C,YAAYz5B,MACrB,GAAC,CAAAjc,IAAA,iBAAAC,MACD,WACIG,KAAKs1C,YAAYvvB,MACrB,GAAC,CAAAnmB,IAAA,yBAAAC,MASD,WACQG,KAAKo1C,yBACLp1C,KAAK0zC,oBAAoBxmC,YAAYlN,KAAKo1C,uBAAuBnoC,cACjEjN,KAAKo1C,uBAAuBvjC,UAC5B7R,KAAKo1C,uBAAyB,MAE9Bp1C,KAAKq1C,yBACLr1C,KAAK0zC,oBAAoBxmC,YAAYlN,KAAKq1C,uBAAuBpoC,cACjEjN,KAAKq1C,uBAAuBxjC,UAC5B7R,KAAKq1C,uBAAyB,KAEtC,GAAC,CAAAz1C,IAAA,wBAAAC,MACD,WACSG,KAAK0c,SAASu2B,sBAGnBmD,EAAOC,IAAIr2C,KAAKo1C,yBAA2Bp1C,KAAKq1C,wBAC5Cr1C,KAAK+0C,gBAAgB/sB,aACrBhoB,KAAKo1C,uBAAyBp1C,KAAK+0C,gBAAgBnlB,oBAAoB,8BACvE5vB,KAAK0zC,oBAAoB7f,YAAY7zB,KAAKo1C,uBAAuBnoC,eAEjEjN,KAAK6zC,gBAAgB7rB,aACrBhoB,KAAKq1C,uBAAyBr1C,KAAK6zC,gBAAgBjkB,oBAAoB,8BACvE5vB,KAAK0zC,oBAAoB7f,YAAY7zB,KAAKq1C,uBAAuBpoC,eAErEjN,KAAKs2C,wBACT,GAAC,CAAA12C,IAAA,4BAAAC,MACD,SAA0BkF,EAAS4X,GAAyB,IAAAkZ,EAAA,KAClDne,EAAS1X,KAAKu2C,mBAAmBv2C,KAAKmX,sBAAuBnX,KAAKi0C,iBAAkBj0C,KAAKw2C,8BAA8BzxC,GAAU4X,GACvI3c,KAAKqX,UAAUK,EAAO6J,mBAAkB,SAACrZ,GACjC2tB,EAAK2e,yBAGJtsC,EAAEkF,kBAAqBlF,EAAEuuC,mBAAsBvuC,EAAEsM,uBAGtDqhB,EAAK2e,wBAAyB,EAC9B3e,EAAKge,gBAAgB5nB,kBAAkB,CACnChrB,WAAYiH,EAAEjH,WACdF,UAAWmH,EAAEnH,YAEjB80B,EAAK2e,wBAAyB,EAC9B3e,EAAK6gB,0BACT,KACA12C,KAAKqX,UAAUK,EAAO+J,sBAAqB,WACvCoU,EAAK8gB,qBACT,KACA32C,KAAKqX,UAAUK,EAAO8G,0BAAyB,SAACtW,GACvCwP,EAAO+gB,aAGRvwB,EAAEwE,WAAW,KACbmpB,EAAKud,yBAAyB2C,WAE9B7tC,EAAEwE,WAAW,OACbmpB,EAAKud,yBAAyBwD,SAC9B/gB,EAAKyd,sBAEb,KACAtzC,KAAKqX,UAAUK,EAAOiK,wBAAuB,WACzCkU,EAAKud,yBAAyBwD,SAC9B/gB,EAAKyd,oBACT,KACAtzC,KAAKqX,UAAUK,EAAOkG,yBAAwB,WACtCiY,EAAKmL,YACLnL,EAAKuc,6BAEb,KACA,IAAMyE,EAAwB72C,KAAK6iB,mBAAmB0T,UAAU,qBAAsB7e,EAAO8gB,kBAa7F,OAZAx4B,KAAKqX,UAAUK,EAAOiI,wBAAuB,kBAAMk3B,EAAsBt+B,KAAI,EAAK,KAClFvY,KAAKqX,UAAUK,EAAOkI,uBAAsB,kBAAMi3B,EAAsBt+B,KAAI,EAAM,KAClFvY,KAAKqX,UAAUK,EAAO2J,wBAAuB,SAAAnZ,GACzC,IAAM9G,EAAQy0B,EAAKkf,gBAAgBnpB,kBAAoBiK,EAAKge,gBAAgBjoB,kBAAoB+lB,EAAiBmF,mBAC3Gx1C,EAASY,KAAKuJ,IAAIoqB,EAAKge,gBAAgB/nB,mBAAoB+J,EAAKkf,gBAAgBjpB,oBACtF+J,EAAKzU,wBAAwBwB,KAAK,CAC9Bm0B,cAAez1C,EACfyS,aAAc3S,EACd41C,qBAAsB9uC,EAAE8uC,qBACxBC,oBAAqB/uC,EAAE+uC,qBAE/B,KACOv/B,CACX,GAAC,CAAA9X,IAAA,6BAAAC,MACD,SAA2BkF,EAAS4X,GAAyB,IAAAuZ,EAAA,KACnDxe,EAAS1X,KAAKu2C,mBAAmBv2C,KAAKmX,sBAAuBnX,KAAKk0C,iBAAkBl0C,KAAKk3C,+BAA+BnyC,GAAU4X,GACxI3c,KAAKqX,UAAUK,EAAO6J,mBAAkB,SAACrZ,GACjCguB,EAAKse,yBAGJtsC,EAAEkF,kBAAqBlF,EAAEuuC,mBAAsBvuC,EAAEsM,uBAGtD0hB,EAAKse,wBAAyB,EAC9Bte,EAAK6e,gBAAgB9oB,kBAAkB,CACnChrB,WAAYiH,EAAEjH,WACdF,UAAWmH,EAAEnH,YAEjBm1B,EAAKse,wBAAyB,EAC9Bte,EAAKwgB,0BACT,KACA12C,KAAKqX,UAAUK,EAAO+J,sBAAqB,WACvCyU,EAAKygB,qBACT,KACA32C,KAAKqX,UAAUK,EAAO8G,0BAAyB,SAACtW,GACvCwP,EAAO+gB,aAGRvwB,EAAEwE,WAAW,KACbwpB,EAAKkd,yBAAyB2C,WAE9B7tC,EAAEwE,WAAW,OACbwpB,EAAKkd,yBAAyBwD,SAC9B1gB,EAAKod,sBAEb,KACAtzC,KAAKqX,UAAUK,EAAOiK,wBAAuB,WACzCuU,EAAKkd,yBAAyBwD,SAC9B1gB,EAAKod,oBACT,KACAtzC,KAAKqX,UAAUK,EAAOkG,yBAAwB,WACtCsY,EAAK8K,YACL9K,EAAKkc,6BAEb,KACApyC,KAAKqX,UAAUK,EAAOwG,yBAAwB,SAAChW,GACvCA,EAAEmhB,SACF6M,EAAKkd,yBAAyB2C,UAEtC,KACA,IAAMoB,EAAyBn3C,KAAK6iB,mBAAmB0T,UAAU,sBAAuB7e,EAAO8gB,kBAgC/F,OA/BAx4B,KAAKqX,UAAUK,EAAOiI,wBAAuB,kBAAMw3B,EAAuB5+B,KAAI,EAAK,KACnFvY,KAAKqX,UAAUK,EAAOkI,uBAAsB,kBAAMu3B,EAAuB5+B,KAAI,EAAM,KACnFvY,KAAKqX,UAAUK,EAAO2J,wBAAuB,SAAAnZ,GACzC,IAAM9G,EAAQ80B,EAAK6e,gBAAgBnpB,kBAAoBsK,EAAK2d,gBAAgBjoB,kBAAoB+lB,EAAiBmF,mBAC3Gx1C,EAASY,KAAKuJ,IAAIyqB,EAAK2d,gBAAgB/nB,mBAAoBoK,EAAK6e,gBAAgBjpB,oBACtFoK,EAAK9U,wBAAwBwB,KAAK,CAC9Bm0B,cAAez1C,EACfyS,aAAc3S,EACd41C,qBAAsB9uC,EAAE8uC,qBACxBC,oBAAqB/uC,EAAE+uC,qBAE/B,KAEAj3C,KAAKqX,UAAUK,EAAOxB,aAAY,SAAAQ,GAC9B,IAAI5N,EAAIsuC,EACR,IAAK1gC,EAAMA,MAAMg4B,aAAeh4B,EAAM5B,OAAO5U,WAA6C,QAA/B4I,EAAK4N,EAAM5B,OAAO6uB,eAA4B,IAAP76B,OAAgB,EAASA,EAAGosB,UAAUgJ,SAAS,wBAAyB,CACtK,IAAM18B,EAAakV,EAAM5B,OAAO5U,SAASsB,WACnCuvC,EAAWr6B,EAAM5B,OACjB8b,EAAgD,QAAtCwmB,EAAKlhB,EAAK4e,8BAA2C,IAAPsC,OAAgB,EAASA,EAAGC,QAAQC,MAAK,SAAA58B,GAAC,OAE1F,OAAbq2B,QAAkC,IAAbA,OAAsB,EAASA,EAASxC,OAAOgJ,mBAAqB78B,EAAEosB,yBAEvFpsB,EAAEssB,sBAAwB,GAAKtsB,EAAEosB,0BAA4BtlC,CAAW,IAM7E,OALIovB,GACAsF,EAAKshB,aAAa5mB,GAEtBla,EAAMA,MAAM+gC,uBACZvhB,EAAKod,oBAET,CACJ,KACO57B,CACX,GACA,CAAA9X,IAAA,eAAAC,MAGA,SAAa+wB,GACT,IAAMlZ,EAAS1X,KAAK6zC,gBACdrE,EAAWxvC,KAAK+0C,gBAAgBtc,WAChCgX,EAAWzvC,KAAK6zC,gBAAgBpb,WACtC,GAAK+W,GAAaC,GAAa/3B,EAA/B,CAGA,IAAMggC,EAAgB9mB,EAAOgW,sBAAwB,EAAI,IAAI3d,GAAAA,EAAM2H,EAAO8V,wBAAyB,EAAG9V,EAAOgW,sBAAuB4I,EAAS3B,iBAAiBjd,EAAOgW,wBAA0B,KACzL+Q,EAAkBD,EAAgBlI,EAAStC,gBAAgBwK,GAAiB,KAC5EE,EAAWhnB,EAAOoW,sBAAwB,EAAI,IAAI/d,GAAAA,EAAM2H,EAAOkW,wBAAyB,EAAGlW,EAAOoW,sBAAuByI,EAAS5B,iBAAiBjd,EAAOoW,wBAA0B,KACpL6Q,EAAMpI,EAAS7C,SACrB,GAAqC,IAAjChc,EAAOgW,uBAA+BgR,EAAU,CAGhD,IAAI93C,EAAQ83C,EACRhnB,EAAOkW,wBAA0B,EAEjChnC,EAAQ83C,EAASE,iBAAiBlnB,EAAOkW,wBAA0B,EAAG2I,EAAS5B,iBAAiBjd,EAAOkW,wBAA0B,IAE5HlW,EAAOoW,sBAAwByI,EAAS5d,iBAE7C/xB,EAAQ83C,EAASG,eAAennB,EAAOoW,sBAAwB,EAAG,IAEtEtvB,EAAO+W,aAAa,aAAc,CAAC,CAC3B3uB,MAAAA,EACAwD,KAAM,KAElB,MACK,GAAqC,IAAjCstB,EAAOoW,uBAAmD,OAApB2Q,EAA0B,CAGrE,IAAMK,EAAWpnB,EAAOkW,wBAA0B2I,EAAS5d,eAAiB,IAAIhtB,EAAAA,EAAS+rB,EAAOkW,wBAA0B,EAAG,GAAK,IAAIjiC,EAAAA,EAAS+rB,EAAOkW,wBAAyB2I,EAAS5B,iBAAiBjd,EAAOkW,0BAChNpvB,EAAO+W,aAAa,aAAc,CAAC,CAC3B3uB,MAAOmpB,GAAAA,EAAMgvB,cAAcD,EAAUA,GACrC10C,KAAMstB,EAAOkW,wBAA0B2I,EAAS5d,eAAiB8lB,EAAkBE,EAAMA,EAAMF,IAE3G,MACSC,GAAgC,OAApBD,GAEjBjgC,EAAO+W,aAAa,aAAc,CAAC,CAC3B3uB,MAAO83C,EACPt0C,KAAMq0C,IAnClB,CAsCJ,GAAC,CAAA/3C,IAAA,qBAAAC,MACD,SAAmB+X,EAAsBstB,EAAWngC,EAASmzC,GACzD,OAAOtgC,EAAqBsC,eAAesC,EAAAA,GAAkB0oB,EAAWngC,EAASmzC,EACrF,GAAC,CAAAt4C,IAAA,UAAAC,MACD,WACIG,KAAKgjB,mBAAmBm1B,iBAAiBn4C,OACI,IAAzCA,KAAKm0C,iCACLvjC,OAAOwnC,aAAap4C,KAAKm0C,gCACzBn0C,KAAKm0C,gCAAkC,GAE3Cn0C,KAAKq4C,gCACDr4C,KAAKo1C,yBACLp1C,KAAK0zC,oBAAoBxmC,YAAYlN,KAAKo1C,uBAAuBnoC,cACjEjN,KAAKo1C,uBAAuBvjC,WAE5B7R,KAAKq1C,yBACLr1C,KAAK0zC,oBAAoBxmC,YAAYlN,KAAKq1C,uBAAuBpoC,cACjEjN,KAAKq1C,uBAAuBxjC,WAEhC7R,KAAK0zC,oBAAoBxmC,YAAYlN,KAAKyzC,4BAA4BznC,SAClEhM,KAAK0c,SAASu2B,qBACdjzC,KAAKuzC,qBAAqBrmC,YAAYlN,KAAK0zC,qBAE/C1zC,KAAKuzC,qBAAqBrmC,YAAYlN,KAAKi0C,kBAC3Cj0C,KAAK+0C,gBAAgBljC,UACrB7R,KAAKuzC,qBAAqBrmC,YAAYlN,KAAKk0C,kBAC3Cl0C,KAAK6zC,gBAAgBhiC,UACrB7R,KAAK61C,UAAUhkC,UACf7R,KAAKuzC,qBAAqBrmC,YAAYlN,KAAKs1C,YAAYtpC,QAAQA,SAC/DhM,KAAKuzC,qBAAqBrmC,YAAYlN,KAAKs1C,YAAYrU,OAAOj1B,SAC9DhM,KAAKuzC,qBAAqBrmC,YAAYlN,KAAKs1C,YAAYpU,mBAAmBl1B,SAC1EhM,KAAKs1C,YAAYzjC,UACjB7R,KAAKiiB,YAAY/U,YAAYlN,KAAKuzC,sBAClCvzC,KAAKud,cAAcqF,QACnBrV,EAAAA,EAAAA,IAAAmE,EAAAA,EAAAA,GAAAigC,EAAAhgC,WAAA,gBAAApS,KAAA,KACJ,GACA,CAAAK,IAAA,QAAAC,MACA,WACI,OAAOG,KAAK0mB,gBAAkB,IAAM1mB,KAAKoiB,GAC7C,GAAC,CAAAxiB,IAAA,gBAAAC,MACD,WACI,OAAO8mB,GAAAA,EAAwB2xB,WACnC,GAAC,CAAA14C,IAAA,iBAAAC,MACD,WACI,OAAKG,KAAK80C,uBAGH90C,KAAK80C,uBAAuBuC,QAFxB,IAGf,GAAC,CAAAz3C,IAAA,oBAAAC,MACD,WACI,OAAOG,KAAK+0C,eAChB,GAAC,CAAAn1C,IAAA,oBAAAC,MACD,WACI,OAAOG,KAAK6zC,eAChB,GAAC,CAAAj0C,IAAA,gBAAAC,MACD,SAAc04C,GACV,IA8/C0B31C,EAAGC,EA9/CvBskB,EAAaorB,GAA0BgG,EAAav4C,KAAK0c,UACzD87B,GA6/CoB51C,EA7/Ce5C,KAAK0c,SA6/CjB7Z,EA7/C2BskB,EA8/CrD,CACHqrB,wBAA0B5vC,EAAE4vC,0BAA4B3vC,EAAE2vC,wBAC1DC,iBAAmB7vC,EAAE6vC,mBAAqB5vC,EAAE4vC,iBAC5CC,uBAAyB9vC,EAAE8vC,yBAA2B7vC,EAAE6vC,uBACxDC,mBAAqB/vC,EAAE+vC,qBAAuB9vC,EAAE8vC,mBAChDC,YAAchwC,EAAEgwC,cAAgB/vC,EAAE+vC,YAClCC,qBAAuBjwC,EAAEiwC,uBAAyBhwC,EAAEgwC,qBACpDC,iBAAmBlwC,EAAEkwC,mBAAqBjwC,EAAEiwC,iBAC5CC,iBAAmBnwC,EAAEmwC,mBAAqBlwC,EAAEkwC,iBAC5CC,aAAepwC,EAAEowC,eAAiBnwC,EAAEmwC,aACpCC,oBAAsBrwC,EAAEqwC,sBAAwBpwC,EAAEowC,oBAClDC,aAAetwC,EAAEswC,eAAiBrwC,EAAEqwC,aACpC7D,cAAgBzsC,EAAEysC,gBAAkBxsC,EAAEwsC,gBAzgDtCrvC,KAAK0c,SAAWyK,EAChB,IAAMsxB,EAA0BD,EAAQ3F,sBAAwB2F,EAAQ1F,kBAAoB0F,EAAQ9F,uBAC9FgG,EAA8B14C,KAAKghC,aAAewX,EAAQ7F,oBAAsB6F,EAAQ5F,aAC9F5yC,KAAKmyC,sBAAsB5C,WAAWpoB,GAClCsxB,EACAz4C,KAAK24C,0BAEAD,GACL14C,KAAKoyC,8BAETpyC,KAAK6zC,gBAAgBzsB,cAAcpnB,KAAKk3C,+BAA+BqB,IACvEv4C,KAAK+0C,gBAAgB3tB,cAAcpnB,KAAKw2C,8BAA8B+B,IAEtEv4C,KAAK61C,UAAU+C,2BAA2B54C,KAAK0c,SAAS81B,yBAEpDgG,EAAQ/F,mBACJzyC,KAAK0c,SAAS+1B,iBACdzyC,KAAKu1C,aAAa,IAAIC,GAA2Bx1C,KAAKy1C,oBAAqBz1C,KAAK0c,SAAS81B,0BAGzFxyC,KAAKu1C,aAAa,IAAIG,GAAuB11C,KAAKy1C,oBAAqBz1C,KAAK0c,SAAS81B,0BAGzFxyC,KAAKuzC,qBAAqBre,UAAYyc,EAAiB6B,cAAcxzC,KAAKkjB,cAAciR,gBAAiBn0B,KAAK0c,SAAS+1B,mBAGvH+F,EAAQvF,sBACJjzC,KAAK0c,SAASu2B,oBACdjzC,KAAKuzC,qBAAqB1f,YAAY7zB,KAAK0zC,qBAG3C1zC,KAAKuzC,qBAAqBrmC,YAAYlN,KAAK0zC,qBAGvD,GAAC,CAAA9zC,IAAA,WAAAC,MACD,WACI,MAAO,CACH2vC,SAAUxvC,KAAK+0C,gBAAgBtc,WAC/BgX,SAAUzvC,KAAK6zC,gBAAgBpb,WAEvC,GAAC,CAAA74B,IAAA,WAAAC,MACD,SAASsc,GAEL,GAAIA,KAAWA,EAAMqzB,WAAarzB,EAAMszB,UACpC,MAAM,IAAIjmC,MAAO2S,EAAMqzB,SAAiE,oDAAtD,qDAGtCxvC,KAAKq4C,gCACLr4C,KAAK64C,yBAEL74C,KAAK+0C,gBAAgB1iB,SAASlW,EAAQA,EAAMqzB,SAAW,MACvDxvC,KAAK6zC,gBAAgBxhB,SAASlW,EAAQA,EAAMszB,SAAW,MACvDzvC,KAAKozC,yBAAyBwD,SAE1Bz6B,IACAnc,KAAK+0C,gBAAgB+D,aAAa,GAClC94C,KAAK6zC,gBAAgBiF,aAAa,IAGtC94C,KAAK80C,uBAAyB,KAC9B90C,KAAKq0C,wBACLr0C,KAAK+4C,UAAU,GACX58B,IACAnc,KAAKg5C,wBAELh5C,KAAK24C,2BAET34C,KAAK02C,0BACL12C,KAAKye,kBAAkBmE,MAC3B,GAAC,CAAAhjB,IAAA,sBAAAC,MACD,WACI,OAAOG,KAAKiiB,WAChB,GAAC,CAAAriB,IAAA,+BAAAC,MACD,SAA6BK,GACzB,OAAOF,KAAK6zC,gBAAgBoF,6BAA6B/4C,EAC7D,GAAC,CAAAN,IAAA,cAAAC,MACD,WACI,OAAOG,KAAK6zC,gBAAgBnqB,aAChC,GAAC,CAAA9pB,IAAA,cAAAC,MACD,SAAYK,GAA0B,IAAhBqE,EAAMoW,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,MAC3B3a,KAAK6zC,gBAAgBrnC,YAAYtM,EAAUqE,EAC/C,GAAC,CAAA3E,IAAA,aAAAC,MACD,SAAW2B,GAAiE,IAArD4oB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EAChC3a,KAAK6zC,gBAAgBqF,WAAW13C,EAAY4oB,EAChD,GAAC,CAAAxqB,IAAA,qBAAAC,MACD,SAAmB2B,GAAiE,IAArD4oB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EACxC3a,KAAK6zC,gBAAgBsF,mBAAmB33C,EAAY4oB,EACxD,GAAC,CAAAxqB,IAAA,sCAAAC,MACD,SAAoC2B,GAAiE,IAArD4oB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EACzD3a,KAAK6zC,gBAAgBuF,oCAAoC53C,EAAY4oB,EACzE,GAAC,CAAAxqB,IAAA,oBAAAC,MACD,SAAkB2B,GAAiE,IAArD4oB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EACvC3a,KAAK6zC,gBAAgBwF,kBAAkB73C,EAAY4oB,EACvD,GAAC,CAAAxqB,IAAA,iBAAAC,MACD,SAAeK,GAA+D,IAArDkqB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EAClC3a,KAAK6zC,gBAAgBpf,eAAev0B,EAAUkqB,EAClD,GAAC,CAAAxqB,IAAA,yBAAAC,MACD,SAAuBK,GAA+D,IAArDkqB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EAC1C3a,KAAK6zC,gBAAgByF,uBAAuBp5C,EAAUkqB,EAC1D,GAAC,CAAAxqB,IAAA,0CAAAC,MACD,SAAwCK,GAA+D,IAArDkqB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EAC3D3a,KAAK6zC,gBAAgB0F,wCAAwCr5C,EAAUkqB,EAC3E,GAAC,CAAAxqB,IAAA,wBAAAC,MACD,SAAsBK,GAA+D,IAArDkqB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EACzC3a,KAAK6zC,gBAAgB2F,sBAAsBt5C,EAAUkqB,EACzD,GAAC,CAAAxqB,IAAA,eAAAC,MACD,WACI,OAAOG,KAAK6zC,gBAAgB/oB,cAChC,GAAC,CAAAlrB,IAAA,gBAAAC,MACD,WACI,OAAOG,KAAK6zC,gBAAgB9oB,eAChC,GAAC,CAAAnrB,IAAA,eAAAC,MACD,SAAamrB,GAA2B,IAAhBzmB,EAAMoW,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,MAC7B3a,KAAK6zC,gBAAgB/Q,aAAa9X,EAAWzmB,EACjD,GAAC,CAAA3E,IAAA,gBAAAC,MACD,SAAckC,GAAwB,IAAhBwC,EAAMoW,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,MAC3B3a,KAAK6zC,gBAAgBjqB,cAAc7nB,EAAQwC,EAC/C,GAAC,CAAA3E,IAAA,cAAAC,MACD,SAAY+J,EAAiBE,GAAoE,IAArDsgB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EACrD3a,KAAK6zC,gBAAgB4F,YAAY7vC,EAAiBE,EAAesgB,EACrE,GAAC,CAAAxqB,IAAA,sBAAAC,MACD,SAAoB+J,EAAiBE,GAAoE,IAArDsgB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EAC7D3a,KAAK6zC,gBAAgB6F,oBAAoB9vC,EAAiBE,EAAesgB,EAC7E,GAAC,CAAAxqB,IAAA,uCAAAC,MACD,SAAqC+J,EAAiBE,GAAoE,IAArDsgB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EAC9E3a,KAAK6zC,gBAAgB8F,qCAAqC/vC,EAAiBE,EAAesgB,EAC9F,GAAC,CAAAxqB,IAAA,qBAAAC,MACD,SAAmB+J,EAAiBE,GAAoE,IAArDsgB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EAC5D3a,KAAK6zC,gBAAgB+F,mBAAmBhwC,EAAiBE,EAAesgB,EAC5E,GAAC,CAAAxqB,IAAA,cAAAC,MACD,SAAYC,GAAqH,IAA9GsqB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EAAwC+Q,EAAsB/Q,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,IAAAA,UAAA,GAAUwP,IAAgBxP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,KAAAA,UAAA,GACpH3a,KAAK6zC,gBAAgBnpB,YAAY5qB,EAAOsqB,EAAYsB,EAAwBvB,EAChF,GAAC,CAAAvqB,IAAA,sBAAAC,MACD,SAAoBC,GAA4D,IAArDsqB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EACpC3a,KAAK6zC,gBAAgBgG,oBAAoB/5C,EAAOsqB,EACpD,GAAC,CAAAxqB,IAAA,uCAAAC,MACD,SAAqCC,GAA4D,IAArDsqB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EACrD3a,KAAK6zC,gBAAgBiG,qCAAqCh6C,EAAOsqB,EACrE,GAAC,CAAAxqB,IAAA,qBAAAC,MACD,SAAmBC,GAA4D,IAArDsqB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EACnC3a,KAAK6zC,gBAAgBkG,mBAAmBj6C,EAAOsqB,EACnD,GAAC,CAAAxqB,IAAA,sCAAAC,MACD,SAAoCC,GAA4D,IAArDsqB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EACpD3a,KAAK6zC,gBAAgBmG,oCAAoCl6C,EAAOsqB,EACpE,GAAC,CAAAxqB,IAAA,mBAAAC,MACD,SAAiBC,GAA4D,IAArDsqB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EACjC3a,KAAK6zC,gBAAgBoG,iBAAiBn6C,EAAOsqB,EACjD,GAAC,CAAAxqB,IAAA,sBAAAC,MACD,WACI,OAAOG,KAAK6zC,gBAAgBqG,qBAChC,GAAC,CAAAt6C,IAAA,gBAAAC,MACD,WAGI,MAAO,CACH2vC,SAHsBxvC,KAAK+0C,gBAAgB77B,gBAI3Cu2B,SAHsBzvC,KAAK6zC,gBAAgB36B,gBAKnD,GAAC,CAAAtZ,IAAA,mBAAAC,MACD,SAAiBmY,GACb,GAAIA,GAAKA,EAAEw3B,UAAYx3B,EAAEy3B,SAAU,CAC/B,IAAM0K,EAAkBniC,EACxBhY,KAAK+0C,gBAAgBz7B,iBAAiB6gC,EAAgB3K,UACtDxvC,KAAK6zC,gBAAgBv6B,iBAAiB6gC,EAAgB1K,SAC1D,CACJ,GAAC,CAAA7vC,IAAA,SAAAC,MACD,SAAOmwB,GACHhwB,KAAKy0C,qBAAqB2F,QAAQpqB,EACtC,GAAC,CAAApwB,IAAA,QAAAC,MACD,WACIG,KAAK6zC,gBAAgB5rB,OACzB,GAAC,CAAAroB,IAAA,eAAAC,MACD,WACI,OAAOG,KAAK+0C,gBAAgBltB,gBAAkB7nB,KAAK6zC,gBAAgBhsB,cACvE,GAAC,CAAAjoB,IAAA,UAAAC,MACD,SAAQ0E,EAAQwoB,EAAWC,GACvBhtB,KAAK6zC,gBAAgBwG,QAAQ91C,EAAQwoB,EAAWC,EACpD,GAAC,CAAAptB,IAAA,8BAAAC,MACD,SAA4B+uB,GACxB,OAAO5uB,KAAK6zC,gBAAgB9xB,4BAA4B6M,EAC5D,GAAC,CAAAhvB,IAAA,oBAAAC,MACD,SAAkBivB,GACd,OAAO9uB,KAAK6zC,gBAAgB9kB,kBAAkBD,EAClD,GAEA,CAAAlvB,IAAA,6BAAAC,MACA,WACIG,KAAKs6C,WACT,GAAC,CAAA16C,IAAA,mBAAAC,MACD,WACI,OAAOG,KAAKs1C,YAAYiF,YAAcv6C,KAAKy0C,qBAAqB+F,YAAc,CAClF,GAAC,CAAA56C,IAAA,wBAAAC,MACD,WACI,GAAKG,KAAK0c,SAASu2B,qBAGdjzC,KAAKo1C,wBAA2Bp1C,KAAKq1C,uBAA1C,CAGA,IAAM/zC,EAAStB,KAAKy0C,qBAAqB+F,YACnCC,EAAez6C,KAAK06C,mBACpBC,EAAYhJ,EAAiBiJ,2BAA6B,EAAIjJ,EAAiBmF,mBAClE92C,KAAK6zC,gBAAgBgH,kBAEpC76C,KAAKo1C,uBAAuB0F,UAAU,CAClC95C,IAAK,EACLI,MAAOuwC,EAAiBmF,mBACxBjK,MAAO8N,EAAYhJ,EAAiBmF,mBACpCx1C,OAASA,EAASm5C,IAEtBz6C,KAAKq1C,uBAAuByF,UAAU,CAClC95C,IAAK,EACL6rC,MAAO,EACPzrC,MAAOuwC,EAAiBmF,mBACxBx1C,OAASA,EAASm5C,IAhB1B,CAmBJ,GACA,CAAA76C,IAAA,sBAAAC,MACA,WACQG,KAAKo0C,6BAGTp0C,KAAKozC,yBAAyB2C,UAClC,GAAC,CAAAn2C,IAAA,8BAAAC,MACD,WAA8B,IAAAy2B,EAAA,MAEmB,IAAzCt2B,KAAKm0C,iCACLvjC,OAAOwnC,aAAap4C,KAAKm0C,gCACzBn0C,KAAKm0C,gCAAkC,GAE3Cn0C,KAAKm0C,+BAAiCvjC,OAAOmqC,YAAW,kBAAMzkB,EAAKqiB,yBAAyB,GAAEhH,EAAiBqJ,8BACnH,GAAC,CAAAp7C,IAAA,0BAAAC,MAUD,WAA0B,IAAAi5B,EAAA,MACuB,IAAzC94B,KAAKm0C,iCAELvjC,OAAOwnC,aAAap4C,KAAKm0C,gCACzBn0C,KAAKm0C,gCAAkC,GAE3C,IAAM8G,EAAuBj7C,KAAK+0C,gBAAgBtc,WAC5CyiB,EAAuBl7C,KAAK6zC,gBAAgBpb,WAClD,GAAKwiB,GAAyBC,EAA9B,CAMAl7C,KAAKq0C,wBACL,IAAM8G,EAAen7C,KAAKq0C,sBACpB+G,EAAwC,KAA5Bp7C,KAAK0c,SAASk2B,YAAqB,KAC/CyI,EAAsB,SAACl/B,GACzB,IAAMm/B,EAAmBn/B,EAAM+0B,iBAC/B,OAAsB,IAAdkK,GAAmBE,GAAoBF,CACnD,EACKC,EAAoBJ,IAA0BI,EAAoBH,IASvEl7C,KAAK+4C,UAAU,GACf/4C,KAAKmyC,sBAAsBzC,YAAYuL,EAAsBC,EAAsB,CAC/ErI,qBAAsB7yC,KAAK0c,SAASm2B,qBACpC0I,qBAAsBv7C,KAAK0c,SAASi2B,qBACrC52B,MAAK,SAAA1Z,GACA84C,IAAiBriB,EAAKub,uBACnB4G,IAAyBniB,EAAKic,gBAAgBtc,YAC9CyiB,IAAyBpiB,EAAK+a,gBAAgBpb,aACjDK,EAAKigB,UAAU,GACfjgB,EAAKgc,uBAAyB,CAC1B0G,UAAWn5C,EAAOm5C,UAClBC,UAAWp5C,EAAOo5C,UAClBpE,QAASh1C,EAAOg1C,QAAQruB,KAAI,SAAA0yB,GAExB,IAAIhV,EACAE,EACAE,EACAE,EACA2U,EAAeD,EAAEC,aAqBrB,OApBID,EAAEhE,cAAcnf,SAEhBmO,EAA0BgV,EAAEhE,cAAc9tC,gBAAkB,EAC5Dg9B,EAAwB,EACxB+U,OAAel8C,IAGfinC,EAA0BgV,EAAEhE,cAAc9tC,gBAC1Cg9B,EAAwB8U,EAAEhE,cAAckE,uBAAyB,GAEjEF,EAAEG,cAActjB,SAEhBuO,EAA0B4U,EAAEG,cAAcjyC,gBAAkB,EAC5Do9B,EAAwB,EACxB2U,OAAel8C,IAGfqnC,EAA0B4U,EAAEG,cAAcjyC,gBAC1Co9B,EAAwB0U,EAAEG,cAAcD,uBAAyB,GAE9D,CACHlV,wBAAAA,EACAE,sBAAAA,EACAE,wBAAAA,EACAE,sBAAAA,EACA8U,YAA8B,OAAjBH,QAA0C,IAAjBA,OAA0B,EAASA,EAAa3yB,KAAI,SAAA0yB,GAAC,MAAK,CAC5FhV,wBAAyBgV,EAAEhE,cAAc9tC,gBACzCmyC,oBAAqBL,EAAEhE,cAAcpsB,YACrCsb,sBAAuB8U,EAAEhE,cAAc5tC,cACvCkyC,kBAAmBN,EAAEhE,cAAcnsB,UACnCub,wBAAyB4U,EAAEG,cAAcjyC,gBACzCqyC,oBAAqBP,EAAEG,cAAcvwB,YACrC0b,sBAAuB0U,EAAEG,cAAc/xC,cACvCoyC,kBAAmBR,EAAEG,cAActwB,UACtC,IAET,KAEJuN,EAAKsa,yBAAyB2C,WAC9Bjd,EAAKiZ,iBAAiBnvB,OAE9B,IAAG,SAACu5B,GACIhB,IAAiBriB,EAAKub,uBACnB4G,IAAyBniB,EAAKic,gBAAgBtc,YAC9CyiB,IAAyBpiB,EAAK+a,gBAAgBpb,aACjDK,EAAKigB,UAAU,GACfjgB,EAAKgc,uBAAyB,KAC9Bhc,EAAKsa,yBAAyB2C,WAEtC,KA5ESpE,EAAiByK,QAAQnB,EAAqB9yB,IAAKnoB,KAAKgyC,uBACrDL,EAAiByK,QAAQlB,EAAqB/yB,IAAKnoB,KAAKiyC,wBAC5DjyC,KAAKgyC,qBAAuBiJ,EAAqB9yB,IACjDnoB,KAAKiyC,qBAAuBiJ,EAAqB/yB,IACjDnoB,KAAK+iB,qBAAqB1I,KAAKuY,EAAAA,GAAa,gBAAiB,wDAhBrE,CAyFJ,GAAC,CAAAhzB,IAAA,gCAAAC,MACD,WACIG,KAAKs0C,qBAAqB+H,MAAMr8C,KAAK+0C,iBACrC/0C,KAAKu0C,qBAAqB8H,MAAMr8C,KAAK6zC,gBACzC,GAAC,CAAAj0C,IAAA,qBAAAC,MACD,WACI,GAAKG,KAAK+0C,gBAAgBtc,YAAez4B,KAAK6zC,gBAAgBpb,WAA9D,CAGA,IAAM0L,EAAenkC,KAAK80C,uBAAyB90C,KAAK80C,uBAAuBuC,QAAU,GACnFiF,EAAkBt8C,KAAKs0C,qBAAqBiI,oBAAoBv8C,KAAK+0C,gBAAgBnsB,kBACrF4zB,EAAkBx8C,KAAKu0C,qBAAqBgI,oBAAoBv8C,KAAK6zC,gBAAgBjrB,kBACrF8pB,EAAyB1yC,KAAK0c,SAASg2B,yBAA2B1yC,KAAK6zC,gBAAgBnhB,UAAU,IACjG+pB,EAAkBz8C,KAAK61C,UAAU6G,0BAA0BvY,EAAankC,KAAK0c,SAASm2B,qBAAsB7yC,KAAK0c,SAASo2B,iBAAkBJ,EAAwB4J,EAAiBE,GAC3L,IACIx8C,KAAKo0C,6BAA8B,EACnCp0C,KAAKs0C,qBAAqBt4B,MAAMhc,KAAK+0C,gBAAiB/0C,KAAKo1C,uBAAwBqH,EAAgBjN,UAAU,GAC7GxvC,KAAKu0C,qBAAqBv4B,MAAMhc,KAAK6zC,gBAAiB7zC,KAAKq1C,uBAAwBoH,EAAgBhN,UAAU,EACjH,CAAC,QAEGzvC,KAAKo0C,6BAA8B,CACvC,CAbA,CAcJ,GAAC,CAAAx0C,IAAA,6BAAAC,MACD,SAA2BkF,GACvB,IAAM43C,EAAgB9lC,OAAOC,OAAO,CAAC,EAAG/R,GAaxC,OAZA43C,EAActlB,cAAe,EAC7BslB,EAAc/H,iBAAkB,EAEhC+H,EAAchb,UAAY9qB,OAAOC,OAAO,CAAC,EAAI6lC,EAAchb,WAAa,CAAC,GACzEgb,EAAchb,UAAUib,SAAW,UACnCD,EAAcE,SAAU,EACxBF,EAAcG,SAAW98C,KAAK0c,SAASs2B,aACvC2J,EAAcI,sBAAuB,EAGrCJ,EAAcK,QAAUnmC,OAAOC,OAAO,CAAC,EAAI6lC,EAAcK,SAAW,CAAC,GACrEL,EAAcK,QAAQ/3B,SAAU,EACzB03B,CACX,GAAC,CAAA/8C,IAAA,gCAAAC,MACD,SAA8BkF,GAC1B,IAAM1C,EAASrC,KAAKi9C,2BAA2Bl4C,GAgB/C,OAfK/E,KAAK0c,SAAS+1B,iBAMfpwC,EAAO66C,kBAAoBl9C,KAAK0c,SAASw2B,cAJzC7wC,EAAO66C,kBAAoB,MAC3B76C,EAAO86C,kBAAoB,OAK3Bp4C,EAAQq4C,oBACR/6C,EAAOunC,UAAY7kC,EAAQq4C,mBAE/B/6C,EAAOunC,WAAa8H,GACpBrvC,EAAO80B,UAAYn3B,KAAK0c,SAASq2B,iBACjC1wC,EAAOg7C,eAAiB,CAAEp4B,SAAU5iB,EAAO80B,UAC3C90B,EAAOi7C,qBAAuB,iCACvBzmC,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGzU,GAAS,CAAE2tB,UAAW,CACrD1uB,OAAQ,EACRF,MAAO,IAEnB,GAAC,CAAAxB,IAAA,iCAAAC,MACD,SAA+BkF,GAC3B,IAAM1C,EAASrC,KAAKi9C,2BAA2Bl4C,GAS/C,OARIA,EAAQw4C,oBACRl7C,EAAOunC,UAAY7kC,EAAQw4C,mBAE/Bl7C,EAAOunC,WAAa8H,GACpBrvC,EAAO66C,kBAAoBl9C,KAAK0c,SAASw2B,aACzC7wC,EAAOm7C,6BAA+BC,EAAAA,GAAcD,6BAA6BE,aAAe/L,EAAiBiJ,2BACjHv4C,EAAOs/B,UAAUgc,mBAAoB,EACrCt7C,EAAOi7C,qBAAuB,iCACvBzmC,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGzU,GAAS,CAAE2tB,UAAW,CACrD1uB,OAAQ,EACRF,MAAO,IAEnB,GAAC,CAAAxB,IAAA,WAAAC,MACD,WACIG,KAAKy0C,qBAAqB2F,UAC1Bp6C,KAAKs6C,WACT,GAAC,CAAA16C,IAAA,YAAAC,MACD,WACI,IAAMuB,EAAQpB,KAAKy0C,qBAAqBmJ,WAClCt8C,EAAStB,KAAKy0C,qBAAqB+F,YACnCC,EAAez6C,KAAK06C,mBACpBmD,EAAa79C,KAAK61C,UAAUiI,SAClC99C,KAAKi0C,iBAAiBhL,MAAM7nC,MAAQy8C,EAAa,KACjD79C,KAAKi0C,iBAAiBhL,MAAM/nC,KAAO,MACnClB,KAAKk0C,iBAAiBjL,MAAM7nC,MAASA,EAAQy8C,EAAc,KAC3D79C,KAAKk0C,iBAAiBjL,MAAM/nC,KAAO28C,EAAa,KAChD79C,KAAK0zC,oBAAoBzK,MAAMjoC,IAAM,MACrChB,KAAK0zC,oBAAoBzK,MAAM3nC,OAAUA,EAASm5C,EAAgB,KAClEz6C,KAAK0zC,oBAAoBzK,MAAM7nC,MAAQuwC,EAAiBiJ,2BAA6B,KACrF56C,KAAK0zC,oBAAoBzK,MAAM/nC,KAAQE,EAAQuwC,EAAiBiJ,2BAA8B,KAC9F56C,KAAKyzC,4BAA4Bx/B,SAAS09B,EAAiBiJ,4BAC3D56C,KAAKyzC,4BAA4BjgC,UAAU,IAC3CxT,KAAK+0C,gBAAgB+I,OAAO,CAAE18C,MAAOy8C,EAAYv8C,OAASA,EAASm5C,IACnEz6C,KAAK6zC,gBAAgBiK,OAAO,CAAE18C,MAAOA,EAAQy8C,GAAc79C,KAAK0c,SAASu2B,oBAAsBtB,EAAiBiJ,2BAA6B,GAAIt5C,OAASA,EAASm5C,KAC/Jz6C,KAAKo1C,wBAA0Bp1C,KAAKq1C,yBACpCr1C,KAAKs2C,wBAETt2C,KAAKs1C,YAAYwI,OAAOx8C,EAASm5C,EAAcr5C,EAAOq5C,GACtDz6C,KAAK02C,yBACT,GAAC,CAAA92C,IAAA,0BAAAC,MACD,WACI,IAAMi+C,EAAS99C,KAAK+9C,2BACfD,GAKD99C,KAAKyzC,4BAA4BlgC,OAAOuqC,EAAO98C,KAC/ChB,KAAKyzC,4BAA4BjgC,UAAUsqC,EAAOx8C,UALlDtB,KAAKyzC,4BAA4BlgC,OAAO,GACxCvT,KAAKyzC,4BAA4BjgC,UAAU,GAMnD,GAAC,CAAA5T,IAAA,2BAAAC,MACD,WACI,IAAMgU,EAAa7T,KAAK6zC,gBAAgBgH,gBACxC,IAAKhnC,EACD,OAAO,KAEX,IAAM9S,EAAYf,KAAK6zC,gBAAgBhjB,eACjCpwB,EAAeT,KAAK6zC,gBAAgBnzC,kBACpCs9C,EAAwB97C,KAAKuJ,IAAI,EAAGoI,EAAWvS,QAC/C28C,EAA4B/7C,KAAKuJ,IAAI,EAAGuyC,EAAwB,GAChEE,EAAgBz9C,EAAe,EAAKw9C,EAA4Bx9C,EAAgB,EAGtF,MAAO,CACHa,OAHuBY,KAAKuJ,IAAI,EAAGvJ,KAAKmsC,MAAMx6B,EAAWvS,OAAS48C,IAIlEl9C,IAH2BkB,KAAKmsC,MAAMttC,EAAYm9C,GAK1D,GAAC,CAAAt+C,IAAA,oBAAAC,MACD,WAAoB,IAAA28B,EAAA,KAChB,MAAO,CACHohB,SAAU,WACN,OAAOphB,EAAKiY,qBAAqBmJ,UACrC,EACApD,UAAW,WACP,OAAQhe,EAAKiY,qBAAqB+F,YAAche,EAAKke,kBACzD,EACApxB,WAAY,WACR,MAAO,CACH2pB,oBAAqBzW,EAAK9f,SAASu2B,oBAE3C,EACAkL,oBAAqB,WACjB,OAAO3hB,EAAK+W,oBAChB,EACA6K,gBAAiB,WACb5hB,EAAK8d,WACT,EACAhW,kBAAmB,WACf,OAAO9H,EAAKuY,eAChB,EACA9S,kBAAmB,WACf,OAAOzF,EAAKqX,eAChB,EAER,GAAC,CAAAj0C,IAAA,eAAAC,MACD,SAAaw+C,GACT,IAAIv1C,EACsB,QAAzBA,EAAK9I,KAAK61C,iBAA8B,IAAP/sC,GAAyBA,EAAG+I,UAC9D7R,KAAK61C,UAAYwI,EACbr+C,KAAKs+C,iBACLD,EAAYE,kBAAkBv+C,KAAKs+C,iBAEvCD,EAAYvI,YAAY91C,KAAKkjB,cAAciR,iBACvCn0B,KAAK80C,wBACL90C,KAAKszC,qBAGTtzC,KAAKs6C,WACT,GAAC,CAAA16C,IAAA,qCAAAC,MACD,SAAmC2B,EAAYg9C,GAC3C,IAAMra,EAAenkC,KAAK80C,uBAAyB90C,KAAK80C,uBAAuBuC,QAAU,GACzF,GAA2B,IAAvBlT,EAAY5hC,QAAgBf,EAAag9C,EAAyBra,EAAY,IAE9E,OAAO,KAIX,IAFA,IAAIx4B,EAAM,EACNF,EAAM04B,EAAY5hC,OAAS,EACxBoJ,EAAMF,GAAK,CACd,IAAMgzC,EAAMv8C,KAAKmsC,OAAO1iC,EAAMF,GAAO,GAC/BizC,EAAWF,EAAyBra,EAAYsa,IAChDE,EAAUF,EAAM,GAAKhzC,EAAM+yC,EAAyBra,EAAYsa,EAAM,IAAM,WAC9Ej9C,EAAak9C,EACbjzC,EAAMgzC,EAAM,EAEPj9C,GAAcm9C,EACnBhzC,EAAM8yC,EAAM,GAIZ9yC,EAAM8yC,EACNhzC,EAAMgzC,EAEd,CACA,OAAOta,EAAYx4B,EACvB,GAAC,CAAA/L,IAAA,0CAAAC,MACD,SAAwC2B,GACpC,IAAMglC,EAAaxmC,KAAK4+C,mCAAmCp9C,GAAY,SAACglC,GAAU,OAAKA,EAAWE,uBAAuB,IACzH,IAAKF,EACD,OAAOhlC,EAEX,IAAMq9C,EAA+BrY,EAAWE,yBAA2BF,EAAWI,sBAAwB,GAAK,EAAI,GACjHkY,EAA+BtY,EAAWM,yBAA2BN,EAAWQ,sBAAwB,GAAK,EAAI,GACjH+X,EAA4BvY,EAAWI,sBAAwB,EAAKJ,EAAWI,sBAAwBJ,EAAWE,wBAA0B,EAAK,EACjJsY,EAA4BxY,EAAWQ,sBAAwB,EAAKR,EAAWQ,sBAAwBR,EAAWM,wBAA0B,EAAK,EACjJW,EAAQjmC,EAAaq9C,EAC3B,OAAIpX,GAASsX,EACFD,EAA+B58C,KAAKyJ,IAAI87B,EAAOuX,GAEnDF,EAA+BE,EAA2BD,EAA2BtX,CAChG,GAAC,CAAA7nC,IAAA,0CAAAC,MACD,SAAwC2B,GACpC,IAAMglC,EAAaxmC,KAAK4+C,mCAAmCp9C,GAAY,SAACglC,GAAU,OAAKA,EAAWM,uBAAuB,IACzH,IAAKN,EACD,OAAOhlC,EAEX,IAAMq9C,EAA+BrY,EAAWE,yBAA2BF,EAAWI,sBAAwB,GAAK,EAAI,GACjHkY,EAA+BtY,EAAWM,yBAA2BN,EAAWQ,sBAAwB,GAAK,EAAI,GACjH+X,EAA4BvY,EAAWI,sBAAwB,EAAKJ,EAAWI,sBAAwBJ,EAAWE,wBAA0B,EAAK,EACjJsY,EAA4BxY,EAAWQ,sBAAwB,EAAKR,EAAWQ,sBAAwBR,EAAWM,wBAA0B,EAAK,EACjJW,EAAQjmC,EAAas9C,EAC3B,OAAIrX,GAASuX,EACFH,EAA+B38C,KAAKyJ,IAAI87B,EAAOsX,GAEnDF,EAA+BE,EAA2BC,EAA2BvX,CAChG,GAAC,CAAA7nC,IAAA,oCAAAC,MACD,SAAkC2B,GAC9B,OAAKxB,KAAK80C,uBAIH,CACHmK,qBAAsBj/C,KAAKk/C,wCAAwC19C,IAH5D,IAKf,GAAC,CAAA5B,IAAA,oCAAAC,MACD,SAAkC2B,GAC9B,OAAKxB,KAAK80C,uBAIH,CACHmK,qBAAsBj/C,KAAKm/C,wCAAwC39C,IAH5D,IAKf,IAAC,EAAA5B,IAAA,gBAAAC,MA91BD,SAAqB++B,EAAO6T,GACxB,IAAIpwC,EAAS,+CAKb,OAJIowC,IACApwC,GAAU,iBAEdA,IAAU+8C,EAAAA,GAAAA,IAAqBxgB,EAAMj7B,KAEzC,GAAC,CAAA/D,IAAA,UAAAC,MAsfD,SAAe+C,EAAGC,GACd,OAAKD,IAAMC,MAGND,IAAMC,IAGHD,EAAEmxB,aAAelxB,EAAEkxB,UAC/B,KAAC4d,CAAA,CArpBe,CAAkCr3B,EAAAA,IAg/BtDq3B,GAAiBmF,mBAAqB,GACtCnF,GAAiBiJ,2BAA6B,GAC9CjJ,GAAiBqJ,8BAAgC,IACjDrJ,GAAmBp3B,GAAW,CAC1BS,GAAQ,EAAGqkC,GAAAA,GACXrkC,GAAQ,EAAGuI,EAAAA,IACXvI,GAAQ,EAAGma,GAAAA,IACXna,GAAQ,EAAGoa,EAAAA,GACXpa,GAAQ,EAAGsa,GAAAA,IACXta,GAAQ,EAAGua,GAAAA,IACXva,GAAQ,EAAGskC,GAAAA,GACXtkC,GAAQ,GAAIukC,GAAAA,KACb5N,IACyB,IACtB6N,GAAqB,SAAA7pB,IAAA52B,EAAAA,EAAAA,GAAAygD,EAAA7pB,GAAA,IAAAhiB,GAAA1U,EAAAA,EAAAA,GAAAugD,GACvB,SAAAA,EAAYC,GAAY,IAAA/iB,EAIK,OAJLp9B,EAAAA,EAAAA,GAAA,KAAAkgD,IACpB9iB,EAAA/oB,EAAApU,KAAA,OACKmgD,YAAcD,EACnB/iB,EAAKijB,aAAe,KACpBjjB,EAAKkjB,aAAe,KAAKljB,CAC7B,CAoCC,OApCA/8B,EAAAA,EAAAA,GAAA6/C,EAAA,EAAA5/C,IAAA,cAAAC,MACD,SAAY++B,GACR,IAAMihB,EAAiBjhB,EAAMG,SAAS+gB,GAAAA,OAA+BlhB,EAAMG,SAASghB,GAAAA,MAAiBC,GAAAA,KAAoBC,YAAY,GAC/HC,EAAiBthB,EAAMG,SAASohB,GAAAA,OAA8BvhB,EAAMG,SAASqhB,GAAAA,MAAgBC,GAAAA,KAAoBJ,YAAY,GAC7HK,GAAcT,EAAetd,OAAOviC,KAAK2/C,gBAAkBO,EAAe3d,OAAOviC,KAAK4/C,cAG5F,OAFA5/C,KAAK2/C,aAAeE,EACpB7/C,KAAK4/C,aAAeM,EACbI,CACX,GAAC,CAAA1gD,IAAA,4BAAAC,MACD,SAA0BskC,EAAa0O,EAAsBC,EAAkBJ,EAAwB6N,EAAqBC,GAExHA,EAAsBA,EAAoBC,MAAK,SAAC79C,EAAGC,GAC/C,OAAOD,EAAE20C,gBAAkB10C,EAAE00C,eACjC,IACAgJ,EAAsBA,EAAoBE,MAAK,SAAC79C,EAAGC,GAC/C,OAAOD,EAAE20C,gBAAkB10C,EAAE00C,eACjC,IACA,IAAMzG,EAAQ9wC,KAAK0gD,cAAcvc,EAAaoc,EAAqBC,EAAqB1N,GAElF6N,EAAsB3gD,KAAK4gD,8BAA8B9P,EAAO3M,EAAa0O,EAAsBC,GACnG+N,EAAsB7gD,KAAK8gD,8BAA8BhQ,EAAO3M,EAAa0O,EAAsBC,EAAkBJ,GAC3H,MAAO,CACHlD,SAAU,CACN5gB,YAAa+xB,EAAoB/xB,YACjCyiB,cAAesP,EAAoBtP,cACnCP,MAAOA,EAAMtB,UAEjBC,SAAU,CACN7gB,YAAaiyB,EAAoBjyB,YACjCyiB,cAAewP,EAAoBxP,cACnCP,MAAOA,EAAMrB,UAGzB,GAAC,CAAA7vC,IAAA,oBAAAC,MACD,SAAkBkhD,GACd,KACHvB,CAAA,CA1CsB,CAASllC,EAAAA,IA4C9B0mC,GAAwB,WAC1B,SAAAA,EAAYz8C,IAAQjF,EAAAA,EAAAA,GAAA,KAAA0hD,GAChBhhD,KAAKihD,QAAU18C,EACfvE,KAAKkhD,QAAU,EACflhD,KAAKijC,QAAU,KACfjjC,KAAKmhD,SACT,CASC,OATAxhD,EAAAA,EAAAA,GAAAqhD,EAAA,EAAAphD,IAAA,UAAAC,MACD,WACIG,KAAKkhD,SACDlhD,KAAKkhD,OAASlhD,KAAKihD,QAAQ1+C,OAC3BvC,KAAKijC,QAAUjjC,KAAKihD,QAAQjhD,KAAKkhD,QAGjClhD,KAAKijC,QAAU,IAEvB,KAAC+d,CAAA,CAfyB,GAiBxBI,GAAiB,WACnB,SAAAA,EAAYC,EAAcC,EAAoBC,EAAoBxM,EAAiBlB,IAAiBv0C,EAAAA,EAAAA,GAAA,KAAA8hD,GAChGphD,KAAKqhD,aAAeA,EACpBrhD,KAAKshD,mBAAqBA,EAC1BthD,KAAKuhD,mBAAqBA,EAC1BvhD,KAAK+0C,gBAAkBA,EACvB/0C,KAAK6zC,gBAAkBA,CAC3B,CAgOC,OAhOAl0C,EAAAA,EAAAA,GAAAyhD,EAAA,EAAAxhD,IAAA,eAAAC,MAUD,WAqCI,IApCA,IAAM2hD,EAAqBxhD,KAAK+0C,gBAAgBriB,UAAU,IACpD+uB,EAAqBzhD,KAAK6zC,gBAAgBnhB,UAAU,IACpDgvB,GAA+G,IAAxF1hD,KAAK+0C,gBAAgBriB,UAAU,KAAqCivB,eAC3FC,GAA+G,IAAxF5hD,KAAK6zC,gBAAgBnhB,UAAU,KAAqCivB,eAC3FE,EAAeH,GAAuBE,EACtCvd,EAAgBrkC,KAAK+0C,gBAAgBtc,WACrCqpB,EAA+B9hD,KAAK+0C,gBAAgBgN,gBAAgB/5C,qBACpEg6C,EAA+BhiD,KAAK6zC,gBAAgBkO,gBAAgB/5C,qBACpE3F,EACQ,GADRA,EAEQ,GAEV28C,EAA2B,EAC3BD,EAA2B,EAC3BF,EAA+B,EAC/BC,EAA+B,EAC/BmD,EAAkC,EAClCC,EAAkC,EAChCC,EAAkB,SAACv/C,EAAGC,GACxB,OAAOD,EAAE20C,gBAAkB10C,EAAE00C,eACjC,EACM6K,EAA0B,SAACC,EAAaC,GAC1C,GAAqB,OAAjBA,EAAKt2C,SAAoBq2C,EAAY9/C,OAAS,EAAG,CACjD,IAAMggD,EAAWF,EAAYA,EAAY9/C,OAAS,GAClD,GAAIggD,EAAShL,kBAAoB+K,EAAK/K,iBAAwC,OAArBgL,EAASv2C,QAE9D,YADAu2C,EAASC,eAAiBF,EAAKE,cAGvC,CACAH,EAAYrwC,KAAKswC,EACrB,EACMG,EAAoB,IAAIzB,GAAyBhhD,KAAKuhD,oBACtDmB,EAAoB,IAAI1B,GAAyBhhD,KAAKshD,oBACxDqB,EAAyB,EACzBC,EAAyB,EAEpBpgD,EAAI,EAAGD,EAASvC,KAAKqhD,aAAa9+C,OAAQC,GAAKD,EAAQC,IAAK,CACjE,IAAMgkC,EAAchkC,EAAID,EAASvC,KAAKqhD,aAAa7+C,GAAK,KACrC,OAAfgkC,GACAqY,EAA+BrY,EAAWE,yBAA2BF,EAAWI,sBAAwB,GAAK,EAAI,GACjHkY,EAA+BtY,EAAWM,yBAA2BN,EAAWQ,sBAAwB,GAAK,EAAI,GACjH+X,EAA4BvY,EAAWI,sBAAwB,EAAIwa,EAAkByB,kBAAkB7iD,KAAK+0C,gBAAiBvO,EAAWE,wBAAyBF,EAAWI,uBAAyB,EACrMoY,EAA4BxY,EAAWQ,sBAAwB,EAAIoa,EAAkByB,kBAAkB7iD,KAAK6zC,gBAAiBrN,EAAWM,wBAAyBN,EAAWQ,uBAAyB,EACrMib,EAAkC//C,KAAKuJ,IAAI+6B,EAAWE,wBAAyBF,EAAWI,uBAC1Fsb,EAAkChgD,KAAKuJ,IAAI+6B,EAAWM,wBAAyBN,EAAWQ,yBAM1Fib,EAFApD,GAAgC,IAAWE,EAG3CmD,EAFApD,GAAgC,IAAWE,GAK/C,IAAI8D,EAAe,GACfC,EAAe,GAGnB,GAAIlB,EAAa,CACb,IAAIh1C,OAAK,EAGDA,EAFJ25B,EACIA,EAAWI,sBAAwB,EAC3BJ,EAAWE,wBAA0Bic,EAGrCnc,EAAWM,wBAA0B8b,EAKzCve,EAAcxS,eAAiB8wB,EAAyB,EAEpE,IAAK,IAAIngD,EAAI,EAAGA,EAAIqK,EAAOrK,IAAK,CAC5B,IAAM2mC,EAAqBwZ,EAAyBngD,EAC9C6mC,EAAqBuZ,EAAyBpgD,EAC9CwgD,EAAwBlB,EAA6BmB,0BAA0B9Z,GAC/E+Z,EAAwBlB,EAA6BiB,0BAA0B5Z,GACjF2Z,EAAwBE,EACxBJ,EAAa9wC,KAAK,CACdulC,gBAAiBpO,EACjBqZ,cAAeU,EAAwBF,EACvCh3C,QAAS,KACT4iC,cAAe,OAGdoU,EAAwBE,GAC7BH,EAAa/wC,KAAK,CACdulC,gBAAiBlO,EACjBmZ,cAAeQ,EAAwBE,EACvCl3C,QAAS,KACT4iC,cAAe,MAG3B,CACIpI,IACAmc,GAA0Bnc,EAAWI,sBAAwB,EAAIJ,EAAWI,sBAAwBJ,EAAWE,yBAA2B,EAC1Ikc,GAA0Bpc,EAAWQ,sBAAwB,EAAIR,EAAWQ,sBAAwBR,EAAWM,yBAA2B,EAElJ,CAEA,KAAO2b,EAAkBxf,SAAWwf,EAAkBxf,QAAQsU,iBAAmB2K,GAAiC,CAC9G,IAAIiB,OAAkB,EAElBA,EADAV,EAAkBxf,QAAQsU,iBAAmBuH,EACxBD,EAA+BC,EAA+B2D,EAAkBxf,QAAQsU,gBAGxF0K,EAEzB,IAAIrT,EAAgB,KAChBpI,GAAcA,EAAWM,yBAA2B2b,EAAkBxf,QAAQsU,iBAAmBkL,EAAkBxf,QAAQsU,iBAAmB/Q,EAAWQ,wBACzJ4H,EAAgB5uC,KAAKojD,uEAEzBN,EAAa9wC,KAAK,CACdulC,gBAAiB4L,EACjBX,cAAeC,EAAkBxf,QAAQ3hC,OAASmgD,EAClDz1C,QAAS,KACT4iC,cAAeA,IAEnB6T,EAAkBtB,SACtB,CAEA,KAAOuB,EAAkBzf,SAAWyf,EAAkBzf,QAAQsU,iBAAmB0K,GAAiC,CAC9G,IAAIkB,OAAkB,EAElBA,EADAT,EAAkBzf,QAAQsU,iBAAmBsH,EACxBC,EAA+BD,EAA+B6D,EAAkBzf,QAAQsU,gBAGxF2K,EAEzBa,EAAa/wC,KAAK,CACdulC,gBAAiB4L,EACjBX,cAAeE,EAAkBzf,QAAQ3hC,OAASkgD,EAClDx1C,QAAS,OAEb02C,EAAkBvB,SACtB,CACA,GAAmB,OAAf3a,GAAuB6c,GAAiB7c,GAAa,CACrD,IAAMxxB,EAAIhV,KAAKsjD,yBAAyB9c,EAAYuY,EAA0BC,GAC1EhqC,GACA8tC,EAAa9wC,KAAKgD,EAE1B,CACA,GAAmB,OAAfwxB,GAAuB+c,GAAiB/c,GAAa,CACrD,IAAMxxB,EAAIhV,KAAKwjD,yBAAyBhd,EAAYuY,EAA0BC,GAC1EhqC,GACA+tC,EAAa/wC,KAAKgD,EAE1B,CAIA,IAAIyuC,EAAoB,EACpBC,EAAoB,EAGxB,IAFAZ,EAAeA,EAAarC,KAAK0B,GACjCY,EAAeA,EAAatC,KAAK0B,GAC1BsB,EAAoBX,EAAavgD,QAAUmhD,EAAoBX,EAAaxgD,QAAQ,CACvF,IAAMitC,EAAWsT,EAAaW,GACxBhU,EAAWsT,EAAaW,GACxBC,EAAgBnU,EAAS+H,gBAAkBsH,EAC3C+E,EAAgBnU,EAAS8H,gBAAkBuH,EAC7C6E,EAAgBC,GAChBxB,EAAwB//C,EAAiBmtC,GACzCiU,KAEKG,EAAgBD,GACrBvB,EAAwB//C,EAAiBotC,GACzCiU,KAEKlU,EAASqU,iBACdzB,EAAwB//C,EAAiBmtC,GACzCiU,KAEKhU,EAASoU,iBACdzB,EAAwB//C,EAAiBotC,GACzCiU,KAGIlU,EAASgT,eAAiB/S,EAAS+S,eAEnChT,EAASgT,eAAiB/S,EAAS+S,cACnCkB,MAIAjU,EAAS+S,eAAiBhT,EAASgT,cACnCiB,IAGZ,CAEA,KAAOA,EAAoBX,EAAavgD,QACpC6/C,EAAwB//C,EAAiBygD,EAAaW,IACtDA,IAGJ,KAAOC,EAAoBX,EAAaxgD,QACpC6/C,EAAwB//C,EAAiB0gD,EAAaW,IACtDA,GAGR,CACA,MAAO,CACHlU,SAAU4R,EAAkB0C,gBAAgBzhD,GAC5CotC,SAAU2R,EAAkB0C,gBAAgBzhD,GAEpD,IAAC,EAAAzC,IAAA,oBAAAC,MAvND,SAAyB6X,EAAQ9N,EAAiBE,GAC9C,IAAMqS,EAAQzE,EAAO+gB,WACft1B,EAAYuU,EAAOqqC,gBACzB,GAAI5lC,GAAShZ,EAAW,CACpB,IAAMqnB,EAAYu5B,GAAa5nC,EAAOhZ,EAAWyG,EAAiBE,GAClE,OAAQ0gB,EAAU1gB,cAAgB0gB,EAAU5gB,gBAAkB,CAClE,CACA,OAAQE,EAAgBF,EAAkB,CAC9C,GAAC,CAAAhK,IAAA,kBAAAC,MAgND,SAAuBixC,GACnB,OAAOA,EAAM9nB,KAAI,SAAConB,GAId,OAHKA,EAAEpkC,UACHokC,EAAEpkC,QAAUg4C,MAET5T,CACX,GACJ,KAACgR,CAAA,CAvOkB,GAyOvB,SAAS6C,GAAiBr6C,EAAiB0hB,EAAaxhB,EAAeyhB,EAAWxmB,GAC9E,MAAO,CACHjF,MAAO,IAAImpB,GAAAA,EAAMrf,EAAiB0hB,EAAaxhB,EAAeyhB,GAC9DxmB,QAASA,EAEjB,CACA,IAAMm/C,GAAc,CAChBC,kBAAmBpvB,GAAAA,GAAuBC,SAAS,CAC/CC,YAAa,kCACbmvB,qBAAsB,uBAAyB9iB,EAAAA,EAAUC,YAAYnB,EAAAA,EAAQikB,cAEjFC,WAAYvvB,GAAAA,GAAuBC,SAAS,CACxCC,YAAa,0BACbC,UAAW,gBAEfqvB,oBAAqBxvB,GAAAA,GAAuBC,SAAS,CACjDC,YAAa,qCACbC,UAAW,cACXsvB,aAAa,IAEjBC,WAAY1vB,GAAAA,GAAuBC,SAAS,CACxCC,YAAa,0BACbC,UAAW,gBAEfwvB,oBAAqB3vB,GAAAA,GAAuBC,SAAS,CACjDC,YAAa,qCACbC,UAAW,cACXsvB,aAAa,IAEjBG,WAAY5vB,GAAAA,GAAuBC,SAAS,CACxCC,YAAa,0BACbC,UAAW,cACX0vB,gBAAiB,gBACjBJ,aAAa,IAEjBK,mBAAoB9vB,GAAAA,GAAuBC,SAAS,CAChDC,YAAa,oCACbC,UAAW,cACX4vB,0BAA2B,eAAiBxjB,EAAAA,EAAUC,YAAYgQ,IAClEqT,gBAAiB,gBACjBJ,aAAa,IAEjBO,WAAYhwB,GAAAA,GAAuBC,SAAS,CACxCC,YAAa,0BACbC,UAAW,cACX0vB,gBAAiB,gBACjBJ,aAAa,IAEjBQ,mBAAoBjwB,GAAAA,GAAuBC,SAAS,CAChDC,YAAa,oCACbC,UAAW,cACX4vB,0BAA2B,eAAiBxjB,EAAAA,EAAUC,YAAYiQ,IAClEoT,gBAAiB,gBACjBJ,aAAa,IAEjBS,iBAAkBlwB,GAAAA,GAAuBC,SAAS,CAC9CC,YAAa,iCACb2vB,gBAAiB,mBAGnBpP,GAA0B,SAAA0P,IAAAnmD,EAAAA,EAAAA,GAAAy2C,EAAA0P,GAAA,IAAA9wC,GAAAnV,EAAAA,EAAAA,GAAAu2C,GAC5B,SAAAA,EAAYiK,EAAYjN,GAAyB,IAAAvV,EAaI,OAbJ39B,EAAAA,EAAAA,GAAA,KAAAk2C,IAC7CvY,EAAA7oB,EAAA7U,KAAA,KAAMkgD,IACD0F,cAA4C,IAA5B3S,EACrBvV,EAAKmoB,WAAa,KAClBnoB,EAAKooB,cAAgB,KACrBpoB,EAAKqoB,mBAAqB,KAC1BroB,EAAKsoB,MAAQtoB,EAAK5lB,UAAU,IAAImuC,EAAAA,EAAKvoB,EAAKyiB,YAAYvB,uBAAqB/sC,EAAAA,EAAAA,GAAA6rB,GAAQ,CAAEwoB,YAAa,KAC9FxoB,EAAKkoB,eACLloB,EAAKsoB,MAAMG,MAAQ,GAEvBzoB,EAAKsoB,MAAMI,YAAW,kBAAM1oB,EAAK2oB,kBAAkB,IACnD3oB,EAAKsoB,MAAM5iC,aAAY,SAACza,GAAC,OAAK+0B,EAAK4oB,YAAY39C,EAAE,IACjD+0B,EAAKsoB,MAAMO,UAAS,kBAAM7oB,EAAK8oB,gBAAgB,IAC/C9oB,EAAKsoB,MAAMS,YAAW,kBAAM/oB,EAAKgpB,cAAc,IAAEhpB,CACrD,CAyLC,OAzLAt9B,EAAAA,EAAAA,GAAA61C,EAAA,EAAA51C,IAAA,6BAAAC,MACD,SAA2B2yC,GACvB,IAAM0T,GAA8C,IAA5B1T,EACpBxyC,KAAKmlD,eAAiBe,IACtBlmD,KAAKmlD,aAAee,EACpBlmD,KAAKulD,MAAMG,MAAQ1lD,KAAKmlD,aAAe,EAA6B,EAE5E,GAAC,CAAAvlD,IAAA,SAAAC,MACD,WAAoC,IAA7BsmD,EAASxrC,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG3a,KAAKolD,WAEdrxC,EADI/T,KAAK0/C,YAAY9B,YACD59C,KAAK0/C,YAAYp2B,aAAa2pB,oBAAsBtB,GAAiBiJ,2BAA6B,GACxHwL,EAAelkD,KAAKmsC,OAAO8X,GAAa,IAAOpyC,GAC7CsyC,EAAWnkD,KAAKmsC,MAAM,GAAMt6B,GAiBlC,OAhBAqyC,EAAepmD,KAAKmlD,aAAekB,EAAWD,GAAgBC,EAC1DtyC,EAAiE,EAAlDyhC,EAA2B8Q,sBACtCF,EAAe5Q,EAA2B8Q,uBAC1CF,EAAe5Q,EAA2B8Q,sBAE1CF,EAAeryC,EAAeyhC,EAA2B8Q,uBACzDF,EAAeryC,EAAeyhC,EAA2B8Q,uBAI7DF,EAAeC,EAEfrmD,KAAKqlD,gBAAkBe,IACvBpmD,KAAKqlD,cAAgBe,GAEzBpmD,KAAKulD,MAAMzH,SACJ99C,KAAKqlD,aAChB,GAAC,CAAAzlD,IAAA,mBAAAC,MACD,WACIG,KAAKslD,mBAAqBtlD,KAAKqlD,aACnC,GAAC,CAAAzlD,IAAA,cAAAC,MACD,SAAYqI,GACR,IACM6L,EADI/T,KAAK0/C,YAAY9B,YACD59C,KAAK0/C,YAAYp2B,aAAa2pB,oBAAsBtB,GAAiBiJ,2BAA6B,GACtHwL,EAAepmD,KAAK89C,QAAQ99C,KAAKslD,oBAAsBp9C,EAAEq+C,SAAWr+C,EAAEs+C,SAAWzyC,GACvF/T,KAAKolD,WAAagB,EAAeryC,EACjC/T,KAAK0/C,YAAYtB,iBACrB,GAAC,CAAAx+C,IAAA,iBAAAC,MACD,WACIG,KAAKulD,MAAMzH,QACf,GAAC,CAAAl+C,IAAA,eAAAC,MACD,WACIG,KAAKolD,WAAa,GAClBplD,KAAK0/C,YAAYtB,kBACjBp+C,KAAKulD,MAAMzH,QACf,GAAC,CAAAl+C,IAAA,qBAAAC,MACD,SAAmB4mD,GACf,OAAO,CACX,GAAC,CAAA7mD,IAAA,sBAAAC,MACD,SAAoB4mD,GAChB,OAAOzmD,KAAKqlD,aAChB,GAAC,CAAAzlD,IAAA,wBAAAC,MACD,SAAsB4mD,GAClB,OAAOzmD,KAAK0/C,YAAYlF,WAC5B,GAAC,CAAA56C,IAAA,oBAAAC,MACD,SAAkB6mD,GACd1mD,KAAKulD,MAAMoB,kBAAoBD,EAAOE,MAC1C,GAAC,CAAAhnD,IAAA,gBAAAC,MACD,SAAcskC,EAAaue,EAAmBD,GAC1C,IAAMxN,EAAiBj1C,KAAK0/C,YAAYpb,oBAClC6Q,EAAiBn1C,KAAK0/C,YAAYzd,oBAExC,OADU,IAAI4kB,GAA4B1iB,EAAaue,EAAmBD,EAAmBxN,EAAgBE,GACpG2R,cACb,GAAC,CAAAlnD,IAAA,gCAAAC,MACD,SAA8BixC,EAAO3M,EAAa0O,EAAsBC,GACpE,IAQoCh5B,EAR9Bm7B,EAAiBj1C,KAAK0/C,YAAYpb,oBAClCyiB,EAAoBzzC,OAAOtT,KAAK4/C,cAChCv9C,EAAS,CACXusB,YAAa,GACbyiB,cAAe,IAEbhN,EAAgB4Q,EAAexc,WAC/BuuB,EAAoB/R,EAAe8M,gBAAgBhoC,GAAAhC,EAAAA,EAAAA,GAChCosB,GAAW,IAApC,IAAApqB,EAAA/B,MAAA8B,EAAAC,EAAA9B,KAAAC,MAAsC,KAA3BsuB,EAAU1sB,EAAAja,MACjB,GAAI0jD,GAAiB/c,GAAa,CAC9BnkC,EAAOusB,YAAY5c,KAAK,CACpBlS,MAAO,IAAImpB,GAAAA,EAAMud,EAAWE,wBAAyB,EAAGF,EAAWI,sBAAuB,YAC1F7hC,QAAU+tC,EAAmBoR,GAAYc,mBAAqBd,GAAYa,aAEzE1B,GAAiB7c,IAAgBA,EAAWsV,aAC7Cz5C,EAAOusB,YAAY5c,KAAKiyC,GAAiBzd,EAAWE,wBAAyB,EAAGF,EAAWI,sBAAuB,WAAmDsd,GAAYK,sBAErL,IAAM/5B,EAAYu5B,GAAa1f,EAAe2iB,EAAmBxgB,EAAWE,wBAAyBF,EAAWI,uBAEhH,GADAvkC,EAAOgvC,cAAcr/B,KAAK,IAAIi1C,GAAAA,GAAkBz8B,EAAU5gB,gBAAiB4gB,EAAU1gB,cAAqC,EAAGi9C,IACzHvgB,EAAWsV,YAAa,KACuBoL,EADvBC,GAAApvC,EAAAA,EAAAA,GACCyuB,EAAWsV,aAAW,IAA/C,IAAAqL,EAAAnvC,MAAAkvC,EAAAC,EAAAlvC,KAAAC,MAAiD,KAAtCkvC,EAAUF,EAAArnD,MACjB,GAAIwnD,GAAqBD,GACrB,GAAIvU,EACA,IAAK,IAAIrxC,EAAa4lD,EAAW1gB,wBAAyBllC,GAAc4lD,EAAWxgB,sBAAuBplC,IAAc,CACpH,IAAI8pB,OAAW,EACXC,OAAS,EAETD,EADA9pB,IAAe4lD,EAAW1gB,wBACZ0gB,EAAWrL,oBAGX1X,EAAcijB,gCAAgC9lD,GAG5D+pB,EADA/pB,IAAe4lD,EAAWxgB,sBACdwgB,EAAWpL,kBAGX3X,EAAckjB,+BAA+B/lD,GAE7Da,EAAOusB,YAAY5c,KAAKiyC,GAAiBziD,EAAY8pB,EAAa9pB,EAAY+pB,EAAW24B,GAAYI,YACzG,MAGAjiD,EAAOusB,YAAY5c,KAAKiyC,GAAiBmD,EAAW1gB,wBAAyB0gB,EAAWrL,oBAAqBqL,EAAWxgB,sBAAuBwgB,EAAWpL,kBAAmBkI,GAAYI,YAGrM,CAAC,OAAA9rC,GAAA2uC,EAAAj/C,EAAAsQ,EAAA,SAAA2uC,EAAA1uC,GAAA,CACL,CACJ,CACJ,CAAC,OAAAD,GAAAuB,EAAA7R,EAAAsQ,EAAA,SAAAuB,EAAAtB,GAAA,CACD,OAAOpW,CACX,GAAC,CAAAzC,IAAA,gCAAAC,MACD,SAA8BixC,EAAO3M,EAAa0O,EAAsBC,EAAkBJ,GACtF,IAQoC8U,EAR9BrS,EAAiBn1C,KAAK0/C,YAAYzd,oBAClC8kB,EAAoBzzC,OAAOtT,KAAK2/C,cAChCt9C,EAAS,CACXusB,YAAa,GACbyiB,cAAe,IAEb9M,EAAgB4Q,EAAe1c,WAC/BgvB,EAAoBtS,EAAe4M,gBAAgB2F,GAAA3vC,EAAAA,EAAAA,GAChCosB,GAAW,QAAA9f,EAAA,WAAE,IAA3BmiB,EAAUghB,EAAA3nD,MAEjB,GAAI6yC,EACA,GAAIlM,EAAWQ,sBAAwB,EACnC3kC,EAAOusB,YAAY5c,KAAK,CACpBlS,MAAO,IAAImpB,GAAAA,EAAMud,EAAWM,wBAAyB,EAAGN,EAAWM,wBAAyB,GAC5F/hC,QAASm/C,GAAYC,wBAGxB,CACD,IAAMpT,EAAWD,EAAMrB,SAAS6H,MAAK,SAAAlH,GAAC,OAAIA,EAAEmH,kBAAoB/Q,EAAWM,uBAAuB,IAC9FiK,IACAA,EAASnC,cA0YjC,WACI,IAAM+Y,EAAQt7C,SAASC,cAAc,OAErC,OADAq7C,EAAMzyB,UAAY,uBAAyBoM,EAAAA,EAAUC,YAAYnB,EAAAA,EAAQikB,YAClEn/B,EAAI0iC,EAAE,MAAO,CAAC,EAAGD,EAC5B,CA9YiDE,GAEjC,CAEJ,GAAIxE,GAAiB7c,GAAa,CAC9BnkC,EAAOusB,YAAY5c,KAAK,CACpBlS,MAAO,IAAImpB,GAAAA,EAAMud,EAAWM,wBAAyB,EAAGN,EAAWQ,sBAAuB,YAC1FjiC,QAAU+tC,EAAmBoR,GAAYW,mBAAqBX,GAAYS,aAEzEpB,GAAiB/c,IAAgBA,EAAWsV,aAC7Cz5C,EAAOusB,YAAY5c,KAAKiyC,GAAiBzd,EAAWM,wBAAyB,EAAGN,EAAWQ,sBAAuB,WAAmDkd,GAAYQ,sBAErL,IAAMl6B,EAAYu5B,GAAaxf,EAAekjB,EAAmBjhB,EAAWM,wBAAyBN,EAAWQ,uBAEhH,GADA3kC,EAAOgvC,cAAcr/B,KAAK,IAAIi1C,GAAAA,GAAkBz8B,EAAU5gB,gBAAiB4gB,EAAU1gB,cAAqC,EAAGi9C,IACzHvgB,EAAWsV,YAAa,KACuBgM,EADvBC,GAAAhwC,EAAAA,EAAAA,GACCyuB,EAAWsV,aAAW,IAA/C,IAAAiM,EAAA/vC,MAAA8vC,EAAAC,EAAA9vC,KAAAC,MAAiD,KAAtCkvC,EAAUU,EAAAjoD,MACjB,GAAImoD,GAAqBZ,GACrB,GAAIvU,EACA,IAAK,IAAIrxC,EAAa4lD,EAAWtgB,wBAAyBtlC,GAAc4lD,EAAWpgB,sBAAuBxlC,IAAc,CACpH,IAAI8pB,OAAW,EACXC,OAAS,EAETD,EADA9pB,IAAe4lD,EAAWtgB,wBACZsgB,EAAWnL,oBAGX1X,EAAc+iB,gCAAgC9lD,GAG5D+pB,EADA/pB,IAAe4lD,EAAWpgB,sBACdogB,EAAWlL,kBAGX3X,EAAcgjB,+BAA+B/lD,GAE7Da,EAAOusB,YAAY5c,KAAKiyC,GAAiBziD,EAAY8pB,EAAa9pB,EAAY+pB,EAAW24B,GAAYO,YACzG,MAGApiD,EAAOusB,YAAY5c,KAAKiyC,GAAiBmD,EAAWtgB,wBAAyBsgB,EAAWnL,oBAAqBmL,EAAWpgB,sBAAuBogB,EAAWlL,kBAAmBgI,GAAYO,YAGrM,CAAC,OAAAjsC,GAAAuvC,EAAA7/C,EAAAsQ,EAAA,SAAAuvC,EAAAtvC,GAAA,CACL,CACJ,CACJ,EAvDA,IAAAivC,EAAA1vC,MAAAwvC,EAAAE,EAAAzvC,KAAAC,MAAAmM,GAuDC,OAAA7L,GAAAkvC,EAAAx/C,EAAAsQ,EAAA,SAAAkvC,EAAAjvC,GAAA,CACD,OAAOpW,CACX,KAACmzC,CAAA,CAxM2B,CAASgK,IA0MzChK,GAA2B8Q,qBAAuB,IAAI,IAChDO,GAA2B,SAAAoB,IAAAlpD,EAAAA,EAAAA,GAAA8nD,EAAAoB,GAAA,IAAA5xB,GAAAp3B,EAAAA,EAAAA,GAAA4nD,GAC7B,SAAAA,EAAY1iB,EAAaue,EAAmBD,EAAmBxN,EAAgBE,GAAgB,OAAA71C,EAAAA,EAAAA,GAAA,KAAAunD,GAAAxwB,EAAA92B,KAAA,KACrF4kC,EAAaue,EAAmBD,EAAmBxN,EAAgBE,EAC7E,CAuBC,OAvBAx1C,EAAAA,EAAAA,GAAAknD,EAAA,EAAAjnD,IAAA,sEAAAC,MACD,WACI,OAAO,IACX,GAAC,CAAAD,IAAA,2BAAAC,MACD,SAAyB2mC,EAAYuY,EAA0BC,GAC3D,OAAIA,EAA2BD,EACpB,CACHxH,gBAAiBr1C,KAAKuJ,IAAI+6B,EAAWE,wBAAyBF,EAAWI,uBACzE4b,cAAgBxD,EAA2BD,EAC3C/yC,QAAS,MAGV,IACX,GAAC,CAAApM,IAAA,2BAAAC,MACD,SAAyB2mC,EAAYuY,EAA0BC,GAC3D,OAAID,EAA2BC,EACpB,CACHzH,gBAAiBr1C,KAAKuJ,IAAI+6B,EAAWM,wBAAyBN,EAAWQ,uBACzEwb,cAAgBzD,EAA2BC,EAC3ChzC,QAAS,MAGV,IACX,KAAC66C,CAAA,CA1B4B,CAASzF,IA4BpC1L,GAAsB,SAAAwS,IAAAnpD,EAAAA,EAAAA,GAAA22C,EAAAwS,GAAA,IAAAtvB,GAAA35B,EAAAA,EAAAA,GAAAy2C,GACxB,SAAAA,EAAY+J,EAAYjN,GAAyB,IAAA3U,EAQzC,OARyCv+B,EAAAA,EAAAA,GAAA,KAAAo2C,IAC7C7X,EAAAjF,EAAAr5B,KAAA,KAAMkgD,IACD0I,iBAAmB1I,EAAWnb,oBAAoBuW,gBAAgBuN,gBACvEvqB,EAAKxmB,UAAUooC,EAAWnb,oBAAoBnlB,mBAAkB,SAACtL,GACzDgqB,EAAKsqB,mBAAqBt0C,EAAWu0C,kBACrCvqB,EAAKsqB,iBAAmBt0C,EAAWu0C,gBACnC3I,EAAWrB,kBAEnB,KAAIvgB,CACR,CA2GC,OA3GAl+B,EAAAA,EAAAA,GAAA+1C,EAAA,EAAA91C,IAAA,6BAAAC,MACD,SAA2B2yC,GACvB,GACH,CAAA5yC,IAAA,gBAAAC,MACD,SAAcskC,EAAaue,EAAmBD,EAAmB3P,GAC7D,IAAMmC,EAAiBj1C,KAAK0/C,YAAYpb,oBAClC6Q,EAAiBn1C,KAAK0/C,YAAYzd,oBAExC,OADiB,IAAIomB,GAAwBlkB,EAAaue,EAAmBD,EAAmBxN,EAAgBE,EAAgBrC,GAChHgU,cACpB,GAAC,CAAAlnD,IAAA,gCAAAC,MACD,SAA8BixC,EAAO3M,EAAa0O,EAAsBC,GACpE,IASoCwV,EAT9BvB,EAAoBzzC,OAAOtT,KAAK4/C,cAChCv9C,EAAS,CACXusB,YAAa,GACbyiB,cAAe,IAEb4D,EAAiBj1C,KAAK0/C,YAAYpb,oBAClCD,EAAgB4Q,EAAexc,WAC/BuuB,EAAoB/R,EAAe8M,gBACrCwG,EAAY,EAAEC,GAAAzwC,EAAAA,EAAAA,GACOosB,GAAW,IAApC,IAAAqkB,EAAAxwC,MAAAswC,EAAAE,EAAAvwC,KAAAC,MAAsC,KAA3BsuB,EAAU8hB,EAAAzoD,MAEjB,GAAI0jD,GAAiB/c,GAAa,CAK9B,IAJAnkC,EAAOusB,YAAY5c,KAAK,CACpBlS,MAAO,IAAImpB,GAAAA,EAAMud,EAAWE,wBAAyB,EAAGF,EAAWI,sBAAuB,YAC1F7hC,QAASm/C,GAAYe,mBAElBsD,EAAYzX,EAAMrB,SAASltC,QAAQ,CACtC,IAAMkmD,EAAO3X,EAAMrB,SAAS8Y,GAC5B,GAAIE,EAAK/jB,MAAQ+jB,EAAK/jB,KAAKgC,yBAA2BF,EAAWE,wBAC7D,MAEJ6hB,GACJ,CACA,IAAIG,EAAoB,EACxB,GAAIH,EAAYzX,EAAMrB,SAASltC,OAAQ,CACnC,IAAMkmD,EAAO3X,EAAMrB,SAAS8Y,GACxBE,EAAK/jB,MACF+jB,EAAK/jB,KAAKgC,0BAA4BF,EAAWE,yBACjD+hB,EAAK/jB,KAAKkC,wBAA0BJ,EAAWI,uBAC/C6hB,EAAK/jB,KAAKoC,0BAA4BN,EAAWM,yBACjD2hB,EAAK/jB,KAAKsC,wBAA0BR,EAAWQ,wBAClD0hB,EAAoBD,EAAKjG,cAEjC,CACA,IAAMh4B,EAAYu5B,GAAa1f,EAAe2iB,EAAmBxgB,EAAWE,wBAAyBF,EAAWI,uBAChHvkC,EAAOgvC,cAAcr/B,KAAK,IAAIi1C,GAAAA,GAAkBz8B,EAAU5gB,gBAAiB4gB,EAAU1gB,cAAe4+C,EAAmB3B,GAC3H,CACJ,CAAC,OAAAvuC,GAAAgwC,EAAAtgD,EAAAsQ,EAAA,SAAAgwC,EAAA/vC,GAAA,CACD,OAAOpW,CACX,GAAC,CAAAzC,IAAA,gCAAAC,MACD,SAA8BixC,EAAO3M,EAAa0O,EAAsBC,EAAkBJ,GACtF,IAQoCiW,EAR9BxT,EAAiBn1C,KAAK0/C,YAAYzd,oBAClC8kB,EAAoBzzC,OAAOtT,KAAK2/C,cAChCt9C,EAAS,CACXusB,YAAa,GACbyiB,cAAe,IAEb9M,EAAgB4Q,EAAe1c,WAC/BgvB,EAAoBtS,EAAe4M,gBAAgB6G,GAAA7wC,EAAAA,EAAAA,GAChCosB,GAAW,IAApC,IAAAykB,EAAA5wC,MAAA2wC,EAAAC,EAAA3wC,KAAAC,MAAsC,KAA3BsuB,EAAUmiB,EAAA9oD,MAEjB,GAAIwjD,GAAiB7c,GAAa,CAC9BnkC,EAAOusB,YAAY5c,KAAK,CACpBlS,MAAO,IAAImpB,GAAAA,EAAMud,EAAWM,wBAAyB,EAAGN,EAAWQ,sBAAuB,YAC1FjiC,QAAU+tC,EAAmBoR,GAAYW,mBAAqBX,GAAYS,aAE9E,IAAMn6B,EAAYu5B,GAAaxf,EAAekjB,EAAmBjhB,EAAWM,wBAAyBN,EAAWQ,uBAEhH,GADA3kC,EAAOgvC,cAAcr/B,KAAK,IAAIi1C,GAAAA,GAAkBz8B,EAAU5gB,gBAAiB4gB,EAAU1gB,cAAqC,EAAGi9C,IACzHvgB,EAAWsV,YAAa,KACuB+M,EADvBC,GAAA/wC,EAAAA,EAAAA,GACCyuB,EAAWsV,aAAW,IAA/C,IAAAgN,EAAA9wC,MAAA6wC,EAAAC,EAAA7wC,KAAAC,MAAiD,KAAtCkvC,EAAUyB,EAAAhpD,MACjB,GAAImoD,GAAqBZ,GACrB,GAAIvU,EACA,IAAK,IAAIrxC,EAAa4lD,EAAWtgB,wBAAyBtlC,GAAc4lD,EAAWpgB,sBAAuBxlC,IAAc,CACpH,IAAI8pB,OAAW,EACXC,OAAS,EAETD,EADA9pB,IAAe4lD,EAAWtgB,wBACZsgB,EAAWnL,oBAGX1X,EAAc+iB,gCAAgC9lD,GAG5D+pB,EADA/pB,IAAe4lD,EAAWpgB,sBACdogB,EAAWlL,kBAGX3X,EAAcgjB,+BAA+B/lD,GAE7Da,EAAOusB,YAAY5c,KAAKiyC,GAAiBziD,EAAY8pB,EAAa9pB,EAAY+pB,EAAW24B,GAAYO,YACzG,MAGApiD,EAAOusB,YAAY5c,KAAKiyC,GAAiBmD,EAAWtgB,wBAAyBsgB,EAAWnL,oBAAqBmL,EAAWpgB,sBAAuBogB,EAAWlL,kBAAmBgI,GAAYO,YAGrM,CAAC,OAAAjsC,GAAAswC,EAAA5gD,EAAAsQ,EAAA,SAAAswC,EAAArwC,GAAA,CACL,MAEIpW,EAAOusB,YAAY5c,KAAKiyC,GAAiBzd,EAAWM,wBAAyB,EAAGN,EAAWQ,sBAAuB,WAAmDkd,GAAYQ,qBAEzL,CACJ,CAAC,OAAAlsC,GAAAowC,EAAA1gD,EAAAsQ,EAAA,SAAAowC,EAAAnwC,GAAA,CACD,OAAOpW,CACX,GAAC,CAAAzC,IAAA,SAAAC,MACD,WAEI,OAAOqC,KAAKuJ,IAAI,EAAGzL,KAAKmoD,iBAC5B,KAACzS,CAAA,CArHuB,CAAS8J,IAuH/B6I,GAAuB,SAAAU,IAAAhqD,EAAAA,EAAAA,GAAAspD,EAAAU,GAAA,IAAA/rB,GAAA/9B,EAAAA,EAAAA,GAAAopD,GACzB,SAAAA,EAAYlkB,EAAaue,EAAmBD,EAAmBxN,EAAgBE,EAAgBrC,GAAkB,IAAA3U,EAMlB,OANkB7+B,EAAAA,EAAAA,GAAA,KAAA+oD,IAC7GlqB,EAAAnB,EAAAz9B,KAAA,KAAM4kC,EAAaue,EAAmBD,EAAmBxN,EAAgBE,IACpE6T,eAAiB/T,EAAexc,WACrC0F,EAAK8qB,kBAAoBnW,EACzB3U,EAAK+qB,mBAAqB,GAC1B/qB,EAAKgrB,kBAAoB,GACzBhrB,EAAKirB,oBAAsBjrB,EAAK0V,gBAAgBkO,gBAAgBsH,2BAA2BlrB,CAC/F,CAmKC,OAnKAx+B,EAAAA,EAAAA,GAAA0oD,EAAA,EAAAzoD,IAAA,eAAAC,MACD,WACI,IAAMwC,GAAMkL,EAAAA,EAAAA,IAAAmE,EAAAA,EAAAA,GAAA22C,EAAA12C,WAAA,qBAAApS,KAAA,MAEZ,OADAS,KAAKspD,UAAUjnD,GACRA,CACX,GAAC,CAAAzC,IAAA,sEAAAC,MACD,WACI,IAAMwC,EAASgK,SAASC,cAAc,OAEtC,OADAjK,EAAO6yB,UAAY,gCACZ7yB,CACX,GAAC,CAAAzC,IAAA,2BAAAC,MACD,SAAyB2mC,EAAYuY,EAA0BC,GAC3D,IAAMpQ,EAAgBviC,SAASC,cAAc,OAE7C,OADAsiC,EAAc1Z,UAAY,gCACnB,CACHqiB,gBAAiBr1C,KAAKuJ,IAAI+6B,EAAWE,wBAAyBF,EAAWI,uBACzE4b,cAAexD,EACfhzC,QAASK,SAASC,cAAc,OAChCsiC,cAAeA,EAEvB,GAAC,CAAAhvC,IAAA,2BAAAC,MACD,SAAyB2mC,EAAYuY,EAA0BC,GAC3D,IAAMhzC,EAAUK,SAASC,cAAc,OACvCN,EAAQkpB,UAAY,0BAAH9yB,OAA6BmnD,EAAAA,GAC9C,IAAM3a,EAAgBviC,SAASC,cAAc,OAC7CsiC,EAAc1Z,UAAY,kCAiB1B,IAhBA,IAAM6b,EAAW,CACb8S,iBAAiB,EACjBtM,gBAAuD,IAArC/Q,EAAWQ,sBAA8BR,EAAWM,wBAA0BN,EAAWM,wBAA0B,EACrI0b,cAAezD,EACfyK,aAAc,EACdx9C,QAASA,EACT4iC,cAAeA,EACflK,KAAM,CACFgC,wBAAyBF,EAAWE,wBACpCE,sBAAuBJ,EAAWI,sBAClCE,wBAAyBN,EAAWM,wBACpCE,sBAAuBR,EAAWQ,sBAClC3C,cAAerkC,KAAKgpD,eACpBha,eAAgB,OAGfxtC,EAAaglC,EAAWE,wBAAyBllC,GAAcglC,EAAWI,sBAAuBplC,IACtGxB,KAAKopD,oBAAoBK,WAAWzpD,KAAKgpD,eAAev/B,eAAejoB,GAAa,KAAM,MAI9F,OAFAxB,KAAKkpD,mBAAmBl3C,KAAKw0B,GAC7BxmC,KAAKmpD,kBAAkBn3C,KAAK++B,GACrBA,CACX,GAAC,CAAAnxC,IAAA,YAAAC,MACD,SAAUwC,GAkBN,IAjBA,IAAMqnD,EAAwB1pD,KAAK6zC,gBAAgBvqB,aAC7CD,EAAUrpB,KAAK6zC,gBAAgBpb,WAAWnP,aAAaD,QACvDhY,EAAWq4C,EAAsB1kD,IAAI,IACrC2kD,EAAgCD,EAAsB1kD,IAAI,IAC1D4kD,EAAiCv4C,EAASu4C,+BAC1CC,EAAyBH,EAAsB1kD,IAAI,IACnDklC,EAA4BlqC,KAAKgpD,eAAe9e,4BAChDE,EAAkBpqC,KAAKgpD,eAAe5e,kBACtCnE,EAAayjB,EAAsB1kD,IAAI,IAEvC8kD,EADaJ,EAAsB1kD,IAAI,KACLisB,iBAClC84B,EAAyBL,EAAsB1kD,IAAI,KACnDglD,EAAmBN,EAAsB1kD,IAAI,IAC7CilD,EAA0BP,EAAsB1kD,IAAI,IACpDklD,EAAgBR,EAAsB1kD,IAAI,IAC1CmlD,EAAanqD,KAAKopD,oBAAoBgB,WACxCC,EAAiB,EACZ7nD,EAAI,EAAGA,EAAIxC,KAAKkpD,mBAAmB3mD,OAAQC,IAAK,CACrD,IAAMgkC,EAAaxmC,KAAKkpD,mBAAmB1mD,GACrCuuC,EAAW/wC,KAAKmpD,kBAAkB3mD,GAClCwJ,EAAU+kC,EAAS/kC,SACzBuF,EAAAA,EAAAA,GAAcvF,EAASqF,GACvB,IAAMu9B,EAAgBmC,EAASnC,eAC/Br9B,EAAAA,EAAAA,GAAcq9B,EAAev9B,GAC7B,IAAMud,EAAc,GACpB,GAAI4X,EAAWsV,YAAa,KACuBwO,EADvBC,GAAAxyC,EAAAA,EAAAA,GACCyuB,EAAWsV,aAAW,IAA/C,IAAAyO,EAAAvyC,MAAAsyC,EAAAC,EAAAtyC,KAAAC,MAAiD,KAAtCkvC,EAAUkD,EAAAzqD,MACbwnD,GAAqBD,IACrBx4B,EAAY5c,KAAK,IAAIw4C,EAAAA,GAAiB,IAAIvhC,GAAAA,EAAMm+B,EAAW1gB,wBAAyB0gB,EAAWrL,oBAAqBqL,EAAWxgB,sBAAuBwgB,EAAWpL,mBAAoB,cAAe,GAE5M,CAAC,OAAAxjC,GAAA+xC,EAAAriD,EAAAsQ,EAAA,SAAA+xC,EAAA9xC,GAAA,CACL,CAMA,IALA,IAAMgyC,EAAkB77B,EAAYrsB,OAAS,EACvC4N,EAAK,IAAIY,GAAAA,GAAc,KACzB25C,EAAkB,EAClBC,EAAoB,EACpB3b,EAAiB,KACZxtC,EAAaglC,EAAWE,wBAAyBllC,GAAcglC,EAAWI,sBAAuBplC,IAAc,CACpH,IAAM+H,EAAY/H,EAAaglC,EAAWE,wBACpCmD,EAAa7pC,KAAKgpD,eAAe4B,aAAaC,cAAcrpD,GAC5DioC,EAAcI,EAAWpgB,iBACzBqhC,EAAgBX,EAAWE,KAC3BU,EAAoBC,GAAAA,GAAex4C,OAAOoc,EAAaptB,EAAY,EAAGioC,EAAYlnC,OAAS,GACjG,GAAIuoD,EAAe,CACf,IACoDG,EADhDC,EAAkB,EAAEC,GAAApzC,EAAAA,EAAAA,GACE+yC,EAAcM,cAAY,IAApD,IAAAD,EAAAnzC,MAAAizC,EAAAE,EAAAlzC,KAAAC,MAAsD,KAA3CmzC,EAAWJ,EAAAprD,MACZyrD,EAAiBzhB,EAAW0hB,gBAAgBL,EAAiBG,EAAa,GAC1EG,EAAkB/hB,EAAYgiB,UAAUP,EAAiBG,GAC/DX,EAAkBxoD,KAAKuJ,IAAIi/C,EAAiB1qD,KAAK0rD,oBAAoBf,IAAqBa,EAAiBF,EAAgBN,GAAAA,GAAeW,eAAeZ,EAAmBG,EAAiBG,GAAcZ,EAAgBvgB,EAA2BE,EAAiB/4B,EAAUs4C,EAA+B1jB,EAAY6jB,EAAsBC,EAAwBC,EAAkBC,EAAyBC,EAAe7gC,EAASlZ,EAAIy+B,IACjbsc,EAAkBG,CACtB,CAAC,OAAA7yC,GAAA2yC,EAAAjjD,EAAAsQ,EAAA,SAAA2yC,EAAA1yC,GAAA,CAKD,IAJKu2B,IACDA,EAAiB,IAGdA,EAAezsC,OAASgH,GAC3BylC,EAAeA,EAAezsC,QAAU,EAE5CysC,EAAezlC,GAAauhD,EAAcM,aAAa7oD,OACvDwuC,EAASyR,eAAkBsI,EAAcM,aAAa7oD,OAAS,EAC/D,IAAMqpD,EAAiBv/C,SAASC,cAAc,OAC9Cs/C,EAAe12B,UAAY,gBAC3B7yB,EAAOmtC,SAASx9B,KAAK,CACjBulC,gBAAiB/1C,EACjBqqD,YAAa,EACbrJ,cAAesI,EAAcM,aAAa7oD,OAAS,EACnDyJ,QAASg4C,KACTpV,cAAegd,GAEvB,MAEIlB,EAAkBxoD,KAAKuJ,IAAIi/C,EAAiB1qD,KAAK0rD,oBAAoBf,IAAqBlhB,EAAaI,EAAYkhB,EAAmBN,EAAgBvgB,EAA2BE,EAAiB/4B,EAAUs4C,EAA+B1jB,EAAY6jB,EAAsBC,EAAwBC,EAAkBC,EAAyBC,EAAe7gC,EAASlZ,EAAIy+B,GAEpX,CACA8b,GAAmBb,EACnB,IAAMngB,EAAOv5B,EAAGM,QACVq7C,EAAcra,GAAWA,GAASpiC,WAAWq6B,GAAQA,EAG3D,GAFA19B,EAAQuD,UAAYu8C,EACpB/a,EAASyY,aAAgBkB,EAAkBd,EACvC5a,EAGA,IADA,IAAMtG,EAAMlC,EAAWI,sBAAwBJ,EAAWE,wBACnDsI,EAAezsC,QAAUmmC,GAC5BsG,EAAeA,EAAezsC,QAAU,EAGhDwuC,EAASrM,KAAKsK,eAAiBA,CACnC,CACA3sC,EAAOmtC,SAASiR,MAAK,SAAC79C,EAAGC,GACrB,OAAOD,EAAE20C,gBAAkB10C,EAAE00C,eACjC,GACJ,GAAC,CAAA33C,IAAA,sBAAAC,MACD,SAAoB8qD,EAAmBlhB,EAAaI,EAAYjb,EAAa67B,EAAgBvgB,EAA2BE,EAAiB/4B,EAAUs4C,EAA+B1jB,EAAY6jB,EAAsBC,EAAwBC,EAAkBC,EAAyBC,EAAe7gC,EAASlZ,EAAIy+B,GAC/Sz+B,EAAGkD,aAAa,yBACXo3C,GAEDt6C,EAAGkD,aAAa,gBAEpBlD,EAAGkD,aAAa,iBAChBlD,EAAGkD,aAAaC,OAAOq3C,EAAoB1kB,IAC3C91B,EAAGkD,aAAa,yBAChB,IAAM22B,EAAeC,EAAAA,GAAsBD,aAAaP,EAAaS,GAC/DC,EAAcF,EAAAA,GAAsBE,YAAYV,EAAaO,EAAcI,GAC3E2hB,GAAS1hB,EAAAA,EAAAA,IAAe,IAAIC,EAAAA,GAAiBj5B,EAASk5B,cAAgBof,EAAgCt4C,EAASm5B,+BAAgCf,GAAa,EAAOO,EAAcG,EAAa,EAAGN,EAAYjb,EAAavF,EAAS,EAAGhY,EAASo5B,WAAYp5B,EAASq5B,YAAar5B,EAASs5B,cAAeof,EAAwBC,EAAkBC,EAAyBC,IAAkBtf,EAAAA,GAAoBC,IAAK,MAC1Z16B,GAEH,GADAA,EAAGkD,aAAa,UACZrT,KAAKipD,kBAAmB,CACxB,IAAM+C,EAAgB3/C,SAASC,cAAc,OAC7C0/C,EAAc92B,UAAY,eAAH9yB,OAAkBk/B,EAAAA,EAAUC,YAAYiQ,KAC/Dwa,EAAcv/C,aAAa,QAAS,yBAAFrK,OAA2BuoD,EAAoB1kB,EAAU,aAAA7jC,OAAY0nD,EAAoB,cAAA1nD,OAAa6jC,EAAU,gBAClJ2I,EAAc/a,YAAYm4B,EAC9B,CACA,OAAOD,EAAOE,iBAAiBC,oBAAoBH,EAAOE,iBAAiB1pD,OAC/E,KAAC8lD,CAAA,CA3KwB,CAASjH,IAgLtC,SAASiC,GAAiB7c,GACtB,OAAOA,EAAWQ,sBAAwB,CAC9C,CACA,SAASuc,GAAiB/c,GACtB,OAAOA,EAAWI,sBAAwB,CAC9C,CACA,SAASohB,GAAqBZ,GAC1B,OAAIA,EAAWtgB,0BAA4BsgB,EAAWpgB,sBAC3CogB,EAAWlL,kBAAoBkL,EAAWnL,oBAAsB,EAEpEmL,EAAWpgB,sBAAwBogB,EAAWtgB,wBAA0B,CACnF,CACA,SAASugB,GAAqBD,GAC1B,OAAIA,EAAW1gB,0BAA4B0gB,EAAWxgB,sBAC3CwgB,EAAWpL,kBAAoBoL,EAAWrL,oBAAsB,EAEpEqL,EAAWxgB,sBAAwBwgB,EAAW1gB,wBAA0B,CACnF,CACA,SAASsd,KACL,IAAMhvC,EAAI3I,SAASC,cAAc,OAEjC,OADA0I,EAAEkgB,UAAY,gBACPlgB,CACX,CAMA,SAAS+uC,GAAa5nC,EAAOhZ,EAAWyG,EAAiBE,GACrD,IAAMqiD,EAAYhwC,EAAM0V,eAGxB,OAFAjoB,EAAkB1H,KAAKyJ,IAAIwgD,EAAWjqD,KAAKuJ,IAAI,EAAG7B,IAClDE,EAAgB5H,KAAKyJ,IAAIwgD,EAAWjqD,KAAKuJ,IAAI,EAAG3B,IACzC3G,EAAU6E,qBAAqByiB,6BAA6B,IAAIxB,GAAAA,EAAMrf,EAAiBuS,EAAMxX,iBAAiBiF,GAAkBE,EAAeqS,EAAM0xB,iBAAiB/jC,IACjL,CACA,SAASyoC,GAA0BxtC,EAASqnD,GACxC,MAAO,CACH5Z,yBAAyB6Z,EAAAA,EAAAA,IAAsBtnD,EAAQytC,wBAAyB4Z,EAAS5Z,yBACzFC,kBAAkB4Z,EAAAA,EAAAA,IAAsBtnD,EAAQ0tC,iBAAkB2Z,EAAS3Z,kBAC3EC,wBAAwB2Z,EAAAA,EAAAA,IAAsBtnD,EAAQ2tC,uBAAwB0Z,EAAS1Z,wBACvFC,oBAAoB2Z,EAAAA,EAAAA,IAAWvnD,EAAQ4tC,mBAAoByZ,EAASzZ,mBAAoB,EAAG,YAC3FC,aAAa0Z,EAAAA,EAAAA,IAAWvnD,EAAQ6tC,YAAawZ,EAASxZ,YAAa,EAAG,YACtEC,sBAAsBwZ,EAAAA,EAAAA,IAAsBtnD,EAAQ8tC,qBAAsBuZ,EAASvZ,sBACnFC,kBAAkBuZ,EAAAA,EAAAA,IAAsBtnD,EAAQ+tC,iBAAkBsZ,EAAStZ,kBAC3EC,kBAAkBsZ,EAAAA,EAAAA,IAAsBtnD,EAAQguC,iBAAkBqZ,EAASrZ,kBAC3EC,cAAcqZ,EAAAA,EAAAA,IAAsBtnD,EAAQiuC,aAAcoZ,EAASpZ,cACnEC,qBAAqBoZ,EAAAA,EAAAA,IAAsBtnD,EAAQkuC,oBAAqBmZ,EAASnZ,qBACjFC,cAjDsBrzC,EAiDakF,EAAQmuC,aAjDdwK,EAiD4B0O,EAASlZ,cAhD/DqZ,EAAAA,EAAAA,IAAwB1sD,EAAO69C,EAAc,CAAC,MAAO,KAAM,aAiD9DrO,eAAekd,EAAAA,EAAAA,IAAwBxnD,EAAQsqC,cAAe+c,EAAS/c,cAAe,CAAC,QAAS,kBAlDxG,IAA8BxvC,EAAO69C,CAoDrC,EAiBA/e,EAAAA,GAAAA,KAA2B,SAACC,EAAOC,GAC/B,IAAM2tB,EAAwB5tB,EAAMG,SAAS0tB,GAAAA,KAC7C5tB,EAAUI,QAAQ,qGAAD78B,OAIhBoqD,EAAqB,kDAAApqD,OAErBoqD,EAAqB,UAAApqD,OAASoqD,EAAqB,0FAMxD,G,kNCzjEIjyC,EAA0C,SAAUC,EAAY1F,EAAQlV,EAAKuY,GAC7E,IAA2HsC,EAAvHC,EAAIC,UAAUpY,OAAQyS,EAAI0F,EAAI,EAAI5F,EAAkB,OAATqD,EAAgBA,EAAOtB,OAAO+D,yBAAyB9F,EAAQlV,GAAOuY,EACrH,GAAuB,kBAAZ0C,SAAoD,oBAArBA,QAAQC,SAAyB9F,EAAI6F,QAAQC,SAASN,EAAY1F,EAAQlV,EAAKuY,QACpH,IAAK,IAAI3V,EAAIgY,EAAWjY,OAAS,EAAGC,GAAK,EAAGA,KAASiY,EAAID,EAAWhY,MAAIwS,GAAK0F,EAAI,EAAID,EAAEzF,GAAK0F,EAAI,EAAID,EAAE3F,EAAQlV,EAAKoV,GAAKyF,EAAE3F,EAAQlV,KAASoV,GAChJ,OAAO0F,EAAI,GAAK1F,GAAK6B,OAAOkE,eAAejG,EAAQlV,EAAKoV,GAAIA,CAChE,EACIgG,EAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUpG,EAAQlV,GAAOsb,EAAUpG,EAAQlV,EAAKqb,EAAa,CACxE,EASMyxC,EAAiB,CACnBC,cAAc,EACdC,mBAAmB,EACnBC,mBAAmB,EACnBC,gBAAgB,GAKhBC,EAAa,SAAA91C,IAAAlY,EAAAA,EAAAA,GAAAguD,EAAA91C,GAAA,IAAAjY,GAAAC,EAAAA,EAAAA,GAAA8tD,GACb,SAAAA,EAAYr1C,GAAmF,IAAArY,EAA3E0F,EAAO4V,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGkmB,EAAgBlmB,UAAApY,OAAA,EAAAoY,UAAA,QAAAlb,EAAEujB,EAAkBrI,UAAApY,OAAA,EAAAoY,UAAA,QAAAlb,EAAEutD,EAAqBryC,UAAApY,OAAA,EAAAoY,UAAA,QAAAlb,EA+B5E,OA/B4EH,EAAAA,EAAAA,GAAA,KAAAytD,IACzF1tD,EAAAL,EAAAO,KAAA,OACKshC,iBAAmBA,EACxBxhC,EAAK2jB,mBAAqBA,EAC1B3jB,EAAK2tD,sBAAwBA,EAC7B3tD,EAAK4tD,aAAe5tD,EAAKgY,UAAU,IAAImG,EAAAA,IACvCne,EAAK6X,QAAUQ,EACfrY,EAAKqd,SAAWwwC,EAAAA,GAAcnoD,EAAS2nD,GAAgB,GACvDrtD,EAAK8tD,UAAW,EAChB9tD,EAAK+tD,SAAW,EAChB/tD,EAAK0C,OAAS,GACd1C,EAAKguD,uBAAwB,EAC7BhuD,EAAKiuD,YAAc50B,QAAQr5B,EAAKqd,SAASmwC,mBAEzCxtD,EAAKgY,UAAUhY,EAAK6X,QAAQuG,cAAa,kBAAMpe,EAAKwS,SAAS,KAC7DxS,EAAKgY,UAAUhY,EAAK6X,QAAQ2qB,iBAAgB,kBAAMxiC,EAAKkuD,gBAAgB,KACnEluD,EAAKqd,SAASiwC,cACdttD,EAAKgY,UAAUhY,EAAK6X,QAAQ+qB,oBAAoBrjB,2BAA0B,SAAC1W,GACnE7I,EAAKguD,wBAGThuD,EAAKmuD,0BAA0BtlD,EAAEhI,SAASsB,YAC1CnC,EAAK+tD,SAAW,EACpB,KAEA/tD,EAAKqd,SAASmwC,mBACdxtD,EAAKgY,UAAUhY,EAAK6X,QAAQ+qB,oBAAoBvjB,kBAAiB,SAACxW,GAC9D7I,EAAKiuD,aAAc,CACvB,KAGJjuD,EAAKouD,QAAQpuD,CACjB,CAiKC,OAjKAM,EAAAA,EAAAA,GAAAotD,EAAA,EAAAntD,IAAA,QAAAC,MACD,WACoBG,KAAKkX,QAAQktB,gBAIjC,GAAC,CAAAxkC,IAAA,iBAAAC,MACD,WACIG,KAAKytD,QACLztD,KAAK+hC,SAAS/hC,KAAKkX,QAAQktB,kBACvBpkC,KAAKstD,aAEiC,OAAlCttD,KAAKkX,QAAQktB,mBACbpkC,KAAKstD,aAAc,EACnBttD,KAAKotD,SAAW,EAChBptD,KAAK6b,KAAK,GAGtB,GAAC,CAAAjc,IAAA,WAAAC,MACD,SAASskC,GAAa,IAAAvwB,EAAA,KAElB5T,KAAK+B,OAAS,GACVoiC,GAEAA,EAAYupB,SAAQ,SAAClnB,IACZ5yB,EAAK8I,SAASkwC,mBAAqBpmB,EAAWsV,YAC/CtV,EAAWsV,YAAY4R,SAAQ,SAACtG,GAC5BxzC,EAAK7R,OAAOiQ,KAAK,CACb27C,KAAK,EACL7tD,MAAO,IAAImpB,EAAAA,EAAMm+B,EAAWtgB,wBAAyBsgB,EAAWnL,oBAAqBmL,EAAWpgB,sBAAuBogB,EAAWlL,oBAE1I,IAGyC,IAArC1V,EAAWQ,sBAEXpzB,EAAK7R,OAAOiQ,KAAK,CACb27C,KAAK,EACL7tD,MAAO,IAAImpB,EAAAA,EAAMud,EAAWM,wBAAyB,EAAGN,EAAWM,wBAA0B,EAAG,KAKpGlzB,EAAK7R,OAAOiQ,KAAK,CACb27C,KAAK,EACL7tD,MAAO,IAAImpB,EAAAA,EAAMud,EAAWM,wBAAyB,EAAGN,EAAWQ,sBAAwB,EAAG,IAI9G,IAGJhnC,KAAK+B,OAAO0+C,MAAK,SAACv/C,EAAM2rC,GAAK,OAAK5jB,EAAAA,EAAM2kC,yBAAyB1sD,EAAKpB,MAAO+sC,EAAM/sC,MAAM,IACzFE,KAAKitD,aAAarqC,KAAK5iB,KAC3B,GAAC,CAAAJ,IAAA,WAAAC,MACD,SAASguD,GACL,IAAIC,GAAQ,EACN5tD,EAAWF,KAAKkX,QAAQwS,cAC9B,GAAKxpB,EAAL,CAIA,IAAK,IAAIsC,EAAI,EAAGC,EAAMzC,KAAK+B,OAAOQ,OAAQC,EAAIC,IAAQqrD,EAAOtrD,IAAK,CAC9D,IAAM1C,EAAQE,KAAK+B,OAAOS,GAAG1C,MACzBI,EAAS6tD,gBAAgBjuD,EAAMiuB,sBAC/B/tB,KAAKotD,QAAU5qD,GAAKqrD,EAAM,GAAK,GAC/BC,GAAQ,EAEhB,CACKA,IAED9tD,KAAKotD,QAAUS,EAAM,EAAI7tD,KAAK+B,OAAOQ,OAAS,GAE9CvC,KAAKotD,QAAU,IACfptD,KAAKotD,QAAUptD,KAAK+B,OAAOQ,OAAS,EAbxC,MAFIvC,KAAKotD,QAAU,CAiBvB,GAAC,CAAAxtD,IAAA,QAAAC,MACD,SAAMguD,EAAKzjC,GAEP,GADAgsB,EAAAA,IAAWp2C,KAAKmtD,SAAU,oDACrBntD,KAAKguD,cAAV,EAGsB,IAAlBhuD,KAAKotD,QACLptD,KAAKiuD,SAASJ,GAETA,GACL7tD,KAAKotD,SAAW,EACZptD,KAAKotD,SAAWptD,KAAK+B,OAAOQ,SAC5BvC,KAAKotD,QAAU,KAInBptD,KAAKotD,SAAW,EACZptD,KAAKotD,QAAU,IACfptD,KAAKotD,QAAUptD,KAAK+B,OAAOQ,OAAS,IAG5C,IAAM2rD,EAAOluD,KAAK+B,OAAO/B,KAAKotD,SAC9BptD,KAAKqtD,uBAAwB,EAC7B,IACI,IAAM5oB,EAAMypB,EAAKpuD,MAAMiuB,mBACvB/tB,KAAKkX,QAAQ1K,YAAYi4B,GACzBzkC,KAAKkX,QAAQ2iC,oBAAoBqU,EAAKpuD,MAAOsqB,GAC7CpqB,KAAKwtD,0BAA0B/oB,EAAIjjC,YAAY,EACnD,CAAC,QAEGxB,KAAKqtD,uBAAwB,CACjC,CA1BA,CA2BJ,GAAC,CAAAztD,IAAA,4BAAAC,MACD,SAA0B2B,EAAY2sD,GAClC,IAAIrlD,EACEqsC,EAAoD,QAAlCrsC,EAAK9I,KAAKkX,QAAQuhB,kBAA+B,IAAP3vB,OAAgB,EAASA,EAAG2mC,SAC9F,GAAK0F,EAAL,CAGA,IAAMiZ,EAAqBjZ,EAAenmB,mBAAmBxtB,GAAY81C,MAAK,SAAA+W,GAAC,MAA4B,gBAAxBA,EAAEtpD,QAAQmwB,SAA2B,IACxH,GAAIk5B,EACApuD,KAAK6gC,iBAAiBgD,aAAaC,EAAAA,GAASwqB,kBAAkB,OAE7D,KAAIH,EAML,OAHAnuD,KAAK6gC,iBAAiBgD,aAAaC,EAAAA,GAASE,iBAAiB,EAIjE,CACA,IAAMuqB,EAAavuD,KAAKgjB,mBAAmBgpB,sBACvCmiB,GAAgBI,GAAcH,GAAsBpuD,KAAKgtD,sBAAsBwB,4BAC/ED,EAAWzrB,aAAa,CAAEl5B,gBAAiBpI,EAAY8pB,YAAa,EAAGxhB,cAAetI,EAAY+pB,UAAWkjC,OAAOC,YACpHH,EAAW/nC,yBAAyB,mBAhBxC,CAkBJ,GAAC,CAAA5mB,IAAA,cAAAC,MACD,WACI,OAAOG,KAAK+B,QAAU/B,KAAK+B,OAAOQ,OAAS,CAC/C,GAAC,CAAA3C,IAAA,OAAAC,MACD,WAA6C,IAAxCuqB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EACT3a,KAAK2uD,mBAGV3uD,KAAK4uD,OAAM,EAAMxkC,EACrB,GAAC,CAAAxqB,IAAA,WAAAC,MACD,WAAiD,IAAxCuqB,EAAUzP,UAAApY,OAAA,QAAA9C,IAAAkb,UAAA,GAAAA,UAAA,GAAG,EACb3a,KAAK6uD,uBAGV7uD,KAAK4uD,OAAM,EAAOxkC,EACtB,GAAC,CAAAxqB,IAAA,kBAAAC,MACD,WACI,OAAOG,KAAK8uD,mBAAqB9uD,KAAKotD,QAAUptD,KAAK+B,OAAOQ,OAAS,CACzE,GAAC,CAAA3C,IAAA,sBAAAC,MACD,WACI,OAAOG,KAAK8uD,mBAAsC,IAAjB9uD,KAAKotD,OAC1C,GAAC,CAAAxtD,IAAA,kBAAAC,MACD,WACI,OAAO64B,QAAQ14B,KAAK0c,SAASowC,eACjC,GAAC,CAAAltD,IAAA,UAAAC,MACD,YACI0N,EAAAA,EAAAA,IAAAmE,EAAAA,EAAAA,GAAAq7C,EAAAp7C,WAAA,gBAAApS,KAAA,MACAS,KAAK+B,OAAS,GACd/B,KAAKmtD,UAAW,CACpB,KAACJ,CAAA,CAlMY,CAA+BzyC,EAAAA,IAoMhDyyC,EAAgBxyC,EAAW,CACvBS,EAAQ,EAAG+vB,EAAAA,IACX/vB,EAAQ,EAAGoa,EAAAA,GACXpa,EAAQ,EAAGwa,EAAAA,IACZu3B,E,iQClOCxyC,EAA0C,SAAUC,EAAY1F,EAAQlV,EAAKuY,GAC7E,IAA2HsC,EAAvHC,EAAIC,UAAUpY,OAAQyS,EAAI0F,EAAI,EAAI5F,EAAkB,OAATqD,EAAgBA,EAAOtB,OAAO+D,yBAAyB9F,EAAQlV,GAAOuY,EACrH,GAAuB,kBAAZ0C,SAAoD,oBAArBA,QAAQC,SAAyB9F,EAAI6F,QAAQC,SAASN,EAAY1F,EAAQlV,EAAKuY,QACpH,IAAK,IAAI3V,EAAIgY,EAAWjY,OAAS,EAAGC,GAAK,EAAGA,KAASiY,EAAID,EAAWhY,MAAIwS,GAAK0F,EAAI,EAAID,EAAEzF,GAAK0F,EAAI,EAAID,EAAE3F,EAAQlV,EAAKoV,GAAKyF,EAAE3F,EAAQlV,KAASoV,GAChJ,OAAO0F,EAAI,GAAK1F,GAAK6B,OAAOkE,eAAejG,EAAQlV,EAAKoV,GAAIA,CAChE,EACIgG,EAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUpG,EAAQlV,GAAOsb,EAAUpG,EAAQlV,EAAKqb,EAAa,CACxE,EAYI8zC,EAAwB,SAAAC,IAAAjwD,EAAAA,EAAAA,GAAAgwD,EAAAC,GAAA,IAAAhwD,GAAAC,EAAAA,EAAAA,GAAA8vD,GACxB,SAAAA,EAAYtyC,EAAY1X,EAASkqD,EAAcr3C,EAAsBgF,EAAmBC,EAAgBC,EAAmBC,EAAcC,EAAqBC,EAAsBC,EAA8BC,GAAyB,IAAA+xC,EAAA7vD,EAMnI,OANmIC,EAAAA,EAAAA,GAAA,KAAAyvD,IACvO1vD,EAAAL,EAAAO,KAAA,KAAMkd,EAAY5F,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGm4C,EAAa5nC,iBAAkB,CAAElF,uBAAwB8sC,EAAaE,8BAAgC,CAAC,EAAGv3C,EAAsBgF,EAAmBC,EAAgBC,EAAmBC,EAAcC,EAAqBC,EAAsBC,EAA8BC,IAC1TiyC,cAAgBH,EACrB5vD,EAAKgwD,kBAAoBtqD,GAEzBwI,EAAAA,EAAAA,IAAA2hD,GAAA99C,EAAAA,EAAAA,GAAA/R,IAAAqS,EAAAA,EAAAA,GAAAq9C,EAAAp9C,YAAA,gBAAAu9C,GAAA3vD,KAAA2vD,EAAoB7vD,EAAKgwD,mBACzBhwD,EAAKgY,UAAU43C,EAAazwC,0BAAyB,SAACtW,GAAC,OAAK7I,EAAKiwD,8BAA8BpnD,EAAE,KAAG7I,CACxG,CAWC,OAXAM,EAAAA,EAAAA,GAAAovD,EAAA,EAAAnvD,IAAA,kBAAAC,MACD,WACI,OAAOG,KAAKovD,aAChB,GAAC,CAAAxvD,IAAA,gCAAAC,MACD,SAA8BqI,IAC1BqF,EAAAA,EAAAA,IAAAmE,EAAAA,EAAAA,GAAAq9C,EAAAp9C,WAAA,sBAAApS,KAAA,KAAoBS,KAAKovD,cAAc/nC,kBACvC9Z,EAAAA,EAAAA,IAAAmE,EAAAA,EAAAA,GAAAq9C,EAAAp9C,WAAA,sBAAApS,KAAA,KAAoBS,KAAKqvD,kBAC7B,GAAC,CAAAzvD,IAAA,gBAAAC,MACD,SAAcsnB,GACV+lC,EAAAA,GAAcltD,KAAKqvD,kBAAmBloC,GAAY,IAClD5Z,EAAAA,EAAAA,IAAAmE,EAAAA,EAAAA,GAAAq9C,EAAAp9C,WAAA,sBAAApS,KAAA,KAAoBS,KAAKqvD,kBAC7B,KAACN,CAAA,CAnBuB,CAA0CvyC,EAAAA,IAqBtEuyC,EAA2Bx0C,EAAW,CAClCS,EAAQ,EAAGma,EAAAA,IACXna,EAAQ,EAAGoa,EAAAA,GACXpa,EAAQ,EAAGqa,EAAAA,GACXra,EAAQ,EAAGuI,EAAAA,IACXvI,EAAQ,EAAGsa,EAAAA,IACXta,EAAQ,EAAGua,EAAAA,IACXva,EAAQ,EAAGwa,EAAAA,GACXxa,EAAQ,GAAIya,EAAAA,IACZza,EAAQ,GAAI0a,EAAAA,IACbq5B,E","sources":["../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/browser/view/renderingContext.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/browser/view/viewController.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/browser/view/viewLayer.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/browser/view/viewOverlays.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/browser/view/viewPart.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/browser/view/viewUserInputEvents.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/browser/widget/codeEditorContributions.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/browser/widget/codeEditorWidget.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/browser/widget/diffReview.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/browser/widget/inlineDiffMargin.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/browser/widget/workerBasedDocumentDiffProvider.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditorWidget.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/browser/widget/diffNavigator.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/browser/widget/embeddedCodeEditorWidget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class RestrictedRenderingContext {\n    constructor(viewLayout, viewportData) {\n        this._restrictedRenderingContextBrand = undefined;\n        this._viewLayout = viewLayout;\n        this.viewportData = viewportData;\n        this.scrollWidth = this._viewLayout.getScrollWidth();\n        this.scrollHeight = this._viewLayout.getScrollHeight();\n        this.visibleRange = this.viewportData.visibleRange;\n        this.bigNumbersDelta = this.viewportData.bigNumbersDelta;\n        const vInfo = this._viewLayout.getCurrentViewport();\n        this.scrollTop = vInfo.top;\n        this.scrollLeft = vInfo.left;\n        this.viewportWidth = vInfo.width;\n        this.viewportHeight = vInfo.height;\n    }\n    getScrolledTopFromAbsoluteTop(absoluteTop) {\n        return absoluteTop - this.scrollTop;\n    }\n    getVerticalOffsetForLineNumber(lineNumber, includeViewZones) {\n        return this._viewLayout.getVerticalOffsetForLineNumber(lineNumber, includeViewZones);\n    }\n    getVerticalOffsetAfterLineNumber(lineNumber, includeViewZones) {\n        return this._viewLayout.getVerticalOffsetAfterLineNumber(lineNumber, includeViewZones);\n    }\n    getDecorationsInViewport() {\n        return this.viewportData.getDecorationsInViewport();\n    }\n}\nexport class RenderingContext extends RestrictedRenderingContext {\n    constructor(viewLayout, viewportData, viewLines) {\n        super(viewLayout, viewportData);\n        this._renderingContextBrand = undefined;\n        this._viewLines = viewLines;\n    }\n    linesVisibleRangesForRange(range, includeNewLines) {\n        return this._viewLines.linesVisibleRangesForRange(range, includeNewLines);\n    }\n    visibleRangeForPosition(position) {\n        return this._viewLines.visibleRangeForPosition(position);\n    }\n}\nexport class LineVisibleRanges {\n    constructor(outsideRenderedLine, lineNumber, ranges) {\n        this.outsideRenderedLine = outsideRenderedLine;\n        this.lineNumber = lineNumber;\n        this.ranges = ranges;\n    }\n}\nexport class HorizontalRange {\n    static from(ranges) {\n        const result = new Array(ranges.length);\n        for (let i = 0, len = ranges.length; i < len; i++) {\n            const range = ranges[i];\n            result[i] = new HorizontalRange(range.left, range.width);\n        }\n        return result;\n    }\n    constructor(left, width) {\n        this._horizontalRangeBrand = undefined;\n        this.left = Math.round(left);\n        this.width = Math.round(width);\n    }\n    toString() {\n        return `[${this.left},${this.width}]`;\n    }\n}\nexport class FloatHorizontalRange {\n    constructor(left, width) {\n        this._floatHorizontalRangeBrand = undefined;\n        this.left = left;\n        this.width = width;\n    }\n    toString() {\n        return `[${this.left},${this.width}]`;\n    }\n    static compare(a, b) {\n        return a.left - b.left;\n    }\n}\nexport class HorizontalPosition {\n    constructor(outsideRenderedLine, left) {\n        this.outsideRenderedLine = outsideRenderedLine;\n        this.originalLeft = left;\n        this.left = Math.round(this.originalLeft);\n    }\n}\nexport class VisibleRanges {\n    constructor(outsideRenderedLine, ranges) {\n        this.outsideRenderedLine = outsideRenderedLine;\n        this.ranges = ranges;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CoreNavigationCommands } from '../coreCommands.js';\nimport { Position } from '../../common/core/position.js';\nimport * as platform from '../../../base/common/platform.js';\nexport class ViewController {\n    constructor(configuration, viewModel, userInputEvents, commandDelegate) {\n        this.configuration = configuration;\n        this.viewModel = viewModel;\n        this.userInputEvents = userInputEvents;\n        this.commandDelegate = commandDelegate;\n    }\n    paste(text, pasteOnNewLine, multicursorText, mode) {\n        this.commandDelegate.paste(text, pasteOnNewLine, multicursorText, mode);\n    }\n    type(text) {\n        this.commandDelegate.type(text);\n    }\n    compositionType(text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) {\n        this.commandDelegate.compositionType(text, replacePrevCharCnt, replaceNextCharCnt, positionDelta);\n    }\n    compositionStart() {\n        this.commandDelegate.startComposition();\n    }\n    compositionEnd() {\n        this.commandDelegate.endComposition();\n    }\n    cut() {\n        this.commandDelegate.cut();\n    }\n    setSelection(modelSelection) {\n        CoreNavigationCommands.SetSelection.runCoreEditorCommand(this.viewModel, {\n            source: 'keyboard',\n            selection: modelSelection\n        });\n    }\n    _validateViewColumn(viewPosition) {\n        const minColumn = this.viewModel.getLineMinColumn(viewPosition.lineNumber);\n        if (viewPosition.column < minColumn) {\n            return new Position(viewPosition.lineNumber, minColumn);\n        }\n        return viewPosition;\n    }\n    _hasMulticursorModifier(data) {\n        switch (this.configuration.options.get(74 /* EditorOption.multiCursorModifier */)) {\n            case 'altKey':\n                return data.altKey;\n            case 'ctrlKey':\n                return data.ctrlKey;\n            case 'metaKey':\n                return data.metaKey;\n            default:\n                return false;\n        }\n    }\n    _hasNonMulticursorModifier(data) {\n        switch (this.configuration.options.get(74 /* EditorOption.multiCursorModifier */)) {\n            case 'altKey':\n                return data.ctrlKey || data.metaKey;\n            case 'ctrlKey':\n                return data.altKey || data.metaKey;\n            case 'metaKey':\n                return data.ctrlKey || data.altKey;\n            default:\n                return false;\n        }\n    }\n    dispatchMouse(data) {\n        const options = this.configuration.options;\n        const selectionClipboardIsOn = (platform.isLinux && options.get(101 /* EditorOption.selectionClipboard */));\n        const columnSelection = options.get(19 /* EditorOption.columnSelection */);\n        if (data.middleButton && !selectionClipboardIsOn) {\n            this._columnSelect(data.position, data.mouseColumn, data.inSelectionMode);\n        }\n        else if (data.startedOnLineNumbers) {\n            // If the dragging started on the gutter, then have operations work on the entire line\n            if (this._hasMulticursorModifier(data)) {\n                if (data.inSelectionMode) {\n                    this._lastCursorLineSelect(data.position, data.revealType);\n                }\n                else {\n                    this._createCursor(data.position, true);\n                }\n            }\n            else {\n                if (data.inSelectionMode) {\n                    this._lineSelectDrag(data.position, data.revealType);\n                }\n                else {\n                    this._lineSelect(data.position, data.revealType);\n                }\n            }\n        }\n        else if (data.mouseDownCount >= 4) {\n            this._selectAll();\n        }\n        else if (data.mouseDownCount === 3) {\n            if (this._hasMulticursorModifier(data)) {\n                if (data.inSelectionMode) {\n                    this._lastCursorLineSelectDrag(data.position, data.revealType);\n                }\n                else {\n                    this._lastCursorLineSelect(data.position, data.revealType);\n                }\n            }\n            else {\n                if (data.inSelectionMode) {\n                    this._lineSelectDrag(data.position, data.revealType);\n                }\n                else {\n                    this._lineSelect(data.position, data.revealType);\n                }\n            }\n        }\n        else if (data.mouseDownCount === 2) {\n            if (!data.onInjectedText) {\n                if (this._hasMulticursorModifier(data)) {\n                    this._lastCursorWordSelect(data.position, data.revealType);\n                }\n                else {\n                    if (data.inSelectionMode) {\n                        this._wordSelectDrag(data.position, data.revealType);\n                    }\n                    else {\n                        this._wordSelect(data.position, data.revealType);\n                    }\n                }\n            }\n        }\n        else {\n            if (this._hasMulticursorModifier(data)) {\n                if (!this._hasNonMulticursorModifier(data)) {\n                    if (data.shiftKey) {\n                        this._columnSelect(data.position, data.mouseColumn, true);\n                    }\n                    else {\n                        // Do multi-cursor operations only when purely alt is pressed\n                        if (data.inSelectionMode) {\n                            this._lastCursorMoveToSelect(data.position, data.revealType);\n                        }\n                        else {\n                            this._createCursor(data.position, false);\n                        }\n                    }\n                }\n            }\n            else {\n                if (data.inSelectionMode) {\n                    if (data.altKey) {\n                        this._columnSelect(data.position, data.mouseColumn, true);\n                    }\n                    else {\n                        if (columnSelection) {\n                            this._columnSelect(data.position, data.mouseColumn, true);\n                        }\n                        else {\n                            this._moveToSelect(data.position, data.revealType);\n                        }\n                    }\n                }\n                else {\n                    this.moveTo(data.position, data.revealType);\n                }\n            }\n        }\n    }\n    _usualArgs(viewPosition, revealType) {\n        viewPosition = this._validateViewColumn(viewPosition);\n        return {\n            source: 'mouse',\n            position: this._convertViewToModelPosition(viewPosition),\n            viewPosition,\n            revealType\n        };\n    }\n    moveTo(viewPosition, revealType) {\n        CoreNavigationCommands.MoveTo.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _moveToSelect(viewPosition, revealType) {\n        CoreNavigationCommands.MoveToSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _columnSelect(viewPosition, mouseColumn, doColumnSelect) {\n        viewPosition = this._validateViewColumn(viewPosition);\n        CoreNavigationCommands.ColumnSelect.runCoreEditorCommand(this.viewModel, {\n            source: 'mouse',\n            position: this._convertViewToModelPosition(viewPosition),\n            viewPosition: viewPosition,\n            mouseColumn: mouseColumn,\n            doColumnSelect: doColumnSelect\n        });\n    }\n    _createCursor(viewPosition, wholeLine) {\n        viewPosition = this._validateViewColumn(viewPosition);\n        CoreNavigationCommands.CreateCursor.runCoreEditorCommand(this.viewModel, {\n            source: 'mouse',\n            position: this._convertViewToModelPosition(viewPosition),\n            viewPosition: viewPosition,\n            wholeLine: wholeLine\n        });\n    }\n    _lastCursorMoveToSelect(viewPosition, revealType) {\n        CoreNavigationCommands.LastCursorMoveToSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _wordSelect(viewPosition, revealType) {\n        CoreNavigationCommands.WordSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _wordSelectDrag(viewPosition, revealType) {\n        CoreNavigationCommands.WordSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lastCursorWordSelect(viewPosition, revealType) {\n        CoreNavigationCommands.LastCursorWordSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lineSelect(viewPosition, revealType) {\n        CoreNavigationCommands.LineSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lineSelectDrag(viewPosition, revealType) {\n        CoreNavigationCommands.LineSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lastCursorLineSelect(viewPosition, revealType) {\n        CoreNavigationCommands.LastCursorLineSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lastCursorLineSelectDrag(viewPosition, revealType) {\n        CoreNavigationCommands.LastCursorLineSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _selectAll() {\n        CoreNavigationCommands.SelectAll.runCoreEditorCommand(this.viewModel, { source: 'mouse' });\n    }\n    // ----------------------\n    _convertViewToModelPosition(viewPosition) {\n        return this.viewModel.coordinatesConverter.convertViewPositionToModelPosition(viewPosition);\n    }\n    emitKeyDown(e) {\n        this.userInputEvents.emitKeyDown(e);\n    }\n    emitKeyUp(e) {\n        this.userInputEvents.emitKeyUp(e);\n    }\n    emitContextMenu(e) {\n        this.userInputEvents.emitContextMenu(e);\n    }\n    emitMouseMove(e) {\n        this.userInputEvents.emitMouseMove(e);\n    }\n    emitMouseLeave(e) {\n        this.userInputEvents.emitMouseLeave(e);\n    }\n    emitMouseUp(e) {\n        this.userInputEvents.emitMouseUp(e);\n    }\n    emitMouseDown(e) {\n        this.userInputEvents.emitMouseDown(e);\n    }\n    emitMouseDrag(e) {\n        this.userInputEvents.emitMouseDrag(e);\n    }\n    emitMouseDrop(e) {\n        this.userInputEvents.emitMouseDrop(e);\n    }\n    emitMouseDropCanceled() {\n        this.userInputEvents.emitMouseDropCanceled();\n    }\n    emitMouseWheel(e) {\n        this.userInputEvents.emitMouseWheel(e);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { StringBuilder } from '../../common/core/stringBuilder.js';\nexport class RenderedLinesCollection {\n    constructor(createLine) {\n        this._createLine = createLine;\n        this._set(1, []);\n    }\n    flush() {\n        this._set(1, []);\n    }\n    _set(rendLineNumberStart, lines) {\n        this._lines = lines;\n        this._rendLineNumberStart = rendLineNumberStart;\n    }\n    _get() {\n        return {\n            rendLineNumberStart: this._rendLineNumberStart,\n            lines: this._lines\n        };\n    }\n    /**\n     * @returns Inclusive line number that is inside this collection\n     */\n    getStartLineNumber() {\n        return this._rendLineNumberStart;\n    }\n    /**\n     * @returns Inclusive line number that is inside this collection\n     */\n    getEndLineNumber() {\n        return this._rendLineNumberStart + this._lines.length - 1;\n    }\n    getCount() {\n        return this._lines.length;\n    }\n    getLine(lineNumber) {\n        const lineIndex = lineNumber - this._rendLineNumberStart;\n        if (lineIndex < 0 || lineIndex >= this._lines.length) {\n            throw new Error('Illegal value for lineNumber');\n        }\n        return this._lines[lineIndex];\n    }\n    /**\n     * @returns Lines that were removed from this collection\n     */\n    onLinesDeleted(deleteFromLineNumber, deleteToLineNumber) {\n        if (this.getCount() === 0) {\n            // no lines\n            return null;\n        }\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        if (deleteToLineNumber < startLineNumber) {\n            // deleting above the viewport\n            const deleteCnt = deleteToLineNumber - deleteFromLineNumber + 1;\n            this._rendLineNumberStart -= deleteCnt;\n            return null;\n        }\n        if (deleteFromLineNumber > endLineNumber) {\n            // deleted below the viewport\n            return null;\n        }\n        // Record what needs to be deleted\n        let deleteStartIndex = 0;\n        let deleteCount = 0;\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - this._rendLineNumberStart;\n            if (deleteFromLineNumber <= lineNumber && lineNumber <= deleteToLineNumber) {\n                // this is a line to be deleted\n                if (deleteCount === 0) {\n                    // this is the first line to be deleted\n                    deleteStartIndex = lineIndex;\n                    deleteCount = 1;\n                }\n                else {\n                    deleteCount++;\n                }\n            }\n        }\n        // Adjust this._rendLineNumberStart for lines deleted above\n        if (deleteFromLineNumber < startLineNumber) {\n            // Something was deleted above\n            let deleteAboveCount = 0;\n            if (deleteToLineNumber < startLineNumber) {\n                // the entire deleted lines are above\n                deleteAboveCount = deleteToLineNumber - deleteFromLineNumber + 1;\n            }\n            else {\n                deleteAboveCount = startLineNumber - deleteFromLineNumber;\n            }\n            this._rendLineNumberStart -= deleteAboveCount;\n        }\n        const deleted = this._lines.splice(deleteStartIndex, deleteCount);\n        return deleted;\n    }\n    onLinesChanged(changeFromLineNumber, changeCount) {\n        const changeToLineNumber = changeFromLineNumber + changeCount - 1;\n        if (this.getCount() === 0) {\n            // no lines\n            return false;\n        }\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        let someoneNotified = false;\n        for (let changedLineNumber = changeFromLineNumber; changedLineNumber <= changeToLineNumber; changedLineNumber++) {\n            if (changedLineNumber >= startLineNumber && changedLineNumber <= endLineNumber) {\n                // Notify the line\n                this._lines[changedLineNumber - this._rendLineNumberStart].onContentChanged();\n                someoneNotified = true;\n            }\n        }\n        return someoneNotified;\n    }\n    onLinesInserted(insertFromLineNumber, insertToLineNumber) {\n        if (this.getCount() === 0) {\n            // no lines\n            return null;\n        }\n        const insertCnt = insertToLineNumber - insertFromLineNumber + 1;\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        if (insertFromLineNumber <= startLineNumber) {\n            // inserting above the viewport\n            this._rendLineNumberStart += insertCnt;\n            return null;\n        }\n        if (insertFromLineNumber > endLineNumber) {\n            // inserting below the viewport\n            return null;\n        }\n        if (insertCnt + insertFromLineNumber > endLineNumber) {\n            // insert inside the viewport in such a way that all remaining lines are pushed outside\n            const deleted = this._lines.splice(insertFromLineNumber - this._rendLineNumberStart, endLineNumber - insertFromLineNumber + 1);\n            return deleted;\n        }\n        // insert inside the viewport, push out some lines, but not all remaining lines\n        const newLines = [];\n        for (let i = 0; i < insertCnt; i++) {\n            newLines[i] = this._createLine();\n        }\n        const insertIndex = insertFromLineNumber - this._rendLineNumberStart;\n        const beforeLines = this._lines.slice(0, insertIndex);\n        const afterLines = this._lines.slice(insertIndex, this._lines.length - insertCnt);\n        const deletedLines = this._lines.slice(this._lines.length - insertCnt, this._lines.length);\n        this._lines = beforeLines.concat(newLines).concat(afterLines);\n        return deletedLines;\n    }\n    onTokensChanged(ranges) {\n        if (this.getCount() === 0) {\n            // no lines\n            return false;\n        }\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        let notifiedSomeone = false;\n        for (let i = 0, len = ranges.length; i < len; i++) {\n            const rng = ranges[i];\n            if (rng.toLineNumber < startLineNumber || rng.fromLineNumber > endLineNumber) {\n                // range outside viewport\n                continue;\n            }\n            const from = Math.max(startLineNumber, rng.fromLineNumber);\n            const to = Math.min(endLineNumber, rng.toLineNumber);\n            for (let lineNumber = from; lineNumber <= to; lineNumber++) {\n                const lineIndex = lineNumber - this._rendLineNumberStart;\n                this._lines[lineIndex].onTokensChanged();\n                notifiedSomeone = true;\n            }\n        }\n        return notifiedSomeone;\n    }\n}\nexport class VisibleLinesCollection {\n    constructor(host) {\n        this._host = host;\n        this.domNode = this._createDomNode();\n        this._linesCollection = new RenderedLinesCollection(() => this._host.createVisibleLine());\n    }\n    _createDomNode() {\n        const domNode = createFastDomNode(document.createElement('div'));\n        domNode.setClassName('view-layer');\n        domNode.setPosition('absolute');\n        domNode.domNode.setAttribute('role', 'presentation');\n        domNode.domNode.setAttribute('aria-hidden', 'true');\n        return domNode;\n    }\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        if (e.hasChanged(138 /* EditorOption.layoutInfo */)) {\n            return true;\n        }\n        return false;\n    }\n    onFlushed(e) {\n        this._linesCollection.flush();\n        // No need to clear the dom node because a full .innerHTML will occur in ViewLayerRenderer._render\n        return true;\n    }\n    onLinesChanged(e) {\n        return this._linesCollection.onLinesChanged(e.fromLineNumber, e.count);\n    }\n    onLinesDeleted(e) {\n        const deleted = this._linesCollection.onLinesDeleted(e.fromLineNumber, e.toLineNumber);\n        if (deleted) {\n            // Remove from DOM\n            for (let i = 0, len = deleted.length; i < len; i++) {\n                const lineDomNode = deleted[i].getDomNode();\n                if (lineDomNode) {\n                    this.domNode.domNode.removeChild(lineDomNode);\n                }\n            }\n        }\n        return true;\n    }\n    onLinesInserted(e) {\n        const deleted = this._linesCollection.onLinesInserted(e.fromLineNumber, e.toLineNumber);\n        if (deleted) {\n            // Remove from DOM\n            for (let i = 0, len = deleted.length; i < len; i++) {\n                const lineDomNode = deleted[i].getDomNode();\n                if (lineDomNode) {\n                    this.domNode.domNode.removeChild(lineDomNode);\n                }\n            }\n        }\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onTokensChanged(e) {\n        return this._linesCollection.onTokensChanged(e.ranges);\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // ---- end view event handlers\n    getStartLineNumber() {\n        return this._linesCollection.getStartLineNumber();\n    }\n    getEndLineNumber() {\n        return this._linesCollection.getEndLineNumber();\n    }\n    getVisibleLine(lineNumber) {\n        return this._linesCollection.getLine(lineNumber);\n    }\n    renderLines(viewportData) {\n        const inp = this._linesCollection._get();\n        const renderer = new ViewLayerRenderer(this.domNode.domNode, this._host, viewportData);\n        const ctx = {\n            rendLineNumberStart: inp.rendLineNumberStart,\n            lines: inp.lines,\n            linesLength: inp.lines.length\n        };\n        // Decide if this render will do a single update (single large .innerHTML) or many updates (inserting/removing dom nodes)\n        const resCtx = renderer.render(ctx, viewportData.startLineNumber, viewportData.endLineNumber, viewportData.relativeVerticalOffset);\n        this._linesCollection._set(resCtx.rendLineNumberStart, resCtx.lines);\n    }\n}\nclass ViewLayerRenderer {\n    constructor(domNode, host, viewportData) {\n        this.domNode = domNode;\n        this.host = host;\n        this.viewportData = viewportData;\n    }\n    render(inContext, startLineNumber, stopLineNumber, deltaTop) {\n        const ctx = {\n            rendLineNumberStart: inContext.rendLineNumberStart,\n            lines: inContext.lines.slice(0),\n            linesLength: inContext.linesLength\n        };\n        if ((ctx.rendLineNumberStart + ctx.linesLength - 1 < startLineNumber) || (stopLineNumber < ctx.rendLineNumberStart)) {\n            // There is no overlap whatsoever\n            ctx.rendLineNumberStart = startLineNumber;\n            ctx.linesLength = stopLineNumber - startLineNumber + 1;\n            ctx.lines = [];\n            for (let x = startLineNumber; x <= stopLineNumber; x++) {\n                ctx.lines[x - startLineNumber] = this.host.createVisibleLine();\n            }\n            this._finishRendering(ctx, true, deltaTop);\n            return ctx;\n        }\n        // Update lines which will remain untouched\n        this._renderUntouchedLines(ctx, Math.max(startLineNumber - ctx.rendLineNumberStart, 0), Math.min(stopLineNumber - ctx.rendLineNumberStart, ctx.linesLength - 1), deltaTop, startLineNumber);\n        if (ctx.rendLineNumberStart > startLineNumber) {\n            // Insert lines before\n            const fromLineNumber = startLineNumber;\n            const toLineNumber = Math.min(stopLineNumber, ctx.rendLineNumberStart - 1);\n            if (fromLineNumber <= toLineNumber) {\n                this._insertLinesBefore(ctx, fromLineNumber, toLineNumber, deltaTop, startLineNumber);\n                ctx.linesLength += toLineNumber - fromLineNumber + 1;\n            }\n        }\n        else if (ctx.rendLineNumberStart < startLineNumber) {\n            // Remove lines before\n            const removeCnt = Math.min(ctx.linesLength, startLineNumber - ctx.rendLineNumberStart);\n            if (removeCnt > 0) {\n                this._removeLinesBefore(ctx, removeCnt);\n                ctx.linesLength -= removeCnt;\n            }\n        }\n        ctx.rendLineNumberStart = startLineNumber;\n        if (ctx.rendLineNumberStart + ctx.linesLength - 1 < stopLineNumber) {\n            // Insert lines after\n            const fromLineNumber = ctx.rendLineNumberStart + ctx.linesLength;\n            const toLineNumber = stopLineNumber;\n            if (fromLineNumber <= toLineNumber) {\n                this._insertLinesAfter(ctx, fromLineNumber, toLineNumber, deltaTop, startLineNumber);\n                ctx.linesLength += toLineNumber - fromLineNumber + 1;\n            }\n        }\n        else if (ctx.rendLineNumberStart + ctx.linesLength - 1 > stopLineNumber) {\n            // Remove lines after\n            const fromLineNumber = Math.max(0, stopLineNumber - ctx.rendLineNumberStart + 1);\n            const toLineNumber = ctx.linesLength - 1;\n            const removeCnt = toLineNumber - fromLineNumber + 1;\n            if (removeCnt > 0) {\n                this._removeLinesAfter(ctx, removeCnt);\n                ctx.linesLength -= removeCnt;\n            }\n        }\n        this._finishRendering(ctx, false, deltaTop);\n        return ctx;\n    }\n    _renderUntouchedLines(ctx, startIndex, endIndex, deltaTop, deltaLN) {\n        const rendLineNumberStart = ctx.rendLineNumberStart;\n        const lines = ctx.lines;\n        for (let i = startIndex; i <= endIndex; i++) {\n            const lineNumber = rendLineNumberStart + i;\n            lines[i].layoutLine(lineNumber, deltaTop[lineNumber - deltaLN]);\n        }\n    }\n    _insertLinesBefore(ctx, fromLineNumber, toLineNumber, deltaTop, deltaLN) {\n        const newLines = [];\n        let newLinesLen = 0;\n        for (let lineNumber = fromLineNumber; lineNumber <= toLineNumber; lineNumber++) {\n            newLines[newLinesLen++] = this.host.createVisibleLine();\n        }\n        ctx.lines = newLines.concat(ctx.lines);\n    }\n    _removeLinesBefore(ctx, removeCount) {\n        for (let i = 0; i < removeCount; i++) {\n            const lineDomNode = ctx.lines[i].getDomNode();\n            if (lineDomNode) {\n                this.domNode.removeChild(lineDomNode);\n            }\n        }\n        ctx.lines.splice(0, removeCount);\n    }\n    _insertLinesAfter(ctx, fromLineNumber, toLineNumber, deltaTop, deltaLN) {\n        const newLines = [];\n        let newLinesLen = 0;\n        for (let lineNumber = fromLineNumber; lineNumber <= toLineNumber; lineNumber++) {\n            newLines[newLinesLen++] = this.host.createVisibleLine();\n        }\n        ctx.lines = ctx.lines.concat(newLines);\n    }\n    _removeLinesAfter(ctx, removeCount) {\n        const removeIndex = ctx.linesLength - removeCount;\n        for (let i = 0; i < removeCount; i++) {\n            const lineDomNode = ctx.lines[removeIndex + i].getDomNode();\n            if (lineDomNode) {\n                this.domNode.removeChild(lineDomNode);\n            }\n        }\n        ctx.lines.splice(removeIndex, removeCount);\n    }\n    _finishRenderingNewLines(ctx, domNodeIsEmpty, newLinesHTML, wasNew) {\n        if (ViewLayerRenderer._ttPolicy) {\n            newLinesHTML = ViewLayerRenderer._ttPolicy.createHTML(newLinesHTML);\n        }\n        const lastChild = this.domNode.lastChild;\n        if (domNodeIsEmpty || !lastChild) {\n            this.domNode.innerHTML = newLinesHTML; // explains the ugly casts -> https://github.com/microsoft/vscode/issues/106396#issuecomment-692625393;\n        }\n        else {\n            lastChild.insertAdjacentHTML('afterend', newLinesHTML);\n        }\n        let currChild = this.domNode.lastChild;\n        for (let i = ctx.linesLength - 1; i >= 0; i--) {\n            const line = ctx.lines[i];\n            if (wasNew[i]) {\n                line.setDomNode(currChild);\n                currChild = currChild.previousSibling;\n            }\n        }\n    }\n    _finishRenderingInvalidLines(ctx, invalidLinesHTML, wasInvalid) {\n        const hugeDomNode = document.createElement('div');\n        if (ViewLayerRenderer._ttPolicy) {\n            invalidLinesHTML = ViewLayerRenderer._ttPolicy.createHTML(invalidLinesHTML);\n        }\n        hugeDomNode.innerHTML = invalidLinesHTML;\n        for (let i = 0; i < ctx.linesLength; i++) {\n            const line = ctx.lines[i];\n            if (wasInvalid[i]) {\n                const source = hugeDomNode.firstChild;\n                const lineDomNode = line.getDomNode();\n                lineDomNode.parentNode.replaceChild(source, lineDomNode);\n                line.setDomNode(source);\n            }\n        }\n    }\n    _finishRendering(ctx, domNodeIsEmpty, deltaTop) {\n        const sb = ViewLayerRenderer._sb;\n        const linesLength = ctx.linesLength;\n        const lines = ctx.lines;\n        const rendLineNumberStart = ctx.rendLineNumberStart;\n        const wasNew = [];\n        {\n            sb.reset();\n            let hadNewLine = false;\n            for (let i = 0; i < linesLength; i++) {\n                const line = lines[i];\n                wasNew[i] = false;\n                const lineDomNode = line.getDomNode();\n                if (lineDomNode) {\n                    // line is not new\n                    continue;\n                }\n                const renderResult = line.renderLine(i + rendLineNumberStart, deltaTop[i], this.viewportData, sb);\n                if (!renderResult) {\n                    // line does not need rendering\n                    continue;\n                }\n                wasNew[i] = true;\n                hadNewLine = true;\n            }\n            if (hadNewLine) {\n                this._finishRenderingNewLines(ctx, domNodeIsEmpty, sb.build(), wasNew);\n            }\n        }\n        {\n            sb.reset();\n            let hadInvalidLine = false;\n            const wasInvalid = [];\n            for (let i = 0; i < linesLength; i++) {\n                const line = lines[i];\n                wasInvalid[i] = false;\n                if (wasNew[i]) {\n                    // line was new\n                    continue;\n                }\n                const renderResult = line.renderLine(i + rendLineNumberStart, deltaTop[i], this.viewportData, sb);\n                if (!renderResult) {\n                    // line does not need rendering\n                    continue;\n                }\n                wasInvalid[i] = true;\n                hadInvalidLine = true;\n            }\n            if (hadInvalidLine) {\n                this._finishRenderingInvalidLines(ctx, sb.build(), wasInvalid);\n            }\n        }\n    }\n}\nViewLayerRenderer._ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('editorViewLayer', { createHTML: value => value });\nViewLayerRenderer._sb = new StringBuilder(100000);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { VisibleLinesCollection } from './viewLayer.js';\nimport { ViewPart } from './viewPart.js';\nexport class ViewOverlays extends ViewPart {\n    constructor(context) {\n        super(context);\n        this._visibleLines = new VisibleLinesCollection(this);\n        this.domNode = this._visibleLines.domNode;\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(47 /* EditorOption.fontInfo */);\n        applyFontInfo(this.domNode, fontInfo);\n        this._dynamicOverlays = [];\n        this._isFocused = false;\n        this.domNode.setClassName('view-overlays');\n    }\n    shouldRender() {\n        if (super.shouldRender()) {\n            return true;\n        }\n        for (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n            const dynamicOverlay = this._dynamicOverlays[i];\n            if (dynamicOverlay.shouldRender()) {\n                return true;\n            }\n        }\n        return false;\n    }\n    dispose() {\n        super.dispose();\n        for (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n            const dynamicOverlay = this._dynamicOverlays[i];\n            dynamicOverlay.dispose();\n        }\n        this._dynamicOverlays = [];\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    // ---- begin IVisibleLinesHost\n    createVisibleLine() {\n        return new ViewOverlayLine(this._context.configuration, this._dynamicOverlays);\n    }\n    // ---- end IVisibleLinesHost\n    addDynamicOverlay(overlay) {\n        this._dynamicOverlays.push(overlay);\n    }\n    // ----- event handlers\n    onConfigurationChanged(e) {\n        this._visibleLines.onConfigurationChanged(e);\n        const startLineNumber = this._visibleLines.getStartLineNumber();\n        const endLineNumber = this._visibleLines.getEndLineNumber();\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const line = this._visibleLines.getVisibleLine(lineNumber);\n            line.onConfigurationChanged(e);\n        }\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(47 /* EditorOption.fontInfo */);\n        applyFontInfo(this.domNode, fontInfo);\n        return true;\n    }\n    onFlushed(e) {\n        return this._visibleLines.onFlushed(e);\n    }\n    onFocusChanged(e) {\n        this._isFocused = e.isFocused;\n        return true;\n    }\n    onLinesChanged(e) {\n        return this._visibleLines.onLinesChanged(e);\n    }\n    onLinesDeleted(e) {\n        return this._visibleLines.onLinesDeleted(e);\n    }\n    onLinesInserted(e) {\n        return this._visibleLines.onLinesInserted(e);\n    }\n    onScrollChanged(e) {\n        return this._visibleLines.onScrollChanged(e) || true;\n    }\n    onTokensChanged(e) {\n        return this._visibleLines.onTokensChanged(e);\n    }\n    onZonesChanged(e) {\n        return this._visibleLines.onZonesChanged(e);\n    }\n    // ----- end event handlers\n    prepareRender(ctx) {\n        const toRender = this._dynamicOverlays.filter(overlay => overlay.shouldRender());\n        for (let i = 0, len = toRender.length; i < len; i++) {\n            const dynamicOverlay = toRender[i];\n            dynamicOverlay.prepareRender(ctx);\n            dynamicOverlay.onDidRender();\n        }\n    }\n    render(ctx) {\n        // Overwriting to bypass `shouldRender` flag\n        this._viewOverlaysRender(ctx);\n        this.domNode.toggleClassName('focused', this._isFocused);\n    }\n    _viewOverlaysRender(ctx) {\n        this._visibleLines.renderLines(ctx.viewportData);\n    }\n}\nexport class ViewOverlayLine {\n    constructor(configuration, dynamicOverlays) {\n        this._configuration = configuration;\n        this._lineHeight = this._configuration.options.get(63 /* EditorOption.lineHeight */);\n        this._dynamicOverlays = dynamicOverlays;\n        this._domNode = null;\n        this._renderedContent = null;\n    }\n    getDomNode() {\n        if (!this._domNode) {\n            return null;\n        }\n        return this._domNode.domNode;\n    }\n    setDomNode(domNode) {\n        this._domNode = createFastDomNode(domNode);\n    }\n    onContentChanged() {\n        // Nothing\n    }\n    onTokensChanged() {\n        // Nothing\n    }\n    onConfigurationChanged(e) {\n        this._lineHeight = this._configuration.options.get(63 /* EditorOption.lineHeight */);\n    }\n    renderLine(lineNumber, deltaTop, viewportData, sb) {\n        let result = '';\n        for (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n            const dynamicOverlay = this._dynamicOverlays[i];\n            result += dynamicOverlay.render(viewportData.startLineNumber, lineNumber);\n        }\n        if (this._renderedContent === result) {\n            // No rendering needed\n            return false;\n        }\n        this._renderedContent = result;\n        sb.appendString('<div style=\"position:absolute;top:');\n        sb.appendString(String(deltaTop));\n        sb.appendString('px;width:100%;height:');\n        sb.appendString(String(this._lineHeight));\n        sb.appendString('px;\">');\n        sb.appendString(result);\n        sb.appendString('</div>');\n        return true;\n    }\n    layoutLine(lineNumber, deltaTop) {\n        if (this._domNode) {\n            this._domNode.setTop(deltaTop);\n            this._domNode.setHeight(this._lineHeight);\n        }\n    }\n}\nexport class ContentViewOverlays extends ViewOverlays {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(138 /* EditorOption.layoutInfo */);\n        this._contentWidth = layoutInfo.contentWidth;\n        this.domNode.setHeight(0);\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(138 /* EditorOption.layoutInfo */);\n        this._contentWidth = layoutInfo.contentWidth;\n        return super.onConfigurationChanged(e) || true;\n    }\n    onScrollChanged(e) {\n        return super.onScrollChanged(e) || e.scrollWidthChanged;\n    }\n    // --- end event handlers\n    _viewOverlaysRender(ctx) {\n        super._viewOverlaysRender(ctx);\n        this.domNode.setWidth(Math.max(ctx.scrollWidth, this._contentWidth));\n    }\n}\nexport class MarginViewOverlays extends ViewOverlays {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(138 /* EditorOption.layoutInfo */);\n        this._contentLeft = layoutInfo.contentLeft;\n        this.domNode.setClassName('margin-view-overlays');\n        this.domNode.setWidth(1);\n        applyFontInfo(this.domNode, options.get(47 /* EditorOption.fontInfo */));\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        applyFontInfo(this.domNode, options.get(47 /* EditorOption.fontInfo */));\n        const layoutInfo = options.get(138 /* EditorOption.layoutInfo */);\n        this._contentLeft = layoutInfo.contentLeft;\n        return super.onConfigurationChanged(e) || true;\n    }\n    onScrollChanged(e) {\n        return super.onScrollChanged(e) || e.scrollHeightChanged;\n    }\n    _viewOverlaysRender(ctx) {\n        super._viewOverlaysRender(ctx);\n        const height = Math.min(ctx.scrollHeight, 1000000);\n        this.domNode.setHeight(height);\n        this.domNode.setWidth(this._contentLeft);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ViewEventHandler } from '../../common/viewEventHandler.js';\nexport class ViewPart extends ViewEventHandler {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        super.dispose();\n    }\n}\nexport class PartFingerprints {\n    static write(target, partId) {\n        target.setAttribute('data-mprt', String(partId));\n    }\n    static read(target) {\n        const r = target.getAttribute('data-mprt');\n        if (r === null) {\n            return 0 /* PartFingerprint.None */;\n        }\n        return parseInt(r, 10);\n    }\n    static collect(child, stopAt) {\n        const result = [];\n        let resultLen = 0;\n        while (child && child !== document.body) {\n            if (child === stopAt) {\n                break;\n            }\n            if (child.nodeType === child.ELEMENT_NODE) {\n                result[resultLen++] = this.read(child);\n            }\n            child = child.parentElement;\n        }\n        const r = new Uint8Array(resultLen);\n        for (let i = 0; i < resultLen; i++) {\n            r[i] = result[resultLen - i - 1];\n        }\n        return r;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class ViewUserInputEvents {\n    constructor(coordinatesConverter) {\n        this.onKeyDown = null;\n        this.onKeyUp = null;\n        this.onContextMenu = null;\n        this.onMouseMove = null;\n        this.onMouseLeave = null;\n        this.onMouseDown = null;\n        this.onMouseUp = null;\n        this.onMouseDrag = null;\n        this.onMouseDrop = null;\n        this.onMouseDropCanceled = null;\n        this.onMouseWheel = null;\n        this._coordinatesConverter = coordinatesConverter;\n    }\n    emitKeyDown(e) {\n        var _a;\n        (_a = this.onKeyDown) === null || _a === void 0 ? void 0 : _a.call(this, e);\n    }\n    emitKeyUp(e) {\n        var _a;\n        (_a = this.onKeyUp) === null || _a === void 0 ? void 0 : _a.call(this, e);\n    }\n    emitContextMenu(e) {\n        var _a;\n        (_a = this.onContextMenu) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseMove(e) {\n        var _a;\n        (_a = this.onMouseMove) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseLeave(e) {\n        var _a;\n        (_a = this.onMouseLeave) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseDown(e) {\n        var _a;\n        (_a = this.onMouseDown) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseUp(e) {\n        var _a;\n        (_a = this.onMouseUp) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseDrag(e) {\n        var _a;\n        (_a = this.onMouseDrag) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseDrop(e) {\n        var _a;\n        (_a = this.onMouseDrop) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseDropCanceled() {\n        var _a;\n        (_a = this.onMouseDropCanceled) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n    emitMouseWheel(e) {\n        var _a;\n        (_a = this.onMouseWheel) === null || _a === void 0 ? void 0 : _a.call(this, e);\n    }\n    _convertViewToModelMouseEvent(e) {\n        if (e.target) {\n            return {\n                event: e.event,\n                target: this._convertViewToModelMouseTarget(e.target)\n            };\n        }\n        return e;\n    }\n    _convertViewToModelMouseTarget(target) {\n        return ViewUserInputEvents.convertViewToModelMouseTarget(target, this._coordinatesConverter);\n    }\n    static convertViewToModelMouseTarget(target, coordinatesConverter) {\n        const result = Object.assign({}, target);\n        if (result.position) {\n            result.position = coordinatesConverter.convertViewPositionToModelPosition(result.position);\n        }\n        if (result.range) {\n            result.range = coordinatesConverter.convertViewRangeToModelRange(result.range);\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { runWhenIdle } from '../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Disposable, DisposableMap } from '../../../base/common/lifecycle.js';\nexport class CodeEditorContributions extends Disposable {\n    constructor() {\n        super();\n        this._editor = null;\n        this._instantiationService = null;\n        /**\n         * Contains all instantiated contributions.\n         */\n        this._instances = this._register(new DisposableMap());\n        /**\n         * Contains contributions which are not yet instantiated.\n         */\n        this._pending = new Map();\n        /**\n         * Tracks which instantiation kinds are still left in `_pending`.\n         */\n        this._finishedInstantiation = [];\n        this._finishedInstantiation[0 /* EditorContributionInstantiation.Eager */] = false;\n        this._finishedInstantiation[1 /* EditorContributionInstantiation.AfterFirstRender */] = false;\n        this._finishedInstantiation[2 /* EditorContributionInstantiation.BeforeFirstInteraction */] = false;\n        this._finishedInstantiation[3 /* EditorContributionInstantiation.Eventually */] = false;\n    }\n    initialize(editor, contributions, instantiationService) {\n        this._editor = editor;\n        this._instantiationService = instantiationService;\n        for (const desc of contributions) {\n            if (this._pending.has(desc.id)) {\n                onUnexpectedError(new Error(`Cannot have two contributions with the same id ${desc.id}`));\n                continue;\n            }\n            this._pending.set(desc.id, desc);\n        }\n        this._instantiateSome(0 /* EditorContributionInstantiation.Eager */);\n        // AfterFirstRender\n        // - these extensions will be instantiated at the latest 50ms after the first render.\n        // - but if there is idle time, we will instantiate them sooner.\n        this._register(runWhenIdle(() => {\n            this._instantiateSome(1 /* EditorContributionInstantiation.AfterFirstRender */);\n        }));\n        // BeforeFirstInteraction\n        // - these extensions will be instantiated at the latest before a mouse or a keyboard event.\n        // - but if there is idle time, we will instantiate them sooner.\n        this._register(runWhenIdle(() => {\n            this._instantiateSome(2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\n        }));\n        // Eventually\n        // - these extensions will only be instantiated when there is idle time.\n        // - since there is no guarantee that there will ever be idle time, we set a timeout of 5s here.\n        this._register(runWhenIdle(() => {\n            this._instantiateSome(3 /* EditorContributionInstantiation.Eventually */);\n        }, 5000));\n    }\n    saveViewState() {\n        const contributionsState = {};\n        for (const [id, contribution] of this._instances) {\n            if (typeof contribution.saveViewState === 'function') {\n                contributionsState[id] = contribution.saveViewState();\n            }\n        }\n        return contributionsState;\n    }\n    restoreViewState(contributionsState) {\n        for (const [id, contribution] of this._instances) {\n            if (typeof contribution.restoreViewState === 'function') {\n                contribution.restoreViewState(contributionsState[id]);\n            }\n        }\n    }\n    get(id) {\n        this._instantiateById(id);\n        return this._instances.get(id) || null;\n    }\n    onBeforeInteractionEvent() {\n        // this method is called very often by the editor!\n        this._instantiateSome(2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\n    }\n    onAfterModelAttached() {\n        this._register(runWhenIdle(() => {\n            this._instantiateSome(1 /* EditorContributionInstantiation.AfterFirstRender */);\n        }, 50));\n    }\n    _instantiateSome(instantiation) {\n        if (this._finishedInstantiation[instantiation]) {\n            // already done with this instantiation!\n            return;\n        }\n        this._finishedInstantiation[instantiation] = true;\n        const contribs = this._findPendingContributionsByInstantiation(instantiation);\n        for (const contrib of contribs) {\n            this._instantiateById(contrib.id);\n        }\n    }\n    _findPendingContributionsByInstantiation(instantiation) {\n        const result = [];\n        for (const [, desc] of this._pending) {\n            if (desc.instantiation === instantiation) {\n                result.push(desc);\n            }\n        }\n        return result;\n    }\n    _instantiateById(id) {\n        const desc = this._pending.get(id);\n        if (!desc) {\n            return;\n        }\n        this._pending.delete(id);\n        if (!this._instantiationService || !this._editor) {\n            throw new Error(`Cannot instantiate contributions before being initialized!`);\n        }\n        try {\n            const instance = this._instantiationService.createInstance(desc.ctor, this._editor);\n            this._instances.set(desc.id, instance);\n            if (typeof instance.restoreViewState === 'function' && desc.instantiation !== 0 /* EditorContributionInstantiation.Eager */) {\n                console.warn(`Editor contribution '${desc.id}' should be eager instantiated because it uses saveViewState / restoreViewState.`);\n            }\n        }\n        catch (err) {\n            onUnexpectedError(err);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport '../services/markerDecorations.js';\nimport './media/editor.css';\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Emitter, EventDeliveryQueue } from '../../../base/common/event.js';\nimport { Disposable, dispose } from '../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { EditorConfiguration } from '../config/editorConfiguration.js';\nimport { EditorExtensionsRegistry } from '../editorExtensions.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { View } from '../view.js';\nimport { ViewUserInputEvents } from '../view/viewUserInputEvents.js';\nimport { filterValidationDecorations } from '../../common/config/editorOptions.js';\nimport { CursorColumns } from '../../common/core/cursorColumns.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { InternalEditorAction } from '../../common/editorAction.js';\nimport * as editorCommon from '../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\nimport { editorUnnecessaryCodeOpacity } from '../../common/core/editorColorRegistry.js';\nimport { editorErrorForeground, editorHintForeground, editorInfoForeground, editorWarningForeground } from '../../../platform/theme/common/colorRegistry.js';\nimport { ViewModel } from '../../common/viewModel/viewModelImpl.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { INotificationService, Severity } from '../../../platform/notification/common/notification.js';\nimport { IThemeService, registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { withNullAsUndefined } from '../../../base/common/types.js';\nimport { MonospaceLineBreaksComputerFactory } from '../../common/viewModel/monospaceLineBreaksComputer.js';\nimport { DOMLineBreaksComputerFactory } from '../view/domLineBreaksComputer.js';\nimport { WordOperations } from '../../common/cursor/cursorWordOperations.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\nimport { CodeEditorContributions } from './codeEditorContributions.js';\nimport { TabFocus } from '../config/tabFocus.js';\nlet EDITOR_ID = 0;\nclass ModelData {\n    constructor(model, viewModel, view, hasRealView, listenersToRemove) {\n        this.model = model;\n        this.viewModel = viewModel;\n        this.view = view;\n        this.hasRealView = hasRealView;\n        this.listenersToRemove = listenersToRemove;\n    }\n    dispose() {\n        dispose(this.listenersToRemove);\n        this.model.onBeforeDetached();\n        if (this.hasRealView) {\n            this.view.dispose();\n        }\n        this.viewModel.dispose();\n    }\n}\nlet CodeEditorWidget = class CodeEditorWidget extends Disposable {\n    //#endregion\n    get isSimpleWidget() {\n        return this._configuration.isSimpleWidget;\n    }\n    constructor(domElement, _options, codeEditorWidgetOptions, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService, languageConfigurationService, languageFeaturesService) {\n        super();\n        this.languageConfigurationService = languageConfigurationService;\n        //#region Eventing\n        this._deliveryQueue = new EventDeliveryQueue();\n        this._contributions = this._register(new CodeEditorContributions());\n        this._onDidDispose = this._register(new Emitter());\n        this.onDidDispose = this._onDidDispose.event;\n        this._onDidChangeModelContent = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelContent = this._onDidChangeModelContent.event;\n        this._onDidChangeModelLanguage = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelLanguage = this._onDidChangeModelLanguage.event;\n        this._onDidChangeModelLanguageConfiguration = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelLanguageConfiguration = this._onDidChangeModelLanguageConfiguration.event;\n        this._onDidChangeModelOptions = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelOptions = this._onDidChangeModelOptions.event;\n        this._onDidChangeModelDecorations = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelDecorations = this._onDidChangeModelDecorations.event;\n        this._onDidChangeModelTokens = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelTokens = this._onDidChangeModelTokens.event;\n        this._onDidChangeConfiguration = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeConfiguration = this._onDidChangeConfiguration.event;\n        this._onDidChangeModel = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModel = this._onDidChangeModel.event;\n        this._onDidChangeCursorPosition = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeCursorPosition = this._onDidChangeCursorPosition.event;\n        this._onDidChangeCursorSelection = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeCursorSelection = this._onDidChangeCursorSelection.event;\n        this._onDidAttemptReadOnlyEdit = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidAttemptReadOnlyEdit = this._onDidAttemptReadOnlyEdit.event;\n        this._onDidLayoutChange = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._editorTextFocus = this._register(new BooleanEventEmitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidFocusEditorText = this._editorTextFocus.onDidChangeToTrue;\n        this.onDidBlurEditorText = this._editorTextFocus.onDidChangeToFalse;\n        this._editorWidgetFocus = this._register(new BooleanEventEmitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidFocusEditorWidget = this._editorWidgetFocus.onDidChangeToTrue;\n        this.onDidBlurEditorWidget = this._editorWidgetFocus.onDidChangeToFalse;\n        this._onWillType = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onWillType = this._onWillType.event;\n        this._onDidType = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidType = this._onDidType.event;\n        this._onDidCompositionStart = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidCompositionStart = this._onDidCompositionStart.event;\n        this._onDidCompositionEnd = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidCompositionEnd = this._onDidCompositionEnd.event;\n        this._onDidPaste = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidPaste = this._onDidPaste.event;\n        this._onMouseUp = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseUp = this._onMouseUp.event;\n        this._onMouseDown = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseDown = this._onMouseDown.event;\n        this._onMouseDrag = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseDrag = this._onMouseDrag.event;\n        this._onMouseDrop = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseDrop = this._onMouseDrop.event;\n        this._onMouseDropCanceled = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseDropCanceled = this._onMouseDropCanceled.event;\n        this._onDropIntoEditor = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDropIntoEditor = this._onDropIntoEditor.event;\n        this._onContextMenu = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onContextMenu = this._onContextMenu.event;\n        this._onMouseMove = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseMove = this._onMouseMove.event;\n        this._onMouseLeave = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseLeave = this._onMouseLeave.event;\n        this._onMouseWheel = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseWheel = this._onMouseWheel.event;\n        this._onKeyUp = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onKeyUp = this._onKeyUp.event;\n        this._onKeyDown = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onKeyDown = this._onKeyDown.event;\n        this._onDidContentSizeChange = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidContentSizeChange = this._onDidContentSizeChange.event;\n        this._onDidScrollChange = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidScrollChange = this._onDidScrollChange.event;\n        this._onDidChangeViewZones = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeViewZones = this._onDidChangeViewZones.event;\n        this._onDidChangeHiddenAreas = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeHiddenAreas = this._onDidChangeHiddenAreas.event;\n        this._actions = new Map();\n        this._bannerDomNode = null;\n        this._dropIntoEditorDecorations = this.createDecorationsCollection();\n        codeEditorService.willCreateCodeEditor();\n        const options = Object.assign({}, _options);\n        this._domElement = domElement;\n        this._overflowWidgetsDomNode = options.overflowWidgetsDomNode;\n        delete options.overflowWidgetsDomNode;\n        this._id = (++EDITOR_ID);\n        this._decorationTypeKeysToIds = {};\n        this._decorationTypeSubtypes = {};\n        this._telemetryData = codeEditorWidgetOptions.telemetryData;\n        this._configuration = this._register(this._createConfiguration(codeEditorWidgetOptions.isSimpleWidget || false, options, accessibilityService));\n        this._register(this._configuration.onDidChange((e) => {\n            this._onDidChangeConfiguration.fire(e);\n            const options = this._configuration.options;\n            if (e.hasChanged(138 /* EditorOption.layoutInfo */)) {\n                const layoutInfo = options.get(138 /* EditorOption.layoutInfo */);\n                this._onDidLayoutChange.fire(layoutInfo);\n            }\n        }));\n        this._contextKeyService = this._register(contextKeyService.createScoped(this._domElement));\n        this._notificationService = notificationService;\n        this._codeEditorService = codeEditorService;\n        this._commandService = commandService;\n        this._themeService = themeService;\n        this._register(new EditorContextKeysManager(this, this._contextKeyService));\n        this._register(new EditorModeContext(this, this._contextKeyService, languageFeaturesService));\n        this._instantiationService = instantiationService.createChild(new ServiceCollection([IContextKeyService, this._contextKeyService]));\n        this._modelData = null;\n        this._focusTracker = new CodeEditorWidgetFocusTracker(domElement);\n        this._register(this._focusTracker.onChange(() => {\n            this._editorWidgetFocus.setValue(this._focusTracker.hasFocus());\n        }));\n        this._contentWidgets = {};\n        this._overlayWidgets = {};\n        let contributions;\n        if (Array.isArray(codeEditorWidgetOptions.contributions)) {\n            contributions = codeEditorWidgetOptions.contributions;\n        }\n        else {\n            contributions = EditorExtensionsRegistry.getEditorContributions();\n        }\n        this._contributions.initialize(this, contributions, this._instantiationService);\n        for (const action of EditorExtensionsRegistry.getEditorActions()) {\n            if (this._actions.has(action.id)) {\n                onUnexpectedError(new Error(`Cannot have two actions with the same id ${action.id}`));\n                continue;\n            }\n            const internalAction = new InternalEditorAction(action.id, action.label, action.alias, withNullAsUndefined(action.precondition), () => {\n                return this._instantiationService.invokeFunction((accessor) => {\n                    return Promise.resolve(action.runEditorCommand(accessor, this, null));\n                });\n            }, this._contextKeyService);\n            this._actions.set(internalAction.id, internalAction);\n        }\n        const isDropIntoEnabled = () => {\n            return !this._configuration.options.get(86 /* EditorOption.readOnly */)\n                && this._configuration.options.get(33 /* EditorOption.dropIntoEditor */).enabled;\n        };\n        this._register(new dom.DragAndDropObserver(this._domElement, {\n            onDragEnter: () => undefined,\n            onDragOver: e => {\n                if (!isDropIntoEnabled()) {\n                    return;\n                }\n                const target = this.getTargetAtClientPoint(e.clientX, e.clientY);\n                if (target === null || target === void 0 ? void 0 : target.position) {\n                    this.showDropIndicatorAt(target.position);\n                }\n            },\n            onDrop: (e) => __awaiter(this, void 0, void 0, function* () {\n                if (!isDropIntoEnabled()) {\n                    return;\n                }\n                this.removeDropIndicator();\n                if (!e.dataTransfer) {\n                    return;\n                }\n                const target = this.getTargetAtClientPoint(e.clientX, e.clientY);\n                if (target === null || target === void 0 ? void 0 : target.position) {\n                    this._onDropIntoEditor.fire({ position: target.position, event: e });\n                }\n            }),\n            onDragLeave: () => {\n                this.removeDropIndicator();\n            },\n            onDragEnd: () => {\n                this.removeDropIndicator();\n            },\n        }));\n        this._codeEditorService.addCodeEditor(this);\n    }\n    writeScreenReaderContent(reason) {\n        var _a;\n        (_a = this._modelData) === null || _a === void 0 ? void 0 : _a.view.writeScreenReaderContent(reason);\n    }\n    _createConfiguration(isSimpleWidget, options, accessibilityService) {\n        return new EditorConfiguration(isSimpleWidget, options, this._domElement, accessibilityService);\n    }\n    getId() {\n        return this.getEditorType() + ':' + this._id;\n    }\n    getEditorType() {\n        return editorCommon.EditorType.ICodeEditor;\n    }\n    dispose() {\n        this._codeEditorService.removeCodeEditor(this);\n        this._focusTracker.dispose();\n        this._actions.clear();\n        this._contentWidgets = {};\n        this._overlayWidgets = {};\n        this._removeDecorationTypes();\n        this._postDetachModelCleanup(this._detachModel());\n        this._onDidDispose.fire();\n        super.dispose();\n    }\n    invokeWithinContext(fn) {\n        return this._instantiationService.invokeFunction(fn);\n    }\n    updateOptions(newOptions) {\n        this._configuration.updateOptions(newOptions || {});\n    }\n    getOptions() {\n        return this._configuration.options;\n    }\n    getOption(id) {\n        return this._configuration.options.get(id);\n    }\n    getRawOptions() {\n        return this._configuration.getRawOptions();\n    }\n    getOverflowWidgetsDomNode() {\n        return this._overflowWidgetsDomNode;\n    }\n    getConfiguredWordAtPosition(position) {\n        if (!this._modelData) {\n            return null;\n        }\n        return WordOperations.getWordAtPosition(this._modelData.model, this._configuration.options.get(124 /* EditorOption.wordSeparators */), position);\n    }\n    getValue(options = null) {\n        if (!this._modelData) {\n            return '';\n        }\n        const preserveBOM = (options && options.preserveBOM) ? true : false;\n        let eolPreference = 0 /* EndOfLinePreference.TextDefined */;\n        if (options && options.lineEnding && options.lineEnding === '\\n') {\n            eolPreference = 1 /* EndOfLinePreference.LF */;\n        }\n        else if (options && options.lineEnding && options.lineEnding === '\\r\\n') {\n            eolPreference = 2 /* EndOfLinePreference.CRLF */;\n        }\n        return this._modelData.model.getValue(eolPreference, preserveBOM);\n    }\n    setValue(newValue) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.model.setValue(newValue);\n    }\n    getModel() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.model;\n    }\n    setModel(_model = null) {\n        const model = _model;\n        if (this._modelData === null && model === null) {\n            // Current model is the new model\n            return;\n        }\n        if (this._modelData && this._modelData.model === model) {\n            // Current model is the new model\n            return;\n        }\n        const hasTextFocus = this.hasTextFocus();\n        const detachedModel = this._detachModel();\n        this._attachModel(model);\n        if (hasTextFocus && this.hasModel()) {\n            this.focus();\n        }\n        const e = {\n            oldModelUrl: detachedModel ? detachedModel.uri : null,\n            newModelUrl: model ? model.uri : null\n        };\n        this._removeDecorationTypes();\n        this._onDidChangeModel.fire(e);\n        this._postDetachModelCleanup(detachedModel);\n        this._contributions.onAfterModelAttached();\n    }\n    _removeDecorationTypes() {\n        this._decorationTypeKeysToIds = {};\n        if (this._decorationTypeSubtypes) {\n            for (const decorationType in this._decorationTypeSubtypes) {\n                const subTypes = this._decorationTypeSubtypes[decorationType];\n                for (const subType in subTypes) {\n                    this._removeDecorationType(decorationType + '-' + subType);\n                }\n            }\n            this._decorationTypeSubtypes = {};\n        }\n    }\n    getVisibleRanges() {\n        if (!this._modelData) {\n            return [];\n        }\n        return this._modelData.viewModel.getVisibleRanges();\n    }\n    getVisibleRangesPlusViewportAboveBelow() {\n        if (!this._modelData) {\n            return [];\n        }\n        return this._modelData.viewModel.getVisibleRangesPlusViewportAboveBelow();\n    }\n    getWhitespaces() {\n        if (!this._modelData) {\n            return [];\n        }\n        return this._modelData.viewModel.viewLayout.getWhitespaces();\n    }\n    static _getVerticalOffsetAfterPosition(modelData, modelLineNumber, modelColumn, includeViewZones) {\n        const modelPosition = modelData.model.validatePosition({\n            lineNumber: modelLineNumber,\n            column: modelColumn\n        });\n        const viewPosition = modelData.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n        return modelData.viewModel.viewLayout.getVerticalOffsetAfterLineNumber(viewPosition.lineNumber, includeViewZones);\n    }\n    getTopForLineNumber(lineNumber, includeViewZones = false) {\n        if (!this._modelData) {\n            return -1;\n        }\n        return CodeEditorWidget._getVerticalOffsetForPosition(this._modelData, lineNumber, 1, includeViewZones);\n    }\n    getTopForPosition(lineNumber, column) {\n        if (!this._modelData) {\n            return -1;\n        }\n        return CodeEditorWidget._getVerticalOffsetForPosition(this._modelData, lineNumber, column, false);\n    }\n    static _getVerticalOffsetForPosition(modelData, modelLineNumber, modelColumn, includeViewZones = false) {\n        const modelPosition = modelData.model.validatePosition({\n            lineNumber: modelLineNumber,\n            column: modelColumn\n        });\n        const viewPosition = modelData.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n        return modelData.viewModel.viewLayout.getVerticalOffsetForLineNumber(viewPosition.lineNumber, includeViewZones);\n    }\n    getBottomForLineNumber(lineNumber, includeViewZones = false) {\n        if (!this._modelData) {\n            return -1;\n        }\n        return CodeEditorWidget._getVerticalOffsetAfterPosition(this._modelData, lineNumber, 1, includeViewZones);\n    }\n    setHiddenAreas(ranges, source) {\n        var _a;\n        (_a = this._modelData) === null || _a === void 0 ? void 0 : _a.viewModel.setHiddenAreas(ranges.map(r => Range.lift(r)), source);\n    }\n    getVisibleColumnFromPosition(rawPosition) {\n        if (!this._modelData) {\n            return rawPosition.column;\n        }\n        const position = this._modelData.model.validatePosition(rawPosition);\n        const tabSize = this._modelData.model.getOptions().tabSize;\n        return CursorColumns.visibleColumnFromColumn(this._modelData.model.getLineContent(position.lineNumber), position.column, tabSize) + 1;\n    }\n    getPosition() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel.getPosition();\n    }\n    setPosition(position, source = 'api') {\n        if (!this._modelData) {\n            return;\n        }\n        if (!Position.isIPosition(position)) {\n            throw new Error('Invalid arguments');\n        }\n        this._modelData.viewModel.setSelections(source, [{\n                selectionStartLineNumber: position.lineNumber,\n                selectionStartColumn: position.column,\n                positionLineNumber: position.lineNumber,\n                positionColumn: position.column\n            }]);\n    }\n    _sendRevealRange(modelRange, verticalType, revealHorizontal, scrollType) {\n        if (!this._modelData) {\n            return;\n        }\n        if (!Range.isIRange(modelRange)) {\n            throw new Error('Invalid arguments');\n        }\n        const validatedModelRange = this._modelData.model.validateRange(modelRange);\n        const viewRange = this._modelData.viewModel.coordinatesConverter.convertModelRangeToViewRange(validatedModelRange);\n        this._modelData.viewModel.revealRange('api', revealHorizontal, viewRange, verticalType, scrollType);\n    }\n    revealLine(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLine(lineNumber, 0 /* VerticalRevealType.Simple */, scrollType);\n    }\n    revealLineInCenter(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLine(lineNumber, 1 /* VerticalRevealType.Center */, scrollType);\n    }\n    revealLineInCenterIfOutsideViewport(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLine(lineNumber, 2 /* VerticalRevealType.CenterIfOutsideViewport */, scrollType);\n    }\n    revealLineNearTop(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLine(lineNumber, 5 /* VerticalRevealType.NearTop */, scrollType);\n    }\n    _revealLine(lineNumber, revealType, scrollType) {\n        if (typeof lineNumber !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(new Range(lineNumber, 1, lineNumber, 1), revealType, false, scrollType);\n    }\n    revealPosition(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealPosition(position, 0 /* VerticalRevealType.Simple */, true, scrollType);\n    }\n    revealPositionInCenter(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealPosition(position, 1 /* VerticalRevealType.Center */, true, scrollType);\n    }\n    revealPositionInCenterIfOutsideViewport(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealPosition(position, 2 /* VerticalRevealType.CenterIfOutsideViewport */, true, scrollType);\n    }\n    revealPositionNearTop(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealPosition(position, 5 /* VerticalRevealType.NearTop */, true, scrollType);\n    }\n    _revealPosition(position, verticalType, revealHorizontal, scrollType) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(new Range(position.lineNumber, position.column, position.lineNumber, position.column), verticalType, revealHorizontal, scrollType);\n    }\n    getSelection() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel.getSelection();\n    }\n    getSelections() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel.getSelections();\n    }\n    setSelection(something, source = 'api') {\n        const isSelection = Selection.isISelection(something);\n        const isRange = Range.isIRange(something);\n        if (!isSelection && !isRange) {\n            throw new Error('Invalid arguments');\n        }\n        if (isSelection) {\n            this._setSelectionImpl(something, source);\n        }\n        else if (isRange) {\n            // act as if it was an IRange\n            const selection = {\n                selectionStartLineNumber: something.startLineNumber,\n                selectionStartColumn: something.startColumn,\n                positionLineNumber: something.endLineNumber,\n                positionColumn: something.endColumn\n            };\n            this._setSelectionImpl(selection, source);\n        }\n    }\n    _setSelectionImpl(sel, source) {\n        if (!this._modelData) {\n            return;\n        }\n        const selection = new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n        this._modelData.viewModel.setSelections(source, [selection]);\n    }\n    revealLines(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 0 /* VerticalRevealType.Simple */, scrollType);\n    }\n    revealLinesInCenter(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 1 /* VerticalRevealType.Center */, scrollType);\n    }\n    revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 2 /* VerticalRevealType.CenterIfOutsideViewport */, scrollType);\n    }\n    revealLinesNearTop(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 5 /* VerticalRevealType.NearTop */, scrollType);\n    }\n    _revealLines(startLineNumber, endLineNumber, verticalType, scrollType) {\n        if (typeof startLineNumber !== 'number' || typeof endLineNumber !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(new Range(startLineNumber, 1, endLineNumber, 1), verticalType, false, scrollType);\n    }\n    revealRange(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */, revealVerticalInCenter = false, revealHorizontal = true) {\n        this._revealRange(range, revealVerticalInCenter ? 1 /* VerticalRevealType.Center */ : 0 /* VerticalRevealType.Simple */, revealHorizontal, scrollType);\n    }\n    revealRangeInCenter(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 1 /* VerticalRevealType.Center */, true, scrollType);\n    }\n    revealRangeInCenterIfOutsideViewport(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 2 /* VerticalRevealType.CenterIfOutsideViewport */, true, scrollType);\n    }\n    revealRangeNearTop(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 5 /* VerticalRevealType.NearTop */, true, scrollType);\n    }\n    revealRangeNearTopIfOutsideViewport(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 6 /* VerticalRevealType.NearTopIfOutsideViewport */, true, scrollType);\n    }\n    revealRangeAtTop(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 3 /* VerticalRevealType.Top */, true, scrollType);\n    }\n    _revealRange(range, verticalType, revealHorizontal, scrollType) {\n        if (!Range.isIRange(range)) {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(Range.lift(range), verticalType, revealHorizontal, scrollType);\n    }\n    setSelections(ranges, source = 'api', reason = 0 /* CursorChangeReason.NotSet */) {\n        if (!this._modelData) {\n            return;\n        }\n        if (!ranges || ranges.length === 0) {\n            throw new Error('Invalid arguments');\n        }\n        for (let i = 0, len = ranges.length; i < len; i++) {\n            if (!Selection.isISelection(ranges[i])) {\n                throw new Error('Invalid arguments');\n            }\n        }\n        this._modelData.viewModel.setSelections(source, ranges, reason);\n    }\n    getContentWidth() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getContentWidth();\n    }\n    getScrollWidth() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getScrollWidth();\n    }\n    getScrollLeft() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getCurrentScrollLeft();\n    }\n    getContentHeight() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getContentHeight();\n    }\n    getScrollHeight() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getScrollHeight();\n    }\n    getScrollTop() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getCurrentScrollTop();\n    }\n    setScrollLeft(newScrollLeft, scrollType = 1 /* editorCommon.ScrollType.Immediate */) {\n        if (!this._modelData) {\n            return;\n        }\n        if (typeof newScrollLeft !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._modelData.viewModel.viewLayout.setScrollPosition({\n            scrollLeft: newScrollLeft\n        }, scrollType);\n    }\n    setScrollTop(newScrollTop, scrollType = 1 /* editorCommon.ScrollType.Immediate */) {\n        if (!this._modelData) {\n            return;\n        }\n        if (typeof newScrollTop !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._modelData.viewModel.viewLayout.setScrollPosition({\n            scrollTop: newScrollTop\n        }, scrollType);\n    }\n    setScrollPosition(position, scrollType = 1 /* editorCommon.ScrollType.Immediate */) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.viewLayout.setScrollPosition(position, scrollType);\n    }\n    saveViewState() {\n        if (!this._modelData) {\n            return null;\n        }\n        const contributionsState = this._contributions.saveViewState();\n        const cursorState = this._modelData.viewModel.saveCursorState();\n        const viewState = this._modelData.viewModel.saveState();\n        return {\n            cursorState: cursorState,\n            viewState: viewState,\n            contributionsState: contributionsState\n        };\n    }\n    restoreViewState(s) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        const codeEditorState = s;\n        if (codeEditorState && codeEditorState.cursorState && codeEditorState.viewState) {\n            const cursorState = codeEditorState.cursorState;\n            if (Array.isArray(cursorState)) {\n                if (cursorState.length > 0) {\n                    this._modelData.viewModel.restoreCursorState(cursorState);\n                }\n            }\n            else {\n                // Backwards compatibility\n                this._modelData.viewModel.restoreCursorState([cursorState]);\n            }\n            this._contributions.restoreViewState(codeEditorState.contributionsState || {});\n            const reducedState = this._modelData.viewModel.reduceRestoreState(codeEditorState.viewState);\n            this._modelData.view.restoreState(reducedState);\n        }\n    }\n    getContribution(id) {\n        return this._contributions.get(id);\n    }\n    getActions() {\n        return Array.from(this._actions.values());\n    }\n    getSupportedActions() {\n        let result = this.getActions();\n        result = result.filter(action => action.isSupported());\n        return result;\n    }\n    getAction(id) {\n        return this._actions.get(id) || null;\n    }\n    trigger(source, handlerId, payload) {\n        payload = payload || {};\n        switch (handlerId) {\n            case \"compositionStart\" /* editorCommon.Handler.CompositionStart */:\n                this._startComposition();\n                return;\n            case \"compositionEnd\" /* editorCommon.Handler.CompositionEnd */:\n                this._endComposition(source);\n                return;\n            case \"type\" /* editorCommon.Handler.Type */: {\n                const args = payload;\n                this._type(source, args.text || '');\n                return;\n            }\n            case \"replacePreviousChar\" /* editorCommon.Handler.ReplacePreviousChar */: {\n                const args = payload;\n                this._compositionType(source, args.text || '', args.replaceCharCnt || 0, 0, 0);\n                return;\n            }\n            case \"compositionType\" /* editorCommon.Handler.CompositionType */: {\n                const args = payload;\n                this._compositionType(source, args.text || '', args.replacePrevCharCnt || 0, args.replaceNextCharCnt || 0, args.positionDelta || 0);\n                return;\n            }\n            case \"paste\" /* editorCommon.Handler.Paste */: {\n                const args = payload;\n                this._paste(source, args.text || '', args.pasteOnNewLine || false, args.multicursorText || null, args.mode || null);\n                return;\n            }\n            case \"cut\" /* editorCommon.Handler.Cut */:\n                this._cut(source);\n                return;\n        }\n        const action = this.getAction(handlerId);\n        if (action) {\n            Promise.resolve(action.run()).then(undefined, onUnexpectedError);\n            return;\n        }\n        if (!this._modelData) {\n            return;\n        }\n        if (this._triggerEditorCommand(source, handlerId, payload)) {\n            return;\n        }\n        this._triggerCommand(handlerId, payload);\n    }\n    _triggerCommand(handlerId, payload) {\n        this._commandService.executeCommand(handlerId, payload);\n    }\n    _startComposition() {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.startComposition();\n        this._onDidCompositionStart.fire();\n    }\n    _endComposition(source) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.endComposition(source);\n        this._onDidCompositionEnd.fire();\n    }\n    _type(source, text) {\n        if (!this._modelData || text.length === 0) {\n            return;\n        }\n        if (source === 'keyboard') {\n            this._onWillType.fire(text);\n        }\n        this._modelData.viewModel.type(text, source);\n        if (source === 'keyboard') {\n            this._onDidType.fire(text);\n        }\n    }\n    _compositionType(source, text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.compositionType(text, replacePrevCharCnt, replaceNextCharCnt, positionDelta, source);\n    }\n    _paste(source, text, pasteOnNewLine, multicursorText, mode) {\n        if (!this._modelData || text.length === 0) {\n            return;\n        }\n        const viewModel = this._modelData.viewModel;\n        const startPosition = viewModel.getSelection().getStartPosition();\n        viewModel.paste(text, pasteOnNewLine, multicursorText, source);\n        const endPosition = viewModel.getSelection().getStartPosition();\n        if (source === 'keyboard') {\n            this._onDidPaste.fire({\n                range: new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column),\n                languageId: mode\n            });\n        }\n    }\n    _cut(source) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.cut(source);\n    }\n    _triggerEditorCommand(source, handlerId, payload) {\n        const command = EditorExtensionsRegistry.getEditorCommand(handlerId);\n        if (command) {\n            payload = payload || {};\n            payload.source = source;\n            this._instantiationService.invokeFunction((accessor) => {\n                Promise.resolve(command.runEditorCommand(accessor, this, payload)).then(undefined, onUnexpectedError);\n            });\n            return true;\n        }\n        return false;\n    }\n    _getViewModel() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel;\n    }\n    pushUndoStop() {\n        if (!this._modelData) {\n            return false;\n        }\n        if (this._configuration.options.get(86 /* EditorOption.readOnly */)) {\n            // read only editor => sorry!\n            return false;\n        }\n        this._modelData.model.pushStackElement();\n        return true;\n    }\n    popUndoStop() {\n        if (!this._modelData) {\n            return false;\n        }\n        if (this._configuration.options.get(86 /* EditorOption.readOnly */)) {\n            // read only editor => sorry!\n            return false;\n        }\n        this._modelData.model.popStackElement();\n        return true;\n    }\n    executeEdits(source, edits, endCursorState) {\n        if (!this._modelData) {\n            return false;\n        }\n        if (this._configuration.options.get(86 /* EditorOption.readOnly */)) {\n            // read only editor => sorry!\n            return false;\n        }\n        let cursorStateComputer;\n        if (!endCursorState) {\n            cursorStateComputer = () => null;\n        }\n        else if (Array.isArray(endCursorState)) {\n            cursorStateComputer = () => endCursorState;\n        }\n        else {\n            cursorStateComputer = endCursorState;\n        }\n        this._modelData.viewModel.executeEdits(source, edits, cursorStateComputer);\n        return true;\n    }\n    executeCommand(source, command) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.executeCommand(command, source);\n    }\n    executeCommands(source, commands) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.executeCommands(commands, source);\n    }\n    createDecorationsCollection(decorations) {\n        return new EditorDecorationsCollection(this, decorations);\n    }\n    changeDecorations(callback) {\n        if (!this._modelData) {\n            // callback will not be called\n            return null;\n        }\n        return this._modelData.model.changeDecorations(callback, this._id);\n    }\n    getLineDecorations(lineNumber) {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.model.getLineDecorations(lineNumber, this._id, filterValidationDecorations(this._configuration.options));\n    }\n    getDecorationsInRange(range) {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.model.getDecorationsInRange(range, this._id, filterValidationDecorations(this._configuration.options));\n    }\n    /**\n     * @deprecated\n     */\n    deltaDecorations(oldDecorations, newDecorations) {\n        if (!this._modelData) {\n            return [];\n        }\n        if (oldDecorations.length === 0 && newDecorations.length === 0) {\n            return oldDecorations;\n        }\n        return this._modelData.model.deltaDecorations(oldDecorations, newDecorations, this._id);\n    }\n    removeDecorations(decorationIds) {\n        if (!this._modelData || decorationIds.length === 0) {\n            return;\n        }\n        this._modelData.model.changeDecorations((changeAccessor) => {\n            changeAccessor.deltaDecorations(decorationIds, []);\n        });\n    }\n    removeDecorationsByType(decorationTypeKey) {\n        // remove decorations for type and sub type\n        const oldDecorationsIds = this._decorationTypeKeysToIds[decorationTypeKey];\n        if (oldDecorationsIds) {\n            this.deltaDecorations(oldDecorationsIds, []);\n        }\n        if (this._decorationTypeKeysToIds.hasOwnProperty(decorationTypeKey)) {\n            delete this._decorationTypeKeysToIds[decorationTypeKey];\n        }\n        if (this._decorationTypeSubtypes.hasOwnProperty(decorationTypeKey)) {\n            delete this._decorationTypeSubtypes[decorationTypeKey];\n        }\n    }\n    getLayoutInfo() {\n        const options = this._configuration.options;\n        const layoutInfo = options.get(138 /* EditorOption.layoutInfo */);\n        return layoutInfo;\n    }\n    createOverviewRuler(cssClassName) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        return this._modelData.view.createOverviewRuler(cssClassName);\n    }\n    getContainerDomNode() {\n        return this._domElement;\n    }\n    getDomNode() {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        return this._modelData.view.domNode.domNode;\n    }\n    delegateVerticalScrollbarPointerDown(browserEvent) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.delegateVerticalScrollbarPointerDown(browserEvent);\n    }\n    delegateScrollFromMouseWheelEvent(browserEvent) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.delegateScrollFromMouseWheelEvent(browserEvent);\n    }\n    layout(dimension) {\n        this._configuration.observeContainer(dimension);\n        this.render();\n    }\n    focus() {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.focus();\n    }\n    hasTextFocus() {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return false;\n        }\n        return this._modelData.view.isFocused();\n    }\n    hasWidgetFocus() {\n        return this._focusTracker && this._focusTracker.hasFocus();\n    }\n    addContentWidget(widget) {\n        const widgetData = {\n            widget: widget,\n            position: widget.getPosition()\n        };\n        if (this._contentWidgets.hasOwnProperty(widget.getId())) {\n            console.warn('Overwriting a content widget with the same id.');\n        }\n        this._contentWidgets[widget.getId()] = widgetData;\n        if (this._modelData && this._modelData.hasRealView) {\n            this._modelData.view.addContentWidget(widgetData);\n        }\n    }\n    layoutContentWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._contentWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._contentWidgets[widgetId];\n            widgetData.position = widget.getPosition();\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.layoutContentWidget(widgetData);\n            }\n        }\n    }\n    removeContentWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._contentWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._contentWidgets[widgetId];\n            delete this._contentWidgets[widgetId];\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.removeContentWidget(widgetData);\n            }\n        }\n    }\n    addOverlayWidget(widget) {\n        const widgetData = {\n            widget: widget,\n            position: widget.getPosition()\n        };\n        if (this._overlayWidgets.hasOwnProperty(widget.getId())) {\n            console.warn('Overwriting an overlay widget with the same id.');\n        }\n        this._overlayWidgets[widget.getId()] = widgetData;\n        if (this._modelData && this._modelData.hasRealView) {\n            this._modelData.view.addOverlayWidget(widgetData);\n        }\n    }\n    layoutOverlayWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._overlayWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._overlayWidgets[widgetId];\n            widgetData.position = widget.getPosition();\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.layoutOverlayWidget(widgetData);\n            }\n        }\n    }\n    removeOverlayWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._overlayWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._overlayWidgets[widgetId];\n            delete this._overlayWidgets[widgetId];\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.removeOverlayWidget(widgetData);\n            }\n        }\n    }\n    changeViewZones(callback) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.change(callback);\n    }\n    getTargetAtClientPoint(clientX, clientY) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        return this._modelData.view.getTargetAtClientPoint(clientX, clientY);\n    }\n    getScrolledVisiblePosition(rawPosition) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        const position = this._modelData.model.validatePosition(rawPosition);\n        const options = this._configuration.options;\n        const layoutInfo = options.get(138 /* EditorOption.layoutInfo */);\n        const top = CodeEditorWidget._getVerticalOffsetForPosition(this._modelData, position.lineNumber, position.column) - this.getScrollTop();\n        const left = this._modelData.view.getOffsetForColumn(position.lineNumber, position.column) + layoutInfo.glyphMarginWidth + layoutInfo.lineNumbersWidth + layoutInfo.decorationsWidth - this.getScrollLeft();\n        return {\n            top: top,\n            left: left,\n            height: options.get(63 /* EditorOption.lineHeight */)\n        };\n    }\n    getOffsetForColumn(lineNumber, column) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return -1;\n        }\n        return this._modelData.view.getOffsetForColumn(lineNumber, column);\n    }\n    render(forceRedraw = false) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.render(true, forceRedraw);\n    }\n    setAriaOptions(options) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.setAriaOptions(options);\n    }\n    applyFontInfo(target) {\n        applyFontInfo(target, this._configuration.options.get(47 /* EditorOption.fontInfo */));\n    }\n    setBanner(domNode, domNodeHeight) {\n        if (this._bannerDomNode && this._domElement.contains(this._bannerDomNode)) {\n            this._domElement.removeChild(this._bannerDomNode);\n        }\n        this._bannerDomNode = domNode;\n        this._configuration.setReservedHeight(domNode ? domNodeHeight : 0);\n        if (this._bannerDomNode) {\n            this._domElement.prepend(this._bannerDomNode);\n        }\n    }\n    _attachModel(model) {\n        if (!model) {\n            this._modelData = null;\n            return;\n        }\n        const listenersToRemove = [];\n        this._domElement.setAttribute('data-mode-id', model.getLanguageId());\n        this._configuration.setIsDominatedByLongLines(model.isDominatedByLongLines());\n        this._configuration.setModelLineCount(model.getLineCount());\n        model.onBeforeAttached();\n        const viewModel = new ViewModel(this._id, this._configuration, model, DOMLineBreaksComputerFactory.create(), MonospaceLineBreaksComputerFactory.create(this._configuration.options), (callback) => dom.scheduleAtNextAnimationFrame(callback), this.languageConfigurationService, this._themeService);\n        // Someone might destroy the model from under the editor, so prevent any exceptions by setting a null model\n        listenersToRemove.push(model.onWillDispose(() => this.setModel(null)));\n        listenersToRemove.push(viewModel.onEvent((e) => {\n            switch (e.kind) {\n                case 0 /* OutgoingViewModelEventKind.ContentSizeChanged */:\n                    this._onDidContentSizeChange.fire(e);\n                    break;\n                case 1 /* OutgoingViewModelEventKind.FocusChanged */:\n                    this._editorTextFocus.setValue(e.hasFocus);\n                    break;\n                case 2 /* OutgoingViewModelEventKind.ScrollChanged */:\n                    this._onDidScrollChange.fire(e);\n                    break;\n                case 3 /* OutgoingViewModelEventKind.ViewZonesChanged */:\n                    this._onDidChangeViewZones.fire();\n                    break;\n                case 4 /* OutgoingViewModelEventKind.HiddenAreasChanged */:\n                    this._onDidChangeHiddenAreas.fire();\n                    break;\n                case 5 /* OutgoingViewModelEventKind.ReadOnlyEditAttempt */:\n                    this._onDidAttemptReadOnlyEdit.fire();\n                    break;\n                case 6 /* OutgoingViewModelEventKind.CursorStateChanged */: {\n                    if (e.reachedMaxCursorCount) {\n                        const multiCursorLimit = this.getOption(76 /* EditorOption.multiCursorLimit */);\n                        const message = nls.localize('cursors.maximum', \"The number of cursors has been limited to {0}. Consider using [find and replace](https://code.visualstudio.com/docs/editor/codebasics#_find-and-replace) for larger changes or increase the editor multi cursor limit setting.\", multiCursorLimit);\n                        this._notificationService.prompt(Severity.Warning, message, [\n                            {\n                                label: 'Find and Replace',\n                                run: () => {\n                                    this._commandService.executeCommand('editor.action.startFindReplaceAction');\n                                }\n                            },\n                            {\n                                label: nls.localize('goToSetting', 'Increase Multi Cursor Limit'),\n                                run: () => {\n                                    this._commandService.executeCommand('workbench.action.openSettings2', {\n                                        query: 'editor.multiCursorLimit'\n                                    });\n                                }\n                            }\n                        ]);\n                    }\n                    const positions = [];\n                    for (let i = 0, len = e.selections.length; i < len; i++) {\n                        positions[i] = e.selections[i].getPosition();\n                    }\n                    const e1 = {\n                        position: positions[0],\n                        secondaryPositions: positions.slice(1),\n                        reason: e.reason,\n                        source: e.source\n                    };\n                    this._onDidChangeCursorPosition.fire(e1);\n                    const e2 = {\n                        selection: e.selections[0],\n                        secondarySelections: e.selections.slice(1),\n                        modelVersionId: e.modelVersionId,\n                        oldSelections: e.oldSelections,\n                        oldModelVersionId: e.oldModelVersionId,\n                        source: e.source,\n                        reason: e.reason\n                    };\n                    this._onDidChangeCursorSelection.fire(e2);\n                    break;\n                }\n                case 7 /* OutgoingViewModelEventKind.ModelDecorationsChanged */:\n                    this._onDidChangeModelDecorations.fire(e.event);\n                    break;\n                case 8 /* OutgoingViewModelEventKind.ModelLanguageChanged */:\n                    this._domElement.setAttribute('data-mode-id', model.getLanguageId());\n                    this._onDidChangeModelLanguage.fire(e.event);\n                    break;\n                case 9 /* OutgoingViewModelEventKind.ModelLanguageConfigurationChanged */:\n                    this._onDidChangeModelLanguageConfiguration.fire(e.event);\n                    break;\n                case 10 /* OutgoingViewModelEventKind.ModelContentChanged */:\n                    this._onDidChangeModelContent.fire(e.event);\n                    break;\n                case 11 /* OutgoingViewModelEventKind.ModelOptionsChanged */:\n                    this._onDidChangeModelOptions.fire(e.event);\n                    break;\n                case 12 /* OutgoingViewModelEventKind.ModelTokensChanged */:\n                    this._onDidChangeModelTokens.fire(e.event);\n                    break;\n            }\n        }));\n        const [view, hasRealView] = this._createView(viewModel);\n        if (hasRealView) {\n            this._domElement.appendChild(view.domNode.domNode);\n            let keys = Object.keys(this._contentWidgets);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const widgetId = keys[i];\n                view.addContentWidget(this._contentWidgets[widgetId]);\n            }\n            keys = Object.keys(this._overlayWidgets);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const widgetId = keys[i];\n                view.addOverlayWidget(this._overlayWidgets[widgetId]);\n            }\n            view.render(false, true);\n            view.domNode.domNode.setAttribute('data-uri', model.uri.toString());\n        }\n        this._modelData = new ModelData(model, viewModel, view, hasRealView, listenersToRemove);\n    }\n    _createView(viewModel) {\n        let commandDelegate;\n        if (this.isSimpleWidget) {\n            commandDelegate = {\n                paste: (text, pasteOnNewLine, multicursorText, mode) => {\n                    this._paste('keyboard', text, pasteOnNewLine, multicursorText, mode);\n                },\n                type: (text) => {\n                    this._type('keyboard', text);\n                },\n                compositionType: (text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) => {\n                    this._compositionType('keyboard', text, replacePrevCharCnt, replaceNextCharCnt, positionDelta);\n                },\n                startComposition: () => {\n                    this._startComposition();\n                },\n                endComposition: () => {\n                    this._endComposition('keyboard');\n                },\n                cut: () => {\n                    this._cut('keyboard');\n                }\n            };\n        }\n        else {\n            commandDelegate = {\n                paste: (text, pasteOnNewLine, multicursorText, mode) => {\n                    const payload = { text, pasteOnNewLine, multicursorText, mode };\n                    this._commandService.executeCommand(\"paste\" /* editorCommon.Handler.Paste */, payload);\n                },\n                type: (text) => {\n                    const payload = { text };\n                    this._commandService.executeCommand(\"type\" /* editorCommon.Handler.Type */, payload);\n                },\n                compositionType: (text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) => {\n                    // Try if possible to go through the existing `replacePreviousChar` command\n                    if (replaceNextCharCnt || positionDelta) {\n                        // must be handled through the new command\n                        const payload = { text, replacePrevCharCnt, replaceNextCharCnt, positionDelta };\n                        this._commandService.executeCommand(\"compositionType\" /* editorCommon.Handler.CompositionType */, payload);\n                    }\n                    else {\n                        const payload = { text, replaceCharCnt: replacePrevCharCnt };\n                        this._commandService.executeCommand(\"replacePreviousChar\" /* editorCommon.Handler.ReplacePreviousChar */, payload);\n                    }\n                },\n                startComposition: () => {\n                    this._commandService.executeCommand(\"compositionStart\" /* editorCommon.Handler.CompositionStart */, {});\n                },\n                endComposition: () => {\n                    this._commandService.executeCommand(\"compositionEnd\" /* editorCommon.Handler.CompositionEnd */, {});\n                },\n                cut: () => {\n                    this._commandService.executeCommand(\"cut\" /* editorCommon.Handler.Cut */, {});\n                }\n            };\n        }\n        const viewUserInputEvents = new ViewUserInputEvents(viewModel.coordinatesConverter);\n        viewUserInputEvents.onKeyDown = (e) => this._onKeyDown.fire(e);\n        viewUserInputEvents.onKeyUp = (e) => this._onKeyUp.fire(e);\n        viewUserInputEvents.onContextMenu = (e) => this._onContextMenu.fire(e);\n        viewUserInputEvents.onMouseMove = (e) => this._onMouseMove.fire(e);\n        viewUserInputEvents.onMouseLeave = (e) => this._onMouseLeave.fire(e);\n        viewUserInputEvents.onMouseDown = (e) => this._onMouseDown.fire(e);\n        viewUserInputEvents.onMouseUp = (e) => this._onMouseUp.fire(e);\n        viewUserInputEvents.onMouseDrag = (e) => this._onMouseDrag.fire(e);\n        viewUserInputEvents.onMouseDrop = (e) => this._onMouseDrop.fire(e);\n        viewUserInputEvents.onMouseDropCanceled = (e) => this._onMouseDropCanceled.fire(e);\n        viewUserInputEvents.onMouseWheel = (e) => this._onMouseWheel.fire(e);\n        const view = new View(commandDelegate, this._configuration, this._themeService.getColorTheme(), viewModel, viewUserInputEvents, this._overflowWidgetsDomNode);\n        return [view, true];\n    }\n    _postDetachModelCleanup(detachedModel) {\n        detachedModel === null || detachedModel === void 0 ? void 0 : detachedModel.removeAllDecorationsWithOwnerId(this._id);\n    }\n    _detachModel() {\n        if (!this._modelData) {\n            return null;\n        }\n        const model = this._modelData.model;\n        const removeDomNode = this._modelData.hasRealView ? this._modelData.view.domNode.domNode : null;\n        this._modelData.dispose();\n        this._modelData = null;\n        this._domElement.removeAttribute('data-mode-id');\n        if (removeDomNode && this._domElement.contains(removeDomNode)) {\n            this._domElement.removeChild(removeDomNode);\n        }\n        if (this._bannerDomNode && this._domElement.contains(this._bannerDomNode)) {\n            this._domElement.removeChild(this._bannerDomNode);\n        }\n        return model;\n    }\n    _removeDecorationType(key) {\n        this._codeEditorService.removeDecorationType(key);\n    }\n    hasModel() {\n        return (this._modelData !== null);\n    }\n    showDropIndicatorAt(position) {\n        const newDecorations = [{\n                range: new Range(position.lineNumber, position.column, position.lineNumber, position.column),\n                options: CodeEditorWidget.dropIntoEditorDecorationOptions\n            }];\n        this._dropIntoEditorDecorations.set(newDecorations);\n        this.revealPosition(position, 1 /* editorCommon.ScrollType.Immediate */);\n    }\n    removeDropIndicator() {\n        this._dropIntoEditorDecorations.clear();\n    }\n};\nCodeEditorWidget.dropIntoEditorDecorationOptions = ModelDecorationOptions.register({\n    description: 'workbench-dnd-target',\n    className: 'dnd-target'\n});\nCodeEditorWidget = __decorate([\n    __param(3, IInstantiationService),\n    __param(4, ICodeEditorService),\n    __param(5, ICommandService),\n    __param(6, IContextKeyService),\n    __param(7, IThemeService),\n    __param(8, INotificationService),\n    __param(9, IAccessibilityService),\n    __param(10, ILanguageConfigurationService),\n    __param(11, ILanguageFeaturesService)\n], CodeEditorWidget);\nexport { CodeEditorWidget };\nexport class BooleanEventEmitter extends Disposable {\n    constructor(_emitterOptions) {\n        super();\n        this._emitterOptions = _emitterOptions;\n        this._onDidChangeToTrue = this._register(new Emitter(this._emitterOptions));\n        this.onDidChangeToTrue = this._onDidChangeToTrue.event;\n        this._onDidChangeToFalse = this._register(new Emitter(this._emitterOptions));\n        this.onDidChangeToFalse = this._onDidChangeToFalse.event;\n        this._value = 0 /* BooleanEventValue.NotSet */;\n    }\n    setValue(_value) {\n        const value = (_value ? 2 /* BooleanEventValue.True */ : 1 /* BooleanEventValue.False */);\n        if (this._value === value) {\n            return;\n        }\n        this._value = value;\n        if (this._value === 2 /* BooleanEventValue.True */) {\n            this._onDidChangeToTrue.fire();\n        }\n        else if (this._value === 1 /* BooleanEventValue.False */) {\n            this._onDidChangeToFalse.fire();\n        }\n    }\n}\n/**\n * A regular event emitter that also makes sure contributions are instantiated if necessary\n */\nclass InteractionEmitter extends Emitter {\n    constructor(_contributions, deliveryQueue) {\n        super({ deliveryQueue });\n        this._contributions = _contributions;\n    }\n    fire(event) {\n        this._contributions.onBeforeInteractionEvent();\n        super.fire(event);\n    }\n}\nclass EditorContextKeysManager extends Disposable {\n    constructor(editor, contextKeyService) {\n        super();\n        this._editor = editor;\n        contextKeyService.createKey('editorId', editor.getId());\n        this._editorSimpleInput = EditorContextKeys.editorSimpleInput.bindTo(contextKeyService);\n        this._editorFocus = EditorContextKeys.focus.bindTo(contextKeyService);\n        this._textInputFocus = EditorContextKeys.textInputFocus.bindTo(contextKeyService);\n        this._editorTextFocus = EditorContextKeys.editorTextFocus.bindTo(contextKeyService);\n        this._editorTabMovesFocus = EditorContextKeys.tabMovesFocus.bindTo(contextKeyService);\n        this._editorReadonly = EditorContextKeys.readOnly.bindTo(contextKeyService);\n        this._inDiffEditor = EditorContextKeys.inDiffEditor.bindTo(contextKeyService);\n        this._editorColumnSelection = EditorContextKeys.columnSelection.bindTo(contextKeyService);\n        this._hasMultipleSelections = EditorContextKeys.hasMultipleSelections.bindTo(contextKeyService);\n        this._hasNonEmptySelection = EditorContextKeys.hasNonEmptySelection.bindTo(contextKeyService);\n        this._canUndo = EditorContextKeys.canUndo.bindTo(contextKeyService);\n        this._canRedo = EditorContextKeys.canRedo.bindTo(contextKeyService);\n        this._register(this._editor.onDidChangeConfiguration(() => this._updateFromConfig()));\n        this._register(this._editor.onDidChangeCursorSelection(() => this._updateFromSelection()));\n        this._register(this._editor.onDidFocusEditorWidget(() => this._updateFromFocus()));\n        this._register(this._editor.onDidBlurEditorWidget(() => this._updateFromFocus()));\n        this._register(this._editor.onDidFocusEditorText(() => this._updateFromFocus()));\n        this._register(this._editor.onDidBlurEditorText(() => this._updateFromFocus()));\n        this._register(this._editor.onDidChangeModel(() => this._updateFromModel()));\n        this._register(this._editor.onDidChangeConfiguration(() => this._updateFromModel()));\n        this._register(TabFocus.onDidChangeTabFocus(() => this._editorTabMovesFocus.set(TabFocus.getTabFocusMode(\"editorFocus\" /* TabFocusContext.Editor */))));\n        this._updateFromConfig();\n        this._updateFromSelection();\n        this._updateFromFocus();\n        this._updateFromModel();\n        this._editorSimpleInput.set(this._editor.isSimpleWidget);\n    }\n    _updateFromConfig() {\n        const options = this._editor.getOptions();\n        this._editorTabMovesFocus.set(options.get(137 /* EditorOption.tabFocusMode */));\n        this._editorReadonly.set(options.get(86 /* EditorOption.readOnly */));\n        this._inDiffEditor.set(options.get(58 /* EditorOption.inDiffEditor */));\n        this._editorColumnSelection.set(options.get(19 /* EditorOption.columnSelection */));\n    }\n    _updateFromSelection() {\n        const selections = this._editor.getSelections();\n        if (!selections) {\n            this._hasMultipleSelections.reset();\n            this._hasNonEmptySelection.reset();\n        }\n        else {\n            this._hasMultipleSelections.set(selections.length > 1);\n            this._hasNonEmptySelection.set(selections.some(s => !s.isEmpty()));\n        }\n    }\n    _updateFromFocus() {\n        this._editorFocus.set(this._editor.hasWidgetFocus() && !this._editor.isSimpleWidget);\n        this._editorTextFocus.set(this._editor.hasTextFocus() && !this._editor.isSimpleWidget);\n        this._textInputFocus.set(this._editor.hasTextFocus());\n    }\n    _updateFromModel() {\n        const model = this._editor.getModel();\n        this._canUndo.set(Boolean(model && model.canUndo()));\n        this._canRedo.set(Boolean(model && model.canRedo()));\n    }\n}\nexport class EditorModeContext extends Disposable {\n    constructor(_editor, _contextKeyService, _languageFeaturesService) {\n        super();\n        this._editor = _editor;\n        this._contextKeyService = _contextKeyService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._langId = EditorContextKeys.languageId.bindTo(_contextKeyService);\n        this._hasCompletionItemProvider = EditorContextKeys.hasCompletionItemProvider.bindTo(_contextKeyService);\n        this._hasCodeActionsProvider = EditorContextKeys.hasCodeActionsProvider.bindTo(_contextKeyService);\n        this._hasCodeLensProvider = EditorContextKeys.hasCodeLensProvider.bindTo(_contextKeyService);\n        this._hasDefinitionProvider = EditorContextKeys.hasDefinitionProvider.bindTo(_contextKeyService);\n        this._hasDeclarationProvider = EditorContextKeys.hasDeclarationProvider.bindTo(_contextKeyService);\n        this._hasImplementationProvider = EditorContextKeys.hasImplementationProvider.bindTo(_contextKeyService);\n        this._hasTypeDefinitionProvider = EditorContextKeys.hasTypeDefinitionProvider.bindTo(_contextKeyService);\n        this._hasHoverProvider = EditorContextKeys.hasHoverProvider.bindTo(_contextKeyService);\n        this._hasDocumentHighlightProvider = EditorContextKeys.hasDocumentHighlightProvider.bindTo(_contextKeyService);\n        this._hasDocumentSymbolProvider = EditorContextKeys.hasDocumentSymbolProvider.bindTo(_contextKeyService);\n        this._hasReferenceProvider = EditorContextKeys.hasReferenceProvider.bindTo(_contextKeyService);\n        this._hasRenameProvider = EditorContextKeys.hasRenameProvider.bindTo(_contextKeyService);\n        this._hasSignatureHelpProvider = EditorContextKeys.hasSignatureHelpProvider.bindTo(_contextKeyService);\n        this._hasInlayHintsProvider = EditorContextKeys.hasInlayHintsProvider.bindTo(_contextKeyService);\n        this._hasDocumentFormattingProvider = EditorContextKeys.hasDocumentFormattingProvider.bindTo(_contextKeyService);\n        this._hasDocumentSelectionFormattingProvider = EditorContextKeys.hasDocumentSelectionFormattingProvider.bindTo(_contextKeyService);\n        this._hasMultipleDocumentFormattingProvider = EditorContextKeys.hasMultipleDocumentFormattingProvider.bindTo(_contextKeyService);\n        this._hasMultipleDocumentSelectionFormattingProvider = EditorContextKeys.hasMultipleDocumentSelectionFormattingProvider.bindTo(_contextKeyService);\n        this._isInWalkThrough = EditorContextKeys.isInWalkThroughSnippet.bindTo(_contextKeyService);\n        const update = () => this._update();\n        // update when model/mode changes\n        this._register(_editor.onDidChangeModel(update));\n        this._register(_editor.onDidChangeModelLanguage(update));\n        // update when registries change\n        this._register(_languageFeaturesService.completionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.codeActionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.codeLensProvider.onDidChange(update));\n        this._register(_languageFeaturesService.definitionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.declarationProvider.onDidChange(update));\n        this._register(_languageFeaturesService.implementationProvider.onDidChange(update));\n        this._register(_languageFeaturesService.typeDefinitionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.hoverProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentHighlightProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentSymbolProvider.onDidChange(update));\n        this._register(_languageFeaturesService.referenceProvider.onDidChange(update));\n        this._register(_languageFeaturesService.renameProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentFormattingEditProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentRangeFormattingEditProvider.onDidChange(update));\n        this._register(_languageFeaturesService.signatureHelpProvider.onDidChange(update));\n        this._register(_languageFeaturesService.inlayHintsProvider.onDidChange(update));\n        update();\n    }\n    dispose() {\n        super.dispose();\n    }\n    reset() {\n        this._contextKeyService.bufferChangeEvents(() => {\n            this._langId.reset();\n            this._hasCompletionItemProvider.reset();\n            this._hasCodeActionsProvider.reset();\n            this._hasCodeLensProvider.reset();\n            this._hasDefinitionProvider.reset();\n            this._hasDeclarationProvider.reset();\n            this._hasImplementationProvider.reset();\n            this._hasTypeDefinitionProvider.reset();\n            this._hasHoverProvider.reset();\n            this._hasDocumentHighlightProvider.reset();\n            this._hasDocumentSymbolProvider.reset();\n            this._hasReferenceProvider.reset();\n            this._hasRenameProvider.reset();\n            this._hasDocumentFormattingProvider.reset();\n            this._hasDocumentSelectionFormattingProvider.reset();\n            this._hasSignatureHelpProvider.reset();\n            this._isInWalkThrough.reset();\n        });\n    }\n    _update() {\n        const model = this._editor.getModel();\n        if (!model) {\n            this.reset();\n            return;\n        }\n        this._contextKeyService.bufferChangeEvents(() => {\n            this._langId.set(model.getLanguageId());\n            this._hasCompletionItemProvider.set(this._languageFeaturesService.completionProvider.has(model));\n            this._hasCodeActionsProvider.set(this._languageFeaturesService.codeActionProvider.has(model));\n            this._hasCodeLensProvider.set(this._languageFeaturesService.codeLensProvider.has(model));\n            this._hasDefinitionProvider.set(this._languageFeaturesService.definitionProvider.has(model));\n            this._hasDeclarationProvider.set(this._languageFeaturesService.declarationProvider.has(model));\n            this._hasImplementationProvider.set(this._languageFeaturesService.implementationProvider.has(model));\n            this._hasTypeDefinitionProvider.set(this._languageFeaturesService.typeDefinitionProvider.has(model));\n            this._hasHoverProvider.set(this._languageFeaturesService.hoverProvider.has(model));\n            this._hasDocumentHighlightProvider.set(this._languageFeaturesService.documentHighlightProvider.has(model));\n            this._hasDocumentSymbolProvider.set(this._languageFeaturesService.documentSymbolProvider.has(model));\n            this._hasReferenceProvider.set(this._languageFeaturesService.referenceProvider.has(model));\n            this._hasRenameProvider.set(this._languageFeaturesService.renameProvider.has(model));\n            this._hasSignatureHelpProvider.set(this._languageFeaturesService.signatureHelpProvider.has(model));\n            this._hasInlayHintsProvider.set(this._languageFeaturesService.inlayHintsProvider.has(model));\n            this._hasDocumentFormattingProvider.set(this._languageFeaturesService.documentFormattingEditProvider.has(model) || this._languageFeaturesService.documentRangeFormattingEditProvider.has(model));\n            this._hasDocumentSelectionFormattingProvider.set(this._languageFeaturesService.documentRangeFormattingEditProvider.has(model));\n            this._hasMultipleDocumentFormattingProvider.set(this._languageFeaturesService.documentFormattingEditProvider.all(model).length + this._languageFeaturesService.documentRangeFormattingEditProvider.all(model).length > 1);\n            this._hasMultipleDocumentSelectionFormattingProvider.set(this._languageFeaturesService.documentRangeFormattingEditProvider.all(model).length > 1);\n            this._isInWalkThrough.set(model.uri.scheme === Schemas.walkThroughSnippet);\n        });\n    }\n}\nclass CodeEditorWidgetFocusTracker extends Disposable {\n    constructor(domElement) {\n        super();\n        this._onChange = this._register(new Emitter());\n        this.onChange = this._onChange.event;\n        this._hasFocus = false;\n        this._domFocusTracker = this._register(dom.trackFocus(domElement));\n        this._register(this._domFocusTracker.onDidFocus(() => {\n            this._hasFocus = true;\n            this._onChange.fire(undefined);\n        }));\n        this._register(this._domFocusTracker.onDidBlur(() => {\n            this._hasFocus = false;\n            this._onChange.fire(undefined);\n        }));\n    }\n    hasFocus() {\n        return this._hasFocus;\n    }\n}\nclass EditorDecorationsCollection {\n    get length() {\n        return this._decorationIds.length;\n    }\n    constructor(_editor, decorations) {\n        this._editor = _editor;\n        this._decorationIds = [];\n        this._isChangingDecorations = false;\n        if (Array.isArray(decorations) && decorations.length > 0) {\n            this.set(decorations);\n        }\n    }\n    onDidChange(listener, thisArgs, disposables) {\n        return this._editor.onDidChangeModelDecorations((e) => {\n            if (this._isChangingDecorations) {\n                return;\n            }\n            listener.call(thisArgs, e);\n        }, disposables);\n    }\n    getRange(index) {\n        if (!this._editor.hasModel()) {\n            return null;\n        }\n        if (index >= this._decorationIds.length) {\n            return null;\n        }\n        return this._editor.getModel().getDecorationRange(this._decorationIds[index]);\n    }\n    getRanges() {\n        if (!this._editor.hasModel()) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const result = [];\n        for (const decorationId of this._decorationIds) {\n            const range = model.getDecorationRange(decorationId);\n            if (range) {\n                result.push(range);\n            }\n        }\n        return result;\n    }\n    has(decoration) {\n        return this._decorationIds.includes(decoration.id);\n    }\n    clear() {\n        if (this._decorationIds.length === 0) {\n            // nothing to do\n            return;\n        }\n        this.set([]);\n    }\n    set(newDecorations) {\n        try {\n            this._isChangingDecorations = true;\n            this._editor.changeDecorations((accessor) => {\n                this._decorationIds = accessor.deltaDecorations(this._decorationIds, newDecorations);\n            });\n        }\n        finally {\n            this._isChangingDecorations = false;\n        }\n    }\n}\nconst squigglyStart = encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 6 3' enable-background='new 0 0 6 3' height='3' width='6'><g fill='`);\nconst squigglyEnd = encodeURIComponent(`'><polygon points='5.5,0 2.5,3 1.1,3 4.1,0'/><polygon points='4,0 6,2 6,0.6 5.4,0'/><polygon points='0,2 1,3 2.4,3 0,0.6'/></g></svg>`);\nfunction getSquigglySVGData(color) {\n    return squigglyStart + encodeURIComponent(color.toString()) + squigglyEnd;\n}\nconst dotdotdotStart = encodeURIComponent(`<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"3\" width=\"12\"><g fill=\"`);\nconst dotdotdotEnd = encodeURIComponent(`\"><circle cx=\"1\" cy=\"1\" r=\"1\"/><circle cx=\"5\" cy=\"1\" r=\"1\"/><circle cx=\"9\" cy=\"1\" r=\"1\"/></g></svg>`);\nfunction getDotDotDotSVGData(color) {\n    return dotdotdotStart + encodeURIComponent(color.toString()) + dotdotdotEnd;\n}\nregisterThemingParticipant((theme, collector) => {\n    const errorForeground = theme.getColor(editorErrorForeground);\n    if (errorForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-error\" /* ClassName.EditorErrorDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(errorForeground)}\") repeat-x bottom left; }`);\n    }\n    const warningForeground = theme.getColor(editorWarningForeground);\n    if (warningForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-warning\" /* ClassName.EditorWarningDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(warningForeground)}\") repeat-x bottom left; }`);\n    }\n    const infoForeground = theme.getColor(editorInfoForeground);\n    if (infoForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-info\" /* ClassName.EditorInfoDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(infoForeground)}\") repeat-x bottom left; }`);\n    }\n    const hintForeground = theme.getColor(editorHintForeground);\n    if (hintForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-hint\" /* ClassName.EditorHintDecoration */} { background: url(\"data:image/svg+xml,${getDotDotDotSVGData(hintForeground)}\") no-repeat bottom left; }`);\n    }\n    const unnecessaryForeground = theme.getColor(editorUnnecessaryCodeOpacity);\n    if (unnecessaryForeground) {\n        collector.addRule(`.monaco-editor.showUnused .${\"squiggly-inline-unnecessary\" /* ClassName.EditorUnnecessaryInlineDecoration */} { opacity: ${unnecessaryForeground.rgba.a}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar _a;\nimport './media/diffReview.css';\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { DomScrollableElement } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { Action } from '../../../base/common/actions.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { EditorAction, registerEditorAction } from '../editorExtensions.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { EditorFontLigatures } from '../../common/config/editorOptions.js';\nimport { LineTokens } from '../../common/tokens/lineTokens.js';\nimport { Position } from '../../common/core/position.js';\nimport { RenderLineInput, renderViewLine2 as renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\nimport { ViewLineRenderingData } from '../../common/viewModel.js';\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\nimport { ILanguageService } from '../../common/languages/language.js';\nimport { AudioCue, IAudioCueService } from '../../../platform/audioCues/browser/audioCueService.js';\nconst DIFF_LINES_PADDING = 3;\nclass DiffEntry {\n    constructor(originalLineStart, originalLineEnd, modifiedLineStart, modifiedLineEnd) {\n        this.originalLineStart = originalLineStart;\n        this.originalLineEnd = originalLineEnd;\n        this.modifiedLineStart = modifiedLineStart;\n        this.modifiedLineEnd = modifiedLineEnd;\n    }\n    getType() {\n        if (this.originalLineStart === 0) {\n            return 1 /* DiffEntryType.Insert */;\n        }\n        if (this.modifiedLineStart === 0) {\n            return 2 /* DiffEntryType.Delete */;\n        }\n        return 0 /* DiffEntryType.Equal */;\n    }\n}\nclass Diff {\n    constructor(entries) {\n        this.entries = entries;\n    }\n}\nconst diffReviewInsertIcon = registerIcon('diff-review-insert', Codicon.add, nls.localize('diffReviewInsertIcon', 'Icon for \\'Insert\\' in diff review.'));\nconst diffReviewRemoveIcon = registerIcon('diff-review-remove', Codicon.remove, nls.localize('diffReviewRemoveIcon', 'Icon for \\'Remove\\' in diff review.'));\nconst diffReviewCloseIcon = registerIcon('diff-review-close', Codicon.close, nls.localize('diffReviewCloseIcon', 'Icon for \\'Close\\' in diff review.'));\nlet DiffReview = class DiffReview extends Disposable {\n    constructor(diffEditor, _languageService, _audioCueService) {\n        super();\n        this._languageService = _languageService;\n        this._audioCueService = _audioCueService;\n        this._width = 0;\n        this._diffEditor = diffEditor;\n        this._isVisible = false;\n        this.shadow = createFastDomNode(document.createElement('div'));\n        this.shadow.setClassName('diff-review-shadow');\n        this.actionBarContainer = createFastDomNode(document.createElement('div'));\n        this.actionBarContainer.setClassName('diff-review-actions');\n        this._actionBar = this._register(new ActionBar(this.actionBarContainer.domNode));\n        this._actionBar.push(new Action('diffreview.close', nls.localize('label.close', \"Close\"), 'close-diff-review ' + ThemeIcon.asClassName(diffReviewCloseIcon), true, () => __awaiter(this, void 0, void 0, function* () { return this.hide(); })), { label: false, icon: true });\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setClassName('diff-review monaco-editor-background');\n        this._content = createFastDomNode(document.createElement('div'));\n        this._content.setClassName('diff-review-content');\n        this._content.setAttribute('role', 'code');\n        this.scrollbar = this._register(new DomScrollableElement(this._content.domNode, {}));\n        this.domNode.domNode.appendChild(this.scrollbar.getDomNode());\n        this._register(diffEditor.onDidUpdateDiff(() => {\n            if (!this._isVisible) {\n                return;\n            }\n            this._diffs = this._compute();\n            this._render();\n        }));\n        this._register(diffEditor.getModifiedEditor().onDidChangeCursorPosition(() => {\n            if (!this._isVisible) {\n                return;\n            }\n            this._render();\n        }));\n        this._register(dom.addStandardDisposableListener(this.domNode.domNode, 'click', (e) => {\n            e.preventDefault();\n            const row = dom.findParentWithClass(e.target, 'diff-review-row');\n            if (row) {\n                this._goToRow(row);\n            }\n        }));\n        this._register(dom.addStandardDisposableListener(this.domNode.domNode, 'keydown', (e) => {\n            if (e.equals(18 /* KeyCode.DownArrow */)\n                || e.equals(2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */)\n                || e.equals(512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */)) {\n                e.preventDefault();\n                this._goToRow(this._getNextRow(), 'next');\n            }\n            if (e.equals(16 /* KeyCode.UpArrow */)\n                || e.equals(2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */)\n                || e.equals(512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */)) {\n                e.preventDefault();\n                this._goToRow(this._getPrevRow(), 'previous');\n            }\n            if (e.equals(9 /* KeyCode.Escape */)\n                || e.equals(2048 /* KeyMod.CtrlCmd */ | 9 /* KeyCode.Escape */)\n                || e.equals(512 /* KeyMod.Alt */ | 9 /* KeyCode.Escape */)\n                || e.equals(1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */)\n                || e.equals(10 /* KeyCode.Space */)\n                || e.equals(3 /* KeyCode.Enter */)) {\n                e.preventDefault();\n                this.accept();\n            }\n        }));\n        this._diffs = [];\n        this._currentDiff = null;\n    }\n    prev() {\n        let index = 0;\n        if (!this._isVisible) {\n            this._diffs = this._compute();\n        }\n        if (this._isVisible) {\n            let currentIndex = -1;\n            for (let i = 0, len = this._diffs.length; i < len; i++) {\n                if (this._diffs[i] === this._currentDiff) {\n                    currentIndex = i;\n                    break;\n                }\n            }\n            index = (this._diffs.length + currentIndex - 1);\n        }\n        else {\n            index = this._findDiffIndex(this._diffEditor.getPosition());\n        }\n        if (this._diffs.length === 0) {\n            // Nothing to do\n            return;\n        }\n        index = index % this._diffs.length;\n        const entries = this._diffs[index].entries;\n        this._diffEditor.setPosition(new Position(entries[0].modifiedLineStart, 1));\n        this._diffEditor.setSelection({ startColumn: 1, startLineNumber: entries[0].modifiedLineStart, endColumn: 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, endLineNumber: entries[entries.length - 1].modifiedLineEnd });\n        this._isVisible = true;\n        this._diffEditor.doLayout();\n        this._render();\n        this._goToRow(this._getPrevRow(), 'previous');\n    }\n    next() {\n        let index = 0;\n        if (!this._isVisible) {\n            this._diffs = this._compute();\n        }\n        if (this._isVisible) {\n            let currentIndex = -1;\n            for (let i = 0, len = this._diffs.length; i < len; i++) {\n                if (this._diffs[i] === this._currentDiff) {\n                    currentIndex = i;\n                    break;\n                }\n            }\n            index = (currentIndex + 1);\n        }\n        else {\n            index = this._findDiffIndex(this._diffEditor.getPosition());\n        }\n        if (this._diffs.length === 0) {\n            // Nothing to do\n            return;\n        }\n        index = index % this._diffs.length;\n        const entries = this._diffs[index].entries;\n        this._diffEditor.setPosition(new Position(entries[0].modifiedLineStart, 1));\n        this._diffEditor.setSelection({ startColumn: 1, startLineNumber: entries[0].modifiedLineStart, endColumn: 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, endLineNumber: entries[entries.length - 1].modifiedLineEnd });\n        this._isVisible = true;\n        this._diffEditor.doLayout();\n        this._render();\n        this._goToRow(this._getNextRow(), 'next');\n    }\n    accept() {\n        let jumpToLineNumber = -1;\n        const current = this._getCurrentFocusedRow();\n        if (current) {\n            const lineNumber = parseInt(current.getAttribute('data-line'), 10);\n            if (!isNaN(lineNumber)) {\n                jumpToLineNumber = lineNumber;\n            }\n        }\n        this.hide();\n        if (jumpToLineNumber !== -1) {\n            this._diffEditor.setPosition(new Position(jumpToLineNumber, 1));\n            this._diffEditor.revealPosition(new Position(jumpToLineNumber, 1), 1 /* ScrollType.Immediate */);\n        }\n    }\n    hide() {\n        this._isVisible = false;\n        this._diffEditor.updateOptions({ readOnly: false });\n        this._diffEditor.focus();\n        this._diffEditor.doLayout();\n        this._render();\n    }\n    _getPrevRow() {\n        const current = this._getCurrentFocusedRow();\n        if (!current) {\n            return this._getFirstRow();\n        }\n        if (current.previousElementSibling) {\n            return current.previousElementSibling;\n        }\n        return current;\n    }\n    _getNextRow() {\n        const current = this._getCurrentFocusedRow();\n        if (!current) {\n            return this._getFirstRow();\n        }\n        if (current.nextElementSibling) {\n            return current.nextElementSibling;\n        }\n        return current;\n    }\n    _getFirstRow() {\n        return this.domNode.domNode.querySelector('.diff-review-row');\n    }\n    _getCurrentFocusedRow() {\n        const result = document.activeElement;\n        if (result && /diff-review-row/.test(result.className)) {\n            return result;\n        }\n        return null;\n    }\n    _goToRow(row, type) {\n        const current = this._getCurrentFocusedRow();\n        row.tabIndex = 0;\n        row.focus();\n        if (current && current !== row) {\n            current.tabIndex = -1;\n        }\n        const element = !type ? current : type === 'next' ? current === null || current === void 0 ? void 0 : current.nextElementSibling : current === null || current === void 0 ? void 0 : current.previousElementSibling;\n        if (element === null || element === void 0 ? void 0 : element.classList.contains(\"line-insert\" /* DiffEditorLineClasses.Insert */)) {\n            this._audioCueService.playAudioCue(AudioCue.diffLineInserted, true);\n        }\n        else if (element === null || element === void 0 ? void 0 : element.classList.contains(\"line-delete\" /* DiffEditorLineClasses.Delete */)) {\n            this._audioCueService.playAudioCue(AudioCue.diffLineDeleted, true);\n        }\n        this.scrollbar.scanDomNode();\n    }\n    isVisible() {\n        return this._isVisible;\n    }\n    layout(top, width, height) {\n        this._width = width;\n        this.shadow.setTop(top - 6);\n        this.shadow.setWidth(width);\n        this.shadow.setHeight(this._isVisible ? 6 : 0);\n        this.domNode.setTop(top);\n        this.domNode.setWidth(width);\n        this.domNode.setHeight(height);\n        this._content.setHeight(height);\n        this._content.setWidth(width);\n        if (this._isVisible) {\n            this.actionBarContainer.setAttribute('aria-hidden', 'false');\n            this.actionBarContainer.setDisplay('block');\n        }\n        else {\n            this.actionBarContainer.setAttribute('aria-hidden', 'true');\n            this.actionBarContainer.setDisplay('none');\n        }\n    }\n    _compute() {\n        const lineChanges = this._diffEditor.getLineChanges();\n        if (!lineChanges || lineChanges.length === 0) {\n            return [];\n        }\n        const originalModel = this._diffEditor.getOriginalEditor().getModel();\n        const modifiedModel = this._diffEditor.getModifiedEditor().getModel();\n        if (!originalModel || !modifiedModel) {\n            return [];\n        }\n        return DiffReview._mergeAdjacent(lineChanges, originalModel.getLineCount(), modifiedModel.getLineCount());\n    }\n    static _mergeAdjacent(lineChanges, originalLineCount, modifiedLineCount) {\n        if (!lineChanges || lineChanges.length === 0) {\n            return [];\n        }\n        const diffs = [];\n        let diffsLength = 0;\n        for (let i = 0, len = lineChanges.length; i < len; i++) {\n            const lineChange = lineChanges[i];\n            const originalStart = lineChange.originalStartLineNumber;\n            const originalEnd = lineChange.originalEndLineNumber;\n            const modifiedStart = lineChange.modifiedStartLineNumber;\n            const modifiedEnd = lineChange.modifiedEndLineNumber;\n            const r = [];\n            let rLength = 0;\n            // Emit before anchors\n            {\n                const originalEqualAbove = (originalEnd === 0 ? originalStart : originalStart - 1);\n                const modifiedEqualAbove = (modifiedEnd === 0 ? modifiedStart : modifiedStart - 1);\n                // Make sure we don't step into the previous diff\n                let minOriginal = 1;\n                let minModified = 1;\n                if (i > 0) {\n                    const prevLineChange = lineChanges[i - 1];\n                    if (prevLineChange.originalEndLineNumber === 0) {\n                        minOriginal = prevLineChange.originalStartLineNumber + 1;\n                    }\n                    else {\n                        minOriginal = prevLineChange.originalEndLineNumber + 1;\n                    }\n                    if (prevLineChange.modifiedEndLineNumber === 0) {\n                        minModified = prevLineChange.modifiedStartLineNumber + 1;\n                    }\n                    else {\n                        minModified = prevLineChange.modifiedEndLineNumber + 1;\n                    }\n                }\n                let fromOriginal = originalEqualAbove - DIFF_LINES_PADDING + 1;\n                let fromModified = modifiedEqualAbove - DIFF_LINES_PADDING + 1;\n                if (fromOriginal < minOriginal) {\n                    const delta = minOriginal - fromOriginal;\n                    fromOriginal = fromOriginal + delta;\n                    fromModified = fromModified + delta;\n                }\n                if (fromModified < minModified) {\n                    const delta = minModified - fromModified;\n                    fromOriginal = fromOriginal + delta;\n                    fromModified = fromModified + delta;\n                }\n                r[rLength++] = new DiffEntry(fromOriginal, originalEqualAbove, fromModified, modifiedEqualAbove);\n            }\n            // Emit deleted lines\n            {\n                if (originalEnd !== 0) {\n                    r[rLength++] = new DiffEntry(originalStart, originalEnd, 0, 0);\n                }\n            }\n            // Emit inserted lines\n            {\n                if (modifiedEnd !== 0) {\n                    r[rLength++] = new DiffEntry(0, 0, modifiedStart, modifiedEnd);\n                }\n            }\n            // Emit after anchors\n            {\n                const originalEqualBelow = (originalEnd === 0 ? originalStart + 1 : originalEnd + 1);\n                const modifiedEqualBelow = (modifiedEnd === 0 ? modifiedStart + 1 : modifiedEnd + 1);\n                // Make sure we don't step into the next diff\n                let maxOriginal = originalLineCount;\n                let maxModified = modifiedLineCount;\n                if (i + 1 < len) {\n                    const nextLineChange = lineChanges[i + 1];\n                    if (nextLineChange.originalEndLineNumber === 0) {\n                        maxOriginal = nextLineChange.originalStartLineNumber;\n                    }\n                    else {\n                        maxOriginal = nextLineChange.originalStartLineNumber - 1;\n                    }\n                    if (nextLineChange.modifiedEndLineNumber === 0) {\n                        maxModified = nextLineChange.modifiedStartLineNumber;\n                    }\n                    else {\n                        maxModified = nextLineChange.modifiedStartLineNumber - 1;\n                    }\n                }\n                let toOriginal = originalEqualBelow + DIFF_LINES_PADDING - 1;\n                let toModified = modifiedEqualBelow + DIFF_LINES_PADDING - 1;\n                if (toOriginal > maxOriginal) {\n                    const delta = maxOriginal - toOriginal;\n                    toOriginal = toOriginal + delta;\n                    toModified = toModified + delta;\n                }\n                if (toModified > maxModified) {\n                    const delta = maxModified - toModified;\n                    toOriginal = toOriginal + delta;\n                    toModified = toModified + delta;\n                }\n                r[rLength++] = new DiffEntry(originalEqualBelow, toOriginal, modifiedEqualBelow, toModified);\n            }\n            diffs[diffsLength++] = new Diff(r);\n        }\n        // Merge adjacent diffs\n        let curr = diffs[0].entries;\n        const r = [];\n        let rLength = 0;\n        for (let i = 1, len = diffs.length; i < len; i++) {\n            const thisDiff = diffs[i].entries;\n            const currLast = curr[curr.length - 1];\n            const thisFirst = thisDiff[0];\n            if (currLast.getType() === 0 /* DiffEntryType.Equal */\n                && thisFirst.getType() === 0 /* DiffEntryType.Equal */\n                && thisFirst.originalLineStart <= currLast.originalLineEnd) {\n                // We are dealing with equal lines that overlap\n                curr[curr.length - 1] = new DiffEntry(currLast.originalLineStart, thisFirst.originalLineEnd, currLast.modifiedLineStart, thisFirst.modifiedLineEnd);\n                curr = curr.concat(thisDiff.slice(1));\n                continue;\n            }\n            r[rLength++] = new Diff(curr);\n            curr = thisDiff;\n        }\n        r[rLength++] = new Diff(curr);\n        return r;\n    }\n    _findDiffIndex(pos) {\n        const lineNumber = pos.lineNumber;\n        for (let i = 0, len = this._diffs.length; i < len; i++) {\n            const diff = this._diffs[i].entries;\n            const lastModifiedLine = diff[diff.length - 1].modifiedLineEnd;\n            if (lineNumber <= lastModifiedLine) {\n                return i;\n            }\n        }\n        return 0;\n    }\n    _render() {\n        const originalOptions = this._diffEditor.getOriginalEditor().getOptions();\n        const modifiedOptions = this._diffEditor.getModifiedEditor().getOptions();\n        const originalModel = this._diffEditor.getOriginalEditor().getModel();\n        const modifiedModel = this._diffEditor.getModifiedEditor().getModel();\n        const originalModelOpts = originalModel.getOptions();\n        const modifiedModelOpts = modifiedModel.getOptions();\n        if (!this._isVisible || !originalModel || !modifiedModel) {\n            dom.clearNode(this._content.domNode);\n            this._currentDiff = null;\n            this.scrollbar.scanDomNode();\n            return;\n        }\n        this._diffEditor.updateOptions({ readOnly: true });\n        const diffIndex = this._findDiffIndex(this._diffEditor.getPosition());\n        if (this._diffs[diffIndex] === this._currentDiff) {\n            return;\n        }\n        this._currentDiff = this._diffs[diffIndex];\n        const diffs = this._diffs[diffIndex].entries;\n        const container = document.createElement('div');\n        container.className = 'diff-review-table';\n        container.setAttribute('role', 'list');\n        container.setAttribute('aria-label', 'Difference review. Use \"Stage | Unstage | Revert Selected Ranges\" commands');\n        applyFontInfo(container, modifiedOptions.get(47 /* EditorOption.fontInfo */));\n        let minOriginalLine = 0;\n        let maxOriginalLine = 0;\n        let minModifiedLine = 0;\n        let maxModifiedLine = 0;\n        for (let i = 0, len = diffs.length; i < len; i++) {\n            const diffEntry = diffs[i];\n            const originalLineStart = diffEntry.originalLineStart;\n            const originalLineEnd = diffEntry.originalLineEnd;\n            const modifiedLineStart = diffEntry.modifiedLineStart;\n            const modifiedLineEnd = diffEntry.modifiedLineEnd;\n            if (originalLineStart !== 0 && ((minOriginalLine === 0 || originalLineStart < minOriginalLine))) {\n                minOriginalLine = originalLineStart;\n            }\n            if (originalLineEnd !== 0 && ((maxOriginalLine === 0 || originalLineEnd > maxOriginalLine))) {\n                maxOriginalLine = originalLineEnd;\n            }\n            if (modifiedLineStart !== 0 && ((minModifiedLine === 0 || modifiedLineStart < minModifiedLine))) {\n                minModifiedLine = modifiedLineStart;\n            }\n            if (modifiedLineEnd !== 0 && ((maxModifiedLine === 0 || modifiedLineEnd > maxModifiedLine))) {\n                maxModifiedLine = modifiedLineEnd;\n            }\n        }\n        const header = document.createElement('div');\n        header.className = 'diff-review-row';\n        const cell = document.createElement('div');\n        cell.className = 'diff-review-cell diff-review-summary';\n        const originalChangedLinesCnt = maxOriginalLine - minOriginalLine + 1;\n        const modifiedChangedLinesCnt = maxModifiedLine - minModifiedLine + 1;\n        cell.appendChild(document.createTextNode(`${diffIndex + 1}/${this._diffs.length}: @@ -${minOriginalLine},${originalChangedLinesCnt} +${minModifiedLine},${modifiedChangedLinesCnt} @@`));\n        header.setAttribute('data-line', String(minModifiedLine));\n        const getAriaLines = (lines) => {\n            if (lines === 0) {\n                return nls.localize('no_lines_changed', \"no lines changed\");\n            }\n            else if (lines === 1) {\n                return nls.localize('one_line_changed', \"1 line changed\");\n            }\n            else {\n                return nls.localize('more_lines_changed', \"{0} lines changed\", lines);\n            }\n        };\n        const originalChangedLinesCntAria = getAriaLines(originalChangedLinesCnt);\n        const modifiedChangedLinesCntAria = getAriaLines(modifiedChangedLinesCnt);\n        header.setAttribute('aria-label', nls.localize({\n            key: 'header',\n            comment: [\n                'This is the ARIA label for a git diff header.',\n                'A git diff header looks like this: @@ -154,12 +159,39 @@.',\n                'That encodes that at original line 154 (which is now line 159), 12 lines were removed/changed with 39 lines.',\n                'Variables 0 and 1 refer to the diff index out of total number of diffs.',\n                'Variables 2 and 4 will be numbers (a line number).',\n                'Variables 3 and 5 will be \"no lines changed\", \"1 line changed\" or \"X lines changed\", localized separately.'\n            ]\n        }, \"Difference {0} of {1}: original line {2}, {3}, modified line {4}, {5}\", (diffIndex + 1), this._diffs.length, minOriginalLine, originalChangedLinesCntAria, minModifiedLine, modifiedChangedLinesCntAria));\n        header.appendChild(cell);\n        // @@ -504,7 +517,7 @@\n        header.setAttribute('role', 'listitem');\n        container.appendChild(header);\n        const lineHeight = modifiedOptions.get(63 /* EditorOption.lineHeight */);\n        let modLine = minModifiedLine;\n        for (let i = 0, len = diffs.length; i < len; i++) {\n            const diffEntry = diffs[i];\n            DiffReview._renderSection(container, diffEntry, modLine, lineHeight, this._width, originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts, this._languageService.languageIdCodec);\n            if (diffEntry.modifiedLineStart !== 0) {\n                modLine = diffEntry.modifiedLineEnd;\n            }\n        }\n        dom.clearNode(this._content.domNode);\n        this._content.domNode.appendChild(container);\n        this.scrollbar.scanDomNode();\n    }\n    static _renderSection(dest, diffEntry, modLine, lineHeight, width, originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts, languageIdCodec) {\n        const type = diffEntry.getType();\n        let rowClassName = 'diff-review-row';\n        let lineNumbersExtraClassName = '';\n        const spacerClassName = 'diff-review-spacer';\n        let spacerIcon = null;\n        switch (type) {\n            case 1 /* DiffEntryType.Insert */:\n                rowClassName = 'diff-review-row line-insert';\n                lineNumbersExtraClassName = ' char-insert';\n                spacerIcon = diffReviewInsertIcon;\n                break;\n            case 2 /* DiffEntryType.Delete */:\n                rowClassName = 'diff-review-row line-delete';\n                lineNumbersExtraClassName = ' char-delete';\n                spacerIcon = diffReviewRemoveIcon;\n                break;\n        }\n        const originalLineStart = diffEntry.originalLineStart;\n        const originalLineEnd = diffEntry.originalLineEnd;\n        const modifiedLineStart = diffEntry.modifiedLineStart;\n        const modifiedLineEnd = diffEntry.modifiedLineEnd;\n        const cnt = Math.max(modifiedLineEnd - modifiedLineStart, originalLineEnd - originalLineStart);\n        const originalLayoutInfo = originalOptions.get(138 /* EditorOption.layoutInfo */);\n        const originalLineNumbersWidth = originalLayoutInfo.glyphMarginWidth + originalLayoutInfo.lineNumbersWidth;\n        const modifiedLayoutInfo = modifiedOptions.get(138 /* EditorOption.layoutInfo */);\n        const modifiedLineNumbersWidth = 10 + modifiedLayoutInfo.glyphMarginWidth + modifiedLayoutInfo.lineNumbersWidth;\n        for (let i = 0; i <= cnt; i++) {\n            const originalLine = (originalLineStart === 0 ? 0 : originalLineStart + i);\n            const modifiedLine = (modifiedLineStart === 0 ? 0 : modifiedLineStart + i);\n            const row = document.createElement('div');\n            row.style.minWidth = width + 'px';\n            row.className = rowClassName;\n            row.setAttribute('role', 'listitem');\n            if (modifiedLine !== 0) {\n                modLine = modifiedLine;\n            }\n            row.setAttribute('data-line', String(modLine));\n            const cell = document.createElement('div');\n            cell.className = 'diff-review-cell';\n            cell.style.height = `${lineHeight}px`;\n            row.appendChild(cell);\n            const originalLineNumber = document.createElement('span');\n            originalLineNumber.style.width = (originalLineNumbersWidth + 'px');\n            originalLineNumber.style.minWidth = (originalLineNumbersWidth + 'px');\n            originalLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n            if (originalLine !== 0) {\n                originalLineNumber.appendChild(document.createTextNode(String(originalLine)));\n            }\n            else {\n                originalLineNumber.innerText = '\\u00a0';\n            }\n            cell.appendChild(originalLineNumber);\n            const modifiedLineNumber = document.createElement('span');\n            modifiedLineNumber.style.width = (modifiedLineNumbersWidth + 'px');\n            modifiedLineNumber.style.minWidth = (modifiedLineNumbersWidth + 'px');\n            modifiedLineNumber.style.paddingRight = '10px';\n            modifiedLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n            if (modifiedLine !== 0) {\n                modifiedLineNumber.appendChild(document.createTextNode(String(modifiedLine)));\n            }\n            else {\n                modifiedLineNumber.innerText = '\\u00a0';\n            }\n            cell.appendChild(modifiedLineNumber);\n            const spacer = document.createElement('span');\n            spacer.className = spacerClassName;\n            if (spacerIcon) {\n                const spacerCodicon = document.createElement('span');\n                spacerCodicon.className = ThemeIcon.asClassName(spacerIcon);\n                spacerCodicon.innerText = '\\u00a0\\u00a0';\n                spacer.appendChild(spacerCodicon);\n            }\n            else {\n                spacer.innerText = '\\u00a0\\u00a0';\n            }\n            cell.appendChild(spacer);\n            let lineContent;\n            if (modifiedLine !== 0) {\n                let html = this._renderLine(modifiedModel, modifiedOptions, modifiedModelOpts.tabSize, modifiedLine, languageIdCodec);\n                if (DiffReview._ttPolicy) {\n                    html = DiffReview._ttPolicy.createHTML(html);\n                }\n                cell.insertAdjacentHTML('beforeend', html);\n                lineContent = modifiedModel.getLineContent(modifiedLine);\n            }\n            else {\n                let html = this._renderLine(originalModel, originalOptions, originalModelOpts.tabSize, originalLine, languageIdCodec);\n                if (DiffReview._ttPolicy) {\n                    html = DiffReview._ttPolicy.createHTML(html);\n                }\n                cell.insertAdjacentHTML('beforeend', html);\n                lineContent = originalModel.getLineContent(originalLine);\n            }\n            if (lineContent.length === 0) {\n                lineContent = nls.localize('blankLine', \"blank\");\n            }\n            let ariaLabel = '';\n            switch (type) {\n                case 0 /* DiffEntryType.Equal */:\n                    if (originalLine === modifiedLine) {\n                        ariaLabel = nls.localize({ key: 'unchangedLine', comment: ['The placeholders are contents of the line and should not be translated.'] }, \"{0} unchanged line {1}\", lineContent, originalLine);\n                    }\n                    else {\n                        ariaLabel = nls.localize('equalLine', \"{0} original line {1} modified line {2}\", lineContent, originalLine, modifiedLine);\n                    }\n                    break;\n                case 1 /* DiffEntryType.Insert */:\n                    ariaLabel = nls.localize('insertLine', \"+ {0} modified line {1}\", lineContent, modifiedLine);\n                    break;\n                case 2 /* DiffEntryType.Delete */:\n                    ariaLabel = nls.localize('deleteLine', \"- {0} original line {1}\", lineContent, originalLine);\n                    break;\n            }\n            row.setAttribute('aria-label', ariaLabel);\n            dest.appendChild(row);\n        }\n    }\n    static _renderLine(model, options, tabSize, lineNumber, languageIdCodec) {\n        const lineContent = model.getLineContent(lineNumber);\n        const fontInfo = options.get(47 /* EditorOption.fontInfo */);\n        const lineTokens = LineTokens.createEmpty(lineContent, languageIdCodec);\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, model.mightContainNonBasicASCII());\n        const containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, model.mightContainRTL());\n        const r = renderViewLine(new RenderLineInput((fontInfo.isMonospace && !options.get(30 /* EditorOption.disableMonospaceOptimizations */)), fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, [], tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, options.get(111 /* EditorOption.stopRenderingLineAfter */), options.get(93 /* EditorOption.renderWhitespace */), options.get(88 /* EditorOption.renderControlCharacters */), options.get(48 /* EditorOption.fontLigatures */) !== EditorFontLigatures.OFF, null));\n        return r.html;\n    }\n};\nDiffReview._ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('diffReview', { createHTML: value => value });\nDiffReview = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IAudioCueService)\n], DiffReview);\nexport { DiffReview };\n// theming\nclass DiffReviewNext extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.diffReview.next',\n            label: nls.localize('editor.action.diffReview.next', \"Go to Next Difference\"),\n            alias: 'Go to Next Difference',\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n            kbOpts: {\n                kbExpr: null,\n                primary: 65 /* KeyCode.F7 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const diffEditor = findFocusedDiffEditor(accessor);\n        diffEditor === null || diffEditor === void 0 ? void 0 : diffEditor.diffReviewNext();\n    }\n}\nclass DiffReviewPrev extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.diffReview.prev',\n            label: nls.localize('editor.action.diffReview.prev', \"Go to Previous Difference\"),\n            alias: 'Go to Previous Difference',\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n            kbOpts: {\n                kbExpr: null,\n                primary: 1024 /* KeyMod.Shift */ | 65 /* KeyCode.F7 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const diffEditor = findFocusedDiffEditor(accessor);\n        diffEditor === null || diffEditor === void 0 ? void 0 : diffEditor.diffReviewPrev();\n    }\n}\nfunction findFocusedDiffEditor(accessor) {\n    const codeEditorService = accessor.get(ICodeEditorService);\n    const diffEditors = codeEditorService.listDiffEditors();\n    const activeCodeEditor = codeEditorService.getActiveCodeEditor();\n    if (!activeCodeEditor) {\n        return null;\n    }\n    for (let i = 0, len = diffEditors.length; i < len; i++) {\n        const diffEditor = diffEditors[i];\n        if (diffEditor.getModifiedEditor().getId() === activeCodeEditor.getId() || diffEditor.getOriginalEditor().getId() === activeCodeEditor.getId()) {\n            return diffEditor;\n        }\n    }\n    return null;\n}\nregisterEditorAction(DiffReviewNext);\nregisterEditorAction(DiffReviewPrev);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { Action } from '../../../base/common/actions.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Range } from '../../common/core/range.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nexport class InlineDiffMargin extends Disposable {\n    get visibility() {\n        return this._visibility;\n    }\n    set visibility(_visibility) {\n        if (this._visibility !== _visibility) {\n            this._visibility = _visibility;\n            if (_visibility) {\n                this._diffActions.style.visibility = 'visible';\n            }\n            else {\n                this._diffActions.style.visibility = 'hidden';\n            }\n        }\n    }\n    constructor(_viewZoneId, _marginDomNode, editor, diff, _contextMenuService, _clipboardService) {\n        super();\n        this._viewZoneId = _viewZoneId;\n        this._marginDomNode = _marginDomNode;\n        this.editor = editor;\n        this.diff = diff;\n        this._contextMenuService = _contextMenuService;\n        this._clipboardService = _clipboardService;\n        this._visibility = false;\n        // make sure the diff margin shows above overlay.\n        this._marginDomNode.style.zIndex = '10';\n        this._diffActions = document.createElement('div');\n        this._diffActions.className = ThemeIcon.asClassName(Codicon.lightBulb) + ' lightbulb-glyph';\n        this._diffActions.style.position = 'absolute';\n        const lineHeight = editor.getOption(63 /* EditorOption.lineHeight */);\n        const lineFeed = editor.getModel().getEOL();\n        this._diffActions.style.right = '0px';\n        this._diffActions.style.visibility = 'hidden';\n        this._diffActions.style.height = `${lineHeight}px`;\n        this._diffActions.style.lineHeight = `${lineHeight}px`;\n        this._marginDomNode.appendChild(this._diffActions);\n        const actions = [];\n        const isDeletion = diff.modifiedEndLineNumber === 0;\n        // default action\n        actions.push(new Action('diff.clipboard.copyDeletedContent', isDeletion\n            ? (diff.originalEndLineNumber > diff.modifiedStartLineNumber\n                ? nls.localize('diff.clipboard.copyDeletedLinesContent.label', \"Copy deleted lines\")\n                : nls.localize('diff.clipboard.copyDeletedLinesContent.single.label', \"Copy deleted line\"))\n            : (diff.originalEndLineNumber > diff.modifiedStartLineNumber\n                ? nls.localize('diff.clipboard.copyChangedLinesContent.label', \"Copy changed lines\")\n                : nls.localize('diff.clipboard.copyChangedLinesContent.single.label', \"Copy changed line\")), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n            const range = new Range(diff.originalStartLineNumber, 1, diff.originalEndLineNumber + 1, 1);\n            const deletedText = diff.originalModel.getValueInRange(range);\n            yield this._clipboardService.writeText(deletedText);\n        })));\n        let currentLineNumberOffset = 0;\n        let copyLineAction = undefined;\n        if (diff.originalEndLineNumber > diff.modifiedStartLineNumber) {\n            copyLineAction = new Action('diff.clipboard.copyDeletedLineContent', isDeletion\n                ? nls.localize('diff.clipboard.copyDeletedLineContent.label', \"Copy deleted line ({0})\", diff.originalStartLineNumber)\n                : nls.localize('diff.clipboard.copyChangedLineContent.label', \"Copy changed line ({0})\", diff.originalStartLineNumber), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                const lineContent = diff.originalModel.getLineContent(diff.originalStartLineNumber + currentLineNumberOffset);\n                if (lineContent === '') {\n                    // empty line\n                    const eof = diff.originalModel.getEndOfLineSequence();\n                    yield this._clipboardService.writeText(eof === 0 /* EndOfLineSequence.LF */ ? '\\n' : '\\r\\n');\n                }\n                else {\n                    yield this._clipboardService.writeText(lineContent);\n                }\n            }));\n            actions.push(copyLineAction);\n        }\n        const readOnly = editor.getOption(86 /* EditorOption.readOnly */);\n        if (!readOnly) {\n            actions.push(new Action('diff.inline.revertChange', nls.localize('diff.inline.revertChange.label', \"Revert this change\"), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                const range = new Range(diff.originalStartLineNumber, 1, diff.originalEndLineNumber, diff.originalModel.getLineMaxColumn(diff.originalEndLineNumber));\n                const deletedText = diff.originalModel.getValueInRange(range);\n                if (diff.modifiedEndLineNumber === 0) {\n                    // deletion only\n                    const column = editor.getModel().getLineMaxColumn(diff.modifiedStartLineNumber);\n                    editor.executeEdits('diffEditor', [\n                        {\n                            range: new Range(diff.modifiedStartLineNumber, column, diff.modifiedStartLineNumber, column),\n                            text: lineFeed + deletedText\n                        }\n                    ]);\n                }\n                else {\n                    const column = editor.getModel().getLineMaxColumn(diff.modifiedEndLineNumber);\n                    editor.executeEdits('diffEditor', [\n                        {\n                            range: new Range(diff.modifiedStartLineNumber, 1, diff.modifiedEndLineNumber, column),\n                            text: deletedText\n                        }\n                    ]);\n                }\n            })));\n        }\n        const showContextMenu = (x, y) => {\n            this._contextMenuService.showContextMenu({\n                getAnchor: () => {\n                    return {\n                        x,\n                        y\n                    };\n                },\n                getActions: () => {\n                    if (copyLineAction) {\n                        copyLineAction.label =\n                            isDeletion\n                                ? nls.localize('diff.clipboard.copyDeletedLineContent.label', \"Copy deleted line ({0})\", diff.originalStartLineNumber + currentLineNumberOffset)\n                                : nls.localize('diff.clipboard.copyChangedLineContent.label', \"Copy changed line ({0})\", diff.originalStartLineNumber + currentLineNumberOffset);\n                    }\n                    return actions;\n                },\n                autoSelectFirstItem: true\n            });\n        };\n        this._register(dom.addStandardDisposableListener(this._diffActions, 'mousedown', e => {\n            const { top, height } = dom.getDomNodePagePosition(this._diffActions);\n            const pad = Math.floor(lineHeight / 3);\n            e.preventDefault();\n            showContextMenu(e.posx, top + height + pad);\n        }));\n        this._register(editor.onMouseMove((e) => {\n            if (e.target.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */ || e.target.type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */) {\n                const viewZoneId = e.target.detail.viewZoneId;\n                if (viewZoneId === this._viewZoneId) {\n                    this.visibility = true;\n                    currentLineNumberOffset = this._updateLightBulbPosition(this._marginDomNode, e.event.browserEvent.y, lineHeight);\n                }\n                else {\n                    this.visibility = false;\n                }\n            }\n            else {\n                this.visibility = false;\n            }\n        }));\n        this._register(editor.onMouseDown((e) => {\n            if (!e.event.rightButton) {\n                return;\n            }\n            if (e.target.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */ || e.target.type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */) {\n                const viewZoneId = e.target.detail.viewZoneId;\n                if (viewZoneId === this._viewZoneId) {\n                    e.event.preventDefault();\n                    currentLineNumberOffset = this._updateLightBulbPosition(this._marginDomNode, e.event.browserEvent.y, lineHeight);\n                    showContextMenu(e.event.posx, e.event.posy + lineHeight);\n                }\n            }\n        }));\n    }\n    _updateLightBulbPosition(marginDomNode, y, lineHeight) {\n        const { top } = dom.getDomNodePagePosition(marginDomNode);\n        const offset = y - top;\n        const lineNumberOffset = Math.floor(offset / lineHeight);\n        const newTop = lineNumberOffset * lineHeight;\n        this._diffActions.style.top = `${newTop}px`;\n        if (this.diff.viewLineCounts) {\n            let acc = 0;\n            for (let i = 0; i < this.diff.viewLineCounts.length; i++) {\n                acc += this.diff.viewLineCounts[i];\n                if (lineNumberOffset < acc) {\n                    return i;\n                }\n            }\n        }\n        return lineNumberOffset;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Emitter } from '../../../base/common/event.js';\nimport { IEditorWorkerService } from '../../common/services/editorWorker.js';\nlet WorkerBasedDocumentDiffProvider = class WorkerBasedDocumentDiffProvider {\n    constructor(options, editorWorkerService) {\n        this.editorWorkerService = editorWorkerService;\n        this.onDidChangeEventEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEventEmitter.event;\n        this.diffAlgorithm = 'smart';\n        this.diffAlgorithmOnDidChangeSubscription = undefined;\n        this.setOptions(options);\n    }\n    dispose() {\n        var _a;\n        (_a = this.diffAlgorithmOnDidChangeSubscription) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    computeDiff(original, modified, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.diffAlgorithm !== 'string') {\n                return this.diffAlgorithm.computeDiff(original, modified, options);\n            }\n            const result = yield this.editorWorkerService.computeDiff(original.uri, modified.uri, options, this.diffAlgorithm);\n            if (!result) {\n                throw new Error('no diff result available');\n            }\n            return result;\n        });\n    }\n    setOptions(newOptions) {\n        var _a;\n        let didChange = false;\n        if (newOptions.diffAlgorithm) {\n            if (this.diffAlgorithm !== newOptions.diffAlgorithm) {\n                (_a = this.diffAlgorithmOnDidChangeSubscription) === null || _a === void 0 ? void 0 : _a.dispose();\n                this.diffAlgorithmOnDidChangeSubscription = undefined;\n                this.diffAlgorithm = newOptions.diffAlgorithm;\n                if (typeof newOptions.diffAlgorithm !== 'string') {\n                    this.diffAlgorithmOnDidChangeSubscription = newOptions.diffAlgorithm.onDidChange(() => this.onDidChangeEventEmitter.fire());\n                }\n                didChange = true;\n            }\n        }\n        if (didChange) {\n            this.onDidChangeEventEmitter.fire();\n        }\n    }\n};\nWorkerBasedDocumentDiffProvider = __decorate([\n    __param(1, IEditorWorkerService)\n], WorkerBasedDocumentDiffProvider);\nexport { WorkerBasedDocumentDiffProvider };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar _a;\nimport * as dom from '../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../base/browser/ui/mouseCursor/mouseCursor.js';\nimport { Sash } from '../../../base/browser/ui/sash/sash.js';\nimport * as assert from '../../../base/common/assert.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport './media/diffEditor.css';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { ElementSizeObserver } from '../config/elementSizeObserver.js';\nimport { EditorExtensionsRegistry } from '../editorExtensions.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { StableEditorScrollState } from '../stableEditorScroll.js';\nimport { CodeEditorWidget } from './codeEditorWidget.js';\nimport { DiffReview } from './diffReview.js';\nimport { InlineDiffMargin } from './inlineDiffMargin.js';\nimport { WorkerBasedDocumentDiffProvider } from './workerBasedDocumentDiffProvider.js';\nimport { boolean as validateBooleanOption, clampedInt, EditorFontLigatures, EditorOptions, stringSet as validateStringSetOption } from '../../common/config/editorOptions.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { StringBuilder } from '../../common/core/stringBuilder.js';\nimport * as editorCommon from '../../common/editorCommon.js';\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\nimport { LineDecoration } from '../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\nimport { InlineDecoration, ViewLineRenderingData } from '../../common/viewModel.js';\nimport { OverviewRulerZone } from '../../common/viewModel/overviewZoneManager.js';\nimport * as nls from '../../../nls.js';\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\nimport { defaultInsertColor, defaultRemoveColor, diffDiagonalFill, diffInserted, diffOverviewRulerInserted, diffOverviewRulerRemoved, diffRemoved } from '../../../platform/theme/common/colorRegistry.js';\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\nimport { getThemeTypeSelector, IThemeService, registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nclass VisualEditorState {\n    constructor(_contextMenuService, _clipboardService) {\n        this._contextMenuService = _contextMenuService;\n        this._clipboardService = _clipboardService;\n        this._zones = [];\n        this._inlineDiffMargins = [];\n        this._zonesMap = {};\n        this._decorations = [];\n    }\n    getForeignViewZones(allViewZones) {\n        return allViewZones.filter((z) => !this._zonesMap[String(z.id)]);\n    }\n    clean(editor) {\n        // (1) View zones\n        if (this._zones.length > 0) {\n            editor.changeViewZones((viewChangeAccessor) => {\n                for (const zoneId of this._zones) {\n                    viewChangeAccessor.removeZone(zoneId);\n                }\n            });\n        }\n        this._zones = [];\n        this._zonesMap = {};\n        // (2) Model decorations\n        editor.changeDecorations((changeAccessor) => {\n            this._decorations = changeAccessor.deltaDecorations(this._decorations, []);\n        });\n    }\n    apply(editor, overviewRuler, newDecorations, restoreScrollState) {\n        const scrollState = restoreScrollState ? StableEditorScrollState.capture(editor) : null;\n        // view zones\n        editor.changeViewZones((viewChangeAccessor) => {\n            var _a;\n            for (const zoneId of this._zones) {\n                viewChangeAccessor.removeZone(zoneId);\n            }\n            for (const inlineDiffMargin of this._inlineDiffMargins) {\n                inlineDiffMargin.dispose();\n            }\n            this._zones = [];\n            this._zonesMap = {};\n            this._inlineDiffMargins = [];\n            for (let i = 0, length = newDecorations.zones.length; i < length; i++) {\n                const viewZone = newDecorations.zones[i];\n                viewZone.suppressMouseDown = true;\n                const zoneId = viewChangeAccessor.addZone(viewZone);\n                this._zones.push(zoneId);\n                this._zonesMap[String(zoneId)] = true;\n                if (newDecorations.zones[i].diff && viewZone.marginDomNode) {\n                    viewZone.suppressMouseDown = false;\n                    if (((_a = newDecorations.zones[i].diff) === null || _a === void 0 ? void 0 : _a.originalModel.getValueLength()) !== 0) {\n                        // do not contribute diff margin actions for newly created files\n                        this._inlineDiffMargins.push(new InlineDiffMargin(zoneId, viewZone.marginDomNode, editor, newDecorations.zones[i].diff, this._contextMenuService, this._clipboardService));\n                    }\n                }\n            }\n        });\n        scrollState === null || scrollState === void 0 ? void 0 : scrollState.restore(editor);\n        // decorations\n        editor.changeDecorations((changeAccessor) => {\n            this._decorations = changeAccessor.deltaDecorations(this._decorations, newDecorations.decorations);\n        });\n        // overview ruler\n        overviewRuler === null || overviewRuler === void 0 ? void 0 : overviewRuler.setZones(newDecorations.overviewZones);\n    }\n}\nlet DIFF_EDITOR_ID = 0;\nconst diffInsertIcon = registerIcon('diff-insert', Codicon.add, nls.localize('diffInsertIcon', 'Line decoration for inserts in the diff editor.'));\nconst diffRemoveIcon = registerIcon('diff-remove', Codicon.remove, nls.localize('diffRemoveIcon', 'Line decoration for removals in the diff editor.'));\nconst ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('diffEditorWidget', { createHTML: value => value });\nconst ariaNavigationTip = nls.localize('diff-aria-navigation-tip', ' use Shift + F7 to navigate changes');\nlet DiffEditorWidget = class DiffEditorWidget extends Disposable {\n    constructor(domElement, options, codeEditorWidgetOptions, clipboardService, contextKeyService, instantiationService, codeEditorService, themeService, notificationService, contextMenuService, _editorProgressService) {\n        super();\n        this._editorProgressService = _editorProgressService;\n        this._onDidDispose = this._register(new Emitter());\n        this.onDidDispose = this._onDidDispose.event;\n        this._onDidChangeModel = this._register(new Emitter());\n        this.onDidChangeModel = this._onDidChangeModel.event;\n        this._onDidUpdateDiff = this._register(new Emitter());\n        this.onDidUpdateDiff = this._onDidUpdateDiff.event;\n        this._onDidContentSizeChange = this._register(new Emitter());\n        this._lastOriginalWarning = null;\n        this._lastModifiedWarning = null;\n        codeEditorService.willCreateDiffEditor();\n        this._documentDiffProvider = this._register(instantiationService.createInstance(WorkerBasedDocumentDiffProvider, options));\n        this._register(this._documentDiffProvider.onDidChange(e => this._beginUpdateDecorationsSoon()));\n        this._codeEditorService = codeEditorService;\n        this._contextKeyService = this._register(contextKeyService.createScoped(domElement));\n        this._instantiationService = instantiationService.createChild(new ServiceCollection([IContextKeyService, this._contextKeyService]));\n        this._contextKeyService.createKey('isInDiffEditor', true);\n        this._themeService = themeService;\n        this._notificationService = notificationService;\n        this._id = (++DIFF_EDITOR_ID);\n        this._state = 0 /* editorBrowser.DiffEditorState.Idle */;\n        this._updatingDiffProgress = null;\n        this._domElement = domElement;\n        options = options || {};\n        this._options = validateDiffEditorOptions(options, {\n            enableSplitViewResizing: true,\n            renderSideBySide: true,\n            renderMarginRevertIcon: true,\n            maxComputationTime: 5000,\n            maxFileSize: 50,\n            ignoreTrimWhitespace: true,\n            renderIndicators: true,\n            originalEditable: false,\n            diffCodeLens: false,\n            renderOverviewRuler: true,\n            diffWordWrap: 'inherit',\n            diffAlgorithm: 'smart',\n        });\n        if (typeof options.isInEmbeddedEditor !== 'undefined') {\n            this._contextKeyService.createKey('isInEmbeddedDiffEditor', options.isInEmbeddedEditor);\n        }\n        else {\n            this._contextKeyService.createKey('isInEmbeddedDiffEditor', false);\n        }\n        this._updateDecorationsRunner = this._register(new RunOnceScheduler(() => this._updateDecorations(), 0));\n        this._containerDomElement = document.createElement('div');\n        this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._options.renderSideBySide);\n        this._containerDomElement.style.position = 'relative';\n        this._containerDomElement.style.height = '100%';\n        this._domElement.appendChild(this._containerDomElement);\n        this._overviewViewportDomElement = createFastDomNode(document.createElement('div'));\n        this._overviewViewportDomElement.setClassName('diffViewport');\n        this._overviewViewportDomElement.setPosition('absolute');\n        this._overviewDomElement = document.createElement('div');\n        this._overviewDomElement.className = 'diffOverview';\n        this._overviewDomElement.style.position = 'absolute';\n        this._overviewDomElement.appendChild(this._overviewViewportDomElement.domNode);\n        this._register(dom.addStandardDisposableListener(this._overviewDomElement, dom.EventType.POINTER_DOWN, (e) => {\n            this._modifiedEditor.delegateVerticalScrollbarPointerDown(e);\n        }));\n        this._register(dom.addDisposableListener(this._overviewDomElement, dom.EventType.MOUSE_WHEEL, (e) => {\n            this._modifiedEditor.delegateScrollFromMouseWheelEvent(e);\n        }, { passive: false }));\n        if (this._options.renderOverviewRuler) {\n            this._containerDomElement.appendChild(this._overviewDomElement);\n        }\n        // Create left side\n        this._originalDomNode = document.createElement('div');\n        this._originalDomNode.className = 'editor original';\n        this._originalDomNode.style.position = 'absolute';\n        this._originalDomNode.style.height = '100%';\n        this._containerDomElement.appendChild(this._originalDomNode);\n        // Create right side\n        this._modifiedDomNode = document.createElement('div');\n        this._modifiedDomNode.className = 'editor modified';\n        this._modifiedDomNode.style.position = 'absolute';\n        this._modifiedDomNode.style.height = '100%';\n        this._containerDomElement.appendChild(this._modifiedDomNode);\n        this._beginUpdateDecorationsTimeout = -1;\n        this._currentlyChangingViewZones = false;\n        this._diffComputationToken = 0;\n        this._originalEditorState = new VisualEditorState(contextMenuService, clipboardService);\n        this._modifiedEditorState = new VisualEditorState(contextMenuService, clipboardService);\n        this._isVisible = true;\n        this._isHandlingScrollEvent = false;\n        this._elementSizeObserver = this._register(new ElementSizeObserver(this._containerDomElement, options.dimension));\n        this._register(this._elementSizeObserver.onDidChange(() => this._onDidContainerSizeChanged()));\n        if (options.automaticLayout) {\n            this._elementSizeObserver.startObserving();\n        }\n        this._diffComputationResult = null;\n        this._originalEditor = this._createLeftHandSideEditor(options, codeEditorWidgetOptions.originalEditor || {});\n        this._modifiedEditor = this._createRightHandSideEditor(options, codeEditorWidgetOptions.modifiedEditor || {});\n        this._originalOverviewRuler = null;\n        this._modifiedOverviewRuler = null;\n        this._reviewPane = instantiationService.createInstance(DiffReview, this);\n        this._containerDomElement.appendChild(this._reviewPane.domNode.domNode);\n        this._containerDomElement.appendChild(this._reviewPane.shadow.domNode);\n        this._containerDomElement.appendChild(this._reviewPane.actionBarContainer.domNode);\n        if (this._options.renderSideBySide) {\n            this._setStrategy(new DiffEditorWidgetSideBySide(this._createDataSource(), this._options.enableSplitViewResizing));\n        }\n        else {\n            this._setStrategy(new DiffEditorWidgetInline(this._createDataSource(), this._options.enableSplitViewResizing));\n        }\n        this._register(themeService.onDidColorThemeChange(t => {\n            if (this._strategy && this._strategy.applyColors(t)) {\n                this._updateDecorationsRunner.schedule();\n            }\n            this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._options.renderSideBySide);\n        }));\n        const contributions = EditorExtensionsRegistry.getDiffEditorContributions();\n        for (const desc of contributions) {\n            try {\n                this._register(instantiationService.createInstance(desc.ctor, this));\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n        }\n        this._codeEditorService.addDiffEditor(this);\n    }\n    _setState(newState) {\n        if (this._state === newState) {\n            return;\n        }\n        this._state = newState;\n        if (this._updatingDiffProgress) {\n            this._updatingDiffProgress.done();\n            this._updatingDiffProgress = null;\n        }\n        if (this._state === 1 /* editorBrowser.DiffEditorState.ComputingDiff */) {\n            this._updatingDiffProgress = this._editorProgressService.show(true, 1000);\n        }\n    }\n    diffReviewNext() {\n        this._reviewPane.next();\n    }\n    diffReviewPrev() {\n        this._reviewPane.prev();\n    }\n    static _getClassName(theme, renderSideBySide) {\n        let result = 'monaco-diff-editor monaco-editor-background ';\n        if (renderSideBySide) {\n            result += 'side-by-side ';\n        }\n        result += getThemeTypeSelector(theme.type);\n        return result;\n    }\n    _disposeOverviewRulers() {\n        if (this._originalOverviewRuler) {\n            this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode());\n            this._originalOverviewRuler.dispose();\n            this._originalOverviewRuler = null;\n        }\n        if (this._modifiedOverviewRuler) {\n            this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode());\n            this._modifiedOverviewRuler.dispose();\n            this._modifiedOverviewRuler = null;\n        }\n    }\n    _createOverviewRulers() {\n        if (!this._options.renderOverviewRuler) {\n            return;\n        }\n        assert.ok(!this._originalOverviewRuler && !this._modifiedOverviewRuler);\n        if (this._originalEditor.hasModel()) {\n            this._originalOverviewRuler = this._originalEditor.createOverviewRuler('original diffOverviewRuler');\n            this._overviewDomElement.appendChild(this._originalOverviewRuler.getDomNode());\n        }\n        if (this._modifiedEditor.hasModel()) {\n            this._modifiedOverviewRuler = this._modifiedEditor.createOverviewRuler('modified diffOverviewRuler');\n            this._overviewDomElement.appendChild(this._modifiedOverviewRuler.getDomNode());\n        }\n        this._layoutOverviewRulers();\n    }\n    _createLeftHandSideEditor(options, codeEditorWidgetOptions) {\n        const editor = this._createInnerEditor(this._instantiationService, this._originalDomNode, this._adjustOptionsForLeftHandSide(options), codeEditorWidgetOptions);\n        this._register(editor.onDidScrollChange((e) => {\n            if (this._isHandlingScrollEvent) {\n                return;\n            }\n            if (!e.scrollTopChanged && !e.scrollLeftChanged && !e.scrollHeightChanged) {\n                return;\n            }\n            this._isHandlingScrollEvent = true;\n            this._modifiedEditor.setScrollPosition({\n                scrollLeft: e.scrollLeft,\n                scrollTop: e.scrollTop\n            });\n            this._isHandlingScrollEvent = false;\n            this._layoutOverviewViewport();\n        }));\n        this._register(editor.onDidChangeViewZones(() => {\n            this._onViewZonesChanged();\n        }));\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (!editor.getModel()) {\n                return;\n            }\n            if (e.hasChanged(47 /* EditorOption.fontInfo */)) {\n                this._updateDecorationsRunner.schedule();\n            }\n            if (e.hasChanged(139 /* EditorOption.wrappingInfo */)) {\n                this._updateDecorationsRunner.cancel();\n                this._updateDecorations();\n            }\n        }));\n        this._register(editor.onDidChangeHiddenAreas(() => {\n            this._updateDecorationsRunner.cancel();\n            this._updateDecorations();\n        }));\n        this._register(editor.onDidChangeModelContent(() => {\n            if (this._isVisible) {\n                this._beginUpdateDecorationsSoon();\n            }\n        }));\n        const isInDiffLeftEditorKey = this._contextKeyService.createKey('isInDiffLeftEditor', editor.hasWidgetFocus());\n        this._register(editor.onDidFocusEditorWidget(() => isInDiffLeftEditorKey.set(true)));\n        this._register(editor.onDidBlurEditorWidget(() => isInDiffLeftEditorKey.set(false)));\n        this._register(editor.onDidContentSizeChange(e => {\n            const width = this._originalEditor.getContentWidth() + this._modifiedEditor.getContentWidth() + DiffEditorWidget.ONE_OVERVIEW_WIDTH;\n            const height = Math.max(this._modifiedEditor.getContentHeight(), this._originalEditor.getContentHeight());\n            this._onDidContentSizeChange.fire({\n                contentHeight: height,\n                contentWidth: width,\n                contentHeightChanged: e.contentHeightChanged,\n                contentWidthChanged: e.contentWidthChanged\n            });\n        }));\n        return editor;\n    }\n    _createRightHandSideEditor(options, codeEditorWidgetOptions) {\n        const editor = this._createInnerEditor(this._instantiationService, this._modifiedDomNode, this._adjustOptionsForRightHandSide(options), codeEditorWidgetOptions);\n        this._register(editor.onDidScrollChange((e) => {\n            if (this._isHandlingScrollEvent) {\n                return;\n            }\n            if (!e.scrollTopChanged && !e.scrollLeftChanged && !e.scrollHeightChanged) {\n                return;\n            }\n            this._isHandlingScrollEvent = true;\n            this._originalEditor.setScrollPosition({\n                scrollLeft: e.scrollLeft,\n                scrollTop: e.scrollTop\n            });\n            this._isHandlingScrollEvent = false;\n            this._layoutOverviewViewport();\n        }));\n        this._register(editor.onDidChangeViewZones(() => {\n            this._onViewZonesChanged();\n        }));\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (!editor.getModel()) {\n                return;\n            }\n            if (e.hasChanged(47 /* EditorOption.fontInfo */)) {\n                this._updateDecorationsRunner.schedule();\n            }\n            if (e.hasChanged(139 /* EditorOption.wrappingInfo */)) {\n                this._updateDecorationsRunner.cancel();\n                this._updateDecorations();\n            }\n        }));\n        this._register(editor.onDidChangeHiddenAreas(() => {\n            this._updateDecorationsRunner.cancel();\n            this._updateDecorations();\n        }));\n        this._register(editor.onDidChangeModelContent(() => {\n            if (this._isVisible) {\n                this._beginUpdateDecorationsSoon();\n            }\n        }));\n        this._register(editor.onDidChangeModelOptions((e) => {\n            if (e.tabSize) {\n                this._updateDecorationsRunner.schedule();\n            }\n        }));\n        const isInDiffRightEditorKey = this._contextKeyService.createKey('isInDiffRightEditor', editor.hasWidgetFocus());\n        this._register(editor.onDidFocusEditorWidget(() => isInDiffRightEditorKey.set(true)));\n        this._register(editor.onDidBlurEditorWidget(() => isInDiffRightEditorKey.set(false)));\n        this._register(editor.onDidContentSizeChange(e => {\n            const width = this._originalEditor.getContentWidth() + this._modifiedEditor.getContentWidth() + DiffEditorWidget.ONE_OVERVIEW_WIDTH;\n            const height = Math.max(this._modifiedEditor.getContentHeight(), this._originalEditor.getContentHeight());\n            this._onDidContentSizeChange.fire({\n                contentHeight: height,\n                contentWidth: width,\n                contentHeightChanged: e.contentHeightChanged,\n                contentWidthChanged: e.contentWidthChanged\n            });\n        }));\n        // Revert change when an arrow is clicked.\n        this._register(editor.onMouseDown(event => {\n            var _a, _b;\n            if (!event.event.rightButton && event.target.position && ((_a = event.target.element) === null || _a === void 0 ? void 0 : _a.className.includes('arrow-revert-change'))) {\n                const lineNumber = event.target.position.lineNumber;\n                const viewZone = event.target;\n                const change = (_b = this._diffComputationResult) === null || _b === void 0 ? void 0 : _b.changes.find(c => \n                // delete change\n                (viewZone === null || viewZone === void 0 ? void 0 : viewZone.detail.afterLineNumber) === c.modifiedStartLineNumber ||\n                    // other changes\n                    (c.modifiedEndLineNumber > 0 && c.modifiedStartLineNumber === lineNumber));\n                if (change) {\n                    this.revertChange(change);\n                }\n                event.event.stopPropagation();\n                this._updateDecorations();\n                return;\n            }\n        }));\n        return editor;\n    }\n    /**\n     * Reverts a change in the modified editor.\n     */\n    revertChange(change) {\n        const editor = this._modifiedEditor;\n        const original = this._originalEditor.getModel();\n        const modified = this._modifiedEditor.getModel();\n        if (!original || !modified || !editor) {\n            return;\n        }\n        const originalRange = change.originalEndLineNumber > 0 ? new Range(change.originalStartLineNumber, 1, change.originalEndLineNumber, original.getLineMaxColumn(change.originalEndLineNumber)) : null;\n        const originalContent = originalRange ? original.getValueInRange(originalRange) : null;\n        const newRange = change.modifiedEndLineNumber > 0 ? new Range(change.modifiedStartLineNumber, 1, change.modifiedEndLineNumber, modified.getLineMaxColumn(change.modifiedEndLineNumber)) : null;\n        const eol = modified.getEOL();\n        if (change.originalEndLineNumber === 0 && newRange) {\n            // Insert change.\n            // To revert: delete the new content and a linebreak (if possible)\n            let range = newRange;\n            if (change.modifiedStartLineNumber > 1) {\n                // Try to include a linebreak from before.\n                range = newRange.setStartPosition(change.modifiedStartLineNumber - 1, modified.getLineMaxColumn(change.modifiedStartLineNumber - 1));\n            }\n            else if (change.modifiedEndLineNumber < modified.getLineCount()) {\n                // Try to include the linebreak from after.\n                range = newRange.setEndPosition(change.modifiedEndLineNumber + 1, 1);\n            }\n            editor.executeEdits('diffEditor', [{\n                    range,\n                    text: '',\n                }]);\n        }\n        else if (change.modifiedEndLineNumber === 0 && originalContent !== null) {\n            // Delete change.\n            // To revert: insert the old content and a linebreak.\n            const insertAt = change.modifiedStartLineNumber < modified.getLineCount() ? new Position(change.modifiedStartLineNumber + 1, 1) : new Position(change.modifiedStartLineNumber, modified.getLineMaxColumn(change.modifiedStartLineNumber));\n            editor.executeEdits('diffEditor', [{\n                    range: Range.fromPositions(insertAt, insertAt),\n                    text: change.modifiedStartLineNumber < modified.getLineCount() ? originalContent + eol : eol + originalContent,\n                }]);\n        }\n        else if (newRange && originalContent !== null) {\n            // Modified change.\n            editor.executeEdits('diffEditor', [{\n                    range: newRange,\n                    text: originalContent,\n                }]);\n        }\n    }\n    _createInnerEditor(instantiationService, container, options, editorWidgetOptions) {\n        return instantiationService.createInstance(CodeEditorWidget, container, options, editorWidgetOptions);\n    }\n    dispose() {\n        this._codeEditorService.removeDiffEditor(this);\n        if (this._beginUpdateDecorationsTimeout !== -1) {\n            window.clearTimeout(this._beginUpdateDecorationsTimeout);\n            this._beginUpdateDecorationsTimeout = -1;\n        }\n        this._cleanViewZonesAndDecorations();\n        if (this._originalOverviewRuler) {\n            this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode());\n            this._originalOverviewRuler.dispose();\n        }\n        if (this._modifiedOverviewRuler) {\n            this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode());\n            this._modifiedOverviewRuler.dispose();\n        }\n        this._overviewDomElement.removeChild(this._overviewViewportDomElement.domNode);\n        if (this._options.renderOverviewRuler) {\n            this._containerDomElement.removeChild(this._overviewDomElement);\n        }\n        this._containerDomElement.removeChild(this._originalDomNode);\n        this._originalEditor.dispose();\n        this._containerDomElement.removeChild(this._modifiedDomNode);\n        this._modifiedEditor.dispose();\n        this._strategy.dispose();\n        this._containerDomElement.removeChild(this._reviewPane.domNode.domNode);\n        this._containerDomElement.removeChild(this._reviewPane.shadow.domNode);\n        this._containerDomElement.removeChild(this._reviewPane.actionBarContainer.domNode);\n        this._reviewPane.dispose();\n        this._domElement.removeChild(this._containerDomElement);\n        this._onDidDispose.fire();\n        super.dispose();\n    }\n    //------------ begin IDiffEditor methods\n    getId() {\n        return this.getEditorType() + ':' + this._id;\n    }\n    getEditorType() {\n        return editorCommon.EditorType.IDiffEditor;\n    }\n    getLineChanges() {\n        if (!this._diffComputationResult) {\n            return null;\n        }\n        return this._diffComputationResult.changes;\n    }\n    getOriginalEditor() {\n        return this._originalEditor;\n    }\n    getModifiedEditor() {\n        return this._modifiedEditor;\n    }\n    updateOptions(_newOptions) {\n        const newOptions = validateDiffEditorOptions(_newOptions, this._options);\n        const changed = changedDiffEditorOptions(this._options, newOptions);\n        this._options = newOptions;\n        const beginUpdateDecorations = (changed.ignoreTrimWhitespace || changed.renderIndicators || changed.renderMarginRevertIcon);\n        const beginUpdateDecorationsSoon = (this._isVisible && (changed.maxComputationTime || changed.maxFileSize));\n        this._documentDiffProvider.setOptions(newOptions);\n        if (beginUpdateDecorations) {\n            this._beginUpdateDecorations();\n        }\n        else if (beginUpdateDecorationsSoon) {\n            this._beginUpdateDecorationsSoon();\n        }\n        this._modifiedEditor.updateOptions(this._adjustOptionsForRightHandSide(_newOptions));\n        this._originalEditor.updateOptions(this._adjustOptionsForLeftHandSide(_newOptions));\n        // enableSplitViewResizing\n        this._strategy.setEnableSplitViewResizing(this._options.enableSplitViewResizing);\n        // renderSideBySide\n        if (changed.renderSideBySide) {\n            if (this._options.renderSideBySide) {\n                this._setStrategy(new DiffEditorWidgetSideBySide(this._createDataSource(), this._options.enableSplitViewResizing));\n            }\n            else {\n                this._setStrategy(new DiffEditorWidgetInline(this._createDataSource(), this._options.enableSplitViewResizing));\n            }\n            // Update class name\n            this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._options.renderSideBySide);\n        }\n        // renderOverviewRuler\n        if (changed.renderOverviewRuler) {\n            if (this._options.renderOverviewRuler) {\n                this._containerDomElement.appendChild(this._overviewDomElement);\n            }\n            else {\n                this._containerDomElement.removeChild(this._overviewDomElement);\n            }\n        }\n    }\n    getModel() {\n        return {\n            original: this._originalEditor.getModel(),\n            modified: this._modifiedEditor.getModel()\n        };\n    }\n    setModel(model) {\n        // Guard us against partial null model\n        if (model && (!model.original || !model.modified)) {\n            throw new Error(!model.original ? 'DiffEditorWidget.setModel: Original model is null' : 'DiffEditorWidget.setModel: Modified model is null');\n        }\n        // Remove all view zones & decorations\n        this._cleanViewZonesAndDecorations();\n        this._disposeOverviewRulers();\n        // Update code editor models\n        this._originalEditor.setModel(model ? model.original : null);\n        this._modifiedEditor.setModel(model ? model.modified : null);\n        this._updateDecorationsRunner.cancel();\n        // this.originalEditor.onDidChangeModelOptions\n        if (model) {\n            this._originalEditor.setScrollTop(0);\n            this._modifiedEditor.setScrollTop(0);\n        }\n        // Disable any diff computations that will come in\n        this._diffComputationResult = null;\n        this._diffComputationToken++;\n        this._setState(0 /* editorBrowser.DiffEditorState.Idle */);\n        if (model) {\n            this._createOverviewRulers();\n            // Begin comparing\n            this._beginUpdateDecorations();\n        }\n        this._layoutOverviewViewport();\n        this._onDidChangeModel.fire();\n    }\n    getContainerDomNode() {\n        return this._domElement;\n    }\n    getVisibleColumnFromPosition(position) {\n        return this._modifiedEditor.getVisibleColumnFromPosition(position);\n    }\n    getPosition() {\n        return this._modifiedEditor.getPosition();\n    }\n    setPosition(position, source = 'api') {\n        this._modifiedEditor.setPosition(position, source);\n    }\n    revealLine(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLine(lineNumber, scrollType);\n    }\n    revealLineInCenter(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLineInCenter(lineNumber, scrollType);\n    }\n    revealLineInCenterIfOutsideViewport(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLineInCenterIfOutsideViewport(lineNumber, scrollType);\n    }\n    revealLineNearTop(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLineNearTop(lineNumber, scrollType);\n    }\n    revealPosition(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealPosition(position, scrollType);\n    }\n    revealPositionInCenter(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealPositionInCenter(position, scrollType);\n    }\n    revealPositionInCenterIfOutsideViewport(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealPositionInCenterIfOutsideViewport(position, scrollType);\n    }\n    revealPositionNearTop(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealPositionNearTop(position, scrollType);\n    }\n    getSelection() {\n        return this._modifiedEditor.getSelection();\n    }\n    getSelections() {\n        return this._modifiedEditor.getSelections();\n    }\n    setSelection(something, source = 'api') {\n        this._modifiedEditor.setSelection(something, source);\n    }\n    setSelections(ranges, source = 'api') {\n        this._modifiedEditor.setSelections(ranges, source);\n    }\n    revealLines(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLines(startLineNumber, endLineNumber, scrollType);\n    }\n    revealLinesInCenter(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLinesInCenter(startLineNumber, endLineNumber, scrollType);\n    }\n    revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType);\n    }\n    revealLinesNearTop(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLinesNearTop(startLineNumber, endLineNumber, scrollType);\n    }\n    revealRange(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */, revealVerticalInCenter = false, revealHorizontal = true) {\n        this._modifiedEditor.revealRange(range, scrollType, revealVerticalInCenter, revealHorizontal);\n    }\n    revealRangeInCenter(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealRangeInCenter(range, scrollType);\n    }\n    revealRangeInCenterIfOutsideViewport(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealRangeInCenterIfOutsideViewport(range, scrollType);\n    }\n    revealRangeNearTop(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealRangeNearTop(range, scrollType);\n    }\n    revealRangeNearTopIfOutsideViewport(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealRangeNearTopIfOutsideViewport(range, scrollType);\n    }\n    revealRangeAtTop(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealRangeAtTop(range, scrollType);\n    }\n    getSupportedActions() {\n        return this._modifiedEditor.getSupportedActions();\n    }\n    saveViewState() {\n        const originalViewState = this._originalEditor.saveViewState();\n        const modifiedViewState = this._modifiedEditor.saveViewState();\n        return {\n            original: originalViewState,\n            modified: modifiedViewState\n        };\n    }\n    restoreViewState(s) {\n        if (s && s.original && s.modified) {\n            const diffEditorState = s;\n            this._originalEditor.restoreViewState(diffEditorState.original);\n            this._modifiedEditor.restoreViewState(diffEditorState.modified);\n        }\n    }\n    layout(dimension) {\n        this._elementSizeObserver.observe(dimension);\n    }\n    focus() {\n        this._modifiedEditor.focus();\n    }\n    hasTextFocus() {\n        return this._originalEditor.hasTextFocus() || this._modifiedEditor.hasTextFocus();\n    }\n    trigger(source, handlerId, payload) {\n        this._modifiedEditor.trigger(source, handlerId, payload);\n    }\n    createDecorationsCollection(decorations) {\n        return this._modifiedEditor.createDecorationsCollection(decorations);\n    }\n    changeDecorations(callback) {\n        return this._modifiedEditor.changeDecorations(callback);\n    }\n    //------------ end IDiffEditor methods\n    //------------ begin layouting methods\n    _onDidContainerSizeChanged() {\n        this._doLayout();\n    }\n    _getReviewHeight() {\n        return this._reviewPane.isVisible() ? this._elementSizeObserver.getHeight() : 0;\n    }\n    _layoutOverviewRulers() {\n        if (!this._options.renderOverviewRuler) {\n            return;\n        }\n        if (!this._originalOverviewRuler || !this._modifiedOverviewRuler) {\n            return;\n        }\n        const height = this._elementSizeObserver.getHeight();\n        const reviewHeight = this._getReviewHeight();\n        const freeSpace = DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH - 2 * DiffEditorWidget.ONE_OVERVIEW_WIDTH;\n        const layoutInfo = this._modifiedEditor.getLayoutInfo();\n        if (layoutInfo) {\n            this._originalOverviewRuler.setLayout({\n                top: 0,\n                width: DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n                right: freeSpace + DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n                height: (height - reviewHeight)\n            });\n            this._modifiedOverviewRuler.setLayout({\n                top: 0,\n                right: 0,\n                width: DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n                height: (height - reviewHeight)\n            });\n        }\n    }\n    //------------ end layouting methods\n    _onViewZonesChanged() {\n        if (this._currentlyChangingViewZones) {\n            return;\n        }\n        this._updateDecorationsRunner.schedule();\n    }\n    _beginUpdateDecorationsSoon() {\n        // Clear previous timeout if necessary\n        if (this._beginUpdateDecorationsTimeout !== -1) {\n            window.clearTimeout(this._beginUpdateDecorationsTimeout);\n            this._beginUpdateDecorationsTimeout = -1;\n        }\n        this._beginUpdateDecorationsTimeout = window.setTimeout(() => this._beginUpdateDecorations(), DiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY);\n    }\n    static _equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        if (!a || !b) {\n            return false;\n        }\n        return (a.toString() === b.toString());\n    }\n    _beginUpdateDecorations() {\n        if (this._beginUpdateDecorationsTimeout !== -1) {\n            // Cancel any pending requests in case this method is called directly\n            window.clearTimeout(this._beginUpdateDecorationsTimeout);\n            this._beginUpdateDecorationsTimeout = -1;\n        }\n        const currentOriginalModel = this._originalEditor.getModel();\n        const currentModifiedModel = this._modifiedEditor.getModel();\n        if (!currentOriginalModel || !currentModifiedModel) {\n            return;\n        }\n        // Prevent old diff requests to come if a new request has been initiated\n        // The best method would be to call cancel on the Promise, but this is not\n        // yet supported, so using tokens for now.\n        this._diffComputationToken++;\n        const currentToken = this._diffComputationToken;\n        const diffLimit = this._options.maxFileSize * 1024 * 1024; // MB\n        const canSyncModelForDiff = (model) => {\n            const bufferTextLength = model.getValueLength();\n            return (diffLimit === 0 || bufferTextLength <= diffLimit);\n        };\n        if (!canSyncModelForDiff(currentOriginalModel) || !canSyncModelForDiff(currentModifiedModel)) {\n            if (!DiffEditorWidget._equals(currentOriginalModel.uri, this._lastOriginalWarning)\n                || !DiffEditorWidget._equals(currentModifiedModel.uri, this._lastModifiedWarning)) {\n                this._lastOriginalWarning = currentOriginalModel.uri;\n                this._lastModifiedWarning = currentModifiedModel.uri;\n                this._notificationService.warn(nls.localize(\"diff.tooLarge\", \"Cannot compare files because one file is too large.\"));\n            }\n            return;\n        }\n        this._setState(1 /* editorBrowser.DiffEditorState.ComputingDiff */);\n        this._documentDiffProvider.computeDiff(currentOriginalModel, currentModifiedModel, {\n            ignoreTrimWhitespace: this._options.ignoreTrimWhitespace,\n            maxComputationTimeMs: this._options.maxComputationTime,\n        }).then(result => {\n            if (currentToken === this._diffComputationToken\n                && currentOriginalModel === this._originalEditor.getModel()\n                && currentModifiedModel === this._modifiedEditor.getModel()) {\n                this._setState(2 /* editorBrowser.DiffEditorState.DiffComputed */);\n                this._diffComputationResult = {\n                    identical: result.identical,\n                    quitEarly: result.quitEarly,\n                    changes: result.changes.map(m => {\n                        // TODO don't do this translation, but use the diff result directly\n                        let originalStartLineNumber;\n                        let originalEndLineNumber;\n                        let modifiedStartLineNumber;\n                        let modifiedEndLineNumber;\n                        let innerChanges = m.innerChanges;\n                        if (m.originalRange.isEmpty) {\n                            // Insertion\n                            originalStartLineNumber = m.originalRange.startLineNumber - 1;\n                            originalEndLineNumber = 0;\n                            innerChanges = undefined;\n                        }\n                        else {\n                            originalStartLineNumber = m.originalRange.startLineNumber;\n                            originalEndLineNumber = m.originalRange.endLineNumberExclusive - 1;\n                        }\n                        if (m.modifiedRange.isEmpty) {\n                            // Deletion\n                            modifiedStartLineNumber = m.modifiedRange.startLineNumber - 1;\n                            modifiedEndLineNumber = 0;\n                            innerChanges = undefined;\n                        }\n                        else {\n                            modifiedStartLineNumber = m.modifiedRange.startLineNumber;\n                            modifiedEndLineNumber = m.modifiedRange.endLineNumberExclusive - 1;\n                        }\n                        return {\n                            originalStartLineNumber,\n                            originalEndLineNumber,\n                            modifiedStartLineNumber,\n                            modifiedEndLineNumber,\n                            charChanges: innerChanges === null || innerChanges === void 0 ? void 0 : innerChanges.map(m => ({\n                                originalStartLineNumber: m.originalRange.startLineNumber,\n                                originalStartColumn: m.originalRange.startColumn,\n                                originalEndLineNumber: m.originalRange.endLineNumber,\n                                originalEndColumn: m.originalRange.endColumn,\n                                modifiedStartLineNumber: m.modifiedRange.startLineNumber,\n                                modifiedStartColumn: m.modifiedRange.startColumn,\n                                modifiedEndLineNumber: m.modifiedRange.endLineNumber,\n                                modifiedEndColumn: m.modifiedRange.endColumn,\n                            }))\n                        };\n                    })\n                };\n                this._updateDecorationsRunner.schedule();\n                this._onDidUpdateDiff.fire();\n            }\n        }, (error) => {\n            if (currentToken === this._diffComputationToken\n                && currentOriginalModel === this._originalEditor.getModel()\n                && currentModifiedModel === this._modifiedEditor.getModel()) {\n                this._setState(2 /* editorBrowser.DiffEditorState.DiffComputed */);\n                this._diffComputationResult = null;\n                this._updateDecorationsRunner.schedule();\n            }\n        });\n    }\n    _cleanViewZonesAndDecorations() {\n        this._originalEditorState.clean(this._originalEditor);\n        this._modifiedEditorState.clean(this._modifiedEditor);\n    }\n    _updateDecorations() {\n        if (!this._originalEditor.getModel() || !this._modifiedEditor.getModel()) {\n            return;\n        }\n        const lineChanges = (this._diffComputationResult ? this._diffComputationResult.changes : []);\n        const foreignOriginal = this._originalEditorState.getForeignViewZones(this._originalEditor.getWhitespaces());\n        const foreignModified = this._modifiedEditorState.getForeignViewZones(this._modifiedEditor.getWhitespaces());\n        const renderMarginRevertIcon = this._options.renderMarginRevertIcon && !this._modifiedEditor.getOption(86 /* EditorOption.readOnly */);\n        const diffDecorations = this._strategy.getEditorsDiffDecorations(lineChanges, this._options.ignoreTrimWhitespace, this._options.renderIndicators, renderMarginRevertIcon, foreignOriginal, foreignModified);\n        try {\n            this._currentlyChangingViewZones = true;\n            this._originalEditorState.apply(this._originalEditor, this._originalOverviewRuler, diffDecorations.original, false);\n            this._modifiedEditorState.apply(this._modifiedEditor, this._modifiedOverviewRuler, diffDecorations.modified, true);\n        }\n        finally {\n            this._currentlyChangingViewZones = false;\n        }\n    }\n    _adjustOptionsForSubEditor(options) {\n        const clonedOptions = Object.assign({}, options);\n        clonedOptions.inDiffEditor = true;\n        clonedOptions.automaticLayout = false;\n        // Clone scrollbar options before changing them\n        clonedOptions.scrollbar = Object.assign({}, (clonedOptions.scrollbar || {}));\n        clonedOptions.scrollbar.vertical = 'visible';\n        clonedOptions.folding = false;\n        clonedOptions.codeLens = this._options.diffCodeLens;\n        clonedOptions.fixedOverflowWidgets = true;\n        // clonedOptions.lineDecorationsWidth = '2ch';\n        // Clone minimap options before changing them\n        clonedOptions.minimap = Object.assign({}, (clonedOptions.minimap || {}));\n        clonedOptions.minimap.enabled = false;\n        return clonedOptions;\n    }\n    _adjustOptionsForLeftHandSide(options) {\n        const result = this._adjustOptionsForSubEditor(options);\n        if (!this._options.renderSideBySide) {\n            // never wrap hidden editor\n            result.wordWrapOverride1 = 'off';\n            result.wordWrapOverride2 = 'off';\n        }\n        else {\n            result.wordWrapOverride1 = this._options.diffWordWrap;\n        }\n        if (options.originalAriaLabel) {\n            result.ariaLabel = options.originalAriaLabel;\n        }\n        result.ariaLabel += ariaNavigationTip;\n        result.readOnly = !this._options.originalEditable;\n        result.dropIntoEditor = { enabled: !result.readOnly };\n        result.extraEditorClassName = 'original-in-monaco-diff-editor';\n        return Object.assign(Object.assign({}, result), { dimension: {\n                height: 0,\n                width: 0\n            } });\n    }\n    _adjustOptionsForRightHandSide(options) {\n        const result = this._adjustOptionsForSubEditor(options);\n        if (options.modifiedAriaLabel) {\n            result.ariaLabel = options.modifiedAriaLabel;\n        }\n        result.ariaLabel += ariaNavigationTip;\n        result.wordWrapOverride1 = this._options.diffWordWrap;\n        result.revealHorizontalRightPadding = EditorOptions.revealHorizontalRightPadding.defaultValue + DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH;\n        result.scrollbar.verticalHasArrows = false;\n        result.extraEditorClassName = 'modified-in-monaco-diff-editor';\n        return Object.assign(Object.assign({}, result), { dimension: {\n                height: 0,\n                width: 0\n            } });\n    }\n    doLayout() {\n        this._elementSizeObserver.observe();\n        this._doLayout();\n    }\n    _doLayout() {\n        const width = this._elementSizeObserver.getWidth();\n        const height = this._elementSizeObserver.getHeight();\n        const reviewHeight = this._getReviewHeight();\n        const splitPoint = this._strategy.layout();\n        this._originalDomNode.style.width = splitPoint + 'px';\n        this._originalDomNode.style.left = '0px';\n        this._modifiedDomNode.style.width = (width - splitPoint) + 'px';\n        this._modifiedDomNode.style.left = splitPoint + 'px';\n        this._overviewDomElement.style.top = '0px';\n        this._overviewDomElement.style.height = (height - reviewHeight) + 'px';\n        this._overviewDomElement.style.width = DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH + 'px';\n        this._overviewDomElement.style.left = (width - DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH) + 'px';\n        this._overviewViewportDomElement.setWidth(DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH);\n        this._overviewViewportDomElement.setHeight(30);\n        this._originalEditor.layout({ width: splitPoint, height: (height - reviewHeight) });\n        this._modifiedEditor.layout({ width: width - splitPoint - (this._options.renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0), height: (height - reviewHeight) });\n        if (this._originalOverviewRuler || this._modifiedOverviewRuler) {\n            this._layoutOverviewRulers();\n        }\n        this._reviewPane.layout(height - reviewHeight, width, reviewHeight);\n        this._layoutOverviewViewport();\n    }\n    _layoutOverviewViewport() {\n        const layout = this._computeOverviewViewport();\n        if (!layout) {\n            this._overviewViewportDomElement.setTop(0);\n            this._overviewViewportDomElement.setHeight(0);\n        }\n        else {\n            this._overviewViewportDomElement.setTop(layout.top);\n            this._overviewViewportDomElement.setHeight(layout.height);\n        }\n    }\n    _computeOverviewViewport() {\n        const layoutInfo = this._modifiedEditor.getLayoutInfo();\n        if (!layoutInfo) {\n            return null;\n        }\n        const scrollTop = this._modifiedEditor.getScrollTop();\n        const scrollHeight = this._modifiedEditor.getScrollHeight();\n        const computedAvailableSize = Math.max(0, layoutInfo.height);\n        const computedRepresentableSize = Math.max(0, computedAvailableSize - 2 * 0);\n        const computedRatio = scrollHeight > 0 ? (computedRepresentableSize / scrollHeight) : 0;\n        const computedSliderSize = Math.max(0, Math.floor(layoutInfo.height * computedRatio));\n        const computedSliderPosition = Math.floor(scrollTop * computedRatio);\n        return {\n            height: computedSliderSize,\n            top: computedSliderPosition\n        };\n    }\n    _createDataSource() {\n        return {\n            getWidth: () => {\n                return this._elementSizeObserver.getWidth();\n            },\n            getHeight: () => {\n                return (this._elementSizeObserver.getHeight() - this._getReviewHeight());\n            },\n            getOptions: () => {\n                return {\n                    renderOverviewRuler: this._options.renderOverviewRuler\n                };\n            },\n            getContainerDomNode: () => {\n                return this._containerDomElement;\n            },\n            relayoutEditors: () => {\n                this._doLayout();\n            },\n            getOriginalEditor: () => {\n                return this._originalEditor;\n            },\n            getModifiedEditor: () => {\n                return this._modifiedEditor;\n            }\n        };\n    }\n    _setStrategy(newStrategy) {\n        var _a;\n        (_a = this._strategy) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._strategy = newStrategy;\n        if (this._boundarySashes) {\n            newStrategy.setBoundarySashes(this._boundarySashes);\n        }\n        newStrategy.applyColors(this._themeService.getColorTheme());\n        if (this._diffComputationResult) {\n            this._updateDecorations();\n        }\n        // Just do a layout, the strategy might need it\n        this._doLayout();\n    }\n    _getLineChangeAtOrBeforeLineNumber(lineNumber, startLineNumberExtractor) {\n        const lineChanges = (this._diffComputationResult ? this._diffComputationResult.changes : []);\n        if (lineChanges.length === 0 || lineNumber < startLineNumberExtractor(lineChanges[0])) {\n            // There are no changes or `lineNumber` is before the first change\n            return null;\n        }\n        let min = 0;\n        let max = lineChanges.length - 1;\n        while (min < max) {\n            const mid = Math.floor((min + max) / 2);\n            const midStart = startLineNumberExtractor(lineChanges[mid]);\n            const midEnd = (mid + 1 <= max ? startLineNumberExtractor(lineChanges[mid + 1]) : 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n            if (lineNumber < midStart) {\n                max = mid - 1;\n            }\n            else if (lineNumber >= midEnd) {\n                min = mid + 1;\n            }\n            else {\n                // HIT!\n                min = mid;\n                max = mid;\n            }\n        }\n        return lineChanges[min];\n    }\n    _getEquivalentLineForOriginalLineNumber(lineNumber) {\n        const lineChange = this._getLineChangeAtOrBeforeLineNumber(lineNumber, (lineChange) => lineChange.originalStartLineNumber);\n        if (!lineChange) {\n            return lineNumber;\n        }\n        const originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n        const modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n        const lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? (lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1) : 0);\n        const lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? (lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1) : 0);\n        const delta = lineNumber - originalEquivalentLineNumber;\n        if (delta <= lineChangeOriginalLength) {\n            return modifiedEquivalentLineNumber + Math.min(delta, lineChangeModifiedLength);\n        }\n        return modifiedEquivalentLineNumber + lineChangeModifiedLength - lineChangeOriginalLength + delta;\n    }\n    _getEquivalentLineForModifiedLineNumber(lineNumber) {\n        const lineChange = this._getLineChangeAtOrBeforeLineNumber(lineNumber, (lineChange) => lineChange.modifiedStartLineNumber);\n        if (!lineChange) {\n            return lineNumber;\n        }\n        const originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n        const modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n        const lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? (lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1) : 0);\n        const lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? (lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1) : 0);\n        const delta = lineNumber - modifiedEquivalentLineNumber;\n        if (delta <= lineChangeModifiedLength) {\n            return originalEquivalentLineNumber + Math.min(delta, lineChangeOriginalLength);\n        }\n        return originalEquivalentLineNumber + lineChangeOriginalLength - lineChangeModifiedLength + delta;\n    }\n    getDiffLineInformationForOriginal(lineNumber) {\n        if (!this._diffComputationResult) {\n            // Cannot answer that which I don't know\n            return null;\n        }\n        return {\n            equivalentLineNumber: this._getEquivalentLineForOriginalLineNumber(lineNumber)\n        };\n    }\n    getDiffLineInformationForModified(lineNumber) {\n        if (!this._diffComputationResult) {\n            // Cannot answer that which I don't know\n            return null;\n        }\n        return {\n            equivalentLineNumber: this._getEquivalentLineForModifiedLineNumber(lineNumber)\n        };\n    }\n};\nDiffEditorWidget.ONE_OVERVIEW_WIDTH = 15;\nDiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH = 30;\nDiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY = 200; // ms\nDiffEditorWidget = __decorate([\n    __param(3, IClipboardService),\n    __param(4, IContextKeyService),\n    __param(5, IInstantiationService),\n    __param(6, ICodeEditorService),\n    __param(7, IThemeService),\n    __param(8, INotificationService),\n    __param(9, IContextMenuService),\n    __param(10, IEditorProgressService)\n], DiffEditorWidget);\nexport { DiffEditorWidget };\nclass DiffEditorWidgetStyle extends Disposable {\n    constructor(dataSource) {\n        super();\n        this._dataSource = dataSource;\n        this._insertColor = null;\n        this._removeColor = null;\n    }\n    applyColors(theme) {\n        const newInsertColor = theme.getColor(diffOverviewRulerInserted) || (theme.getColor(diffInserted) || defaultInsertColor).transparent(2);\n        const newRemoveColor = theme.getColor(diffOverviewRulerRemoved) || (theme.getColor(diffRemoved) || defaultRemoveColor).transparent(2);\n        const hasChanges = !newInsertColor.equals(this._insertColor) || !newRemoveColor.equals(this._removeColor);\n        this._insertColor = newInsertColor;\n        this._removeColor = newRemoveColor;\n        return hasChanges;\n    }\n    getEditorsDiffDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators, renderMarginRevertIcon, originalWhitespaces, modifiedWhitespaces) {\n        // Get view zones\n        modifiedWhitespaces = modifiedWhitespaces.sort((a, b) => {\n            return a.afterLineNumber - b.afterLineNumber;\n        });\n        originalWhitespaces = originalWhitespaces.sort((a, b) => {\n            return a.afterLineNumber - b.afterLineNumber;\n        });\n        const zones = this._getViewZones(lineChanges, originalWhitespaces, modifiedWhitespaces, renderIndicators);\n        // Get decorations & overview ruler zones\n        const originalDecorations = this._getOriginalEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators);\n        const modifiedDecorations = this._getModifiedEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators, renderMarginRevertIcon);\n        return {\n            original: {\n                decorations: originalDecorations.decorations,\n                overviewZones: originalDecorations.overviewZones,\n                zones: zones.original\n            },\n            modified: {\n                decorations: modifiedDecorations.decorations,\n                overviewZones: modifiedDecorations.overviewZones,\n                zones: zones.modified\n            }\n        };\n    }\n    setBoundarySashes(_sashes) {\n        // To be implemented by subclasses\n    }\n}\nclass ForeignViewZonesIterator {\n    constructor(source) {\n        this._source = source;\n        this._index = -1;\n        this.current = null;\n        this.advance();\n    }\n    advance() {\n        this._index++;\n        if (this._index < this._source.length) {\n            this.current = this._source[this._index];\n        }\n        else {\n            this.current = null;\n        }\n    }\n}\nclass ViewZonesComputer {\n    constructor(_lineChanges, _originalForeignVZ, _modifiedForeignVZ, _originalEditor, _modifiedEditor) {\n        this._lineChanges = _lineChanges;\n        this._originalForeignVZ = _originalForeignVZ;\n        this._modifiedForeignVZ = _modifiedForeignVZ;\n        this._originalEditor = _originalEditor;\n        this._modifiedEditor = _modifiedEditor;\n    }\n    static _getViewLineCount(editor, startLineNumber, endLineNumber) {\n        const model = editor.getModel();\n        const viewModel = editor._getViewModel();\n        if (model && viewModel) {\n            const viewRange = getViewRange(model, viewModel, startLineNumber, endLineNumber);\n            return (viewRange.endLineNumber - viewRange.startLineNumber + 1);\n        }\n        return (endLineNumber - startLineNumber + 1);\n    }\n    getViewZones() {\n        const originalLineHeight = this._originalEditor.getOption(63 /* EditorOption.lineHeight */);\n        const modifiedLineHeight = this._modifiedEditor.getOption(63 /* EditorOption.lineHeight */);\n        const originalHasWrapping = (this._originalEditor.getOption(139 /* EditorOption.wrappingInfo */).wrappingColumn !== -1);\n        const modifiedHasWrapping = (this._modifiedEditor.getOption(139 /* EditorOption.wrappingInfo */).wrappingColumn !== -1);\n        const hasWrapping = (originalHasWrapping || modifiedHasWrapping);\n        const originalModel = this._originalEditor.getModel();\n        const originalCoordinatesConverter = this._originalEditor._getViewModel().coordinatesConverter;\n        const modifiedCoordinatesConverter = this._modifiedEditor._getViewModel().coordinatesConverter;\n        const result = {\n            original: [],\n            modified: []\n        };\n        let lineChangeModifiedLength = 0;\n        let lineChangeOriginalLength = 0;\n        let originalEquivalentLineNumber = 0;\n        let modifiedEquivalentLineNumber = 0;\n        let originalEndEquivalentLineNumber = 0;\n        let modifiedEndEquivalentLineNumber = 0;\n        const sortMyViewZones = (a, b) => {\n            return a.afterLineNumber - b.afterLineNumber;\n        };\n        const addAndCombineIfPossible = (destination, item) => {\n            if (item.domNode === null && destination.length > 0) {\n                const lastItem = destination[destination.length - 1];\n                if (lastItem.afterLineNumber === item.afterLineNumber && lastItem.domNode === null) {\n                    lastItem.heightInLines += item.heightInLines;\n                    return;\n                }\n            }\n            destination.push(item);\n        };\n        const modifiedForeignVZ = new ForeignViewZonesIterator(this._modifiedForeignVZ);\n        const originalForeignVZ = new ForeignViewZonesIterator(this._originalForeignVZ);\n        let lastOriginalLineNumber = 1;\n        let lastModifiedLineNumber = 1;\n        // In order to include foreign view zones after the last line change, the for loop will iterate once more after the end of the `lineChanges` array\n        for (let i = 0, length = this._lineChanges.length; i <= length; i++) {\n            const lineChange = (i < length ? this._lineChanges[i] : null);\n            if (lineChange !== null) {\n                originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n                modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n                lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? ViewZonesComputer._getViewLineCount(this._originalEditor, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber) : 0);\n                lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? ViewZonesComputer._getViewLineCount(this._modifiedEditor, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber) : 0);\n                originalEndEquivalentLineNumber = Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\n                modifiedEndEquivalentLineNumber = Math.max(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\n            }\n            else {\n                // Increase to very large value to get the producing tests of foreign view zones running\n                originalEquivalentLineNumber += 10000000 + lineChangeOriginalLength;\n                modifiedEquivalentLineNumber += 10000000 + lineChangeModifiedLength;\n                originalEndEquivalentLineNumber = originalEquivalentLineNumber;\n                modifiedEndEquivalentLineNumber = modifiedEquivalentLineNumber;\n            }\n            // Each step produces view zones, and after producing them, we try to cancel them out, to avoid empty-empty view zone cases\n            let stepOriginal = [];\n            let stepModified = [];\n            // ---------------------------- PRODUCE VIEW ZONES\n            // [PRODUCE] View zones due to line mapping differences (equal lines but wrapped differently)\n            if (hasWrapping) {\n                let count;\n                if (lineChange) {\n                    if (lineChange.originalEndLineNumber > 0) {\n                        count = lineChange.originalStartLineNumber - lastOriginalLineNumber;\n                    }\n                    else {\n                        count = lineChange.modifiedStartLineNumber - lastModifiedLineNumber;\n                    }\n                }\n                else {\n                    // `lastOriginalLineNumber` has not been looked at yet\n                    count = originalModel.getLineCount() - lastOriginalLineNumber + 1;\n                }\n                for (let i = 0; i < count; i++) {\n                    const originalLineNumber = lastOriginalLineNumber + i;\n                    const modifiedLineNumber = lastModifiedLineNumber + i;\n                    const originalViewLineCount = originalCoordinatesConverter.getModelLineViewLineCount(originalLineNumber);\n                    const modifiedViewLineCount = modifiedCoordinatesConverter.getModelLineViewLineCount(modifiedLineNumber);\n                    if (originalViewLineCount < modifiedViewLineCount) {\n                        stepOriginal.push({\n                            afterLineNumber: originalLineNumber,\n                            heightInLines: modifiedViewLineCount - originalViewLineCount,\n                            domNode: null,\n                            marginDomNode: null\n                        });\n                    }\n                    else if (originalViewLineCount > modifiedViewLineCount) {\n                        stepModified.push({\n                            afterLineNumber: modifiedLineNumber,\n                            heightInLines: originalViewLineCount - modifiedViewLineCount,\n                            domNode: null,\n                            marginDomNode: null\n                        });\n                    }\n                }\n                if (lineChange) {\n                    lastOriginalLineNumber = (lineChange.originalEndLineNumber > 0 ? lineChange.originalEndLineNumber : lineChange.originalStartLineNumber) + 1;\n                    lastModifiedLineNumber = (lineChange.modifiedEndLineNumber > 0 ? lineChange.modifiedEndLineNumber : lineChange.modifiedStartLineNumber) + 1;\n                }\n            }\n            // [PRODUCE] View zone(s) in original-side due to foreign view zone(s) in modified-side\n            while (modifiedForeignVZ.current && modifiedForeignVZ.current.afterLineNumber <= modifiedEndEquivalentLineNumber) {\n                let viewZoneLineNumber;\n                if (modifiedForeignVZ.current.afterLineNumber <= modifiedEquivalentLineNumber) {\n                    viewZoneLineNumber = originalEquivalentLineNumber - modifiedEquivalentLineNumber + modifiedForeignVZ.current.afterLineNumber;\n                }\n                else {\n                    viewZoneLineNumber = originalEndEquivalentLineNumber;\n                }\n                let marginDomNode = null;\n                if (lineChange && lineChange.modifiedStartLineNumber <= modifiedForeignVZ.current.afterLineNumber && modifiedForeignVZ.current.afterLineNumber <= lineChange.modifiedEndLineNumber) {\n                    marginDomNode = this._createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion();\n                }\n                stepOriginal.push({\n                    afterLineNumber: viewZoneLineNumber,\n                    heightInLines: modifiedForeignVZ.current.height / modifiedLineHeight,\n                    domNode: null,\n                    marginDomNode: marginDomNode\n                });\n                modifiedForeignVZ.advance();\n            }\n            // [PRODUCE] View zone(s) in modified-side due to foreign view zone(s) in original-side\n            while (originalForeignVZ.current && originalForeignVZ.current.afterLineNumber <= originalEndEquivalentLineNumber) {\n                let viewZoneLineNumber;\n                if (originalForeignVZ.current.afterLineNumber <= originalEquivalentLineNumber) {\n                    viewZoneLineNumber = modifiedEquivalentLineNumber - originalEquivalentLineNumber + originalForeignVZ.current.afterLineNumber;\n                }\n                else {\n                    viewZoneLineNumber = modifiedEndEquivalentLineNumber;\n                }\n                stepModified.push({\n                    afterLineNumber: viewZoneLineNumber,\n                    heightInLines: originalForeignVZ.current.height / originalLineHeight,\n                    domNode: null\n                });\n                originalForeignVZ.advance();\n            }\n            if (lineChange !== null && isChangeOrInsert(lineChange)) {\n                const r = this._produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength);\n                if (r) {\n                    stepOriginal.push(r);\n                }\n            }\n            if (lineChange !== null && isChangeOrDelete(lineChange)) {\n                const r = this._produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength);\n                if (r) {\n                    stepModified.push(r);\n                }\n            }\n            // ---------------------------- END PRODUCE VIEW ZONES\n            // ---------------------------- EMIT MINIMAL VIEW ZONES\n            // [CANCEL & EMIT] Try to cancel view zones out\n            let stepOriginalIndex = 0;\n            let stepModifiedIndex = 0;\n            stepOriginal = stepOriginal.sort(sortMyViewZones);\n            stepModified = stepModified.sort(sortMyViewZones);\n            while (stepOriginalIndex < stepOriginal.length && stepModifiedIndex < stepModified.length) {\n                const original = stepOriginal[stepOriginalIndex];\n                const modified = stepModified[stepModifiedIndex];\n                const originalDelta = original.afterLineNumber - originalEquivalentLineNumber;\n                const modifiedDelta = modified.afterLineNumber - modifiedEquivalentLineNumber;\n                if (originalDelta < modifiedDelta) {\n                    addAndCombineIfPossible(result.original, original);\n                    stepOriginalIndex++;\n                }\n                else if (modifiedDelta < originalDelta) {\n                    addAndCombineIfPossible(result.modified, modified);\n                    stepModifiedIndex++;\n                }\n                else if (original.shouldNotShrink) {\n                    addAndCombineIfPossible(result.original, original);\n                    stepOriginalIndex++;\n                }\n                else if (modified.shouldNotShrink) {\n                    addAndCombineIfPossible(result.modified, modified);\n                    stepModifiedIndex++;\n                }\n                else {\n                    if (original.heightInLines >= modified.heightInLines) {\n                        // modified view zone gets removed\n                        original.heightInLines -= modified.heightInLines;\n                        stepModifiedIndex++;\n                    }\n                    else {\n                        // original view zone gets removed\n                        modified.heightInLines -= original.heightInLines;\n                        stepOriginalIndex++;\n                    }\n                }\n            }\n            // [EMIT] Remaining original view zones\n            while (stepOriginalIndex < stepOriginal.length) {\n                addAndCombineIfPossible(result.original, stepOriginal[stepOriginalIndex]);\n                stepOriginalIndex++;\n            }\n            // [EMIT] Remaining modified view zones\n            while (stepModifiedIndex < stepModified.length) {\n                addAndCombineIfPossible(result.modified, stepModified[stepModifiedIndex]);\n                stepModifiedIndex++;\n            }\n            // ---------------------------- END EMIT MINIMAL VIEW ZONES\n        }\n        return {\n            original: ViewZonesComputer._ensureDomNodes(result.original),\n            modified: ViewZonesComputer._ensureDomNodes(result.modified),\n        };\n    }\n    static _ensureDomNodes(zones) {\n        return zones.map((z) => {\n            if (!z.domNode) {\n                z.domNode = createFakeLinesDiv();\n            }\n            return z;\n        });\n    }\n}\nfunction createDecoration(startLineNumber, startColumn, endLineNumber, endColumn, options) {\n    return {\n        range: new Range(startLineNumber, startColumn, endLineNumber, endColumn),\n        options: options\n    };\n}\nconst DECORATIONS = {\n    arrowRevertChange: ModelDecorationOptions.register({\n        description: 'diff-editor-arrow-revert-change',\n        glyphMarginClassName: 'arrow-revert-change ' + ThemeIcon.asClassName(Codicon.arrowRight),\n    }),\n    charDelete: ModelDecorationOptions.register({\n        description: 'diff-editor-char-delete',\n        className: 'char-delete'\n    }),\n    charDeleteWholeLine: ModelDecorationOptions.register({\n        description: 'diff-editor-char-delete-whole-line',\n        className: 'char-delete',\n        isWholeLine: true\n    }),\n    charInsert: ModelDecorationOptions.register({\n        description: 'diff-editor-char-insert',\n        className: 'char-insert'\n    }),\n    charInsertWholeLine: ModelDecorationOptions.register({\n        description: 'diff-editor-char-insert-whole-line',\n        className: 'char-insert',\n        isWholeLine: true\n    }),\n    lineInsert: ModelDecorationOptions.register({\n        description: 'diff-editor-line-insert',\n        className: \"line-insert\" /* DiffEditorLineClasses.Insert */,\n        marginClassName: 'gutter-insert',\n        isWholeLine: true\n    }),\n    lineInsertWithSign: ModelDecorationOptions.register({\n        description: 'diff-editor-line-insert-with-sign',\n        className: \"line-insert\" /* DiffEditorLineClasses.Insert */,\n        linesDecorationsClassName: 'insert-sign ' + ThemeIcon.asClassName(diffInsertIcon),\n        marginClassName: 'gutter-insert',\n        isWholeLine: true\n    }),\n    lineDelete: ModelDecorationOptions.register({\n        description: 'diff-editor-line-delete',\n        className: \"line-delete\" /* DiffEditorLineClasses.Delete */,\n        marginClassName: 'gutter-delete',\n        isWholeLine: true\n    }),\n    lineDeleteWithSign: ModelDecorationOptions.register({\n        description: 'diff-editor-line-delete-with-sign',\n        className: \"line-delete\" /* DiffEditorLineClasses.Delete */,\n        linesDecorationsClassName: 'delete-sign ' + ThemeIcon.asClassName(diffRemoveIcon),\n        marginClassName: 'gutter-delete',\n        isWholeLine: true\n    }),\n    lineDeleteMargin: ModelDecorationOptions.register({\n        description: 'diff-editor-line-delete-margin',\n        marginClassName: 'gutter-delete',\n    })\n};\nclass DiffEditorWidgetSideBySide extends DiffEditorWidgetStyle {\n    constructor(dataSource, enableSplitViewResizing) {\n        super(dataSource);\n        this._disableSash = (enableSplitViewResizing === false);\n        this._sashRatio = null;\n        this._sashPosition = null;\n        this._startSashPosition = null;\n        this._sash = this._register(new Sash(this._dataSource.getContainerDomNode(), this, { orientation: 0 /* Orientation.VERTICAL */ }));\n        if (this._disableSash) {\n            this._sash.state = 0 /* SashState.Disabled */;\n        }\n        this._sash.onDidStart(() => this._onSashDragStart());\n        this._sash.onDidChange((e) => this._onSashDrag(e));\n        this._sash.onDidEnd(() => this._onSashDragEnd());\n        this._sash.onDidReset(() => this._onSashReset());\n    }\n    setEnableSplitViewResizing(enableSplitViewResizing) {\n        const newDisableSash = (enableSplitViewResizing === false);\n        if (this._disableSash !== newDisableSash) {\n            this._disableSash = newDisableSash;\n            this._sash.state = this._disableSash ? 0 /* SashState.Disabled */ : 3 /* SashState.Enabled */;\n        }\n    }\n    layout(sashRatio = this._sashRatio) {\n        const w = this._dataSource.getWidth();\n        const contentWidth = w - (this._dataSource.getOptions().renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0);\n        let sashPosition = Math.floor((sashRatio || 0.5) * contentWidth);\n        const midPoint = Math.floor(0.5 * contentWidth);\n        sashPosition = this._disableSash ? midPoint : sashPosition || midPoint;\n        if (contentWidth > DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH * 2) {\n            if (sashPosition < DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH) {\n                sashPosition = DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH;\n            }\n            if (sashPosition > contentWidth - DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH) {\n                sashPosition = contentWidth - DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH;\n            }\n        }\n        else {\n            sashPosition = midPoint;\n        }\n        if (this._sashPosition !== sashPosition) {\n            this._sashPosition = sashPosition;\n        }\n        this._sash.layout();\n        return this._sashPosition;\n    }\n    _onSashDragStart() {\n        this._startSashPosition = this._sashPosition;\n    }\n    _onSashDrag(e) {\n        const w = this._dataSource.getWidth();\n        const contentWidth = w - (this._dataSource.getOptions().renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0);\n        const sashPosition = this.layout((this._startSashPosition + (e.currentX - e.startX)) / contentWidth);\n        this._sashRatio = sashPosition / contentWidth;\n        this._dataSource.relayoutEditors();\n    }\n    _onSashDragEnd() {\n        this._sash.layout();\n    }\n    _onSashReset() {\n        this._sashRatio = 0.5;\n        this._dataSource.relayoutEditors();\n        this._sash.layout();\n    }\n    getVerticalSashTop(sash) {\n        return 0;\n    }\n    getVerticalSashLeft(sash) {\n        return this._sashPosition;\n    }\n    getVerticalSashHeight(sash) {\n        return this._dataSource.getHeight();\n    }\n    setBoundarySashes(sashes) {\n        this._sash.orthogonalEndSash = sashes.bottom;\n    }\n    _getViewZones(lineChanges, originalForeignVZ, modifiedForeignVZ) {\n        const originalEditor = this._dataSource.getOriginalEditor();\n        const modifiedEditor = this._dataSource.getModifiedEditor();\n        const c = new SideBySideViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\n        return c.getViewZones();\n    }\n    _getOriginalEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators) {\n        const originalEditor = this._dataSource.getOriginalEditor();\n        const overviewZoneColor = String(this._removeColor);\n        const result = {\n            decorations: [],\n            overviewZones: []\n        };\n        const originalModel = originalEditor.getModel();\n        const originalViewModel = originalEditor._getViewModel();\n        for (const lineChange of lineChanges) {\n            if (isChangeOrDelete(lineChange)) {\n                result.decorations.push({\n                    range: new Range(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n                    options: (renderIndicators ? DECORATIONS.lineDeleteWithSign : DECORATIONS.lineDelete)\n                });\n                if (!isChangeOrInsert(lineChange) || !lineChange.charChanges) {\n                    result.decorations.push(createDecoration(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charDeleteWholeLine));\n                }\n                const viewRange = getViewRange(originalModel, originalViewModel, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, /*use endLineNumber*/ 0, overviewZoneColor));\n                if (lineChange.charChanges) {\n                    for (const charChange of lineChange.charChanges) {\n                        if (isCharChangeOrDelete(charChange)) {\n                            if (ignoreTrimWhitespace) {\n                                for (let lineNumber = charChange.originalStartLineNumber; lineNumber <= charChange.originalEndLineNumber; lineNumber++) {\n                                    let startColumn;\n                                    let endColumn;\n                                    if (lineNumber === charChange.originalStartLineNumber) {\n                                        startColumn = charChange.originalStartColumn;\n                                    }\n                                    else {\n                                        startColumn = originalModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                                    }\n                                    if (lineNumber === charChange.originalEndLineNumber) {\n                                        endColumn = charChange.originalEndColumn;\n                                    }\n                                    else {\n                                        endColumn = originalModel.getLineLastNonWhitespaceColumn(lineNumber);\n                                    }\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charDelete));\n                                }\n                            }\n                            else {\n                                result.decorations.push(createDecoration(charChange.originalStartLineNumber, charChange.originalStartColumn, charChange.originalEndLineNumber, charChange.originalEndColumn, DECORATIONS.charDelete));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    _getModifiedEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators, renderMarginRevertIcon) {\n        const modifiedEditor = this._dataSource.getModifiedEditor();\n        const overviewZoneColor = String(this._insertColor);\n        const result = {\n            decorations: [],\n            overviewZones: []\n        };\n        const modifiedModel = modifiedEditor.getModel();\n        const modifiedViewModel = modifiedEditor._getViewModel();\n        for (const lineChange of lineChanges) {\n            // Arrows for reverting changes.\n            if (renderMarginRevertIcon) {\n                if (lineChange.modifiedEndLineNumber > 0) {\n                    result.decorations.push({\n                        range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedStartLineNumber, 1),\n                        options: DECORATIONS.arrowRevertChange\n                    });\n                }\n                else {\n                    const viewZone = zones.modified.find(z => z.afterLineNumber === lineChange.modifiedStartLineNumber);\n                    if (viewZone) {\n                        viewZone.marginDomNode = createViewZoneMarginArrow();\n                    }\n                }\n            }\n            if (isChangeOrInsert(lineChange)) {\n                result.decorations.push({\n                    range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n                    options: (renderIndicators ? DECORATIONS.lineInsertWithSign : DECORATIONS.lineInsert)\n                });\n                if (!isChangeOrDelete(lineChange) || !lineChange.charChanges) {\n                    result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charInsertWholeLine));\n                }\n                const viewRange = getViewRange(modifiedModel, modifiedViewModel, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, /*use endLineNumber*/ 0, overviewZoneColor));\n                if (lineChange.charChanges) {\n                    for (const charChange of lineChange.charChanges) {\n                        if (isCharChangeOrInsert(charChange)) {\n                            if (ignoreTrimWhitespace) {\n                                for (let lineNumber = charChange.modifiedStartLineNumber; lineNumber <= charChange.modifiedEndLineNumber; lineNumber++) {\n                                    let startColumn;\n                                    let endColumn;\n                                    if (lineNumber === charChange.modifiedStartLineNumber) {\n                                        startColumn = charChange.modifiedStartColumn;\n                                    }\n                                    else {\n                                        startColumn = modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                                    }\n                                    if (lineNumber === charChange.modifiedEndLineNumber) {\n                                        endColumn = charChange.modifiedEndColumn;\n                                    }\n                                    else {\n                                        endColumn = modifiedModel.getLineLastNonWhitespaceColumn(lineNumber);\n                                    }\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charInsert));\n                                }\n                            }\n                            else {\n                                result.decorations.push(createDecoration(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn, DECORATIONS.charInsert));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n}\nDiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH = 100;\nclass SideBySideViewZonesComputer extends ViewZonesComputer {\n    constructor(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor) {\n        super(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\n    }\n    _createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion() {\n        return null;\n    }\n    _produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        if (lineChangeModifiedLength > lineChangeOriginalLength) {\n            return {\n                afterLineNumber: Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber),\n                heightInLines: (lineChangeModifiedLength - lineChangeOriginalLength),\n                domNode: null\n            };\n        }\n        return null;\n    }\n    _produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        if (lineChangeOriginalLength > lineChangeModifiedLength) {\n            return {\n                afterLineNumber: Math.max(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber),\n                heightInLines: (lineChangeOriginalLength - lineChangeModifiedLength),\n                domNode: null\n            };\n        }\n        return null;\n    }\n}\nclass DiffEditorWidgetInline extends DiffEditorWidgetStyle {\n    constructor(dataSource, enableSplitViewResizing) {\n        super(dataSource);\n        this._decorationsLeft = dataSource.getOriginalEditor().getLayoutInfo().decorationsLeft;\n        this._register(dataSource.getOriginalEditor().onDidLayoutChange((layoutInfo) => {\n            if (this._decorationsLeft !== layoutInfo.decorationsLeft) {\n                this._decorationsLeft = layoutInfo.decorationsLeft;\n                dataSource.relayoutEditors();\n            }\n        }));\n    }\n    setEnableSplitViewResizing(enableSplitViewResizing) {\n        // Nothing to do..\n    }\n    _getViewZones(lineChanges, originalForeignVZ, modifiedForeignVZ, renderIndicators) {\n        const originalEditor = this._dataSource.getOriginalEditor();\n        const modifiedEditor = this._dataSource.getModifiedEditor();\n        const computer = new InlineViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor, renderIndicators);\n        return computer.getViewZones();\n    }\n    _getOriginalEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators) {\n        const overviewZoneColor = String(this._removeColor);\n        const result = {\n            decorations: [],\n            overviewZones: []\n        };\n        const originalEditor = this._dataSource.getOriginalEditor();\n        const originalModel = originalEditor.getModel();\n        const originalViewModel = originalEditor._getViewModel();\n        let zoneIndex = 0;\n        for (const lineChange of lineChanges) {\n            // Add overview zones in the overview ruler\n            if (isChangeOrDelete(lineChange)) {\n                result.decorations.push({\n                    range: new Range(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n                    options: DECORATIONS.lineDeleteMargin\n                });\n                while (zoneIndex < zones.modified.length) {\n                    const zone = zones.modified[zoneIndex];\n                    if (zone.diff && zone.diff.originalStartLineNumber >= lineChange.originalStartLineNumber) {\n                        break;\n                    }\n                    zoneIndex++;\n                }\n                let zoneHeightInLines = 0;\n                if (zoneIndex < zones.modified.length) {\n                    const zone = zones.modified[zoneIndex];\n                    if (zone.diff\n                        && zone.diff.originalStartLineNumber === lineChange.originalStartLineNumber\n                        && zone.diff.originalEndLineNumber === lineChange.originalEndLineNumber\n                        && zone.diff.modifiedStartLineNumber === lineChange.modifiedStartLineNumber\n                        && zone.diff.modifiedEndLineNumber === lineChange.modifiedEndLineNumber) {\n                        zoneHeightInLines = zone.heightInLines;\n                    }\n                }\n                const viewRange = getViewRange(originalModel, originalViewModel, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, zoneHeightInLines, overviewZoneColor));\n            }\n        }\n        return result;\n    }\n    _getModifiedEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators, renderMarginRevertIcon) {\n        const modifiedEditor = this._dataSource.getModifiedEditor();\n        const overviewZoneColor = String(this._insertColor);\n        const result = {\n            decorations: [],\n            overviewZones: []\n        };\n        const modifiedModel = modifiedEditor.getModel();\n        const modifiedViewModel = modifiedEditor._getViewModel();\n        for (const lineChange of lineChanges) {\n            // Add decorations & overview zones\n            if (isChangeOrInsert(lineChange)) {\n                result.decorations.push({\n                    range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n                    options: (renderIndicators ? DECORATIONS.lineInsertWithSign : DECORATIONS.lineInsert)\n                });\n                const viewRange = getViewRange(modifiedModel, modifiedViewModel, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, /*use endLineNumber*/ 0, overviewZoneColor));\n                if (lineChange.charChanges) {\n                    for (const charChange of lineChange.charChanges) {\n                        if (isCharChangeOrInsert(charChange)) {\n                            if (ignoreTrimWhitespace) {\n                                for (let lineNumber = charChange.modifiedStartLineNumber; lineNumber <= charChange.modifiedEndLineNumber; lineNumber++) {\n                                    let startColumn;\n                                    let endColumn;\n                                    if (lineNumber === charChange.modifiedStartLineNumber) {\n                                        startColumn = charChange.modifiedStartColumn;\n                                    }\n                                    else {\n                                        startColumn = modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                                    }\n                                    if (lineNumber === charChange.modifiedEndLineNumber) {\n                                        endColumn = charChange.modifiedEndColumn;\n                                    }\n                                    else {\n                                        endColumn = modifiedModel.getLineLastNonWhitespaceColumn(lineNumber);\n                                    }\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charInsert));\n                                }\n                            }\n                            else {\n                                result.decorations.push(createDecoration(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn, DECORATIONS.charInsert));\n                            }\n                        }\n                    }\n                }\n                else {\n                    result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charInsertWholeLine));\n                }\n            }\n        }\n        return result;\n    }\n    layout() {\n        // An editor should not be smaller than 5px\n        return Math.max(5, this._decorationsLeft);\n    }\n}\nclass InlineViewZonesComputer extends ViewZonesComputer {\n    constructor(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor, renderIndicators) {\n        super(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\n        this._originalModel = originalEditor.getModel();\n        this._renderIndicators = renderIndicators;\n        this._pendingLineChange = [];\n        this._pendingViewZones = [];\n        this._lineBreaksComputer = this._modifiedEditor._getViewModel().createLineBreaksComputer();\n    }\n    getViewZones() {\n        const result = super.getViewZones();\n        this._finalize(result);\n        return result;\n    }\n    _createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion() {\n        const result = document.createElement('div');\n        result.className = 'inline-added-margin-view-zone';\n        return result;\n    }\n    _produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        const marginDomNode = document.createElement('div');\n        marginDomNode.className = 'inline-added-margin-view-zone';\n        return {\n            afterLineNumber: Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber),\n            heightInLines: lineChangeModifiedLength,\n            domNode: document.createElement('div'),\n            marginDomNode: marginDomNode\n        };\n    }\n    _produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        const domNode = document.createElement('div');\n        domNode.className = `view-lines line-delete ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`;\n        const marginDomNode = document.createElement('div');\n        marginDomNode.className = 'inline-deleted-margin-view-zone';\n        const viewZone = {\n            shouldNotShrink: true,\n            afterLineNumber: (lineChange.modifiedEndLineNumber === 0 ? lineChange.modifiedStartLineNumber : lineChange.modifiedStartLineNumber - 1),\n            heightInLines: lineChangeOriginalLength,\n            minWidthInPx: 0,\n            domNode: domNode,\n            marginDomNode: marginDomNode,\n            diff: {\n                originalStartLineNumber: lineChange.originalStartLineNumber,\n                originalEndLineNumber: lineChange.originalEndLineNumber,\n                modifiedStartLineNumber: lineChange.modifiedStartLineNumber,\n                modifiedEndLineNumber: lineChange.modifiedEndLineNumber,\n                originalModel: this._originalModel,\n                viewLineCounts: null,\n            }\n        };\n        for (let lineNumber = lineChange.originalStartLineNumber; lineNumber <= lineChange.originalEndLineNumber; lineNumber++) {\n            this._lineBreaksComputer.addRequest(this._originalModel.getLineContent(lineNumber), null, null);\n        }\n        this._pendingLineChange.push(lineChange);\n        this._pendingViewZones.push(viewZone);\n        return viewZone;\n    }\n    _finalize(result) {\n        const modifiedEditorOptions = this._modifiedEditor.getOptions();\n        const tabSize = this._modifiedEditor.getModel().getOptions().tabSize;\n        const fontInfo = modifiedEditorOptions.get(47 /* EditorOption.fontInfo */);\n        const disableMonospaceOptimizations = modifiedEditorOptions.get(30 /* EditorOption.disableMonospaceOptimizations */);\n        const typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        const scrollBeyondLastColumn = modifiedEditorOptions.get(98 /* EditorOption.scrollBeyondLastColumn */);\n        const mightContainNonBasicASCII = this._originalModel.mightContainNonBasicASCII();\n        const mightContainRTL = this._originalModel.mightContainRTL();\n        const lineHeight = modifiedEditorOptions.get(63 /* EditorOption.lineHeight */);\n        const layoutInfo = modifiedEditorOptions.get(138 /* EditorOption.layoutInfo */);\n        const lineDecorationsWidth = layoutInfo.decorationsWidth;\n        const stopRenderingLineAfter = modifiedEditorOptions.get(111 /* EditorOption.stopRenderingLineAfter */);\n        const renderWhitespace = modifiedEditorOptions.get(93 /* EditorOption.renderWhitespace */);\n        const renderControlCharacters = modifiedEditorOptions.get(88 /* EditorOption.renderControlCharacters */);\n        const fontLigatures = modifiedEditorOptions.get(48 /* EditorOption.fontLigatures */);\n        const lineBreaks = this._lineBreaksComputer.finalize();\n        let lineBreakIndex = 0;\n        for (let i = 0; i < this._pendingLineChange.length; i++) {\n            const lineChange = this._pendingLineChange[i];\n            const viewZone = this._pendingViewZones[i];\n            const domNode = viewZone.domNode;\n            applyFontInfo(domNode, fontInfo);\n            const marginDomNode = viewZone.marginDomNode;\n            applyFontInfo(marginDomNode, fontInfo);\n            const decorations = [];\n            if (lineChange.charChanges) {\n                for (const charChange of lineChange.charChanges) {\n                    if (isCharChangeOrDelete(charChange)) {\n                        decorations.push(new InlineDecoration(new Range(charChange.originalStartLineNumber, charChange.originalStartColumn, charChange.originalEndLineNumber, charChange.originalEndColumn), 'char-delete', 0 /* InlineDecorationType.Regular */));\n                    }\n                }\n            }\n            const hasCharChanges = (decorations.length > 0);\n            const sb = new StringBuilder(10000);\n            let maxCharsPerLine = 0;\n            let renderedLineCount = 0;\n            let viewLineCounts = null;\n            for (let lineNumber = lineChange.originalStartLineNumber; lineNumber <= lineChange.originalEndLineNumber; lineNumber++) {\n                const lineIndex = lineNumber - lineChange.originalStartLineNumber;\n                const lineTokens = this._originalModel.tokenization.getLineTokens(lineNumber);\n                const lineContent = lineTokens.getLineContent();\n                const lineBreakData = lineBreaks[lineBreakIndex++];\n                const actualDecorations = LineDecoration.filter(decorations, lineNumber, 1, lineContent.length + 1);\n                if (lineBreakData) {\n                    let lastBreakOffset = 0;\n                    for (const breakOffset of lineBreakData.breakOffsets) {\n                        const viewLineTokens = lineTokens.sliceAndInflate(lastBreakOffset, breakOffset, 0);\n                        const viewLineContent = lineContent.substring(lastBreakOffset, breakOffset);\n                        maxCharsPerLine = Math.max(maxCharsPerLine, this._renderOriginalLine(renderedLineCount++, viewLineContent, viewLineTokens, LineDecoration.extractWrapped(actualDecorations, lastBreakOffset, breakOffset), hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode));\n                        lastBreakOffset = breakOffset;\n                    }\n                    if (!viewLineCounts) {\n                        viewLineCounts = [];\n                    }\n                    // make sure all lines before this one have an entry in `viewLineCounts`\n                    while (viewLineCounts.length < lineIndex) {\n                        viewLineCounts[viewLineCounts.length] = 1;\n                    }\n                    viewLineCounts[lineIndex] = lineBreakData.breakOffsets.length;\n                    viewZone.heightInLines += (lineBreakData.breakOffsets.length - 1);\n                    const marginDomNode2 = document.createElement('div');\n                    marginDomNode2.className = 'gutter-delete';\n                    result.original.push({\n                        afterLineNumber: lineNumber,\n                        afterColumn: 0,\n                        heightInLines: lineBreakData.breakOffsets.length - 1,\n                        domNode: createFakeLinesDiv(),\n                        marginDomNode: marginDomNode2\n                    });\n                }\n                else {\n                    maxCharsPerLine = Math.max(maxCharsPerLine, this._renderOriginalLine(renderedLineCount++, lineContent, lineTokens, actualDecorations, hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode));\n                }\n            }\n            maxCharsPerLine += scrollBeyondLastColumn;\n            const html = sb.build();\n            const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n            domNode.innerHTML = trustedhtml;\n            viewZone.minWidthInPx = (maxCharsPerLine * typicalHalfwidthCharacterWidth);\n            if (viewLineCounts) {\n                // make sure all lines have an entry in `viewLineCounts`\n                const cnt = lineChange.originalEndLineNumber - lineChange.originalStartLineNumber;\n                while (viewLineCounts.length <= cnt) {\n                    viewLineCounts[viewLineCounts.length] = 1;\n                }\n            }\n            viewZone.diff.viewLineCounts = viewLineCounts;\n        }\n        result.original.sort((a, b) => {\n            return a.afterLineNumber - b.afterLineNumber;\n        });\n    }\n    _renderOriginalLine(renderedLineCount, lineContent, lineTokens, decorations, hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode) {\n        sb.appendString('<div class=\"view-line');\n        if (!hasCharChanges) {\n            // No char changes\n            sb.appendString(' char-delete');\n        }\n        sb.appendString('\" style=\"top:');\n        sb.appendString(String(renderedLineCount * lineHeight));\n        sb.appendString('px;width:1000000px;\">');\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, mightContainNonBasicASCII);\n        const containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, mightContainRTL);\n        const output = renderViewLine(new RenderLineInput((fontInfo.isMonospace && !disableMonospaceOptimizations), fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null // Send no selections, original line cannot be selected\n        ), sb);\n        sb.appendString('</div>');\n        if (this._renderIndicators) {\n            const marginElement = document.createElement('div');\n            marginElement.className = `delete-sign ${ThemeIcon.asClassName(diffRemoveIcon)}`;\n            marginElement.setAttribute('style', `position:absolute;top:${renderedLineCount * lineHeight}px;width:${lineDecorationsWidth}px;height:${lineHeight}px;right:0;`);\n            marginDomNode.appendChild(marginElement);\n        }\n        return output.characterMapping.getHorizontalOffset(output.characterMapping.length);\n    }\n}\nfunction validateDiffWordWrap(value, defaultValue) {\n    return validateStringSetOption(value, defaultValue, ['off', 'on', 'inherit']);\n}\nfunction isChangeOrInsert(lineChange) {\n    return lineChange.modifiedEndLineNumber > 0;\n}\nfunction isChangeOrDelete(lineChange) {\n    return lineChange.originalEndLineNumber > 0;\n}\nfunction isCharChangeOrInsert(charChange) {\n    if (charChange.modifiedStartLineNumber === charChange.modifiedEndLineNumber) {\n        return charChange.modifiedEndColumn - charChange.modifiedStartColumn > 0;\n    }\n    return charChange.modifiedEndLineNumber - charChange.modifiedStartLineNumber > 0;\n}\nfunction isCharChangeOrDelete(charChange) {\n    if (charChange.originalStartLineNumber === charChange.originalEndLineNumber) {\n        return charChange.originalEndColumn - charChange.originalStartColumn > 0;\n    }\n    return charChange.originalEndLineNumber - charChange.originalStartLineNumber > 0;\n}\nfunction createFakeLinesDiv() {\n    const r = document.createElement('div');\n    r.className = 'diagonal-fill';\n    return r;\n}\nfunction createViewZoneMarginArrow() {\n    const arrow = document.createElement('div');\n    arrow.className = 'arrow-revert-change ' + ThemeIcon.asClassName(Codicon.arrowRight);\n    return dom.$('div', {}, arrow);\n}\nfunction getViewRange(model, viewModel, startLineNumber, endLineNumber) {\n    const lineCount = model.getLineCount();\n    startLineNumber = Math.min(lineCount, Math.max(1, startLineNumber));\n    endLineNumber = Math.min(lineCount, Math.max(1, endLineNumber));\n    return viewModel.coordinatesConverter.convertModelRangeToViewRange(new Range(startLineNumber, model.getLineMinColumn(startLineNumber), endLineNumber, model.getLineMaxColumn(endLineNumber)));\n}\nfunction validateDiffEditorOptions(options, defaults) {\n    return {\n        enableSplitViewResizing: validateBooleanOption(options.enableSplitViewResizing, defaults.enableSplitViewResizing),\n        renderSideBySide: validateBooleanOption(options.renderSideBySide, defaults.renderSideBySide),\n        renderMarginRevertIcon: validateBooleanOption(options.renderMarginRevertIcon, defaults.renderMarginRevertIcon),\n        maxComputationTime: clampedInt(options.maxComputationTime, defaults.maxComputationTime, 0, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n        maxFileSize: clampedInt(options.maxFileSize, defaults.maxFileSize, 0, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n        ignoreTrimWhitespace: validateBooleanOption(options.ignoreTrimWhitespace, defaults.ignoreTrimWhitespace),\n        renderIndicators: validateBooleanOption(options.renderIndicators, defaults.renderIndicators),\n        originalEditable: validateBooleanOption(options.originalEditable, defaults.originalEditable),\n        diffCodeLens: validateBooleanOption(options.diffCodeLens, defaults.diffCodeLens),\n        renderOverviewRuler: validateBooleanOption(options.renderOverviewRuler, defaults.renderOverviewRuler),\n        diffWordWrap: validateDiffWordWrap(options.diffWordWrap, defaults.diffWordWrap),\n        diffAlgorithm: validateStringSetOption(options.diffAlgorithm, defaults.diffAlgorithm, ['smart', 'experimental']),\n    };\n}\nfunction changedDiffEditorOptions(a, b) {\n    return {\n        enableSplitViewResizing: (a.enableSplitViewResizing !== b.enableSplitViewResizing),\n        renderSideBySide: (a.renderSideBySide !== b.renderSideBySide),\n        renderMarginRevertIcon: (a.renderMarginRevertIcon !== b.renderMarginRevertIcon),\n        maxComputationTime: (a.maxComputationTime !== b.maxComputationTime),\n        maxFileSize: (a.maxFileSize !== b.maxFileSize),\n        ignoreTrimWhitespace: (a.ignoreTrimWhitespace !== b.ignoreTrimWhitespace),\n        renderIndicators: (a.renderIndicators !== b.renderIndicators),\n        originalEditable: (a.originalEditable !== b.originalEditable),\n        diffCodeLens: (a.diffCodeLens !== b.diffCodeLens),\n        renderOverviewRuler: (a.renderOverviewRuler !== b.renderOverviewRuler),\n        diffWordWrap: (a.diffWordWrap !== b.diffWordWrap),\n        diffAlgorithm: (a.diffAlgorithm !== b.diffAlgorithm),\n    };\n}\nregisterThemingParticipant((theme, collector) => {\n    const diffDiagonalFillColor = theme.getColor(diffDiagonalFill);\n    collector.addRule(`\n\t.monaco-editor .diagonal-fill {\n\t\tbackground-image: linear-gradient(\n\t\t\t-45deg,\n\t\t\t${diffDiagonalFillColor} 12.5%,\n\t\t\t#0000 12.5%, #0000 50%,\n\t\t\t${diffDiagonalFillColor} 50%, ${diffDiagonalFillColor} 62.5%,\n\t\t\t#0000 62.5%, #0000 100%\n\t\t);\n\t\tbackground-size: 8px 8px;\n\t}\n\t`);\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as assert from '../../../base/common/assert.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as objects from '../../../base/common/objects.js';\nimport { Range } from '../../common/core/range.js';\nimport { AudioCue, IAudioCueService } from '../../../platform/audioCues/browser/audioCueService.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nconst defaultOptions = {\n    followsCaret: true,\n    ignoreCharChanges: true,\n    alwaysRevealFirst: true,\n    findResultLoop: true\n};\n/**\n * Create a new diff navigator for the provided diff editor.\n */\nlet DiffNavigator = class DiffNavigator extends Disposable {\n    constructor(editor, options = {}, _audioCueService, _codeEditorService, _accessibilityService) {\n        super();\n        this._audioCueService = _audioCueService;\n        this._codeEditorService = _codeEditorService;\n        this._accessibilityService = _accessibilityService;\n        this._onDidUpdate = this._register(new Emitter());\n        this._editor = editor;\n        this._options = objects.mixin(options, defaultOptions, false);\n        this.disposed = false;\n        this.nextIdx = -1;\n        this.ranges = [];\n        this.ignoreSelectionChange = false;\n        this.revealFirst = Boolean(this._options.alwaysRevealFirst);\n        // hook up to diff editor for diff, disposal, and caret move\n        this._register(this._editor.onDidDispose(() => this.dispose()));\n        this._register(this._editor.onDidUpdateDiff(() => this._onDiffUpdated()));\n        if (this._options.followsCaret) {\n            this._register(this._editor.getModifiedEditor().onDidChangeCursorPosition((e) => {\n                if (this.ignoreSelectionChange) {\n                    return;\n                }\n                this._updateAccessibilityState(e.position.lineNumber);\n                this.nextIdx = -1;\n            }));\n        }\n        if (this._options.alwaysRevealFirst) {\n            this._register(this._editor.getModifiedEditor().onDidChangeModel((e) => {\n                this.revealFirst = true;\n            }));\n        }\n        // init things\n        this._init();\n    }\n    _init() {\n        const changes = this._editor.getLineChanges();\n        if (!changes) {\n            return;\n        }\n    }\n    _onDiffUpdated() {\n        this._init();\n        this._compute(this._editor.getLineChanges());\n        if (this.revealFirst) {\n            // Only reveal first on first non-null changes\n            if (this._editor.getLineChanges() !== null) {\n                this.revealFirst = false;\n                this.nextIdx = -1;\n                this.next(1 /* ScrollType.Immediate */);\n            }\n        }\n    }\n    _compute(lineChanges) {\n        // new ranges\n        this.ranges = [];\n        if (lineChanges) {\n            // create ranges from changes\n            lineChanges.forEach((lineChange) => {\n                if (!this._options.ignoreCharChanges && lineChange.charChanges) {\n                    lineChange.charChanges.forEach((charChange) => {\n                        this.ranges.push({\n                            rhs: true,\n                            range: new Range(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn)\n                        });\n                    });\n                }\n                else {\n                    if (lineChange.modifiedEndLineNumber === 0) {\n                        // a deletion\n                        this.ranges.push({\n                            rhs: true,\n                            range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedStartLineNumber + 1, 1)\n                        });\n                    }\n                    else {\n                        // an insertion or modification\n                        this.ranges.push({\n                            rhs: true,\n                            range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber + 1, 1)\n                        });\n                    }\n                }\n            });\n        }\n        // sort\n        this.ranges.sort((left, right) => Range.compareRangesUsingStarts(left.range, right.range));\n        this._onDidUpdate.fire(this);\n    }\n    _initIdx(fwd) {\n        let found = false;\n        const position = this._editor.getPosition();\n        if (!position) {\n            this.nextIdx = 0;\n            return;\n        }\n        for (let i = 0, len = this.ranges.length; i < len && !found; i++) {\n            const range = this.ranges[i].range;\n            if (position.isBeforeOrEqual(range.getStartPosition())) {\n                this.nextIdx = i + (fwd ? 0 : -1);\n                found = true;\n            }\n        }\n        if (!found) {\n            // after the last change\n            this.nextIdx = fwd ? 0 : this.ranges.length - 1;\n        }\n        if (this.nextIdx < 0) {\n            this.nextIdx = this.ranges.length - 1;\n        }\n    }\n    _move(fwd, scrollType) {\n        assert.ok(!this.disposed, 'Illegal State - diff navigator has been disposed');\n        if (!this.canNavigate()) {\n            return;\n        }\n        if (this.nextIdx === -1) {\n            this._initIdx(fwd);\n        }\n        else if (fwd) {\n            this.nextIdx += 1;\n            if (this.nextIdx >= this.ranges.length) {\n                this.nextIdx = 0;\n            }\n        }\n        else {\n            this.nextIdx -= 1;\n            if (this.nextIdx < 0) {\n                this.nextIdx = this.ranges.length - 1;\n            }\n        }\n        const info = this.ranges[this.nextIdx];\n        this.ignoreSelectionChange = true;\n        try {\n            const pos = info.range.getStartPosition();\n            this._editor.setPosition(pos);\n            this._editor.revealRangeInCenter(info.range, scrollType);\n            this._updateAccessibilityState(pos.lineNumber, true);\n        }\n        finally {\n            this.ignoreSelectionChange = false;\n        }\n    }\n    _updateAccessibilityState(lineNumber, jumpToChange) {\n        var _a;\n        const modifiedEditor = (_a = this._editor.getModel()) === null || _a === void 0 ? void 0 : _a.modified;\n        if (!modifiedEditor) {\n            return;\n        }\n        const insertedOrModified = modifiedEditor.getLineDecorations(lineNumber).find(l => l.options.className === 'line-insert');\n        if (insertedOrModified) {\n            this._audioCueService.playAudioCue(AudioCue.diffLineModified, true);\n        }\n        else if (jumpToChange) {\n            // The modified editor does not include deleted lines, but when\n            // we are moved to the area where lines were deleted, play this cue\n            this._audioCueService.playAudioCue(AudioCue.diffLineDeleted, true);\n        }\n        else {\n            return;\n        }\n        const codeEditor = this._codeEditorService.getActiveCodeEditor();\n        if (jumpToChange && codeEditor && insertedOrModified && this._accessibilityService.isScreenReaderOptimized()) {\n            codeEditor.setSelection({ startLineNumber: lineNumber, startColumn: 0, endLineNumber: lineNumber, endColumn: Number.MAX_VALUE });\n            codeEditor.writeScreenReaderContent('diff-navigation');\n        }\n    }\n    canNavigate() {\n        return this.ranges && this.ranges.length > 0;\n    }\n    next(scrollType = 0 /* ScrollType.Smooth */) {\n        if (!this.canNavigateNext()) {\n            return;\n        }\n        this._move(true, scrollType);\n    }\n    previous(scrollType = 0 /* ScrollType.Smooth */) {\n        if (!this.canNavigatePrevious()) {\n            return;\n        }\n        this._move(false, scrollType);\n    }\n    canNavigateNext() {\n        return this.canNavigateLoop() || this.nextIdx < this.ranges.length - 1;\n    }\n    canNavigatePrevious() {\n        return this.canNavigateLoop() || this.nextIdx !== 0;\n    }\n    canNavigateLoop() {\n        return Boolean(this._options.findResultLoop);\n    }\n    dispose() {\n        super.dispose();\n        this.ranges = [];\n        this.disposed = true;\n    }\n};\nDiffNavigator = __decorate([\n    __param(2, IAudioCueService),\n    __param(3, ICodeEditorService),\n    __param(4, IAccessibilityService)\n], DiffNavigator);\nexport { DiffNavigator };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as objects from '../../../base/common/objects.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { CodeEditorWidget } from './codeEditorWidget.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\nlet EmbeddedCodeEditorWidget = class EmbeddedCodeEditorWidget extends CodeEditorWidget {\n    constructor(domElement, options, parentEditor, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService, languageConfigurationService, languageFeaturesService) {\n        super(domElement, Object.assign(Object.assign({}, parentEditor.getRawOptions()), { overflowWidgetsDomNode: parentEditor.getOverflowWidgetsDomNode() }), {}, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService, languageConfigurationService, languageFeaturesService);\n        this._parentEditor = parentEditor;\n        this._overwriteOptions = options;\n        // Overwrite parent's options\n        super.updateOptions(this._overwriteOptions);\n        this._register(parentEditor.onDidChangeConfiguration((e) => this._onParentConfigurationChanged(e)));\n    }\n    getParentEditor() {\n        return this._parentEditor;\n    }\n    _onParentConfigurationChanged(e) {\n        super.updateOptions(this._parentEditor.getRawOptions());\n        super.updateOptions(this._overwriteOptions);\n    }\n    updateOptions(newOptions) {\n        objects.mixin(this._overwriteOptions, newOptions, true);\n        super.updateOptions(this._overwriteOptions);\n    }\n};\nEmbeddedCodeEditorWidget = __decorate([\n    __param(3, IInstantiationService),\n    __param(4, ICodeEditorService),\n    __param(5, ICommandService),\n    __param(6, IContextKeyService),\n    __param(7, IThemeService),\n    __param(8, INotificationService),\n    __param(9, IAccessibilityService),\n    __param(10, ILanguageConfigurationService),\n    __param(11, ILanguageFeaturesService)\n], EmbeddedCodeEditorWidget);\nexport { EmbeddedCodeEditorWidget };\n"],"names":["RenderingContext","_RestrictedRenderingC","_inherits","_super","_createSuper","viewLayout","viewportData","viewLines","_this","_classCallCheck","call","_renderingContextBrand","undefined","_viewLines","_createClass","key","value","range","includeNewLines","this","linesVisibleRangesForRange","position","visibleRangeForPosition","RestrictedRenderingContext","_restrictedRenderingContextBrand","_viewLayout","scrollWidth","getScrollWidth","scrollHeight","getScrollHeight","visibleRange","bigNumbersDelta","vInfo","getCurrentViewport","scrollTop","top","scrollLeft","left","viewportWidth","width","viewportHeight","height","absoluteTop","lineNumber","includeViewZones","getVerticalOffsetForLineNumber","getVerticalOffsetAfterLineNumber","getDecorationsInViewport","LineVisibleRanges","outsideRenderedLine","ranges","HorizontalRange","_horizontalRangeBrand","Math","round","concat","result","Array","length","i","len","FloatHorizontalRange","_floatHorizontalRangeBrand","a","b","HorizontalPosition","originalLeft","VisibleRanges","ViewController","configuration","viewModel","userInputEvents","commandDelegate","text","pasteOnNewLine","multicursorText","mode","paste","type","replacePrevCharCnt","replaceNextCharCnt","positionDelta","compositionType","startComposition","endComposition","cut","modelSelection","CoreNavigationCommands","SetSelection","runCoreEditorCommand","source","selection","viewPosition","minColumn","getLineMinColumn","column","Position","data","options","get","altKey","ctrlKey","metaKey","selectionClipboardIsOn","platform","columnSelection","middleButton","_columnSelect","mouseColumn","inSelectionMode","startedOnLineNumbers","_hasMulticursorModifier","_lastCursorLineSelect","revealType","_createCursor","_lineSelectDrag","_lineSelect","mouseDownCount","_selectAll","_lastCursorLineSelectDrag","onInjectedText","_lastCursorWordSelect","_wordSelectDrag","_wordSelect","_hasNonMulticursorModifier","shiftKey","_lastCursorMoveToSelect","_moveToSelect","moveTo","_validateViewColumn","_convertViewToModelPosition","MoveTo","_usualArgs","MoveToSelect","doColumnSelect","ColumnSelect","wholeLine","CreateCursor","LastCursorMoveToSelect","WordSelect","WordSelectDrag","LastCursorWordSelect","LineSelect","LineSelectDrag","LastCursorLineSelect","LastCursorLineSelectDrag","SelectAll","coordinatesConverter","convertViewPositionToModelPosition","e","emitKeyDown","emitKeyUp","emitContextMenu","emitMouseMove","emitMouseLeave","emitMouseUp","emitMouseDown","emitMouseDrag","emitMouseDrop","emitMouseDropCanceled","emitMouseWheel","_a","RenderedLinesCollection","createLine","_createLine","_set","rendLineNumberStart","lines","_lines","_rendLineNumberStart","lineIndex","Error","deleteFromLineNumber","deleteToLineNumber","getCount","startLineNumber","getStartLineNumber","endLineNumber","getEndLineNumber","deleteCnt","deleteStartIndex","deleteCount","deleteAboveCount","splice","changeFromLineNumber","changeCount","changeToLineNumber","someoneNotified","changedLineNumber","onContentChanged","insertFromLineNumber","insertToLineNumber","insertCnt","newLines","insertIndex","beforeLines","slice","afterLines","deletedLines","notifiedSomeone","rng","toLineNumber","fromLineNumber","from","max","to","min","onTokensChanged","VisibleLinesCollection","host","_host","domNode","_createDomNode","_linesCollection","createVisibleLine","createFastDomNode","document","createElement","setClassName","setPosition","setAttribute","hasChanged","flush","onLinesChanged","count","deleted","onLinesDeleted","lineDomNode","getDomNode","removeChild","onLinesInserted","scrollTopChanged","getLine","inp","_get","renderer","ViewLayerRenderer","ctx","linesLength","resCtx","render","relativeVerticalOffset","inContext","stopLineNumber","deltaTop","x","_finishRendering","_renderUntouchedLines","_insertLinesBefore","removeCnt","_removeLinesBefore","_insertLinesAfter","_removeLinesAfter","startIndex","endIndex","deltaLN","layoutLine","newLinesLen","removeCount","removeIndex","domNodeIsEmpty","newLinesHTML","wasNew","_ttPolicy","createHTML","lastChild","innerHTML","insertAdjacentHTML","currChild","line","setDomNode","previousSibling","invalidLinesHTML","wasInvalid","hugeDomNode","firstChild","parentNode","replaceChild","sb","_sb","reset","hadNewLine","renderLine","_finishRenderingNewLines","build","hadInvalidLine","_finishRenderingInvalidLines","window","trustedTypes","createPolicy","StringBuilder","ViewOverlays","_ViewPart","context","_visibleLines","_assertThisInitialized","fontInfo","_context","applyFontInfo","_dynamicOverlays","_isFocused","_getPrototypeOf","prototype","shouldRender","dispose","ViewOverlayLine","overlay","push","onConfigurationChanged","getVisibleLine","onFlushed","isFocused","onScrollChanged","onZonesChanged","toRender","filter","dynamicOverlay","prepareRender","onDidRender","_viewOverlaysRender","toggleClassName","renderLines","ViewPart","dynamicOverlays","_configuration","_lineHeight","_domNode","_renderedContent","appendString","String","setTop","setHeight","ContentViewOverlays","_ViewOverlays","_super2","_this2","layoutInfo","_contentWidth","contentWidth","scrollWidthChanged","setWidth","MarginViewOverlays","_ViewOverlays2","_super3","_this3","_contentLeft","contentLeft","scrollHeightChanged","_ViewEventHandler","addEventHandler","removeEventHandler","ViewEventHandler","PartFingerprints","target","partId","r","getAttribute","parseInt","child","stopAt","resultLen","body","nodeType","ELEMENT_NODE","read","parentElement","Uint8Array","ViewUserInputEvents","onKeyDown","onKeyUp","onContextMenu","onMouseMove","onMouseLeave","onMouseDown","onMouseUp","onMouseDrag","onMouseDrop","onMouseDropCanceled","onMouseWheel","_coordinatesConverter","_convertViewToModelMouseEvent","event","_convertViewToModelMouseTarget","convertViewToModelMouseTarget","Object","assign","convertViewRangeToModelRange","CodeEditorContributions","_Disposable","_editor","_instantiationService","_instances","_register","DisposableMap","_pending","Map","_finishedInstantiation","editor","contributions","instantiationService","_step","_iterator","_createForOfIteratorHelper","s","n","done","desc","has","id","onUnexpectedError","set","err","f","_instantiateSome","runWhenIdle","_step2","contributionsState","_iterator2","_step2$value","_slicedToArray","contribution","saveViewState","_step3","_iterator3","_step3$value","restoreViewState","_instantiateById","instantiation","_step4","contribs","_findPendingContributionsByInstantiation","_iterator4","contrib","_step5","_iterator5","delete","instance","createInstance","ctor","console","warn","Disposable","__decorate","decorators","d","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","then","apply","EDITOR_ID","ModelData","model","view","hasRealView","listenersToRemove","onBeforeDetached","CodeEditorWidget","domElement","_options","codeEditorWidgetOptions","codeEditorService","commandService","contextKeyService","themeService","notificationService","accessibilityService","languageConfigurationService","languageFeaturesService","_deliveryQueue","EventDeliveryQueue","_contributions","_onDidDispose","Emitter","onDidDispose","_onDidChangeModelContent","deliveryQueue","onDidChangeModelContent","_onDidChangeModelLanguage","onDidChangeModelLanguage","_onDidChangeModelLanguageConfiguration","onDidChangeModelLanguageConfiguration","_onDidChangeModelOptions","onDidChangeModelOptions","_onDidChangeModelDecorations","onDidChangeModelDecorations","_onDidChangeModelTokens","onDidChangeModelTokens","_onDidChangeConfiguration","onDidChangeConfiguration","_onDidChangeModel","onDidChangeModel","_onDidChangeCursorPosition","onDidChangeCursorPosition","_onDidChangeCursorSelection","onDidChangeCursorSelection","_onDidAttemptReadOnlyEdit","InteractionEmitter","onDidAttemptReadOnlyEdit","_onDidLayoutChange","onDidLayoutChange","_editorTextFocus","BooleanEventEmitter","onDidFocusEditorText","onDidChangeToTrue","onDidBlurEditorText","onDidChangeToFalse","_editorWidgetFocus","onDidFocusEditorWidget","onDidBlurEditorWidget","_onWillType","onWillType","_onDidType","onDidType","_onDidCompositionStart","onDidCompositionStart","_onDidCompositionEnd","onDidCompositionEnd","_onDidPaste","onDidPaste","_onMouseUp","_onMouseDown","_onMouseDrag","_onMouseDrop","_onMouseDropCanceled","_onDropIntoEditor","onDropIntoEditor","_onContextMenu","_onMouseMove","_onMouseLeave","_onMouseWheel","_onKeyUp","_onKeyDown","_onDidContentSizeChange","onDidContentSizeChange","_onDidScrollChange","onDidScrollChange","_onDidChangeViewZones","onDidChangeViewZones","_onDidChangeHiddenAreas","onDidChangeHiddenAreas","_actions","_bannerDomNode","_dropIntoEditorDecorations","createDecorationsCollection","willCreateCodeEditor","_domElement","_overflowWidgetsDomNode","overflowWidgetsDomNode","_id","_decorationTypeKeysToIds","_decorationTypeSubtypes","_telemetryData","telemetryData","_createConfiguration","isSimpleWidget","onDidChange","fire","_contextKeyService","createScoped","_notificationService","_codeEditorService","_commandService","_themeService","EditorContextKeysManager","EditorModeContext","createChild","ServiceCollection","IContextKeyService","_modelData","_focusTracker","CodeEditorWidgetFocusTracker","onChange","setValue","hasFocus","_contentWidgets","_overlayWidgets","isArray","EditorExtensionsRegistry","getEditorContributions","initialize","getEditorActions","_loop","action","internalAction","InternalEditorAction","label","alias","withNullAsUndefined","precondition","invokeFunction","accessor","runEditorCommand","isDropIntoEnabled","enabled","dom","DragAndDropObserver","onDragEnter","onDragOver","getTargetAtClientPoint","clientX","clientY","showDropIndicatorAt","onDrop","_regeneratorRuntime","mark","_callee","wrap","prev","abrupt","removeDropIndicator","dataTransfer","stop","onDragLeave","onDragEnd","addCodeEditor","reason","writeScreenReaderContent","EditorConfiguration","getEditorType","editorCommon","ICodeEditor","removeCodeEditor","clear","_removeDecorationTypes","_postDetachModelCleanup","_detachModel","fn","newOptions","updateOptions","getRawOptions","WordOperations","getWordAtPosition","preserveBOM","eolPreference","lineEnding","getValue","newValue","hasTextFocus","detachedModel","_attachModel","hasModel","focus","oldModelUrl","uri","newModelUrl","onAfterModelAttached","decorationType","subTypes","subType","_removeDecorationType","getVisibleRanges","getVisibleRangesPlusViewportAboveBelow","getWhitespaces","_getVerticalOffsetForPosition","_getVerticalOffsetAfterPosition","setHiddenAreas","map","Range","lift","rawPosition","validatePosition","tabSize","getOptions","CursorColumns","visibleColumnFromColumn","getLineContent","getPosition","isIPosition","setSelections","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","modelRange","verticalType","revealHorizontal","scrollType","isIRange","validatedModelRange","validateRange","viewRange","convertModelRangeToViewRange","revealRange","_revealLine","_sendRevealRange","_revealPosition","getSelection","getSelections","something","isSelection","Selection","isISelection","isRange","_setSelectionImpl","startColumn","endColumn","sel","_revealLines","revealVerticalInCenter","_revealRange","getContentWidth","getCurrentScrollLeft","getContentHeight","getCurrentScrollTop","newScrollLeft","setScrollPosition","newScrollTop","cursorState","saveCursorState","viewState","saveState","codeEditorState","restoreCursorState","reducedState","reduceRestoreState","restoreState","values","getActions","isSupported","handlerId","payload","_startComposition","_endComposition","args","_type","_compositionType","replaceCharCnt","_paste","_cut","getAction","run","_triggerEditorCommand","_triggerCommand","executeCommand","startPosition","getStartPosition","endPosition","languageId","command","getEditorCommand","pushStackElement","popStackElement","edits","endCursorState","cursorStateComputer","executeEdits","commands","executeCommands","decorations","EditorDecorationsCollection","callback","changeDecorations","getLineDecorations","filterValidationDecorations","getDecorationsInRange","oldDecorations","newDecorations","deltaDecorations","decorationIds","changeAccessor","decorationTypeKey","oldDecorationsIds","hasOwnProperty","cssClassName","createOverviewRuler","browserEvent","delegateVerticalScrollbarPointerDown","delegateScrollFromMouseWheelEvent","dimension","observeContainer","widget","widgetData","getId","addContentWidget","widgetId","layoutContentWidget","removeContentWidget","addOverlayWidget","layoutOverlayWidget","removeOverlayWidget","change","getScrollTop","getOffsetForColumn","glyphMarginWidth","lineNumbersWidth","decorationsWidth","getScrollLeft","forceRedraw","setAriaOptions","domNodeHeight","contains","setReservedHeight","prepend","getLanguageId","setIsDominatedByLongLines","isDominatedByLongLines","setModelLineCount","getLineCount","onBeforeAttached","ViewModel","DOMLineBreaksComputerFactory","create","MonospaceLineBreaksComputerFactory","scheduleAtNextAnimationFrame","onWillDispose","setModel","onEvent","kind","reachedMaxCursorCount","multiCursorLimit","getOption","message","nls","prompt","Severity","Warning","query","positions","selections","e1","secondaryPositions","e2","secondarySelections","modelVersionId","oldSelections","oldModelVersionId","_this$_createView","_createView","_this$_createView2","appendChild","keys","toString","_this4","viewUserInputEvents","View","getColorTheme","removeAllDecorationsWithOwnerId","removeDomNode","removeAttribute","removeDecorationType","dropIntoEditorDecorationOptions","revealPosition","modelData","modelLineNumber","modelColumn","modelPosition","convertModelPositionToViewPosition","ModelDecorationOptions","register","description","className","IInstantiationService","ICodeEditorService","ICommandService","IThemeService","INotificationService","IAccessibilityService","ILanguageConfigurationService","ILanguageFeaturesService","_Disposable2","_emitterOptions","_this5","_onDidChangeToTrue","_onDidChangeToFalse","_value","_Emitter","_this6","onBeforeInteractionEvent","_Disposable3","_super4","_this7","createKey","_editorSimpleInput","EditorContextKeys","editorSimpleInput","bindTo","_editorFocus","_textInputFocus","textInputFocus","editorTextFocus","_editorTabMovesFocus","tabMovesFocus","_editorReadonly","readOnly","_inDiffEditor","inDiffEditor","_editorColumnSelection","_hasMultipleSelections","hasMultipleSelections","_hasNonEmptySelection","hasNonEmptySelection","_canUndo","canUndo","_canRedo","canRedo","_updateFromConfig","_updateFromSelection","_updateFromFocus","_updateFromModel","TabFocus","onDidChangeTabFocus","getTabFocusMode","some","isEmpty","hasWidgetFocus","getModel","Boolean","_Disposable4","_super5","_languageFeaturesService","_this8","_langId","_hasCompletionItemProvider","hasCompletionItemProvider","_hasCodeActionsProvider","hasCodeActionsProvider","_hasCodeLensProvider","hasCodeLensProvider","_hasDefinitionProvider","hasDefinitionProvider","_hasDeclarationProvider","hasDeclarationProvider","_hasImplementationProvider","hasImplementationProvider","_hasTypeDefinitionProvider","hasTypeDefinitionProvider","_hasHoverProvider","hasHoverProvider","_hasDocumentHighlightProvider","hasDocumentHighlightProvider","_hasDocumentSymbolProvider","hasDocumentSymbolProvider","_hasReferenceProvider","hasReferenceProvider","_hasRenameProvider","hasRenameProvider","_hasSignatureHelpProvider","hasSignatureHelpProvider","_hasInlayHintsProvider","hasInlayHintsProvider","_hasDocumentFormattingProvider","hasDocumentFormattingProvider","_hasDocumentSelectionFormattingProvider","hasDocumentSelectionFormattingProvider","_hasMultipleDocumentFormattingProvider","hasMultipleDocumentFormattingProvider","_hasMultipleDocumentSelectionFormattingProvider","hasMultipleDocumentSelectionFormattingProvider","_isInWalkThrough","isInWalkThroughSnippet","update","_update","completionProvider","codeActionProvider","codeLensProvider","definitionProvider","declarationProvider","implementationProvider","typeDefinitionProvider","hoverProvider","documentHighlightProvider","documentSymbolProvider","referenceProvider","renameProvider","documentFormattingEditProvider","documentRangeFormattingEditProvider","signatureHelpProvider","inlayHintsProvider","_this9","bufferChangeEvents","_this10","all","scheme","Schemas","walkThroughSnippet","_Disposable5","_super6","_this11","_onChange","_hasFocus","_domFocusTracker","trackFocus","onDidFocus","onDidBlur","_decorationIds","_isChangingDecorations","listener","thisArgs","disposables","_this12","index","getDecorationRange","decorationId","decoration","includes","_this13","squigglyStart","encodeURIComponent","squigglyEnd","getSquigglySVGData","color","dotdotdotStart","dotdotdotEnd","registerThemingParticipant","theme","collector","errorForeground","getColor","editorErrorForeground","addRule","warningForeground","editorWarningForeground","infoForeground","editorInfoForeground","hintForeground","editorHintForeground","unnecessaryForeground","editorUnnecessaryCodeOpacity","rgba","DiffEntry","originalLineStart","originalLineEnd","modifiedLineStart","modifiedLineEnd","Diff","entries","diffReviewInsertIcon","registerIcon","Codicon","add","diffReviewRemoveIcon","remove","diffReviewCloseIcon","close","DiffReview","diffEditor","_languageService","_audioCueService","_width","_diffEditor","_isVisible","shadow","actionBarContainer","_actionBar","ActionBar","Action","ThemeIcon","asClassName","hide","icon","_content","scrollbar","DomScrollableElement","onDidUpdateDiff","_diffs","_compute","_render","getModifiedEditor","addStandardDisposableListener","preventDefault","row","findParentWithClass","_goToRow","equals","_getNextRow","_getPrevRow","accept","_currentDiff","currentIndex","_findDiffIndex","setSelection","doLayout","jumpToLineNumber","current","_getCurrentFocusedRow","isNaN","previousElementSibling","_getFirstRow","nextElementSibling","querySelector","activeElement","test","tabIndex","element","classList","playAudioCue","AudioCue","diffLineInserted","diffLineDeleted","scanDomNode","setDisplay","lineChanges","getLineChanges","originalModel","getOriginalEditor","modifiedModel","_mergeAdjacent","pos","diff","originalOptions","modifiedOptions","originalModelOpts","modifiedModelOpts","clearNode","diffIndex","diffs","container","minOriginalLine","maxOriginalLine","minModifiedLine","maxModifiedLine","diffEntry","header","cell","originalChangedLinesCnt","modifiedChangedLinesCnt","createTextNode","getAriaLines","originalChangedLinesCntAria","modifiedChangedLinesCntAria","comment","lineHeight","modLine","_renderSection","languageIdCodec","originalLineCount","modifiedLineCount","diffsLength","lineChange","originalStart","originalStartLineNumber","originalEnd","originalEndLineNumber","modifiedStart","modifiedStartLineNumber","modifiedEnd","modifiedEndLineNumber","rLength","originalEqualAbove","modifiedEqualAbove","minOriginal","minModified","prevLineChange","fromOriginal","fromModified","delta","originalEqualBelow","modifiedEqualBelow","maxOriginal","maxModified","nextLineChange","toOriginal","toModified","curr","thisDiff","currLast","thisFirst","getType","dest","rowClassName","lineNumbersExtraClassName","spacerIcon","cnt","originalLayoutInfo","originalLineNumbersWidth","modifiedLayoutInfo","modifiedLineNumbersWidth","originalLine","modifiedLine","style","minWidth","originalLineNumber","innerText","modifiedLineNumber","paddingRight","spacer","spacerCodicon","lineContent","html","_renderLine","ariaLabel","lineTokens","LineTokens","createEmpty","isBasicASCII","ViewLineRenderingData","mightContainNonBasicASCII","containsRTL","mightContainRTL","renderViewLine","RenderLineInput","isMonospace","canUseHalfwidthRightwardsArrow","spaceWidth","middotWidth","wsmiddotWidth","EditorFontLigatures","OFF","ILanguageService","IAudioCueService","DiffReviewNext","_EditorAction","ContextKeyExpr","kbOpts","kbExpr","primary","weight","findFocusedDiffEditor","diffReviewNext","EditorAction","DiffReviewPrev","_EditorAction2","diffReviewPrev","diffEditors","listDiffEditors","activeCodeEditor","getActiveCodeEditor","registerEditorAction","InlineDiffMargin","_viewZoneId","_marginDomNode","_contextMenuService","_clipboardService","_visibility","zIndex","_diffActions","lightBulb","lineFeed","getEOL","right","visibility","actions","isDeletion","deletedText","getValueInRange","writeText","currentLineNumberOffset","copyLineAction","_callee2","eof","_context2","getEndOfLineSequence","_callee3","_column","_context3","getLineMaxColumn","showContextMenu","y","getAnchor","autoSelectFirstItem","_dom$getDomNodePagePo","getDomNodePagePosition","pad","floor","posx","detail","viewZoneId","_updateLightBulbPosition","rightButton","posy","marginDomNode","offset","lineNumberOffset","newTop","viewLineCounts","acc","WorkerBasedDocumentDiffProvider","editorWorkerService","onDidChangeEventEmitter","diffAlgorithm","diffAlgorithmOnDidChangeSubscription","setOptions","original","modified","computeDiff","sent","didChange","IEditorWorkerService","VisualEditorState","_zones","_inlineDiffMargins","_zonesMap","_decorations","allViewZones","z","changeViewZones","viewChangeAccessor","zoneId","removeZone","overviewRuler","restoreScrollState","scrollState","StableEditorScrollState","capture","zones","viewZone","suppressMouseDown","addZone","getValueLength","restore","setZones","overviewZones","DIFF_EDITOR_ID","diffInsertIcon","diffRemoveIcon","ttPolicy","ariaNavigationTip","DiffEditorWidget","clipboardService","contextMenuService","_editorProgressService","_onDidUpdateDiff","_lastOriginalWarning","_lastModifiedWarning","willCreateDiffEditor","_documentDiffProvider","_beginUpdateDecorationsSoon","_state","_updatingDiffProgress","validateDiffEditorOptions","enableSplitViewResizing","renderSideBySide","renderMarginRevertIcon","maxComputationTime","maxFileSize","ignoreTrimWhitespace","renderIndicators","originalEditable","diffCodeLens","renderOverviewRuler","diffWordWrap","isInEmbeddedEditor","_updateDecorationsRunner","RunOnceScheduler","_updateDecorations","_containerDomElement","_getClassName","_overviewViewportDomElement","_overviewDomElement","EventType","POINTER_DOWN","_modifiedEditor","addDisposableListener","MOUSE_WHEEL","passive","_originalDomNode","_modifiedDomNode","_beginUpdateDecorationsTimeout","_currentlyChangingViewZones","_diffComputationToken","_originalEditorState","_modifiedEditorState","_isHandlingScrollEvent","_elementSizeObserver","ElementSizeObserver","_onDidContainerSizeChanged","automaticLayout","startObserving","_diffComputationResult","_originalEditor","_createLeftHandSideEditor","originalEditor","_createRightHandSideEditor","modifiedEditor","_originalOverviewRuler","_modifiedOverviewRuler","_reviewPane","_setStrategy","DiffEditorWidgetSideBySide","_createDataSource","DiffEditorWidgetInline","onDidColorThemeChange","t","_strategy","applyColors","schedule","getDiffEditorContributions","addDiffEditor","newState","show","assert","ok","_layoutOverviewRulers","_createInnerEditor","_adjustOptionsForLeftHandSide","scrollLeftChanged","_layoutOverviewViewport","_onViewZonesChanged","cancel","isInDiffLeftEditorKey","ONE_OVERVIEW_WIDTH","contentHeight","contentHeightChanged","contentWidthChanged","_adjustOptionsForRightHandSide","isInDiffRightEditorKey","_b","changes","find","afterLineNumber","revertChange","stopPropagation","originalRange","originalContent","newRange","eol","setStartPosition","setEndPosition","insertAt","fromPositions","editorWidgetOptions","removeDiffEditor","clearTimeout","_cleanViewZonesAndDecorations","IDiffEditor","_newOptions","changed","beginUpdateDecorations","beginUpdateDecorationsSoon","_beginUpdateDecorations","setEnableSplitViewResizing","_disposeOverviewRulers","setScrollTop","_setState","_createOverviewRulers","getVisibleColumnFromPosition","revealLine","revealLineInCenter","revealLineInCenterIfOutsideViewport","revealLineNearTop","revealPositionInCenter","revealPositionInCenterIfOutsideViewport","revealPositionNearTop","revealLines","revealLinesInCenter","revealLinesInCenterIfOutsideViewport","revealLinesNearTop","revealRangeInCenter","revealRangeInCenterIfOutsideViewport","revealRangeNearTop","revealRangeNearTopIfOutsideViewport","revealRangeAtTop","getSupportedActions","diffEditorState","observe","trigger","_doLayout","isVisible","getHeight","reviewHeight","_getReviewHeight","freeSpace","ENTIRE_DIFF_OVERVIEW_WIDTH","getLayoutInfo","setLayout","setTimeout","UPDATE_DIFF_DECORATIONS_DELAY","currentOriginalModel","currentModifiedModel","currentToken","diffLimit","canSyncModelForDiff","bufferTextLength","maxComputationTimeMs","identical","quitEarly","m","innerChanges","endLineNumberExclusive","modifiedRange","charChanges","originalStartColumn","originalEndColumn","modifiedStartColumn","modifiedEndColumn","error","_equals","clean","foreignOriginal","getForeignViewZones","foreignModified","diffDecorations","getEditorsDiffDecorations","clonedOptions","vertical","folding","codeLens","fixedOverflowWidgets","minimap","_adjustOptionsForSubEditor","wordWrapOverride1","wordWrapOverride2","originalAriaLabel","dropIntoEditor","extraEditorClassName","modifiedAriaLabel","revealHorizontalRightPadding","EditorOptions","defaultValue","verticalHasArrows","getWidth","splitPoint","layout","_computeOverviewViewport","computedAvailableSize","computedRepresentableSize","computedRatio","getContainerDomNode","relayoutEditors","newStrategy","_boundarySashes","setBoundarySashes","startLineNumberExtractor","mid","midStart","midEnd","_getLineChangeAtOrBeforeLineNumber","originalEquivalentLineNumber","modifiedEquivalentLineNumber","lineChangeOriginalLength","lineChangeModifiedLength","equivalentLineNumber","_getEquivalentLineForOriginalLineNumber","_getEquivalentLineForModifiedLineNumber","getThemeTypeSelector","IClipboardService","IContextMenuService","IEditorProgressService","DiffEditorWidgetStyle","dataSource","_dataSource","_insertColor","_removeColor","newInsertColor","diffOverviewRulerInserted","diffInserted","defaultInsertColor","transparent","newRemoveColor","diffOverviewRulerRemoved","diffRemoved","defaultRemoveColor","hasChanges","originalWhitespaces","modifiedWhitespaces","sort","_getViewZones","originalDecorations","_getOriginalEditorDecorations","modifiedDecorations","_getModifiedEditorDecorations","_sashes","ForeignViewZonesIterator","_source","_index","advance","ViewZonesComputer","_lineChanges","_originalForeignVZ","_modifiedForeignVZ","originalLineHeight","modifiedLineHeight","originalHasWrapping","wrappingColumn","modifiedHasWrapping","hasWrapping","originalCoordinatesConverter","_getViewModel","modifiedCoordinatesConverter","originalEndEquivalentLineNumber","modifiedEndEquivalentLineNumber","sortMyViewZones","addAndCombineIfPossible","destination","item","lastItem","heightInLines","modifiedForeignVZ","originalForeignVZ","lastOriginalLineNumber","lastModifiedLineNumber","_getViewLineCount","stepOriginal","stepModified","originalViewLineCount","getModelLineViewLineCount","modifiedViewLineCount","viewZoneLineNumber","_createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion","isChangeOrInsert","_produceOriginalFromDiff","isChangeOrDelete","_produceModifiedFromDiff","stepOriginalIndex","stepModifiedIndex","originalDelta","modifiedDelta","shouldNotShrink","_ensureDomNodes","getViewRange","createFakeLinesDiv","createDecoration","DECORATIONS","arrowRevertChange","glyphMarginClassName","arrowRight","charDelete","charDeleteWholeLine","isWholeLine","charInsert","charInsertWholeLine","lineInsert","marginClassName","lineInsertWithSign","linesDecorationsClassName","lineDelete","lineDeleteWithSign","lineDeleteMargin","_DiffEditorWidgetStyl","_disableSash","_sashRatio","_sashPosition","_startSashPosition","_sash","Sash","orientation","state","onDidStart","_onSashDragStart","_onSashDrag","onDidEnd","_onSashDragEnd","onDidReset","_onSashReset","newDisableSash","sashRatio","sashPosition","midPoint","MINIMUM_EDITOR_WIDTH","currentX","startX","sash","sashes","orthogonalEndSash","bottom","SideBySideViewZonesComputer","getViewZones","overviewZoneColor","originalViewModel","OverviewRulerZone","_step6","_iterator6","charChange","isCharChangeOrDelete","getLineFirstNonWhitespaceColumn","getLineLastNonWhitespaceColumn","_step7","modifiedViewModel","_iterator7","arrow","$","createViewZoneMarginArrow","_step8","_iterator8","isCharChangeOrInsert","_ViewZonesComputer","_DiffEditorWidgetStyl2","_decorationsLeft","decorationsLeft","InlineViewZonesComputer","_step9","zoneIndex","_iterator9","zone","zoneHeightInLines","_step10","_iterator10","_step11","_iterator11","_ViewZonesComputer2","_originalModel","_renderIndicators","_pendingLineChange","_pendingViewZones","_lineBreaksComputer","createLineBreaksComputer","_finalize","MOUSE_CURSOR_TEXT_CSS_CLASS_NAME","minWidthInPx","addRequest","modifiedEditorOptions","disableMonospaceOptimizations","typicalHalfwidthCharacterWidth","scrollBeyondLastColumn","lineDecorationsWidth","stopRenderingLineAfter","renderWhitespace","renderControlCharacters","fontLigatures","lineBreaks","finalize","lineBreakIndex","_step12","_iterator12","InlineDecoration","hasCharChanges","maxCharsPerLine","renderedLineCount","tokenization","getLineTokens","lineBreakData","actualDecorations","LineDecoration","_step13","lastBreakOffset","_iterator13","breakOffsets","breakOffset","viewLineTokens","sliceAndInflate","viewLineContent","substring","_renderOriginalLine","extractWrapped","marginDomNode2","afterColumn","trustedhtml","output","marginElement","characterMapping","getHorizontalOffset","lineCount","defaults","validateBooleanOption","clampedInt","validateStringSetOption","diffDiagonalFillColor","diffDiagonalFill","defaultOptions","followsCaret","ignoreCharChanges","alwaysRevealFirst","findResultLoop","DiffNavigator","_accessibilityService","_onDidUpdate","objects","disposed","nextIdx","ignoreSelectionChange","revealFirst","_onDiffUpdated","_updateAccessibilityState","_init","forEach","rhs","compareRangesUsingStarts","fwd","found","isBeforeOrEqual","canNavigate","_initIdx","info","jumpToChange","insertedOrModified","l","diffLineModified","codeEditor","isScreenReaderOptimized","Number","MAX_VALUE","canNavigateNext","_move","canNavigatePrevious","canNavigateLoop","EmbeddedCodeEditorWidget","_CodeEditorWidget","parentEditor","_thisSuper","getOverflowWidgetsDomNode","_parentEditor","_overwriteOptions","_onParentConfigurationChanged"],"sourceRoot":""}