{"version":3,"file":"static/js/monaco-editor-vendor.80c937b5.7650ccea.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/platform/storage/common/storage.js","../node_modules/monaco-editor/esm/vs/platform/telemetry/common/telemetry.js","../node_modules/monaco-editor/esm/vs/platform/theme/browser/defaultStyles.js","../node_modules/monaco-editor/esm/vs/platform/theme/browser/iconsStyleSheet.js","../node_modules/monaco-editor/esm/vs/platform/theme/common/colorRegistry.js","../node_modules/monaco-editor/esm/vs/platform/theme/common/iconRegistry.js","../node_modules/monaco-editor/esm/vs/platform/theme/common/theme.js","../node_modules/monaco-editor/esm/vs/platform/theme/common/themeService.js","../node_modules/monaco-editor/esm/vs/platform/undoRedo/common/undoRedo.js","../node_modules/monaco-editor/esm/vs/platform/undoRedo/common/undoRedoService.js","../node_modules/monaco-editor/esm/vs/platform/workspace/common/workspace.js","../node_modules/monaco-editor/esm/vs/platform/workspace/common/workspaceTrust.js"],"sourcesContent":["import { Emitter, PauseableEmitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { isUndefinedOrNull } from '../../../base/common/types.js';\nimport { InMemoryStorageDatabase, Storage, StorageHint } from '../../../base/parts/storage/common/storage.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const TARGET_KEY = '__$__targetStorageMarker';\nexport const IStorageService = createDecorator('storageService');\nexport var WillSaveStateReason;\n(function (WillSaveStateReason) {\n    /**\n     * No specific reason to save state.\n     */\n    WillSaveStateReason[WillSaveStateReason[\"NONE\"] = 0] = \"NONE\";\n    /**\n     * A hint that the workbench is about to shutdown.\n     */\n    WillSaveStateReason[WillSaveStateReason[\"SHUTDOWN\"] = 1] = \"SHUTDOWN\";\n})(WillSaveStateReason || (WillSaveStateReason = {}));\nexport function loadKeyTargets(storage) {\n    const keysRaw = storage.get(TARGET_KEY);\n    if (keysRaw) {\n        try {\n            return JSON.parse(keysRaw);\n        }\n        catch (error) {\n            // Fail gracefully\n        }\n    }\n    return Object.create(null);\n}\nclass AbstractStorageService extends Disposable {\n    constructor(options = { flushInterval: AbstractStorageService.DEFAULT_FLUSH_INTERVAL }) {\n        super();\n        this.options = options;\n        this._onDidChangeValue = this._register(new PauseableEmitter());\n        this.onDidChangeValue = this._onDidChangeValue.event;\n        this._onDidChangeTarget = this._register(new PauseableEmitter());\n        this._onWillSaveState = this._register(new Emitter());\n        this.onWillSaveState = this._onWillSaveState.event;\n        this._workspaceKeyTargets = undefined;\n        this._profileKeyTargets = undefined;\n        this._applicationKeyTargets = undefined;\n    }\n    emitDidChangeValue(scope, key) {\n        // Specially handle `TARGET_KEY`\n        if (key === TARGET_KEY) {\n            // Clear our cached version which is now out of date\n            switch (scope) {\n                case -1 /* StorageScope.APPLICATION */:\n                    this._applicationKeyTargets = undefined;\n                    break;\n                case 0 /* StorageScope.PROFILE */:\n                    this._profileKeyTargets = undefined;\n                    break;\n                case 1 /* StorageScope.WORKSPACE */:\n                    this._workspaceKeyTargets = undefined;\n                    break;\n            }\n            // Emit as `didChangeTarget` event\n            this._onDidChangeTarget.fire({ scope });\n        }\n        // Emit any other key to outside\n        else {\n            this._onDidChangeValue.fire({ scope, key, target: this.getKeyTargets(scope)[key] });\n        }\n    }\n    get(key, scope, fallbackValue) {\n        var _a;\n        return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.get(key, fallbackValue);\n    }\n    getBoolean(key, scope, fallbackValue) {\n        var _a;\n        return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.getBoolean(key, fallbackValue);\n    }\n    getNumber(key, scope, fallbackValue) {\n        var _a;\n        return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.getNumber(key, fallbackValue);\n    }\n    store(key, value, scope, target) {\n        // We remove the key for undefined/null values\n        if (isUndefinedOrNull(value)) {\n            this.remove(key, scope);\n            return;\n        }\n        // Update our datastructures but send events only after\n        this.withPausedEmitters(() => {\n            var _a;\n            // Update key-target map\n            this.updateKeyTarget(key, scope, target);\n            // Store actual value\n            (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.set(key, value);\n        });\n    }\n    remove(key, scope) {\n        // Update our datastructures but send events only after\n        this.withPausedEmitters(() => {\n            var _a;\n            // Update key-target map\n            this.updateKeyTarget(key, scope, undefined);\n            // Remove actual key\n            (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.delete(key);\n        });\n    }\n    withPausedEmitters(fn) {\n        // Pause emitters\n        this._onDidChangeValue.pause();\n        this._onDidChangeTarget.pause();\n        try {\n            fn();\n        }\n        finally {\n            // Resume emitters\n            this._onDidChangeValue.resume();\n            this._onDidChangeTarget.resume();\n        }\n    }\n    updateKeyTarget(key, scope, target) {\n        var _a, _b;\n        // Add\n        const keyTargets = this.getKeyTargets(scope);\n        if (typeof target === 'number') {\n            if (keyTargets[key] !== target) {\n                keyTargets[key] = target;\n                (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.set(TARGET_KEY, JSON.stringify(keyTargets));\n            }\n        }\n        // Remove\n        else {\n            if (typeof keyTargets[key] === 'number') {\n                delete keyTargets[key];\n                (_b = this.getStorage(scope)) === null || _b === void 0 ? void 0 : _b.set(TARGET_KEY, JSON.stringify(keyTargets));\n            }\n        }\n    }\n    get workspaceKeyTargets() {\n        if (!this._workspaceKeyTargets) {\n            this._workspaceKeyTargets = this.loadKeyTargets(1 /* StorageScope.WORKSPACE */);\n        }\n        return this._workspaceKeyTargets;\n    }\n    get profileKeyTargets() {\n        if (!this._profileKeyTargets) {\n            this._profileKeyTargets = this.loadKeyTargets(0 /* StorageScope.PROFILE */);\n        }\n        return this._profileKeyTargets;\n    }\n    get applicationKeyTargets() {\n        if (!this._applicationKeyTargets) {\n            this._applicationKeyTargets = this.loadKeyTargets(-1 /* StorageScope.APPLICATION */);\n        }\n        return this._applicationKeyTargets;\n    }\n    getKeyTargets(scope) {\n        switch (scope) {\n            case -1 /* StorageScope.APPLICATION */:\n                return this.applicationKeyTargets;\n            case 0 /* StorageScope.PROFILE */:\n                return this.profileKeyTargets;\n            default:\n                return this.workspaceKeyTargets;\n        }\n    }\n    loadKeyTargets(scope) {\n        const storage = this.getStorage(scope);\n        return storage ? loadKeyTargets(storage) : Object.create(null);\n    }\n}\nAbstractStorageService.DEFAULT_FLUSH_INTERVAL = 60 * 1000; // every minute\nexport { AbstractStorageService };\nexport class InMemoryStorageService extends AbstractStorageService {\n    constructor() {\n        super();\n        this.applicationStorage = this._register(new Storage(new InMemoryStorageDatabase(), { hint: StorageHint.STORAGE_IN_MEMORY }));\n        this.profileStorage = this._register(new Storage(new InMemoryStorageDatabase(), { hint: StorageHint.STORAGE_IN_MEMORY }));\n        this.workspaceStorage = this._register(new Storage(new InMemoryStorageDatabase(), { hint: StorageHint.STORAGE_IN_MEMORY }));\n        this._register(this.workspaceStorage.onDidChangeStorage(key => this.emitDidChangeValue(1 /* StorageScope.WORKSPACE */, key)));\n        this._register(this.profileStorage.onDidChangeStorage(key => this.emitDidChangeValue(0 /* StorageScope.PROFILE */, key)));\n        this._register(this.applicationStorage.onDidChangeStorage(key => this.emitDidChangeValue(-1 /* StorageScope.APPLICATION */, key)));\n    }\n    getStorage(scope) {\n        switch (scope) {\n            case -1 /* StorageScope.APPLICATION */:\n                return this.applicationStorage;\n            case 0 /* StorageScope.PROFILE */:\n                return this.profileStorage;\n            default:\n                return this.workspaceStorage;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const ITelemetryService = createDecorator('telemetryService');\n","import { keybindingLabelBackground, keybindingLabelBorder, keybindingLabelBottomBorder, keybindingLabelForeground, asCssVariable, widgetShadow, buttonForeground, buttonSeparator, buttonBackground, buttonHoverBackground, buttonSecondaryForeground, buttonSecondaryBackground, buttonSecondaryHoverBackground, buttonBorder, progressBarBackground, inputActiveOptionBorder, inputActiveOptionForeground, inputActiveOptionBackground, editorWidgetBackground, editorWidgetForeground, contrastBorder, checkboxBorder, checkboxBackground, checkboxForeground, problemsErrorIconForeground, problemsWarningIconForeground, problemsInfoIconForeground, inputBackground, inputForeground, inputBorder, textLinkForeground, inputValidationInfoBorder, inputValidationInfoBackground, inputValidationInfoForeground, inputValidationWarningBorder, inputValidationWarningBackground, inputValidationWarningForeground, inputValidationErrorBorder, inputValidationErrorBackground, inputValidationErrorForeground, listFilterWidgetBackground, listFilterWidgetNoMatchesOutline, listFilterWidgetOutline, listFilterWidgetShadow, badgeBackground, badgeForeground, breadcrumbsBackground, breadcrumbsForeground, breadcrumbsFocusForeground, breadcrumbsActiveSelectionForeground, activeContrastBorder, listActiveSelectionBackground, listActiveSelectionForeground, listActiveSelectionIconForeground, listDropBackground, listFocusAndSelectionOutline, listFocusBackground, listFocusForeground, listFocusOutline, listHoverBackground, listHoverForeground, listInactiveFocusBackground, listInactiveFocusOutline, listInactiveSelectionBackground, listInactiveSelectionForeground, listInactiveSelectionIconForeground, tableColumnsBorder, tableOddRowsBackgroundColor, treeIndentGuidesStroke, asCssVariableWithDefault, editorWidgetBorder, focusBorder, pickerGroupForeground, quickInputListFocusBackground, quickInputListFocusForeground, quickInputListFocusIconForeground, selectBackground, selectBorder, selectForeground, selectListBackground, treeInactiveIndentGuidesStroke, menuBorder, menuForeground, menuBackground, menuSelectionForeground, menuSelectionBackground, menuSelectionBorder, menuSeparatorBackground, scrollbarShadow, scrollbarSliderActiveBackground, scrollbarSliderBackground, scrollbarSliderHoverBackground } from '../common/colorRegistry.js';\nimport { Color } from '../../../base/common/color.js';\nfunction overrideStyles(override, styles) {\n    const result = Object.assign({}, styles);\n    for (const key in override) {\n        const val = override[key];\n        result[key] = val !== undefined ? asCssVariable(val) : undefined;\n    }\n    return result;\n}\nexport const defaultKeybindingLabelStyles = {\n    keybindingLabelBackground: asCssVariable(keybindingLabelBackground),\n    keybindingLabelForeground: asCssVariable(keybindingLabelForeground),\n    keybindingLabelBorder: asCssVariable(keybindingLabelBorder),\n    keybindingLabelBottomBorder: asCssVariable(keybindingLabelBottomBorder),\n    keybindingLabelShadow: asCssVariable(widgetShadow)\n};\nexport const defaultButtonStyles = {\n    buttonForeground: asCssVariable(buttonForeground),\n    buttonSeparator: asCssVariable(buttonSeparator),\n    buttonBackground: asCssVariable(buttonBackground),\n    buttonHoverBackground: asCssVariable(buttonHoverBackground),\n    buttonSecondaryForeground: asCssVariable(buttonSecondaryForeground),\n    buttonSecondaryBackground: asCssVariable(buttonSecondaryBackground),\n    buttonSecondaryHoverBackground: asCssVariable(buttonSecondaryHoverBackground),\n    buttonBorder: asCssVariable(buttonBorder),\n};\nexport const defaultProgressBarStyles = {\n    progressBarBackground: asCssVariable(progressBarBackground)\n};\nexport const defaultToggleStyles = {\n    inputActiveOptionBorder: asCssVariable(inputActiveOptionBorder),\n    inputActiveOptionForeground: asCssVariable(inputActiveOptionForeground),\n    inputActiveOptionBackground: asCssVariable(inputActiveOptionBackground)\n};\nexport const defaultCheckboxStyles = {\n    checkboxBackground: asCssVariable(checkboxBackground),\n    checkboxBorder: asCssVariable(checkboxBorder),\n    checkboxForeground: asCssVariable(checkboxForeground)\n};\nexport const defaultDialogStyles = {\n    dialogBackground: asCssVariable(editorWidgetBackground),\n    dialogForeground: asCssVariable(editorWidgetForeground),\n    dialogShadow: asCssVariable(widgetShadow),\n    dialogBorder: asCssVariable(contrastBorder),\n    errorIconForeground: asCssVariable(problemsErrorIconForeground),\n    warningIconForeground: asCssVariable(problemsWarningIconForeground),\n    infoIconForeground: asCssVariable(problemsInfoIconForeground),\n    textLinkForeground: asCssVariable(textLinkForeground)\n};\nexport const defaultInputBoxStyles = {\n    inputBackground: asCssVariable(inputBackground),\n    inputForeground: asCssVariable(inputForeground),\n    inputBorder: asCssVariable(inputBorder),\n    inputValidationInfoBorder: asCssVariable(inputValidationInfoBorder),\n    inputValidationInfoBackground: asCssVariable(inputValidationInfoBackground),\n    inputValidationInfoForeground: asCssVariable(inputValidationInfoForeground),\n    inputValidationWarningBorder: asCssVariable(inputValidationWarningBorder),\n    inputValidationWarningBackground: asCssVariable(inputValidationWarningBackground),\n    inputValidationWarningForeground: asCssVariable(inputValidationWarningForeground),\n    inputValidationErrorBorder: asCssVariable(inputValidationErrorBorder),\n    inputValidationErrorBackground: asCssVariable(inputValidationErrorBackground),\n    inputValidationErrorForeground: asCssVariable(inputValidationErrorForeground)\n};\nexport const defaultFindWidgetStyles = {\n    listFilterWidgetBackground: asCssVariable(listFilterWidgetBackground),\n    listFilterWidgetOutline: asCssVariable(listFilterWidgetOutline),\n    listFilterWidgetNoMatchesOutline: asCssVariable(listFilterWidgetNoMatchesOutline),\n    listFilterWidgetShadow: asCssVariable(listFilterWidgetShadow),\n    inputBoxStyles: defaultInputBoxStyles,\n    toggleStyles: defaultToggleStyles\n};\nexport const defaultCountBadgeStyles = {\n    badgeBackground: asCssVariable(badgeBackground),\n    badgeForeground: asCssVariable(badgeForeground),\n    badgeBorder: asCssVariable(contrastBorder)\n};\nexport const defaultBreadcrumbsWidgetStyles = {\n    breadcrumbsBackground: asCssVariable(breadcrumbsBackground),\n    breadcrumbsForeground: asCssVariable(breadcrumbsForeground),\n    breadcrumbsHoverForeground: asCssVariable(breadcrumbsFocusForeground),\n    breadcrumbsFocusForeground: asCssVariable(breadcrumbsFocusForeground),\n    breadcrumbsFocusAndSelectionForeground: asCssVariable(breadcrumbsActiveSelectionForeground)\n};\nexport const defaultListStyles = {\n    listBackground: undefined,\n    listInactiveFocusForeground: undefined,\n    listFocusBackground: asCssVariable(listFocusBackground),\n    listFocusForeground: asCssVariable(listFocusForeground),\n    listFocusOutline: asCssVariable(listFocusOutline),\n    listActiveSelectionBackground: asCssVariable(listActiveSelectionBackground),\n    listActiveSelectionForeground: asCssVariable(listActiveSelectionForeground),\n    listActiveSelectionIconForeground: asCssVariable(listActiveSelectionIconForeground),\n    listFocusAndSelectionOutline: asCssVariable(listFocusAndSelectionOutline),\n    listFocusAndSelectionBackground: asCssVariable(listActiveSelectionBackground),\n    listFocusAndSelectionForeground: asCssVariable(listActiveSelectionForeground),\n    listInactiveSelectionBackground: asCssVariable(listInactiveSelectionBackground),\n    listInactiveSelectionIconForeground: asCssVariable(listInactiveSelectionIconForeground),\n    listInactiveSelectionForeground: asCssVariable(listInactiveSelectionForeground),\n    listInactiveFocusBackground: asCssVariable(listInactiveFocusBackground),\n    listInactiveFocusOutline: asCssVariable(listInactiveFocusOutline),\n    listHoverBackground: asCssVariable(listHoverBackground),\n    listHoverForeground: asCssVariable(listHoverForeground),\n    listDropBackground: asCssVariable(listDropBackground),\n    listSelectionOutline: asCssVariable(activeContrastBorder),\n    listHoverOutline: asCssVariable(activeContrastBorder),\n    treeIndentGuidesStroke: asCssVariable(treeIndentGuidesStroke),\n    treeInactiveIndentGuidesStroke: asCssVariable(treeInactiveIndentGuidesStroke),\n    tableColumnsBorder: asCssVariable(tableColumnsBorder),\n    tableOddRowsBackgroundColor: asCssVariable(tableOddRowsBackgroundColor),\n};\nexport function getListStyles(override) {\n    return overrideStyles(override, defaultListStyles);\n}\nexport const defaultSelectBoxStyles = {\n    selectBackground: asCssVariable(selectBackground),\n    selectListBackground: asCssVariable(selectListBackground),\n    selectForeground: asCssVariable(selectForeground),\n    decoratorRightForeground: asCssVariable(pickerGroupForeground),\n    selectBorder: asCssVariable(selectBorder),\n    focusBorder: asCssVariable(focusBorder),\n    listFocusBackground: asCssVariable(quickInputListFocusBackground),\n    listInactiveSelectionIconForeground: asCssVariable(quickInputListFocusIconForeground),\n    listFocusForeground: asCssVariable(quickInputListFocusForeground),\n    listFocusOutline: asCssVariableWithDefault(activeContrastBorder, Color.transparent.toString()),\n    listHoverBackground: asCssVariable(listHoverBackground),\n    listHoverForeground: asCssVariable(listHoverForeground),\n    listHoverOutline: asCssVariable(activeContrastBorder),\n    selectListBorder: asCssVariable(editorWidgetBorder),\n    listBackground: undefined,\n    listActiveSelectionBackground: undefined,\n    listActiveSelectionForeground: undefined,\n    listActiveSelectionIconForeground: undefined,\n    listFocusAndSelectionBackground: undefined,\n    listDropBackground: undefined,\n    listInactiveSelectionBackground: undefined,\n    listInactiveSelectionForeground: undefined,\n    listInactiveFocusBackground: undefined,\n    listInactiveFocusOutline: undefined,\n    listSelectionOutline: undefined,\n    listFocusAndSelectionForeground: undefined,\n    listFocusAndSelectionOutline: undefined,\n    listInactiveFocusForeground: undefined,\n    tableColumnsBorder: undefined,\n    tableOddRowsBackgroundColor: undefined,\n    treeIndentGuidesStroke: undefined,\n    treeInactiveIndentGuidesStroke: undefined,\n};\nexport const defaultMenuStyles = {\n    shadowColor: asCssVariable(widgetShadow),\n    borderColor: asCssVariable(menuBorder),\n    foregroundColor: asCssVariable(menuForeground),\n    backgroundColor: asCssVariable(menuBackground),\n    selectionForegroundColor: asCssVariable(menuSelectionForeground),\n    selectionBackgroundColor: asCssVariable(menuSelectionBackground),\n    selectionBorderColor: asCssVariable(menuSelectionBorder),\n    separatorColor: asCssVariable(menuSeparatorBackground),\n    scrollbarShadow: asCssVariable(scrollbarShadow),\n    scrollbarSliderBackground: asCssVariable(scrollbarSliderBackground),\n    scrollbarSliderHoverBackground: asCssVariable(scrollbarSliderHoverBackground),\n    scrollbarSliderActiveBackground: asCssVariable(scrollbarSliderActiveBackground)\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { asCSSPropertyValue, asCSSUrl } from '../../../base/browser/dom.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { getIconRegistry } from '../common/iconRegistry.js';\nexport function getIconsStyleSheet(themeService) {\n    const onDidChangeEmmiter = new Emitter();\n    const iconRegistry = getIconRegistry();\n    iconRegistry.onDidChange(() => onDidChangeEmmiter.fire());\n    themeService === null || themeService === void 0 ? void 0 : themeService.onDidProductIconThemeChange(() => onDidChangeEmmiter.fire());\n    return {\n        onDidChange: onDidChangeEmmiter.event,\n        getCSS() {\n            const productIconTheme = themeService ? themeService.getProductIconTheme() : new UnthemedProductIconTheme();\n            const usedFontIds = {};\n            const formatIconRule = (contribution) => {\n                const definition = productIconTheme.getIcon(contribution);\n                if (!definition) {\n                    return undefined;\n                }\n                const fontContribution = definition.font;\n                if (fontContribution) {\n                    usedFontIds[fontContribution.id] = fontContribution.definition;\n                    return `.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; font-family: ${asCSSPropertyValue(fontContribution.id)}; }`;\n                }\n                // default font (codicon)\n                return `.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; }`;\n            };\n            const rules = [];\n            for (const contribution of iconRegistry.getIcons()) {\n                const rule = formatIconRule(contribution);\n                if (rule) {\n                    rules.push(rule);\n                }\n            }\n            for (const id in usedFontIds) {\n                const definition = usedFontIds[id];\n                const fontWeight = definition.weight ? `font-weight: ${definition.weight};` : '';\n                const fontStyle = definition.style ? `font-style: ${definition.style};` : '';\n                const src = definition.src.map(l => `${asCSSUrl(l.location)} format('${l.format}')`).join(', ');\n                rules.push(`@font-face { src: ${src}; font-family: ${asCSSPropertyValue(id)};${fontWeight}${fontStyle} font-display: block; }`);\n            }\n            return rules.join('\\n');\n        }\n    };\n}\nexport class UnthemedProductIconTheme {\n    getIcon(contribution) {\n        const iconRegistry = getIconRegistry();\n        let definition = contribution.defaults;\n        while (ThemeIcon.isThemeIcon(definition)) {\n            const c = iconRegistry.getIcon(definition.id);\n            if (!c) {\n                return undefined;\n            }\n            definition = c.defaults;\n        }\n        return definition;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Color, RGBA } from '../../../base/common/color.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { assertNever } from '../../../base/common/assert.js';\nimport * as nls from '../../../nls.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport * as platform from '../../registry/common/platform.js';\n/**\n * Returns the css variable name for the given color identifier. Dots (`.`) are replaced with hyphens (`-`) and\n * everything is prefixed with `--vscode-`.\n *\n * @sample `editorSuggestWidget.background` is `--vscode-editorSuggestWidget-background`.\n */\nexport function asCssVariableName(colorIdent) {\n    return `--vscode-${colorIdent.replace(/\\./g, '-')}`;\n}\nexport function asCssVariable(color) {\n    return `var(${asCssVariableName(color)})`;\n}\nexport function asCssVariableWithDefault(color, defaultCssValue) {\n    return `var(${asCssVariableName(color)}, ${defaultCssValue})`;\n}\n// color registry\nexport const Extensions = {\n    ColorContribution: 'base.contributions.colors'\n};\nclass ColorRegistry {\n    constructor() {\n        this._onDidChangeSchema = new Emitter();\n        this.onDidChangeSchema = this._onDidChangeSchema.event;\n        this.colorSchema = { type: 'object', properties: {} };\n        this.colorReferenceSchema = { type: 'string', enum: [], enumDescriptions: [] };\n        this.colorsById = {};\n    }\n    registerColor(id, defaults, description, needsTransparency = false, deprecationMessage) {\n        const colorContribution = { id, description, defaults, needsTransparency, deprecationMessage };\n        this.colorsById[id] = colorContribution;\n        const propertySchema = { type: 'string', description, format: 'color-hex', defaultSnippets: [{ body: '${1:#ff0000}' }] };\n        if (deprecationMessage) {\n            propertySchema.deprecationMessage = deprecationMessage;\n        }\n        this.colorSchema.properties[id] = propertySchema;\n        this.colorReferenceSchema.enum.push(id);\n        this.colorReferenceSchema.enumDescriptions.push(description);\n        this._onDidChangeSchema.fire();\n        return id;\n    }\n    getColors() {\n        return Object.keys(this.colorsById).map(id => this.colorsById[id]);\n    }\n    resolveDefaultColor(id, theme) {\n        const colorDesc = this.colorsById[id];\n        if (colorDesc && colorDesc.defaults) {\n            const colorValue = colorDesc.defaults[theme.type];\n            return resolveColorValue(colorValue, theme);\n        }\n        return undefined;\n    }\n    getColorSchema() {\n        return this.colorSchema;\n    }\n    toString() {\n        const sorter = (a, b) => {\n            const cat1 = a.indexOf('.') === -1 ? 0 : 1;\n            const cat2 = b.indexOf('.') === -1 ? 0 : 1;\n            if (cat1 !== cat2) {\n                return cat1 - cat2;\n            }\n            return a.localeCompare(b);\n        };\n        return Object.keys(this.colorsById).sort(sorter).map(k => `- \\`${k}\\`: ${this.colorsById[k].description}`).join('\\n');\n    }\n}\nconst colorRegistry = new ColorRegistry();\nplatform.Registry.add(Extensions.ColorContribution, colorRegistry);\nfunction migrateColorDefaults(o) {\n    if (o === null) {\n        return o;\n    }\n    if (typeof o.hcLight === 'undefined') {\n        if (o.hcDark === null || typeof o.hcDark === 'string') {\n            o.hcLight = o.hcDark;\n        }\n        else {\n            o.hcLight = o.light;\n        }\n    }\n    return o;\n}\nexport function registerColor(id, defaults, description, needsTransparency, deprecationMessage) {\n    return colorRegistry.registerColor(id, migrateColorDefaults(defaults), description, needsTransparency, deprecationMessage);\n}\n// ----- base colors\nexport const foreground = registerColor('foreground', { dark: '#CCCCCC', light: '#616161', hcDark: '#FFFFFF', hcLight: '#292929' }, nls.localize('foreground', \"Overall foreground color. This color is only used if not overridden by a component.\"));\nexport const disabledForeground = registerColor('disabledForeground', { dark: '#CCCCCC80', light: '#61616180', hcDark: '#A5A5A5', hcLight: '#7F7F7F' }, nls.localize('disabledForeground', \"Overall foreground for disabled elements. This color is only used if not overridden by a component.\"));\nexport const errorForeground = registerColor('errorForeground', { dark: '#F48771', light: '#A1260D', hcDark: '#F48771', hcLight: '#B5200D' }, nls.localize('errorForeground', \"Overall foreground color for error messages. This color is only used if not overridden by a component.\"));\nexport const descriptionForeground = registerColor('descriptionForeground', { light: '#717171', dark: transparent(foreground, 0.7), hcDark: transparent(foreground, 0.7), hcLight: transparent(foreground, 0.7) }, nls.localize('descriptionForeground', \"Foreground color for description text providing additional information, for example for a label.\"));\nexport const iconForeground = registerColor('icon.foreground', { dark: '#C5C5C5', light: '#424242', hcDark: '#FFFFFF', hcLight: '#292929' }, nls.localize('iconForeground', \"The default color for icons in the workbench.\"));\nexport const focusBorder = registerColor('focusBorder', { dark: '#007FD4', light: '#0090F1', hcDark: '#F38518', hcLight: '#006BBD' }, nls.localize('focusBorder', \"Overall border color for focused elements. This color is only used if not overridden by a component.\"));\nexport const contrastBorder = registerColor('contrastBorder', { light: null, dark: null, hcDark: '#6FC3DF', hcLight: '#0F4A85' }, nls.localize('contrastBorder', \"An extra border around elements to separate them from others for greater contrast.\"));\nexport const activeContrastBorder = registerColor('contrastActiveBorder', { light: null, dark: null, hcDark: focusBorder, hcLight: focusBorder }, nls.localize('activeContrastBorder', \"An extra border around active elements to separate them from others for greater contrast.\"));\nexport const selectionBackground = registerColor('selection.background', { light: null, dark: null, hcDark: null, hcLight: null }, nls.localize('selectionBackground', \"The background color of text selections in the workbench (e.g. for input fields or text areas). Note that this does not apply to selections within the editor.\"));\n// ------ text colors\nexport const textSeparatorForeground = registerColor('textSeparator.foreground', { light: '#0000002e', dark: '#ffffff2e', hcDark: Color.black, hcLight: '#292929' }, nls.localize('textSeparatorForeground', \"Color for text separators.\"));\nexport const textLinkForeground = registerColor('textLink.foreground', { light: '#006AB1', dark: '#3794FF', hcDark: '#3794FF', hcLight: '#0F4A85' }, nls.localize('textLinkForeground', \"Foreground color for links in text.\"));\nexport const textLinkActiveForeground = registerColor('textLink.activeForeground', { light: '#006AB1', dark: '#3794FF', hcDark: '#3794FF', hcLight: '#0F4A85' }, nls.localize('textLinkActiveForeground', \"Foreground color for links in text when clicked on and on mouse hover.\"));\nexport const textPreformatForeground = registerColor('textPreformat.foreground', { light: '#A31515', dark: '#D7BA7D', hcDark: '#D7BA7D', hcLight: '#292929' }, nls.localize('textPreformatForeground', \"Foreground color for preformatted text segments.\"));\nexport const textBlockQuoteBackground = registerColor('textBlockQuote.background', { light: '#7f7f7f1a', dark: '#7f7f7f1a', hcDark: null, hcLight: '#F2F2F2' }, nls.localize('textBlockQuoteBackground', \"Background color for block quotes in text.\"));\nexport const textBlockQuoteBorder = registerColor('textBlockQuote.border', { light: '#007acc80', dark: '#007acc80', hcDark: Color.white, hcLight: '#292929' }, nls.localize('textBlockQuoteBorder', \"Border color for block quotes in text.\"));\nexport const textCodeBlockBackground = registerColor('textCodeBlock.background', { light: '#dcdcdc66', dark: '#0a0a0a66', hcDark: Color.black, hcLight: '#F2F2F2' }, nls.localize('textCodeBlockBackground', \"Background color for code blocks in text.\"));\n// ----- widgets\nexport const widgetShadow = registerColor('widget.shadow', { dark: transparent(Color.black, .36), light: transparent(Color.black, .16), hcDark: null, hcLight: null }, nls.localize('widgetShadow', 'Shadow color of widgets such as find/replace inside the editor.'));\nexport const widgetBorder = registerColor('widget.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('widgetBorder', 'Border color of widgets such as find/replace inside the editor.'));\nexport const inputBackground = registerColor('input.background', { dark: '#3C3C3C', light: Color.white, hcDark: Color.black, hcLight: Color.white }, nls.localize('inputBoxBackground', \"Input box background.\"));\nexport const inputForeground = registerColor('input.foreground', { dark: foreground, light: foreground, hcDark: foreground, hcLight: foreground }, nls.localize('inputBoxForeground', \"Input box foreground.\"));\nexport const inputBorder = registerColor('input.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputBoxBorder', \"Input box border.\"));\nexport const inputActiveOptionBorder = registerColor('inputOption.activeBorder', { dark: '#007ACC', light: '#007ACC', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputBoxActiveOptionBorder', \"Border color of activated options in input fields.\"));\nexport const inputActiveOptionHoverBackground = registerColor('inputOption.hoverBackground', { dark: '#5a5d5e80', light: '#b8b8b850', hcDark: null, hcLight: null }, nls.localize('inputOption.hoverBackground', \"Background color of activated options in input fields.\"));\nexport const inputActiveOptionBackground = registerColor('inputOption.activeBackground', { dark: transparent(focusBorder, 0.4), light: transparent(focusBorder, 0.2), hcDark: Color.transparent, hcLight: Color.transparent }, nls.localize('inputOption.activeBackground', \"Background hover color of options in input fields.\"));\nexport const inputActiveOptionForeground = registerColor('inputOption.activeForeground', { dark: Color.white, light: Color.black, hcDark: foreground, hcLight: foreground }, nls.localize('inputOption.activeForeground', \"Foreground color of activated options in input fields.\"));\nexport const inputPlaceholderForeground = registerColor('input.placeholderForeground', { light: transparent(foreground, 0.5), dark: transparent(foreground, 0.5), hcDark: transparent(foreground, 0.7), hcLight: transparent(foreground, 0.7) }, nls.localize('inputPlaceholderForeground', \"Input box foreground color for placeholder text.\"));\nexport const inputValidationInfoBackground = registerColor('inputValidation.infoBackground', { dark: '#063B49', light: '#D6ECF2', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationInfoBackground', \"Input validation background color for information severity.\"));\nexport const inputValidationInfoForeground = registerColor('inputValidation.infoForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationInfoForeground', \"Input validation foreground color for information severity.\"));\nexport const inputValidationInfoBorder = registerColor('inputValidation.infoBorder', { dark: '#007acc', light: '#007acc', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationInfoBorder', \"Input validation border color for information severity.\"));\nexport const inputValidationWarningBackground = registerColor('inputValidation.warningBackground', { dark: '#352A05', light: '#F6F5D2', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationWarningBackground', \"Input validation background color for warning severity.\"));\nexport const inputValidationWarningForeground = registerColor('inputValidation.warningForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationWarningForeground', \"Input validation foreground color for warning severity.\"));\nexport const inputValidationWarningBorder = registerColor('inputValidation.warningBorder', { dark: '#B89500', light: '#B89500', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationWarningBorder', \"Input validation border color for warning severity.\"));\nexport const inputValidationErrorBackground = registerColor('inputValidation.errorBackground', { dark: '#5A1D1D', light: '#F2DEDE', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationErrorBackground', \"Input validation background color for error severity.\"));\nexport const inputValidationErrorForeground = registerColor('inputValidation.errorForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationErrorForeground', \"Input validation foreground color for error severity.\"));\nexport const inputValidationErrorBorder = registerColor('inputValidation.errorBorder', { dark: '#BE1100', light: '#BE1100', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationErrorBorder', \"Input validation border color for error severity.\"));\nexport const selectBackground = registerColor('dropdown.background', { dark: '#3C3C3C', light: Color.white, hcDark: Color.black, hcLight: Color.white }, nls.localize('dropdownBackground', \"Dropdown background.\"));\nexport const selectListBackground = registerColor('dropdown.listBackground', { dark: null, light: null, hcDark: Color.black, hcLight: Color.white }, nls.localize('dropdownListBackground', \"Dropdown list background.\"));\nexport const selectForeground = registerColor('dropdown.foreground', { dark: '#F0F0F0', light: foreground, hcDark: Color.white, hcLight: foreground }, nls.localize('dropdownForeground', \"Dropdown foreground.\"));\nexport const selectBorder = registerColor('dropdown.border', { dark: selectBackground, light: '#CECECE', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('dropdownBorder', \"Dropdown border.\"));\nexport const buttonForeground = registerColor('button.foreground', { dark: Color.white, light: Color.white, hcDark: Color.white, hcLight: Color.white }, nls.localize('buttonForeground', \"Button foreground color.\"));\nexport const buttonSeparator = registerColor('button.separator', { dark: transparent(buttonForeground, .4), light: transparent(buttonForeground, .4), hcDark: transparent(buttonForeground, .4), hcLight: transparent(buttonForeground, .4) }, nls.localize('buttonSeparator', \"Button separator color.\"));\nexport const buttonBackground = registerColor('button.background', { dark: '#0E639C', light: '#007ACC', hcDark: null, hcLight: '#0F4A85' }, nls.localize('buttonBackground', \"Button background color.\"));\nexport const buttonHoverBackground = registerColor('button.hoverBackground', { dark: lighten(buttonBackground, 0.2), light: darken(buttonBackground, 0.2), hcDark: buttonBackground, hcLight: buttonBackground }, nls.localize('buttonHoverBackground', \"Button background color when hovering.\"));\nexport const buttonBorder = registerColor('button.border', { dark: contrastBorder, light: contrastBorder, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('buttonBorder', \"Button border color.\"));\nexport const buttonSecondaryForeground = registerColor('button.secondaryForeground', { dark: Color.white, light: Color.white, hcDark: Color.white, hcLight: foreground }, nls.localize('buttonSecondaryForeground', \"Secondary button foreground color.\"));\nexport const buttonSecondaryBackground = registerColor('button.secondaryBackground', { dark: '#3A3D41', light: '#5F6A79', hcDark: null, hcLight: Color.white }, nls.localize('buttonSecondaryBackground', \"Secondary button background color.\"));\nexport const buttonSecondaryHoverBackground = registerColor('button.secondaryHoverBackground', { dark: lighten(buttonSecondaryBackground, 0.2), light: darken(buttonSecondaryBackground, 0.2), hcDark: null, hcLight: null }, nls.localize('buttonSecondaryHoverBackground', \"Secondary button background color when hovering.\"));\nexport const badgeBackground = registerColor('badge.background', { dark: '#4D4D4D', light: '#C4C4C4', hcDark: Color.black, hcLight: '#0F4A85' }, nls.localize('badgeBackground', \"Badge background color. Badges are small information labels, e.g. for search results count.\"));\nexport const badgeForeground = registerColor('badge.foreground', { dark: Color.white, light: '#333', hcDark: Color.white, hcLight: Color.white }, nls.localize('badgeForeground', \"Badge foreground color. Badges are small information labels, e.g. for search results count.\"));\nexport const scrollbarShadow = registerColor('scrollbar.shadow', { dark: '#000000', light: '#DDDDDD', hcDark: null, hcLight: null }, nls.localize('scrollbarShadow', \"Scrollbar shadow to indicate that the view is scrolled.\"));\nexport const scrollbarSliderBackground = registerColor('scrollbarSlider.background', { dark: Color.fromHex('#797979').transparent(0.4), light: Color.fromHex('#646464').transparent(0.4), hcDark: transparent(contrastBorder, 0.6), hcLight: transparent(contrastBorder, 0.4) }, nls.localize('scrollbarSliderBackground', \"Scrollbar slider background color.\"));\nexport const scrollbarSliderHoverBackground = registerColor('scrollbarSlider.hoverBackground', { dark: Color.fromHex('#646464').transparent(0.7), light: Color.fromHex('#646464').transparent(0.7), hcDark: transparent(contrastBorder, 0.8), hcLight: transparent(contrastBorder, 0.8) }, nls.localize('scrollbarSliderHoverBackground', \"Scrollbar slider background color when hovering.\"));\nexport const scrollbarSliderActiveBackground = registerColor('scrollbarSlider.activeBackground', { dark: Color.fromHex('#BFBFBF').transparent(0.4), light: Color.fromHex('#000000').transparent(0.6), hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('scrollbarSliderActiveBackground', \"Scrollbar slider background color when clicked on.\"));\nexport const progressBarBackground = registerColor('progressBar.background', { dark: Color.fromHex('#0E70C0'), light: Color.fromHex('#0E70C0'), hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('progressBarBackground', \"Background color of the progress bar that can show for long running operations.\"));\nexport const editorErrorBackground = registerColor('editorError.background', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('editorError.background', 'Background color of error text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorErrorForeground = registerColor('editorError.foreground', { dark: '#F14C4C', light: '#E51400', hcDark: '#F48771', hcLight: '#B5200D' }, nls.localize('editorError.foreground', 'Foreground color of error squigglies in the editor.'));\nexport const editorErrorBorder = registerColor('editorError.border', { dark: null, light: null, hcDark: Color.fromHex('#E47777').transparent(0.8), hcLight: '#B5200D' }, nls.localize('errorBorder', 'Border color of error boxes in the editor.'));\nexport const editorWarningBackground = registerColor('editorWarning.background', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('editorWarning.background', 'Background color of warning text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorWarningForeground = registerColor('editorWarning.foreground', { dark: '#CCA700', light: '#BF8803', hcDark: '#FFD37', hcLight: '#895503' }, nls.localize('editorWarning.foreground', 'Foreground color of warning squigglies in the editor.'));\nexport const editorWarningBorder = registerColor('editorWarning.border', { dark: null, light: null, hcDark: Color.fromHex('#FFCC00').transparent(0.8), hcLight: '#' }, nls.localize('warningBorder', 'Border color of warning boxes in the editor.'));\nexport const editorInfoBackground = registerColor('editorInfo.background', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('editorInfo.background', 'Background color of info text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorInfoForeground = registerColor('editorInfo.foreground', { dark: '#3794FF', light: '#1a85ff', hcDark: '#3794FF', hcLight: '#1a85ff' }, nls.localize('editorInfo.foreground', 'Foreground color of info squigglies in the editor.'));\nexport const editorInfoBorder = registerColor('editorInfo.border', { dark: null, light: null, hcDark: Color.fromHex('#3794FF').transparent(0.8), hcLight: '#292929' }, nls.localize('infoBorder', 'Border color of info boxes in the editor.'));\nexport const editorHintForeground = registerColor('editorHint.foreground', { dark: Color.fromHex('#eeeeee').transparent(0.7), light: '#6c6c6c', hcDark: null, hcLight: null }, nls.localize('editorHint.foreground', 'Foreground color of hint squigglies in the editor.'));\nexport const editorHintBorder = registerColor('editorHint.border', { dark: null, light: null, hcDark: Color.fromHex('#eeeeee').transparent(0.8), hcLight: '#292929' }, nls.localize('hintBorder', 'Border color of hint boxes in the editor.'));\nexport const sashHoverBorder = registerColor('sash.hoverBorder', { dark: focusBorder, light: focusBorder, hcDark: focusBorder, hcLight: focusBorder }, nls.localize('sashActiveBorder', \"Border color of active sashes.\"));\n/**\n * Editor background color.\n */\nexport const editorBackground = registerColor('editor.background', { light: '#ffffff', dark: '#1E1E1E', hcDark: Color.black, hcLight: Color.white }, nls.localize('editorBackground', \"Editor background color.\"));\n/**\n * Editor foreground color.\n */\nexport const editorForeground = registerColor('editor.foreground', { light: '#333333', dark: '#BBBBBB', hcDark: Color.white, hcLight: foreground }, nls.localize('editorForeground', \"Editor default foreground color.\"));\n/**\n * Sticky scroll\n */\nexport const editorStickyScrollBackground = registerColor('editorStickyScroll.background', { light: editorBackground, dark: editorBackground, hcDark: editorBackground, hcLight: editorBackground }, nls.localize('editorStickyScrollBackground', \"Sticky scroll background color for the editor\"));\nexport const editorStickyScrollHoverBackground = registerColor('editorStickyScrollHover.background', { dark: '#2A2D2E', light: '#F0F0F0', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('editorStickyScrollHoverBackground', \"Sticky scroll on hover background color for the editor\"));\n/**\n * Editor widgets\n */\nexport const editorWidgetBackground = registerColor('editorWidget.background', { dark: '#252526', light: '#F3F3F3', hcDark: '#0C141F', hcLight: Color.white }, nls.localize('editorWidgetBackground', 'Background color of editor widgets, such as find/replace.'));\nexport const editorWidgetForeground = registerColor('editorWidget.foreground', { dark: foreground, light: foreground, hcDark: foreground, hcLight: foreground }, nls.localize('editorWidgetForeground', 'Foreground color of editor widgets, such as find/replace.'));\nexport const editorWidgetBorder = registerColor('editorWidget.border', { dark: '#454545', light: '#C8C8C8', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('editorWidgetBorder', 'Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.'));\nexport const editorWidgetResizeBorder = registerColor('editorWidget.resizeBorder', { light: null, dark: null, hcDark: null, hcLight: null }, nls.localize('editorWidgetResizeBorder', \"Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.\"));\n/**\n * Quick pick widget\n */\nexport const quickInputBackground = registerColor('quickInput.background', { dark: editorWidgetBackground, light: editorWidgetBackground, hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('pickerBackground', \"Quick picker background color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const quickInputForeground = registerColor('quickInput.foreground', { dark: editorWidgetForeground, light: editorWidgetForeground, hcDark: editorWidgetForeground, hcLight: editorWidgetForeground }, nls.localize('pickerForeground', \"Quick picker foreground color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const quickInputTitleBackground = registerColor('quickInputTitle.background', { dark: new Color(new RGBA(255, 255, 255, 0.105)), light: new Color(new RGBA(0, 0, 0, 0.06)), hcDark: '#000000', hcLight: Color.white }, nls.localize('pickerTitleBackground', \"Quick picker title background color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const pickerGroupForeground = registerColor('pickerGroup.foreground', { dark: '#3794FF', light: '#0066BF', hcDark: Color.white, hcLight: '#0F4A85' }, nls.localize('pickerGroupForeground', \"Quick picker color for grouping labels.\"));\nexport const pickerGroupBorder = registerColor('pickerGroup.border', { dark: '#3F3F46', light: '#CCCEDB', hcDark: Color.white, hcLight: '#0F4A85' }, nls.localize('pickerGroupBorder', \"Quick picker color for grouping borders.\"));\n/**\n * Keybinding label\n */\nexport const keybindingLabelBackground = registerColor('keybindingLabel.background', { dark: new Color(new RGBA(128, 128, 128, 0.17)), light: new Color(new RGBA(221, 221, 221, 0.4)), hcDark: Color.transparent, hcLight: Color.transparent }, nls.localize('keybindingLabelBackground', \"Keybinding label background color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelForeground = registerColor('keybindingLabel.foreground', { dark: Color.fromHex('#CCCCCC'), light: Color.fromHex('#555555'), hcDark: Color.white, hcLight: foreground }, nls.localize('keybindingLabelForeground', \"Keybinding label foreground color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelBorder = registerColor('keybindingLabel.border', { dark: new Color(new RGBA(51, 51, 51, 0.6)), light: new Color(new RGBA(204, 204, 204, 0.4)), hcDark: new Color(new RGBA(111, 195, 223)), hcLight: contrastBorder }, nls.localize('keybindingLabelBorder', \"Keybinding label border color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelBottomBorder = registerColor('keybindingLabel.bottomBorder', { dark: new Color(new RGBA(68, 68, 68, 0.6)), light: new Color(new RGBA(187, 187, 187, 0.4)), hcDark: new Color(new RGBA(111, 195, 223)), hcLight: foreground }, nls.localize('keybindingLabelBottomBorder', \"Keybinding label border bottom color. The keybinding label is used to represent a keyboard shortcut.\"));\n/**\n * Editor selection colors.\n */\nexport const editorSelectionBackground = registerColor('editor.selectionBackground', { light: '#ADD6FF', dark: '#264F78', hcDark: '#f3f518', hcLight: '#0F4A85' }, nls.localize('editorSelectionBackground', \"Color of the editor selection.\"));\nexport const editorSelectionForeground = registerColor('editor.selectionForeground', { light: null, dark: null, hcDark: '#000000', hcLight: Color.white }, nls.localize('editorSelectionForeground', \"Color of the selected text for high contrast.\"));\nexport const editorInactiveSelection = registerColor('editor.inactiveSelectionBackground', { light: transparent(editorSelectionBackground, 0.5), dark: transparent(editorSelectionBackground, 0.5), hcDark: transparent(editorSelectionBackground, 0.7), hcLight: transparent(editorSelectionBackground, 0.5) }, nls.localize('editorInactiveSelection', \"Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorSelectionHighlight = registerColor('editor.selectionHighlightBackground', { light: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6), dark: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6), hcDark: null, hcLight: null }, nls.localize('editorSelectionHighlight', 'Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorSelectionHighlightBorder = registerColor('editor.selectionHighlightBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('editorSelectionHighlightBorder', \"Border color for regions with the same content as the selection.\"));\n/**\n * Editor find match colors.\n */\nexport const editorFindMatch = registerColor('editor.findMatchBackground', { light: '#A8AC94', dark: '#515C6A', hcDark: null, hcLight: null }, nls.localize('editorFindMatch', \"Color of the current search match.\"));\nexport const editorFindMatchHighlight = registerColor('editor.findMatchHighlightBackground', { light: '#EA5C0055', dark: '#EA5C0055', hcDark: null, hcLight: null }, nls.localize('findMatchHighlight', \"Color of the other search matches. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorFindRangeHighlight = registerColor('editor.findRangeHighlightBackground', { dark: '#3a3d4166', light: '#b4b4b44d', hcDark: null, hcLight: null }, nls.localize('findRangeHighlight', \"Color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorFindMatchBorder = registerColor('editor.findMatchBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('editorFindMatchBorder', \"Border color of the current search match.\"));\nexport const editorFindMatchHighlightBorder = registerColor('editor.findMatchHighlightBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('findMatchHighlightBorder', \"Border color of the other search matches.\"));\nexport const editorFindRangeHighlightBorder = registerColor('editor.findRangeHighlightBorder', { dark: null, light: null, hcDark: transparent(activeContrastBorder, 0.4), hcLight: transparent(activeContrastBorder, 0.4) }, nls.localize('findRangeHighlightBorder', \"Border color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\n/**\n * Search Editor query match colors.\n *\n * Distinct from normal editor find match to allow for better differentiation\n */\nexport const searchEditorFindMatch = registerColor('searchEditor.findMatchBackground', { light: transparent(editorFindMatchHighlight, 0.66), dark: transparent(editorFindMatchHighlight, 0.66), hcDark: editorFindMatchHighlight, hcLight: editorFindMatchHighlight }, nls.localize('searchEditor.queryMatch', \"Color of the Search Editor query matches.\"));\nexport const searchEditorFindMatchBorder = registerColor('searchEditor.findMatchBorder', { light: transparent(editorFindMatchHighlightBorder, 0.66), dark: transparent(editorFindMatchHighlightBorder, 0.66), hcDark: editorFindMatchHighlightBorder, hcLight: editorFindMatchHighlightBorder }, nls.localize('searchEditor.editorFindMatchBorder', \"Border color of the Search Editor query matches.\"));\n/**\n * Editor hover\n */\nexport const editorHoverHighlight = registerColor('editor.hoverHighlightBackground', { light: '#ADD6FF26', dark: '#264f7840', hcDark: '#ADD6FF26', hcLight: null }, nls.localize('hoverHighlight', 'Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorHoverBackground = registerColor('editorHoverWidget.background', { light: editorWidgetBackground, dark: editorWidgetBackground, hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('hoverBackground', 'Background color of the editor hover.'));\nexport const editorHoverForeground = registerColor('editorHoverWidget.foreground', { light: editorWidgetForeground, dark: editorWidgetForeground, hcDark: editorWidgetForeground, hcLight: editorWidgetForeground }, nls.localize('hoverForeground', 'Foreground color of the editor hover.'));\nexport const editorHoverBorder = registerColor('editorHoverWidget.border', { light: editorWidgetBorder, dark: editorWidgetBorder, hcDark: editorWidgetBorder, hcLight: editorWidgetBorder }, nls.localize('hoverBorder', 'Border color of the editor hover.'));\nexport const editorHoverStatusBarBackground = registerColor('editorHoverWidget.statusBarBackground', { dark: lighten(editorHoverBackground, 0.2), light: darken(editorHoverBackground, 0.05), hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('statusBarBackground', \"Background color of the editor hover status bar.\"));\n/**\n * Editor link colors\n */\nexport const editorActiveLinkForeground = registerColor('editorLink.activeForeground', { dark: '#4E94CE', light: Color.blue, hcDark: Color.cyan, hcLight: '#292929' }, nls.localize('activeLinkForeground', 'Color of active links.'));\n/**\n * Inline hints\n */\nexport const editorInlayHintForeground = registerColor('editorInlayHint.foreground', { dark: badgeForeground, light: badgeForeground, hcDark: Color.black, hcLight: badgeForeground }, nls.localize('editorInlayHintForeground', 'Foreground color of inline hints'));\nexport const editorInlayHintBackground = registerColor('editorInlayHint.background', { dark: transparent(badgeBackground, .8), light: transparent(badgeBackground, .6), hcDark: '#f38518', hcLight: badgeBackground }, nls.localize('editorInlayHintBackground', 'Background color of inline hints'));\nexport const editorInlayHintTypeForeground = registerColor('editorInlayHint.typeForeground', { dark: editorInlayHintForeground, light: editorInlayHintForeground, hcDark: editorInlayHintForeground, hcLight: editorInlayHintForeground }, nls.localize('editorInlayHintForegroundTypes', 'Foreground color of inline hints for types'));\nexport const editorInlayHintTypeBackground = registerColor('editorInlayHint.typeBackground', { dark: editorInlayHintBackground, light: editorInlayHintBackground, hcDark: editorInlayHintBackground, hcLight: editorInlayHintBackground }, nls.localize('editorInlayHintBackgroundTypes', 'Background color of inline hints for types'));\nexport const editorInlayHintParameterForeground = registerColor('editorInlayHint.parameterForeground', { dark: editorInlayHintForeground, light: editorInlayHintForeground, hcDark: editorInlayHintForeground, hcLight: editorInlayHintForeground }, nls.localize('editorInlayHintForegroundParameter', 'Foreground color of inline hints for parameters'));\nexport const editorInlayHintParameterBackground = registerColor('editorInlayHint.parameterBackground', { dark: editorInlayHintBackground, light: editorInlayHintBackground, hcDark: editorInlayHintBackground, hcLight: editorInlayHintBackground }, nls.localize('editorInlayHintBackgroundParameter', 'Background color of inline hints for parameters'));\n/**\n * Editor lighbulb icon colors\n */\nexport const editorLightBulbForeground = registerColor('editorLightBulb.foreground', { dark: '#FFCC00', light: '#DDB100', hcDark: '#FFCC00', hcLight: '#007ACC' }, nls.localize('editorLightBulbForeground', \"The color used for the lightbulb actions icon.\"));\nexport const editorLightBulbAutoFixForeground = registerColor('editorLightBulbAutoFix.foreground', { dark: '#75BEFF', light: '#007ACC', hcDark: '#75BEFF', hcLight: '#007ACC' }, nls.localize('editorLightBulbAutoFixForeground', \"The color used for the lightbulb auto fix actions icon.\"));\n/**\n * Diff Editor Colors\n */\nexport const defaultInsertColor = new Color(new RGBA(155, 185, 85, .2));\nexport const defaultRemoveColor = new Color(new RGBA(255, 0, 0, .2));\nexport const diffInserted = registerColor('diffEditor.insertedTextBackground', { dark: '#9ccc2c33', light: '#9ccc2c40', hcDark: null, hcLight: null }, nls.localize('diffEditorInserted', 'Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffRemoved = registerColor('diffEditor.removedTextBackground', { dark: '#ff000033', light: '#ff000033', hcDark: null, hcLight: null }, nls.localize('diffEditorRemoved', 'Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffInsertedLine = registerColor('diffEditor.insertedLineBackground', { dark: defaultInsertColor, light: defaultInsertColor, hcDark: null, hcLight: null }, nls.localize('diffEditorInsertedLines', 'Background color for lines that got inserted. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffRemovedLine = registerColor('diffEditor.removedLineBackground', { dark: defaultRemoveColor, light: defaultRemoveColor, hcDark: null, hcLight: null }, nls.localize('diffEditorRemovedLines', 'Background color for lines that got removed. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffInsertedLineGutter = registerColor('diffEditorGutter.insertedLineBackground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('diffEditorInsertedLineGutter', 'Background color for the margin where lines got inserted.'));\nexport const diffRemovedLineGutter = registerColor('diffEditorGutter.removedLineBackground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('diffEditorRemovedLineGutter', 'Background color for the margin where lines got removed.'));\nexport const diffOverviewRulerInserted = registerColor('diffEditorOverview.insertedForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('diffEditorOverviewInserted', 'Diff overview ruler foreground for inserted content.'));\nexport const diffOverviewRulerRemoved = registerColor('diffEditorOverview.removedForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('diffEditorOverviewRemoved', 'Diff overview ruler foreground for removed content.'));\nexport const diffInsertedOutline = registerColor('diffEditor.insertedTextBorder', { dark: null, light: null, hcDark: '#33ff2eff', hcLight: '#374E06' }, nls.localize('diffEditorInsertedOutline', 'Outline color for the text that got inserted.'));\nexport const diffRemovedOutline = registerColor('diffEditor.removedTextBorder', { dark: null, light: null, hcDark: '#FF008F', hcLight: '#AD0707' }, nls.localize('diffEditorRemovedOutline', 'Outline color for text that got removed.'));\nexport const diffBorder = registerColor('diffEditor.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('diffEditorBorder', 'Border color between the two text editors.'));\nexport const diffDiagonalFill = registerColor('diffEditor.diagonalFill', { dark: '#cccccc33', light: '#22222233', hcDark: null, hcLight: null }, nls.localize('diffDiagonalFill', \"Color of the diff editor's diagonal fill. The diagonal fill is used in side-by-side diff views.\"));\n/**\n * List and tree colors\n */\nexport const listFocusBackground = registerColor('list.focusBackground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listFocusBackground', \"List/Tree background color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusForeground = registerColor('list.focusForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listFocusForeground', \"List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusOutline = registerColor('list.focusOutline', { dark: focusBorder, light: focusBorder, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('listFocusOutline', \"List/Tree outline color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusAndSelectionOutline = registerColor('list.focusAndSelectionOutline', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listFocusAndSelectionOutline', \"List/Tree outline color for the focused item when the list/tree is active and selected. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionBackground = registerColor('list.activeSelectionBackground', { dark: '#04395E', light: '#0060C0', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listActiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionForeground = registerColor('list.activeSelectionForeground', { dark: Color.white, light: Color.white, hcDark: null, hcLight: null }, nls.localize('listActiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionIconForeground = registerColor('list.activeSelectionIconForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listActiveSelectionIconForeground', \"List/Tree icon foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionBackground = registerColor('list.inactiveSelectionBackground', { dark: '#37373D', light: '#E4E6F1', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listInactiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionForeground = registerColor('list.inactiveSelectionForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listInactiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionIconForeground = registerColor('list.inactiveSelectionIconForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listInactiveSelectionIconForeground', \"List/Tree icon foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveFocusBackground = registerColor('list.inactiveFocusBackground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listInactiveFocusBackground', \"List/Tree background color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveFocusOutline = registerColor('list.inactiveFocusOutline', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listInactiveFocusOutline', \"List/Tree outline color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listHoverBackground = registerColor('list.hoverBackground', { dark: '#2A2D2E', light: '#F0F0F0', hcDark: Color.white.transparent(0.1), hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listHoverBackground', \"List/Tree background when hovering over items using the mouse.\"));\nexport const listHoverForeground = registerColor('list.hoverForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listHoverForeground', \"List/Tree foreground when hovering over items using the mouse.\"));\nexport const listDropBackground = registerColor('list.dropBackground', { dark: '#062F4A', light: '#D6EBFF', hcDark: null, hcLight: null }, nls.localize('listDropBackground', \"List/Tree drag and drop background when moving items around using the mouse.\"));\nexport const listHighlightForeground = registerColor('list.highlightForeground', { dark: '#2AAAFF', light: '#0066BF', hcDark: focusBorder, hcLight: focusBorder }, nls.localize('highlight', 'List/Tree foreground color of the match highlights when searching inside the list/tree.'));\nexport const listFocusHighlightForeground = registerColor('list.focusHighlightForeground', { dark: listHighlightForeground, light: ifDefinedThenElse(listActiveSelectionBackground, listHighlightForeground, '#BBE7FF'), hcDark: listHighlightForeground, hcLight: listHighlightForeground }, nls.localize('listFocusHighlightForeground', 'List/Tree foreground color of the match highlights on actively focused items when searching inside the list/tree.'));\nexport const listInvalidItemForeground = registerColor('list.invalidItemForeground', { dark: '#B89500', light: '#B89500', hcDark: '#B89500', hcLight: '#B5200D' }, nls.localize('invalidItemForeground', 'List/Tree foreground color for invalid items, for example an unresolved root in explorer.'));\nexport const listErrorForeground = registerColor('list.errorForeground', { dark: '#F88070', light: '#B01011', hcDark: null, hcLight: null }, nls.localize('listErrorForeground', 'Foreground color of list items containing errors.'));\nexport const listWarningForeground = registerColor('list.warningForeground', { dark: '#CCA700', light: '#855F00', hcDark: null, hcLight: null }, nls.localize('listWarningForeground', 'Foreground color of list items containing warnings.'));\nexport const listFilterWidgetBackground = registerColor('listFilterWidget.background', { light: darken(editorWidgetBackground, 0), dark: lighten(editorWidgetBackground, 0), hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('listFilterWidgetBackground', 'Background color of the type filter widget in lists and trees.'));\nexport const listFilterWidgetOutline = registerColor('listFilterWidget.outline', { dark: Color.transparent, light: Color.transparent, hcDark: '#f38518', hcLight: '#007ACC' }, nls.localize('listFilterWidgetOutline', 'Outline color of the type filter widget in lists and trees.'));\nexport const listFilterWidgetNoMatchesOutline = registerColor('listFilterWidget.noMatchesOutline', { dark: '#BE1100', light: '#BE1100', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('listFilterWidgetNoMatchesOutline', 'Outline color of the type filter widget in lists and trees, when there are no matches.'));\nexport const listFilterWidgetShadow = registerColor('listFilterWidget.shadow', { dark: widgetShadow, light: widgetShadow, hcDark: widgetShadow, hcLight: widgetShadow }, nls.localize('listFilterWidgetShadow', 'Shadown color of the type filter widget in lists and trees.'));\nexport const listFilterMatchHighlight = registerColor('list.filterMatchBackground', { dark: editorFindMatchHighlight, light: editorFindMatchHighlight, hcDark: null, hcLight: null }, nls.localize('listFilterMatchHighlight', 'Background color of the filtered match.'));\nexport const listFilterMatchHighlightBorder = registerColor('list.filterMatchBorder', { dark: editorFindMatchHighlightBorder, light: editorFindMatchHighlightBorder, hcDark: contrastBorder, hcLight: activeContrastBorder }, nls.localize('listFilterMatchHighlightBorder', 'Border color of the filtered match.'));\nexport const treeIndentGuidesStroke = registerColor('tree.indentGuidesStroke', { dark: '#585858', light: '#a9a9a9', hcDark: '#a9a9a9', hcLight: '#a5a5a5' }, nls.localize('treeIndentGuidesStroke', \"Tree stroke color for the indentation guides.\"));\nexport const treeInactiveIndentGuidesStroke = registerColor('tree.inactiveIndentGuidesStroke', { dark: transparent(treeIndentGuidesStroke, 0.4), light: transparent(treeIndentGuidesStroke, 0.4), hcDark: transparent(treeIndentGuidesStroke, 0.4), hcLight: transparent(treeIndentGuidesStroke, 0.4) }, nls.localize('treeInactiveIndentGuidesStroke', \"Tree stroke color for the indentation guides that are not active.\"));\nexport const tableColumnsBorder = registerColor('tree.tableColumnsBorder', { dark: '#CCCCCC20', light: '#61616120', hcDark: null, hcLight: null }, nls.localize('tableColumnsBorder', \"Table border color between columns.\"));\nexport const tableOddRowsBackgroundColor = registerColor('tree.tableOddRowsBackground', { dark: transparent(foreground, 0.04), light: transparent(foreground, 0.04), hcDark: null, hcLight: null }, nls.localize('tableOddRowsBackgroundColor', \"Background color for odd table rows.\"));\nexport const listDeemphasizedForeground = registerColor('list.deemphasizedForeground', { dark: '#8C8C8C', light: '#8E8E90', hcDark: '#A7A8A9', hcLight: '#666666' }, nls.localize('listDeemphasizedForeground', \"List/Tree foreground color for items that are deemphasized. \"));\n/**\n * Checkboxes\n */\nexport const checkboxBackground = registerColor('checkbox.background', { dark: selectBackground, light: selectBackground, hcDark: selectBackground, hcLight: selectBackground }, nls.localize('checkbox.background', \"Background color of checkbox widget.\"));\nexport const checkboxSelectBackground = registerColor('checkbox.selectBackground', { dark: editorWidgetBackground, light: editorWidgetBackground, hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('checkbox.select.background', \"Background color of checkbox widget when the element it's in is selected.\"));\nexport const checkboxForeground = registerColor('checkbox.foreground', { dark: selectForeground, light: selectForeground, hcDark: selectForeground, hcLight: selectForeground }, nls.localize('checkbox.foreground', \"Foreground color of checkbox widget.\"));\nexport const checkboxBorder = registerColor('checkbox.border', { dark: selectBorder, light: selectBorder, hcDark: selectBorder, hcLight: selectBorder }, nls.localize('checkbox.border', \"Border color of checkbox widget.\"));\nexport const checkboxSelectBorder = registerColor('checkbox.selectBorder', { dark: editorWidgetBackground, light: editorWidgetBackground, hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('checkbox.select.border', \"Border color of checkbox widget when the element it's in is selected.\"));\n/**\n * Quick pick widget (dependent on List and tree colors)\n */\nexport const _deprecatedQuickInputListFocusBackground = registerColor('quickInput.list.focusBackground', { dark: null, light: null, hcDark: null, hcLight: null }, '', undefined, nls.localize('quickInput.list.focusBackground deprecation', \"Please use quickInputList.focusBackground instead\"));\nexport const quickInputListFocusForeground = registerColor('quickInputList.focusForeground', { dark: listActiveSelectionForeground, light: listActiveSelectionForeground, hcDark: listActiveSelectionForeground, hcLight: listActiveSelectionForeground }, nls.localize('quickInput.listFocusForeground', \"Quick picker foreground color for the focused item.\"));\nexport const quickInputListFocusIconForeground = registerColor('quickInputList.focusIconForeground', { dark: listActiveSelectionIconForeground, light: listActiveSelectionIconForeground, hcDark: listActiveSelectionIconForeground, hcLight: listActiveSelectionIconForeground }, nls.localize('quickInput.listFocusIconForeground', \"Quick picker icon foreground color for the focused item.\"));\nexport const quickInputListFocusBackground = registerColor('quickInputList.focusBackground', { dark: oneOf(_deprecatedQuickInputListFocusBackground, listActiveSelectionBackground), light: oneOf(_deprecatedQuickInputListFocusBackground, listActiveSelectionBackground), hcDark: null, hcLight: null }, nls.localize('quickInput.listFocusBackground', \"Quick picker background color for the focused item.\"));\n/**\n * Menu colors\n */\nexport const menuBorder = registerColor('menu.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('menuBorder', \"Border color of menus.\"));\nexport const menuForeground = registerColor('menu.foreground', { dark: selectForeground, light: selectForeground, hcDark: selectForeground, hcLight: selectForeground }, nls.localize('menuForeground', \"Foreground color of menu items.\"));\nexport const menuBackground = registerColor('menu.background', { dark: selectBackground, light: selectBackground, hcDark: selectBackground, hcLight: selectBackground }, nls.localize('menuBackground', \"Background color of menu items.\"));\nexport const menuSelectionForeground = registerColor('menu.selectionForeground', { dark: listActiveSelectionForeground, light: listActiveSelectionForeground, hcDark: listActiveSelectionForeground, hcLight: listActiveSelectionForeground }, nls.localize('menuSelectionForeground', \"Foreground color of the selected menu item in menus.\"));\nexport const menuSelectionBackground = registerColor('menu.selectionBackground', { dark: listActiveSelectionBackground, light: listActiveSelectionBackground, hcDark: listActiveSelectionBackground, hcLight: listActiveSelectionBackground }, nls.localize('menuSelectionBackground', \"Background color of the selected menu item in menus.\"));\nexport const menuSelectionBorder = registerColor('menu.selectionBorder', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('menuSelectionBorder', \"Border color of the selected menu item in menus.\"));\nexport const menuSeparatorBackground = registerColor('menu.separatorBackground', { dark: '#606060', light: '#D4D4D4', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('menuSeparatorBackground', \"Color of a separator menu item in menus.\"));\n/**\n * Toolbar colors\n */\nexport const toolbarHoverBackground = registerColor('toolbar.hoverBackground', { dark: '#5a5d5e50', light: '#b8b8b850', hcDark: null, hcLight: null }, nls.localize('toolbarHoverBackground', \"Toolbar background when hovering over actions using the mouse\"));\nexport const toolbarHoverOutline = registerColor('toolbar.hoverOutline', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('toolbarHoverOutline', \"Toolbar outline when hovering over actions using the mouse\"));\nexport const toolbarActiveBackground = registerColor('toolbar.activeBackground', { dark: lighten(toolbarHoverBackground, 0.1), light: darken(toolbarHoverBackground, 0.1), hcDark: null, hcLight: null }, nls.localize('toolbarActiveBackground', \"Toolbar background when holding the mouse over actions\"));\n/**\n * Snippet placeholder colors\n */\nexport const snippetTabstopHighlightBackground = registerColor('editor.snippetTabstopHighlightBackground', { dark: new Color(new RGBA(124, 124, 124, 0.3)), light: new Color(new RGBA(10, 50, 100, 0.2)), hcDark: new Color(new RGBA(124, 124, 124, 0.3)), hcLight: new Color(new RGBA(10, 50, 100, 0.2)) }, nls.localize('snippetTabstopHighlightBackground', \"Highlight background color of a snippet tabstop.\"));\nexport const snippetTabstopHighlightBorder = registerColor('editor.snippetTabstopHighlightBorder', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('snippetTabstopHighlightBorder', \"Highlight border color of a snippet tabstop.\"));\nexport const snippetFinalTabstopHighlightBackground = registerColor('editor.snippetFinalTabstopHighlightBackground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('snippetFinalTabstopHighlightBackground', \"Highlight background color of the final tabstop of a snippet.\"));\nexport const snippetFinalTabstopHighlightBorder = registerColor('editor.snippetFinalTabstopHighlightBorder', { dark: '#525252', light: new Color(new RGBA(10, 50, 100, 0.5)), hcDark: '#525252', hcLight: '#292929' }, nls.localize('snippetFinalTabstopHighlightBorder', \"Highlight border color of the final tabstop of a snippet.\"));\n/**\n * Breadcrumb colors\n */\nexport const breadcrumbsForeground = registerColor('breadcrumb.foreground', { light: transparent(foreground, 0.8), dark: transparent(foreground, 0.8), hcDark: transparent(foreground, 0.8), hcLight: transparent(foreground, 0.8) }, nls.localize('breadcrumbsFocusForeground', \"Color of focused breadcrumb items.\"));\nexport const breadcrumbsBackground = registerColor('breadcrumb.background', { light: editorBackground, dark: editorBackground, hcDark: editorBackground, hcLight: editorBackground }, nls.localize('breadcrumbsBackground', \"Background color of breadcrumb items.\"));\nexport const breadcrumbsFocusForeground = registerColor('breadcrumb.focusForeground', { light: darken(foreground, 0.2), dark: lighten(foreground, 0.1), hcDark: lighten(foreground, 0.1), hcLight: lighten(foreground, 0.1) }, nls.localize('breadcrumbsFocusForeground', \"Color of focused breadcrumb items.\"));\nexport const breadcrumbsActiveSelectionForeground = registerColor('breadcrumb.activeSelectionForeground', { light: darken(foreground, 0.2), dark: lighten(foreground, 0.1), hcDark: lighten(foreground, 0.1), hcLight: lighten(foreground, 0.1) }, nls.localize('breadcrumbsSelectedForeground', \"Color of selected breadcrumb items.\"));\nexport const breadcrumbsPickerBackground = registerColor('breadcrumbPicker.background', { light: editorWidgetBackground, dark: editorWidgetBackground, hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('breadcrumbsSelectedBackground', \"Background color of breadcrumb item picker.\"));\n/**\n * Merge-conflict colors\n */\nconst headerTransparency = 0.5;\nconst currentBaseColor = Color.fromHex('#40C8AE').transparent(headerTransparency);\nconst incomingBaseColor = Color.fromHex('#40A6FF').transparent(headerTransparency);\nconst commonBaseColor = Color.fromHex('#606060').transparent(0.4);\nconst contentTransparency = 0.4;\nconst rulerTransparency = 1;\nexport const mergeCurrentHeaderBackground = registerColor('merge.currentHeaderBackground', { dark: currentBaseColor, light: currentBaseColor, hcDark: null, hcLight: null }, nls.localize('mergeCurrentHeaderBackground', 'Current header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCurrentContentBackground = registerColor('merge.currentContentBackground', { dark: transparent(mergeCurrentHeaderBackground, contentTransparency), light: transparent(mergeCurrentHeaderBackground, contentTransparency), hcDark: transparent(mergeCurrentHeaderBackground, contentTransparency), hcLight: transparent(mergeCurrentHeaderBackground, contentTransparency) }, nls.localize('mergeCurrentContentBackground', 'Current content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeIncomingHeaderBackground = registerColor('merge.incomingHeaderBackground', { dark: incomingBaseColor, light: incomingBaseColor, hcDark: null, hcLight: null }, nls.localize('mergeIncomingHeaderBackground', 'Incoming header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeIncomingContentBackground = registerColor('merge.incomingContentBackground', { dark: transparent(mergeIncomingHeaderBackground, contentTransparency), light: transparent(mergeIncomingHeaderBackground, contentTransparency), hcDark: transparent(mergeIncomingHeaderBackground, contentTransparency), hcLight: transparent(mergeIncomingHeaderBackground, contentTransparency) }, nls.localize('mergeIncomingContentBackground', 'Incoming content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCommonHeaderBackground = registerColor('merge.commonHeaderBackground', { dark: commonBaseColor, light: commonBaseColor, hcDark: null, hcLight: null }, nls.localize('mergeCommonHeaderBackground', 'Common ancestor header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCommonContentBackground = registerColor('merge.commonContentBackground', { dark: transparent(mergeCommonHeaderBackground, contentTransparency), light: transparent(mergeCommonHeaderBackground, contentTransparency), hcDark: transparent(mergeCommonHeaderBackground, contentTransparency), hcLight: transparent(mergeCommonHeaderBackground, contentTransparency) }, nls.localize('mergeCommonContentBackground', 'Common ancestor content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeBorder = registerColor('merge.border', { dark: null, light: null, hcDark: '#C3DF6F', hcLight: '#007ACC' }, nls.localize('mergeBorder', 'Border color on headers and the splitter in inline merge-conflicts.'));\nexport const overviewRulerCurrentContentForeground = registerColor('editorOverviewRuler.currentContentForeground', { dark: transparent(mergeCurrentHeaderBackground, rulerTransparency), light: transparent(mergeCurrentHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder }, nls.localize('overviewRulerCurrentContentForeground', 'Current overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerIncomingContentForeground = registerColor('editorOverviewRuler.incomingContentForeground', { dark: transparent(mergeIncomingHeaderBackground, rulerTransparency), light: transparent(mergeIncomingHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder }, nls.localize('overviewRulerIncomingContentForeground', 'Incoming overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerCommonContentForeground = registerColor('editorOverviewRuler.commonContentForeground', { dark: transparent(mergeCommonHeaderBackground, rulerTransparency), light: transparent(mergeCommonHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder }, nls.localize('overviewRulerCommonContentForeground', 'Common ancestor overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerFindMatchForeground = registerColor('editorOverviewRuler.findMatchForeground', { dark: '#d186167e', light: '#d186167e', hcDark: '#AB5A00', hcLight: '' }, nls.localize('overviewRulerFindMatchForeground', 'Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const overviewRulerSelectionHighlightForeground = registerColor('editorOverviewRuler.selectionHighlightForeground', { dark: '#A0A0A0CC', light: '#A0A0A0CC', hcDark: '#A0A0A0CC', hcLight: '#A0A0A0CC' }, nls.localize('overviewRulerSelectionHighlightForeground', 'Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const minimapFindMatch = registerColor('minimap.findMatchHighlight', { light: '#d18616', dark: '#d18616', hcDark: '#AB5A00', hcLight: '#0F4A85' }, nls.localize('minimapFindMatchHighlight', 'Minimap marker color for find matches.'), true);\nexport const minimapSelectionOccurrenceHighlight = registerColor('minimap.selectionOccurrenceHighlight', { light: '#c9c9c9', dark: '#676767', hcDark: '#ffffff', hcLight: '#0F4A85' }, nls.localize('minimapSelectionOccurrenceHighlight', 'Minimap marker color for repeating editor selections.'), true);\nexport const minimapSelection = registerColor('minimap.selectionHighlight', { light: '#ADD6FF', dark: '#264F78', hcDark: '#ffffff', hcLight: '#0F4A85' }, nls.localize('minimapSelectionHighlight', 'Minimap marker color for the editor selection.'), true);\nexport const minimapError = registerColor('minimap.errorHighlight', { dark: new Color(new RGBA(255, 18, 18, 0.7)), light: new Color(new RGBA(255, 18, 18, 0.7)), hcDark: new Color(new RGBA(255, 50, 50, 1)), hcLight: '#B5200D' }, nls.localize('minimapError', 'Minimap marker color for errors.'));\nexport const minimapWarning = registerColor('minimap.warningHighlight', { dark: editorWarningForeground, light: editorWarningForeground, hcDark: editorWarningBorder, hcLight: editorWarningBorder }, nls.localize('overviewRuleWarning', 'Minimap marker color for warnings.'));\nexport const minimapBackground = registerColor('minimap.background', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('minimapBackground', \"Minimap background color.\"));\nexport const minimapForegroundOpacity = registerColor('minimap.foregroundOpacity', { dark: Color.fromHex('#000f'), light: Color.fromHex('#000f'), hcDark: Color.fromHex('#000f'), hcLight: Color.fromHex('#000f') }, nls.localize('minimapForegroundOpacity', 'Opacity of foreground elements rendered in the minimap. For example, \"#000000c0\" will render the elements with 75% opacity.'));\nexport const minimapSliderBackground = registerColor('minimapSlider.background', { light: transparent(scrollbarSliderBackground, 0.5), dark: transparent(scrollbarSliderBackground, 0.5), hcDark: transparent(scrollbarSliderBackground, 0.5), hcLight: transparent(scrollbarSliderBackground, 0.5) }, nls.localize('minimapSliderBackground', \"Minimap slider background color.\"));\nexport const minimapSliderHoverBackground = registerColor('minimapSlider.hoverBackground', { light: transparent(scrollbarSliderHoverBackground, 0.5), dark: transparent(scrollbarSliderHoverBackground, 0.5), hcDark: transparent(scrollbarSliderHoverBackground, 0.5), hcLight: transparent(scrollbarSliderHoverBackground, 0.5) }, nls.localize('minimapSliderHoverBackground', \"Minimap slider background color when hovering.\"));\nexport const minimapSliderActiveBackground = registerColor('minimapSlider.activeBackground', { light: transparent(scrollbarSliderActiveBackground, 0.5), dark: transparent(scrollbarSliderActiveBackground, 0.5), hcDark: transparent(scrollbarSliderActiveBackground, 0.5), hcLight: transparent(scrollbarSliderActiveBackground, 0.5) }, nls.localize('minimapSliderActiveBackground', \"Minimap slider background color when clicked on.\"));\nexport const problemsErrorIconForeground = registerColor('problemsErrorIcon.foreground', { dark: editorErrorForeground, light: editorErrorForeground, hcDark: editorErrorForeground, hcLight: editorErrorForeground }, nls.localize('problemsErrorIconForeground', \"The color used for the problems error icon.\"));\nexport const problemsWarningIconForeground = registerColor('problemsWarningIcon.foreground', { dark: editorWarningForeground, light: editorWarningForeground, hcDark: editorWarningForeground, hcLight: editorWarningForeground }, nls.localize('problemsWarningIconForeground', \"The color used for the problems warning icon.\"));\nexport const problemsInfoIconForeground = registerColor('problemsInfoIcon.foreground', { dark: editorInfoForeground, light: editorInfoForeground, hcDark: editorInfoForeground, hcLight: editorInfoForeground }, nls.localize('problemsInfoIconForeground', \"The color used for the problems info icon.\"));\n/**\n * Chart colors\n */\nexport const chartsForeground = registerColor('charts.foreground', { dark: foreground, light: foreground, hcDark: foreground, hcLight: foreground }, nls.localize('chartsForeground', \"The foreground color used in charts.\"));\nexport const chartsLines = registerColor('charts.lines', { dark: transparent(foreground, .5), light: transparent(foreground, .5), hcDark: transparent(foreground, .5), hcLight: transparent(foreground, .5) }, nls.localize('chartsLines', \"The color used for horizontal lines in charts.\"));\nexport const chartsRed = registerColor('charts.red', { dark: editorErrorForeground, light: editorErrorForeground, hcDark: editorErrorForeground, hcLight: editorErrorForeground }, nls.localize('chartsRed', \"The red color used in chart visualizations.\"));\nexport const chartsBlue = registerColor('charts.blue', { dark: editorInfoForeground, light: editorInfoForeground, hcDark: editorInfoForeground, hcLight: editorInfoForeground }, nls.localize('chartsBlue', \"The blue color used in chart visualizations.\"));\nexport const chartsYellow = registerColor('charts.yellow', { dark: editorWarningForeground, light: editorWarningForeground, hcDark: editorWarningForeground, hcLight: editorWarningForeground }, nls.localize('chartsYellow', \"The yellow color used in chart visualizations.\"));\nexport const chartsOrange = registerColor('charts.orange', { dark: minimapFindMatch, light: minimapFindMatch, hcDark: minimapFindMatch, hcLight: minimapFindMatch }, nls.localize('chartsOrange', \"The orange color used in chart visualizations.\"));\nexport const chartsGreen = registerColor('charts.green', { dark: '#89D185', light: '#388A34', hcDark: '#89D185', hcLight: '#374e06' }, nls.localize('chartsGreen', \"The green color used in chart visualizations.\"));\nexport const chartsPurple = registerColor('charts.purple', { dark: '#B180D7', light: '#652D90', hcDark: '#B180D7', hcLight: '#652D90' }, nls.localize('chartsPurple', \"The purple color used in chart visualizations.\"));\n// ----- color functions\nexport function executeTransform(transform, theme) {\n    var _a, _b, _c, _d;\n    switch (transform.op) {\n        case 0 /* ColorTransformType.Darken */:\n            return (_a = resolveColorValue(transform.value, theme)) === null || _a === void 0 ? void 0 : _a.darken(transform.factor);\n        case 1 /* ColorTransformType.Lighten */:\n            return (_b = resolveColorValue(transform.value, theme)) === null || _b === void 0 ? void 0 : _b.lighten(transform.factor);\n        case 2 /* ColorTransformType.Transparent */:\n            return (_c = resolveColorValue(transform.value, theme)) === null || _c === void 0 ? void 0 : _c.transparent(transform.factor);\n        case 3 /* ColorTransformType.Opaque */: {\n            const backgroundColor = resolveColorValue(transform.background, theme);\n            if (!backgroundColor) {\n                return resolveColorValue(transform.value, theme);\n            }\n            return (_d = resolveColorValue(transform.value, theme)) === null || _d === void 0 ? void 0 : _d.makeOpaque(backgroundColor);\n        }\n        case 4 /* ColorTransformType.OneOf */:\n            for (const candidate of transform.values) {\n                const color = resolveColorValue(candidate, theme);\n                if (color) {\n                    return color;\n                }\n            }\n            return undefined;\n        case 6 /* ColorTransformType.IfDefinedThenElse */:\n            return resolveColorValue(theme.defines(transform.if) ? transform.then : transform.else, theme);\n        case 5 /* ColorTransformType.LessProminent */: {\n            const from = resolveColorValue(transform.value, theme);\n            if (!from) {\n                return undefined;\n            }\n            const backgroundColor = resolveColorValue(transform.background, theme);\n            if (!backgroundColor) {\n                return from.transparent(transform.factor * transform.transparency);\n            }\n            return from.isDarkerThan(backgroundColor)\n                ? Color.getLighterColor(from, backgroundColor, transform.factor).transparent(transform.transparency)\n                : Color.getDarkerColor(from, backgroundColor, transform.factor).transparent(transform.transparency);\n        }\n        default:\n            throw assertNever(transform);\n    }\n}\nexport function darken(colorValue, factor) {\n    return { op: 0 /* ColorTransformType.Darken */, value: colorValue, factor };\n}\nexport function lighten(colorValue, factor) {\n    return { op: 1 /* ColorTransformType.Lighten */, value: colorValue, factor };\n}\nexport function transparent(colorValue, factor) {\n    return { op: 2 /* ColorTransformType.Transparent */, value: colorValue, factor };\n}\nexport function oneOf(...colorValues) {\n    return { op: 4 /* ColorTransformType.OneOf */, values: colorValues };\n}\nexport function ifDefinedThenElse(ifArg, thenArg, elseArg) {\n    return { op: 6 /* ColorTransformType.IfDefinedThenElse */, if: ifArg, then: thenArg, else: elseArg };\n}\nfunction lessProminent(colorValue, backgroundColorValue, factor, transparency) {\n    return { op: 5 /* ColorTransformType.LessProminent */, value: colorValue, background: backgroundColorValue, factor, transparency };\n}\n// ----- implementation\n/**\n * @param colorValue Resolve a color value in the context of a theme\n */\nexport function resolveColorValue(colorValue, theme) {\n    if (colorValue === null) {\n        return undefined;\n    }\n    else if (typeof colorValue === 'string') {\n        if (colorValue[0] === '#') {\n            return Color.fromHex(colorValue);\n        }\n        return theme.getColor(colorValue);\n    }\n    else if (colorValue instanceof Color) {\n        return colorValue;\n    }\n    else if (typeof colorValue === 'object') {\n        return executeTransform(colorValue, theme);\n    }\n    return undefined;\n}\nexport const workbenchColorsSchemaId = 'vscode://schemas/workbench-colors';\nconst schemaRegistry = platform.Registry.as(JSONExtensions.JSONContribution);\nschemaRegistry.registerSchema(workbenchColorsSchemaId, colorRegistry.getColorSchema());\nconst delayer = new RunOnceScheduler(() => schemaRegistry.notifySchemaChanged(workbenchColorsSchemaId), 200);\ncolorRegistry.onDidChangeSchema(() => {\n    if (!delayer.isScheduled()) {\n        delayer.schedule();\n    }\n});\n// setTimeout(_ => console.log(colorRegistry.toString()), 5000);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Codicon, getCodiconFontCharacters } from '../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { isString } from '../../../base/common/types.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { localize } from '../../../nls.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport * as platform from '../../registry/common/platform.js';\n//  ------ API types\n// icon registry\nexport const Extensions = {\n    IconContribution: 'base.contributions.icons'\n};\nexport var IconContribution;\n(function (IconContribution) {\n    function getDefinition(contribution, registry) {\n        let definition = contribution.defaults;\n        while (ThemeIcon.isThemeIcon(definition)) {\n            const c = iconRegistry.getIcon(definition.id);\n            if (!c) {\n                return undefined;\n            }\n            definition = c.defaults;\n        }\n        return definition;\n    }\n    IconContribution.getDefinition = getDefinition;\n})(IconContribution || (IconContribution = {}));\nexport var IconFontDefinition;\n(function (IconFontDefinition) {\n    function toJSONObject(iconFont) {\n        return {\n            weight: iconFont.weight,\n            style: iconFont.style,\n            src: iconFont.src.map(s => ({ format: s.format, location: s.location.toString() }))\n        };\n    }\n    IconFontDefinition.toJSONObject = toJSONObject;\n    function fromJSONObject(json) {\n        const stringOrUndef = (s) => isString(s) ? s : undefined;\n        if (json && Array.isArray(json.src) && json.src.every((s) => isString(s.format) && isString(s.location))) {\n            return {\n                weight: stringOrUndef(json.weight),\n                style: stringOrUndef(json.style),\n                src: json.src.map((s) => ({ format: s.format, location: URI.parse(s.location) }))\n            };\n        }\n        return undefined;\n    }\n    IconFontDefinition.fromJSONObject = fromJSONObject;\n})(IconFontDefinition || (IconFontDefinition = {}));\nclass IconRegistry {\n    constructor() {\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.iconSchema = {\n            definitions: {\n                icons: {\n                    type: 'object',\n                    properties: {\n                        fontId: { type: 'string', description: localize('iconDefinition.fontId', 'The id of the font to use. If not set, the font that is defined first is used.') },\n                        fontCharacter: { type: 'string', description: localize('iconDefinition.fontCharacter', 'The font character associated with the icon definition.') }\n                    },\n                    additionalProperties: false,\n                    defaultSnippets: [{ body: { fontCharacter: '\\\\\\\\e030' } }]\n                }\n            },\n            type: 'object',\n            properties: {}\n        };\n        this.iconReferenceSchema = { type: 'string', pattern: `^${ThemeIcon.iconNameExpression}$`, enum: [], enumDescriptions: [] };\n        this.iconsById = {};\n        this.iconFontsById = {};\n    }\n    registerIcon(id, defaults, description, deprecationMessage) {\n        const existing = this.iconsById[id];\n        if (existing) {\n            if (description && !existing.description) {\n                existing.description = description;\n                this.iconSchema.properties[id].markdownDescription = `${description} $(${id})`;\n                const enumIndex = this.iconReferenceSchema.enum.indexOf(id);\n                if (enumIndex !== -1) {\n                    this.iconReferenceSchema.enumDescriptions[enumIndex] = description;\n                }\n                this._onDidChange.fire();\n            }\n            return existing;\n        }\n        const iconContribution = { id, description, defaults, deprecationMessage };\n        this.iconsById[id] = iconContribution;\n        const propertySchema = { $ref: '#/definitions/icons' };\n        if (deprecationMessage) {\n            propertySchema.deprecationMessage = deprecationMessage;\n        }\n        if (description) {\n            propertySchema.markdownDescription = `${description}: $(${id})`;\n        }\n        this.iconSchema.properties[id] = propertySchema;\n        this.iconReferenceSchema.enum.push(id);\n        this.iconReferenceSchema.enumDescriptions.push(description || '');\n        this._onDidChange.fire();\n        return { id };\n    }\n    getIcons() {\n        return Object.keys(this.iconsById).map(id => this.iconsById[id]);\n    }\n    getIcon(id) {\n        return this.iconsById[id];\n    }\n    getIconSchema() {\n        return this.iconSchema;\n    }\n    toString() {\n        const sorter = (i1, i2) => {\n            return i1.id.localeCompare(i2.id);\n        };\n        const classNames = (i) => {\n            while (ThemeIcon.isThemeIcon(i.defaults)) {\n                i = this.iconsById[i.defaults.id];\n            }\n            return `codicon codicon-${i ? i.id : ''}`;\n        };\n        const reference = [];\n        reference.push(`| preview     | identifier                        | default codicon ID                | description`);\n        reference.push(`| ----------- | --------------------------------- | --------------------------------- | --------------------------------- |`);\n        const contributions = Object.keys(this.iconsById).map(key => this.iconsById[key]);\n        for (const i of contributions.filter(i => !!i.description).sort(sorter)) {\n            reference.push(`|<i class=\"${classNames(i)}\"></i>|${i.id}|${ThemeIcon.isThemeIcon(i.defaults) ? i.defaults.id : i.id}|${i.description || ''}|`);\n        }\n        reference.push(`| preview     | identifier                        `);\n        reference.push(`| ----------- | --------------------------------- |`);\n        for (const i of contributions.filter(i => !ThemeIcon.isThemeIcon(i.defaults)).sort(sorter)) {\n            reference.push(`|<i class=\"${classNames(i)}\"></i>|${i.id}|`);\n        }\n        return reference.join('\\n');\n    }\n}\nconst iconRegistry = new IconRegistry();\nplatform.Registry.add(Extensions.IconContribution, iconRegistry);\nexport function registerIcon(id, defaults, description, deprecationMessage) {\n    return iconRegistry.registerIcon(id, defaults, description, deprecationMessage);\n}\nexport function getIconRegistry() {\n    return iconRegistry;\n}\nfunction initialize() {\n    const codiconFontCharacters = getCodiconFontCharacters();\n    for (const icon in codiconFontCharacters) {\n        const fontCharacter = '\\\\' + codiconFontCharacters[icon].toString(16);\n        iconRegistry.registerIcon(icon, { fontCharacter });\n    }\n}\ninitialize();\nexport const iconsSchemaId = 'vscode://schemas/icons';\nconst schemaRegistry = platform.Registry.as(JSONExtensions.JSONContribution);\nschemaRegistry.registerSchema(iconsSchemaId, iconRegistry.getIconSchema());\nconst delayer = new RunOnceScheduler(() => schemaRegistry.notifySchemaChanged(iconsSchemaId), 200);\niconRegistry.onDidChange(() => {\n    if (!delayer.isScheduled()) {\n        delayer.schedule();\n    }\n});\n//setTimeout(_ => console.log(iconRegistry.toString()), 5000);\n// common icons\nexport const widgetClose = registerIcon('widget-close', Codicon.close, localize('widgetClose', 'Icon for the close action in widgets.'));\nexport const gotoPreviousLocation = registerIcon('goto-previous-location', Codicon.arrowUp, localize('previousChangeIcon', 'Icon for goto previous editor location.'));\nexport const gotoNextLocation = registerIcon('goto-next-location', Codicon.arrowDown, localize('nextChangeIcon', 'Icon for goto next editor location.'));\nexport const syncing = ThemeIcon.modify(Codicon.sync, 'spin');\nexport const spinningLoading = ThemeIcon.modify(Codicon.loading, 'spin');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Color scheme used by the OS and by color themes.\n */\nexport var ColorScheme;\n(function (ColorScheme) {\n    ColorScheme[\"DARK\"] = \"dark\";\n    ColorScheme[\"LIGHT\"] = \"light\";\n    ColorScheme[\"HIGH_CONTRAST_DARK\"] = \"hcDark\";\n    ColorScheme[\"HIGH_CONTRAST_LIGHT\"] = \"hcLight\";\n})(ColorScheme || (ColorScheme = {}));\nexport function isHighContrast(scheme) {\n    return scheme === ColorScheme.HIGH_CONTRAST_DARK || scheme === ColorScheme.HIGH_CONTRAST_LIGHT;\n}\nexport function isDark(scheme) {\n    return scheme === ColorScheme.DARK || scheme === ColorScheme.HIGH_CONTRAST_DARK;\n}\n","import { Emitter } from '../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport * as platform from '../../registry/common/platform.js';\nimport { ColorScheme } from './theme.js';\nexport const IThemeService = createDecorator('themeService');\nexport function themeColorFromId(id) {\n    return { id };\n}\nexport function getThemeTypeSelector(type) {\n    switch (type) {\n        case ColorScheme.DARK: return 'vs-dark';\n        case ColorScheme.HIGH_CONTRAST_DARK: return 'hc-black';\n        case ColorScheme.HIGH_CONTRAST_LIGHT: return 'hc-light';\n        default: return 'vs';\n    }\n}\n// static theming participant\nexport const Extensions = {\n    ThemingContribution: 'base.contributions.theming'\n};\nclass ThemingRegistry {\n    constructor() {\n        this.themingParticipants = [];\n        this.themingParticipants = [];\n        this.onThemingParticipantAddedEmitter = new Emitter();\n    }\n    onColorThemeChange(participant) {\n        this.themingParticipants.push(participant);\n        this.onThemingParticipantAddedEmitter.fire(participant);\n        return toDisposable(() => {\n            const idx = this.themingParticipants.indexOf(participant);\n            this.themingParticipants.splice(idx, 1);\n        });\n    }\n    getThemingParticipants() {\n        return this.themingParticipants;\n    }\n}\nconst themingRegistry = new ThemingRegistry();\nplatform.Registry.add(Extensions.ThemingContribution, themingRegistry);\nexport function registerThemingParticipant(participant) {\n    return themingRegistry.onColorThemeChange(participant);\n}\n/**\n * Utility base class for all themable components.\n */\nexport class Themable extends Disposable {\n    constructor(themeService) {\n        super();\n        this.themeService = themeService;\n        this.theme = themeService.getColorTheme();\n        // Hook up to theme changes\n        this._register(this.themeService.onDidColorThemeChange(theme => this.onThemeChange(theme)));\n    }\n    onThemeChange(theme) {\n        this.theme = theme;\n        this.updateStyles();\n    }\n    updateStyles() {\n        // Subclasses to override\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IUndoRedoService = createDecorator('undoRedoService');\nexport class ResourceEditStackSnapshot {\n    constructor(resource, elements) {\n        this.resource = resource;\n        this.elements = elements;\n    }\n}\nclass UndoRedoGroup {\n    constructor() {\n        this.id = UndoRedoGroup._ID++;\n        this.order = 1;\n    }\n    nextOrder() {\n        if (this.id === 0) {\n            return 0;\n        }\n        return this.order++;\n    }\n}\nUndoRedoGroup._ID = 0;\nUndoRedoGroup.None = new UndoRedoGroup();\nexport { UndoRedoGroup };\nclass UndoRedoSource {\n    constructor() {\n        this.id = UndoRedoSource._ID++;\n        this.order = 1;\n    }\n    nextOrder() {\n        if (this.id === 0) {\n            return 0;\n        }\n        return this.order++;\n    }\n}\nUndoRedoSource._ID = 0;\nUndoRedoSource.None = new UndoRedoSource();\nexport { UndoRedoSource };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Disposable, isDisposable } from '../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport Severity from '../../../base/common/severity.js';\nimport * as nls from '../../../nls.js';\nimport { IDialogService } from '../../dialogs/common/dialogs.js';\nimport { registerSingleton } from '../../instantiation/common/extensions.js';\nimport { INotificationService } from '../../notification/common/notification.js';\nimport { IUndoRedoService, ResourceEditStackSnapshot, UndoRedoGroup, UndoRedoSource } from './undoRedo.js';\nconst DEBUG = false;\nfunction getResourceLabel(resource) {\n    return resource.scheme === Schemas.file ? resource.fsPath : resource.path;\n}\nlet stackElementCounter = 0;\nclass ResourceStackElement {\n    constructor(actual, resourceLabel, strResource, groupId, groupOrder, sourceId, sourceOrder) {\n        this.id = (++stackElementCounter);\n        this.type = 0 /* UndoRedoElementType.Resource */;\n        this.actual = actual;\n        this.label = actual.label;\n        this.confirmBeforeUndo = actual.confirmBeforeUndo || false;\n        this.resourceLabel = resourceLabel;\n        this.strResource = strResource;\n        this.resourceLabels = [this.resourceLabel];\n        this.strResources = [this.strResource];\n        this.groupId = groupId;\n        this.groupOrder = groupOrder;\n        this.sourceId = sourceId;\n        this.sourceOrder = sourceOrder;\n        this.isValid = true;\n    }\n    setValid(isValid) {\n        this.isValid = isValid;\n    }\n    toString() {\n        return `[id:${this.id}] [group:${this.groupId}] [${this.isValid ? '  VALID' : 'INVALID'}] ${this.actual.constructor.name} - ${this.actual}`;\n    }\n}\nclass ResourceReasonPair {\n    constructor(resourceLabel, reason) {\n        this.resourceLabel = resourceLabel;\n        this.reason = reason;\n    }\n}\nclass RemovedResources {\n    constructor() {\n        this.elements = new Map();\n    }\n    createMessage() {\n        const externalRemoval = [];\n        const noParallelUniverses = [];\n        for (const [, element] of this.elements) {\n            const dest = (element.reason === 0 /* RemovedResourceReason.ExternalRemoval */\n                ? externalRemoval\n                : noParallelUniverses);\n            dest.push(element.resourceLabel);\n        }\n        const messages = [];\n        if (externalRemoval.length > 0) {\n            messages.push(nls.localize({ key: 'externalRemoval', comment: ['{0} is a list of filenames'] }, \"The following files have been closed and modified on disk: {0}.\", externalRemoval.join(', ')));\n        }\n        if (noParallelUniverses.length > 0) {\n            messages.push(nls.localize({ key: 'noParallelUniverses', comment: ['{0} is a list of filenames'] }, \"The following files have been modified in an incompatible way: {0}.\", noParallelUniverses.join(', ')));\n        }\n        return messages.join('\\n');\n    }\n    get size() {\n        return this.elements.size;\n    }\n    has(strResource) {\n        return this.elements.has(strResource);\n    }\n    set(strResource, value) {\n        this.elements.set(strResource, value);\n    }\n    delete(strResource) {\n        return this.elements.delete(strResource);\n    }\n}\nclass WorkspaceStackElement {\n    constructor(actual, resourceLabels, strResources, groupId, groupOrder, sourceId, sourceOrder) {\n        this.id = (++stackElementCounter);\n        this.type = 1 /* UndoRedoElementType.Workspace */;\n        this.actual = actual;\n        this.label = actual.label;\n        this.confirmBeforeUndo = actual.confirmBeforeUndo || false;\n        this.resourceLabels = resourceLabels;\n        this.strResources = strResources;\n        this.groupId = groupId;\n        this.groupOrder = groupOrder;\n        this.sourceId = sourceId;\n        this.sourceOrder = sourceOrder;\n        this.removedResources = null;\n        this.invalidatedResources = null;\n    }\n    canSplit() {\n        return (typeof this.actual.split === 'function');\n    }\n    removeResource(resourceLabel, strResource, reason) {\n        if (!this.removedResources) {\n            this.removedResources = new RemovedResources();\n        }\n        if (!this.removedResources.has(strResource)) {\n            this.removedResources.set(strResource, new ResourceReasonPair(resourceLabel, reason));\n        }\n    }\n    setValid(resourceLabel, strResource, isValid) {\n        if (isValid) {\n            if (this.invalidatedResources) {\n                this.invalidatedResources.delete(strResource);\n                if (this.invalidatedResources.size === 0) {\n                    this.invalidatedResources = null;\n                }\n            }\n        }\n        else {\n            if (!this.invalidatedResources) {\n                this.invalidatedResources = new RemovedResources();\n            }\n            if (!this.invalidatedResources.has(strResource)) {\n                this.invalidatedResources.set(strResource, new ResourceReasonPair(resourceLabel, 0 /* RemovedResourceReason.ExternalRemoval */));\n            }\n        }\n    }\n    toString() {\n        return `[id:${this.id}] [group:${this.groupId}] [${this.invalidatedResources ? 'INVALID' : '  VALID'}] ${this.actual.constructor.name} - ${this.actual}`;\n    }\n}\nclass ResourceEditStack {\n    constructor(resourceLabel, strResource) {\n        this.resourceLabel = resourceLabel;\n        this.strResource = strResource;\n        this._past = [];\n        this._future = [];\n        this.locked = false;\n        this.versionId = 1;\n    }\n    dispose() {\n        for (const element of this._past) {\n            if (element.type === 1 /* UndoRedoElementType.Workspace */) {\n                element.removeResource(this.resourceLabel, this.strResource, 0 /* RemovedResourceReason.ExternalRemoval */);\n            }\n        }\n        for (const element of this._future) {\n            if (element.type === 1 /* UndoRedoElementType.Workspace */) {\n                element.removeResource(this.resourceLabel, this.strResource, 0 /* RemovedResourceReason.ExternalRemoval */);\n            }\n        }\n        this.versionId++;\n    }\n    toString() {\n        const result = [];\n        result.push(`* ${this.strResource}:`);\n        for (let i = 0; i < this._past.length; i++) {\n            result.push(`   * [UNDO] ${this._past[i]}`);\n        }\n        for (let i = this._future.length - 1; i >= 0; i--) {\n            result.push(`   * [REDO] ${this._future[i]}`);\n        }\n        return result.join('\\n');\n    }\n    flushAllElements() {\n        this._past = [];\n        this._future = [];\n        this.versionId++;\n    }\n    _setElementValidFlag(element, isValid) {\n        if (element.type === 1 /* UndoRedoElementType.Workspace */) {\n            element.setValid(this.resourceLabel, this.strResource, isValid);\n        }\n        else {\n            element.setValid(isValid);\n        }\n    }\n    setElementsValidFlag(isValid, filter) {\n        for (const element of this._past) {\n            if (filter(element.actual)) {\n                this._setElementValidFlag(element, isValid);\n            }\n        }\n        for (const element of this._future) {\n            if (filter(element.actual)) {\n                this._setElementValidFlag(element, isValid);\n            }\n        }\n    }\n    pushElement(element) {\n        // remove the future\n        for (const futureElement of this._future) {\n            if (futureElement.type === 1 /* UndoRedoElementType.Workspace */) {\n                futureElement.removeResource(this.resourceLabel, this.strResource, 1 /* RemovedResourceReason.NoParallelUniverses */);\n            }\n        }\n        this._future = [];\n        this._past.push(element);\n        this.versionId++;\n    }\n    createSnapshot(resource) {\n        const elements = [];\n        for (let i = 0, len = this._past.length; i < len; i++) {\n            elements.push(this._past[i].id);\n        }\n        for (let i = this._future.length - 1; i >= 0; i--) {\n            elements.push(this._future[i].id);\n        }\n        return new ResourceEditStackSnapshot(resource, elements);\n    }\n    restoreSnapshot(snapshot) {\n        const snapshotLength = snapshot.elements.length;\n        let isOK = true;\n        let snapshotIndex = 0;\n        let removePastAfter = -1;\n        for (let i = 0, len = this._past.length; i < len; i++, snapshotIndex++) {\n            const element = this._past[i];\n            if (isOK && (snapshotIndex >= snapshotLength || element.id !== snapshot.elements[snapshotIndex])) {\n                isOK = false;\n                removePastAfter = 0;\n            }\n            if (!isOK && element.type === 1 /* UndoRedoElementType.Workspace */) {\n                element.removeResource(this.resourceLabel, this.strResource, 0 /* RemovedResourceReason.ExternalRemoval */);\n            }\n        }\n        let removeFutureBefore = -1;\n        for (let i = this._future.length - 1; i >= 0; i--, snapshotIndex++) {\n            const element = this._future[i];\n            if (isOK && (snapshotIndex >= snapshotLength || element.id !== snapshot.elements[snapshotIndex])) {\n                isOK = false;\n                removeFutureBefore = i;\n            }\n            if (!isOK && element.type === 1 /* UndoRedoElementType.Workspace */) {\n                element.removeResource(this.resourceLabel, this.strResource, 0 /* RemovedResourceReason.ExternalRemoval */);\n            }\n        }\n        if (removePastAfter !== -1) {\n            this._past = this._past.slice(0, removePastAfter);\n        }\n        if (removeFutureBefore !== -1) {\n            this._future = this._future.slice(removeFutureBefore + 1);\n        }\n        this.versionId++;\n    }\n    getElements() {\n        const past = [];\n        const future = [];\n        for (const element of this._past) {\n            past.push(element.actual);\n        }\n        for (const element of this._future) {\n            future.push(element.actual);\n        }\n        return { past, future };\n    }\n    getClosestPastElement() {\n        if (this._past.length === 0) {\n            return null;\n        }\n        return this._past[this._past.length - 1];\n    }\n    getSecondClosestPastElement() {\n        if (this._past.length < 2) {\n            return null;\n        }\n        return this._past[this._past.length - 2];\n    }\n    getClosestFutureElement() {\n        if (this._future.length === 0) {\n            return null;\n        }\n        return this._future[this._future.length - 1];\n    }\n    hasPastElements() {\n        return (this._past.length > 0);\n    }\n    hasFutureElements() {\n        return (this._future.length > 0);\n    }\n    splitPastWorkspaceElement(toRemove, individualMap) {\n        for (let j = this._past.length - 1; j >= 0; j--) {\n            if (this._past[j] === toRemove) {\n                if (individualMap.has(this.strResource)) {\n                    // gets replaced\n                    this._past[j] = individualMap.get(this.strResource);\n                }\n                else {\n                    // gets deleted\n                    this._past.splice(j, 1);\n                }\n                break;\n            }\n        }\n        this.versionId++;\n    }\n    splitFutureWorkspaceElement(toRemove, individualMap) {\n        for (let j = this._future.length - 1; j >= 0; j--) {\n            if (this._future[j] === toRemove) {\n                if (individualMap.has(this.strResource)) {\n                    // gets replaced\n                    this._future[j] = individualMap.get(this.strResource);\n                }\n                else {\n                    // gets deleted\n                    this._future.splice(j, 1);\n                }\n                break;\n            }\n        }\n        this.versionId++;\n    }\n    moveBackward(element) {\n        this._past.pop();\n        this._future.push(element);\n        this.versionId++;\n    }\n    moveForward(element) {\n        this._future.pop();\n        this._past.push(element);\n        this.versionId++;\n    }\n}\nclass EditStackSnapshot {\n    constructor(editStacks) {\n        this.editStacks = editStacks;\n        this._versionIds = [];\n        for (let i = 0, len = this.editStacks.length; i < len; i++) {\n            this._versionIds[i] = this.editStacks[i].versionId;\n        }\n    }\n    isValid() {\n        for (let i = 0, len = this.editStacks.length; i < len; i++) {\n            if (this._versionIds[i] !== this.editStacks[i].versionId) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nconst missingEditStack = new ResourceEditStack('', '');\nmissingEditStack.locked = true;\nlet UndoRedoService = class UndoRedoService {\n    constructor(_dialogService, _notificationService) {\n        this._dialogService = _dialogService;\n        this._notificationService = _notificationService;\n        this._editStacks = new Map();\n        this._uriComparisonKeyComputers = [];\n    }\n    getUriComparisonKey(resource) {\n        for (const uriComparisonKeyComputer of this._uriComparisonKeyComputers) {\n            if (uriComparisonKeyComputer[0] === resource.scheme) {\n                return uriComparisonKeyComputer[1].getComparisonKey(resource);\n            }\n        }\n        return resource.toString();\n    }\n    _print(label) {\n        console.log(`------------------------------------`);\n        console.log(`AFTER ${label}: `);\n        const str = [];\n        for (const element of this._editStacks) {\n            str.push(element[1].toString());\n        }\n        console.log(str.join('\\n'));\n    }\n    pushElement(element, group = UndoRedoGroup.None, source = UndoRedoSource.None) {\n        if (element.type === 0 /* UndoRedoElementType.Resource */) {\n            const resourceLabel = getResourceLabel(element.resource);\n            const strResource = this.getUriComparisonKey(element.resource);\n            this._pushElement(new ResourceStackElement(element, resourceLabel, strResource, group.id, group.nextOrder(), source.id, source.nextOrder()));\n        }\n        else {\n            const seen = new Set();\n            const resourceLabels = [];\n            const strResources = [];\n            for (const resource of element.resources) {\n                const resourceLabel = getResourceLabel(resource);\n                const strResource = this.getUriComparisonKey(resource);\n                if (seen.has(strResource)) {\n                    continue;\n                }\n                seen.add(strResource);\n                resourceLabels.push(resourceLabel);\n                strResources.push(strResource);\n            }\n            if (resourceLabels.length === 1) {\n                this._pushElement(new ResourceStackElement(element, resourceLabels[0], strResources[0], group.id, group.nextOrder(), source.id, source.nextOrder()));\n            }\n            else {\n                this._pushElement(new WorkspaceStackElement(element, resourceLabels, strResources, group.id, group.nextOrder(), source.id, source.nextOrder()));\n            }\n        }\n        if (DEBUG) {\n            this._print('pushElement');\n        }\n    }\n    _pushElement(element) {\n        for (let i = 0, len = element.strResources.length; i < len; i++) {\n            const resourceLabel = element.resourceLabels[i];\n            const strResource = element.strResources[i];\n            let editStack;\n            if (this._editStacks.has(strResource)) {\n                editStack = this._editStacks.get(strResource);\n            }\n            else {\n                editStack = new ResourceEditStack(resourceLabel, strResource);\n                this._editStacks.set(strResource, editStack);\n            }\n            editStack.pushElement(element);\n        }\n    }\n    getLastElement(resource) {\n        const strResource = this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            if (editStack.hasFutureElements()) {\n                return null;\n            }\n            const closestPastElement = editStack.getClosestPastElement();\n            return closestPastElement ? closestPastElement.actual : null;\n        }\n        return null;\n    }\n    _splitPastWorkspaceElement(toRemove, ignoreResources) {\n        const individualArr = toRemove.actual.split();\n        const individualMap = new Map();\n        for (const _element of individualArr) {\n            const resourceLabel = getResourceLabel(_element.resource);\n            const strResource = this.getUriComparisonKey(_element.resource);\n            const element = new ResourceStackElement(_element, resourceLabel, strResource, 0, 0, 0, 0);\n            individualMap.set(element.strResource, element);\n        }\n        for (const strResource of toRemove.strResources) {\n            if (ignoreResources && ignoreResources.has(strResource)) {\n                continue;\n            }\n            const editStack = this._editStacks.get(strResource);\n            editStack.splitPastWorkspaceElement(toRemove, individualMap);\n        }\n    }\n    _splitFutureWorkspaceElement(toRemove, ignoreResources) {\n        const individualArr = toRemove.actual.split();\n        const individualMap = new Map();\n        for (const _element of individualArr) {\n            const resourceLabel = getResourceLabel(_element.resource);\n            const strResource = this.getUriComparisonKey(_element.resource);\n            const element = new ResourceStackElement(_element, resourceLabel, strResource, 0, 0, 0, 0);\n            individualMap.set(element.strResource, element);\n        }\n        for (const strResource of toRemove.strResources) {\n            if (ignoreResources && ignoreResources.has(strResource)) {\n                continue;\n            }\n            const editStack = this._editStacks.get(strResource);\n            editStack.splitFutureWorkspaceElement(toRemove, individualMap);\n        }\n    }\n    removeElements(resource) {\n        const strResource = typeof resource === 'string' ? resource : this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            editStack.dispose();\n            this._editStacks.delete(strResource);\n        }\n        if (DEBUG) {\n            this._print('removeElements');\n        }\n    }\n    setElementsValidFlag(resource, isValid, filter) {\n        const strResource = this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            editStack.setElementsValidFlag(isValid, filter);\n        }\n        if (DEBUG) {\n            this._print('setElementsValidFlag');\n        }\n    }\n    createSnapshot(resource) {\n        const strResource = this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            return editStack.createSnapshot(resource);\n        }\n        return new ResourceEditStackSnapshot(resource, []);\n    }\n    restoreSnapshot(snapshot) {\n        const strResource = this.getUriComparisonKey(snapshot.resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            editStack.restoreSnapshot(snapshot);\n            if (!editStack.hasPastElements() && !editStack.hasFutureElements()) {\n                // the edit stack is now empty, just remove it entirely\n                editStack.dispose();\n                this._editStacks.delete(strResource);\n            }\n        }\n        if (DEBUG) {\n            this._print('restoreSnapshot');\n        }\n    }\n    getElements(resource) {\n        const strResource = this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            return editStack.getElements();\n        }\n        return { past: [], future: [] };\n    }\n    _findClosestUndoElementWithSource(sourceId) {\n        if (!sourceId) {\n            return [null, null];\n        }\n        // find an element with the sourceId and with the highest sourceOrder ready to be undone\n        let matchedElement = null;\n        let matchedStrResource = null;\n        for (const [strResource, editStack] of this._editStacks) {\n            const candidate = editStack.getClosestPastElement();\n            if (!candidate) {\n                continue;\n            }\n            if (candidate.sourceId === sourceId) {\n                if (!matchedElement || candidate.sourceOrder > matchedElement.sourceOrder) {\n                    matchedElement = candidate;\n                    matchedStrResource = strResource;\n                }\n            }\n        }\n        return [matchedElement, matchedStrResource];\n    }\n    canUndo(resourceOrSource) {\n        if (resourceOrSource instanceof UndoRedoSource) {\n            const [, matchedStrResource] = this._findClosestUndoElementWithSource(resourceOrSource.id);\n            return matchedStrResource ? true : false;\n        }\n        const strResource = this.getUriComparisonKey(resourceOrSource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            return editStack.hasPastElements();\n        }\n        return false;\n    }\n    _onError(err, element) {\n        onUnexpectedError(err);\n        // An error occurred while undoing or redoing => drop the undo/redo stack for all affected resources\n        for (const strResource of element.strResources) {\n            this.removeElements(strResource);\n        }\n        this._notificationService.error(err);\n    }\n    _acquireLocks(editStackSnapshot) {\n        // first, check if all locks can be acquired\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.locked) {\n                throw new Error('Cannot acquire edit stack lock');\n            }\n        }\n        // can acquire all locks\n        for (const editStack of editStackSnapshot.editStacks) {\n            editStack.locked = true;\n        }\n        return () => {\n            // release all locks\n            for (const editStack of editStackSnapshot.editStacks) {\n                editStack.locked = false;\n            }\n        };\n    }\n    _safeInvokeWithLocks(element, invoke, editStackSnapshot, cleanup, continuation) {\n        const releaseLocks = this._acquireLocks(editStackSnapshot);\n        let result;\n        try {\n            result = invoke();\n        }\n        catch (err) {\n            releaseLocks();\n            cleanup.dispose();\n            return this._onError(err, element);\n        }\n        if (result) {\n            // result is Promise<void>\n            return result.then(() => {\n                releaseLocks();\n                cleanup.dispose();\n                return continuation();\n            }, (err) => {\n                releaseLocks();\n                cleanup.dispose();\n                return this._onError(err, element);\n            });\n        }\n        else {\n            // result is void\n            releaseLocks();\n            cleanup.dispose();\n            return continuation();\n        }\n    }\n    _invokeWorkspacePrepare(element) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof element.actual.prepareUndoRedo === 'undefined') {\n                return Disposable.None;\n            }\n            const result = element.actual.prepareUndoRedo();\n            if (typeof result === 'undefined') {\n                return Disposable.None;\n            }\n            return result;\n        });\n    }\n    _invokeResourcePrepare(element, callback) {\n        if (element.actual.type !== 1 /* UndoRedoElementType.Workspace */ || typeof element.actual.prepareUndoRedo === 'undefined') {\n            // no preparation needed\n            return callback(Disposable.None);\n        }\n        const r = element.actual.prepareUndoRedo();\n        if (!r) {\n            // nothing to clean up\n            return callback(Disposable.None);\n        }\n        if (isDisposable(r)) {\n            return callback(r);\n        }\n        return r.then((disposable) => {\n            return callback(disposable);\n        });\n    }\n    _getAffectedEditStacks(element) {\n        const affectedEditStacks = [];\n        for (const strResource of element.strResources) {\n            affectedEditStacks.push(this._editStacks.get(strResource) || missingEditStack);\n        }\n        return new EditStackSnapshot(affectedEditStacks);\n    }\n    _tryToSplitAndUndo(strResource, element, ignoreResources, message) {\n        if (element.canSplit()) {\n            this._splitPastWorkspaceElement(element, ignoreResources);\n            this._notificationService.warn(message);\n            return new WorkspaceVerificationError(this._undo(strResource, 0, true));\n        }\n        else {\n            // Cannot safely split this workspace element => flush all undo/redo stacks\n            for (const strResource of element.strResources) {\n                this.removeElements(strResource);\n            }\n            this._notificationService.warn(message);\n            return new WorkspaceVerificationError();\n        }\n    }\n    _checkWorkspaceUndo(strResource, element, editStackSnapshot, checkInvalidatedResources) {\n        if (element.removedResources) {\n            return this._tryToSplitAndUndo(strResource, element, element.removedResources, nls.localize({ key: 'cannotWorkspaceUndo', comment: ['{0} is a label for an operation. {1} is another message.'] }, \"Could not undo '{0}' across all files. {1}\", element.label, element.removedResources.createMessage()));\n        }\n        if (checkInvalidatedResources && element.invalidatedResources) {\n            return this._tryToSplitAndUndo(strResource, element, element.invalidatedResources, nls.localize({ key: 'cannotWorkspaceUndo', comment: ['{0} is a label for an operation. {1} is another message.'] }, \"Could not undo '{0}' across all files. {1}\", element.label, element.invalidatedResources.createMessage()));\n        }\n        // this must be the last past element in all the impacted resources!\n        const cannotUndoDueToResources = [];\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.getClosestPastElement() !== element) {\n                cannotUndoDueToResources.push(editStack.resourceLabel);\n            }\n        }\n        if (cannotUndoDueToResources.length > 0) {\n            return this._tryToSplitAndUndo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceUndoDueToChanges', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not undo '{0}' across all files because changes were made to {1}\", element.label, cannotUndoDueToResources.join(', ')));\n        }\n        const cannotLockDueToResources = [];\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.locked) {\n                cannotLockDueToResources.push(editStack.resourceLabel);\n            }\n        }\n        if (cannotLockDueToResources.length > 0) {\n            return this._tryToSplitAndUndo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceUndoDueToInProgressUndoRedo', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not undo '{0}' across all files because there is already an undo or redo operation running on {1}\", element.label, cannotLockDueToResources.join(', ')));\n        }\n        // check if new stack elements were added in the meantime...\n        if (!editStackSnapshot.isValid()) {\n            return this._tryToSplitAndUndo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceUndoDueToInMeantimeUndoRedo', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not undo '{0}' across all files because an undo or redo operation occurred in the meantime\", element.label));\n        }\n        return null;\n    }\n    _workspaceUndo(strResource, element, undoConfirmed) {\n        const affectedEditStacks = this._getAffectedEditStacks(element);\n        const verificationError = this._checkWorkspaceUndo(strResource, element, affectedEditStacks, /*invalidated resources will be checked after the prepare call*/ false);\n        if (verificationError) {\n            return verificationError.returnValue;\n        }\n        return this._confirmAndExecuteWorkspaceUndo(strResource, element, affectedEditStacks, undoConfirmed);\n    }\n    _isPartOfUndoGroup(element) {\n        if (!element.groupId) {\n            return false;\n        }\n        // check that there is at least another element with the same groupId ready to be undone\n        for (const [, editStack] of this._editStacks) {\n            const pastElement = editStack.getClosestPastElement();\n            if (!pastElement) {\n                continue;\n            }\n            if (pastElement === element) {\n                const secondPastElement = editStack.getSecondClosestPastElement();\n                if (secondPastElement && secondPastElement.groupId === element.groupId) {\n                    // there is another element with the same group id in the same stack!\n                    return true;\n                }\n            }\n            if (pastElement.groupId === element.groupId) {\n                // there is another element with the same group id in another stack!\n                return true;\n            }\n        }\n        return false;\n    }\n    _confirmAndExecuteWorkspaceUndo(strResource, element, editStackSnapshot, undoConfirmed) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (element.canSplit() && !this._isPartOfUndoGroup(element)) {\n                // this element can be split\n                let UndoChoice;\n                (function (UndoChoice) {\n                    UndoChoice[UndoChoice[\"All\"] = 0] = \"All\";\n                    UndoChoice[UndoChoice[\"This\"] = 1] = \"This\";\n                    UndoChoice[UndoChoice[\"Cancel\"] = 2] = \"Cancel\";\n                })(UndoChoice || (UndoChoice = {}));\n                const { result } = yield this._dialogService.prompt({\n                    type: Severity.Info,\n                    message: nls.localize('confirmWorkspace', \"Would you like to undo '{0}' across all files?\", element.label),\n                    buttons: [\n                        {\n                            label: nls.localize({ key: 'ok', comment: ['{0} denotes a number that is > 1, && denotes a mnemonic'] }, \"&&Undo in {0} Files\", editStackSnapshot.editStacks.length),\n                            run: () => UndoChoice.All\n                        },\n                        {\n                            label: nls.localize({ key: 'nok', comment: ['&& denotes a mnemonic'] }, \"Undo this &&File\"),\n                            run: () => UndoChoice.This\n                        }\n                    ],\n                    cancelButton: {\n                        run: () => UndoChoice.Cancel\n                    }\n                });\n                if (result === UndoChoice.Cancel) {\n                    // choice: cancel\n                    return;\n                }\n                if (result === UndoChoice.This) {\n                    // choice: undo this file\n                    this._splitPastWorkspaceElement(element, null);\n                    return this._undo(strResource, 0, true);\n                }\n                // choice: undo in all files\n                // At this point, it is possible that the element has been made invalid in the meantime (due to the confirmation await)\n                const verificationError1 = this._checkWorkspaceUndo(strResource, element, editStackSnapshot, /*invalidated resources will be checked after the prepare call*/ false);\n                if (verificationError1) {\n                    return verificationError1.returnValue;\n                }\n                undoConfirmed = true;\n            }\n            // prepare\n            let cleanup;\n            try {\n                cleanup = yield this._invokeWorkspacePrepare(element);\n            }\n            catch (err) {\n                return this._onError(err, element);\n            }\n            // At this point, it is possible that the element has been made invalid in the meantime (due to the prepare await)\n            const verificationError2 = this._checkWorkspaceUndo(strResource, element, editStackSnapshot, /*now also check that there are no more invalidated resources*/ true);\n            if (verificationError2) {\n                cleanup.dispose();\n                return verificationError2.returnValue;\n            }\n            for (const editStack of editStackSnapshot.editStacks) {\n                editStack.moveBackward(element);\n            }\n            return this._safeInvokeWithLocks(element, () => element.actual.undo(), editStackSnapshot, cleanup, () => this._continueUndoInGroup(element.groupId, undoConfirmed));\n        });\n    }\n    _resourceUndo(editStack, element, undoConfirmed) {\n        if (!element.isValid) {\n            // invalid element => immediately flush edit stack!\n            editStack.flushAllElements();\n            return;\n        }\n        if (editStack.locked) {\n            const message = nls.localize({ key: 'cannotResourceUndoDueToInProgressUndoRedo', comment: ['{0} is a label for an operation.'] }, \"Could not undo '{0}' because there is already an undo or redo operation running.\", element.label);\n            this._notificationService.warn(message);\n            return;\n        }\n        return this._invokeResourcePrepare(element, (cleanup) => {\n            editStack.moveBackward(element);\n            return this._safeInvokeWithLocks(element, () => element.actual.undo(), new EditStackSnapshot([editStack]), cleanup, () => this._continueUndoInGroup(element.groupId, undoConfirmed));\n        });\n    }\n    _findClosestUndoElementInGroup(groupId) {\n        if (!groupId) {\n            return [null, null];\n        }\n        // find another element with the same groupId and with the highest groupOrder ready to be undone\n        let matchedElement = null;\n        let matchedStrResource = null;\n        for (const [strResource, editStack] of this._editStacks) {\n            const candidate = editStack.getClosestPastElement();\n            if (!candidate) {\n                continue;\n            }\n            if (candidate.groupId === groupId) {\n                if (!matchedElement || candidate.groupOrder > matchedElement.groupOrder) {\n                    matchedElement = candidate;\n                    matchedStrResource = strResource;\n                }\n            }\n        }\n        return [matchedElement, matchedStrResource];\n    }\n    _continueUndoInGroup(groupId, undoConfirmed) {\n        if (!groupId) {\n            return;\n        }\n        const [, matchedStrResource] = this._findClosestUndoElementInGroup(groupId);\n        if (matchedStrResource) {\n            return this._undo(matchedStrResource, 0, undoConfirmed);\n        }\n    }\n    undo(resourceOrSource) {\n        if (resourceOrSource instanceof UndoRedoSource) {\n            const [, matchedStrResource] = this._findClosestUndoElementWithSource(resourceOrSource.id);\n            return matchedStrResource ? this._undo(matchedStrResource, resourceOrSource.id, false) : undefined;\n        }\n        if (typeof resourceOrSource === 'string') {\n            return this._undo(resourceOrSource, 0, false);\n        }\n        return this._undo(this.getUriComparisonKey(resourceOrSource), 0, false);\n    }\n    _undo(strResource, sourceId = 0, undoConfirmed) {\n        if (!this._editStacks.has(strResource)) {\n            return;\n        }\n        const editStack = this._editStacks.get(strResource);\n        const element = editStack.getClosestPastElement();\n        if (!element) {\n            return;\n        }\n        if (element.groupId) {\n            // this element is a part of a group, we need to make sure undoing in a group is in order\n            const [matchedElement, matchedStrResource] = this._findClosestUndoElementInGroup(element.groupId);\n            if (element !== matchedElement && matchedStrResource) {\n                // there is an element in the same group that should be undone before this one\n                return this._undo(matchedStrResource, sourceId, undoConfirmed);\n            }\n        }\n        const shouldPromptForConfirmation = (element.sourceId !== sourceId || element.confirmBeforeUndo);\n        if (shouldPromptForConfirmation && !undoConfirmed) {\n            // Hit a different source or the element asks for prompt before undo, prompt for confirmation\n            return this._confirmAndContinueUndo(strResource, sourceId, element);\n        }\n        try {\n            if (element.type === 1 /* UndoRedoElementType.Workspace */) {\n                return this._workspaceUndo(strResource, element, undoConfirmed);\n            }\n            else {\n                return this._resourceUndo(editStack, element, undoConfirmed);\n            }\n        }\n        finally {\n            if (DEBUG) {\n                this._print('undo');\n            }\n        }\n    }\n    _confirmAndContinueUndo(strResource, sourceId, element) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this._dialogService.confirm({\n                message: nls.localize('confirmDifferentSource', \"Would you like to undo '{0}'?\", element.label),\n                primaryButton: nls.localize({ key: 'confirmDifferentSource.yes', comment: ['&& denotes a mnemonic'] }, \"&&Yes\"),\n                cancelButton: nls.localize('confirmDifferentSource.no', \"No\")\n            });\n            if (!result.confirmed) {\n                return;\n            }\n            return this._undo(strResource, sourceId, true);\n        });\n    }\n    _findClosestRedoElementWithSource(sourceId) {\n        if (!sourceId) {\n            return [null, null];\n        }\n        // find an element with sourceId and with the lowest sourceOrder ready to be redone\n        let matchedElement = null;\n        let matchedStrResource = null;\n        for (const [strResource, editStack] of this._editStacks) {\n            const candidate = editStack.getClosestFutureElement();\n            if (!candidate) {\n                continue;\n            }\n            if (candidate.sourceId === sourceId) {\n                if (!matchedElement || candidate.sourceOrder < matchedElement.sourceOrder) {\n                    matchedElement = candidate;\n                    matchedStrResource = strResource;\n                }\n            }\n        }\n        return [matchedElement, matchedStrResource];\n    }\n    canRedo(resourceOrSource) {\n        if (resourceOrSource instanceof UndoRedoSource) {\n            const [, matchedStrResource] = this._findClosestRedoElementWithSource(resourceOrSource.id);\n            return matchedStrResource ? true : false;\n        }\n        const strResource = this.getUriComparisonKey(resourceOrSource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            return editStack.hasFutureElements();\n        }\n        return false;\n    }\n    _tryToSplitAndRedo(strResource, element, ignoreResources, message) {\n        if (element.canSplit()) {\n            this._splitFutureWorkspaceElement(element, ignoreResources);\n            this._notificationService.warn(message);\n            return new WorkspaceVerificationError(this._redo(strResource));\n        }\n        else {\n            // Cannot safely split this workspace element => flush all undo/redo stacks\n            for (const strResource of element.strResources) {\n                this.removeElements(strResource);\n            }\n            this._notificationService.warn(message);\n            return new WorkspaceVerificationError();\n        }\n    }\n    _checkWorkspaceRedo(strResource, element, editStackSnapshot, checkInvalidatedResources) {\n        if (element.removedResources) {\n            return this._tryToSplitAndRedo(strResource, element, element.removedResources, nls.localize({ key: 'cannotWorkspaceRedo', comment: ['{0} is a label for an operation. {1} is another message.'] }, \"Could not redo '{0}' across all files. {1}\", element.label, element.removedResources.createMessage()));\n        }\n        if (checkInvalidatedResources && element.invalidatedResources) {\n            return this._tryToSplitAndRedo(strResource, element, element.invalidatedResources, nls.localize({ key: 'cannotWorkspaceRedo', comment: ['{0} is a label for an operation. {1} is another message.'] }, \"Could not redo '{0}' across all files. {1}\", element.label, element.invalidatedResources.createMessage()));\n        }\n        // this must be the last future element in all the impacted resources!\n        const cannotRedoDueToResources = [];\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.getClosestFutureElement() !== element) {\n                cannotRedoDueToResources.push(editStack.resourceLabel);\n            }\n        }\n        if (cannotRedoDueToResources.length > 0) {\n            return this._tryToSplitAndRedo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceRedoDueToChanges', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not redo '{0}' across all files because changes were made to {1}\", element.label, cannotRedoDueToResources.join(', ')));\n        }\n        const cannotLockDueToResources = [];\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.locked) {\n                cannotLockDueToResources.push(editStack.resourceLabel);\n            }\n        }\n        if (cannotLockDueToResources.length > 0) {\n            return this._tryToSplitAndRedo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceRedoDueToInProgressUndoRedo', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not redo '{0}' across all files because there is already an undo or redo operation running on {1}\", element.label, cannotLockDueToResources.join(', ')));\n        }\n        // check if new stack elements were added in the meantime...\n        if (!editStackSnapshot.isValid()) {\n            return this._tryToSplitAndRedo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceRedoDueToInMeantimeUndoRedo', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not redo '{0}' across all files because an undo or redo operation occurred in the meantime\", element.label));\n        }\n        return null;\n    }\n    _workspaceRedo(strResource, element) {\n        const affectedEditStacks = this._getAffectedEditStacks(element);\n        const verificationError = this._checkWorkspaceRedo(strResource, element, affectedEditStacks, /*invalidated resources will be checked after the prepare call*/ false);\n        if (verificationError) {\n            return verificationError.returnValue;\n        }\n        return this._executeWorkspaceRedo(strResource, element, affectedEditStacks);\n    }\n    _executeWorkspaceRedo(strResource, element, editStackSnapshot) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // prepare\n            let cleanup;\n            try {\n                cleanup = yield this._invokeWorkspacePrepare(element);\n            }\n            catch (err) {\n                return this._onError(err, element);\n            }\n            // At this point, it is possible that the element has been made invalid in the meantime (due to the prepare await)\n            const verificationError = this._checkWorkspaceRedo(strResource, element, editStackSnapshot, /*now also check that there are no more invalidated resources*/ true);\n            if (verificationError) {\n                cleanup.dispose();\n                return verificationError.returnValue;\n            }\n            for (const editStack of editStackSnapshot.editStacks) {\n                editStack.moveForward(element);\n            }\n            return this._safeInvokeWithLocks(element, () => element.actual.redo(), editStackSnapshot, cleanup, () => this._continueRedoInGroup(element.groupId));\n        });\n    }\n    _resourceRedo(editStack, element) {\n        if (!element.isValid) {\n            // invalid element => immediately flush edit stack!\n            editStack.flushAllElements();\n            return;\n        }\n        if (editStack.locked) {\n            const message = nls.localize({ key: 'cannotResourceRedoDueToInProgressUndoRedo', comment: ['{0} is a label for an operation.'] }, \"Could not redo '{0}' because there is already an undo or redo operation running.\", element.label);\n            this._notificationService.warn(message);\n            return;\n        }\n        return this._invokeResourcePrepare(element, (cleanup) => {\n            editStack.moveForward(element);\n            return this._safeInvokeWithLocks(element, () => element.actual.redo(), new EditStackSnapshot([editStack]), cleanup, () => this._continueRedoInGroup(element.groupId));\n        });\n    }\n    _findClosestRedoElementInGroup(groupId) {\n        if (!groupId) {\n            return [null, null];\n        }\n        // find another element with the same groupId and with the lowest groupOrder ready to be redone\n        let matchedElement = null;\n        let matchedStrResource = null;\n        for (const [strResource, editStack] of this._editStacks) {\n            const candidate = editStack.getClosestFutureElement();\n            if (!candidate) {\n                continue;\n            }\n            if (candidate.groupId === groupId) {\n                if (!matchedElement || candidate.groupOrder < matchedElement.groupOrder) {\n                    matchedElement = candidate;\n                    matchedStrResource = strResource;\n                }\n            }\n        }\n        return [matchedElement, matchedStrResource];\n    }\n    _continueRedoInGroup(groupId) {\n        if (!groupId) {\n            return;\n        }\n        const [, matchedStrResource] = this._findClosestRedoElementInGroup(groupId);\n        if (matchedStrResource) {\n            return this._redo(matchedStrResource);\n        }\n    }\n    redo(resourceOrSource) {\n        if (resourceOrSource instanceof UndoRedoSource) {\n            const [, matchedStrResource] = this._findClosestRedoElementWithSource(resourceOrSource.id);\n            return matchedStrResource ? this._redo(matchedStrResource) : undefined;\n        }\n        if (typeof resourceOrSource === 'string') {\n            return this._redo(resourceOrSource);\n        }\n        return this._redo(this.getUriComparisonKey(resourceOrSource));\n    }\n    _redo(strResource) {\n        if (!this._editStacks.has(strResource)) {\n            return;\n        }\n        const editStack = this._editStacks.get(strResource);\n        const element = editStack.getClosestFutureElement();\n        if (!element) {\n            return;\n        }\n        if (element.groupId) {\n            // this element is a part of a group, we need to make sure redoing in a group is in order\n            const [matchedElement, matchedStrResource] = this._findClosestRedoElementInGroup(element.groupId);\n            if (element !== matchedElement && matchedStrResource) {\n                // there is an element in the same group that should be redone before this one\n                return this._redo(matchedStrResource);\n            }\n        }\n        try {\n            if (element.type === 1 /* UndoRedoElementType.Workspace */) {\n                return this._workspaceRedo(strResource, element);\n            }\n            else {\n                return this._resourceRedo(editStack, element);\n            }\n        }\n        finally {\n            if (DEBUG) {\n                this._print('redo');\n            }\n        }\n    }\n};\nUndoRedoService = __decorate([\n    __param(0, IDialogService),\n    __param(1, INotificationService)\n], UndoRedoService);\nexport { UndoRedoService };\nclass WorkspaceVerificationError {\n    constructor(returnValue) {\n        this.returnValue = returnValue;\n    }\n}\nregisterSingleton(IUndoRedoService, UndoRedoService, 1 /* InstantiationType.Delayed */);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { localize } from '../../../nls.js';\nimport { basename } from '../../../base/common/path.js';\nimport { TernarySearchTree } from '../../../base/common/ternarySearchTree.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IWorkspaceContextService = createDecorator('contextService');\nexport function isSingleFolderWorkspaceIdentifier(obj) {\n    const singleFolderIdentifier = obj;\n    return typeof (singleFolderIdentifier === null || singleFolderIdentifier === void 0 ? void 0 : singleFolderIdentifier.id) === 'string' && URI.isUri(singleFolderIdentifier.uri);\n}\nexport function isEmptyWorkspaceIdentifier(obj) {\n    const emptyWorkspaceIdentifier = obj;\n    return typeof (emptyWorkspaceIdentifier === null || emptyWorkspaceIdentifier === void 0 ? void 0 : emptyWorkspaceIdentifier.id) === 'string'\n        && !isSingleFolderWorkspaceIdentifier(obj)\n        && !isWorkspaceIdentifier(obj);\n}\nexport const EXTENSION_DEVELOPMENT_EMPTY_WINDOW_WORKSPACE = { id: 'ext-dev' };\nexport const UNKNOWN_EMPTY_WINDOW_WORKSPACE = { id: 'empty-window' };\nexport function toWorkspaceIdentifier(arg0, isExtensionDevelopment) {\n    // Empty workspace\n    if (typeof arg0 === 'string' || typeof arg0 === 'undefined') {\n        // With a backupPath, the basename is the empty workspace identifier\n        if (typeof arg0 === 'string') {\n            return {\n                id: basename(arg0)\n            };\n        }\n        // Extension development empty windows have backups disabled\n        // so we return a constant workspace identifier for extension\n        // authors to allow to restore their workspace state even then.\n        if (isExtensionDevelopment) {\n            return EXTENSION_DEVELOPMENT_EMPTY_WINDOW_WORKSPACE;\n        }\n        return UNKNOWN_EMPTY_WINDOW_WORKSPACE;\n    }\n    // Multi root\n    const workspace = arg0;\n    if (workspace.configuration) {\n        return {\n            id: workspace.id,\n            configPath: workspace.configuration\n        };\n    }\n    // Single folder\n    if (workspace.folders.length === 1) {\n        return {\n            id: workspace.id,\n            uri: workspace.folders[0].uri\n        };\n    }\n    // Empty window\n    return {\n        id: workspace.id\n    };\n}\nexport function isWorkspaceIdentifier(obj) {\n    const workspaceIdentifier = obj;\n    return typeof (workspaceIdentifier === null || workspaceIdentifier === void 0 ? void 0 : workspaceIdentifier.id) === 'string' && URI.isUri(workspaceIdentifier.configPath);\n}\nexport class Workspace {\n    constructor(_id, folders, _transient, _configuration, _ignorePathCasing) {\n        this._id = _id;\n        this._transient = _transient;\n        this._configuration = _configuration;\n        this._ignorePathCasing = _ignorePathCasing;\n        this._foldersMap = TernarySearchTree.forUris(this._ignorePathCasing, () => true);\n        this.folders = folders;\n    }\n    get folders() {\n        return this._folders;\n    }\n    set folders(folders) {\n        this._folders = folders;\n        this.updateFoldersMap();\n    }\n    get id() {\n        return this._id;\n    }\n    get transient() {\n        return this._transient;\n    }\n    get configuration() {\n        return this._configuration;\n    }\n    set configuration(configuration) {\n        this._configuration = configuration;\n    }\n    getFolder(resource) {\n        if (!resource) {\n            return null;\n        }\n        return this._foldersMap.findSubstr(resource) || null;\n    }\n    updateFoldersMap() {\n        this._foldersMap = TernarySearchTree.forUris(this._ignorePathCasing, () => true);\n        for (const folder of this.folders) {\n            this._foldersMap.set(folder.uri, folder);\n        }\n    }\n    toJSON() {\n        return { id: this.id, folders: this.folders, transient: this.transient, configuration: this.configuration };\n    }\n}\nexport class WorkspaceFolder {\n    constructor(data, \n    /**\n     * Provides access to the original metadata for this workspace\n     * folder. This can be different from the metadata provided in\n     * this class:\n     * - raw paths can be relative\n     * - raw paths are not normalized\n     */\n    raw) {\n        this.raw = raw;\n        this.uri = data.uri;\n        this.index = data.index;\n        this.name = data.name;\n    }\n    toJSON() {\n        return { uri: this.uri, name: this.name, index: this.index };\n    }\n}\nexport const WORKSPACE_EXTENSION = 'code-workspace';\nexport const WORKSPACE_FILTER = [{ name: localize('codeWorkspace', \"Code Workspace\"), extensions: [WORKSPACE_EXTENSION] }];\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IWorkspaceTrustManagementService = createDecorator('workspaceTrustManagementService');\n"],"names":["WillSaveStateReason","TARGET_KEY","IStorageService","createDecorator","AbstractStorageService","_Disposable","_inherits","_super","_createSuper","_this","options","arguments","length","undefined","flushInterval","DEFAULT_FLUSH_INTERVAL","_classCallCheck","call","_onDidChangeValue","_register","PauseableEmitter","onDidChangeValue","event","_onDidChangeTarget","_onWillSaveState","Emitter","onWillSaveState","_workspaceKeyTargets","_profileKeyTargets","_applicationKeyTargets","_createClass","key","value","scope","this","fire","target","getKeyTargets","fallbackValue","_a","getStorage","get","getBoolean","getNumber","_this2","isUndefinedOrNull","remove","withPausedEmitters","updateKeyTarget","set","_this3","delete","fn","pause","resume","_b","keyTargets","JSON","stringify","loadKeyTargets","applicationKeyTargets","profileKeyTargets","workspaceKeyTargets","storage","keysRaw","parse","error","Object","create","Disposable","InMemoryStorageService","_AbstractStorageServi","_super2","_this4","applicationStorage","Storage","InMemoryStorageDatabase","hint","StorageHint","profileStorage","workspaceStorage","onDidChangeStorage","emitDidChangeValue","ITelemetryService","defaultKeybindingLabelStyles","keybindingLabelBackground","asCssVariable","keybindingLabelForeground","keybindingLabelBorder","keybindingLabelBottomBorder","keybindingLabelShadow","widgetShadow","defaultButtonStyles","buttonForeground","buttonSeparator","buttonBackground","buttonHoverBackground","buttonSecondaryForeground","buttonSecondaryBackground","buttonSecondaryHoverBackground","buttonBorder","defaultProgressBarStyles","progressBarBackground","defaultToggleStyles","inputActiveOptionBorder","inputActiveOptionForeground","inputActiveOptionBackground","defaultInputBoxStyles","checkboxBackground","checkboxBorder","checkboxForeground","editorWidgetBackground","editorWidgetForeground","contrastBorder","problemsErrorIconForeground","problemsWarningIconForeground","problemsInfoIconForeground","textLinkForeground","inputBackground","inputForeground","inputBorder","inputValidationInfoBorder","inputValidationInfoBackground","inputValidationInfoForeground","inputValidationWarningBorder","inputValidationWarningBackground","inputValidationWarningForeground","inputValidationErrorBorder","inputValidationErrorBackground","inputValidationErrorForeground","defaultFindWidgetStyles","listFilterWidgetBackground","listFilterWidgetOutline","listFilterWidgetNoMatchesOutline","listFilterWidgetShadow","inputBoxStyles","toggleStyles","defaultCountBadgeStyles","badgeBackground","badgeForeground","badgeBorder","defaultListStyles","breadcrumbsBackground","breadcrumbsForeground","breadcrumbsFocusForeground","breadcrumbsActiveSelectionForeground","listBackground","listInactiveFocusForeground","listFocusBackground","listFocusForeground","listFocusOutline","listActiveSelectionBackground","listActiveSelectionForeground","listActiveSelectionIconForeground","listFocusAndSelectionOutline","listFocusAndSelectionBackground","listFocusAndSelectionForeground","listInactiveSelectionBackground","listInactiveSelectionIconForeground","listInactiveSelectionForeground","listInactiveFocusBackground","listInactiveFocusOutline","listHoverBackground","listHoverForeground","listDropBackground","listSelectionOutline","activeContrastBorder","listHoverOutline","treeIndentGuidesStroke","treeInactiveIndentGuidesStroke","tableColumnsBorder","tableOddRowsBackgroundColor","getListStyles","override","styles","result","assign","val","overrideStyles","defaultSelectBoxStyles","selectBackground","selectListBackground","selectForeground","decoratorRightForeground","pickerGroupForeground","selectBorder","focusBorder","quickInputListFocusBackground","quickInputListFocusIconForeground","quickInputListFocusForeground","asCssVariableWithDefault","Color","selectListBorder","editorWidgetBorder","defaultMenuStyles","shadowColor","borderColor","menuBorder","foregroundColor","menuForeground","backgroundColor","menuBackground","selectionForegroundColor","menuSelectionForeground","selectionBackgroundColor","menuSelectionBackground","selectionBorderColor","menuSelectionBorder","separatorColor","menuSeparatorBackground","scrollbarShadow","scrollbarSliderBackground","scrollbarSliderHoverBackground","scrollbarSliderActiveBackground","getIconsStyleSheet","themeService","onDidChangeEmmiter","iconRegistry","getIconRegistry","onDidChange","onDidProductIconThemeChange","getCSS","_step","productIconTheme","getProductIconTheme","UnthemedProductIconTheme","usedFontIds","formatIconRule","contribution","definition","getIcon","fontContribution","font","id","concat","fontCharacter","asCSSPropertyValue","rules","_iterator","_createForOfIteratorHelper","getIcons","s","n","done","rule","push","err","e","f","fontWeight","weight","fontStyle","style","src","map","l","asCSSUrl","location","format","join","defaults","ThemeIcon","c","asCssVariableName","colorIdent","replace","color","defaultCssValue","Extensions","ColorContribution","ColorRegistry","_onDidChangeSchema","onDidChangeSchema","colorSchema","type","properties","colorReferenceSchema","enum","enumDescriptions","colorsById","description","deprecationMessage","colorContribution","needsTransparency","propertySchema","defaultSnippets","body","keys","theme","colorDesc","resolveColorValue","sort","a","b","cat1","indexOf","cat2","localeCompare","k","colorRegistry","registerColor","o","hcLight","hcDark","light","platform","ifArg","thenArg","elseArg","foreground","dark","nls","errorForeground","iconForeground","transparent","widgetBorder","lighten","darken","editorErrorForeground","editorErrorBorder","editorWarningForeground","editorWarningBorder","editorInfoForeground","editorInfoBorder","editorHintForeground","editorBackground","editorForeground","editorWidgetResizeBorder","quickInputBackground","quickInputForeground","quickInputTitleBackground","RGBA","pickerGroupBorder","editorSelectionBackground","editorSelectionForeground","editorInactiveSelection","editorSelectionHighlight","lessProminent","editorFindMatch","editorFindMatchHighlight","editorFindRangeHighlight","editorFindMatchBorder","editorFindMatchHighlightBorder","editorFindRangeHighlightBorder","editorHoverBackground","editorHoverBorder","editorActiveLinkForeground","editorInlayHintForeground","editorInlayHintBackground","editorInlayHintTypeForeground","editorInlayHintTypeBackground","editorInlayHintParameterForeground","editorInlayHintParameterBackground","defaultInsertColor","defaultRemoveColor","diffInserted","diffRemoved","diffOverviewRulerInserted","diffOverviewRulerRemoved","diffDiagonalFill","listHighlightForeground","listFocusHighlightForeground","op","if","then","else","_deprecatedQuickInputListFocusBackground","oneOf","toolbarHoverBackground","currentBaseColor","incomingBaseColor","commonBaseColor","contentTransparency","mergeCurrentHeaderBackground","mergeIncomingHeaderBackground","mergeCommonHeaderBackground","mergeBorder","overviewRulerFindMatchForeground","overviewRulerSelectionHighlightForeground","minimapFindMatch","minimapSelectionOccurrenceHighlight","minimapSelection","minimapError","minimapWarning","minimapBackground","minimapForegroundOpacity","colorValue","factor","_len","colorValues","Array","_key","values","backgroundColorValue","transparency","background","getColor","transform","_c","_d","makeOpaque","defines","from","isDarkerThan","assertNever","executeTransform","workbenchColorsSchemaId","schemaRegistry","JSONExtensions","registerSchema","getColorSchema","delayer","RunOnceScheduler","notifySchemaChanged","isScheduled","schedule","IconContribution","IconFontDefinition","getDefinition","registry","toJSONObject","iconFont","toString","fromJSONObject","json","stringOrUndef","isString","isArray","every","URI","IconRegistry","_onDidChange","iconSchema","definitions","icons","fontId","localize","additionalProperties","iconReferenceSchema","pattern","iconsById","iconFontsById","existing","markdownDescription","enumIndex","iconContribution","$ref","sorter","i1","i2","classNames","i","reference","contributions","filter","_step2","_iterator2","registerIcon","codiconFontCharacters","getCodiconFontCharacters","icon","initialize","iconsSchemaId","getIconSchema","widgetClose","Codicon","ColorScheme","isHighContrast","scheme","HIGH_CONTRAST_DARK","HIGH_CONTRAST_LIGHT","isDark","DARK","IThemeService","themeColorFromId","getThemeTypeSelector","ThemingContribution","themingRegistry","ThemingRegistry","themingParticipants","onThemingParticipantAddedEmitter","participant","toDisposable","idx","splice","registerThemingParticipant","onColorThemeChange","Themable","getColorTheme","onDidColorThemeChange","onThemeChange","updateStyles","IUndoRedoService","ResourceEditStackSnapshot","resource","elements","UndoRedoGroup","_ID","order","None","UndoRedoSource","__decorate","decorators","desc","d","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","apply","DEBUG","getResourceLabel","Schemas","fsPath","path","stackElementCounter","ResourceStackElement","actual","resourceLabel","strResource","groupId","groupOrder","sourceId","sourceOrder","label","confirmBeforeUndo","resourceLabels","strResources","isValid","constructor","name","ResourceReasonPair","reason","RemovedResources","Map","externalRemoval","noParallelUniverses","element","_slicedToArray","messages","comment","size","has","WorkspaceStackElement","removedResources","invalidatedResources","split","ResourceEditStack","_past","_future","locked","versionId","removeResource","_step3","_iterator3","setValid","_step4","_iterator4","_setElementValidFlag","_step5","_iterator5","_step6","_iterator6","futureElement","len","snapshot","snapshotLength","isOK","snapshotIndex","removePastAfter","removeFutureBefore","slice","_step7","past","future","_iterator7","_step8","_iterator8","toRemove","individualMap","j","pop","EditStackSnapshot","editStacks","_versionIds","missingEditStack","UndoRedoService","_dialogService","_notificationService","_editStacks","_uriComparisonKeyComputers","_step9","_iterator9","uriComparisonKeyComputer","getComparisonKey","console","log","_step10","str","_iterator10","group","source","getUriComparisonKey","_pushElement","nextOrder","_step11","seen","Set","_iterator11","resources","add","editStack","pushElement","hasFutureElements","closestPastElement","getClosestPastElement","ignoreResources","_step12","individualArr","_iterator12","_element","_step13","_iterator13","splitPastWorkspaceElement","_step14","_iterator14","_step15","_iterator15","splitFutureWorkspaceElement","dispose","setElementsValidFlag","createSnapshot","restoreSnapshot","hasPastElements","getElements","_step16","matchedElement","matchedStrResource","_iterator16","_step16$value","candidate","resourceOrSource","_this$_findClosestUnd","_findClosestUndoElementWithSource","onUnexpectedError","_step17","_iterator17","removeElements","editStackSnapshot","_step18","_iterator18","Error","_step19","_iterator19","_step20","_iterator20","invoke","cleanup","continuation","releaseLocks","_acquireLocks","_onError","_regeneratorRuntime","mark","_callee","wrap","_context","prev","prepareUndoRedo","abrupt","stop","callback","isDisposable","disposable","_step21","affectedEditStacks","_iterator21","message","canSplit","_splitPastWorkspaceElement","warn","WorkspaceVerificationError","_undo","_step22","_iterator22","checkInvalidatedResources","_tryToSplitAndUndo","createMessage","_step23","cannotUndoDueToResources","_iterator23","_step24","cannotLockDueToResources","_iterator24","undoConfirmed","_getAffectedEditStacks","verificationError","_checkWorkspaceUndo","returnValue","_confirmAndExecuteWorkspaceUndo","_step25","_iterator25","pastElement","secondPastElement","getSecondClosestPastElement","_callee2","UndoChoice","_yield$this$_dialogSe","verificationError1","verificationError2","_iterator26","_step26","_context2","_isPartOfUndoGroup","prompt","Severity","buttons","run","All","This","cancelButton","Cancel","sent","_invokeWorkspacePrepare","t0","moveBackward","_safeInvokeWithLocks","undo","_continueUndoInGroup","_invokeResourcePrepare","flushAllElements","_step27","_iterator27","_step27$value","_this$_findClosestUnd3","_findClosestUndoElementInGroup","_this$_findClosestUnd5","_this$_findClosestUnd7","_this$_findClosestUnd8","_confirmAndContinueUndo","_workspaceUndo","_resourceUndo","_callee3","_context3","confirm","primaryButton","confirmed","_step28","_iterator28","_step28$value","getClosestFutureElement","_this$_findClosestRed","_findClosestRedoElementWithSource","_splitFutureWorkspaceElement","_redo","_step29","_iterator29","_tryToSplitAndRedo","_step30","cannotRedoDueToResources","_iterator30","_step31","_iterator31","_checkWorkspaceRedo","_executeWorkspaceRedo","_callee4","_iterator32","_step32","_context4","moveForward","redo","_continueRedoInGroup","_this5","_step33","_iterator33","_step33$value","_this$_findClosestRed3","_findClosestRedoElementInGroup","_this$_findClosestRed5","_this$_findClosestRed7","_this$_findClosestRed8","_workspaceRedo","_resourceRedo","IDialogService","INotificationService","registerSingleton","IWorkspaceContextService","isSingleFolderWorkspaceIdentifier","obj","singleFolderIdentifier","uri","isEmptyWorkspaceIdentifier","workspaceIdentifier","configPath","isWorkspaceIdentifier","EXTENSION_DEVELOPMENT_EMPTY_WINDOW_WORKSPACE","UNKNOWN_EMPTY_WINDOW_WORKSPACE","toWorkspaceIdentifier","arg0","isExtensionDevelopment","basename","workspace","configuration","folders","WorkspaceFolder","data","raw","index","WORKSPACE_EXTENSION","IWorkspaceTrustManagementService"],"sourceRoot":""}