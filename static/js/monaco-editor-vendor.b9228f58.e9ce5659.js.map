{"version":3,"file":"static/js/monaco-editor-vendor.b9228f58.e9ce5659.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/editor/browser/dnd.js","../node_modules/monaco-editor/esm/vs/editor/browser/editorBrowser.js","../node_modules/monaco-editor/esm/vs/editor/browser/editorDom.js","../node_modules/monaco-editor/esm/vs/editor/browser/editorExtensions.js","../node_modules/monaco-editor/esm/vs/editor/browser/services/abstractCodeEditorService.js","../node_modules/monaco-editor/esm/vs/editor/browser/services/bulkEditService.js","../node_modules/monaco-editor/esm/vs/editor/browser/services/codeEditorService.js","../node_modules/monaco-editor/esm/vs/editor/browser/services/editorWorkerService.js","../node_modules/monaco-editor/esm/vs/editor/browser/services/markerDecorations.js","../node_modules/monaco-editor/esm/vs/editor/browser/services/openerService.js","../node_modules/monaco-editor/esm/vs/editor/browser/services/webWorker.js","../node_modules/monaco-editor/esm/vs/editor/browser/stableEditorScroll.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/contentWidgets/contentWidgets.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/currentLineHighlight/currentLineHighlight.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/decorations/decorations.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/editorScrollbar/editorScrollbar.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/indentGuides/indentGuides.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/domReadingContext.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/viewLines.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/glyphMargin/glyphMargin.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/linesDecorations/linesDecorations.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/marginDecorations/marginDecorations.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapCharSheet.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapCharRenderer.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapPreBaked.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapCharRendererFactory.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimap.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overlayWidgets/overlayWidgets.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overviewRuler/decorationsOverviewRuler.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overviewRuler/overviewRuler.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/rulers/rulers.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/scrollDecoration/scrollDecoration.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/selections/selections.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewCursors/viewCursor.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewCursors/viewCursors.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewZones/viewZones.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/blockDecorations/blockDecorations.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/whitespace/whitespace.js","../node_modules/monaco-editor/esm/vs/editor/browser/view.js","../node_modules/monaco-editor/esm/vs/editor/browser/view/domLineBreaksComputer.js","../node_modules/monaco-editor/esm/vs/editor/browser/view/dynamicViewOverlay.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lineNumbers/lineNumbers.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/rangeUtil.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/viewLine.js","../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/margin/margin.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DataTransfers } from '../../base/browser/dnd.js';\nimport { createFileDataTransferItem, createStringDataTransferItem, UriList, VSDataTransfer } from '../../base/common/dataTransfer.js';\nimport { Mimes } from '../../base/common/mime.js';\nimport { URI } from '../../base/common/uri.js';\nimport { CodeDataTransfers } from '../../platform/dnd/browser/dnd.js';\nexport function toVSDataTransfer(dataTransfer) {\n    const vsDataTransfer = new VSDataTransfer();\n    for (const item of dataTransfer.items) {\n        const type = item.type;\n        if (item.kind === 'string') {\n            const asStringValue = new Promise(resolve => item.getAsString(resolve));\n            vsDataTransfer.append(type, createStringDataTransferItem(asStringValue));\n        }\n        else if (item.kind === 'file') {\n            const file = item.getAsFile();\n            if (file) {\n                vsDataTransfer.append(type, createFileDataTransferItemFromFile(file));\n            }\n        }\n    }\n    return vsDataTransfer;\n}\nfunction createFileDataTransferItemFromFile(file) {\n    const uri = file.path ? URI.parse(file.path) : undefined;\n    return createFileDataTransferItem(file.name, uri, () => __awaiter(this, void 0, void 0, function* () {\n        return new Uint8Array(yield file.arrayBuffer());\n    }));\n}\nconst INTERNAL_DND_MIME_TYPES = Object.freeze([\n    CodeDataTransfers.EDITORS,\n    CodeDataTransfers.FILES,\n    DataTransfers.RESOURCES,\n    DataTransfers.INTERNAL_URI_LIST,\n]);\nexport function toExternalVSDataTransfer(sourceDataTransfer, overwriteUriList = false) {\n    const vsDataTransfer = toVSDataTransfer(sourceDataTransfer);\n    // Try to expose the internal uri-list type as the standard type\n    const uriList = vsDataTransfer.get(DataTransfers.INTERNAL_URI_LIST);\n    if (uriList) {\n        vsDataTransfer.replace(Mimes.uriList, uriList);\n    }\n    else {\n        if (overwriteUriList || !vsDataTransfer.has(Mimes.uriList)) {\n            // Otherwise, fallback to adding dragged resources to the uri list\n            const editorData = [];\n            for (const item of sourceDataTransfer.items) {\n                const file = item.getAsFile();\n                if (file) {\n                    const path = file.path;\n                    try {\n                        if (path) {\n                            editorData.push(URI.file(path).toString());\n                        }\n                        else {\n                            editorData.push(URI.parse(file.name, true).toString());\n                        }\n                    }\n                    catch (_a) {\n                        // Parsing failed. Leave out from list\n                    }\n                }\n            }\n            if (editorData.length) {\n                vsDataTransfer.replace(Mimes.uriList, createStringDataTransferItem(UriList.create(editorData)));\n            }\n        }\n    }\n    for (const internal of INTERNAL_DND_MIME_TYPES) {\n        vsDataTransfer.delete(internal);\n    }\n    return vsDataTransfer;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as editorCommon from '../common/editorCommon.js';\n/**\n *@internal\n */\nexport function isCodeEditor(thing) {\n    if (thing && typeof thing.getEditorType === 'function') {\n        return thing.getEditorType() === editorCommon.EditorType.ICodeEditor;\n    }\n    else {\n        return false;\n    }\n}\n/**\n *@internal\n */\nexport function isDiffEditor(thing) {\n    if (thing && typeof thing.getEditorType === 'function') {\n        return thing.getEditorType() === editorCommon.EditorType.IDiffEditor;\n    }\n    else {\n        return false;\n    }\n}\n/**\n *@internal\n */\nexport function isCompositeEditor(thing) {\n    return !!thing\n        && typeof thing === 'object'\n        && typeof thing.onDidChangeActiveEditor === 'function';\n}\n/**\n *@internal\n */\nexport function getCodeEditor(thing) {\n    if (isCodeEditor(thing)) {\n        return thing;\n    }\n    if (isDiffEditor(thing)) {\n        return thing.getModifiedEditor();\n    }\n    if (isCompositeEditor(thing) && isCodeEditor(thing.activeCodeEditor)) {\n        return thing.activeCodeEditor;\n    }\n    return null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../base/browser/dom.js';\nimport { GlobalPointerMoveMonitor } from '../../base/browser/globalPointerMoveMonitor.js';\nimport { StandardMouseEvent } from '../../base/browser/mouseEvent.js';\nimport { RunOnceScheduler } from '../../base/common/async.js';\nimport { Disposable } from '../../base/common/lifecycle.js';\nimport { asCssVariable } from '../../platform/theme/common/colorRegistry.js';\n/**\n * Coordinates relative to the whole document (e.g. mouse event's pageX and pageY)\n */\nexport class PageCoordinates {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this._pageCoordinatesBrand = undefined;\n    }\n    toClientCoordinates() {\n        return new ClientCoordinates(this.x - window.scrollX, this.y - window.scrollY);\n    }\n}\n/**\n * Coordinates within the application's client area (i.e. origin is document's scroll position).\n *\n * For example, clicking in the top-left corner of the client area will\n * always result in a mouse event with a client.x value of 0, regardless\n * of whether the page is scrolled horizontally.\n */\nexport class ClientCoordinates {\n    constructor(clientX, clientY) {\n        this.clientX = clientX;\n        this.clientY = clientY;\n        this._clientCoordinatesBrand = undefined;\n    }\n    toPageCoordinates() {\n        return new PageCoordinates(this.clientX + window.scrollX, this.clientY + window.scrollY);\n    }\n}\n/**\n * The position of the editor in the page.\n */\nexport class EditorPagePosition {\n    constructor(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this._editorPagePositionBrand = undefined;\n    }\n}\n/**\n * Coordinates relative to the the (top;left) of the editor that can be used safely with other internal editor metrics.\n * **NOTE**: This position is obtained by taking page coordinates and transforming them relative to the\n * editor's (top;left) position in a way in which scale transformations are taken into account.\n * **NOTE**: These coordinates could be negative if the mouse position is outside the editor.\n */\nexport class CoordinatesRelativeToEditor {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this._positionRelativeToEditorBrand = undefined;\n    }\n}\nexport function createEditorPagePosition(editorViewDomNode) {\n    const editorPos = dom.getDomNodePagePosition(editorViewDomNode);\n    return new EditorPagePosition(editorPos.left, editorPos.top, editorPos.width, editorPos.height);\n}\nexport function createCoordinatesRelativeToEditor(editorViewDomNode, editorPagePosition, pos) {\n    // The editor's page position is read from the DOM using getBoundingClientRect().\n    //\n    // getBoundingClientRect() returns the actual dimensions, while offsetWidth and offsetHeight\n    // reflect the unscaled size. We can use this difference to detect a transform:scale()\n    // and we will apply the transformation in inverse to get mouse coordinates that make sense inside the editor.\n    //\n    // This could be expanded to cover rotation as well maybe by walking the DOM up from `editorViewDomNode`\n    // and computing the effective transformation matrix using getComputedStyle(element).transform.\n    //\n    const scaleX = editorPagePosition.width / editorViewDomNode.offsetWidth;\n    const scaleY = editorPagePosition.height / editorViewDomNode.offsetHeight;\n    // Adjust mouse offsets if editor appears to be scaled via transforms\n    const relativeX = (pos.x - editorPagePosition.x) / scaleX;\n    const relativeY = (pos.y - editorPagePosition.y) / scaleY;\n    return new CoordinatesRelativeToEditor(relativeX, relativeY);\n}\nexport class EditorMouseEvent extends StandardMouseEvent {\n    constructor(e, isFromPointerCapture, editorViewDomNode) {\n        super(e);\n        this._editorMouseEventBrand = undefined;\n        this.isFromPointerCapture = isFromPointerCapture;\n        this.pos = new PageCoordinates(this.posx, this.posy);\n        this.editorPos = createEditorPagePosition(editorViewDomNode);\n        this.relativePos = createCoordinatesRelativeToEditor(editorViewDomNode, this.editorPos, this.pos);\n    }\n}\nexport class EditorMouseEventFactory {\n    constructor(editorViewDomNode) {\n        this._editorViewDomNode = editorViewDomNode;\n    }\n    _create(e) {\n        return new EditorMouseEvent(e, false, this._editorViewDomNode);\n    }\n    onContextMenu(target, callback) {\n        return dom.addDisposableListener(target, 'contextmenu', (e) => {\n            callback(this._create(e));\n        });\n    }\n    onMouseUp(target, callback) {\n        return dom.addDisposableListener(target, 'mouseup', (e) => {\n            callback(this._create(e));\n        });\n    }\n    onMouseDown(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.MOUSE_DOWN, (e) => {\n            callback(this._create(e));\n        });\n    }\n    onPointerDown(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.POINTER_DOWN, (e) => {\n            callback(this._create(e), e.pointerId);\n        });\n    }\n    onMouseLeave(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.MOUSE_LEAVE, (e) => {\n            callback(this._create(e));\n        });\n    }\n    onMouseMove(target, callback) {\n        return dom.addDisposableListener(target, 'mousemove', (e) => callback(this._create(e)));\n    }\n}\nexport class EditorPointerEventFactory {\n    constructor(editorViewDomNode) {\n        this._editorViewDomNode = editorViewDomNode;\n    }\n    _create(e) {\n        return new EditorMouseEvent(e, false, this._editorViewDomNode);\n    }\n    onPointerUp(target, callback) {\n        return dom.addDisposableListener(target, 'pointerup', (e) => {\n            callback(this._create(e));\n        });\n    }\n    onPointerDown(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.POINTER_DOWN, (e) => {\n            callback(this._create(e), e.pointerId);\n        });\n    }\n    onPointerLeave(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.POINTER_LEAVE, (e) => {\n            callback(this._create(e));\n        });\n    }\n    onPointerMove(target, callback) {\n        return dom.addDisposableListener(target, 'pointermove', (e) => callback(this._create(e)));\n    }\n}\nexport class GlobalEditorPointerMoveMonitor extends Disposable {\n    constructor(editorViewDomNode) {\n        super();\n        this._editorViewDomNode = editorViewDomNode;\n        this._globalPointerMoveMonitor = this._register(new GlobalPointerMoveMonitor());\n        this._keydownListener = null;\n    }\n    startMonitoring(initialElement, pointerId, initialButtons, pointerMoveCallback, onStopCallback) {\n        // Add a <<capture>> keydown event listener that will cancel the monitoring\n        // if something other than a modifier key is pressed\n        this._keydownListener = dom.addStandardDisposableListener(initialElement.ownerDocument, 'keydown', (e) => {\n            const chord = e.toKeyCodeChord();\n            if (chord.isModifierKey()) {\n                // Allow modifier keys\n                return;\n            }\n            this._globalPointerMoveMonitor.stopMonitoring(true, e.browserEvent);\n        }, true);\n        this._globalPointerMoveMonitor.startMonitoring(initialElement, pointerId, initialButtons, (e) => {\n            pointerMoveCallback(new EditorMouseEvent(e, true, this._editorViewDomNode));\n        }, (e) => {\n            this._keydownListener.dispose();\n            onStopCallback(e);\n        });\n    }\n    stopMonitoring() {\n        this._globalPointerMoveMonitor.stopMonitoring(true);\n    }\n}\n/**\n * A helper to create dynamic css rules, bound to a class name.\n * Rules are reused.\n * Reference counting and delayed garbage collection ensure that no rules leak.\n*/\nexport class DynamicCssRules {\n    constructor(_editor) {\n        this._editor = _editor;\n        this._instanceId = ++DynamicCssRules._idPool;\n        this._counter = 0;\n        this._rules = new Map();\n        // We delay garbage collection so that hanging rules can be reused.\n        this._garbageCollectionScheduler = new RunOnceScheduler(() => this.garbageCollect(), 1000);\n    }\n    createClassNameRef(options) {\n        const rule = this.getOrCreateRule(options);\n        rule.increaseRefCount();\n        return {\n            className: rule.className,\n            dispose: () => {\n                rule.decreaseRefCount();\n                this._garbageCollectionScheduler.schedule();\n            }\n        };\n    }\n    getOrCreateRule(properties) {\n        const key = this.computeUniqueKey(properties);\n        let existingRule = this._rules.get(key);\n        if (!existingRule) {\n            const counter = this._counter++;\n            existingRule = new RefCountedCssRule(key, `dyn-rule-${this._instanceId}-${counter}`, dom.isInShadowDOM(this._editor.getContainerDomNode())\n                ? this._editor.getContainerDomNode()\n                : undefined, properties);\n            this._rules.set(key, existingRule);\n        }\n        return existingRule;\n    }\n    computeUniqueKey(properties) {\n        return JSON.stringify(properties);\n    }\n    garbageCollect() {\n        for (const rule of this._rules.values()) {\n            if (!rule.hasReferences()) {\n                this._rules.delete(rule.key);\n                rule.dispose();\n            }\n        }\n    }\n}\nDynamicCssRules._idPool = 0;\nclass RefCountedCssRule {\n    constructor(key, className, _containerElement, properties) {\n        this.key = key;\n        this.className = className;\n        this.properties = properties;\n        this._referenceCount = 0;\n        this._styleElement = dom.createStyleSheet(_containerElement);\n        this._styleElement.textContent = this.getCssText(this.className, this.properties);\n    }\n    getCssText(className, properties) {\n        let str = `.${className} {`;\n        for (const prop in properties) {\n            const value = properties[prop];\n            let cssValue;\n            if (typeof value === 'object') {\n                cssValue = asCssVariable(value.id);\n            }\n            else {\n                cssValue = value;\n            }\n            const cssPropName = camelToDashes(prop);\n            str += `\\n\\t${cssPropName}: ${cssValue};`;\n        }\n        str += `\\n}`;\n        return str;\n    }\n    dispose() {\n        this._styleElement.remove();\n    }\n    increaseRefCount() {\n        this._referenceCount++;\n    }\n    decreaseRefCount() {\n        this._referenceCount--;\n    }\n    hasReferences() {\n        return this._referenceCount > 0;\n    }\n}\nfunction camelToDashes(str) {\n    return str.replace(/(^[A-Z])/, ([first]) => first.toLowerCase())\n        .replace(/([A-Z])/g, ([letter]) => `-${letter.toLowerCase()}`);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nimport { URI } from '../../base/common/uri.js';\nimport { ICodeEditorService } from './services/codeEditorService.js';\nimport { Position } from '../common/core/position.js';\nimport { IModelService } from '../common/services/model.js';\nimport { ITextModelService } from '../common/services/resolverService.js';\nimport { MenuId, MenuRegistry, Action2 } from '../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../platform/instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../platform/keybinding/common/keybindingsRegistry.js';\nimport { Registry } from '../../platform/registry/common/platform.js';\nimport { ITelemetryService } from '../../platform/telemetry/common/telemetry.js';\nimport { assertType } from '../../base/common/types.js';\nimport { ILogService } from '../../platform/log/common/log.js';\nimport { getActiveElement } from '../../base/browser/dom.js';\nexport class Command {\n    constructor(opts) {\n        this.id = opts.id;\n        this.precondition = opts.precondition;\n        this._kbOpts = opts.kbOpts;\n        this._menuOpts = opts.menuOpts;\n        this._description = opts.description;\n    }\n    register() {\n        if (Array.isArray(this._menuOpts)) {\n            this._menuOpts.forEach(this._registerMenuItem, this);\n        }\n        else if (this._menuOpts) {\n            this._registerMenuItem(this._menuOpts);\n        }\n        if (this._kbOpts) {\n            const kbOptsArr = Array.isArray(this._kbOpts) ? this._kbOpts : [this._kbOpts];\n            for (const kbOpts of kbOptsArr) {\n                let kbWhen = kbOpts.kbExpr;\n                if (this.precondition) {\n                    if (kbWhen) {\n                        kbWhen = ContextKeyExpr.and(kbWhen, this.precondition);\n                    }\n                    else {\n                        kbWhen = this.precondition;\n                    }\n                }\n                const desc = {\n                    id: this.id,\n                    weight: kbOpts.weight,\n                    args: kbOpts.args,\n                    when: kbWhen,\n                    primary: kbOpts.primary,\n                    secondary: kbOpts.secondary,\n                    win: kbOpts.win,\n                    linux: kbOpts.linux,\n                    mac: kbOpts.mac,\n                };\n                KeybindingsRegistry.registerKeybindingRule(desc);\n            }\n        }\n        CommandsRegistry.registerCommand({\n            id: this.id,\n            handler: (accessor, args) => this.runCommand(accessor, args),\n            description: this._description\n        });\n    }\n    _registerMenuItem(item) {\n        MenuRegistry.appendMenuItem(item.menuId, {\n            group: item.group,\n            command: {\n                id: this.id,\n                title: item.title,\n                icon: item.icon,\n                precondition: this.precondition\n            },\n            when: item.when,\n            order: item.order\n        });\n    }\n}\nexport class MultiCommand extends Command {\n    constructor() {\n        super(...arguments);\n        this._implementations = [];\n    }\n    /**\n     * A higher priority gets to be looked at first\n     */\n    addImplementation(priority, name, implementation, when) {\n        this._implementations.push({ priority, name, implementation, when });\n        this._implementations.sort((a, b) => b.priority - a.priority);\n        return {\n            dispose: () => {\n                for (let i = 0; i < this._implementations.length; i++) {\n                    if (this._implementations[i].implementation === implementation) {\n                        this._implementations.splice(i, 1);\n                        return;\n                    }\n                }\n            }\n        };\n    }\n    runCommand(accessor, args) {\n        const logService = accessor.get(ILogService);\n        const contextKeyService = accessor.get(IContextKeyService);\n        logService.trace(`Executing Command '${this.id}' which has ${this._implementations.length} bound.`);\n        for (const impl of this._implementations) {\n            if (impl.when) {\n                const context = contextKeyService.getContext(getActiveElement());\n                const value = impl.when.evaluate(context);\n                if (!value) {\n                    continue;\n                }\n            }\n            const result = impl.implementation(accessor, args);\n            if (result) {\n                logService.trace(`Command '${this.id}' was handled by '${impl.name}'.`);\n                if (typeof result === 'boolean') {\n                    return;\n                }\n                return result;\n            }\n        }\n        logService.trace(`The Command '${this.id}' was not handled by any implementation.`);\n    }\n}\n//#endregion\n/**\n * A command that delegates to another command's implementation.\n *\n * This lets different commands be registered but share the same implementation\n */\nexport class ProxyCommand extends Command {\n    constructor(command, opts) {\n        super(opts);\n        this.command = command;\n    }\n    runCommand(accessor, args) {\n        return this.command.runCommand(accessor, args);\n    }\n}\nexport class EditorCommand extends Command {\n    /**\n     * Create a command class that is bound to a certain editor contribution.\n     */\n    static bindToContribution(controllerGetter) {\n        return class EditorControllerCommandImpl extends EditorCommand {\n            constructor(opts) {\n                super(opts);\n                this._callback = opts.handler;\n            }\n            runEditorCommand(accessor, editor, args) {\n                const controller = controllerGetter(editor);\n                if (controller) {\n                    this._callback(controller, args);\n                }\n            }\n        };\n    }\n    static runEditorCommand(accessor, args, precondition, runner) {\n        const codeEditorService = accessor.get(ICodeEditorService);\n        // Find the editor with text focus or active\n        const editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n        if (!editor) {\n            // well, at least we tried...\n            return;\n        }\n        return editor.invokeWithinContext((editorAccessor) => {\n            const kbService = editorAccessor.get(IContextKeyService);\n            if (!kbService.contextMatchesRules(precondition !== null && precondition !== void 0 ? precondition : undefined)) {\n                // precondition does not hold\n                return;\n            }\n            return runner(editorAccessor, editor, args);\n        });\n    }\n    runCommand(accessor, args) {\n        return EditorCommand.runEditorCommand(accessor, args, this.precondition, (accessor, editor, args) => this.runEditorCommand(accessor, editor, args));\n    }\n}\nexport class EditorAction extends EditorCommand {\n    static convertOptions(opts) {\n        let menuOpts;\n        if (Array.isArray(opts.menuOpts)) {\n            menuOpts = opts.menuOpts;\n        }\n        else if (opts.menuOpts) {\n            menuOpts = [opts.menuOpts];\n        }\n        else {\n            menuOpts = [];\n        }\n        function withDefaults(item) {\n            if (!item.menuId) {\n                item.menuId = MenuId.EditorContext;\n            }\n            if (!item.title) {\n                item.title = opts.label;\n            }\n            item.when = ContextKeyExpr.and(opts.precondition, item.when);\n            return item;\n        }\n        if (Array.isArray(opts.contextMenuOpts)) {\n            menuOpts.push(...opts.contextMenuOpts.map(withDefaults));\n        }\n        else if (opts.contextMenuOpts) {\n            menuOpts.push(withDefaults(opts.contextMenuOpts));\n        }\n        opts.menuOpts = menuOpts;\n        return opts;\n    }\n    constructor(opts) {\n        super(EditorAction.convertOptions(opts));\n        this.label = opts.label;\n        this.alias = opts.alias;\n    }\n    runEditorCommand(accessor, editor, args) {\n        this.reportTelemetry(accessor, editor);\n        return this.run(accessor, editor, args || {});\n    }\n    reportTelemetry(accessor, editor) {\n        accessor.get(ITelemetryService).publicLog2('editorActionInvoked', { name: this.label, id: this.id });\n    }\n}\nexport class MultiEditorAction extends EditorAction {\n    constructor() {\n        super(...arguments);\n        this._implementations = [];\n    }\n    /**\n     * A higher priority gets to be looked at first\n     */\n    addImplementation(priority, implementation) {\n        this._implementations.push([priority, implementation]);\n        this._implementations.sort((a, b) => b[0] - a[0]);\n        return {\n            dispose: () => {\n                for (let i = 0; i < this._implementations.length; i++) {\n                    if (this._implementations[i][1] === implementation) {\n                        this._implementations.splice(i, 1);\n                        return;\n                    }\n                }\n            }\n        };\n    }\n    run(accessor, editor, args) {\n        for (const impl of this._implementations) {\n            const result = impl[1](accessor, editor, args);\n            if (result) {\n                if (typeof result === 'boolean') {\n                    return;\n                }\n                return result;\n            }\n        }\n    }\n}\n//#endregion EditorAction\n//#region EditorAction2\nexport class EditorAction2 extends Action2 {\n    run(accessor, ...args) {\n        // Find the editor with text focus or active\n        const codeEditorService = accessor.get(ICodeEditorService);\n        const editor = codeEditorService.getFocusedCodeEditor() || codeEditorService.getActiveCodeEditor();\n        if (!editor) {\n            // well, at least we tried...\n            return;\n        }\n        // precondition does hold\n        return editor.invokeWithinContext((editorAccessor) => {\n            var _a, _b;\n            const kbService = editorAccessor.get(IContextKeyService);\n            const logService = editorAccessor.get(ILogService);\n            const enabled = kbService.contextMatchesRules((_a = this.desc.precondition) !== null && _a !== void 0 ? _a : undefined);\n            if (!enabled) {\n                logService.debug(`[EditorAction2] NOT running command because its precondition is FALSE`, this.desc.id, (_b = this.desc.precondition) === null || _b === void 0 ? void 0 : _b.serialize());\n                return;\n            }\n            return this.runEditorCommand(editorAccessor, editor, ...args);\n        });\n    }\n}\n//#endregion\n// --- Registration of commands and actions\nexport function registerModelAndPositionCommand(id, handler) {\n    CommandsRegistry.registerCommand(id, function (accessor, ...args) {\n        const instaService = accessor.get(IInstantiationService);\n        const [resource, position] = args;\n        assertType(URI.isUri(resource));\n        assertType(Position.isIPosition(position));\n        const model = accessor.get(IModelService).getModel(resource);\n        if (model) {\n            const editorPosition = Position.lift(position);\n            return instaService.invokeFunction(handler, model, editorPosition, ...args.slice(2));\n        }\n        return accessor.get(ITextModelService).createModelReference(resource).then(reference => {\n            return new Promise((resolve, reject) => {\n                try {\n                    const result = instaService.invokeFunction(handler, reference.object.textEditorModel, Position.lift(position), args.slice(2));\n                    resolve(result);\n                }\n                catch (err) {\n                    reject(err);\n                }\n            }).finally(() => {\n                reference.dispose();\n            });\n        });\n    });\n}\nexport function registerEditorCommand(editorCommand) {\n    EditorContributionRegistry.INSTANCE.registerEditorCommand(editorCommand);\n    return editorCommand;\n}\nexport function registerEditorAction(ctor) {\n    const action = new ctor();\n    EditorContributionRegistry.INSTANCE.registerEditorAction(action);\n    return action;\n}\nexport function registerMultiEditorAction(action) {\n    EditorContributionRegistry.INSTANCE.registerEditorAction(action);\n    return action;\n}\nexport function registerInstantiatedEditorAction(editorAction) {\n    EditorContributionRegistry.INSTANCE.registerEditorAction(editorAction);\n}\n/**\n * Registers an editor contribution. Editor contributions have a lifecycle which is bound\n * to a specific code editor instance.\n */\nexport function registerEditorContribution(id, ctor, instantiation) {\n    EditorContributionRegistry.INSTANCE.registerEditorContribution(id, ctor, instantiation);\n}\nexport var EditorExtensionsRegistry;\n(function (EditorExtensionsRegistry) {\n    function getEditorCommand(commandId) {\n        return EditorContributionRegistry.INSTANCE.getEditorCommand(commandId);\n    }\n    EditorExtensionsRegistry.getEditorCommand = getEditorCommand;\n    function getEditorActions() {\n        return EditorContributionRegistry.INSTANCE.getEditorActions();\n    }\n    EditorExtensionsRegistry.getEditorActions = getEditorActions;\n    function getEditorContributions() {\n        return EditorContributionRegistry.INSTANCE.getEditorContributions();\n    }\n    EditorExtensionsRegistry.getEditorContributions = getEditorContributions;\n    function getSomeEditorContributions(ids) {\n        return EditorContributionRegistry.INSTANCE.getEditorContributions().filter(c => ids.indexOf(c.id) >= 0);\n    }\n    EditorExtensionsRegistry.getSomeEditorContributions = getSomeEditorContributions;\n    function getDiffEditorContributions() {\n        return EditorContributionRegistry.INSTANCE.getDiffEditorContributions();\n    }\n    EditorExtensionsRegistry.getDiffEditorContributions = getDiffEditorContributions;\n})(EditorExtensionsRegistry || (EditorExtensionsRegistry = {}));\n// Editor extension points\nconst Extensions = {\n    EditorCommonContributions: 'editor.contributions'\n};\nclass EditorContributionRegistry {\n    constructor() {\n        this.editorContributions = [];\n        this.diffEditorContributions = [];\n        this.editorActions = [];\n        this.editorCommands = Object.create(null);\n    }\n    registerEditorContribution(id, ctor, instantiation) {\n        this.editorContributions.push({ id, ctor: ctor, instantiation });\n    }\n    getEditorContributions() {\n        return this.editorContributions.slice(0);\n    }\n    getDiffEditorContributions() {\n        return this.diffEditorContributions.slice(0);\n    }\n    registerEditorAction(action) {\n        action.register();\n        this.editorActions.push(action);\n    }\n    getEditorActions() {\n        return this.editorActions;\n    }\n    registerEditorCommand(editorCommand) {\n        editorCommand.register();\n        this.editorCommands[editorCommand.id] = editorCommand;\n    }\n    getEditorCommand(commandId) {\n        return (this.editorCommands[commandId] || null);\n    }\n}\nEditorContributionRegistry.INSTANCE = new EditorContributionRegistry();\nRegistry.add(Extensions.EditorCommonContributions, EditorContributionRegistry.INSTANCE);\nfunction registerCommand(command) {\n    command.register();\n    return command;\n}\nexport const UndoCommand = registerCommand(new MultiCommand({\n    id: 'undo',\n    precondition: undefined,\n    kbOpts: {\n        weight: 0 /* KeybindingWeight.EditorCore */,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 56 /* KeyCode.KeyZ */\n    },\n    menuOpts: [{\n            menuId: MenuId.MenubarEditMenu,\n            group: '1_do',\n            title: nls.localize({ key: 'miUndo', comment: ['&& denotes a mnemonic'] }, \"&&Undo\"),\n            order: 1\n        }, {\n            menuId: MenuId.CommandPalette,\n            group: '',\n            title: nls.localize('undo', \"Undo\"),\n            order: 1\n        }]\n}));\nregisterCommand(new ProxyCommand(UndoCommand, { id: 'default:undo', precondition: undefined }));\nexport const RedoCommand = registerCommand(new MultiCommand({\n    id: 'redo',\n    precondition: undefined,\n    kbOpts: {\n        weight: 0 /* KeybindingWeight.EditorCore */,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 55 /* KeyCode.KeyY */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 56 /* KeyCode.KeyZ */],\n        mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 56 /* KeyCode.KeyZ */ }\n    },\n    menuOpts: [{\n            menuId: MenuId.MenubarEditMenu,\n            group: '1_do',\n            title: nls.localize({ key: 'miRedo', comment: ['&& denotes a mnemonic'] }, \"&&Redo\"),\n            order: 2\n        }, {\n            menuId: MenuId.CommandPalette,\n            group: '',\n            title: nls.localize('redo', \"Redo\"),\n            order: 1\n        }]\n}));\nregisterCommand(new ProxyCommand(RedoCommand, { id: 'default:redo', precondition: undefined }));\nexport const SelectAllCommand = registerCommand(new MultiCommand({\n    id: 'editor.action.selectAll',\n    precondition: undefined,\n    kbOpts: {\n        weight: 0 /* KeybindingWeight.EditorCore */,\n        kbExpr: null,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 31 /* KeyCode.KeyA */\n    },\n    menuOpts: [{\n            menuId: MenuId.MenubarSelectionMenu,\n            group: '1_basic',\n            title: nls.localize({ key: 'miSelectAll', comment: ['&& denotes a mnemonic'] }, \"&&Select All\"),\n            order: 1\n        }, {\n            menuId: MenuId.CommandPalette,\n            group: '',\n            title: nls.localize('selectAll', \"Select All\"),\n            order: 1\n        }]\n}));\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nlet AbstractCodeEditorService = class AbstractCodeEditorService extends Disposable {\n    constructor(_themeService) {\n        super();\n        this._themeService = _themeService;\n        this._onWillCreateCodeEditor = this._register(new Emitter());\n        this._onCodeEditorAdd = this._register(new Emitter());\n        this.onCodeEditorAdd = this._onCodeEditorAdd.event;\n        this._onCodeEditorRemove = this._register(new Emitter());\n        this.onCodeEditorRemove = this._onCodeEditorRemove.event;\n        this._onWillCreateDiffEditor = this._register(new Emitter());\n        this._onDiffEditorAdd = this._register(new Emitter());\n        this.onDiffEditorAdd = this._onDiffEditorAdd.event;\n        this._onDiffEditorRemove = this._register(new Emitter());\n        this.onDiffEditorRemove = this._onDiffEditorRemove.event;\n        this._decorationOptionProviders = new Map();\n        this._codeEditorOpenHandlers = new LinkedList();\n        this._modelProperties = new Map();\n        this._codeEditors = Object.create(null);\n        this._diffEditors = Object.create(null);\n        this._globalStyleSheet = null;\n    }\n    willCreateCodeEditor() {\n        this._onWillCreateCodeEditor.fire();\n    }\n    addCodeEditor(editor) {\n        this._codeEditors[editor.getId()] = editor;\n        this._onCodeEditorAdd.fire(editor);\n    }\n    removeCodeEditor(editor) {\n        if (delete this._codeEditors[editor.getId()]) {\n            this._onCodeEditorRemove.fire(editor);\n        }\n    }\n    listCodeEditors() {\n        return Object.keys(this._codeEditors).map(id => this._codeEditors[id]);\n    }\n    willCreateDiffEditor() {\n        this._onWillCreateDiffEditor.fire();\n    }\n    addDiffEditor(editor) {\n        this._diffEditors[editor.getId()] = editor;\n        this._onDiffEditorAdd.fire(editor);\n    }\n    listDiffEditors() {\n        return Object.keys(this._diffEditors).map(id => this._diffEditors[id]);\n    }\n    getFocusedCodeEditor() {\n        let editorWithWidgetFocus = null;\n        const editors = this.listCodeEditors();\n        for (const editor of editors) {\n            if (editor.hasTextFocus()) {\n                // bingo!\n                return editor;\n            }\n            if (editor.hasWidgetFocus()) {\n                editorWithWidgetFocus = editor;\n            }\n        }\n        return editorWithWidgetFocus;\n    }\n    removeDecorationType(key) {\n        const provider = this._decorationOptionProviders.get(key);\n        if (provider) {\n            provider.refCount--;\n            if (provider.refCount <= 0) {\n                this._decorationOptionProviders.delete(key);\n                provider.dispose();\n                this.listCodeEditors().forEach((ed) => ed.removeDecorationsByType(key));\n            }\n        }\n    }\n    setModelProperty(resource, key, value) {\n        const key1 = resource.toString();\n        let dest;\n        if (this._modelProperties.has(key1)) {\n            dest = this._modelProperties.get(key1);\n        }\n        else {\n            dest = new Map();\n            this._modelProperties.set(key1, dest);\n        }\n        dest.set(key, value);\n    }\n    getModelProperty(resource, key) {\n        const key1 = resource.toString();\n        if (this._modelProperties.has(key1)) {\n            const innerMap = this._modelProperties.get(key1);\n            return innerMap.get(key);\n        }\n        return undefined;\n    }\n    openCodeEditor(input, source, sideBySide) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const handler of this._codeEditorOpenHandlers) {\n                const candidate = yield handler(input, source, sideBySide);\n                if (candidate !== null) {\n                    return candidate;\n                }\n            }\n            return null;\n        });\n    }\n    registerCodeEditorOpenHandler(handler) {\n        const rm = this._codeEditorOpenHandlers.unshift(handler);\n        return toDisposable(rm);\n    }\n};\nAbstractCodeEditorService = __decorate([\n    __param(0, IThemeService)\n], AbstractCodeEditorService);\nexport { AbstractCodeEditorService };\nexport class GlobalStyleSheet {\n    constructor(styleSheet) {\n        this._styleSheet = styleSheet;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { isObject } from '../../../base/common/types.js';\nexport const IBulkEditService = createDecorator('IWorkspaceEditService');\nexport class ResourceEdit {\n    constructor(metadata) {\n        this.metadata = metadata;\n    }\n    static convert(edit) {\n        return edit.edits.map(edit => {\n            if (ResourceTextEdit.is(edit)) {\n                return ResourceTextEdit.lift(edit);\n            }\n            if (ResourceFileEdit.is(edit)) {\n                return ResourceFileEdit.lift(edit);\n            }\n            throw new Error('Unsupported edit');\n        });\n    }\n}\nexport class ResourceTextEdit extends ResourceEdit {\n    static is(candidate) {\n        if (candidate instanceof ResourceTextEdit) {\n            return true;\n        }\n        return isObject(candidate)\n            && URI.isUri(candidate.resource)\n            && isObject(candidate.textEdit);\n    }\n    static lift(edit) {\n        if (edit instanceof ResourceTextEdit) {\n            return edit;\n        }\n        else {\n            return new ResourceTextEdit(edit.resource, edit.textEdit, edit.versionId, edit.metadata);\n        }\n    }\n    constructor(resource, textEdit, versionId = undefined, metadata) {\n        super(metadata);\n        this.resource = resource;\n        this.textEdit = textEdit;\n        this.versionId = versionId;\n    }\n}\nexport class ResourceFileEdit extends ResourceEdit {\n    static is(candidate) {\n        if (candidate instanceof ResourceFileEdit) {\n            return true;\n        }\n        else {\n            return isObject(candidate)\n                && (Boolean(candidate.newResource) || Boolean(candidate.oldResource));\n        }\n    }\n    static lift(edit) {\n        if (edit instanceof ResourceFileEdit) {\n            return edit;\n        }\n        else {\n            return new ResourceFileEdit(edit.oldResource, edit.newResource, edit.options, edit.metadata);\n        }\n    }\n    constructor(oldResource, newResource, options = {}, metadata) {\n        super(metadata);\n        this.oldResource = oldResource;\n        this.newResource = newResource;\n        this.options = options;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const ICodeEditorService = createDecorator('codeEditorService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { IntervalTimer, timeout } from '../../../base/common/async.js';\nimport { Disposable, dispose, toDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { SimpleWorkerClient, logOnceWebWorkerWarning } from '../../../base/common/worker/simpleWorker.js';\nimport { DefaultWorkerFactory } from '../../../base/browser/defaultWorkerFactory.js';\nimport { Range } from '../../common/core/range.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { EditorSimpleWorker } from '../../common/services/editorSimpleWorker.js';\nimport { IModelService } from '../../common/services/model.js';\nimport { ITextResourceConfigurationService } from '../../common/services/textResourceConfiguration.js';\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { canceled } from '../../../base/common/errors.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\nimport { MovedText } from '../../common/diff/linesDiffComputer.js';\nimport { DetailedLineRangeMapping, RangeMapping, LineRangeMapping } from '../../common/diff/rangeMapping.js';\nimport { LineRange } from '../../common/core/lineRange.js';\n/**\n * Stop syncing a model to the worker if it was not needed for 1 min.\n */\nconst STOP_SYNC_MODEL_DELTA_TIME_MS = 60 * 1000;\n/**\n * Stop the worker if it was not needed for 5 min.\n */\nconst STOP_WORKER_DELTA_TIME_MS = 5 * 60 * 1000;\nfunction canSyncModel(modelService, resource) {\n    const model = modelService.getModel(resource);\n    if (!model) {\n        return false;\n    }\n    if (model.isTooLargeForSyncing()) {\n        return false;\n    }\n    return true;\n}\nlet EditorWorkerService = class EditorWorkerService extends Disposable {\n    constructor(modelService, configurationService, logService, languageConfigurationService, languageFeaturesService) {\n        super();\n        this._modelService = modelService;\n        this._workerManager = this._register(new WorkerManager(this._modelService, languageConfigurationService));\n        this._logService = logService;\n        // register default link-provider and default completions-provider\n        this._register(languageFeaturesService.linkProvider.register({ language: '*', hasAccessToAllModels: true }, {\n            provideLinks: (model, token) => {\n                if (!canSyncModel(this._modelService, model.uri)) {\n                    return Promise.resolve({ links: [] }); // File too large\n                }\n                return this._workerManager.withWorker().then(client => client.computeLinks(model.uri)).then(links => {\n                    return links && { links };\n                });\n            }\n        }));\n        this._register(languageFeaturesService.completionProvider.register('*', new WordBasedCompletionItemProvider(this._workerManager, configurationService, this._modelService, languageConfigurationService)));\n    }\n    dispose() {\n        super.dispose();\n    }\n    canComputeUnicodeHighlights(uri) {\n        return canSyncModel(this._modelService, uri);\n    }\n    computedUnicodeHighlights(uri, options, range) {\n        return this._workerManager.withWorker().then(client => client.computedUnicodeHighlights(uri, options, range));\n    }\n    computeDiff(original, modified, options, algorithm) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this._workerManager.withWorker().then(client => client.computeDiff(original, modified, options, algorithm));\n            if (!result) {\n                return null;\n            }\n            // Convert from space efficient JSON data to rich objects.\n            const diff = {\n                identical: result.identical,\n                quitEarly: result.quitEarly,\n                changes: toLineRangeMappings(result.changes),\n                moves: result.moves.map(m => new MovedText(new LineRangeMapping(new LineRange(m[0], m[1]), new LineRange(m[2], m[3])), toLineRangeMappings(m[4])))\n            };\n            return diff;\n            function toLineRangeMappings(changes) {\n                return changes.map((c) => {\n                    var _a;\n                    return new DetailedLineRangeMapping(new LineRange(c[0], c[1]), new LineRange(c[2], c[3]), (_a = c[4]) === null || _a === void 0 ? void 0 : _a.map((c) => new RangeMapping(new Range(c[0], c[1], c[2], c[3]), new Range(c[4], c[5], c[6], c[7]))));\n                });\n            }\n        });\n    }\n    computeMoreMinimalEdits(resource, edits, pretty = false) {\n        if (isNonEmptyArray(edits)) {\n            if (!canSyncModel(this._modelService, resource)) {\n                return Promise.resolve(edits); // File too large\n            }\n            const sw = StopWatch.create();\n            const result = this._workerManager.withWorker().then(client => client.computeMoreMinimalEdits(resource, edits, pretty));\n            result.finally(() => this._logService.trace('FORMAT#computeMoreMinimalEdits', resource.toString(true), sw.elapsed()));\n            return Promise.race([result, timeout(1000).then(() => edits)]);\n        }\n        else {\n            return Promise.resolve(undefined);\n        }\n    }\n    canNavigateValueSet(resource) {\n        return (canSyncModel(this._modelService, resource));\n    }\n    navigateValueSet(resource, range, up) {\n        return this._workerManager.withWorker().then(client => client.navigateValueSet(resource, range, up));\n    }\n    canComputeWordRanges(resource) {\n        return canSyncModel(this._modelService, resource);\n    }\n    computeWordRanges(resource, range) {\n        return this._workerManager.withWorker().then(client => client.computeWordRanges(resource, range));\n    }\n};\nEditorWorkerService = __decorate([\n    __param(0, IModelService),\n    __param(1, ITextResourceConfigurationService),\n    __param(2, ILogService),\n    __param(3, ILanguageConfigurationService),\n    __param(4, ILanguageFeaturesService)\n], EditorWorkerService);\nexport { EditorWorkerService };\nclass WordBasedCompletionItemProvider {\n    constructor(workerManager, configurationService, modelService, languageConfigurationService) {\n        this.languageConfigurationService = languageConfigurationService;\n        this._debugDisplayName = 'wordbasedCompletions';\n        this._workerManager = workerManager;\n        this._configurationService = configurationService;\n        this._modelService = modelService;\n    }\n    provideCompletionItems(model, position) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const config = this._configurationService.getValue(model.uri, position, 'editor');\n            if (!config.wordBasedSuggestions) {\n                return undefined;\n            }\n            const models = [];\n            if (config.wordBasedSuggestionsMode === 'currentDocument') {\n                // only current file and only if not too large\n                if (canSyncModel(this._modelService, model.uri)) {\n                    models.push(model.uri);\n                }\n            }\n            else {\n                // either all files or files of same language\n                for (const candidate of this._modelService.getModels()) {\n                    if (!canSyncModel(this._modelService, candidate.uri)) {\n                        continue;\n                    }\n                    if (candidate === model) {\n                        models.unshift(candidate.uri);\n                    }\n                    else if (config.wordBasedSuggestionsMode === 'allDocuments' || candidate.getLanguageId() === model.getLanguageId()) {\n                        models.push(candidate.uri);\n                    }\n                }\n            }\n            if (models.length === 0) {\n                return undefined; // File too large, no other files\n            }\n            const wordDefRegExp = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n            const word = model.getWordAtPosition(position);\n            const replace = !word ? Range.fromPositions(position) : new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\n            const insert = replace.setEndPosition(position.lineNumber, position.column);\n            const client = yield this._workerManager.withWorker();\n            const data = yield client.textualSuggest(models, word === null || word === void 0 ? void 0 : word.word, wordDefRegExp);\n            if (!data) {\n                return undefined;\n            }\n            return {\n                duration: data.duration,\n                suggestions: data.words.map((word) => {\n                    return {\n                        kind: 18 /* languages.CompletionItemKind.Text */,\n                        label: word,\n                        insertText: word,\n                        range: { insert, replace }\n                    };\n                }),\n            };\n        });\n    }\n}\nclass WorkerManager extends Disposable {\n    constructor(modelService, languageConfigurationService) {\n        super();\n        this.languageConfigurationService = languageConfigurationService;\n        this._modelService = modelService;\n        this._editorWorkerClient = null;\n        this._lastWorkerUsedTime = (new Date()).getTime();\n        const stopWorkerInterval = this._register(new IntervalTimer());\n        stopWorkerInterval.cancelAndSet(() => this._checkStopIdleWorker(), Math.round(STOP_WORKER_DELTA_TIME_MS / 2));\n        this._register(this._modelService.onModelRemoved(_ => this._checkStopEmptyWorker()));\n    }\n    dispose() {\n        if (this._editorWorkerClient) {\n            this._editorWorkerClient.dispose();\n            this._editorWorkerClient = null;\n        }\n        super.dispose();\n    }\n    /**\n     * Check if the model service has no more models and stop the worker if that is the case.\n     */\n    _checkStopEmptyWorker() {\n        if (!this._editorWorkerClient) {\n            return;\n        }\n        const models = this._modelService.getModels();\n        if (models.length === 0) {\n            // There are no more models => nothing possible for me to do\n            this._editorWorkerClient.dispose();\n            this._editorWorkerClient = null;\n        }\n    }\n    /**\n     * Check if the worker has been idle for a while and then stop it.\n     */\n    _checkStopIdleWorker() {\n        if (!this._editorWorkerClient) {\n            return;\n        }\n        const timeSinceLastWorkerUsedTime = (new Date()).getTime() - this._lastWorkerUsedTime;\n        if (timeSinceLastWorkerUsedTime > STOP_WORKER_DELTA_TIME_MS) {\n            this._editorWorkerClient.dispose();\n            this._editorWorkerClient = null;\n        }\n    }\n    withWorker() {\n        this._lastWorkerUsedTime = (new Date()).getTime();\n        if (!this._editorWorkerClient) {\n            this._editorWorkerClient = new EditorWorkerClient(this._modelService, false, 'editorWorkerService', this.languageConfigurationService);\n        }\n        return Promise.resolve(this._editorWorkerClient);\n    }\n}\nclass EditorModelManager extends Disposable {\n    constructor(proxy, modelService, keepIdleModels) {\n        super();\n        this._syncedModels = Object.create(null);\n        this._syncedModelsLastUsedTime = Object.create(null);\n        this._proxy = proxy;\n        this._modelService = modelService;\n        if (!keepIdleModels) {\n            const timer = new IntervalTimer();\n            timer.cancelAndSet(() => this._checkStopModelSync(), Math.round(STOP_SYNC_MODEL_DELTA_TIME_MS / 2));\n            this._register(timer);\n        }\n    }\n    dispose() {\n        for (const modelUrl in this._syncedModels) {\n            dispose(this._syncedModels[modelUrl]);\n        }\n        this._syncedModels = Object.create(null);\n        this._syncedModelsLastUsedTime = Object.create(null);\n        super.dispose();\n    }\n    ensureSyncedResources(resources, forceLargeModels) {\n        for (const resource of resources) {\n            const resourceStr = resource.toString();\n            if (!this._syncedModels[resourceStr]) {\n                this._beginModelSync(resource, forceLargeModels);\n            }\n            if (this._syncedModels[resourceStr]) {\n                this._syncedModelsLastUsedTime[resourceStr] = (new Date()).getTime();\n            }\n        }\n    }\n    _checkStopModelSync() {\n        const currentTime = (new Date()).getTime();\n        const toRemove = [];\n        for (const modelUrl in this._syncedModelsLastUsedTime) {\n            const elapsedTime = currentTime - this._syncedModelsLastUsedTime[modelUrl];\n            if (elapsedTime > STOP_SYNC_MODEL_DELTA_TIME_MS) {\n                toRemove.push(modelUrl);\n            }\n        }\n        for (const e of toRemove) {\n            this._stopModelSync(e);\n        }\n    }\n    _beginModelSync(resource, forceLargeModels) {\n        const model = this._modelService.getModel(resource);\n        if (!model) {\n            return;\n        }\n        if (!forceLargeModels && model.isTooLargeForSyncing()) {\n            return;\n        }\n        const modelUrl = resource.toString();\n        this._proxy.acceptNewModel({\n            url: model.uri.toString(),\n            lines: model.getLinesContent(),\n            EOL: model.getEOL(),\n            versionId: model.getVersionId()\n        });\n        const toDispose = new DisposableStore();\n        toDispose.add(model.onDidChangeContent((e) => {\n            this._proxy.acceptModelChanged(modelUrl.toString(), e);\n        }));\n        toDispose.add(model.onWillDispose(() => {\n            this._stopModelSync(modelUrl);\n        }));\n        toDispose.add(toDisposable(() => {\n            this._proxy.acceptRemovedModel(modelUrl);\n        }));\n        this._syncedModels[modelUrl] = toDispose;\n    }\n    _stopModelSync(modelUrl) {\n        const toDispose = this._syncedModels[modelUrl];\n        delete this._syncedModels[modelUrl];\n        delete this._syncedModelsLastUsedTime[modelUrl];\n        dispose(toDispose);\n    }\n}\nclass SynchronousWorkerClient {\n    constructor(instance) {\n        this._instance = instance;\n        this._proxyObj = Promise.resolve(this._instance);\n    }\n    dispose() {\n        this._instance.dispose();\n    }\n    getProxyObject() {\n        return this._proxyObj;\n    }\n}\nexport class EditorWorkerHost {\n    constructor(workerClient) {\n        this._workerClient = workerClient;\n    }\n    // foreign host request\n    fhr(method, args) {\n        return this._workerClient.fhr(method, args);\n    }\n}\nexport class EditorWorkerClient extends Disposable {\n    constructor(modelService, keepIdleModels, label, languageConfigurationService) {\n        super();\n        this.languageConfigurationService = languageConfigurationService;\n        this._disposed = false;\n        this._modelService = modelService;\n        this._keepIdleModels = keepIdleModels;\n        this._workerFactory = new DefaultWorkerFactory(label);\n        this._worker = null;\n        this._modelManager = null;\n    }\n    // foreign host request\n    fhr(method, args) {\n        throw new Error(`Not implemented!`);\n    }\n    _getOrCreateWorker() {\n        if (!this._worker) {\n            try {\n                this._worker = this._register(new SimpleWorkerClient(this._workerFactory, 'vs/editor/common/services/editorSimpleWorker', new EditorWorkerHost(this)));\n            }\n            catch (err) {\n                logOnceWebWorkerWarning(err);\n                this._worker = new SynchronousWorkerClient(new EditorSimpleWorker(new EditorWorkerHost(this), null));\n            }\n        }\n        return this._worker;\n    }\n    _getProxy() {\n        return this._getOrCreateWorker().getProxyObject().then(undefined, (err) => {\n            logOnceWebWorkerWarning(err);\n            this._worker = new SynchronousWorkerClient(new EditorSimpleWorker(new EditorWorkerHost(this), null));\n            return this._getOrCreateWorker().getProxyObject();\n        });\n    }\n    _getOrCreateModelManager(proxy) {\n        if (!this._modelManager) {\n            this._modelManager = this._register(new EditorModelManager(proxy, this._modelService, this._keepIdleModels));\n        }\n        return this._modelManager;\n    }\n    _withSyncedResources(resources, forceLargeModels = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._disposed) {\n                return Promise.reject(canceled());\n            }\n            return this._getProxy().then((proxy) => {\n                this._getOrCreateModelManager(proxy).ensureSyncedResources(resources, forceLargeModels);\n                return proxy;\n            });\n        });\n    }\n    computedUnicodeHighlights(uri, options, range) {\n        return this._withSyncedResources([uri]).then(proxy => {\n            return proxy.computeUnicodeHighlights(uri.toString(), options, range);\n        });\n    }\n    computeDiff(original, modified, options, algorithm) {\n        return this._withSyncedResources([original, modified], /* forceLargeModels */ true).then(proxy => {\n            return proxy.computeDiff(original.toString(), modified.toString(), options, algorithm);\n        });\n    }\n    computeMoreMinimalEdits(resource, edits, pretty) {\n        return this._withSyncedResources([resource]).then(proxy => {\n            return proxy.computeMoreMinimalEdits(resource.toString(), edits, pretty);\n        });\n    }\n    computeLinks(resource) {\n        return this._withSyncedResources([resource]).then(proxy => {\n            return proxy.computeLinks(resource.toString());\n        });\n    }\n    computeDefaultDocumentColors(resource) {\n        return this._withSyncedResources([resource]).then(proxy => {\n            return proxy.computeDefaultDocumentColors(resource.toString());\n        });\n    }\n    textualSuggest(resources, leadingWord, wordDefRegExp) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const proxy = yield this._withSyncedResources(resources);\n            const wordDef = wordDefRegExp.source;\n            const wordDefFlags = wordDefRegExp.flags;\n            return proxy.textualSuggest(resources.map(r => r.toString()), leadingWord, wordDef, wordDefFlags);\n        });\n    }\n    computeWordRanges(resource, range) {\n        return this._withSyncedResources([resource]).then(proxy => {\n            const model = this._modelService.getModel(resource);\n            if (!model) {\n                return Promise.resolve(null);\n            }\n            const wordDefRegExp = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n            const wordDef = wordDefRegExp.source;\n            const wordDefFlags = wordDefRegExp.flags;\n            return proxy.computeWordRanges(resource.toString(), range, wordDef, wordDefFlags);\n        });\n    }\n    navigateValueSet(resource, range, up) {\n        return this._withSyncedResources([resource]).then(proxy => {\n            const model = this._modelService.getModel(resource);\n            if (!model) {\n                return null;\n            }\n            const wordDefRegExp = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n            const wordDef = wordDefRegExp.source;\n            const wordDefFlags = wordDefRegExp.flags;\n            return proxy.navigateValueSet(resource.toString(), range, up, wordDef, wordDefFlags);\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._disposed = true;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { IMarkerDecorationsService } from '../../common/services/markerDecorations.js';\nimport { registerEditorContribution } from '../editorExtensions.js';\nlet MarkerDecorationsContribution = class MarkerDecorationsContribution {\n    constructor(_editor, _markerDecorationsService) {\n        // Doesn't do anything, just requires `IMarkerDecorationsService` to make sure it gets instantiated\n    }\n    dispose() {\n    }\n};\nMarkerDecorationsContribution.ID = 'editor.contrib.markerDecorations';\nMarkerDecorationsContribution = __decorate([\n    __param(1, IMarkerDecorationsService)\n], MarkerDecorationsContribution);\nexport { MarkerDecorationsContribution };\nregisterEditorContribution(MarkerDecorationsContribution.ID, MarkerDecorationsContribution, 0 /* EditorContributionInstantiation.Eager */); // eager because it instantiates IMarkerDecorationsService which is responsible for rendering squiggles\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../base/browser/dom.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport { parse } from '../../../base/common/marshalling.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { normalizePath } from '../../../base/common/resources.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { ICodeEditorService } from './codeEditorService.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { EditorOpenSource } from '../../../platform/editor/common/editor.js';\nimport { extractSelection, matchesScheme, matchesSomeScheme } from '../../../platform/opener/common/opener.js';\nlet CommandOpener = class CommandOpener {\n    constructor(_commandService) {\n        this._commandService = _commandService;\n    }\n    open(target, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!matchesScheme(target, Schemas.command)) {\n                return false;\n            }\n            if (!(options === null || options === void 0 ? void 0 : options.allowCommands)) {\n                // silently ignore commands when command-links are disabled, also\n                // suppress other openers by returning TRUE\n                return true;\n            }\n            if (typeof target === 'string') {\n                target = URI.parse(target);\n            }\n            if (Array.isArray(options.allowCommands)) {\n                // Only allow specific commands\n                if (!options.allowCommands.includes(target.path)) {\n                    // Suppress other openers by returning TRUE\n                    return true;\n                }\n            }\n            // execute as command\n            let args = [];\n            try {\n                args = parse(decodeURIComponent(target.query));\n            }\n            catch (_a) {\n                // ignore and retry\n                try {\n                    args = parse(target.query);\n                }\n                catch (_b) {\n                    // ignore error\n                }\n            }\n            if (!Array.isArray(args)) {\n                args = [args];\n            }\n            yield this._commandService.executeCommand(target.path, ...args);\n            return true;\n        });\n    }\n};\nCommandOpener = __decorate([\n    __param(0, ICommandService)\n], CommandOpener);\nlet EditorOpener = class EditorOpener {\n    constructor(_editorService) {\n        this._editorService = _editorService;\n    }\n    open(target, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof target === 'string') {\n                target = URI.parse(target);\n            }\n            const { selection, uri } = extractSelection(target);\n            target = uri;\n            if (target.scheme === Schemas.file) {\n                target = normalizePath(target); // workaround for non-normalized paths (https://github.com/microsoft/vscode/issues/12954)\n            }\n            yield this._editorService.openCodeEditor({\n                resource: target,\n                options: Object.assign({ selection, source: (options === null || options === void 0 ? void 0 : options.fromUserGesture) ? EditorOpenSource.USER : EditorOpenSource.API }, options === null || options === void 0 ? void 0 : options.editorOptions)\n            }, this._editorService.getFocusedCodeEditor(), options === null || options === void 0 ? void 0 : options.openToSide);\n            return true;\n        });\n    }\n};\nEditorOpener = __decorate([\n    __param(0, ICodeEditorService)\n], EditorOpener);\nlet OpenerService = class OpenerService {\n    constructor(editorService, commandService) {\n        this._openers = new LinkedList();\n        this._validators = new LinkedList();\n        this._resolvers = new LinkedList();\n        this._resolvedUriTargets = new ResourceMap(uri => uri.with({ path: null, fragment: null, query: null }).toString());\n        this._externalOpeners = new LinkedList();\n        // Default external opener is going through window.open()\n        this._defaultExternalOpener = {\n            openExternal: (href) => __awaiter(this, void 0, void 0, function* () {\n                // ensure to open HTTP/HTTPS links into new windows\n                // to not trigger a navigation. Any other link is\n                // safe to be set as HREF to prevent a blank window\n                // from opening.\n                if (matchesSomeScheme(href, Schemas.http, Schemas.https)) {\n                    dom.windowOpenNoOpener(href);\n                }\n                else {\n                    window.location.href = href;\n                }\n                return true;\n            })\n        };\n        // Default opener: any external, maito, http(s), command, and catch-all-editors\n        this._openers.push({\n            open: (target, options) => __awaiter(this, void 0, void 0, function* () {\n                if ((options === null || options === void 0 ? void 0 : options.openExternal) || matchesSomeScheme(target, Schemas.mailto, Schemas.http, Schemas.https, Schemas.vsls)) {\n                    // open externally\n                    yield this._doOpenExternal(target, options);\n                    return true;\n                }\n                return false;\n            })\n        });\n        this._openers.push(new CommandOpener(commandService));\n        this._openers.push(new EditorOpener(editorService));\n    }\n    registerOpener(opener) {\n        const remove = this._openers.unshift(opener);\n        return { dispose: remove };\n    }\n    open(target, options) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            // check with contributed validators\n            const targetURI = typeof target === 'string' ? URI.parse(target) : target;\n            // validate against the original URI that this URI resolves to, if one exists\n            const validationTarget = (_a = this._resolvedUriTargets.get(targetURI)) !== null && _a !== void 0 ? _a : target;\n            for (const validator of this._validators) {\n                if (!(yield validator.shouldOpen(validationTarget, options))) {\n                    return false;\n                }\n            }\n            // check with contributed openers\n            for (const opener of this._openers) {\n                const handled = yield opener.open(target, options);\n                if (handled) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    }\n    resolveExternalUri(resource, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const resolver of this._resolvers) {\n                try {\n                    const result = yield resolver.resolveExternalUri(resource, options);\n                    if (result) {\n                        if (!this._resolvedUriTargets.has(result.resolved)) {\n                            this._resolvedUriTargets.set(result.resolved, resource);\n                        }\n                        return result;\n                    }\n                }\n                catch (_a) {\n                    // noop\n                }\n            }\n            throw new Error('Could not resolve external URI: ' + resource.toString());\n        });\n    }\n    _doOpenExternal(resource, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //todo@jrieken IExternalUriResolver should support `uri: URI | string`\n            const uri = typeof resource === 'string' ? URI.parse(resource) : resource;\n            let externalUri;\n            try {\n                externalUri = (yield this.resolveExternalUri(uri, options)).resolved;\n            }\n            catch (_a) {\n                externalUri = uri;\n            }\n            let href;\n            if (typeof resource === 'string' && uri.toString() === externalUri.toString()) {\n                // open the url-string AS IS\n                href = resource;\n            }\n            else {\n                // open URI using the toString(noEncode)+encodeURI-trick\n                href = encodeURI(externalUri.toString(true));\n            }\n            if (options === null || options === void 0 ? void 0 : options.allowContributedOpeners) {\n                const preferredOpenerId = typeof (options === null || options === void 0 ? void 0 : options.allowContributedOpeners) === 'string' ? options === null || options === void 0 ? void 0 : options.allowContributedOpeners : undefined;\n                for (const opener of this._externalOpeners) {\n                    const didOpen = yield opener.openExternal(href, {\n                        sourceUri: uri,\n                        preferredOpenerId,\n                    }, CancellationToken.None);\n                    if (didOpen) {\n                        return true;\n                    }\n                }\n            }\n            return this._defaultExternalOpener.openExternal(href, { sourceUri: uri }, CancellationToken.None);\n        });\n    }\n    dispose() {\n        this._validators.clear();\n    }\n};\nOpenerService = __decorate([\n    __param(0, ICodeEditorService),\n    __param(1, ICommandService)\n], OpenerService);\nexport { OpenerService };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getAllMethodNames } from '../../../base/common/objects.js';\nimport { EditorWorkerClient } from './editorWorkerService.js';\n/**\n * Create a new web worker that has model syncing capabilities built in.\n * Specify an AMD module to load that will `create` an object that will be proxied.\n */\nexport function createWebWorker(modelService, languageConfigurationService, opts) {\n    return new MonacoWebWorkerImpl(modelService, languageConfigurationService, opts);\n}\nclass MonacoWebWorkerImpl extends EditorWorkerClient {\n    constructor(modelService, languageConfigurationService, opts) {\n        super(modelService, opts.keepIdleModels || false, opts.label, languageConfigurationService);\n        this._foreignModuleId = opts.moduleId;\n        this._foreignModuleCreateData = opts.createData || null;\n        this._foreignModuleHost = opts.host || null;\n        this._foreignProxy = null;\n    }\n    // foreign host request\n    fhr(method, args) {\n        if (!this._foreignModuleHost || typeof this._foreignModuleHost[method] !== 'function') {\n            return Promise.reject(new Error('Missing method ' + method + ' or missing main thread foreign host.'));\n        }\n        try {\n            return Promise.resolve(this._foreignModuleHost[method].apply(this._foreignModuleHost, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    _getForeignProxy() {\n        if (!this._foreignProxy) {\n            this._foreignProxy = this._getProxy().then((proxy) => {\n                const foreignHostMethods = this._foreignModuleHost ? getAllMethodNames(this._foreignModuleHost) : [];\n                return proxy.loadForeignModule(this._foreignModuleId, this._foreignModuleCreateData, foreignHostMethods).then((foreignMethods) => {\n                    this._foreignModuleCreateData = null;\n                    const proxyMethodRequest = (method, args) => {\n                        return proxy.fmr(method, args);\n                    };\n                    const createProxyMethod = (method, proxyMethodRequest) => {\n                        return function () {\n                            const args = Array.prototype.slice.call(arguments, 0);\n                            return proxyMethodRequest(method, args);\n                        };\n                    };\n                    const foreignProxy = {};\n                    for (const foreignMethod of foreignMethods) {\n                        foreignProxy[foreignMethod] = createProxyMethod(foreignMethod, proxyMethodRequest);\n                    }\n                    return foreignProxy;\n                });\n            });\n        }\n        return this._foreignProxy;\n    }\n    getProxy() {\n        return this._getForeignProxy();\n    }\n    withSyncedResources(resources) {\n        return this._withSyncedResources(resources).then(_ => this.getProxy());\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class StableEditorScrollState {\n    static capture(editor) {\n        if (editor.getScrollTop() === 0 || editor.hasPendingScrollAnimation()) {\n            // Never mess with the scroll top if the editor is at the top of the file or if there is a pending scroll animation\n            return new StableEditorScrollState(editor.getScrollTop(), editor.getContentHeight(), null, 0, null);\n        }\n        let visiblePosition = null;\n        let visiblePositionScrollDelta = 0;\n        const visibleRanges = editor.getVisibleRanges();\n        if (visibleRanges.length > 0) {\n            visiblePosition = visibleRanges[0].getStartPosition();\n            const visiblePositionScrollTop = editor.getTopForPosition(visiblePosition.lineNumber, visiblePosition.column);\n            visiblePositionScrollDelta = editor.getScrollTop() - visiblePositionScrollTop;\n        }\n        return new StableEditorScrollState(editor.getScrollTop(), editor.getContentHeight(), visiblePosition, visiblePositionScrollDelta, editor.getPosition());\n    }\n    constructor(_initialScrollTop, _initialContentHeight, _visiblePosition, _visiblePositionScrollDelta, _cursorPosition) {\n        this._initialScrollTop = _initialScrollTop;\n        this._initialContentHeight = _initialContentHeight;\n        this._visiblePosition = _visiblePosition;\n        this._visiblePositionScrollDelta = _visiblePositionScrollDelta;\n        this._cursorPosition = _cursorPosition;\n    }\n    restore(editor) {\n        if (this._initialContentHeight === editor.getContentHeight() && this._initialScrollTop === editor.getScrollTop()) {\n            // The editor's content height and scroll top haven't changed, so we don't need to do anything\n            return;\n        }\n        if (this._visiblePosition) {\n            const visiblePositionScrollTop = editor.getTopForPosition(this._visiblePosition.lineNumber, this._visiblePosition.column);\n            editor.setScrollTop(visiblePositionScrollTop + this._visiblePositionScrollDelta);\n        }\n    }\n    restoreRelativeVerticalPositionOfCursor(editor) {\n        if (this._initialContentHeight === editor.getContentHeight() && this._initialScrollTop === editor.getScrollTop()) {\n            // The editor's content height and scroll top haven't changed, so we don't need to do anything\n            return;\n        }\n        const currentCursorPosition = editor.getPosition();\n        if (!this._cursorPosition || !currentCursorPosition) {\n            return;\n        }\n        const offset = editor.getTopForLineNumber(currentCursorPosition.lineNumber) - editor.getTopForLineNumber(this._cursorPosition.lineNumber);\n        editor.setScrollTop(editor.getScrollTop() + offset);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nexport class ViewContentWidgets extends ViewPart {\n    constructor(context, viewDomNode) {\n        super(context);\n        this._viewDomNode = viewDomNode;\n        this._widgets = {};\n        this.domNode = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this.domNode, 1 /* PartFingerprint.ContentWidgets */);\n        this.domNode.setClassName('contentWidgets');\n        this.domNode.setPosition('absolute');\n        this.domNode.setTop(0);\n        this.overflowingContentWidgetsDomNode = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this.overflowingContentWidgetsDomNode, 2 /* PartFingerprint.OverflowingContentWidgets */);\n        this.overflowingContentWidgetsDomNode.setClassName('overflowingContentWidgets');\n    }\n    dispose() {\n        super.dispose();\n        this._widgets = {};\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].onConfigurationChanged(e);\n        }\n        return true;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations that can end up relayouting text\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLineMappingChanged(e) {\n        this._updateAnchorsViewPositions();\n        return true;\n    }\n    onLinesChanged(e) {\n        this._updateAnchorsViewPositions();\n        return true;\n    }\n    onLinesDeleted(e) {\n        this._updateAnchorsViewPositions();\n        return true;\n    }\n    onLinesInserted(e) {\n        this._updateAnchorsViewPositions();\n        return true;\n    }\n    onScrollChanged(e) {\n        return true;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // ---- end view event handlers\n    _updateAnchorsViewPositions() {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].updateAnchorViewPosition();\n        }\n    }\n    addWidget(_widget) {\n        const myWidget = new Widget(this._context, this._viewDomNode, _widget);\n        this._widgets[myWidget.id] = myWidget;\n        if (myWidget.allowEditorOverflow) {\n            this.overflowingContentWidgetsDomNode.appendChild(myWidget.domNode);\n        }\n        else {\n            this.domNode.appendChild(myWidget.domNode);\n        }\n        this.setShouldRender();\n    }\n    setWidgetPosition(widget, primaryAnchor, secondaryAnchor, preference, affinity) {\n        const myWidget = this._widgets[widget.getId()];\n        myWidget.setPosition(primaryAnchor, secondaryAnchor, preference, affinity);\n        this.setShouldRender();\n    }\n    removeWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._widgets.hasOwnProperty(widgetId)) {\n            const myWidget = this._widgets[widgetId];\n            delete this._widgets[widgetId];\n            const domNode = myWidget.domNode.domNode;\n            domNode.parentNode.removeChild(domNode);\n            domNode.removeAttribute('monaco-visible-content-widget');\n            this.setShouldRender();\n        }\n    }\n    shouldSuppressMouseDownOnWidget(widgetId) {\n        if (this._widgets.hasOwnProperty(widgetId)) {\n            return this._widgets[widgetId].suppressMouseDown;\n        }\n        return false;\n    }\n    onBeforeRender(viewportData) {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].onBeforeRender(viewportData);\n        }\n    }\n    prepareRender(ctx) {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].prepareRender(ctx);\n        }\n    }\n    render(ctx) {\n        const keys = Object.keys(this._widgets);\n        for (const widgetId of keys) {\n            this._widgets[widgetId].render(ctx);\n        }\n    }\n}\nclass Widget {\n    constructor(context, viewDomNode, actual) {\n        this._primaryAnchor = new PositionPair(null, null);\n        this._secondaryAnchor = new PositionPair(null, null);\n        this._context = context;\n        this._viewDomNode = viewDomNode;\n        this._actual = actual;\n        this.domNode = createFastDomNode(this._actual.getDomNode());\n        this.id = this._actual.getId();\n        this.allowEditorOverflow = this._actual.allowEditorOverflow || false;\n        this.suppressMouseDown = this._actual.suppressMouseDown || false;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this._fixedOverflowWidgets = options.get(42 /* EditorOption.fixedOverflowWidgets */);\n        this._contentWidth = layoutInfo.contentWidth;\n        this._contentLeft = layoutInfo.contentLeft;\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._affinity = null;\n        this._preference = [];\n        this._cachedDomNodeOffsetWidth = -1;\n        this._cachedDomNodeOffsetHeight = -1;\n        this._maxWidth = this._getMaxWidth();\n        this._isVisible = false;\n        this._renderData = null;\n        this.domNode.setPosition((this._fixedOverflowWidgets && this.allowEditorOverflow) ? 'fixed' : 'absolute');\n        this.domNode.setDisplay('none');\n        this.domNode.setVisibility('hidden');\n        this.domNode.setAttribute('widgetId', this.id);\n        this.domNode.setMaxWidth(this._maxWidth);\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        if (e.hasChanged(143 /* EditorOption.layoutInfo */)) {\n            const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n            this._contentLeft = layoutInfo.contentLeft;\n            this._contentWidth = layoutInfo.contentWidth;\n            this._maxWidth = this._getMaxWidth();\n        }\n    }\n    updateAnchorViewPosition() {\n        this._setPosition(this._affinity, this._primaryAnchor.modelPosition, this._secondaryAnchor.modelPosition);\n    }\n    _setPosition(affinity, primaryAnchor, secondaryAnchor) {\n        this._affinity = affinity;\n        this._primaryAnchor = getValidPositionPair(primaryAnchor, this._context.viewModel, this._affinity);\n        this._secondaryAnchor = getValidPositionPair(secondaryAnchor, this._context.viewModel, this._affinity);\n        function getValidPositionPair(position, viewModel, affinity) {\n            if (!position) {\n                return new PositionPair(null, null);\n            }\n            // Do not trust that widgets give a valid position\n            const validModelPosition = viewModel.model.validatePosition(position);\n            if (viewModel.coordinatesConverter.modelPositionIsVisible(validModelPosition)) {\n                const viewPosition = viewModel.coordinatesConverter.convertModelPositionToViewPosition(validModelPosition, affinity !== null && affinity !== void 0 ? affinity : undefined);\n                return new PositionPair(position, viewPosition);\n            }\n            return new PositionPair(position, null);\n        }\n    }\n    _getMaxWidth() {\n        const elDocument = this.domNode.domNode.ownerDocument;\n        const elWindow = elDocument.defaultView;\n        return (this.allowEditorOverflow\n            ? (elWindow === null || elWindow === void 0 ? void 0 : elWindow.innerWidth) || elDocument.documentElement.offsetWidth || elDocument.body.offsetWidth\n            : this._contentWidth);\n    }\n    setPosition(primaryAnchor, secondaryAnchor, preference, affinity) {\n        this._setPosition(affinity, primaryAnchor, secondaryAnchor);\n        this._preference = preference;\n        if (this._primaryAnchor.viewPosition && this._preference && this._preference.length > 0) {\n            // this content widget would like to be visible if possible\n            // we change it from `display:none` to `display:block` even if it\n            // might be outside the viewport such that we can measure its size\n            // in `prepareRender`\n            this.domNode.setDisplay('block');\n        }\n        else {\n            this.domNode.setDisplay('none');\n        }\n        this._cachedDomNodeOffsetWidth = -1;\n        this._cachedDomNodeOffsetHeight = -1;\n    }\n    _layoutBoxInViewport(anchor, width, height, ctx) {\n        // Our visible box is split horizontally by the current line => 2 boxes\n        // a) the box above the line\n        const aboveLineTop = anchor.top;\n        const heightAvailableAboveLine = aboveLineTop;\n        // b) the box under the line\n        const underLineTop = anchor.top + anchor.height;\n        const heightAvailableUnderLine = ctx.viewportHeight - underLineTop;\n        const aboveTop = aboveLineTop - height;\n        const fitsAbove = (heightAvailableAboveLine >= height);\n        const belowTop = underLineTop;\n        const fitsBelow = (heightAvailableUnderLine >= height);\n        // And its left\n        let left = anchor.left;\n        if (left + width > ctx.scrollLeft + ctx.viewportWidth) {\n            left = ctx.scrollLeft + ctx.viewportWidth - width;\n        }\n        if (left < ctx.scrollLeft) {\n            left = ctx.scrollLeft;\n        }\n        return { fitsAbove, aboveTop, fitsBelow, belowTop, left };\n    }\n    _layoutHorizontalSegmentInPage(windowSize, domNodePosition, left, width) {\n        var _a;\n        // Leave some clearance to the left/right\n        const LEFT_PADDING = 15;\n        const RIGHT_PADDING = 15;\n        // Initially, the limits are defined as the dom node limits\n        const MIN_LIMIT = Math.max(LEFT_PADDING, domNodePosition.left - width);\n        const MAX_LIMIT = Math.min(domNodePosition.left + domNodePosition.width + width, windowSize.width - RIGHT_PADDING);\n        const elDocument = this._viewDomNode.domNode.ownerDocument;\n        const elWindow = elDocument.defaultView;\n        let absoluteLeft = domNodePosition.left + left - ((_a = elWindow === null || elWindow === void 0 ? void 0 : elWindow.scrollX) !== null && _a !== void 0 ? _a : 0);\n        if (absoluteLeft + width > MAX_LIMIT) {\n            const delta = absoluteLeft - (MAX_LIMIT - width);\n            absoluteLeft -= delta;\n            left -= delta;\n        }\n        if (absoluteLeft < MIN_LIMIT) {\n            const delta = absoluteLeft - MIN_LIMIT;\n            absoluteLeft -= delta;\n            left -= delta;\n        }\n        return [left, absoluteLeft];\n    }\n    _layoutBoxInPage(anchor, width, height, ctx) {\n        var _a, _b;\n        const aboveTop = anchor.top - height;\n        const belowTop = anchor.top + anchor.height;\n        const domNodePosition = dom.getDomNodePagePosition(this._viewDomNode.domNode);\n        const elDocument = this._viewDomNode.domNode.ownerDocument;\n        const elWindow = elDocument.defaultView;\n        const absoluteAboveTop = domNodePosition.top + aboveTop - ((_a = elWindow === null || elWindow === void 0 ? void 0 : elWindow.scrollY) !== null && _a !== void 0 ? _a : 0);\n        const absoluteBelowTop = domNodePosition.top + belowTop - ((_b = elWindow === null || elWindow === void 0 ? void 0 : elWindow.scrollY) !== null && _b !== void 0 ? _b : 0);\n        const windowSize = dom.getClientArea(elDocument.body);\n        const [left, absoluteAboveLeft] = this._layoutHorizontalSegmentInPage(windowSize, domNodePosition, anchor.left - ctx.scrollLeft + this._contentLeft, width);\n        // Leave some clearance to the top/bottom\n        const TOP_PADDING = 22;\n        const BOTTOM_PADDING = 22;\n        const fitsAbove = (absoluteAboveTop >= TOP_PADDING);\n        const fitsBelow = (absoluteBelowTop + height <= windowSize.height - BOTTOM_PADDING);\n        if (this._fixedOverflowWidgets) {\n            return {\n                fitsAbove,\n                aboveTop: Math.max(absoluteAboveTop, TOP_PADDING),\n                fitsBelow,\n                belowTop: absoluteBelowTop,\n                left: absoluteAboveLeft\n            };\n        }\n        return { fitsAbove, aboveTop, fitsBelow, belowTop, left };\n    }\n    _prepareRenderWidgetAtExactPositionOverflowing(topLeft) {\n        return new Coordinate(topLeft.top, topLeft.left + this._contentLeft);\n    }\n    /**\n     * Compute the coordinates above and below the primary and secondary anchors.\n     * The content widget *must* touch the primary anchor.\n     * The content widget should touch if possible the secondary anchor.\n     */\n    _getAnchorsCoordinates(ctx) {\n        var _a, _b;\n        const primary = getCoordinates(this._primaryAnchor.viewPosition, this._affinity, this._lineHeight);\n        const secondaryViewPosition = (((_a = this._secondaryAnchor.viewPosition) === null || _a === void 0 ? void 0 : _a.lineNumber) === ((_b = this._primaryAnchor.viewPosition) === null || _b === void 0 ? void 0 : _b.lineNumber) ? this._secondaryAnchor.viewPosition : null);\n        const secondary = getCoordinates(secondaryViewPosition, this._affinity, this._lineHeight);\n        return { primary, secondary };\n        function getCoordinates(position, affinity, lineHeight) {\n            if (!position) {\n                return null;\n            }\n            const horizontalPosition = ctx.visibleRangeForPosition(position);\n            if (!horizontalPosition) {\n                return null;\n            }\n            // Left-align widgets that should appear :before content\n            const left = (position.column === 1 && affinity === 3 /* PositionAffinity.LeftOfInjectedText */ ? 0 : horizontalPosition.left);\n            const top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.scrollTop;\n            return new AnchorCoordinate(top, left, lineHeight);\n        }\n    }\n    _reduceAnchorCoordinates(primary, secondary, width) {\n        if (!secondary) {\n            return primary;\n        }\n        const fontInfo = this._context.configuration.options.get(50 /* EditorOption.fontInfo */);\n        let left = secondary.left;\n        if (left < primary.left) {\n            left = Math.max(left, primary.left - width + fontInfo.typicalFullwidthCharacterWidth);\n        }\n        else {\n            left = Math.min(left, primary.left + width - fontInfo.typicalFullwidthCharacterWidth);\n        }\n        return new AnchorCoordinate(primary.top, left, primary.height);\n    }\n    _prepareRenderWidget(ctx) {\n        if (!this._preference || this._preference.length === 0) {\n            return null;\n        }\n        const { primary, secondary } = this._getAnchorsCoordinates(ctx);\n        if (!primary) {\n            return null;\n        }\n        if (this._cachedDomNodeOffsetWidth === -1 || this._cachedDomNodeOffsetHeight === -1) {\n            let preferredDimensions = null;\n            if (typeof this._actual.beforeRender === 'function') {\n                preferredDimensions = safeInvoke(this._actual.beforeRender, this._actual);\n            }\n            if (preferredDimensions) {\n                this._cachedDomNodeOffsetWidth = preferredDimensions.width;\n                this._cachedDomNodeOffsetHeight = preferredDimensions.height;\n            }\n            else {\n                const domNode = this.domNode.domNode;\n                const clientRect = domNode.getBoundingClientRect();\n                this._cachedDomNodeOffsetWidth = Math.round(clientRect.width);\n                this._cachedDomNodeOffsetHeight = Math.round(clientRect.height);\n            }\n        }\n        const anchor = this._reduceAnchorCoordinates(primary, secondary, this._cachedDomNodeOffsetWidth);\n        let placement;\n        if (this.allowEditorOverflow) {\n            placement = this._layoutBoxInPage(anchor, this._cachedDomNodeOffsetWidth, this._cachedDomNodeOffsetHeight, ctx);\n        }\n        else {\n            placement = this._layoutBoxInViewport(anchor, this._cachedDomNodeOffsetWidth, this._cachedDomNodeOffsetHeight, ctx);\n        }\n        // Do two passes, first for perfect fit, second picks first option\n        for (let pass = 1; pass <= 2; pass++) {\n            for (const pref of this._preference) {\n                // placement\n                if (pref === 1 /* ContentWidgetPositionPreference.ABOVE */) {\n                    if (!placement) {\n                        // Widget outside of viewport\n                        return null;\n                    }\n                    if (pass === 2 || placement.fitsAbove) {\n                        return { coordinate: new Coordinate(placement.aboveTop, placement.left), position: 1 /* ContentWidgetPositionPreference.ABOVE */ };\n                    }\n                }\n                else if (pref === 2 /* ContentWidgetPositionPreference.BELOW */) {\n                    if (!placement) {\n                        // Widget outside of viewport\n                        return null;\n                    }\n                    if (pass === 2 || placement.fitsBelow) {\n                        return { coordinate: new Coordinate(placement.belowTop, placement.left), position: 2 /* ContentWidgetPositionPreference.BELOW */ };\n                    }\n                }\n                else {\n                    if (this.allowEditorOverflow) {\n                        return { coordinate: this._prepareRenderWidgetAtExactPositionOverflowing(new Coordinate(anchor.top, anchor.left)), position: 0 /* ContentWidgetPositionPreference.EXACT */ };\n                    }\n                    else {\n                        return { coordinate: new Coordinate(anchor.top, anchor.left), position: 0 /* ContentWidgetPositionPreference.EXACT */ };\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * On this first pass, we ensure that the content widget (if it is in the viewport) has the max width set correctly.\n     */\n    onBeforeRender(viewportData) {\n        if (!this._primaryAnchor.viewPosition || !this._preference) {\n            return;\n        }\n        if (this._primaryAnchor.viewPosition.lineNumber < viewportData.startLineNumber || this._primaryAnchor.viewPosition.lineNumber > viewportData.endLineNumber) {\n            // Outside of viewport\n            return;\n        }\n        this.domNode.setMaxWidth(this._maxWidth);\n    }\n    prepareRender(ctx) {\n        this._renderData = this._prepareRenderWidget(ctx);\n    }\n    render(ctx) {\n        if (!this._renderData) {\n            // This widget should be invisible\n            if (this._isVisible) {\n                this.domNode.removeAttribute('monaco-visible-content-widget');\n                this._isVisible = false;\n                this.domNode.setVisibility('hidden');\n            }\n            if (typeof this._actual.afterRender === 'function') {\n                safeInvoke(this._actual.afterRender, this._actual, null);\n            }\n            return;\n        }\n        // This widget should be visible\n        if (this.allowEditorOverflow) {\n            this.domNode.setTop(this._renderData.coordinate.top);\n            this.domNode.setLeft(this._renderData.coordinate.left);\n        }\n        else {\n            this.domNode.setTop(this._renderData.coordinate.top + ctx.scrollTop - ctx.bigNumbersDelta);\n            this.domNode.setLeft(this._renderData.coordinate.left);\n        }\n        if (!this._isVisible) {\n            this.domNode.setVisibility('inherit');\n            this.domNode.setAttribute('monaco-visible-content-widget', 'true');\n            this._isVisible = true;\n        }\n        if (typeof this._actual.afterRender === 'function') {\n            safeInvoke(this._actual.afterRender, this._actual, this._renderData.position);\n        }\n    }\n}\nclass PositionPair {\n    constructor(modelPosition, viewPosition) {\n        this.modelPosition = modelPosition;\n        this.viewPosition = viewPosition;\n    }\n}\nclass Coordinate {\n    constructor(top, left) {\n        this.top = top;\n        this.left = left;\n        this._coordinateBrand = undefined;\n    }\n}\nclass AnchorCoordinate {\n    constructor(top, left, height) {\n        this.top = top;\n        this.left = left;\n        this.height = height;\n        this._anchorCoordinateBrand = undefined;\n    }\n}\nfunction safeInvoke(fn, thisArg, ...args) {\n    try {\n        return fn.call(thisArg, ...args);\n    }\n    catch (_a) {\n        // ignore\n        return null;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './currentLineHighlight.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorLineHighlight, editorLineHighlightBorder } from '../../../common/core/editorColorRegistry.js';\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nexport class AbstractLineHighlightOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._renderLineHighlight = options.get(95 /* EditorOption.renderLineHighlight */);\n        this._renderLineHighlightOnlyWhenFocus = options.get(96 /* EditorOption.renderLineHighlightOnlyWhenFocus */);\n        this._contentLeft = layoutInfo.contentLeft;\n        this._contentWidth = layoutInfo.contentWidth;\n        this._selectionIsEmpty = true;\n        this._focused = false;\n        this._cursorLineNumbers = [1];\n        this._selections = [new Selection(1, 1, 1, 1)];\n        this._renderData = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        super.dispose();\n    }\n    _readFromSelections() {\n        let hasChanged = false;\n        const cursorsLineNumbers = this._selections.map(s => s.positionLineNumber);\n        cursorsLineNumbers.sort((a, b) => a - b);\n        if (!arrays.equals(this._cursorLineNumbers, cursorsLineNumbers)) {\n            this._cursorLineNumbers = cursorsLineNumbers;\n            hasChanged = true;\n        }\n        const selectionIsEmpty = this._selections.every(s => s.isEmpty());\n        if (this._selectionIsEmpty !== selectionIsEmpty) {\n            this._selectionIsEmpty = selectionIsEmpty;\n            hasChanged = true;\n        }\n        return hasChanged;\n    }\n    // --- begin event handlers\n    onThemeChanged(e) {\n        return this._readFromSelections();\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._renderLineHighlight = options.get(95 /* EditorOption.renderLineHighlight */);\n        this._renderLineHighlightOnlyWhenFocus = options.get(96 /* EditorOption.renderLineHighlightOnlyWhenFocus */);\n        this._contentLeft = layoutInfo.contentLeft;\n        this._contentWidth = layoutInfo.contentWidth;\n        return true;\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections;\n        return this._readFromSelections();\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollWidthChanged || e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    onFocusChanged(e) {\n        if (!this._renderLineHighlightOnlyWhenFocus) {\n            return false;\n        }\n        this._focused = e.isFocused;\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        if (!this._shouldRenderThis()) {\n            this._renderData = null;\n            return;\n        }\n        const renderedLine = this._renderOne(ctx);\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const len = this._cursorLineNumbers.length;\n        let index = 0;\n        const renderData = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            while (index < len && this._cursorLineNumbers[index] < lineNumber) {\n                index++;\n            }\n            if (index < len && this._cursorLineNumbers[index] === lineNumber) {\n                renderData[lineIndex] = renderedLine;\n            }\n            else {\n                renderData[lineIndex] = '';\n            }\n        }\n        this._renderData = renderData;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderData) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex >= this._renderData.length) {\n            return '';\n        }\n        return this._renderData[lineIndex];\n    }\n    _shouldRenderInMargin() {\n        return ((this._renderLineHighlight === 'gutter' || this._renderLineHighlight === 'all')\n            && (!this._renderLineHighlightOnlyWhenFocus || this._focused));\n    }\n    _shouldRenderInContent() {\n        return ((this._renderLineHighlight === 'line' || this._renderLineHighlight === 'all')\n            && this._selectionIsEmpty\n            && (!this._renderLineHighlightOnlyWhenFocus || this._focused));\n    }\n}\nexport class CurrentLineHighlightOverlay extends AbstractLineHighlightOverlay {\n    _renderOne(ctx) {\n        const className = 'current-line' + (this._shouldRenderOther() ? ' current-line-both' : '');\n        return `<div class=\"${className}\" style=\"width:${Math.max(ctx.scrollWidth, this._contentWidth)}px; height:${this._lineHeight}px;\"></div>`;\n    }\n    _shouldRenderThis() {\n        return this._shouldRenderInContent();\n    }\n    _shouldRenderOther() {\n        return this._shouldRenderInMargin();\n    }\n}\nexport class CurrentLineMarginHighlightOverlay extends AbstractLineHighlightOverlay {\n    _renderOne(ctx) {\n        const className = 'current-line' + (this._shouldRenderInMargin() ? ' current-line-margin' : '') + (this._shouldRenderOther() ? ' current-line-margin-both' : '');\n        return `<div class=\"${className}\" style=\"width:${this._contentLeft}px; height:${this._lineHeight}px;\"></div>`;\n    }\n    _shouldRenderThis() {\n        return true;\n    }\n    _shouldRenderOther() {\n        return this._shouldRenderInContent();\n    }\n}\nregisterThemingParticipant((theme, collector) => {\n    const lineHighlight = theme.getColor(editorLineHighlight);\n    if (lineHighlight) {\n        collector.addRule(`.monaco-editor .view-overlays .current-line { background-color: ${lineHighlight}; }`);\n        collector.addRule(`.monaco-editor .margin-view-overlays .current-line-margin { background-color: ${lineHighlight}; border: none; }`);\n    }\n    if (!lineHighlight || lineHighlight.isTransparent() || theme.defines(editorLineHighlightBorder)) {\n        const lineHighlightBorder = theme.getColor(editorLineHighlightBorder);\n        if (lineHighlightBorder) {\n            collector.addRule(`.monaco-editor .view-overlays .current-line { border: 2px solid ${lineHighlightBorder}; }`);\n            collector.addRule(`.monaco-editor .margin-view-overlays .current-line-margin { border: 2px solid ${lineHighlightBorder}; }`);\n            if (isHighContrast(theme.type)) {\n                collector.addRule(`.monaco-editor .view-overlays .current-line { border-width: 1px; }`);\n                collector.addRule(`.monaco-editor .margin-view-overlays .current-line-margin { border-width: 1px; }`);\n            }\n        }\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './decorations.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { HorizontalRange } from '../../view/renderingContext.js';\nimport { Range } from '../../../common/core/range.js';\nexport class DecorationsOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        const options = this._context.configuration.options;\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        return true;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged || e.scrollWidthChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        const _decorations = ctx.getDecorationsInViewport();\n        // Keep only decorations with `className`\n        let decorations = [];\n        let decorationsLen = 0;\n        for (let i = 0, len = _decorations.length; i < len; i++) {\n            const d = _decorations[i];\n            if (d.options.className) {\n                decorations[decorationsLen++] = d;\n            }\n        }\n        // Sort decorations for consistent render output\n        decorations = decorations.sort((a, b) => {\n            if (a.options.zIndex < b.options.zIndex) {\n                return -1;\n            }\n            if (a.options.zIndex > b.options.zIndex) {\n                return 1;\n            }\n            const aClassName = a.options.className;\n            const bClassName = b.options.className;\n            if (aClassName < bClassName) {\n                return -1;\n            }\n            if (aClassName > bClassName) {\n                return 1;\n            }\n            return Range.compareRangesUsingStarts(a.range, b.range);\n        });\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            output[lineIndex] = '';\n        }\n        // Render first whole line decorations and then regular decorations\n        this._renderWholeLineDecorations(ctx, decorations, output);\n        this._renderNormalDecorations(ctx, decorations, output);\n        this._renderResult = output;\n    }\n    _renderWholeLineDecorations(ctx, decorations, output) {\n        const lineHeight = String(this._lineHeight);\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        for (let i = 0, lenI = decorations.length; i < lenI; i++) {\n            const d = decorations[i];\n            if (!d.options.isWholeLine) {\n                continue;\n            }\n            const decorationOutput = ('<div class=\"cdr '\n                + d.options.className\n                + '\" style=\"left:0;width:100%;height:'\n                + lineHeight\n                + 'px;\"></div>');\n            const startLineNumber = Math.max(d.range.startLineNumber, visibleStartLineNumber);\n            const endLineNumber = Math.min(d.range.endLineNumber, visibleEndLineNumber);\n            for (let j = startLineNumber; j <= endLineNumber; j++) {\n                const lineIndex = j - visibleStartLineNumber;\n                output[lineIndex] += decorationOutput;\n            }\n        }\n    }\n    _renderNormalDecorations(ctx, decorations, output) {\n        var _a;\n        const lineHeight = String(this._lineHeight);\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        let prevClassName = null;\n        let prevShowIfCollapsed = false;\n        let prevRange = null;\n        let prevShouldFillLineOnLineBreak = false;\n        for (let i = 0, lenI = decorations.length; i < lenI; i++) {\n            const d = decorations[i];\n            if (d.options.isWholeLine) {\n                continue;\n            }\n            const className = d.options.className;\n            const showIfCollapsed = Boolean(d.options.showIfCollapsed);\n            let range = d.range;\n            if (showIfCollapsed && range.endColumn === 1 && range.endLineNumber !== range.startLineNumber) {\n                range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber - 1, this._context.viewModel.getLineMaxColumn(range.endLineNumber - 1));\n            }\n            if (prevClassName === className && prevShowIfCollapsed === showIfCollapsed && Range.areIntersectingOrTouching(prevRange, range)) {\n                // merge into previous decoration\n                prevRange = Range.plusRange(prevRange, range);\n                continue;\n            }\n            // flush previous decoration\n            if (prevClassName !== null) {\n                this._renderNormalDecoration(ctx, prevRange, prevClassName, prevShouldFillLineOnLineBreak, prevShowIfCollapsed, lineHeight, visibleStartLineNumber, output);\n            }\n            prevClassName = className;\n            prevShowIfCollapsed = showIfCollapsed;\n            prevRange = range;\n            prevShouldFillLineOnLineBreak = (_a = d.options.shouldFillLineOnLineBreak) !== null && _a !== void 0 ? _a : false;\n        }\n        if (prevClassName !== null) {\n            this._renderNormalDecoration(ctx, prevRange, prevClassName, prevShouldFillLineOnLineBreak, prevShowIfCollapsed, lineHeight, visibleStartLineNumber, output);\n        }\n    }\n    _renderNormalDecoration(ctx, range, className, shouldFillLineOnLineBreak, showIfCollapsed, lineHeight, visibleStartLineNumber, output) {\n        const linesVisibleRanges = ctx.linesVisibleRangesForRange(range, /*TODO@Alex*/ className === 'findMatch');\n        if (!linesVisibleRanges) {\n            return;\n        }\n        for (let j = 0, lenJ = linesVisibleRanges.length; j < lenJ; j++) {\n            const lineVisibleRanges = linesVisibleRanges[j];\n            if (lineVisibleRanges.outsideRenderedLine) {\n                continue;\n            }\n            const lineIndex = lineVisibleRanges.lineNumber - visibleStartLineNumber;\n            if (showIfCollapsed && lineVisibleRanges.ranges.length === 1) {\n                const singleVisibleRange = lineVisibleRanges.ranges[0];\n                if (singleVisibleRange.width < this._typicalHalfwidthCharacterWidth) {\n                    // collapsed/very small range case => make the decoration visible by expanding its width\n                    // expand its size on both sides (both to the left and to the right, keeping it centered)\n                    const center = Math.round(singleVisibleRange.left + singleVisibleRange.width / 2);\n                    const left = Math.max(0, Math.round(center - this._typicalHalfwidthCharacterWidth / 2));\n                    lineVisibleRanges.ranges[0] = new HorizontalRange(left, this._typicalHalfwidthCharacterWidth);\n                }\n            }\n            for (let k = 0, lenK = lineVisibleRanges.ranges.length; k < lenK; k++) {\n                const expandToLeft = shouldFillLineOnLineBreak && lineVisibleRanges.continuesOnNextLine && lenK === 1;\n                const visibleRange = lineVisibleRanges.ranges[k];\n                const decorationOutput = ('<div class=\"cdr '\n                    + className\n                    + '\" style=\"left:'\n                    + String(visibleRange.left)\n                    + (expandToLeft ?\n                        'px;width:100%;height:' :\n                        ('px;width:' + String(visibleRange.width) + 'px;height:'))\n                    + lineHeight\n                    + 'px;\"></div>');\n                output[lineIndex] += decorationOutput;\n            }\n        }\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { SmoothScrollableElement } from '../../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { getThemeTypeSelector } from '../../../../platform/theme/common/themeService.js';\nexport class EditorScrollbar extends ViewPart {\n    constructor(context, linesContent, viewDomNode, overflowGuardDomNode) {\n        super(context);\n        const options = this._context.configuration.options;\n        const scrollbar = options.get(102 /* EditorOption.scrollbar */);\n        const mouseWheelScrollSensitivity = options.get(74 /* EditorOption.mouseWheelScrollSensitivity */);\n        const fastScrollSensitivity = options.get(40 /* EditorOption.fastScrollSensitivity */);\n        const scrollPredominantAxis = options.get(105 /* EditorOption.scrollPredominantAxis */);\n        const scrollbarOptions = {\n            listenOnDomNode: viewDomNode.domNode,\n            className: 'editor-scrollable' + ' ' + getThemeTypeSelector(context.theme.type),\n            useShadows: false,\n            lazyRender: true,\n            vertical: scrollbar.vertical,\n            horizontal: scrollbar.horizontal,\n            verticalHasArrows: scrollbar.verticalHasArrows,\n            horizontalHasArrows: scrollbar.horizontalHasArrows,\n            verticalScrollbarSize: scrollbar.verticalScrollbarSize,\n            verticalSliderSize: scrollbar.verticalSliderSize,\n            horizontalScrollbarSize: scrollbar.horizontalScrollbarSize,\n            horizontalSliderSize: scrollbar.horizontalSliderSize,\n            handleMouseWheel: scrollbar.handleMouseWheel,\n            alwaysConsumeMouseWheel: scrollbar.alwaysConsumeMouseWheel,\n            arrowSize: scrollbar.arrowSize,\n            mouseWheelScrollSensitivity: mouseWheelScrollSensitivity,\n            fastScrollSensitivity: fastScrollSensitivity,\n            scrollPredominantAxis: scrollPredominantAxis,\n            scrollByPage: scrollbar.scrollByPage,\n        };\n        this.scrollbar = this._register(new SmoothScrollableElement(linesContent.domNode, scrollbarOptions, this._context.viewLayout.getScrollable()));\n        PartFingerprints.write(this.scrollbar.getDomNode(), 5 /* PartFingerprint.ScrollableElement */);\n        this.scrollbarDomNode = createFastDomNode(this.scrollbar.getDomNode());\n        this.scrollbarDomNode.setPosition('absolute');\n        this._setLayout();\n        // When having a zone widget that calls .focus() on one of its dom elements,\n        // the browser will try desperately to reveal that dom node, unexpectedly\n        // changing the .scrollTop of this.linesContent\n        const onBrowserDesperateReveal = (domNode, lookAtScrollTop, lookAtScrollLeft) => {\n            const newScrollPosition = {};\n            if (lookAtScrollTop) {\n                const deltaTop = domNode.scrollTop;\n                if (deltaTop) {\n                    newScrollPosition.scrollTop = this._context.viewLayout.getCurrentScrollTop() + deltaTop;\n                    domNode.scrollTop = 0;\n                }\n            }\n            if (lookAtScrollLeft) {\n                const deltaLeft = domNode.scrollLeft;\n                if (deltaLeft) {\n                    newScrollPosition.scrollLeft = this._context.viewLayout.getCurrentScrollLeft() + deltaLeft;\n                    domNode.scrollLeft = 0;\n                }\n            }\n            this._context.viewModel.viewLayout.setScrollPosition(newScrollPosition, 1 /* ScrollType.Immediate */);\n        };\n        // I've seen this happen both on the view dom node & on the lines content dom node.\n        this._register(dom.addDisposableListener(viewDomNode.domNode, 'scroll', (e) => onBrowserDesperateReveal(viewDomNode.domNode, true, true)));\n        this._register(dom.addDisposableListener(linesContent.domNode, 'scroll', (e) => onBrowserDesperateReveal(linesContent.domNode, true, false)));\n        this._register(dom.addDisposableListener(overflowGuardDomNode.domNode, 'scroll', (e) => onBrowserDesperateReveal(overflowGuardDomNode.domNode, true, false)));\n        this._register(dom.addDisposableListener(this.scrollbarDomNode.domNode, 'scroll', (e) => onBrowserDesperateReveal(this.scrollbarDomNode.domNode, true, false)));\n    }\n    dispose() {\n        super.dispose();\n    }\n    _setLayout() {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this.scrollbarDomNode.setLeft(layoutInfo.contentLeft);\n        const minimap = options.get(72 /* EditorOption.minimap */);\n        const side = minimap.side;\n        if (side === 'right') {\n            this.scrollbarDomNode.setWidth(layoutInfo.contentWidth + layoutInfo.minimap.minimapWidth);\n        }\n        else {\n            this.scrollbarDomNode.setWidth(layoutInfo.contentWidth);\n        }\n        this.scrollbarDomNode.setHeight(layoutInfo.height);\n    }\n    getOverviewRulerLayoutInfo() {\n        return this.scrollbar.getOverviewRulerLayoutInfo();\n    }\n    getDomNode() {\n        return this.scrollbarDomNode;\n    }\n    delegateVerticalScrollbarPointerDown(browserEvent) {\n        this.scrollbar.delegateVerticalScrollbarPointerDown(browserEvent);\n    }\n    delegateScrollFromMouseWheelEvent(browserEvent) {\n        this.scrollbar.delegateScrollFromMouseWheelEvent(browserEvent);\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        if (e.hasChanged(102 /* EditorOption.scrollbar */)\n            || e.hasChanged(74 /* EditorOption.mouseWheelScrollSensitivity */)\n            || e.hasChanged(40 /* EditorOption.fastScrollSensitivity */)) {\n            const options = this._context.configuration.options;\n            const scrollbar = options.get(102 /* EditorOption.scrollbar */);\n            const mouseWheelScrollSensitivity = options.get(74 /* EditorOption.mouseWheelScrollSensitivity */);\n            const fastScrollSensitivity = options.get(40 /* EditorOption.fastScrollSensitivity */);\n            const scrollPredominantAxis = options.get(105 /* EditorOption.scrollPredominantAxis */);\n            const newOpts = {\n                vertical: scrollbar.vertical,\n                horizontal: scrollbar.horizontal,\n                verticalScrollbarSize: scrollbar.verticalScrollbarSize,\n                horizontalScrollbarSize: scrollbar.horizontalScrollbarSize,\n                scrollByPage: scrollbar.scrollByPage,\n                handleMouseWheel: scrollbar.handleMouseWheel,\n                mouseWheelScrollSensitivity: mouseWheelScrollSensitivity,\n                fastScrollSensitivity: fastScrollSensitivity,\n                scrollPredominantAxis: scrollPredominantAxis\n            };\n            this.scrollbar.updateOptions(newOpts);\n        }\n        if (e.hasChanged(143 /* EditorOption.layoutInfo */)) {\n            this._setLayout();\n        }\n        return true;\n    }\n    onScrollChanged(e) {\n        return true;\n    }\n    onThemeChanged(e) {\n        this.scrollbar.updateClassName('editor-scrollable' + ' ' + getThemeTypeSelector(this._context.theme.type));\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to do\n    }\n    render(ctx) {\n        this.scrollbar.renderNow();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './indentGuides.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorBracketHighlightingForeground1, editorBracketHighlightingForeground2, editorBracketHighlightingForeground3, editorBracketHighlightingForeground4, editorBracketHighlightingForeground5, editorBracketHighlightingForeground6, editorBracketPairGuideActiveBackground1, editorBracketPairGuideActiveBackground2, editorBracketPairGuideActiveBackground3, editorBracketPairGuideActiveBackground4, editorBracketPairGuideActiveBackground5, editorBracketPairGuideActiveBackground6, editorBracketPairGuideBackground1, editorBracketPairGuideBackground2, editorBracketPairGuideBackground3, editorBracketPairGuideBackground4, editorBracketPairGuideBackground5, editorBracketPairGuideBackground6, editorIndentGuide1, editorIndentGuide2, editorIndentGuide3, editorIndentGuide4, editorIndentGuide5, editorIndentGuide6, editorActiveIndentGuide1, editorActiveIndentGuide2, editorActiveIndentGuide3, editorActiveIndentGuide4, editorActiveIndentGuide5, editorActiveIndentGuide6 } from '../../../common/core/editorColorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ArrayQueue } from '../../../../base/common/arrays.js';\nimport { isDefined } from '../../../../base/common/types.js';\nimport { BracketPairGuidesClassNames } from '../../../common/model/guidesTextModelPart.js';\nimport { IndentGuide, HorizontalGuidesState } from '../../../common/textModelGuides.js';\nexport class IndentGuidesOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._primaryPosition = null;\n        const options = this._context.configuration.options;\n        const wrappingInfo = options.get(144 /* EditorOption.wrappingInfo */);\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._spaceWidth = fontInfo.spaceWidth;\n        this._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : (wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n        this._bracketPairGuideOptions = options.get(16 /* EditorOption.guides */);\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const wrappingInfo = options.get(144 /* EditorOption.wrappingInfo */);\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._spaceWidth = fontInfo.spaceWidth;\n        this._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : (wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n        this._bracketPairGuideOptions = options.get(16 /* EditorOption.guides */);\n        return true;\n    }\n    onCursorStateChanged(e) {\n        var _a;\n        const selection = e.selections[0];\n        const newPosition = selection.getPosition();\n        if (!((_a = this._primaryPosition) === null || _a === void 0 ? void 0 : _a.equals(newPosition))) {\n            this._primaryPosition = newPosition;\n            return true;\n        }\n        return false;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged; // || e.scrollWidthChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    onLanguageConfigurationChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        var _a, _b, _c, _d;\n        if (!this._bracketPairGuideOptions.indentation && this._bracketPairGuideOptions.bracketPairs === false) {\n            this._renderResult = null;\n            return;\n        }\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const scrollWidth = ctx.scrollWidth;\n        const lineHeight = this._lineHeight;\n        const activeCursorPosition = this._primaryPosition;\n        const indents = this.getGuidesByLine(visibleStartLineNumber, Math.min(visibleEndLineNumber + 1, this._context.viewModel.getLineCount()), activeCursorPosition);\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const indent = indents[lineIndex];\n            let result = '';\n            const leftOffset = (_b = (_a = ctx.visibleRangeForPosition(new Position(lineNumber, 1))) === null || _a === void 0 ? void 0 : _a.left) !== null && _b !== void 0 ? _b : 0;\n            for (const guide of indent) {\n                const left = guide.column === -1\n                    ? leftOffset + (guide.visibleColumn - 1) * this._spaceWidth\n                    : ctx.visibleRangeForPosition(new Position(lineNumber, guide.column)).left;\n                if (left > scrollWidth || (this._maxIndentLeft > 0 && left > this._maxIndentLeft)) {\n                    break;\n                }\n                const className = guide.horizontalLine ? (guide.horizontalLine.top ? 'horizontal-top' : 'horizontal-bottom') : 'vertical';\n                const width = guide.horizontalLine\n                    ? ((_d = (_c = ctx.visibleRangeForPosition(new Position(lineNumber, guide.horizontalLine.endColumn))) === null || _c === void 0 ? void 0 : _c.left) !== null && _d !== void 0 ? _d : (left + this._spaceWidth)) - left\n                    : this._spaceWidth;\n                result += `<div class=\"core-guide ${guide.className} ${className}\" style=\"left:${left}px;height:${lineHeight}px;width:${width}px\"></div>`;\n            }\n            output[lineIndex] = result;\n        }\n        this._renderResult = output;\n    }\n    getGuidesByLine(visibleStartLineNumber, visibleEndLineNumber, activeCursorPosition) {\n        const bracketGuides = this._bracketPairGuideOptions.bracketPairs !== false\n            ? this._context.viewModel.getBracketGuidesInRangeByLine(visibleStartLineNumber, visibleEndLineNumber, activeCursorPosition, {\n                highlightActive: this._bracketPairGuideOptions.highlightActiveBracketPair,\n                horizontalGuides: this._bracketPairGuideOptions.bracketPairsHorizontal === true\n                    ? HorizontalGuidesState.Enabled\n                    : this._bracketPairGuideOptions.bracketPairsHorizontal === 'active'\n                        ? HorizontalGuidesState.EnabledForActive\n                        : HorizontalGuidesState.Disabled,\n                includeInactive: this._bracketPairGuideOptions.bracketPairs === true,\n            })\n            : null;\n        const indentGuides = this._bracketPairGuideOptions.indentation\n            ? this._context.viewModel.getLinesIndentGuides(visibleStartLineNumber, visibleEndLineNumber)\n            : null;\n        let activeIndentStartLineNumber = 0;\n        let activeIndentEndLineNumber = 0;\n        let activeIndentLevel = 0;\n        if (this._bracketPairGuideOptions.highlightActiveIndentation !== false && activeCursorPosition) {\n            const activeIndentInfo = this._context.viewModel.getActiveIndentGuide(activeCursorPosition.lineNumber, visibleStartLineNumber, visibleEndLineNumber);\n            activeIndentStartLineNumber = activeIndentInfo.startLineNumber;\n            activeIndentEndLineNumber = activeIndentInfo.endLineNumber;\n            activeIndentLevel = activeIndentInfo.indent;\n        }\n        const { indentSize } = this._context.viewModel.model.getOptions();\n        const result = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineGuides = new Array();\n            result.push(lineGuides);\n            const bracketGuidesInLine = bracketGuides ? bracketGuides[lineNumber - visibleStartLineNumber] : [];\n            const bracketGuidesInLineQueue = new ArrayQueue(bracketGuidesInLine);\n            const indentGuidesInLine = indentGuides ? indentGuides[lineNumber - visibleStartLineNumber] : 0;\n            for (let indentLvl = 1; indentLvl <= indentGuidesInLine; indentLvl++) {\n                const indentGuide = (indentLvl - 1) * indentSize + 1;\n                const isActive = \n                // Disable active indent guide if there are bracket guides.\n                (this._bracketPairGuideOptions.highlightActiveIndentation === 'always' || bracketGuidesInLine.length === 0) &&\n                    activeIndentStartLineNumber <= lineNumber &&\n                    lineNumber <= activeIndentEndLineNumber &&\n                    indentLvl === activeIndentLevel;\n                lineGuides.push(...bracketGuidesInLineQueue.takeWhile(g => g.visibleColumn < indentGuide) || []);\n                const peeked = bracketGuidesInLineQueue.peek();\n                if (!peeked || peeked.visibleColumn !== indentGuide || peeked.horizontalLine) {\n                    lineGuides.push(new IndentGuide(indentGuide, -1, `core-guide-indent lvl-${(indentLvl - 1) % 30}` + (isActive ? ' indent-active' : ''), null, -1, -1));\n                }\n            }\n            lineGuides.push(...bracketGuidesInLineQueue.takeWhile(g => true) || []);\n        }\n        return result;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\nfunction transparentToUndefined(color) {\n    if (color && color.isTransparent()) {\n        return undefined;\n    }\n    return color;\n}\nregisterThemingParticipant((theme, collector) => {\n    const colors = [\n        { bracketColor: editorBracketHighlightingForeground1, guideColor: editorBracketPairGuideBackground1, guideColorActive: editorBracketPairGuideActiveBackground1 },\n        { bracketColor: editorBracketHighlightingForeground2, guideColor: editorBracketPairGuideBackground2, guideColorActive: editorBracketPairGuideActiveBackground2 },\n        { bracketColor: editorBracketHighlightingForeground3, guideColor: editorBracketPairGuideBackground3, guideColorActive: editorBracketPairGuideActiveBackground3 },\n        { bracketColor: editorBracketHighlightingForeground4, guideColor: editorBracketPairGuideBackground4, guideColorActive: editorBracketPairGuideActiveBackground4 },\n        { bracketColor: editorBracketHighlightingForeground5, guideColor: editorBracketPairGuideBackground5, guideColorActive: editorBracketPairGuideActiveBackground5 },\n        { bracketColor: editorBracketHighlightingForeground6, guideColor: editorBracketPairGuideBackground6, guideColorActive: editorBracketPairGuideActiveBackground6 }\n    ];\n    const colorProvider = new BracketPairGuidesClassNames();\n    const indentColors = [\n        { indentColor: editorIndentGuide1, indentColorActive: editorActiveIndentGuide1 },\n        { indentColor: editorIndentGuide2, indentColorActive: editorActiveIndentGuide2 },\n        { indentColor: editorIndentGuide3, indentColorActive: editorActiveIndentGuide3 },\n        { indentColor: editorIndentGuide4, indentColorActive: editorActiveIndentGuide4 },\n        { indentColor: editorIndentGuide5, indentColorActive: editorActiveIndentGuide5 },\n        { indentColor: editorIndentGuide6, indentColorActive: editorActiveIndentGuide6 },\n    ];\n    const colorValues = colors\n        .map(c => {\n        var _a, _b;\n        const bracketColor = theme.getColor(c.bracketColor);\n        const guideColor = theme.getColor(c.guideColor);\n        const guideColorActive = theme.getColor(c.guideColorActive);\n        const effectiveGuideColor = transparentToUndefined((_a = transparentToUndefined(guideColor)) !== null && _a !== void 0 ? _a : bracketColor === null || bracketColor === void 0 ? void 0 : bracketColor.transparent(0.3));\n        const effectiveGuideColorActive = transparentToUndefined((_b = transparentToUndefined(guideColorActive)) !== null && _b !== void 0 ? _b : bracketColor);\n        if (!effectiveGuideColor || !effectiveGuideColorActive) {\n            return undefined;\n        }\n        return {\n            guideColor: effectiveGuideColor,\n            guideColorActive: effectiveGuideColorActive,\n        };\n    })\n        .filter(isDefined);\n    const indentColorValues = indentColors\n        .map(c => {\n        const indentColor = theme.getColor(c.indentColor);\n        const indentColorActive = theme.getColor(c.indentColorActive);\n        const effectiveIndentColor = transparentToUndefined(indentColor);\n        const effectiveIndentColorActive = transparentToUndefined(indentColorActive);\n        if (!effectiveIndentColor || !effectiveIndentColorActive) {\n            return undefined;\n        }\n        return {\n            indentColor: effectiveIndentColor,\n            indentColorActive: effectiveIndentColorActive,\n        };\n    })\n        .filter(isDefined);\n    if (colorValues.length > 0) {\n        for (let level = 0; level < 30; level++) {\n            const colors = colorValues[level % colorValues.length];\n            collector.addRule(`.monaco-editor .${colorProvider.getInlineClassNameOfLevel(level).replace(/ /g, '.')} { --guide-color: ${colors.guideColor}; --guide-color-active: ${colors.guideColorActive}; }`);\n        }\n        collector.addRule(`.monaco-editor .vertical { box-shadow: 1px 0 0 0 var(--guide-color) inset; }`);\n        collector.addRule(`.monaco-editor .horizontal-top { border-top: 1px solid var(--guide-color); }`);\n        collector.addRule(`.monaco-editor .horizontal-bottom { border-bottom: 1px solid var(--guide-color); }`);\n        collector.addRule(`.monaco-editor .vertical.${colorProvider.activeClassName} { box-shadow: 1px 0 0 0 var(--guide-color-active) inset; }`);\n        collector.addRule(`.monaco-editor .horizontal-top.${colorProvider.activeClassName} { border-top: 1px solid var(--guide-color-active); }`);\n        collector.addRule(`.monaco-editor .horizontal-bottom.${colorProvider.activeClassName} { border-bottom: 1px solid var(--guide-color-active); }`);\n    }\n    if (indentColorValues.length > 0) {\n        for (let level = 0; level < 30; level++) {\n            const colors = indentColorValues[level % indentColorValues.length];\n            collector.addRule(`.monaco-editor .lines-content .core-guide-indent.lvl-${level} { --indent-color: ${colors.indentColor}; --indent-color-active: ${colors.indentColorActive}; }`);\n        }\n        collector.addRule(`.monaco-editor .lines-content .core-guide-indent { box-shadow: 1px 0 0 0 var(--indent-color) inset; }`);\n        collector.addRule(`.monaco-editor .lines-content .core-guide-indent.indent-active { box-shadow: 1px 0 0 0 var(--indent-color-active) inset; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class DomReadingContext {\n    get didDomLayout() {\n        return this._didDomLayout;\n    }\n    readClientRect() {\n        if (!this._clientRectRead) {\n            this._clientRectRead = true;\n            const rect = this._domNode.getBoundingClientRect();\n            this.markDidDomLayout();\n            this._clientRectDeltaLeft = rect.left;\n            this._clientRectScale = rect.width / this._domNode.offsetWidth;\n        }\n    }\n    get clientRectDeltaLeft() {\n        if (!this._clientRectRead) {\n            this.readClientRect();\n        }\n        return this._clientRectDeltaLeft;\n    }\n    get clientRectScale() {\n        if (!this._clientRectRead) {\n            this.readClientRect();\n        }\n        return this._clientRectScale;\n    }\n    constructor(_domNode, endNode) {\n        this._domNode = _domNode;\n        this.endNode = endNode;\n        this._didDomLayout = false;\n        this._clientRectDeltaLeft = 0;\n        this._clientRectScale = 1;\n        this._clientRectRead = false;\n    }\n    markDidDomLayout() {\n        this._didDomLayout = true;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../../base/browser/ui/mouseCursor/mouseCursor.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport './viewLines.css';\nimport { applyFontInfo } from '../../config/domFontInfo.js';\nimport { HorizontalPosition, HorizontalRange, LineVisibleRanges } from '../../view/renderingContext.js';\nimport { VisibleLinesCollection } from '../../view/viewLayer.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { DomReadingContext } from './domReadingContext.js';\nimport { ViewLine, ViewLineOptions } from './viewLine.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nclass LastRenderedData {\n    constructor() {\n        this._currentVisibleRange = new Range(1, 1, 1, 1);\n    }\n    getCurrentVisibleRange() {\n        return this._currentVisibleRange;\n    }\n    setCurrentVisibleRange(currentVisibleRange) {\n        this._currentVisibleRange = currentVisibleRange;\n    }\n}\nclass HorizontalRevealRangeRequest {\n    constructor(minimalReveal, lineNumber, startColumn, endColumn, startScrollTop, stopScrollTop, scrollType) {\n        this.minimalReveal = minimalReveal;\n        this.lineNumber = lineNumber;\n        this.startColumn = startColumn;\n        this.endColumn = endColumn;\n        this.startScrollTop = startScrollTop;\n        this.stopScrollTop = stopScrollTop;\n        this.scrollType = scrollType;\n        this.type = 'range';\n        this.minLineNumber = lineNumber;\n        this.maxLineNumber = lineNumber;\n    }\n}\nclass HorizontalRevealSelectionsRequest {\n    constructor(minimalReveal, selections, startScrollTop, stopScrollTop, scrollType) {\n        this.minimalReveal = minimalReveal;\n        this.selections = selections;\n        this.startScrollTop = startScrollTop;\n        this.stopScrollTop = stopScrollTop;\n        this.scrollType = scrollType;\n        this.type = 'selections';\n        let minLineNumber = selections[0].startLineNumber;\n        let maxLineNumber = selections[0].endLineNumber;\n        for (let i = 1, len = selections.length; i < len; i++) {\n            const selection = selections[i];\n            minLineNumber = Math.min(minLineNumber, selection.startLineNumber);\n            maxLineNumber = Math.max(maxLineNumber, selection.endLineNumber);\n        }\n        this.minLineNumber = minLineNumber;\n        this.maxLineNumber = maxLineNumber;\n    }\n}\nexport class ViewLines extends ViewPart {\n    constructor(context, linesContent) {\n        super(context);\n        this._linesContent = linesContent;\n        this._textRangeRestingSpot = document.createElement('div');\n        this._visibleLines = new VisibleLinesCollection(this);\n        this.domNode = this._visibleLines.domNode;\n        const conf = this._context.configuration;\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        const wrappingInfo = options.get(144 /* EditorOption.wrappingInfo */);\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this._isViewportWrapping = wrappingInfo.isViewportWrapping;\n        this._revealHorizontalRightPadding = options.get(99 /* EditorOption.revealHorizontalRightPadding */);\n        this._cursorSurroundingLines = options.get(29 /* EditorOption.cursorSurroundingLines */);\n        this._cursorSurroundingLinesStyle = options.get(30 /* EditorOption.cursorSurroundingLinesStyle */);\n        this._canUseLayerHinting = !options.get(32 /* EditorOption.disableLayerHinting */);\n        this._viewLineOptions = new ViewLineOptions(conf, this._context.theme.type);\n        PartFingerprints.write(this.domNode, 7 /* PartFingerprint.ViewLines */);\n        this.domNode.setClassName(`view-lines ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n        applyFontInfo(this.domNode, fontInfo);\n        // --- width & height\n        this._maxLineWidth = 0;\n        this._asyncUpdateLineWidths = new RunOnceScheduler(() => {\n            this._updateLineWidthsSlow();\n        }, 200);\n        this._asyncCheckMonospaceFontAssumptions = new RunOnceScheduler(() => {\n            this._checkMonospaceFontAssumptions();\n        }, 2000);\n        this._lastRenderedData = new LastRenderedData();\n        this._horizontalRevealRequest = null;\n        // sticky scroll widget\n        this._stickyScrollEnabled = options.get(114 /* EditorOption.stickyScroll */).enabled;\n        this._maxNumberStickyLines = options.get(114 /* EditorOption.stickyScroll */).maxLineCount;\n    }\n    dispose() {\n        this._asyncUpdateLineWidths.dispose();\n        this._asyncCheckMonospaceFontAssumptions.dispose();\n        super.dispose();\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    // ---- begin IVisibleLinesHost\n    createVisibleLine() {\n        return new ViewLine(this._viewLineOptions);\n    }\n    // ---- end IVisibleLinesHost\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        this._visibleLines.onConfigurationChanged(e);\n        if (e.hasChanged(144 /* EditorOption.wrappingInfo */)) {\n            this._maxLineWidth = 0;\n        }\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        const wrappingInfo = options.get(144 /* EditorOption.wrappingInfo */);\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this._isViewportWrapping = wrappingInfo.isViewportWrapping;\n        this._revealHorizontalRightPadding = options.get(99 /* EditorOption.revealHorizontalRightPadding */);\n        this._cursorSurroundingLines = options.get(29 /* EditorOption.cursorSurroundingLines */);\n        this._cursorSurroundingLinesStyle = options.get(30 /* EditorOption.cursorSurroundingLinesStyle */);\n        this._canUseLayerHinting = !options.get(32 /* EditorOption.disableLayerHinting */);\n        // sticky scroll\n        this._stickyScrollEnabled = options.get(114 /* EditorOption.stickyScroll */).enabled;\n        this._maxNumberStickyLines = options.get(114 /* EditorOption.stickyScroll */).maxLineCount;\n        applyFontInfo(this.domNode, fontInfo);\n        this._onOptionsMaybeChanged();\n        if (e.hasChanged(143 /* EditorOption.layoutInfo */)) {\n            this._maxLineWidth = 0;\n        }\n        return true;\n    }\n    _onOptionsMaybeChanged() {\n        const conf = this._context.configuration;\n        const newViewLineOptions = new ViewLineOptions(conf, this._context.theme.type);\n        if (!this._viewLineOptions.equals(newViewLineOptions)) {\n            this._viewLineOptions = newViewLineOptions;\n            const startLineNumber = this._visibleLines.getStartLineNumber();\n            const endLineNumber = this._visibleLines.getEndLineNumber();\n            for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n                const line = this._visibleLines.getVisibleLine(lineNumber);\n                line.onOptionsChanged(this._viewLineOptions);\n            }\n            return true;\n        }\n        return false;\n    }\n    onCursorStateChanged(e) {\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        let r = false;\n        for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n            r = this._visibleLines.getVisibleLine(lineNumber).onSelectionChanged() || r;\n        }\n        return r;\n    }\n    onDecorationsChanged(e) {\n        if (true /*e.inlineDecorationsChanged*/) {\n            const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n            const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n            for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n                this._visibleLines.getVisibleLine(lineNumber).onDecorationsChanged();\n            }\n        }\n        return true;\n    }\n    onFlushed(e) {\n        const shouldRender = this._visibleLines.onFlushed(e);\n        this._maxLineWidth = 0;\n        return shouldRender;\n    }\n    onLinesChanged(e) {\n        return this._visibleLines.onLinesChanged(e);\n    }\n    onLinesDeleted(e) {\n        return this._visibleLines.onLinesDeleted(e);\n    }\n    onLinesInserted(e) {\n        return this._visibleLines.onLinesInserted(e);\n    }\n    onRevealRangeRequest(e) {\n        // Using the future viewport here in order to handle multiple\n        // incoming reveal range requests that might all desire to be animated\n        const desiredScrollTop = this._computeScrollTopToRevealRange(this._context.viewLayout.getFutureViewport(), e.source, e.minimalReveal, e.range, e.selections, e.verticalType);\n        if (desiredScrollTop === -1) {\n            // marker to abort the reveal range request\n            return false;\n        }\n        // validate the new desired scroll top\n        let newScrollPosition = this._context.viewLayout.validateScrollPosition({ scrollTop: desiredScrollTop });\n        if (e.revealHorizontal) {\n            if (e.range && e.range.startLineNumber !== e.range.endLineNumber) {\n                // Two or more lines? => scroll to base (That's how you see most of the two lines)\n                newScrollPosition = {\n                    scrollTop: newScrollPosition.scrollTop,\n                    scrollLeft: 0\n                };\n            }\n            else if (e.range) {\n                // We don't necessarily know the horizontal offset of this range since the line might not be in the view...\n                this._horizontalRevealRequest = new HorizontalRevealRangeRequest(e.minimalReveal, e.range.startLineNumber, e.range.startColumn, e.range.endColumn, this._context.viewLayout.getCurrentScrollTop(), newScrollPosition.scrollTop, e.scrollType);\n            }\n            else if (e.selections && e.selections.length > 0) {\n                this._horizontalRevealRequest = new HorizontalRevealSelectionsRequest(e.minimalReveal, e.selections, this._context.viewLayout.getCurrentScrollTop(), newScrollPosition.scrollTop, e.scrollType);\n            }\n        }\n        else {\n            this._horizontalRevealRequest = null;\n        }\n        const scrollTopDelta = Math.abs(this._context.viewLayout.getCurrentScrollTop() - newScrollPosition.scrollTop);\n        const scrollType = (scrollTopDelta <= this._lineHeight ? 1 /* ScrollType.Immediate */ : e.scrollType);\n        this._context.viewModel.viewLayout.setScrollPosition(newScrollPosition, scrollType);\n        return true;\n    }\n    onScrollChanged(e) {\n        if (this._horizontalRevealRequest && e.scrollLeftChanged) {\n            // cancel any outstanding horizontal reveal request if someone else scrolls horizontally.\n            this._horizontalRevealRequest = null;\n        }\n        if (this._horizontalRevealRequest && e.scrollTopChanged) {\n            const min = Math.min(this._horizontalRevealRequest.startScrollTop, this._horizontalRevealRequest.stopScrollTop);\n            const max = Math.max(this._horizontalRevealRequest.startScrollTop, this._horizontalRevealRequest.stopScrollTop);\n            if (e.scrollTop < min || e.scrollTop > max) {\n                // cancel any outstanding horizontal reveal request if someone else scrolls vertically.\n                this._horizontalRevealRequest = null;\n            }\n        }\n        this.domNode.setWidth(e.scrollWidth);\n        return this._visibleLines.onScrollChanged(e) || true;\n    }\n    onTokensChanged(e) {\n        return this._visibleLines.onTokensChanged(e);\n    }\n    onZonesChanged(e) {\n        this._context.viewModel.viewLayout.setMaxLineWidth(this._maxLineWidth);\n        return this._visibleLines.onZonesChanged(e);\n    }\n    onThemeChanged(e) {\n        return this._onOptionsMaybeChanged();\n    }\n    // ---- end view event handlers\n    // ----------- HELPERS FOR OTHERS\n    getPositionFromDOMInfo(spanNode, offset) {\n        const viewLineDomNode = this._getViewLineDomNode(spanNode);\n        if (viewLineDomNode === null) {\n            // Couldn't find view line node\n            return null;\n        }\n        const lineNumber = this._getLineNumberFor(viewLineDomNode);\n        if (lineNumber === -1) {\n            // Couldn't find view line node\n            return null;\n        }\n        if (lineNumber < 1 || lineNumber > this._context.viewModel.getLineCount()) {\n            // lineNumber is outside range\n            return null;\n        }\n        if (this._context.viewModel.getLineMaxColumn(lineNumber) === 1) {\n            // Line is empty\n            return new Position(lineNumber, 1);\n        }\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        if (lineNumber < rendStartLineNumber || lineNumber > rendEndLineNumber) {\n            // Couldn't find line\n            return null;\n        }\n        let column = this._visibleLines.getVisibleLine(lineNumber).getColumnOfNodeOffset(spanNode, offset);\n        const minColumn = this._context.viewModel.getLineMinColumn(lineNumber);\n        if (column < minColumn) {\n            column = minColumn;\n        }\n        return new Position(lineNumber, column);\n    }\n    _getViewLineDomNode(node) {\n        while (node && node.nodeType === 1) {\n            if (node.className === ViewLine.CLASS_NAME) {\n                return node;\n            }\n            node = node.parentElement;\n        }\n        return null;\n    }\n    /**\n     * @returns the line number of this view line dom node.\n     */\n    _getLineNumberFor(domNode) {\n        const startLineNumber = this._visibleLines.getStartLineNumber();\n        const endLineNumber = this._visibleLines.getEndLineNumber();\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const line = this._visibleLines.getVisibleLine(lineNumber);\n            if (domNode === line.getDomNode()) {\n                return lineNumber;\n            }\n        }\n        return -1;\n    }\n    getLineWidth(lineNumber) {\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        if (lineNumber < rendStartLineNumber || lineNumber > rendEndLineNumber) {\n            // Couldn't find line\n            return -1;\n        }\n        const context = new DomReadingContext(this.domNode.domNode, this._textRangeRestingSpot);\n        const result = this._visibleLines.getVisibleLine(lineNumber).getWidth(context);\n        this._updateLineWidthsSlowIfDomDidLayout(context);\n        return result;\n    }\n    linesVisibleRangesForRange(_range, includeNewLines) {\n        if (this.shouldRender()) {\n            // Cannot read from the DOM because it is dirty\n            // i.e. the model & the dom are out of sync, so I'd be reading something stale\n            return null;\n        }\n        const originalEndLineNumber = _range.endLineNumber;\n        const range = Range.intersectRanges(_range, this._lastRenderedData.getCurrentVisibleRange());\n        if (!range) {\n            return null;\n        }\n        const visibleRanges = [];\n        let visibleRangesLen = 0;\n        const domReadingContext = new DomReadingContext(this.domNode.domNode, this._textRangeRestingSpot);\n        let nextLineModelLineNumber = 0;\n        if (includeNewLines) {\n            nextLineModelLineNumber = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(range.startLineNumber, 1)).lineNumber;\n        }\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        for (let lineNumber = range.startLineNumber; lineNumber <= range.endLineNumber; lineNumber++) {\n            if (lineNumber < rendStartLineNumber || lineNumber > rendEndLineNumber) {\n                continue;\n            }\n            const startColumn = lineNumber === range.startLineNumber ? range.startColumn : 1;\n            const continuesInNextLine = lineNumber !== range.endLineNumber;\n            const endColumn = continuesInNextLine ? this._context.viewModel.getLineMaxColumn(lineNumber) : range.endColumn;\n            const visibleRangesForLine = this._visibleLines.getVisibleLine(lineNumber).getVisibleRangesForRange(lineNumber, startColumn, endColumn, domReadingContext);\n            if (!visibleRangesForLine) {\n                continue;\n            }\n            if (includeNewLines && lineNumber < originalEndLineNumber) {\n                const currentLineModelLineNumber = nextLineModelLineNumber;\n                nextLineModelLineNumber = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(lineNumber + 1, 1)).lineNumber;\n                if (currentLineModelLineNumber !== nextLineModelLineNumber) {\n                    visibleRangesForLine.ranges[visibleRangesForLine.ranges.length - 1].width += this._typicalHalfwidthCharacterWidth;\n                }\n            }\n            visibleRanges[visibleRangesLen++] = new LineVisibleRanges(visibleRangesForLine.outsideRenderedLine, lineNumber, HorizontalRange.from(visibleRangesForLine.ranges), continuesInNextLine);\n        }\n        this._updateLineWidthsSlowIfDomDidLayout(domReadingContext);\n        if (visibleRangesLen === 0) {\n            return null;\n        }\n        return visibleRanges;\n    }\n    _visibleRangesForLineRange(lineNumber, startColumn, endColumn) {\n        if (this.shouldRender()) {\n            // Cannot read from the DOM because it is dirty\n            // i.e. the model & the dom are out of sync, so I'd be reading something stale\n            return null;\n        }\n        if (lineNumber < this._visibleLines.getStartLineNumber() || lineNumber > this._visibleLines.getEndLineNumber()) {\n            return null;\n        }\n        const domReadingContext = new DomReadingContext(this.domNode.domNode, this._textRangeRestingSpot);\n        const result = this._visibleLines.getVisibleLine(lineNumber).getVisibleRangesForRange(lineNumber, startColumn, endColumn, domReadingContext);\n        this._updateLineWidthsSlowIfDomDidLayout(domReadingContext);\n        return result;\n    }\n    visibleRangeForPosition(position) {\n        const visibleRanges = this._visibleRangesForLineRange(position.lineNumber, position.column, position.column);\n        if (!visibleRanges) {\n            return null;\n        }\n        return new HorizontalPosition(visibleRanges.outsideRenderedLine, visibleRanges.ranges[0].left);\n    }\n    /**\n     * Updates the max line width if it is fast to compute.\n     * Returns true if all lines were taken into account.\n     * Returns false if some lines need to be reevaluated (in a slow fashion).\n     */\n    _updateLineWidthsFast() {\n        return this._updateLineWidths(true);\n    }\n    _updateLineWidthsSlow() {\n        this._updateLineWidths(false);\n    }\n    /**\n     * Update the line widths using DOM layout information after someone else\n     * has caused a synchronous layout.\n     */\n    _updateLineWidthsSlowIfDomDidLayout(domReadingContext) {\n        if (!domReadingContext.didDomLayout) {\n            // only proceed if we just did a layout\n            return;\n        }\n        if (this._asyncUpdateLineWidths.isScheduled()) {\n            // reading widths is not scheduled => widths are up-to-date\n            return;\n        }\n        this._asyncUpdateLineWidths.cancel();\n        this._updateLineWidthsSlow();\n    }\n    _updateLineWidths(fast) {\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        let localMaxLineWidth = 1;\n        let allWidthsComputed = true;\n        for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n            const visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n            if (fast && !visibleLine.getWidthIsFast()) {\n                // Cannot compute width in a fast way for this line\n                allWidthsComputed = false;\n                continue;\n            }\n            localMaxLineWidth = Math.max(localMaxLineWidth, visibleLine.getWidth(null));\n        }\n        if (allWidthsComputed && rendStartLineNumber === 1 && rendEndLineNumber === this._context.viewModel.getLineCount()) {\n            // we know the max line width for all the lines\n            this._maxLineWidth = 0;\n        }\n        this._ensureMaxLineWidth(localMaxLineWidth);\n        return allWidthsComputed;\n    }\n    _checkMonospaceFontAssumptions() {\n        // Problems with monospace assumptions are more apparent for longer lines,\n        // as small rounding errors start to sum up, so we will select the longest\n        // line for a closer inspection\n        let longestLineNumber = -1;\n        let longestWidth = -1;\n        const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n        const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n        for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n            const visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n            if (visibleLine.needsMonospaceFontCheck()) {\n                const lineWidth = visibleLine.getWidth(null);\n                if (lineWidth > longestWidth) {\n                    longestWidth = lineWidth;\n                    longestLineNumber = lineNumber;\n                }\n            }\n        }\n        if (longestLineNumber === -1) {\n            return;\n        }\n        if (!this._visibleLines.getVisibleLine(longestLineNumber).monospaceAssumptionsAreValid()) {\n            for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n                const visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n                visibleLine.onMonospaceAssumptionsInvalidated();\n            }\n        }\n    }\n    prepareRender() {\n        throw new Error('Not supported');\n    }\n    render() {\n        throw new Error('Not supported');\n    }\n    renderText(viewportData) {\n        // (1) render lines - ensures lines are in the DOM\n        this._visibleLines.renderLines(viewportData);\n        this._lastRenderedData.setCurrentVisibleRange(viewportData.visibleRange);\n        this.domNode.setWidth(this._context.viewLayout.getScrollWidth());\n        this.domNode.setHeight(Math.min(this._context.viewLayout.getScrollHeight(), 1000000));\n        // (2) compute horizontal scroll position:\n        //  - this must happen after the lines are in the DOM since it might need a line that rendered just now\n        //  - it might change `scrollWidth` and `scrollLeft`\n        if (this._horizontalRevealRequest) {\n            const horizontalRevealRequest = this._horizontalRevealRequest;\n            // Check that we have the line that contains the horizontal range in the viewport\n            if (viewportData.startLineNumber <= horizontalRevealRequest.minLineNumber && horizontalRevealRequest.maxLineNumber <= viewportData.endLineNumber) {\n                this._horizontalRevealRequest = null;\n                // allow `visibleRangesForRange2` to work\n                this.onDidRender();\n                // compute new scroll position\n                const newScrollLeft = this._computeScrollLeftToReveal(horizontalRevealRequest);\n                if (newScrollLeft) {\n                    if (!this._isViewportWrapping) {\n                        // ensure `scrollWidth` is large enough\n                        this._ensureMaxLineWidth(newScrollLeft.maxHorizontalOffset);\n                    }\n                    // set `scrollLeft`\n                    this._context.viewModel.viewLayout.setScrollPosition({\n                        scrollLeft: newScrollLeft.scrollLeft\n                    }, horizontalRevealRequest.scrollType);\n                }\n            }\n        }\n        // Update max line width (not so important, it is just so the horizontal scrollbar doesn't get too small)\n        if (!this._updateLineWidthsFast()) {\n            // Computing the width of some lines would be slow => delay it\n            this._asyncUpdateLineWidths.schedule();\n        }\n        else {\n            this._asyncUpdateLineWidths.cancel();\n        }\n        if (platform.isLinux && !this._asyncCheckMonospaceFontAssumptions.isScheduled()) {\n            const rendStartLineNumber = this._visibleLines.getStartLineNumber();\n            const rendEndLineNumber = this._visibleLines.getEndLineNumber();\n            for (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n                const visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n                if (visibleLine.needsMonospaceFontCheck()) {\n                    this._asyncCheckMonospaceFontAssumptions.schedule();\n                    break;\n                }\n            }\n        }\n        // (3) handle scrolling\n        this._linesContent.setLayerHinting(this._canUseLayerHinting);\n        this._linesContent.setContain('strict');\n        const adjustedScrollTop = this._context.viewLayout.getCurrentScrollTop() - viewportData.bigNumbersDelta;\n        this._linesContent.setTop(-adjustedScrollTop);\n        this._linesContent.setLeft(-this._context.viewLayout.getCurrentScrollLeft());\n    }\n    // --- width\n    _ensureMaxLineWidth(lineWidth) {\n        const iLineWidth = Math.ceil(lineWidth);\n        if (this._maxLineWidth < iLineWidth) {\n            this._maxLineWidth = iLineWidth;\n            this._context.viewModel.viewLayout.setMaxLineWidth(this._maxLineWidth);\n        }\n    }\n    _computeScrollTopToRevealRange(viewport, source, minimalReveal, range, selections, verticalType) {\n        const viewportStartY = viewport.top;\n        const viewportHeight = viewport.height;\n        const viewportEndY = viewportStartY + viewportHeight;\n        let boxIsSingleRange;\n        let boxStartY;\n        let boxEndY;\n        if (selections && selections.length > 0) {\n            let minLineNumber = selections[0].startLineNumber;\n            let maxLineNumber = selections[0].endLineNumber;\n            for (let i = 1, len = selections.length; i < len; i++) {\n                const selection = selections[i];\n                minLineNumber = Math.min(minLineNumber, selection.startLineNumber);\n                maxLineNumber = Math.max(maxLineNumber, selection.endLineNumber);\n            }\n            boxIsSingleRange = false;\n            boxStartY = this._context.viewLayout.getVerticalOffsetForLineNumber(minLineNumber);\n            boxEndY = this._context.viewLayout.getVerticalOffsetForLineNumber(maxLineNumber) + this._lineHeight;\n        }\n        else if (range) {\n            boxIsSingleRange = true;\n            boxStartY = this._context.viewLayout.getVerticalOffsetForLineNumber(range.startLineNumber);\n            boxEndY = this._context.viewLayout.getVerticalOffsetForLineNumber(range.endLineNumber) + this._lineHeight;\n        }\n        else {\n            return -1;\n        }\n        const shouldIgnoreScrollOff = (source === 'mouse' || minimalReveal) && this._cursorSurroundingLinesStyle === 'default';\n        let paddingTop = 0;\n        let paddingBottom = 0;\n        if (!shouldIgnoreScrollOff) {\n            const context = Math.min((viewportHeight / this._lineHeight) / 2, this._cursorSurroundingLines);\n            if (this._stickyScrollEnabled) {\n                paddingTop = Math.max(context, this._maxNumberStickyLines) * this._lineHeight;\n            }\n            else {\n                paddingTop = context * this._lineHeight;\n            }\n            paddingBottom = Math.max(0, (context - 1)) * this._lineHeight;\n        }\n        else {\n            if (!minimalReveal) {\n                // Reveal one more line above (this case is hit when dragging)\n                paddingTop = this._lineHeight;\n            }\n        }\n        if (!minimalReveal) {\n            if (verticalType === 0 /* viewEvents.VerticalRevealType.Simple */ || verticalType === 4 /* viewEvents.VerticalRevealType.Bottom */) {\n                // Reveal one line more when the last line would be covered by the scrollbar - arrow down case or revealing a line explicitly at bottom\n                paddingBottom += this._lineHeight;\n            }\n        }\n        boxStartY -= paddingTop;\n        boxEndY += paddingBottom;\n        let newScrollTop;\n        if (boxEndY - boxStartY > viewportHeight) {\n            // the box is larger than the viewport ... scroll to its top\n            if (!boxIsSingleRange) {\n                // do not reveal multiple cursors if there are more than fit the viewport\n                return -1;\n            }\n            newScrollTop = boxStartY;\n        }\n        else if (verticalType === 5 /* viewEvents.VerticalRevealType.NearTop */ || verticalType === 6 /* viewEvents.VerticalRevealType.NearTopIfOutsideViewport */) {\n            if (verticalType === 6 /* viewEvents.VerticalRevealType.NearTopIfOutsideViewport */ && viewportStartY <= boxStartY && boxEndY <= viewportEndY) {\n                // Box is already in the viewport... do nothing\n                newScrollTop = viewportStartY;\n            }\n            else {\n                // We want a gap that is 20% of the viewport, but with a minimum of 5 lines\n                const desiredGapAbove = Math.max(5 * this._lineHeight, viewportHeight * 0.2);\n                // Try to scroll just above the box with the desired gap\n                const desiredScrollTop = boxStartY - desiredGapAbove;\n                // But ensure that the box is not pushed out of viewport\n                const minScrollTop = boxEndY - viewportHeight;\n                newScrollTop = Math.max(minScrollTop, desiredScrollTop);\n            }\n        }\n        else if (verticalType === 1 /* viewEvents.VerticalRevealType.Center */ || verticalType === 2 /* viewEvents.VerticalRevealType.CenterIfOutsideViewport */) {\n            if (verticalType === 2 /* viewEvents.VerticalRevealType.CenterIfOutsideViewport */ && viewportStartY <= boxStartY && boxEndY <= viewportEndY) {\n                // Box is already in the viewport... do nothing\n                newScrollTop = viewportStartY;\n            }\n            else {\n                // Box is outside the viewport... center it\n                const boxMiddleY = (boxStartY + boxEndY) / 2;\n                newScrollTop = Math.max(0, boxMiddleY - viewportHeight / 2);\n            }\n        }\n        else {\n            newScrollTop = this._computeMinimumScrolling(viewportStartY, viewportEndY, boxStartY, boxEndY, verticalType === 3 /* viewEvents.VerticalRevealType.Top */, verticalType === 4 /* viewEvents.VerticalRevealType.Bottom */);\n        }\n        return newScrollTop;\n    }\n    _computeScrollLeftToReveal(horizontalRevealRequest) {\n        const viewport = this._context.viewLayout.getCurrentViewport();\n        const layoutInfo = this._context.configuration.options.get(143 /* EditorOption.layoutInfo */);\n        const viewportStartX = viewport.left;\n        const viewportEndX = viewportStartX + viewport.width - layoutInfo.verticalScrollbarWidth;\n        let boxStartX = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n        let boxEndX = 0;\n        if (horizontalRevealRequest.type === 'range') {\n            const visibleRanges = this._visibleRangesForLineRange(horizontalRevealRequest.lineNumber, horizontalRevealRequest.startColumn, horizontalRevealRequest.endColumn);\n            if (!visibleRanges) {\n                return null;\n            }\n            for (const visibleRange of visibleRanges.ranges) {\n                boxStartX = Math.min(boxStartX, Math.round(visibleRange.left));\n                boxEndX = Math.max(boxEndX, Math.round(visibleRange.left + visibleRange.width));\n            }\n        }\n        else {\n            for (const selection of horizontalRevealRequest.selections) {\n                if (selection.startLineNumber !== selection.endLineNumber) {\n                    return null;\n                }\n                const visibleRanges = this._visibleRangesForLineRange(selection.startLineNumber, selection.startColumn, selection.endColumn);\n                if (!visibleRanges) {\n                    return null;\n                }\n                for (const visibleRange of visibleRanges.ranges) {\n                    boxStartX = Math.min(boxStartX, Math.round(visibleRange.left));\n                    boxEndX = Math.max(boxEndX, Math.round(visibleRange.left + visibleRange.width));\n                }\n            }\n        }\n        if (!horizontalRevealRequest.minimalReveal) {\n            boxStartX = Math.max(0, boxStartX - ViewLines.HORIZONTAL_EXTRA_PX);\n            boxEndX += this._revealHorizontalRightPadding;\n        }\n        if (horizontalRevealRequest.type === 'selections' && boxEndX - boxStartX > viewport.width) {\n            return null;\n        }\n        const newScrollLeft = this._computeMinimumScrolling(viewportStartX, viewportEndX, boxStartX, boxEndX);\n        return {\n            scrollLeft: newScrollLeft,\n            maxHorizontalOffset: boxEndX\n        };\n    }\n    _computeMinimumScrolling(viewportStart, viewportEnd, boxStart, boxEnd, revealAtStart, revealAtEnd) {\n        viewportStart = viewportStart | 0;\n        viewportEnd = viewportEnd | 0;\n        boxStart = boxStart | 0;\n        boxEnd = boxEnd | 0;\n        revealAtStart = !!revealAtStart;\n        revealAtEnd = !!revealAtEnd;\n        const viewportLength = viewportEnd - viewportStart;\n        const boxLength = boxEnd - boxStart;\n        if (boxLength < viewportLength) {\n            // The box would fit in the viewport\n            if (revealAtStart) {\n                return boxStart;\n            }\n            if (revealAtEnd) {\n                return Math.max(0, boxEnd - viewportLength);\n            }\n            if (boxStart < viewportStart) {\n                // The box is above the viewport\n                return boxStart;\n            }\n            else if (boxEnd > viewportEnd) {\n                // The box is below the viewport\n                return Math.max(0, boxEnd - viewportLength);\n            }\n        }\n        else {\n            // The box would not fit in the viewport\n            // Reveal the beginning of the box\n            return boxStart;\n        }\n        return viewportStart;\n    }\n}\n/**\n * Adds this amount of pixels to the right of lines (no-one wants to type near the edge of the viewport)\n */\nViewLines.HORIZONTAL_EXTRA_PX = 30;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ArrayQueue } from '../../../../base/common/arrays.js';\nimport './glyphMargin.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { Range } from '../../../common/core/range.js';\n/**\n * Represents a decoration that should be shown along the lines from `startLineNumber` to `endLineNumber`.\n * This can end up producing multiple `LineDecorationToRender`.\n */\nexport class DecorationToRender {\n    constructor(startLineNumber, endLineNumber, className, zIndex) {\n        this._decorationToRenderBrand = undefined;\n        this.startLineNumber = +startLineNumber;\n        this.endLineNumber = +endLineNumber;\n        this.className = String(className);\n        this.zIndex = zIndex !== null && zIndex !== void 0 ? zIndex : 0;\n    }\n}\n/**\n * A decoration that should be shown along a line.\n */\nexport class LineDecorationToRender {\n    constructor(className, zIndex) {\n        this.className = className;\n        this.zIndex = zIndex;\n    }\n}\n/**\n * Decorations to render on a visible line.\n */\nexport class VisibleLineDecorationsToRender {\n    constructor() {\n        this.decorations = [];\n    }\n    add(decoration) {\n        this.decorations.push(decoration);\n    }\n    getDecorations() {\n        return this.decorations;\n    }\n}\nexport class DedupOverlay extends DynamicViewOverlay {\n    /**\n     * Returns an array with an element for each visible line number.\n     */\n    _render(visibleStartLineNumber, visibleEndLineNumber, decorations) {\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            output[lineIndex] = new VisibleLineDecorationsToRender();\n        }\n        if (decorations.length === 0) {\n            return output;\n        }\n        // Sort decorations by className, then by startLineNumber and then by endLineNumber\n        decorations.sort((a, b) => {\n            if (a.className === b.className) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.endLineNumber - b.endLineNumber;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return (a.className < b.className ? -1 : 1);\n        });\n        let prevClassName = null;\n        let prevEndLineIndex = 0;\n        for (let i = 0, len = decorations.length; i < len; i++) {\n            const d = decorations[i];\n            const className = d.className;\n            const zIndex = d.zIndex;\n            let startLineIndex = Math.max(d.startLineNumber, visibleStartLineNumber) - visibleStartLineNumber;\n            const endLineIndex = Math.min(d.endLineNumber, visibleEndLineNumber) - visibleStartLineNumber;\n            if (prevClassName === className) {\n                // Here we avoid rendering the same className multiple times on the same line\n                startLineIndex = Math.max(prevEndLineIndex + 1, startLineIndex);\n                prevEndLineIndex = Math.max(prevEndLineIndex, endLineIndex);\n            }\n            else {\n                prevClassName = className;\n                prevEndLineIndex = endLineIndex;\n            }\n            for (let i = startLineIndex; i <= prevEndLineIndex; i++) {\n                output[i].add(new LineDecorationToRender(className, zIndex));\n            }\n        }\n        return output;\n    }\n}\nexport class GlyphMarginWidgets extends ViewPart {\n    constructor(context) {\n        super(context);\n        this._widgets = {};\n        this._context = context;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setClassName('glyph-margin-widgets');\n        this.domNode.setPosition('absolute');\n        this.domNode.setTop(0);\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._glyphMargin = options.get(57 /* EditorOption.glyphMargin */);\n        this._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n        this._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n        this._glyphMarginDecorationLaneCount = layoutInfo.glyphMarginDecorationLaneCount;\n        this._managedDomNodes = [];\n        this._decorationGlyphsToRender = [];\n    }\n    dispose() {\n        this._managedDomNodes = [];\n        this._decorationGlyphsToRender = [];\n        this._widgets = {};\n        super.dispose();\n    }\n    getWidgets() {\n        return Object.values(this._widgets);\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._glyphMargin = options.get(57 /* EditorOption.glyphMargin */);\n        this._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n        this._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n        this._glyphMarginDecorationLaneCount = layoutInfo.glyphMarginDecorationLaneCount;\n        return true;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    // --- begin widget management\n    addWidget(widget) {\n        const domNode = createFastDomNode(widget.getDomNode());\n        this._widgets[widget.getId()] = {\n            widget: widget,\n            preference: widget.getPosition(),\n            domNode: domNode,\n            renderInfo: null\n        };\n        domNode.setPosition('absolute');\n        domNode.setDisplay('none');\n        domNode.setAttribute('widgetId', widget.getId());\n        this.domNode.appendChild(domNode);\n        this.setShouldRender();\n    }\n    setWidgetPosition(widget, preference) {\n        const myWidget = this._widgets[widget.getId()];\n        if (myWidget.preference.lane === preference.lane\n            && myWidget.preference.zIndex === preference.zIndex\n            && Range.equalsRange(myWidget.preference.range, preference.range)) {\n            return false;\n        }\n        myWidget.preference = preference;\n        this.setShouldRender();\n        return true;\n    }\n    removeWidget(widget) {\n        var _a;\n        const widgetId = widget.getId();\n        if (this._widgets[widgetId]) {\n            const widgetData = this._widgets[widgetId];\n            const domNode = widgetData.domNode.domNode;\n            delete this._widgets[widgetId];\n            (_a = domNode.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(domNode);\n            this.setShouldRender();\n        }\n    }\n    // --- end widget management\n    _collectDecorationBasedGlyphRenderRequest(ctx, requests) {\n        var _a, _b, _c;\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const decorations = ctx.getDecorationsInViewport();\n        for (const d of decorations) {\n            const glyphMarginClassName = d.options.glyphMarginClassName;\n            if (!glyphMarginClassName) {\n                continue;\n            }\n            const startLineNumber = Math.max(d.range.startLineNumber, visibleStartLineNumber);\n            const endLineNumber = Math.min(d.range.endLineNumber, visibleEndLineNumber);\n            const lane = Math.min((_b = (_a = d.options.glyphMargin) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : 1, this._glyphMarginDecorationLaneCount);\n            const zIndex = (_c = d.options.zIndex) !== null && _c !== void 0 ? _c : 0;\n            for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n                requests.push(new DecorationBasedGlyphRenderRequest(lineNumber, lane, zIndex, glyphMarginClassName));\n            }\n        }\n    }\n    _collectWidgetBasedGlyphRenderRequest(ctx, requests) {\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        for (const widget of Object.values(this._widgets)) {\n            const range = widget.preference.range;\n            if (range.endLineNumber < visibleStartLineNumber || range.startLineNumber > visibleEndLineNumber) {\n                // The widget is not in the viewport\n                continue;\n            }\n            // The widget is in the viewport, find a good line for it\n            const widgetLineNumber = Math.max(range.startLineNumber, visibleStartLineNumber);\n            const lane = Math.min(widget.preference.lane, this._glyphMarginDecorationLaneCount);\n            requests.push(new WidgetBasedGlyphRenderRequest(widgetLineNumber, lane, widget.preference.zIndex, widget));\n        }\n    }\n    _collectSortedGlyphRenderRequests(ctx) {\n        const requests = [];\n        this._collectDecorationBasedGlyphRenderRequest(ctx, requests);\n        this._collectWidgetBasedGlyphRenderRequest(ctx, requests);\n        // sort requests by lineNumber ASC, lane  ASC, zIndex DESC, type DESC (widgets first), className ASC\n        // don't change this sort unless you understand `prepareRender` below.\n        requests.sort((a, b) => {\n            if (a.lineNumber === b.lineNumber) {\n                if (a.lane === b.lane) {\n                    if (a.zIndex === b.zIndex) {\n                        if (b.type === a.type) {\n                            if (a.type === 0 /* GlyphRenderRequestType.Decoration */ && b.type === 0 /* GlyphRenderRequestType.Decoration */) {\n                                return (a.className < b.className ? -1 : 1);\n                            }\n                            return 0;\n                        }\n                        return b.type - a.type;\n                    }\n                    return b.zIndex - a.zIndex;\n                }\n                return a.lane - b.lane;\n            }\n            return a.lineNumber - b.lineNumber;\n        });\n        return requests;\n    }\n    /**\n     * Will store render information in each widget's renderInfo and in `_decorationGlyphsToRender`.\n     */\n    prepareRender(ctx) {\n        if (!this._glyphMargin) {\n            this._decorationGlyphsToRender = [];\n            return;\n        }\n        for (const widget of Object.values(this._widgets)) {\n            widget.renderInfo = null;\n        }\n        const requests = new ArrayQueue(this._collectSortedGlyphRenderRequests(ctx));\n        const decorationGlyphsToRender = [];\n        while (requests.length > 0) {\n            const first = requests.peek();\n            if (!first) {\n                // not possible\n                break;\n            }\n            // Requests are sorted by lineNumber and lane, so we read all requests for this particular location\n            const requestsAtLocation = requests.takeWhile((el) => el.lineNumber === first.lineNumber && el.lane === first.lane);\n            if (!requestsAtLocation || requestsAtLocation.length === 0) {\n                // not possible\n                break;\n            }\n            const winner = requestsAtLocation[0];\n            if (winner.type === 0 /* GlyphRenderRequestType.Decoration */) {\n                // combine all decorations with the same z-index\n                const classNames = [];\n                // requests are sorted by zIndex, type, and className so we can dedup className by looking at the previous one\n                for (const request of requestsAtLocation) {\n                    if (request.zIndex !== winner.zIndex || request.type !== winner.type) {\n                        break;\n                    }\n                    if (classNames.length === 0 || classNames[classNames.length - 1] !== request.className) {\n                        classNames.push(request.className);\n                    }\n                }\n                decorationGlyphsToRender.push(winner.accept(classNames.join(' '))); // TODO@joyceerhl Implement overflow for remaining decorations\n            }\n            else {\n                // widgets cannot be combined\n                winner.widget.renderInfo = {\n                    lineNumber: winner.lineNumber,\n                    lane: winner.lane,\n                };\n            }\n        }\n        this._decorationGlyphsToRender = decorationGlyphsToRender;\n    }\n    render(ctx) {\n        if (!this._glyphMargin) {\n            for (const widget of Object.values(this._widgets)) {\n                widget.domNode.setDisplay('none');\n            }\n            while (this._managedDomNodes.length > 0) {\n                const domNode = this._managedDomNodes.pop();\n                domNode === null || domNode === void 0 ? void 0 : domNode.domNode.remove();\n            }\n            return;\n        }\n        const width = (Math.round(this._glyphMarginWidth / this._glyphMarginDecorationLaneCount));\n        // Render widgets\n        for (const widget of Object.values(this._widgets)) {\n            if (!widget.renderInfo) {\n                // this widget is not visible\n                widget.domNode.setDisplay('none');\n            }\n            else {\n                const top = ctx.viewportData.relativeVerticalOffset[widget.renderInfo.lineNumber - ctx.viewportData.startLineNumber];\n                const left = this._glyphMarginLeft + (widget.renderInfo.lane - 1) * this._lineHeight;\n                widget.domNode.setDisplay('block');\n                widget.domNode.setTop(top);\n                widget.domNode.setLeft(left);\n                widget.domNode.setWidth(width);\n                widget.domNode.setHeight(this._lineHeight);\n            }\n        }\n        // Render decorations, reusing previous dom nodes as possible\n        for (let i = 0; i < this._decorationGlyphsToRender.length; i++) {\n            const dec = this._decorationGlyphsToRender[i];\n            const top = ctx.viewportData.relativeVerticalOffset[dec.lineNumber - ctx.viewportData.startLineNumber];\n            const left = this._glyphMarginLeft + (dec.lane - 1) * this._lineHeight;\n            let domNode;\n            if (i < this._managedDomNodes.length) {\n                domNode = this._managedDomNodes[i];\n            }\n            else {\n                domNode = createFastDomNode(document.createElement('div'));\n                this._managedDomNodes.push(domNode);\n                this.domNode.appendChild(domNode);\n            }\n            domNode.setClassName(`cgmr codicon ` + dec.combinedClassName);\n            domNode.setPosition(`absolute`);\n            domNode.setTop(top);\n            domNode.setLeft(left);\n            domNode.setWidth(width);\n            domNode.setHeight(this._lineHeight);\n        }\n        // remove extra dom nodes\n        while (this._managedDomNodes.length > this._decorationGlyphsToRender.length) {\n            const domNode = this._managedDomNodes.pop();\n            domNode === null || domNode === void 0 ? void 0 : domNode.domNode.remove();\n        }\n    }\n}\n/**\n * A request to render a decoration in the glyph margin at a certain location.\n */\nclass DecorationBasedGlyphRenderRequest {\n    constructor(lineNumber, lane, zIndex, className) {\n        this.lineNumber = lineNumber;\n        this.lane = lane;\n        this.zIndex = zIndex;\n        this.className = className;\n        this.type = 0 /* GlyphRenderRequestType.Decoration */;\n    }\n    accept(combinedClassName) {\n        return new DecorationBasedGlyph(this.lineNumber, this.lane, combinedClassName);\n    }\n}\n/**\n * A request to render a widget in the glyph margin at a certain location.\n */\nclass WidgetBasedGlyphRenderRequest {\n    constructor(lineNumber, lane, zIndex, widget) {\n        this.lineNumber = lineNumber;\n        this.lane = lane;\n        this.zIndex = zIndex;\n        this.widget = widget;\n        this.type = 1 /* GlyphRenderRequestType.Widget */;\n    }\n}\nclass DecorationBasedGlyph {\n    constructor(lineNumber, lane, combinedClassName) {\n        this.lineNumber = lineNumber;\n        this.lane = lane;\n        this.combinedClassName = combinedClassName;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './linesDecorations.css';\nimport { DecorationToRender, DedupOverlay } from '../glyphMargin/glyphMargin.js';\nexport class LinesDecorationsOverlay extends DedupOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this._decorationsLeft = layoutInfo.decorationsLeft;\n        this._decorationsWidth = layoutInfo.decorationsWidth;\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this._decorationsLeft = layoutInfo.decorationsLeft;\n        this._decorationsWidth = layoutInfo.decorationsWidth;\n        return true;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    _getDecorations(ctx) {\n        const decorations = ctx.getDecorationsInViewport();\n        const r = [];\n        let rLen = 0;\n        for (let i = 0, len = decorations.length; i < len; i++) {\n            const d = decorations[i];\n            const linesDecorationsClassName = d.options.linesDecorationsClassName;\n            const zIndex = d.options.zIndex;\n            if (linesDecorationsClassName) {\n                r[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.endLineNumber, linesDecorationsClassName, zIndex);\n            }\n            const firstLineDecorationClassName = d.options.firstLineDecorationClassName;\n            if (firstLineDecorationClassName) {\n                r[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.startLineNumber, firstLineDecorationClassName, zIndex);\n            }\n        }\n        return r;\n    }\n    prepareRender(ctx) {\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const toRender = this._render(visibleStartLineNumber, visibleEndLineNumber, this._getDecorations(ctx));\n        const left = this._decorationsLeft.toString();\n        const width = this._decorationsWidth.toString();\n        const common = '\" style=\"left:' + left + 'px;width:' + width + 'px;\"></div>';\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const decorations = toRender[lineIndex].getDecorations();\n            let lineOutput = '';\n            for (const decoration of decorations) {\n                lineOutput += '<div class=\"cldr ' + decoration.className + common;\n            }\n            output[lineIndex] = lineOutput;\n        }\n        this._renderResult = output;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        return this._renderResult[lineNumber - startLineNumber];\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './marginDecorations.css';\nimport { DecorationToRender, DedupOverlay } from '../glyphMargin/glyphMargin.js';\nexport class MarginViewLineDecorationsOverlay extends DedupOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        return true;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    _getDecorations(ctx) {\n        const decorations = ctx.getDecorationsInViewport();\n        const r = [];\n        let rLen = 0;\n        for (let i = 0, len = decorations.length; i < len; i++) {\n            const d = decorations[i];\n            const marginClassName = d.options.marginClassName;\n            const zIndex = d.options.zIndex;\n            if (marginClassName) {\n                r[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.endLineNumber, marginClassName, zIndex);\n            }\n        }\n        return r;\n    }\n    prepareRender(ctx) {\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const toRender = this._render(visibleStartLineNumber, visibleEndLineNumber, this._getDecorations(ctx));\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const decorations = toRender[lineIndex].getDecorations();\n            let lineOutput = '';\n            for (const decoration of decorations) {\n                lineOutput += '<div class=\"cmdr ' + decoration.className + '\" style=\"\"></div>';\n            }\n            output[lineIndex] = lineOutput;\n        }\n        this._renderResult = output;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        return this._renderResult[lineNumber - startLineNumber];\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const allCharCodes = (() => {\n    const v = [];\n    for (let i = 32 /* Constants.START_CH_CODE */; i <= 126 /* Constants.END_CH_CODE */; i++) {\n        v.push(i);\n    }\n    v.push(65533 /* Constants.UNKNOWN_CODE */);\n    return v;\n})();\nexport const getCharIndex = (chCode, fontScale) => {\n    chCode -= 32 /* Constants.START_CH_CODE */;\n    if (chCode < 0 || chCode > 96 /* Constants.CHAR_COUNT */) {\n        if (fontScale <= 2) {\n            // for smaller scales, we can get away with using any ASCII character...\n            return (chCode + 96 /* Constants.CHAR_COUNT */) % 96 /* Constants.CHAR_COUNT */;\n        }\n        return 96 /* Constants.CHAR_COUNT */ - 1; // unknown symbol\n    }\n    return chCode;\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getCharIndex } from './minimapCharSheet.js';\nimport { toUint8 } from '../../../../base/common/uint.js';\nexport class MinimapCharRenderer {\n    constructor(charData, scale) {\n        this.scale = scale;\n        this._minimapCharRendererBrand = undefined;\n        this.charDataNormal = MinimapCharRenderer.soften(charData, 12 / 15);\n        this.charDataLight = MinimapCharRenderer.soften(charData, 50 / 60);\n    }\n    static soften(input, ratio) {\n        const result = new Uint8ClampedArray(input.length);\n        for (let i = 0, len = input.length; i < len; i++) {\n            result[i] = toUint8(input[i] * ratio);\n        }\n        return result;\n    }\n    renderChar(target, dx, dy, chCode, color, foregroundAlpha, backgroundColor, backgroundAlpha, fontScale, useLighterFont, force1pxHeight) {\n        const charWidth = 1 /* Constants.BASE_CHAR_WIDTH */ * this.scale;\n        const charHeight = 2 /* Constants.BASE_CHAR_HEIGHT */ * this.scale;\n        const renderHeight = (force1pxHeight ? 1 : charHeight);\n        if (dx + charWidth > target.width || dy + renderHeight > target.height) {\n            console.warn('bad render request outside image data');\n            return;\n        }\n        const charData = useLighterFont ? this.charDataLight : this.charDataNormal;\n        const charIndex = getCharIndex(chCode, fontScale);\n        const destWidth = target.width * 4 /* Constants.RGBA_CHANNELS_CNT */;\n        const backgroundR = backgroundColor.r;\n        const backgroundG = backgroundColor.g;\n        const backgroundB = backgroundColor.b;\n        const deltaR = color.r - backgroundR;\n        const deltaG = color.g - backgroundG;\n        const deltaB = color.b - backgroundB;\n        const destAlpha = Math.max(foregroundAlpha, backgroundAlpha);\n        const dest = target.data;\n        let sourceOffset = charIndex * charWidth * charHeight;\n        let row = dy * destWidth + dx * 4 /* Constants.RGBA_CHANNELS_CNT */;\n        for (let y = 0; y < renderHeight; y++) {\n            let column = row;\n            for (let x = 0; x < charWidth; x++) {\n                const c = (charData[sourceOffset++] / 255) * (foregroundAlpha / 255);\n                dest[column++] = backgroundR + deltaR * c;\n                dest[column++] = backgroundG + deltaG * c;\n                dest[column++] = backgroundB + deltaB * c;\n                dest[column++] = destAlpha;\n            }\n            row += destWidth;\n        }\n    }\n    blockRenderChar(target, dx, dy, color, foregroundAlpha, backgroundColor, backgroundAlpha, force1pxHeight) {\n        const charWidth = 1 /* Constants.BASE_CHAR_WIDTH */ * this.scale;\n        const charHeight = 2 /* Constants.BASE_CHAR_HEIGHT */ * this.scale;\n        const renderHeight = (force1pxHeight ? 1 : charHeight);\n        if (dx + charWidth > target.width || dy + renderHeight > target.height) {\n            console.warn('bad render request outside image data');\n            return;\n        }\n        const destWidth = target.width * 4 /* Constants.RGBA_CHANNELS_CNT */;\n        const c = 0.5 * (foregroundAlpha / 255);\n        const backgroundR = backgroundColor.r;\n        const backgroundG = backgroundColor.g;\n        const backgroundB = backgroundColor.b;\n        const deltaR = color.r - backgroundR;\n        const deltaG = color.g - backgroundG;\n        const deltaB = color.b - backgroundB;\n        const colorR = backgroundR + deltaR * c;\n        const colorG = backgroundG + deltaG * c;\n        const colorB = backgroundB + deltaB * c;\n        const destAlpha = Math.max(foregroundAlpha, backgroundAlpha);\n        const dest = target.data;\n        let row = dy * destWidth + dx * 4 /* Constants.RGBA_CHANNELS_CNT */;\n        for (let y = 0; y < renderHeight; y++) {\n            let column = row;\n            for (let x = 0; x < charWidth; x++) {\n                dest[column++] = colorR;\n                dest[column++] = colorG;\n                dest[column++] = colorB;\n                dest[column++] = destAlpha;\n            }\n            row += destWidth;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createSingleCallFunction } from '../../../../base/common/functional.js';\nconst charTable = {\n    '0': 0,\n    '1': 1,\n    '2': 2,\n    '3': 3,\n    '4': 4,\n    '5': 5,\n    '6': 6,\n    '7': 7,\n    '8': 8,\n    '9': 9,\n    A: 10,\n    B: 11,\n    C: 12,\n    D: 13,\n    E: 14,\n    F: 15\n};\nconst decodeData = (str) => {\n    const output = new Uint8ClampedArray(str.length / 2);\n    for (let i = 0; i < str.length; i += 2) {\n        output[i >> 1] = (charTable[str[i]] << 4) | (charTable[str[i + 1]] & 0xF);\n    }\n    return output;\n};\n/*\nconst encodeData = (data: Uint8ClampedArray, length: string) => {\n    const chars = '0123456789ABCDEF';\n    let output = '';\n    for (let i = 0; i < data.length; i++) {\n        output += chars[data[i] >> 4] + chars[data[i] & 0xf];\n    }\n    return output;\n};\n*/\n/**\n * Map of minimap scales to prebaked sample data at those scales. We don't\n * sample much larger data, because then font family becomes visible, which\n * is use-configurable.\n */\nexport const prebakedMiniMaps = {\n    1: createSingleCallFunction(() => decodeData('0000511D6300CF609C709645A78432005642574171487021003C451900274D35D762755E8B629C5BA856AF57BA649530C167D1512A272A3F6038604460398526BCA2A968DB6F8957C768BE5FBE2FB467CF5D8D5B795DC7625B5DFF50DE64C466DB2FC47CD860A65E9A2EB96CB54CE06DA763AB2EA26860524D3763536601005116008177A8705E53AB738E6A982F88BAA35B5F5B626D9C636B449B737E5B7B678598869A662F6B5B8542706C704C80736A607578685B70594A49715A4522E792')),\n    2: createSingleCallFunction(() => decodeDatan};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { MinimapCharRenderer } from './minimapCharRenderer.js';\nimport { allCharCodes } from './minimapCharSheet.js';\nimport { prebakedMiniMaps } from './minimapPreBaked.js';\nimport { toUint8 } from '../../../../base/common/uint.js';\n/**\n * Creates character renderers. It takes a 'scale' that determines how large\n * characters should be drawn. Using this, it draws data into a canvas and\n * then downsamples the characters as necessary for the current display.\n * This makes rendering more efficient, rather than drawing a full (tiny)\n * font, or downsampling in real-time.\n */\nexport class MinimapCharRendererFactory {\n    /**\n     * Creates a new character renderer factory with the given scale.\n     */\n    static create(scale, fontFamily) {\n        // renderers are immutable. By default we'll 'create' a new minimap\n        // character renderer whenever we switch editors, no need to do extra work.\n        if (this.lastCreated && scale === this.lastCreated.scale && fontFamily === this.lastFontFamily) {\n            return this.lastCreated;\n        }\n        let factory;\n        if (prebakedMiniMaps[scale]) {\n            factory = new MinimapCharRenderer(prebakedMiniMaps[scale](), scale);\n        }\n        else {\n            factory = MinimapCharRendererFactory.createFromSampleData(MinimapCharRendererFactory.createSampleData(fontFamily).data, scale);\n        }\n        this.lastFontFamily = fontFamily;\n        this.lastCreated = factory;\n        return factory;\n    }\n    /**\n     * Creates the font sample data, writing to a canvas.\n     */\n    static createSampleData(fontFamily) {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.style.height = `${16 /* Constants.SAMPLED_CHAR_HEIGHT */}px`;\n        canvas.height = 16 /* Constants.SAMPLED_CHAR_HEIGHT */;\n        canvas.width = 96 /* Constants.CHAR_COUNT */ * 10 /* Constants.SAMPLED_CHAR_WIDTH */;\n        canvas.style.width = 96 /* Constants.CHAR_COUNT */ * 10 /* Constants.SAMPLED_CHAR_WIDTH */ + 'px';\n        ctx.fillStyle = '#ffffff';\n        ctx.font = `bold ${16 /* Constants.SAMPLED_CHAR_HEIGHT */}px ${fontFamily}`;\n        ctx.textBaseline = 'middle';\n        let x = 0;\n        for (const code of allCharCodes) {\n            ctx.fillText(String.fromCharCode(code), x, 16 /* Constants.SAMPLED_CHAR_HEIGHT */ / 2);\n            x += 10 /* Constants.SAMPLED_CHAR_WIDTH */;\n        }\n        return ctx.getImageData(0, 0, 96 /* Constants.CHAR_COUNT */ * 10 /* Constants.SAMPLED_CHAR_WIDTH */, 16 /* Constants.SAMPLED_CHAR_HEIGHT */);\n    }\n    /**\n     * Creates a character renderer from the canvas sample data.\n     */\n    static createFromSampleData(source, scale) {\n        const expectedLength = 16 /* Constants.SAMPLED_CHAR_HEIGHT */ * 10 /* Constants.SAMPLED_CHAR_WIDTH */ * 4 /* Constants.RGBA_CHANNELS_CNT */ * 96 /* Constants.CHAR_COUNT */;\n        if (source.length !== expectedLength) {\n            throw new Error('Unexpected source in MinimapCharRenderer');\n        }\n        const charData = MinimapCharRendererFactory._downsample(source, scale);\n        return new MinimapCharRenderer(charData, scale);\n    }\n    static _downsampleChar(source, sourceOffset, dest, destOffset, scale) {\n        const width = 1 /* Constants.BASE_CHAR_WIDTH */ * scale;\n        const height = 2 /* Constants.BASE_CHAR_HEIGHT */ * scale;\n        let targetIndex = destOffset;\n        let brightest = 0;\n        // This is essentially an ad-hoc rescaling algorithm. Standard approaches\n        // like bicubic interpolation are awesome for scaling between image sizes,\n        // but don't work so well when scaling to very small pixel values, we end\n        // up with blurry, indistinct forms.\n        //\n        // The approach taken here is simply mapping each source pixel to the target\n        // pixels, and taking the weighted values for all pixels in each, and then\n        // averaging them out. Finally we apply an intensity boost in _downsample,\n        // since when scaling to the smallest pixel sizes there's more black space\n        // which causes characters to be much less distinct.\n        for (let y = 0; y < height; y++) {\n            // 1. For this destination pixel, get the source pixels we're sampling\n            // from (x1, y1) to the next pixel (x2, y2)\n            const sourceY1 = (y / height) * 16 /* Constants.SAMPLED_CHAR_HEIGHT */;\n            const sourceY2 = ((y + 1) / height) * 16 /* Constants.SAMPLED_CHAR_HEIGHT */;\n            for (let x = 0; x < width; x++) {\n                const sourceX1 = (x / width) * 10 /* Constants.SAMPLED_CHAR_WIDTH */;\n                const sourceX2 = ((x + 1) / width) * 10 /* Constants.SAMPLED_CHAR_WIDTH */;\n                // 2. Sample all of them, summing them up and weighting them. Similar\n                // to bilinear interpolation.\n                let value = 0;\n                let samples = 0;\n                for (let sy = sourceY1; sy < sourceY2; sy++) {\n                    const sourceRow = sourceOffset + Math.floor(sy) * 3840 /* Constants.RGBA_SAMPLED_ROW_WIDTH */;\n                    const yBalance = 1 - (sy - Math.floor(sy));\n                    for (let sx = sourceX1; sx < sourceX2; sx++) {\n                        const xBalance = 1 - (sx - Math.floor(sx));\n                        const sourceIndex = sourceRow + Math.floor(sx) * 4 /* Constants.RGBA_CHANNELS_CNT */;\n                        const weight = xBalance * yBalance;\n                        samples += weight;\n                        value += ((source[sourceIndex] * source[sourceIndex + 3]) / 255) * weight;\n                    }\n                }\n                const final = value / samples;\n                brightest = Math.max(brightest, final);\n                dest[targetIndex++] = toUint8(final);\n            }\n        }\n        return brightest;\n    }\n    static _downsample(data, scale) {\n        const pixelsPerCharacter = 2 /* Constants.BASE_CHAR_HEIGHT */ * scale * 1 /* Constants.BASE_CHAR_WIDTH */ * scale;\n        const resultLen = pixelsPerCharacter * 96 /* Constants.CHAR_COUNT */;\n        const result = new Uint8ClampedArray(resultLen);\n        let resultOffset = 0;\n        let sourceOffset = 0;\n        let brightest = 0;\n        for (let charIndex = 0; charIndex < 96 /* Constants.CHAR_COUNT */; charIndex++) {\n            brightest = Math.max(brightest, this._downsampleChar(data, sourceOffset, result, resultOffset, scale));\n            resultOffset += pixelsPerCharacter;\n            sourceOffset += 10 /* Constants.SAMPLED_CHAR_WIDTH */ * 4 /* Constants.RGBA_CHANNELS_CNT */;\n        }\n        if (brightest > 0) {\n            const adjust = 255 / brightest;\n            for (let i = 0; i < resultLen; i++) {\n                result[i] *= adjust;\n            }\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './minimap.css';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { GlobalPointerMoveMonitor } from '../../../../base/browser/globalPointerMoveMonitor.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { RenderedLinesCollection } from '../../view/viewLayer.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { MINIMAP_GUTTER_WIDTH, EditorLayoutInfoComputer } from '../../../common/config/editorOptions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { RGBA8 } from '../../../common/core/rgba.js';\nimport { MinimapTokensColorTracker } from '../../../common/viewModel/minimapTokensColorTracker.js';\nimport { ViewModelDecoration } from '../../../common/viewModel.js';\nimport { minimapSelection, minimapBackground, minimapForegroundOpacity } from '../../../../platform/theme/common/colorRegistry.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EventType, Gesture } from '../../../../base/browser/touch.js';\nimport { MinimapCharRendererFactory } from './minimapCharRendererFactory.js';\nimport { MinimapPosition } from '../../../common/model.js';\nimport { createSingleCallFunction } from '../../../../base/common/functional.js';\n/**\n * The orthogonal distance to the slider at which dragging \"resets\". This implements \"snapping\"\n */\nconst POINTER_DRAG_RESET_DISTANCE = 140;\nconst GUTTER_DECORATION_WIDTH = 2;\nclass MinimapOptions {\n    constructor(configuration, theme, tokensColorTracker) {\n        const options = configuration.options;\n        const pixelRatio = options.get(141 /* EditorOption.pixelRatio */);\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        const minimapLayout = layoutInfo.minimap;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        const minimapOpts = options.get(72 /* EditorOption.minimap */);\n        this.renderMinimap = minimapLayout.renderMinimap;\n        this.size = minimapOpts.size;\n        this.minimapHeightIsEditorHeight = minimapLayout.minimapHeightIsEditorHeight;\n        this.scrollBeyondLastLine = options.get(104 /* EditorOption.scrollBeyondLastLine */);\n        this.paddingTop = options.get(83 /* EditorOption.padding */).top;\n        this.paddingBottom = options.get(83 /* EditorOption.padding */).bottom;\n        this.showSlider = minimapOpts.showSlider;\n        this.autohide = minimapOpts.autohide;\n        this.pixelRatio = pixelRatio;\n        this.typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this.lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this.minimapLeft = minimapLayout.minimapLeft;\n        this.minimapWidth = minimapLayout.minimapWidth;\n        this.minimapHeight = layoutInfo.height;\n        this.canvasInnerWidth = minimapLayout.minimapCanvasInnerWidth;\n        this.canvasInnerHeight = minimapLayout.minimapCanvasInnerHeight;\n        this.canvasOuterWidth = minimapLayout.minimapCanvasOuterWidth;\n        this.canvasOuterHeight = minimapLayout.minimapCanvasOuterHeight;\n        this.isSampling = minimapLayout.minimapIsSampling;\n        this.editorHeight = layoutInfo.height;\n        this.fontScale = minimapLayout.minimapScale;\n        this.minimapLineHeight = minimapLayout.minimapLineHeight;\n        this.minimapCharWidth = 1 /* Constants.BASE_CHAR_WIDTH */ * this.fontScale;\n        this.charRenderer = createSingleCallFunction(() => MinimapCharRendererFactory.create(this.fontScale, fontInfo.fontFamily));\n        this.defaultBackgroundColor = tokensColorTracker.getColor(2 /* ColorId.DefaultBackground */);\n        this.backgroundColor = MinimapOptions._getMinimapBackground(theme, this.defaultBackgroundColor);\n        this.foregroundAlpha = MinimapOptions._getMinimapForegroundOpacity(theme);\n    }\n    static _getMinimapBackground(theme, defaultBackgroundColor) {\n        const themeColor = theme.getColor(minimapBackground);\n        if (themeColor) {\n            return new RGBA8(themeColor.rgba.r, themeColor.rgba.g, themeColor.rgba.b, Math.round(255 * themeColor.rgba.a));\n        }\n        return defaultBackgroundColor;\n    }\n    static _getMinimapForegroundOpacity(theme) {\n        const themeColor = theme.getColor(minimapForegroundOpacity);\n        if (themeColor) {\n            return RGBA8._clamp(Math.round(255 * themeColor.rgba.a));\n        }\n        return 255;\n    }\n    equals(other) {\n        return (this.renderMinimap === other.renderMinimap\n            && this.size === other.size\n            && this.minimapHeightIsEditorHeight === other.minimapHeightIsEditorHeight\n            && this.scrollBeyondLastLine === other.scrollBeyondLastLine\n            && this.paddingTop === other.paddingTop\n            && this.paddingBottom === other.paddingBottom\n            && this.showSlider === other.showSlider\n            && this.autohide === other.autohide\n            && this.pixelRatio === other.pixelRatio\n            && this.typicalHalfwidthCharacterWidth === other.typicalHalfwidthCharacterWidth\n            && this.lineHeight === other.lineHeight\n            && this.minimapLeft === other.minimapLeft\n            && this.minimapWidth === other.minimapWidth\n            && this.minimapHeight === other.minimapHeight\n            && this.canvasInnerWidth === other.canvasInnerWidth\n            && this.canvasInnerHeight === other.canvasInnerHeight\n            && this.canvasOuterWidth === other.canvasOuterWidth\n            && this.canvasOuterHeight === other.canvasOuterHeight\n            && this.isSampling === other.isSampling\n            && this.editorHeight === other.editorHeight\n            && this.fontScale === other.fontScale\n            && this.minimapLineHeight === other.minimapLineHeight\n            && this.minimapCharWidth === other.minimapCharWidth\n            && this.defaultBackgroundColor && this.defaultBackgroundColor.equals(other.defaultBackgroundColor)\n            && this.backgroundColor && this.backgroundColor.equals(other.backgroundColor)\n            && this.foregroundAlpha === other.foregroundAlpha);\n    }\n}\nclass MinimapLayout {\n    constructor(\n    /**\n     * The given editor scrollTop (input).\n     */\n    scrollTop, \n    /**\n     * The given editor scrollHeight (input).\n     */\n    scrollHeight, sliderNeeded, _computedSliderRatio, \n    /**\n     * slider dom node top (in CSS px)\n     */\n    sliderTop, \n    /**\n     * slider dom node height (in CSS px)\n     */\n    sliderHeight, \n    /**\n     * empty lines to reserve at the top of the minimap.\n     */\n    topPaddingLineCount, \n    /**\n     * minimap render start line number.\n     */\n    startLineNumber, \n    /**\n     * minimap render end line number.\n     */\n    endLineNumber) {\n        this.scrollTop = scrollTop;\n        this.scrollHeight = scrollHeight;\n        this.sliderNeeded = sliderNeeded;\n        this._computedSliderRatio = _computedSliderRatio;\n        this.sliderTop = sliderTop;\n        this.sliderHeight = sliderHeight;\n        this.topPaddingLineCount = topPaddingLineCount;\n        this.startLineNumber = startLineNumber;\n        this.endLineNumber = endLineNumber;\n    }\n    /**\n     * Compute a desired `scrollPosition` such that the slider moves by `delta`.\n     */\n    getDesiredScrollTopFromDelta(delta) {\n        return Math.round(this.scrollTop + delta / this._computedSliderRatio);\n    }\n    getDesiredScrollTopFromTouchLocation(pageY) {\n        return Math.round((pageY - this.sliderHeight / 2) / this._computedSliderRatio);\n    }\n    /**\n     * Intersect a line range with `this.startLineNumber` and `this.endLineNumber`.\n     */\n    intersectWithViewport(range) {\n        const startLineNumber = Math.max(this.startLineNumber, range.startLineNumber);\n        const endLineNumber = Math.min(this.endLineNumber, range.endLineNumber);\n        if (startLineNumber > endLineNumber) {\n            // entirely outside minimap's viewport\n            return null;\n        }\n        return [startLineNumber, endLineNumber];\n    }\n    /**\n     * Get the inner minimap y coordinate for a line number.\n     */\n    getYForLineNumber(lineNumber, minimapLineHeight) {\n        return +(lineNumber - this.startLineNumber + this.topPaddingLineCount) * minimapLineHeight;\n    }\n    static create(options, viewportStartLineNumber, viewportEndLineNumber, viewportStartLineNumberVerticalOffset, viewportHeight, viewportContainsWhitespaceGaps, lineCount, realLineCount, scrollTop, scrollHeight, previousLayout) {\n        const pixelRatio = options.pixelRatio;\n        const minimapLineHeight = options.minimapLineHeight;\n        const minimapLinesFitting = Math.floor(options.canvasInnerHeight / minimapLineHeight);\n        const lineHeight = options.lineHeight;\n        if (options.minimapHeightIsEditorHeight) {\n            let logicalScrollHeight = (realLineCount * options.lineHeight\n                + options.paddingTop\n                + options.paddingBottom);\n            if (options.scrollBeyondLastLine) {\n                logicalScrollHeight += Math.max(0, viewportHeight - options.lineHeight - options.paddingBottom);\n            }\n            const sliderHeight = Math.max(1, Math.floor(viewportHeight * viewportHeight / logicalScrollHeight));\n            const maxMinimapSliderTop = Math.max(0, options.minimapHeight - sliderHeight);\n            // The slider can move from 0 to `maxMinimapSliderTop`\n            // in the same way `scrollTop` can move from 0 to `scrollHeight` - `viewportHeight`.\n            const computedSliderRatio = (maxMinimapSliderTop) / (scrollHeight - viewportHeight);\n            const sliderTop = (scrollTop * computedSliderRatio);\n            const sliderNeeded = (maxMinimapSliderTop > 0);\n            const maxLinesFitting = Math.floor(options.canvasInnerHeight / options.minimapLineHeight);\n            const topPaddingLineCount = Math.floor(options.paddingTop / options.lineHeight);\n            return new MinimapLayout(scrollTop, scrollHeight, sliderNeeded, computedSliderRatio, sliderTop, sliderHeight, topPaddingLineCount, 1, Math.min(lineCount, maxLinesFitting));\n        }\n        // The visible line count in a viewport can change due to a number of reasons:\n        //  a) with the same viewport width, different scroll positions can result in partial lines being visible:\n        //    e.g. for a line height of 20, and a viewport height of 600\n        //          * scrollTop = 0  => visible lines are [1, 30]\n        //          * scrollTop = 10 => visible lines are [1, 31] (with lines 1 and 31 partially visible)\n        //          * scrollTop = 20 => visible lines are [2, 31]\n        //  b) whitespace gaps might make their way in the viewport (which results in a decrease in the visible line count)\n        //  c) we could be in the scroll beyond last line case (which also results in a decrease in the visible line count, down to possibly only one line being visible)\n        // We must first establish a desirable slider height.\n        let sliderHeight;\n        if (viewportContainsWhitespaceGaps && viewportEndLineNumber !== lineCount) {\n            // case b) from above: there are whitespace gaps in the viewport.\n            // In this case, the height of the slider directly reflects the visible line count.\n            const viewportLineCount = viewportEndLineNumber - viewportStartLineNumber + 1;\n            sliderHeight = Math.floor(viewportLineCount * minimapLineHeight / pixelRatio);\n        }\n        else {\n            // The slider has a stable height\n            const expectedViewportLineCount = viewportHeight / lineHeight;\n            sliderHeight = Math.floor(expectedViewportLineCount * minimapLineHeight / pixelRatio);\n        }\n        const extraLinesAtTheTop = Math.floor(options.paddingTop / lineHeight);\n        let extraLinesAtTheBottom = Math.floor(options.paddingBottom / lineHeight);\n        if (options.scrollBeyondLastLine) {\n            const expectedViewportLineCount = viewportHeight / lineHeight;\n            extraLinesAtTheBottom = Math.max(extraLinesAtTheBottom, expectedViewportLineCount - 1);\n        }\n        let maxMinimapSliderTop;\n        if (extraLinesAtTheBottom > 0) {\n            const expectedViewportLineCount = viewportHeight / lineHeight;\n            // The minimap slider, when dragged all the way down, will contain the last line at its top\n            maxMinimapSliderTop = (extraLinesAtTheTop + lineCount + extraLinesAtTheBottom - expectedViewportLineCount - 1) * minimapLineHeight / pixelRatio;\n        }\n        else {\n            // The minimap slider, when dragged all the way down, will contain the last line at its bottom\n            maxMinimapSliderTop = Math.max(0, (extraLinesAtTheTop + lineCount) * minimapLineHeight / pixelRatio - sliderHeight);\n        }\n        maxMinimapSliderTop = Math.min(options.minimapHeight - sliderHeight, maxMinimapSliderTop);\n        // The slider can move from 0 to `maxMinimapSliderTop`\n        // in the same way `scrollTop` can move from 0 to `scrollHeight` - `viewportHeight`.\n        const computedSliderRatio = (maxMinimapSliderTop) / (scrollHeight - viewportHeight);\n        const sliderTop = (scrollTop * computedSliderRatio);\n        if (minimapLinesFitting >= extraLinesAtTheTop + lineCount + extraLinesAtTheBottom) {\n            // All lines fit in the minimap\n            const sliderNeeded = (maxMinimapSliderTop > 0);\n            return new MinimapLayout(scrollTop, scrollHeight, sliderNeeded, computedSliderRatio, sliderTop, sliderHeight, extraLinesAtTheTop, 1, lineCount);\n        }\n        else {\n            let consideringStartLineNumber;\n            if (viewportStartLineNumber > 1) {\n                consideringStartLineNumber = viewportStartLineNumber + extraLinesAtTheTop;\n            }\n            else {\n                consideringStartLineNumber = Math.max(1, scrollTop / lineHeight);\n            }\n            let topPaddingLineCount;\n            let startLineNumber = Math.max(1, Math.floor(consideringStartLineNumber - sliderTop * pixelRatio / minimapLineHeight));\n            if (startLineNumber < extraLinesAtTheTop) {\n                topPaddingLineCount = extraLinesAtTheTop - startLineNumber + 1;\n                startLineNumber = 1;\n            }\n            else {\n                topPaddingLineCount = 0;\n                startLineNumber = Math.max(1, startLineNumber - extraLinesAtTheTop);\n            }\n            // Avoid flickering caused by a partial viewport start line\n            // by being consistent w.r.t. the previous layout decision\n            if (previousLayout && previousLayout.scrollHeight === scrollHeight) {\n                if (previousLayout.scrollTop > scrollTop) {\n                    // Scrolling up => never increase `startLineNumber`\n                    startLineNumber = Math.min(startLineNumber, previousLayout.startLineNumber);\n                    topPaddingLineCount = Math.max(topPaddingLineCount, previousLayout.topPaddingLineCount);\n                }\n                if (previousLayout.scrollTop < scrollTop) {\n                    // Scrolling down => never decrease `startLineNumber`\n                    startLineNumber = Math.max(startLineNumber, previousLayout.startLineNumber);\n                    topPaddingLineCount = Math.min(topPaddingLineCount, previousLayout.topPaddingLineCount);\n                }\n            }\n            const endLineNumber = Math.min(lineCount, startLineNumber - topPaddingLineCount + minimapLinesFitting - 1);\n            const partialLine = (scrollTop - viewportStartLineNumberVerticalOffset) / lineHeight;\n            let sliderTopAligned;\n            if (scrollTop >= options.paddingTop) {\n                sliderTopAligned = (viewportStartLineNumber - startLineNumber + topPaddingLineCount + partialLine) * minimapLineHeight / pixelRatio;\n            }\n            else {\n                sliderTopAligned = (scrollTop / options.paddingTop) * (topPaddingLineCount + partialLine) * minimapLineHeight / pixelRatio;\n            }\n            return new MinimapLayout(scrollTop, scrollHeight, true, computedSliderRatio, sliderTopAligned, sliderHeight, topPaddingLineCount, startLineNumber, endLineNumber);\n        }\n    }\n}\nclass MinimapLine {\n    constructor(dy) {\n        this.dy = dy;\n    }\n    onContentChanged() {\n        this.dy = -1;\n    }\n    onTokensChanged() {\n        this.dy = -1;\n    }\n}\nMinimapLine.INVALID = new MinimapLine(-1);\nclass RenderData {\n    constructor(renderedLayout, imageData, lines) {\n        this.renderedLayout = renderedLayout;\n        this._imageData = imageData;\n        this._renderedLines = new RenderedLinesCollection(() => MinimapLine.INVALID);\n        this._renderedLines._set(renderedLayout.startLineNumber, lines);\n    }\n    /**\n     * Check if the current RenderData matches accurately the new desired layout and no painting is needed.\n     */\n    linesEquals(layout) {\n        if (!this.scrollEquals(layout)) {\n            return false;\n        }\n        const tmp = this._renderedLines._get();\n        const lines = tmp.lines;\n        for (let i = 0, len = lines.length; i < len; i++) {\n            if (lines[i].dy === -1) {\n                // This line is invalid\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Check if the current RenderData matches the new layout's scroll position\n     */\n    scrollEquals(layout) {\n        return this.renderedLayout.startLineNumber === layout.startLineNumber\n            && this.renderedLayout.endLineNumber === layout.endLineNumber;\n    }\n    _get() {\n        const tmp = this._renderedLines._get();\n        return {\n            imageData: this._imageData,\n            rendLineNumberStart: tmp.rendLineNumberStart,\n            lines: tmp.lines\n        };\n    }\n    onLinesChanged(changeFromLineNumber, changeCount) {\n        return this._renderedLines.onLinesChanged(changeFromLineNumber, changeCount);\n    }\n    onLinesDeleted(deleteFromLineNumber, deleteToLineNumber) {\n        this._renderedLines.onLinesDeleted(deleteFromLineNumber, deleteToLineNumber);\n    }\n    onLinesInserted(insertFromLineNumber, insertToLineNumber) {\n        this._renderedLines.onLinesInserted(insertFromLineNumber, insertToLineNumber);\n    }\n    onTokensChanged(ranges) {\n        return this._renderedLines.onTokensChanged(ranges);\n    }\n}\n/**\n * Some sort of double buffering.\n *\n * Keeps two buffers around that will be rotated for painting.\n * Always gives a buffer that is filled with the background color.\n */\nclass MinimapBuffers {\n    constructor(ctx, WIDTH, HEIGHT, background) {\n        this._backgroundFillData = MinimapBuffers._createBackgroundFillData(WIDTH, HEIGHT, background);\n        this._buffers = [\n            ctx.createImageData(WIDTH, HEIGHT),\n            ctx.createImageData(WIDTH, HEIGHT)\n        ];\n        this._lastUsedBuffer = 0;\n    }\n    getBuffer() {\n        // rotate buffers\n        this._lastUsedBuffer = 1 - this._lastUsedBuffer;\n        const result = this._buffers[this._lastUsedBuffer];\n        // fill with background color\n        result.data.set(this._backgroundFillData);\n        return result;\n    }\n    static _createBackgroundFillData(WIDTH, HEIGHT, background) {\n        const backgroundR = background.r;\n        const backgroundG = background.g;\n        const backgroundB = background.b;\n        const backgroundA = background.a;\n        const result = new Uint8ClampedArray(WIDTH * HEIGHT * 4);\n        let offset = 0;\n        for (let i = 0; i < HEIGHT; i++) {\n            for (let j = 0; j < WIDTH; j++) {\n                result[offset] = backgroundR;\n                result[offset + 1] = backgroundG;\n                result[offset + 2] = backgroundB;\n                result[offset + 3] = backgroundA;\n                offset += 4;\n            }\n        }\n        return result;\n    }\n}\nclass MinimapSamplingState {\n    static compute(options, viewLineCount, oldSamplingState) {\n        if (options.renderMinimap === 0 /* RenderMinimap.None */ || !options.isSampling) {\n            return [null, []];\n        }\n        // ratio is intentionally not part of the layout to avoid the layout changing all the time\n        // so we need to recompute it again...\n        const { minimapLineCount } = EditorLayoutInfoComputer.computeContainedMinimapLineCount({\n            viewLineCount: viewLineCount,\n            scrollBeyondLastLine: options.scrollBeyondLastLine,\n            paddingTop: options.paddingTop,\n            paddingBottom: options.paddingBottom,\n            height: options.editorHeight,\n            lineHeight: options.lineHeight,\n            pixelRatio: options.pixelRatio\n        });\n        const ratio = viewLineCount / minimapLineCount;\n        const halfRatio = ratio / 2;\n        if (!oldSamplingState || oldSamplingState.minimapLines.length === 0) {\n            const result = [];\n            result[0] = 1;\n            if (minimapLineCount > 1) {\n                for (let i = 0, lastIndex = minimapLineCount - 1; i < lastIndex; i++) {\n                    result[i] = Math.round(i * ratio + halfRatio);\n                }\n                result[minimapLineCount - 1] = viewLineCount;\n            }\n            return [new MinimapSamplingState(ratio, result), []];\n        }\n        const oldMinimapLines = oldSamplingState.minimapLines;\n        const oldLength = oldMinimapLines.length;\n        const result = [];\n        let oldIndex = 0;\n        let oldDeltaLineCount = 0;\n        let minViewLineNumber = 1;\n        const MAX_EVENT_COUNT = 10; // generate at most 10 events, if there are more than 10 changes, just flush all previous data\n        let events = [];\n        let lastEvent = null;\n        for (let i = 0; i < minimapLineCount; i++) {\n            const fromViewLineNumber = Math.max(minViewLineNumber, Math.round(i * ratio));\n            const toViewLineNumber = Math.max(fromViewLineNumber, Math.round((i + 1) * ratio));\n            while (oldIndex < oldLength && oldMinimapLines[oldIndex] < fromViewLineNumber) {\n                if (events.length < MAX_EVENT_COUNT) {\n                    const oldMinimapLineNumber = oldIndex + 1 + oldDeltaLineCount;\n                    if (lastEvent && lastEvent.type === 'deleted' && lastEvent._oldIndex === oldIndex - 1) {\n                        lastEvent.deleteToLineNumber++;\n                    }\n                    else {\n                        lastEvent = { type: 'deleted', _oldIndex: oldIndex, deleteFromLineNumber: oldMinimapLineNumber, deleteToLineNumber: oldMinimapLineNumber };\n                        events.push(lastEvent);\n                    }\n                    oldDeltaLineCount--;\n                }\n                oldIndex++;\n            }\n            let selectedViewLineNumber;\n            if (oldIndex < oldLength && oldMinimapLines[oldIndex] <= toViewLineNumber) {\n                // reuse the old sampled line\n                selectedViewLineNumber = oldMinimapLines[oldIndex];\n                oldIndex++;\n            }\n            else {\n                if (i === 0) {\n                    selectedViewLineNumber = 1;\n                }\n                else if (i + 1 === minimapLineCount) {\n                    selectedViewLineNumber = viewLineCount;\n                }\n                else {\n                    selectedViewLineNumber = Math.round(i * ratio + halfRatio);\n                }\n                if (events.length < MAX_EVENT_COUNT) {\n                    const oldMinimapLineNumber = oldIndex + 1 + oldDeltaLineCount;\n                    if (lastEvent && lastEvent.type === 'inserted' && lastEvent._i === i - 1) {\n                        lastEvent.insertToLineNumber++;\n                    }\n                    else {\n                        lastEvent = { type: 'inserted', _i: i, insertFromLineNumber: oldMinimapLineNumber, insertToLineNumber: oldMinimapLineNumber };\n                        events.push(lastEvent);\n                    }\n                    oldDeltaLineCount++;\n                }\n            }\n            result[i] = selectedViewLineNumber;\n            minViewLineNumber = selectedViewLineNumber;\n        }\n        if (events.length < MAX_EVENT_COUNT) {\n            while (oldIndex < oldLength) {\n                const oldMinimapLineNumber = oldIndex + 1 + oldDeltaLineCount;\n                if (lastEvent && lastEvent.type === 'deleted' && lastEvent._oldIndex === oldIndex - 1) {\n                    lastEvent.deleteToLineNumber++;\n                }\n                else {\n                    lastEvent = { type: 'deleted', _oldIndex: oldIndex, deleteFromLineNumber: oldMinimapLineNumber, deleteToLineNumber: oldMinimapLineNumber };\n                    events.push(lastEvent);\n                }\n                oldDeltaLineCount--;\n                oldIndex++;\n            }\n        }\n        else {\n            // too many events, just give up\n            events = [{ type: 'flush' }];\n        }\n        return [new MinimapSamplingState(ratio, result), events];\n    }\n    constructor(samplingRatio, minimapLines) {\n        this.samplingRatio = samplingRatio;\n        this.minimapLines = minimapLines;\n    }\n    modelLineToMinimapLine(lineNumber) {\n        return Math.min(this.minimapLines.length, Math.max(1, Math.round(lineNumber / this.samplingRatio)));\n    }\n    /**\n     * Will return null if the model line ranges are not intersecting with a sampled model line.\n     */\n    modelLineRangeToMinimapLineRange(fromLineNumber, toLineNumber) {\n        let fromLineIndex = this.modelLineToMinimapLine(fromLineNumber) - 1;\n        while (fromLineIndex > 0 && this.minimapLines[fromLineIndex - 1] >= fromLineNumber) {\n            fromLineIndex--;\n        }\n        let toLineIndex = this.modelLineToMinimapLine(toLineNumber) - 1;\n        while (toLineIndex + 1 < this.minimapLines.length && this.minimapLines[toLineIndex + 1] <= toLineNumber) {\n            toLineIndex++;\n        }\n        if (fromLineIndex === toLineIndex) {\n            const sampledLineNumber = this.minimapLines[fromLineIndex];\n            if (sampledLineNumber < fromLineNumber || sampledLineNumber > toLineNumber) {\n                // This line is not part of the sampled lines ==> nothing to do\n                return null;\n            }\n        }\n        return [fromLineIndex + 1, toLineIndex + 1];\n    }\n    /**\n     * Will always return a range, even if it is not intersecting with a sampled model line.\n     */\n    decorationLineRangeToMinimapLineRange(startLineNumber, endLineNumber) {\n        let minimapLineStart = this.modelLineToMinimapLine(startLineNumber);\n        let minimapLineEnd = this.modelLineToMinimapLine(endLineNumber);\n        if (startLineNumber !== endLineNumber && minimapLineEnd === minimapLineStart) {\n            if (minimapLineEnd === this.minimapLines.length) {\n                if (minimapLineStart > 1) {\n                    minimapLineStart--;\n                }\n            }\n            else {\n                minimapLineEnd++;\n            }\n        }\n        return [minimapLineStart, minimapLineEnd];\n    }\n    onLinesDeleted(e) {\n        // have the mapping be sticky\n        const deletedLineCount = e.toLineNumber - e.fromLineNumber + 1;\n        let changeStartIndex = this.minimapLines.length;\n        let changeEndIndex = 0;\n        for (let i = this.minimapLines.length - 1; i >= 0; i--) {\n            if (this.minimapLines[i] < e.fromLineNumber) {\n                break;\n            }\n            if (this.minimapLines[i] <= e.toLineNumber) {\n                // this line got deleted => move to previous available\n                this.minimapLines[i] = Math.max(1, e.fromLineNumber - 1);\n                changeStartIndex = Math.min(changeStartIndex, i);\n                changeEndIndex = Math.max(changeEndIndex, i);\n            }\n            else {\n                this.minimapLines[i] -= deletedLineCount;\n            }\n        }\n        return [changeStartIndex, changeEndIndex];\n    }\n    onLinesInserted(e) {\n        // have the mapping be sticky\n        const insertedLineCount = e.toLineNumber - e.fromLineNumber + 1;\n        for (let i = this.minimapLines.length - 1; i >= 0; i--) {\n            if (this.minimapLines[i] < e.fromLineNumber) {\n                break;\n            }\n            this.minimapLines[i] += insertedLineCount;\n        }\n    }\n}\nexport class Minimap extends ViewPart {\n    constructor(context) {\n        super(context);\n        this.tokensColorTracker = MinimapTokensColorTracker.getInstance();\n        this._selections = [];\n        this._minimapSelections = null;\n        this.options = new MinimapOptions(this._context.configuration, this._context.theme, this.tokensColorTracker);\n        const [samplingState,] = MinimapSamplingState.compute(this.options, this._context.viewModel.getLineCount(), null);\n        this._samplingState = samplingState;\n        this._shouldCheckSampling = false;\n        this._actual = new InnerMinimap(context.theme, this);\n    }\n    dispose() {\n        this._actual.dispose();\n        super.dispose();\n    }\n    getDomNode() {\n        return this._actual.getDomNode();\n    }\n    _onOptionsMaybeChanged() {\n        const opts = new MinimapOptions(this._context.configuration, this._context.theme, this.tokensColorTracker);\n        if (this.options.equals(opts)) {\n            return false;\n        }\n        this.options = opts;\n        this._recreateLineSampling();\n        this._actual.onDidChangeOptions();\n        return true;\n    }\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        return this._onOptionsMaybeChanged();\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections;\n        this._minimapSelections = null;\n        return this._actual.onSelectionChanged();\n    }\n    onDecorationsChanged(e) {\n        if (e.affectsMinimap) {\n            return this._actual.onDecorationsChanged();\n        }\n        return false;\n    }\n    onFlushed(e) {\n        if (this._samplingState) {\n            this._shouldCheckSampling = true;\n        }\n        return this._actual.onFlushed();\n    }\n    onLinesChanged(e) {\n        if (this._samplingState) {\n            const minimapLineRange = this._samplingState.modelLineRangeToMinimapLineRange(e.fromLineNumber, e.fromLineNumber + e.count - 1);\n            if (minimapLineRange) {\n                return this._actual.onLinesChanged(minimapLineRange[0], minimapLineRange[1] - minimapLineRange[0] + 1);\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return this._actual.onLinesChanged(e.fromLineNumber, e.count);\n        }\n    }\n    onLinesDeleted(e) {\n        if (this._samplingState) {\n            const [changeStartIndex, changeEndIndex] = this._samplingState.onLinesDeleted(e);\n            if (changeStartIndex <= changeEndIndex) {\n                this._actual.onLinesChanged(changeStartIndex + 1, changeEndIndex - changeStartIndex + 1);\n            }\n            this._shouldCheckSampling = true;\n            return true;\n        }\n        else {\n            return this._actual.onLinesDeleted(e.fromLineNumber, e.toLineNumber);\n        }\n    }\n    onLinesInserted(e) {\n        if (this._samplingState) {\n            this._samplingState.onLinesInserted(e);\n            this._shouldCheckSampling = true;\n            return true;\n        }\n        else {\n            return this._actual.onLinesInserted(e.fromLineNumber, e.toLineNumber);\n        }\n    }\n    onScrollChanged(e) {\n        return this._actual.onScrollChanged();\n    }\n    onThemeChanged(e) {\n        this._actual.onThemeChanged();\n        this._onOptionsMaybeChanged();\n        return true;\n    }\n    onTokensChanged(e) {\n        if (this._samplingState) {\n            const ranges = [];\n            for (const range of e.ranges) {\n                const minimapLineRange = this._samplingState.modelLineRangeToMinimapLineRange(range.fromLineNumber, range.toLineNumber);\n                if (minimapLineRange) {\n                    ranges.push({ fromLineNumber: minimapLineRange[0], toLineNumber: minimapLineRange[1] });\n                }\n            }\n            if (ranges.length) {\n                return this._actual.onTokensChanged(ranges);\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return this._actual.onTokensChanged(e.ranges);\n        }\n    }\n    onTokensColorsChanged(e) {\n        this._onOptionsMaybeChanged();\n        return this._actual.onTokensColorsChanged();\n    }\n    onZonesChanged(e) {\n        return this._actual.onZonesChanged();\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        if (this._shouldCheckSampling) {\n            this._shouldCheckSampling = false;\n            this._recreateLineSampling();\n        }\n    }\n    render(ctx) {\n        let viewportStartLineNumber = ctx.visibleRange.startLineNumber;\n        let viewportEndLineNumber = ctx.visibleRange.endLineNumber;\n        if (this._samplingState) {\n            viewportStartLineNumber = this._samplingState.modelLineToMinimapLine(viewportStartLineNumber);\n            viewportEndLineNumber = this._samplingState.modelLineToMinimapLine(viewportEndLineNumber);\n        }\n        const minimapCtx = {\n            viewportContainsWhitespaceGaps: (ctx.viewportData.whitespaceViewportData.length > 0),\n            scrollWidth: ctx.scrollWidth,\n            scrollHeight: ctx.scrollHeight,\n            viewportStartLineNumber: viewportStartLineNumber,\n            viewportEndLineNumber: viewportEndLineNumber,\n            viewportStartLineNumberVerticalOffset: ctx.getVerticalOffsetForLineNumber(viewportStartLineNumber),\n            scrollTop: ctx.scrollTop,\n            scrollLeft: ctx.scrollLeft,\n            viewportWidth: ctx.viewportWidth,\n            viewportHeight: ctx.viewportHeight,\n        };\n        this._actual.render(minimapCtx);\n    }\n    //#region IMinimapModel\n    _recreateLineSampling() {\n        this._minimapSelections = null;\n        const wasSampling = Boolean(this._samplingState);\n        const [samplingState, events] = MinimapSamplingState.compute(this.options, this._context.viewModel.getLineCount(), this._samplingState);\n        this._samplingState = samplingState;\n        if (wasSampling && this._samplingState) {\n            // was sampling, is sampling\n            for (const event of events) {\n                switch (event.type) {\n                    case 'deleted':\n                        this._actual.onLinesDeleted(event.deleteFromLineNumber, event.deleteToLineNumber);\n                        break;\n                    case 'inserted':\n                        this._actual.onLinesInserted(event.insertFromLineNumber, event.insertToLineNumber);\n                        break;\n                    case 'flush':\n                        this._actual.onFlushed();\n                        break;\n                }\n            }\n        }\n    }\n    getLineCount() {\n        if (this._samplingState) {\n            return this._samplingState.minimapLines.length;\n        }\n        return this._context.viewModel.getLineCount();\n    }\n    getRealLineCount() {\n        return this._context.viewModel.getLineCount();\n    }\n    getLineContent(lineNumber) {\n        if (this._samplingState) {\n            return this._context.viewModel.getLineContent(this._samplingState.minimapLines[lineNumber - 1]);\n        }\n        return this._context.viewModel.getLineContent(lineNumber);\n    }\n    getLineMaxColumn(lineNumber) {\n        if (this._samplingState) {\n            return this._context.viewModel.getLineMaxColumn(this._samplingState.minimapLines[lineNumber - 1]);\n        }\n        return this._context.viewModel.getLineMaxColumn(lineNumber);\n    }\n    getMinimapLinesRenderingData(startLineNumber, endLineNumber, needed) {\n        if (this._samplingState) {\n            const result = [];\n            for (let lineIndex = 0, lineCount = endLineNumber - startLineNumber + 1; lineIndex < lineCount; lineIndex++) {\n                if (needed[lineIndex]) {\n                    result[lineIndex] = this._context.viewModel.getViewLineData(this._samplingState.minimapLines[startLineNumber + lineIndex - 1]);\n                }\n                else {\n                    result[lineIndex] = null;\n                }\n            }\n            return result;\n        }\n        return this._context.viewModel.getMinimapLinesRenderingData(startLineNumber, endLineNumber, needed).data;\n    }\n    getSelections() {\n        if (this._minimapSelections === null) {\n            if (this._samplingState) {\n                this._minimapSelections = [];\n                for (const selection of this._selections) {\n                    const [minimapLineStart, minimapLineEnd] = this._samplingState.decorationLineRangeToMinimapLineRange(selection.startLineNumber, selection.endLineNumber);\n                    this._minimapSelections.push(new Selection(minimapLineStart, selection.startColumn, minimapLineEnd, selection.endColumn));\n                }\n            }\n            else {\n                this._minimapSelections = this._selections;\n            }\n        }\n        return this._minimapSelections;\n    }\n    getMinimapDecorationsInViewport(startLineNumber, endLineNumber) {\n        let visibleRange;\n        if (this._samplingState) {\n            const modelStartLineNumber = this._samplingState.minimapLines[startLineNumber - 1];\n            const modelEndLineNumber = this._samplingState.minimapLines[endLineNumber - 1];\n            visibleRange = new Range(modelStartLineNumber, 1, modelEndLineNumber, this._context.viewModel.getLineMaxColumn(modelEndLineNumber));\n        }\n        else {\n            visibleRange = new Range(startLineNumber, 1, endLineNumber, this._context.viewModel.getLineMaxColumn(endLineNumber));\n        }\n        const decorations = this._context.viewModel.getMinimapDecorationsInRange(visibleRange);\n        if (this._samplingState) {\n            const result = [];\n            for (const decoration of decorations) {\n                if (!decoration.options.minimap) {\n                    continue;\n                }\n                const range = decoration.range;\n                const minimapStartLineNumber = this._samplingState.modelLineToMinimapLine(range.startLineNumber);\n                const minimapEndLineNumber = this._samplingState.modelLineToMinimapLine(range.endLineNumber);\n                result.push(new ViewModelDecoration(new Range(minimapStartLineNumber, range.startColumn, minimapEndLineNumber, range.endColumn), decoration.options));\n            }\n            return result;\n        }\n        return decorations;\n    }\n    getOptions() {\n        return this._context.viewModel.model.getOptions();\n    }\n    revealLineNumber(lineNumber) {\n        if (this._samplingState) {\n            lineNumber = this._samplingState.minimapLines[lineNumber - 1];\n        }\n        this._context.viewModel.revealRange('mouse', false, new Range(lineNumber, 1, lineNumber, 1), 1 /* viewEvents.VerticalRevealType.Center */, 0 /* ScrollType.Smooth */);\n    }\n    setScrollTop(scrollTop) {\n        this._context.viewModel.viewLayout.setScrollPosition({\n            scrollTop: scrollTop\n        }, 1 /* ScrollType.Immediate */);\n    }\n}\nclass InnerMinimap extends Disposable {\n    constructor(theme, model) {\n        super();\n        this._renderDecorations = false;\n        this._gestureInProgress = false;\n        this._theme = theme;\n        this._model = model;\n        this._lastRenderData = null;\n        this._buffers = null;\n        this._selectionColor = this._theme.getColor(minimapSelection);\n        this._domNode = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this._domNode, 8 /* PartFingerprint.Minimap */);\n        this._domNode.setClassName(this._getMinimapDomNodeClassName());\n        this._domNode.setPosition('absolute');\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        this._shadow = createFastDomNode(document.createElement('div'));\n        this._shadow.setClassName('minimap-shadow-hidden');\n        this._domNode.appendChild(this._shadow);\n        this._canvas = createFastDomNode(document.createElement('canvas'));\n        this._canvas.setPosition('absolute');\n        this._canvas.setLeft(0);\n        this._domNode.appendChild(this._canvas);\n        this._decorationsCanvas = createFastDomNode(document.createElement('canvas'));\n        this._decorationsCanvas.setPosition('absolute');\n        this._decorationsCanvas.setClassName('minimap-decorations-layer');\n        this._decorationsCanvas.setLeft(0);\n        this._domNode.appendChild(this._decorationsCanvas);\n        this._slider = createFastDomNode(document.createElement('div'));\n        this._slider.setPosition('absolute');\n        this._slider.setClassName('minimap-slider');\n        this._slider.setLayerHinting(true);\n        this._slider.setContain('strict');\n        this._domNode.appendChild(this._slider);\n        this._sliderHorizontal = createFastDomNode(document.createElement('div'));\n        this._sliderHorizontal.setPosition('absolute');\n        this._sliderHorizontal.setClassName('minimap-slider-horizontal');\n        this._slider.appendChild(this._sliderHorizontal);\n        this._applyLayout();\n        this._pointerDownListener = dom.addStandardDisposableListener(this._domNode.domNode, dom.EventType.POINTER_DOWN, (e) => {\n            e.preventDefault();\n            const renderMinimap = this._model.options.renderMinimap;\n            if (renderMinimap === 0 /* RenderMinimap.None */) {\n                return;\n            }\n            if (!this._lastRenderData) {\n                return;\n            }\n            if (this._model.options.size !== 'proportional') {\n                if (e.button === 0 && this._lastRenderData) {\n                    // pretend the click occurred in the center of the slider\n                    const position = dom.getDomNodePagePosition(this._slider.domNode);\n                    const initialPosY = position.top + position.height / 2;\n                    this._startSliderDragging(e, initialPosY, this._lastRenderData.renderedLayout);\n                }\n                return;\n            }\n            const minimapLineHeight = this._model.options.minimapLineHeight;\n            const internalOffsetY = (this._model.options.canvasInnerHeight / this._model.options.canvasOuterHeight) * e.offsetY;\n            const lineIndex = Math.floor(internalOffsetY / minimapLineHeight);\n            let lineNumber = lineIndex + this._lastRenderData.renderedLayout.startLineNumber - this._lastRenderData.renderedLayout.topPaddingLineCount;\n            lineNumber = Math.min(lineNumber, this._model.getLineCount());\n            this._model.revealLineNumber(lineNumber);\n        });\n        this._sliderPointerMoveMonitor = new GlobalPointerMoveMonitor();\n        this._sliderPointerDownListener = dom.addStandardDisposableListener(this._slider.domNode, dom.EventType.POINTER_DOWN, (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            if (e.button === 0 && this._lastRenderData) {\n                this._startSliderDragging(e, e.pageY, this._lastRenderData.renderedLayout);\n            }\n        });\n        this._gestureDisposable = Gesture.addTarget(this._domNode.domNode);\n        this._sliderTouchStartListener = dom.addDisposableListener(this._domNode.domNode, EventType.Start, (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            if (this._lastRenderData) {\n                this._slider.toggleClassName('active', true);\n                this._gestureInProgress = true;\n                this.scrollDueToTouchEvent(e);\n            }\n        }, { passive: false });\n        this._sliderTouchMoveListener = dom.addDisposableListener(this._domNode.domNode, EventType.Change, (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            if (this._lastRenderData && this._gestureInProgress) {\n                this.scrollDueToTouchEvent(e);\n            }\n        }, { passive: false });\n        this._sliderTouchEndListener = dom.addStandardDisposableListener(this._domNode.domNode, EventType.End, (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            this._gestureInProgress = false;\n            this._slider.toggleClassName('active', false);\n        });\n    }\n    _startSliderDragging(e, initialPosY, initialSliderState) {\n        if (!e.target || !(e.target instanceof Element)) {\n            return;\n        }\n        const initialPosX = e.pageX;\n        this._slider.toggleClassName('active', true);\n        const handlePointerMove = (posy, posx) => {\n            const minimapPosition = dom.getDomNodePagePosition(this._domNode.domNode);\n            const pointerOrthogonalDelta = Math.min(Math.abs(posx - initialPosX), Math.abs(posx - minimapPosition.left), Math.abs(posx - minimapPosition.left - minimapPosition.width));\n            if (platform.isWindows && pointerOrthogonalDelta > POINTER_DRAG_RESET_DISTANCE) {\n                // The pointer has wondered away from the scrollbar => reset dragging\n                this._model.setScrollTop(initialSliderState.scrollTop);\n                return;\n            }\n            const pointerDelta = posy - initialPosY;\n            this._model.setScrollTop(initialSliderState.getDesiredScrollTopFromDelta(pointerDelta));\n        };\n        if (e.pageY !== initialPosY) {\n            handlePointerMove(e.pageY, initialPosX);\n        }\n        this._sliderPointerMoveMonitor.startMonitoring(e.target, e.pointerId, e.buttons, pointerMoveData => handlePointerMove(pointerMoveData.pageY, pointerMoveData.pageX), () => {\n            this._slider.toggleClassName('active', false);\n        });\n    }\n    scrollDueToTouchEvent(touch) {\n        const startY = this._domNode.domNode.getBoundingClientRect().top;\n        const scrollTop = this._lastRenderData.renderedLayout.getDesiredScrollTopFromTouchLocation(touch.pageY - startY);\n        this._model.setScrollTop(scrollTop);\n    }\n    dispose() {\n        this._pointerDownListener.dispose();\n        this._sliderPointerMoveMonitor.dispose();\n        this._sliderPointerDownListener.dispose();\n        this._gestureDisposable.dispose();\n        this._sliderTouchStartListener.dispose();\n        this._sliderTouchMoveListener.dispose();\n        this._sliderTouchEndListener.dispose();\n        super.dispose();\n    }\n    _getMinimapDomNodeClassName() {\n        const class_ = ['minimap'];\n        if (this._model.options.showSlider === 'always') {\n            class_.push('slider-always');\n        }\n        else {\n            class_.push('slider-mouseover');\n        }\n        if (this._model.options.autohide) {\n            class_.push('autohide');\n        }\n        return class_.join(' ');\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    _applyLayout() {\n        this._domNode.setLeft(this._model.options.minimapLeft);\n        this._domNode.setWidth(this._model.options.minimapWidth);\n        this._domNode.setHeight(this._model.options.minimapHeight);\n        this._shadow.setHeight(this._model.options.minimapHeight);\n        this._canvas.setWidth(this._model.options.canvasOuterWidth);\n        this._canvas.setHeight(this._model.options.canvasOuterHeight);\n        this._canvas.domNode.width = this._model.options.canvasInnerWidth;\n        this._canvas.domNode.height = this._model.options.canvasInnerHeight;\n        this._decorationsCanvas.setWidth(this._model.options.canvasOuterWidth);\n        this._decorationsCanvas.setHeight(this._model.options.canvasOuterHeight);\n        this._decorationsCanvas.domNode.width = this._model.options.canvasInnerWidth;\n        this._decorationsCanvas.domNode.height = this._model.options.canvasInnerHeight;\n        this._slider.setWidth(this._model.options.minimapWidth);\n    }\n    _getBuffer() {\n        if (!this._buffers) {\n            if (this._model.options.canvasInnerWidth > 0 && this._model.options.canvasInnerHeight > 0) {\n                this._buffers = new MinimapBuffers(this._canvas.domNode.getContext('2d'), this._model.options.canvasInnerWidth, this._model.options.canvasInnerHeight, this._model.options.backgroundColor);\n            }\n        }\n        return this._buffers ? this._buffers.getBuffer() : null;\n    }\n    // ---- begin view event handlers\n    onDidChangeOptions() {\n        this._lastRenderData = null;\n        this._buffers = null;\n        this._applyLayout();\n        this._domNode.setClassName(this._getMinimapDomNodeClassName());\n    }\n    onSelectionChanged() {\n        this._renderDecorations = true;\n        return true;\n    }\n    onDecorationsChanged() {\n        this._renderDecorations = true;\n        return true;\n    }\n    onFlushed() {\n        this._lastRenderData = null;\n        return true;\n    }\n    onLinesChanged(changeFromLineNumber, changeCount) {\n        if (this._lastRenderData) {\n            return this._lastRenderData.onLinesChanged(changeFromLineNumber, changeCount);\n        }\n        return false;\n    }\n    onLinesDeleted(deleteFromLineNumber, deleteToLineNumber) {\n        var _a;\n        (_a = this._lastRenderData) === null || _a === void 0 ? void 0 : _a.onLinesDeleted(deleteFromLineNumber, deleteToLineNumber);\n        return true;\n    }\n    onLinesInserted(insertFromLineNumber, insertToLineNumber) {\n        var _a;\n        (_a = this._lastRenderData) === null || _a === void 0 ? void 0 : _a.onLinesInserted(insertFromLineNumber, insertToLineNumber);\n        return true;\n    }\n    onScrollChanged() {\n        this._renderDecorations = true;\n        return true;\n    }\n    onThemeChanged() {\n        this._selectionColor = this._theme.getColor(minimapSelection);\n        this._renderDecorations = true;\n        return true;\n    }\n    onTokensChanged(ranges) {\n        if (this._lastRenderData) {\n            return this._lastRenderData.onTokensChanged(ranges);\n        }\n        return false;\n    }\n    onTokensColorsChanged() {\n        this._lastRenderData = null;\n        this._buffers = null;\n        return true;\n    }\n    onZonesChanged() {\n        this._lastRenderData = null;\n        return true;\n    }\n    // --- end event handlers\n    render(renderingCtx) {\n        const renderMinimap = this._model.options.renderMinimap;\n        if (renderMinimap === 0 /* RenderMinimap.None */) {\n            this._shadow.setClassName('minimap-shadow-hidden');\n            this._sliderHorizontal.setWidth(0);\n            this._sliderHorizontal.setHeight(0);\n            return;\n        }\n        if (renderingCtx.scrollLeft + renderingCtx.viewportWidth >= renderingCtx.scrollWidth) {\n            this._shadow.setClassName('minimap-shadow-hidden');\n        }\n        else {\n            this._shadow.setClassName('minimap-shadow-visible');\n        }\n        const layout = MinimapLayout.create(this._model.options, renderingCtx.viewportStartLineNumber, renderingCtx.viewportEndLineNumber, renderingCtx.viewportStartLineNumberVerticalOffset, renderingCtx.viewportHeight, renderingCtx.viewportContainsWhitespaceGaps, this._model.getLineCount(), this._model.getRealLineCount(), renderingCtx.scrollTop, renderingCtx.scrollHeight, this._lastRenderData ? this._lastRenderData.renderedLayout : null);\n        this._slider.setDisplay(layout.sliderNeeded ? 'block' : 'none');\n        this._slider.setTop(layout.sliderTop);\n        this._slider.setHeight(layout.sliderHeight);\n        // Compute horizontal slider coordinates\n        this._sliderHorizontal.setLeft(0);\n        this._sliderHorizontal.setWidth(this._model.options.minimapWidth);\n        this._sliderHorizontal.setTop(0);\n        this._sliderHorizontal.setHeight(layout.sliderHeight);\n        this.renderDecorations(layout);\n        this._lastRenderData = this.renderLines(layout);\n    }\n    renderDecorations(layout) {\n        if (this._renderDecorations) {\n            this._renderDecorations = false;\n            const selections = this._model.getSelections();\n            selections.sort(Range.compareRangesUsingStarts);\n            const decorations = this._model.getMinimapDecorationsInViewport(layout.startLineNumber, layout.endLineNumber);\n            decorations.sort((a, b) => (a.options.zIndex || 0) - (b.options.zIndex || 0));\n            const { canvasInnerWidth, canvasInnerHeight } = this._model.options;\n            const minimapLineHeight = this._model.options.minimapLineHeight;\n            const minimapCharWidth = this._model.options.minimapCharWidth;\n            const tabSize = this._model.getOptions().tabSize;\n            const canvasContext = this._decorationsCanvas.domNode.getContext('2d');\n            canvasContext.clearRect(0, 0, canvasInnerWidth, canvasInnerHeight);\n            // We first need to render line highlights and then render decorations on top of those.\n            // But we need to pick a single color for each line, and use that as a line highlight.\n            // This needs to be the color of the decoration with the highest `zIndex`, but priority\n            // is given to the selection.\n            const highlightedLines = new ContiguousLineMap(layout.startLineNumber, layout.endLineNumber, false);\n            this._renderSelectionLineHighlights(canvasContext, selections, highlightedLines, layout, minimapLineHeight);\n            this._renderDecorationsLineHighlights(canvasContext, decorations, highlightedLines, layout, minimapLineHeight);\n            const lineOffsetMap = new ContiguousLineMap(layout.startLineNumber, layout.endLineNumber, null);\n            this._renderSelectionsHighlights(canvasContext, selections, lineOffsetMap, layout, minimapLineHeight, tabSize, minimapCharWidth, canvasInnerWidth);\n            this._renderDecorationsHighlights(canvasContext, decorations, lineOffsetMap, layout, minimapLineHeight, tabSize, minimapCharWidth, canvasInnerWidth);\n        }\n    }\n    _renderSelectionLineHighlights(canvasContext, selections, highlightedLines, layout, minimapLineHeight) {\n        if (!this._selectionColor || this._selectionColor.isTransparent()) {\n            return;\n        }\n        canvasContext.fillStyle = this._selectionColor.transparent(0.5).toString();\n        let y1 = 0;\n        let y2 = 0;\n        for (const selection of selections) {\n            const intersection = layout.intersectWithViewport(selection);\n            if (!intersection) {\n                // entirely outside minimap's viewport\n                continue;\n            }\n            const [startLineNumber, endLineNumber] = intersection;\n            for (let line = startLineNumber; line <= endLineNumber; line++) {\n                highlightedLines.set(line, true);\n            }\n            const yy1 = layout.getYForLineNumber(startLineNumber, minimapLineHeight);\n            const yy2 = layout.getYForLineNumber(endLineNumber, minimapLineHeight);\n            if (y2 >= yy1) {\n                // merge into previous\n                y2 = yy2;\n            }\n            else {\n                if (y2 > y1) {\n                    // flush\n                    canvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y1, canvasContext.canvas.width, y2 - y1);\n                }\n                y1 = yy1;\n                y2 = yy2;\n            }\n        }\n        if (y2 > y1) {\n            // flush\n            canvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y1, canvasContext.canvas.width, y2 - y1);\n        }\n    }\n    _renderDecorationsLineHighlights(canvasContext, decorations, highlightedLines, layout, minimapLineHeight) {\n        const highlightColors = new Map();\n        // Loop backwards to hit first decorations with higher `zIndex`\n        for (let i = decorations.length - 1; i >= 0; i--) {\n            const decoration = decorations[i];\n            const minimapOptions = decoration.options.minimap;\n            if (!minimapOptions || minimapOptions.position !== MinimapPosition.Inline) {\n                continue;\n            }\n            const intersection = layout.intersectWithViewport(decoration.range);\n            if (!intersection) {\n                // entirely outside minimap's viewport\n                continue;\n            }\n            const [startLineNumber, endLineNumber] = intersection;\n            const decorationColor = minimapOptions.getColor(this._theme.value);\n            if (!decorationColor || decorationColor.isTransparent()) {\n                continue;\n            }\n            let highlightColor = highlightColors.get(decorationColor.toString());\n            if (!highlightColor) {\n                highlightColor = decorationColor.transparent(0.5).toString();\n                highlightColors.set(decorationColor.toString(), highlightColor);\n            }\n            canvasContext.fillStyle = highlightColor;\n            for (let line = startLineNumber; line <= endLineNumber; line++) {\n                if (highlightedLines.has(line)) {\n                    continue;\n                }\n                highlightedLines.set(line, true);\n                const y = layout.getYForLineNumber(startLineNumber, minimapLineHeight);\n                canvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y, canvasContext.canvas.width, minimapLineHeight);\n            }\n        }\n    }\n    _renderSelectionsHighlights(canvasContext, selections, lineOffsetMap, layout, lineHeight, tabSize, characterWidth, canvasInnerWidth) {\n        if (!this._selectionColor || this._selectionColor.isTransparent()) {\n            return;\n        }\n        for (const selection of selections) {\n            const intersection = layout.intersectWithViewport(selection);\n            if (!intersection) {\n                // entirely outside minimap's viewport\n                continue;\n            }\n            const [startLineNumber, endLineNumber] = intersection;\n            for (let line = startLineNumber; line <= endLineNumber; line++) {\n                this.renderDecorationOnLine(canvasContext, lineOffsetMap, selection, this._selectionColor, layout, line, lineHeight, lineHeight, tabSize, characterWidth, canvasInnerWidth);\n            }\n        }\n    }\n    _renderDecorationsHighlights(canvasContext, decorations, lineOffsetMap, layout, minimapLineHeight, tabSize, characterWidth, canvasInnerWidth) {\n        // Loop forwards to hit first decorations with lower `zIndex`\n        for (const decoration of decorations) {\n            const minimapOptions = decoration.options.minimap;\n            if (!minimapOptions) {\n                continue;\n            }\n            const intersection = layout.intersectWithViewport(decoration.range);\n            if (!intersection) {\n                // entirely outside minimap's viewport\n                continue;\n            }\n            const [startLineNumber, endLineNumber] = intersection;\n            const decorationColor = minimapOptions.getColor(this._theme.value);\n            if (!decorationColor || decorationColor.isTransparent()) {\n                continue;\n            }\n            for (let line = startLineNumber; line <= endLineNumber; line++) {\n                switch (minimapOptions.position) {\n                    case MinimapPosition.Inline:\n                        this.renderDecorationOnLine(canvasContext, lineOffsetMap, decoration.range, decorationColor, layout, line, minimapLineHeight, minimapLineHeight, tabSize, characterWidth, canvasInnerWidth);\n                        continue;\n                    case MinimapPosition.Gutter: {\n                        const y = layout.getYForLineNumber(line, minimapLineHeight);\n                        const x = 2;\n                        this.renderDecoration(canvasContext, decorationColor, x, y, GUTTER_DECORATION_WIDTH, minimapLineHeight);\n                        continue;\n                    }\n                }\n            }\n        }\n    }\n    renderDecorationOnLine(canvasContext, lineOffsetMap, decorationRange, decorationColor, layout, lineNumber, height, minimapLineHeight, tabSize, charWidth, canvasInnerWidth) {\n        const y = layout.getYForLineNumber(lineNumber, minimapLineHeight);\n        // Skip rendering the line if it's vertically outside our viewport\n        if (y + height < 0 || y > this._model.options.canvasInnerHeight) {\n            return;\n        }\n        const { startLineNumber, endLineNumber } = decorationRange;\n        const startColumn = (startLineNumber === lineNumber ? decorationRange.startColumn : 1);\n        const endColumn = (endLineNumber === lineNumber ? decorationRange.endColumn : this._model.getLineMaxColumn(lineNumber));\n        const x1 = this.getXOffsetForPosition(lineOffsetMap, lineNumber, startColumn, tabSize, charWidth, canvasInnerWidth);\n        const x2 = this.getXOffsetForPosition(lineOffsetMap, lineNumber, endColumn, tabSize, charWidth, canvasInnerWidth);\n        this.renderDecoration(canvasContext, decorationColor, x1, y, x2 - x1, height);\n    }\n    getXOffsetForPosition(lineOffsetMap, lineNumber, column, tabSize, charWidth, canvasInnerWidth) {\n        if (column === 1) {\n            return MINIMAP_GUTTER_WIDTH;\n        }\n        const minimumXOffset = (column - 1) * charWidth;\n        if (minimumXOffset >= canvasInnerWidth) {\n            // there is no need to look at actual characters,\n            // as this column is certainly after the minimap width\n            return canvasInnerWidth;\n        }\n        // Cache line offset data so that it is only read once per line\n        let lineIndexToXOffset = lineOffsetMap.get(lineNumber);\n        if (!lineIndexToXOffset) {\n            const lineData = this._model.getLineContent(lineNumber);\n            lineIndexToXOffset = [MINIMAP_GUTTER_WIDTH];\n            let prevx = MINIMAP_GUTTER_WIDTH;\n            for (let i = 1; i < lineData.length + 1; i++) {\n                const charCode = lineData.charCodeAt(i - 1);\n                const dx = charCode === 9 /* CharCode.Tab */\n                    ? tabSize * charWidth\n                    : strings.isFullWidthCharacter(charCode)\n                        ? 2 * charWidth\n                        : charWidth;\n                const x = prevx + dx;\n                if (x >= canvasInnerWidth) {\n                    // no need to keep on going, as we've hit the canvas width\n                    lineIndexToXOffset[i] = canvasInnerWidth;\n                    break;\n                }\n                lineIndexToXOffset[i] = x;\n                prevx = x;\n            }\n            lineOffsetMap.set(lineNumber, lineIndexToXOffset);\n        }\n        if (column - 1 < lineIndexToXOffset.length) {\n            return lineIndexToXOffset[column - 1];\n        }\n        // goes over the canvas width\n        return canvasInnerWidth;\n    }\n    renderDecoration(canvasContext, decorationColor, x, y, width, height) {\n        canvasContext.fillStyle = decorationColor && decorationColor.toString() || '';\n        canvasContext.fillRect(x, y, width, height);\n    }\n    renderLines(layout) {\n        const startLineNumber = layout.startLineNumber;\n        const endLineNumber = layout.endLineNumber;\n        const minimapLineHeight = this._model.options.minimapLineHeight;\n        // Check if nothing changed w.r.t. lines from last frame\n        if (this._lastRenderData && this._lastRenderData.linesEquals(layout)) {\n            const _lastData = this._lastRenderData._get();\n            // Nice!! Nothing changed from last frame\n            return new RenderData(layout, _lastData.imageData, _lastData.lines);\n        }\n        // Oh well!! We need to repaint some lines...\n        const imageData = this._getBuffer();\n        if (!imageData) {\n            // 0 width or 0 height canvas, nothing to do\n            return null;\n        }\n        // Render untouched lines by using last rendered data.\n        const [_dirtyY1, _dirtyY2, needed] = InnerMinimap._renderUntouchedLines(imageData, layout.topPaddingLineCount, startLineNumber, endLineNumber, minimapLineHeight, this._lastRenderData);\n        // Fetch rendering info from view model for rest of lines that need rendering.\n        const lineInfo = this._model.getMinimapLinesRenderingData(startLineNumber, endLineNumber, needed);\n        const tabSize = this._model.getOptions().tabSize;\n        const defaultBackground = this._model.options.defaultBackgroundColor;\n        const background = this._model.options.backgroundColor;\n        const foregroundAlpha = this._model.options.foregroundAlpha;\n        const tokensColorTracker = this._model.tokensColorTracker;\n        const useLighterFont = tokensColorTracker.backgroundIsLight();\n        const renderMinimap = this._model.options.renderMinimap;\n        const charRenderer = this._model.options.charRenderer();\n        const fontScale = this._model.options.fontScale;\n        const minimapCharWidth = this._model.options.minimapCharWidth;\n        const baseCharHeight = (renderMinimap === 1 /* RenderMinimap.Text */ ? 2 /* Constants.BASE_CHAR_HEIGHT */ : 2 /* Constants.BASE_CHAR_HEIGHT */ + 1);\n        const renderMinimapLineHeight = baseCharHeight * fontScale;\n        const innerLinePadding = (minimapLineHeight > renderMinimapLineHeight ? Math.floor((minimapLineHeight - renderMinimapLineHeight) / 2) : 0);\n        // Render the rest of lines\n        const backgroundA = background.a / 255;\n        const renderBackground = new RGBA8(Math.round((background.r - defaultBackground.r) * backgroundA + defaultBackground.r), Math.round((background.g - defaultBackground.g) * backgroundA + defaultBackground.g), Math.round((background.b - defaultBackground.b) * backgroundA + defaultBackground.b), 255);\n        let dy = layout.topPaddingLineCount * minimapLineHeight;\n        const renderedLines = [];\n        for (let lineIndex = 0, lineCount = endLineNumber - startLineNumber + 1; lineIndex < lineCount; lineIndex++) {\n            if (needed[lineIndex]) {\n                InnerMinimap._renderLine(imageData, renderBackground, background.a, useLighterFont, renderMinimap, minimapCharWidth, tokensColorTracker, foregroundAlpha, charRenderer, dy, innerLinePadding, tabSize, lineInfo[lineIndex], fontScale, minimapLineHeight);\n            }\n            renderedLines[lineIndex] = new MinimapLine(dy);\n            dy += minimapLineHeight;\n        }\n        const dirtyY1 = (_dirtyY1 === -1 ? 0 : _dirtyY1);\n        const dirtyY2 = (_dirtyY2 === -1 ? imageData.height : _dirtyY2);\n        const dirtyHeight = dirtyY2 - dirtyY1;\n        // Finally, paint to the canvas\n        const ctx = this._canvas.domNode.getContext('2d');\n        ctx.putImageData(imageData, 0, 0, 0, dirtyY1, imageData.width, dirtyHeight);\n        // Save rendered data for reuse on next frame if possible\n        return new RenderData(layout, imageData, renderedLines);\n    }\n    static _renderUntouchedLines(target, topPaddingLineCount, startLineNumber, endLineNumber, minimapLineHeight, lastRenderData) {\n        const needed = [];\n        if (!lastRenderData) {\n            for (let i = 0, len = endLineNumber - startLineNumber + 1; i < len; i++) {\n                needed[i] = true;\n            }\n            return [-1, -1, needed];\n        }\n        const _lastData = lastRenderData._get();\n        const lastTargetData = _lastData.imageData.data;\n        const lastStartLineNumber = _lastData.rendLineNumberStart;\n        const lastLines = _lastData.lines;\n        const lastLinesLength = lastLines.length;\n        const WIDTH = target.width;\n        const targetData = target.data;\n        const maxDestPixel = (endLineNumber - startLineNumber + 1) * minimapLineHeight * WIDTH * 4;\n        let dirtyPixel1 = -1; // the pixel offset up to which all the data is equal to the prev frame\n        let dirtyPixel2 = -1; // the pixel offset after which all the data is equal to the prev frame\n        let copySourceStart = -1;\n        let copySourceEnd = -1;\n        let copyDestStart = -1;\n        let copyDestEnd = -1;\n        let dest_dy = topPaddingLineCount * minimapLineHeight;\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - startLineNumber;\n            const lastLineIndex = lineNumber - lastStartLineNumber;\n            const source_dy = (lastLineIndex >= 0 && lastLineIndex < lastLinesLength ? lastLines[lastLineIndex].dy : -1);\n            if (source_dy === -1) {\n                needed[lineIndex] = true;\n                dest_dy += minimapLineHeight;\n                continue;\n            }\n            const sourceStart = source_dy * WIDTH * 4;\n            const sourceEnd = (source_dy + minimapLineHeight) * WIDTH * 4;\n            const destStart = dest_dy * WIDTH * 4;\n            const destEnd = (dest_dy + minimapLineHeight) * WIDTH * 4;\n            if (copySourceEnd === sourceStart && copyDestEnd === destStart) {\n                // contiguous zone => extend copy request\n                copySourceEnd = sourceEnd;\n                copyDestEnd = destEnd;\n            }\n            else {\n                if (copySourceStart !== -1) {\n                    // flush existing copy request\n                    targetData.set(lastTargetData.subarray(copySourceStart, copySourceEnd), copyDestStart);\n                    if (dirtyPixel1 === -1 && copySourceStart === 0 && copySourceStart === copyDestStart) {\n                        dirtyPixel1 = copySourceEnd;\n                    }\n                    if (dirtyPixel2 === -1 && copySourceEnd === maxDestPixel && copySourceStart === copyDestStart) {\n                        dirtyPixel2 = copySourceStart;\n                    }\n                }\n                copySourceStart = sourceStart;\n                copySourceEnd = sourceEnd;\n                copyDestStart = destStart;\n                copyDestEnd = destEnd;\n            }\n            needed[lineIndex] = false;\n            dest_dy += minimapLineHeight;\n        }\n        if (copySourceStart !== -1) {\n            // flush existing copy request\n            targetData.set(lastTargetData.subarray(copySourceStart, copySourceEnd), copyDestStart);\n            if (dirtyPixel1 === -1 && copySourceStart === 0 && copySourceStart === copyDestStart) {\n                dirtyPixel1 = copySourceEnd;\n            }\n            if (dirtyPixel2 === -1 && copySourceEnd === maxDestPixel && copySourceStart === copyDestStart) {\n                dirtyPixel2 = copySourceStart;\n            }\n        }\n        const dirtyY1 = (dirtyPixel1 === -1 ? -1 : dirtyPixel1 / (WIDTH * 4));\n        const dirtyY2 = (dirtyPixel2 === -1 ? -1 : dirtyPixel2 / (WIDTH * 4));\n        return [dirtyY1, dirtyY2, needed];\n    }\n    static _renderLine(target, backgroundColor, backgroundAlpha, useLighterFont, renderMinimap, charWidth, colorTracker, foregroundAlpha, minimapCharRenderer, dy, innerLinePadding, tabSize, lineData, fontScale, minimapLineHeight) {\n        const content = lineData.content;\n        const tokens = lineData.tokens;\n        const maxDx = target.width - charWidth;\n        const force1pxHeight = (minimapLineHeight === 1);\n        let dx = MINIMAP_GUTTER_WIDTH;\n        let charIndex = 0;\n        let tabsCharDelta = 0;\n        for (let tokenIndex = 0, tokensLen = tokens.getCount(); tokenIndex < tokensLen; tokenIndex++) {\n            const tokenEndIndex = tokens.getEndOffset(tokenIndex);\n            const tokenColorId = tokens.getForeground(tokenIndex);\n            const tokenColor = colorTracker.getColor(tokenColorId);\n            for (; charIndex < tokenEndIndex; charIndex++) {\n                if (dx > maxDx) {\n                    // hit edge of minimap\n                    return;\n                }\n                const charCode = content.charCodeAt(charIndex);\n                if (charCode === 9 /* CharCode.Tab */) {\n                    const insertSpacesCount = tabSize - (charIndex + tabsCharDelta) % tabSize;\n                    tabsCharDelta += insertSpacesCount - 1;\n                    // No need to render anything since tab is invisible\n                    dx += insertSpacesCount * charWidth;\n                }\n                else if (charCode === 32 /* CharCode.Space */) {\n                    // No need to render anything since space is invisible\n                    dx += charWidth;\n                }\n                else {\n                    // Render twice for a full width character\n                    const count = strings.isFullWidthCharacter(charCode) ? 2 : 1;\n                    for (let i = 0; i < count; i++) {\n                        if (renderMinimap === 2 /* RenderMinimap.Blocks */) {\n                            minimapCharRenderer.blockRenderChar(target, dx, dy + innerLinePadding, tokenColor, foregroundAlpha, backgroundColor, backgroundAlpha, force1pxHeight);\n                        }\n                        else { // RenderMinimap.Text\n                            minimapCharRenderer.renderChar(target, dx, dy + innerLinePadding, charCode, tokenColor, foregroundAlpha, backgroundColor, backgroundAlpha, fontScale, useLighterFont, force1pxHeight);\n                        }\n                        dx += charWidth;\n                        if (dx > maxDx) {\n                            // hit edge of minimap\n                            return;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\nclass ContiguousLineMap {\n    constructor(startLineNumber, endLineNumber, defaultValue) {\n        this._startLineNumber = startLineNumber;\n        this._endLineNumber = endLineNumber;\n        this._defaultValue = defaultValue;\n        this._values = [];\n        for (let i = 0, count = this._endLineNumber - this._startLineNumber + 1; i < count; i++) {\n            this._values[i] = defaultValue;\n        }\n    }\n    has(lineNumber) {\n        return (this.get(lineNumber) !== this._defaultValue);\n    }\n    set(lineNumber, value) {\n        if (lineNumber < this._startLineNumber || lineNumber > this._endLineNumber) {\n            return;\n        }\n        this._values[lineNumber - this._startLineNumber] = value;\n    }\n    get(lineNumber) {\n        if (lineNumber < this._startLineNumber || lineNumber > this._endLineNumber) {\n            return this._defaultValue;\n        }\n        return this._values[lineNumber - this._startLineNumber];\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './overlayWidgets.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { PartFingerprints, ViewPart } from '../../view/viewPart.js';\nexport class ViewOverlayWidgets extends ViewPart {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this._widgets = {};\n        this._verticalScrollbarWidth = layoutInfo.verticalScrollbarWidth;\n        this._minimapWidth = layoutInfo.minimap.minimapWidth;\n        this._horizontalScrollbarHeight = layoutInfo.horizontalScrollbarHeight;\n        this._editorHeight = layoutInfo.height;\n        this._editorWidth = layoutInfo.width;\n        this._domNode = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this._domNode, 4 /* PartFingerprint.OverlayWidgets */);\n        this._domNode.setClassName('overlayWidgets');\n    }\n    dispose() {\n        super.dispose();\n        this._widgets = {};\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this._verticalScrollbarWidth = layoutInfo.verticalScrollbarWidth;\n        this._minimapWidth = layoutInfo.minimap.minimapWidth;\n        this._horizontalScrollbarHeight = layoutInfo.horizontalScrollbarHeight;\n        this._editorHeight = layoutInfo.height;\n        this._editorWidth = layoutInfo.width;\n        return true;\n    }\n    // ---- end view event handlers\n    addWidget(widget) {\n        const domNode = createFastDomNode(widget.getDomNode());\n        this._widgets[widget.getId()] = {\n            widget: widget,\n            preference: null,\n            domNode: domNode\n        };\n        // This is sync because a widget wants to be in the dom\n        domNode.setPosition('absolute');\n        domNode.setAttribute('widgetId', widget.getId());\n        this._domNode.appendChild(domNode);\n        this.setShouldRender();\n        this._updateMaxMinWidth();\n    }\n    setWidgetPosition(widget, preference) {\n        const widgetData = this._widgets[widget.getId()];\n        if (widgetData.preference === preference) {\n            this._updateMaxMinWidth();\n            return false;\n        }\n        widgetData.preference = preference;\n        this.setShouldRender();\n        this._updateMaxMinWidth();\n        return true;\n    }\n    removeWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._widgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._widgets[widgetId];\n            const domNode = widgetData.domNode.domNode;\n            delete this._widgets[widgetId];\n            domNode.parentNode.removeChild(domNode);\n            this.setShouldRender();\n            this._updateMaxMinWidth();\n        }\n    }\n    _updateMaxMinWidth() {\n        var _a, _b;\n        let maxMinWidth = 0;\n        const keys = Object.keys(this._widgets);\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const widgetId = keys[i];\n            const widget = this._widgets[widgetId];\n            const widgetMinWidthInPx = (_b = (_a = widget.widget).getMinContentWidthInPx) === null || _b === void 0 ? void 0 : _b.call(_a);\n            if (typeof widgetMinWidthInPx !== 'undefined') {\n                maxMinWidth = Math.max(maxMinWidth, widgetMinWidthInPx);\n            }\n        }\n        this._context.viewLayout.setOverlayWidgetsMinWidth(maxMinWidth);\n    }\n    _renderWidget(widgetData) {\n        const domNode = widgetData.domNode;\n        if (widgetData.preference === null) {\n            domNode.setTop('');\n            return;\n        }\n        if (widgetData.preference === 0 /* OverlayWidgetPositionPreference.TOP_RIGHT_CORNER */) {\n            domNode.setTop(0);\n            domNode.setRight((2 * this._verticalScrollbarWidth) + this._minimapWidth);\n        }\n        else if (widgetData.preference === 1 /* OverlayWidgetPositionPreference.BOTTOM_RIGHT_CORNER */) {\n            const widgetHeight = domNode.domNode.clientHeight;\n            domNode.setTop((this._editorHeight - widgetHeight - 2 * this._horizontalScrollbarHeight));\n            domNode.setRight((2 * this._verticalScrollbarWidth) + this._minimapWidth);\n        }\n        else if (widgetData.preference === 2 /* OverlayWidgetPositionPreference.TOP_CENTER */) {\n            domNode.setTop(0);\n            domNode.domNode.style.right = '50%';\n        }\n    }\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(ctx) {\n        this._domNode.setWidth(this._editorWidth);\n        const keys = Object.keys(this._widgets);\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const widgetId = keys[i];\n            this._renderWidget(this._widgets[widgetId]);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { Position } from '../../../common/core/position.js';\nimport { TokenizationRegistry } from '../../../common/languages.js';\nimport { editorCursorForeground, editorOverviewRulerBorder, editorOverviewRulerBackground } from '../../../common/core/editorColorRegistry.js';\nimport { OverviewRulerDecorationsGroup } from '../../../common/viewModel.js';\nimport { equals } from '../../../../base/common/arrays.js';\nclass Settings {\n    constructor(config, theme) {\n        const options = config.options;\n        this.lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this.pixelRatio = options.get(141 /* EditorOption.pixelRatio */);\n        this.overviewRulerLanes = options.get(82 /* EditorOption.overviewRulerLanes */);\n        this.renderBorder = options.get(81 /* EditorOption.overviewRulerBorder */);\n        const borderColor = theme.getColor(editorOverviewRulerBorder);\n        this.borderColor = borderColor ? borderColor.toString() : null;\n        this.hideCursor = options.get(59 /* EditorOption.hideCursorInOverviewRuler */);\n        const cursorColor = theme.getColor(editorCursorForeground);\n        this.cursorColor = cursorColor ? cursorColor.transparent(0.7).toString() : null;\n        this.themeType = theme.type;\n        const minimapOpts = options.get(72 /* EditorOption.minimap */);\n        const minimapEnabled = minimapOpts.enabled;\n        const minimapSide = minimapOpts.side;\n        const themeColor = theme.getColor(editorOverviewRulerBackground);\n        const defaultBackground = TokenizationRegistry.getDefaultBackground();\n        if (themeColor) {\n            this.backgroundColor = themeColor;\n        }\n        else if (minimapEnabled && minimapSide === 'right') {\n            this.backgroundColor = defaultBackground;\n        }\n        else {\n            this.backgroundColor = null;\n        }\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        const position = layoutInfo.overviewRuler;\n        this.top = position.top;\n        this.right = position.right;\n        this.domWidth = position.width;\n        this.domHeight = position.height;\n        if (this.overviewRulerLanes === 0) {\n            // overview ruler is off\n            this.canvasWidth = 0;\n            this.canvasHeight = 0;\n        }\n        else {\n            this.canvasWidth = (this.domWidth * this.pixelRatio) | 0;\n            this.canvasHeight = (this.domHeight * this.pixelRatio) | 0;\n        }\n        const [x, w] = this._initLanes(1, this.canvasWidth, this.overviewRulerLanes);\n        this.x = x;\n        this.w = w;\n    }\n    _initLanes(canvasLeftOffset, canvasWidth, laneCount) {\n        const remainingWidth = canvasWidth - canvasLeftOffset;\n        if (laneCount >= 3) {\n            const leftWidth = Math.floor(remainingWidth / 3);\n            const rightWidth = Math.floor(remainingWidth / 3);\n            const centerWidth = remainingWidth - leftWidth - rightWidth;\n            const leftOffset = canvasLeftOffset;\n            const centerOffset = leftOffset + leftWidth;\n            const rightOffset = leftOffset + leftWidth + centerWidth;\n            return [\n                [\n                    0,\n                    leftOffset, // Left\n                    centerOffset, // Center\n                    leftOffset, // Left | Center\n                    rightOffset, // Right\n                    leftOffset, // Left | Right\n                    centerOffset, // Center | Right\n                    leftOffset, // Left | Center | Right\n                ], [\n                    0,\n                    leftWidth, // Left\n                    centerWidth, // Center\n                    leftWidth + centerWidth, // Left | Center\n                    rightWidth, // Right\n                    leftWidth + centerWidth + rightWidth, // Left | Right\n                    centerWidth + rightWidth, // Center | Right\n                    leftWidth + centerWidth + rightWidth, // Left | Center | Right\n                ]\n            ];\n        }\n        else if (laneCount === 2) {\n            const leftWidth = Math.floor(remainingWidth / 2);\n            const rightWidth = remainingWidth - leftWidth;\n            const leftOffset = canvasLeftOffset;\n            const rightOffset = leftOffset + leftWidth;\n            return [\n                [\n                    0,\n                    leftOffset, // Left\n                    leftOffset, // Center\n                    leftOffset, // Left | Center\n                    rightOffset, // Right\n                    leftOffset, // Left | Right\n                    leftOffset, // Center | Right\n                    leftOffset, // Left | Center | Right\n                ], [\n                    0,\n                    leftWidth, // Left\n                    leftWidth, // Center\n                    leftWidth, // Left | Center\n                    rightWidth, // Right\n                    leftWidth + rightWidth, // Left | Right\n                    leftWidth + rightWidth, // Center | Right\n                    leftWidth + rightWidth, // Left | Center | Right\n                ]\n            ];\n        }\n        else {\n            const offset = canvasLeftOffset;\n            const width = remainingWidth;\n            return [\n                [\n                    0,\n                    offset, // Left\n                    offset, // Center\n                    offset, // Left | Center\n                    offset, // Right\n                    offset, // Left | Right\n                    offset, // Center | Right\n                    offset, // Left | Center | Right\n                ], [\n                    0,\n                    width, // Left\n                    width, // Center\n                    width, // Left | Center\n                    width, // Right\n                    width, // Left | Right\n                    width, // Center | Right\n                    width, // Left | Center | Right\n                ]\n            ];\n        }\n    }\n    equals(other) {\n        return (this.lineHeight === other.lineHeight\n            && this.pixelRatio === other.pixelRatio\n            && this.overviewRulerLanes === other.overviewRulerLanes\n            && this.renderBorder === other.renderBorder\n            && this.borderColor === other.borderColor\n            && this.hideCursor === other.hideCursor\n            && this.cursorColor === other.cursorColor\n            && this.themeType === other.themeType\n            && Color.equals(this.backgroundColor, other.backgroundColor)\n            && this.top === other.top\n            && this.right === other.right\n            && this.domWidth === other.domWidth\n            && this.domHeight === other.domHeight\n            && this.canvasWidth === other.canvasWidth\n            && this.canvasHeight === other.canvasHeight);\n    }\n}\nexport class DecorationsOverviewRuler extends ViewPart {\n    constructor(context) {\n        super(context);\n        this._actualShouldRender = 0 /* ShouldRenderValue.NotNeeded */;\n        this._renderedDecorations = [];\n        this._renderedCursorPositions = [];\n        this._domNode = createFastDomNode(document.createElement('canvas'));\n        this._domNode.setClassName('decorationsOverviewRuler');\n        this._domNode.setPosition('absolute');\n        this._domNode.setLayerHinting(true);\n        this._domNode.setContain('strict');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        this._updateSettings(false);\n        this._tokensColorTrackerListener = TokenizationRegistry.onDidChange((e) => {\n            if (e.changedColorMap) {\n                this._updateSettings(true);\n            }\n        });\n        this._cursorPositions = [];\n    }\n    dispose() {\n        super.dispose();\n        this._tokensColorTrackerListener.dispose();\n    }\n    _updateSettings(renderNow) {\n        const newSettings = new Settings(this._context.configuration, this._context.theme);\n        if (this._settings && this._settings.equals(newSettings)) {\n            // nothing to do\n            return false;\n        }\n        this._settings = newSettings;\n        this._domNode.setTop(this._settings.top);\n        this._domNode.setRight(this._settings.right);\n        this._domNode.setWidth(this._settings.domWidth);\n        this._domNode.setHeight(this._settings.domHeight);\n        this._domNode.domNode.width = this._settings.canvasWidth;\n        this._domNode.domNode.height = this._settings.canvasHeight;\n        if (renderNow) {\n            this._render();\n        }\n        return true;\n    }\n    // ---- begin view event handlers\n    _markRenderingIsNeeded() {\n        this._actualShouldRender = 2 /* ShouldRenderValue.Needed */;\n        return true;\n    }\n    _markRenderingIsMaybeNeeded() {\n        this._actualShouldRender = 1 /* ShouldRenderValue.Maybe */;\n        return true;\n    }\n    onConfigurationChanged(e) {\n        return this._updateSettings(false) ? this._markRenderingIsNeeded() : false;\n    }\n    onCursorStateChanged(e) {\n        this._cursorPositions = [];\n        for (let i = 0, len = e.selections.length; i < len; i++) {\n            this._cursorPositions[i] = e.selections[i].getPosition();\n        }\n        this._cursorPositions.sort(Position.compare);\n        return this._markRenderingIsMaybeNeeded();\n    }\n    onDecorationsChanged(e) {\n        if (e.affectsOverviewRuler) {\n            return this._markRenderingIsMaybeNeeded();\n        }\n        return false;\n    }\n    onFlushed(e) {\n        return this._markRenderingIsNeeded();\n    }\n    onScrollChanged(e) {\n        return e.scrollHeightChanged ? this._markRenderingIsNeeded() : false;\n    }\n    onZonesChanged(e) {\n        return this._markRenderingIsNeeded();\n    }\n    onThemeChanged(e) {\n        return this._updateSettings(false) ? this._markRenderingIsNeeded() : false;\n    }\n    // ---- end view event handlers\n    getDomNode() {\n        return this._domNode.domNode;\n    }\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(editorCtx) {\n        this._render();\n        this._actualShouldRender = 0 /* ShouldRenderValue.NotNeeded */;\n    }\n    _render() {\n        const backgroundColor = this._settings.backgroundColor;\n        if (this._settings.overviewRulerLanes === 0) {\n            // overview ruler is off\n            this._domNode.setBackgroundColor(backgroundColor ? Color.Format.CSS.formatHexA(backgroundColor) : '');\n            this._domNode.setDisplay('none');\n            return;\n        }\n        const decorations = this._context.viewModel.getAllOverviewRulerDecorations(this._context.theme);\n        decorations.sort(OverviewRulerDecorationsGroup.compareByRenderingProps);\n        if (this._actualShouldRender === 1 /* ShouldRenderValue.Maybe */ && !OverviewRulerDecorationsGroup.equalsArr(this._renderedDecorations, decorations)) {\n            this._actualShouldRender = 2 /* ShouldRenderValue.Needed */;\n        }\n        if (this._actualShouldRender === 1 /* ShouldRenderValue.Maybe */ && !equals(this._renderedCursorPositions, this._cursorPositions, (a, b) => a.lineNumber === b.lineNumber)) {\n            this._actualShouldRender = 2 /* ShouldRenderValue.Needed */;\n        }\n        if (this._actualShouldRender === 1 /* ShouldRenderValue.Maybe */) {\n            // both decorations and cursor positions are unchanged, nothing to do\n            return;\n        }\n        this._renderedDecorations = decorations;\n        this._renderedCursorPositions = this._cursorPositions;\n        this._domNode.setDisplay('block');\n        const canvasWidth = this._settings.canvasWidth;\n        const canvasHeight = this._settings.canvasHeight;\n        const lineHeight = this._settings.lineHeight;\n        const viewLayout = this._context.viewLayout;\n        const outerHeight = this._context.viewLayout.getScrollHeight();\n        const heightRatio = canvasHeight / outerHeight;\n        const minDecorationHeight = (6 /* Constants.MIN_DECORATION_HEIGHT */ * this._settings.pixelRatio) | 0;\n        const halfMinDecorationHeight = (minDecorationHeight / 2) | 0;\n        const canvasCtx = this._domNode.domNode.getContext('2d');\n        if (backgroundColor) {\n            if (backgroundColor.isOpaque()) {\n                // We have a background color which is opaque, we can just paint the entire surface with it\n                canvasCtx.fillStyle = Color.Format.CSS.formatHexA(backgroundColor);\n                canvasCtx.fillRect(0, 0, canvasWidth, canvasHeight);\n            }\n            else {\n                // We have a background color which is transparent, we need to first clear the surface and\n                // then fill it\n                canvasCtx.clearRect(0, 0, canvasWidth, canvasHeight);\n                canvasCtx.fillStyle = Color.Format.CSS.formatHexA(backgroundColor);\n                canvasCtx.fillRect(0, 0, canvasWidth, canvasHeight);\n            }\n        }\n        else {\n            // We don't have a background color\n            canvasCtx.clearRect(0, 0, canvasWidth, canvasHeight);\n        }\n        const x = this._settings.x;\n        const w = this._settings.w;\n        for (const decorationGroup of decorations) {\n            const color = decorationGroup.color;\n            const decorationGroupData = decorationGroup.data;\n            canvasCtx.fillStyle = color;\n            let prevLane = 0;\n            let prevY1 = 0;\n            let prevY2 = 0;\n            for (let i = 0, len = decorationGroupData.length / 3; i < len; i++) {\n                const lane = decorationGroupData[3 * i];\n                const startLineNumber = decorationGroupData[3 * i + 1];\n                const endLineNumber = decorationGroupData[3 * i + 2];\n                let y1 = (viewLayout.getVerticalOffsetForLineNumber(startLineNumber) * heightRatio) | 0;\n                let y2 = ((viewLayout.getVerticalOffsetForLineNumber(endLineNumber) + lineHeight) * heightRatio) | 0;\n                const height = y2 - y1;\n                if (height < minDecorationHeight) {\n                    let yCenter = ((y1 + y2) / 2) | 0;\n                    if (yCenter < halfMinDecorationHeight) {\n                        yCenter = halfMinDecorationHeight;\n                    }\n                    else if (yCenter + halfMinDecorationHeight > canvasHeight) {\n                        yCenter = canvasHeight - halfMinDecorationHeight;\n                    }\n                    y1 = yCenter - halfMinDecorationHeight;\n                    y2 = yCenter + halfMinDecorationHeight;\n                }\n                if (y1 > prevY2 + 1 || lane !== prevLane) {\n                    // flush prev\n                    if (i !== 0) {\n                        canvasCtx.fillRect(x[prevLane], prevY1, w[prevLane], prevY2 - prevY1);\n                    }\n                    prevLane = lane;\n                    prevY1 = y1;\n                    prevY2 = y2;\n                }\n                else {\n                    // merge into prev\n                    if (y2 > prevY2) {\n                        prevY2 = y2;\n                    }\n                }\n            }\n            canvasCtx.fillRect(x[prevLane], prevY1, w[prevLane], prevY2 - prevY1);\n        }\n        // Draw cursors\n        if (!this._settings.hideCursor && this._settings.cursorColor) {\n            const cursorHeight = (2 * this._settings.pixelRatio) | 0;\n            const halfCursorHeight = (cursorHeight / 2) | 0;\n            const cursorX = this._settings.x[7 /* OverviewRulerLane.Full */];\n            const cursorW = this._settings.w[7 /* OverviewRulerLane.Full */];\n            canvasCtx.fillStyle = this._settings.cursorColor;\n            let prevY1 = -100;\n            let prevY2 = -100;\n            for (let i = 0, len = this._cursorPositions.length; i < len; i++) {\n                const cursor = this._cursorPositions[i];\n                let yCenter = (viewLayout.getVerticalOffsetForLineNumber(cursor.lineNumber) * heightRatio) | 0;\n                if (yCenter < halfCursorHeight) {\n                    yCenter = halfCursorHeight;\n                }\n                else if (yCenter + halfCursorHeight > canvasHeight) {\n                    yCenter = canvasHeight - halfCursorHeight;\n                }\n                const y1 = yCenter - halfCursorHeight;\n                const y2 = y1 + cursorHeight;\n                if (y1 > prevY2 + 1) {\n                    // flush prev\n                    if (i !== 0) {\n                        canvasCtx.fillRect(cursorX, prevY1, cursorW, prevY2 - prevY1);\n                    }\n                    prevY1 = y1;\n                    prevY2 = y2;\n                }\n                else {\n                    // merge into prev\n                    if (y2 > prevY2) {\n                        prevY2 = y2;\n                    }\n                }\n            }\n            canvasCtx.fillRect(cursorX, prevY1, cursorW, prevY2 - prevY1);\n        }\n        if (this._settings.renderBorder && this._settings.borderColor && this._settings.overviewRulerLanes > 0) {\n            canvasCtx.beginPath();\n            canvasCtx.lineWidth = 1;\n            canvasCtx.strokeStyle = this._settings.borderColor;\n            canvasCtx.moveTo(0, 0);\n            canvasCtx.lineTo(0, canvasHeight);\n            canvasCtx.stroke();\n            canvasCtx.moveTo(0, 0);\n            canvasCtx.lineTo(canvasWidth, 0);\n            canvasCtx.stroke();\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { OverviewZoneManager } from '../../../common/viewModel/overviewZoneManager.js';\nimport { ViewEventHandler } from '../../../common/viewEventHandler.js';\nexport class OverviewRuler extends ViewEventHandler {\n    constructor(context, cssClassName) {\n        super();\n        this._context = context;\n        const options = this._context.configuration.options;\n        this._domNode = createFastDomNode(document.createElement('canvas'));\n        this._domNode.setClassName(cssClassName);\n        this._domNode.setPosition('absolute');\n        this._domNode.setLayerHinting(true);\n        this._domNode.setContain('strict');\n        this._zoneManager = new OverviewZoneManager((lineNumber) => this._context.viewLayout.getVerticalOffsetForLineNumber(lineNumber));\n        this._zoneManager.setDOMWidth(0);\n        this._zoneManager.setDOMHeight(0);\n        this._zoneManager.setOuterHeight(this._context.viewLayout.getScrollHeight());\n        this._zoneManager.setLineHeight(options.get(66 /* EditorOption.lineHeight */));\n        this._zoneManager.setPixelRatio(options.get(141 /* EditorOption.pixelRatio */));\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        super.dispose();\n    }\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        if (e.hasChanged(66 /* EditorOption.lineHeight */)) {\n            this._zoneManager.setLineHeight(options.get(66 /* EditorOption.lineHeight */));\n            this._render();\n        }\n        if (e.hasChanged(141 /* EditorOption.pixelRatio */)) {\n            this._zoneManager.setPixelRatio(options.get(141 /* EditorOption.pixelRatio */));\n            this._domNode.setWidth(this._zoneManager.getDOMWidth());\n            this._domNode.setHeight(this._zoneManager.getDOMHeight());\n            this._domNode.domNode.width = this._zoneManager.getCanvasWidth();\n            this._domNode.domNode.height = this._zoneManager.getCanvasHeight();\n            this._render();\n        }\n        return true;\n    }\n    onFlushed(e) {\n        this._render();\n        return true;\n    }\n    onScrollChanged(e) {\n        if (e.scrollHeightChanged) {\n            this._zoneManager.setOuterHeight(e.scrollHeight);\n            this._render();\n        }\n        return true;\n    }\n    onZonesChanged(e) {\n        this._render();\n        return true;\n    }\n    // ---- end view event handlers\n    getDomNode() {\n        return this._domNode.domNode;\n    }\n    setLayout(position) {\n        this._domNode.setTop(position.top);\n        this._domNode.setRight(position.right);\n        let hasChanged = false;\n        hasChanged = this._zoneManager.setDOMWidth(position.width) || hasChanged;\n        hasChanged = this._zoneManager.setDOMHeight(position.height) || hasChanged;\n        if (hasChanged) {\n            this._domNode.setWidth(this._zoneManager.getDOMWidth());\n            this._domNode.setHeight(this._zoneManager.getDOMHeight());\n            this._domNode.domNode.width = this._zoneManager.getCanvasWidth();\n            this._domNode.domNode.height = this._zoneManager.getCanvasHeight();\n            this._render();\n        }\n    }\n    setZones(zones) {\n        this._zoneManager.setZones(zones);\n        this._render();\n    }\n    _render() {\n        if (this._zoneManager.getOuterHeight() === 0) {\n            return false;\n        }\n        const width = this._zoneManager.getCanvasWidth();\n        const height = this._zoneManager.getCanvasHeight();\n        const colorZones = this._zoneManager.resolveColorZones();\n        const id2Color = this._zoneManager.getId2Color();\n        const ctx = this._domNode.domNode.getContext('2d');\n        ctx.clearRect(0, 0, width, height);\n        if (colorZones.length > 0) {\n            this._renderOneLane(ctx, colorZones, id2Color, width);\n        }\n        return true;\n    }\n    _renderOneLane(ctx, colorZones, id2Color, width) {\n        let currentColorId = 0;\n        let currentFrom = 0;\n        let currentTo = 0;\n        for (const zone of colorZones) {\n            const zoneColorId = zone.colorId;\n            const zoneFrom = zone.from;\n            const zoneTo = zone.to;\n            if (zoneColorId !== currentColorId) {\n                ctx.fillRect(0, currentFrom, width, currentTo - currentFrom);\n                currentColorId = zoneColorId;\n                ctx.fillStyle = id2Color[currentColorId];\n                currentFrom = zoneFrom;\n                currentTo = zoneTo;\n            }\n            else {\n                if (currentTo >= zoneFrom) {\n                    currentTo = Math.max(currentTo, zoneTo);\n                }\n                else {\n                    ctx.fillRect(0, currentFrom, width, currentTo - currentFrom);\n                    currentFrom = zoneFrom;\n                    currentTo = zoneTo;\n                }\n            }\n        }\n        ctx.fillRect(0, currentFrom, width, currentTo - currentFrom);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './rulers.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ViewPart } from '../../view/viewPart.js';\nexport class Rulers extends ViewPart {\n    constructor(context) {\n        super(context);\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setAttribute('role', 'presentation');\n        this.domNode.setAttribute('aria-hidden', 'true');\n        this.domNode.setClassName('view-rulers');\n        this._renderedRulers = [];\n        const options = this._context.configuration.options;\n        this._rulers = options.get(101 /* EditorOption.rulers */);\n        this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n    }\n    dispose() {\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._rulers = options.get(101 /* EditorOption.rulers */);\n        this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollHeightChanged;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    _ensureRulersCount() {\n        const currentCount = this._renderedRulers.length;\n        const desiredCount = this._rulers.length;\n        if (currentCount === desiredCount) {\n            // Nothing to do\n            return;\n        }\n        if (currentCount < desiredCount) {\n            const { tabSize } = this._context.viewModel.model.getOptions();\n            const rulerWidth = tabSize;\n            let addCount = desiredCount - currentCount;\n            while (addCount > 0) {\n                const node = createFastDomNode(document.createElement('div'));\n                node.setClassName('view-ruler');\n                node.setWidth(rulerWidth);\n                this.domNode.appendChild(node);\n                this._renderedRulers.push(node);\n                addCount--;\n            }\n            return;\n        }\n        let removeCount = currentCount - desiredCount;\n        while (removeCount > 0) {\n            const node = this._renderedRulers.pop();\n            this.domNode.removeChild(node);\n            removeCount--;\n        }\n    }\n    render(ctx) {\n        this._ensureRulersCount();\n        for (let i = 0, len = this._rulers.length; i < len; i++) {\n            const node = this._renderedRulers[i];\n            const ruler = this._rulers[i];\n            node.setBoxShadow(ruler.color ? `1px 0 0 0 ${ruler.color} inset` : ``);\n            node.setHeight(Math.min(ctx.scrollHeight, 1000000));\n            node.setLeft(ruler.column * this._typicalHalfwidthCharacterWidth);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './scrollDecoration.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ViewPart } from '../../view/viewPart.js';\nexport class ScrollDecorationViewPart extends ViewPart {\n    constructor(context) {\n        super(context);\n        this._scrollTop = 0;\n        this._width = 0;\n        this._updateWidth();\n        this._shouldShow = false;\n        const options = this._context.configuration.options;\n        const scrollbar = options.get(102 /* EditorOption.scrollbar */);\n        this._useShadows = scrollbar.useShadows;\n        this._domNode = createFastDomNode(document.createElement('div'));\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n    }\n    dispose() {\n        super.dispose();\n    }\n    _updateShouldShow() {\n        const newShouldShow = (this._useShadows && this._scrollTop > 0);\n        if (this._shouldShow !== newShouldShow) {\n            this._shouldShow = newShouldShow;\n            return true;\n        }\n        return false;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    _updateWidth() {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        if (layoutInfo.minimap.renderMinimap === 0 || (layoutInfo.minimap.minimapWidth > 0 && layoutInfo.minimap.minimapLeft === 0)) {\n            this._width = layoutInfo.width;\n        }\n        else {\n            this._width = layoutInfo.width - layoutInfo.verticalScrollbarWidth;\n        }\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const scrollbar = options.get(102 /* EditorOption.scrollbar */);\n        this._useShadows = scrollbar.useShadows;\n        this._updateWidth();\n        this._updateShouldShow();\n        return true;\n    }\n    onScrollChanged(e) {\n        this._scrollTop = e.scrollTop;\n        return this._updateShouldShow();\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(ctx) {\n        this._domNode.setWidth(this._width);\n        this._domNode.setClassName(this._shouldShow ? 'scroll-decoration' : '');\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './selections.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorSelectionForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nclass HorizontalRangeWithStyle {\n    constructor(other) {\n        this.left = other.left;\n        this.width = other.width;\n        this.startStyle = null;\n        this.endStyle = null;\n    }\n}\nclass LineVisibleRangesWithStyle {\n    constructor(lineNumber, ranges) {\n        this.lineNumber = lineNumber;\n        this.ranges = ranges;\n    }\n}\nfunction toStyledRange(item) {\n    return new HorizontalRangeWithStyle(item);\n}\nfunction toStyled(item) {\n    return new LineVisibleRangesWithStyle(item.lineNumber, item.ranges.map(toStyledRange));\n}\nexport class SelectionsOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._previousFrameVisibleRangesWithStyle = [];\n        this._context = context;\n        const options = this._context.configuration.options;\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._roundedSelection = options.get(100 /* EditorOption.roundedSelection */);\n        this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        this._selections = [];\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._roundedSelection = options.get(100 /* EditorOption.roundedSelection */);\n        this._typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        return true;\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections.slice(0);\n        return true;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations that can end up relayouting text\n        return true; //e.inlineDecorationsChanged;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    _visibleRangesHaveGaps(linesVisibleRanges) {\n        for (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\n            const lineVisibleRanges = linesVisibleRanges[i];\n            if (lineVisibleRanges.ranges.length > 1) {\n                // There are two ranges on the same line\n                return true;\n            }\n        }\n        return false;\n    }\n    _enrichVisibleRangesWithStyle(viewport, linesVisibleRanges, previousFrame) {\n        const epsilon = this._typicalHalfwidthCharacterWidth / 4;\n        let previousFrameTop = null;\n        let previousFrameBottom = null;\n        if (previousFrame && previousFrame.length > 0 && linesVisibleRanges.length > 0) {\n            const topLineNumber = linesVisibleRanges[0].lineNumber;\n            if (topLineNumber === viewport.startLineNumber) {\n                for (let i = 0; !previousFrameTop && i < previousFrame.length; i++) {\n                    if (previousFrame[i].lineNumber === topLineNumber) {\n                        previousFrameTop = previousFrame[i].ranges[0];\n                    }\n                }\n            }\n            const bottomLineNumber = linesVisibleRanges[linesVisibleRanges.length - 1].lineNumber;\n            if (bottomLineNumber === viewport.endLineNumber) {\n                for (let i = previousFrame.length - 1; !previousFrameBottom && i >= 0; i--) {\n                    if (previousFrame[i].lineNumber === bottomLineNumber) {\n                        previousFrameBottom = previousFrame[i].ranges[0];\n                    }\n                }\n            }\n            if (previousFrameTop && !previousFrameTop.startStyle) {\n                previousFrameTop = null;\n            }\n            if (previousFrameBottom && !previousFrameBottom.startStyle) {\n                previousFrameBottom = null;\n            }\n        }\n        for (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\n            // We know for a fact that there is precisely one range on each line\n            const curLineRange = linesVisibleRanges[i].ranges[0];\n            const curLeft = curLineRange.left;\n            const curRight = curLineRange.left + curLineRange.width;\n            const startStyle = {\n                top: 0 /* CornerStyle.EXTERN */,\n                bottom: 0 /* CornerStyle.EXTERN */\n            };\n            const endStyle = {\n                top: 0 /* CornerStyle.EXTERN */,\n                bottom: 0 /* CornerStyle.EXTERN */\n            };\n            if (i > 0) {\n                // Look above\n                const prevLeft = linesVisibleRanges[i - 1].ranges[0].left;\n                const prevRight = linesVisibleRanges[i - 1].ranges[0].left + linesVisibleRanges[i - 1].ranges[0].width;\n                if (abs(curLeft - prevLeft) < epsilon) {\n                    startStyle.top = 2 /* CornerStyle.FLAT */;\n                }\n                else if (curLeft > prevLeft) {\n                    startStyle.top = 1 /* CornerStyle.INTERN */;\n                }\n                if (abs(curRight - prevRight) < epsilon) {\n                    endStyle.top = 2 /* CornerStyle.FLAT */;\n                }\n                else if (prevLeft < curRight && curRight < prevRight) {\n                    endStyle.top = 1 /* CornerStyle.INTERN */;\n                }\n            }\n            else if (previousFrameTop) {\n                // Accept some hiccups near the viewport edges to save on repaints\n                startStyle.top = previousFrameTop.startStyle.top;\n                endStyle.top = previousFrameTop.endStyle.top;\n            }\n            if (i + 1 < len) {\n                // Look below\n                const nextLeft = linesVisibleRanges[i + 1].ranges[0].left;\n                const nextRight = linesVisibleRanges[i + 1].ranges[0].left + linesVisibleRanges[i + 1].ranges[0].width;\n                if (abs(curLeft - nextLeft) < epsilon) {\n                    startStyle.bottom = 2 /* CornerStyle.FLAT */;\n                }\n                else if (nextLeft < curLeft && curLeft < nextRight) {\n                    startStyle.bottom = 1 /* CornerStyle.INTERN */;\n                }\n                if (abs(curRight - nextRight) < epsilon) {\n                    endStyle.bottom = 2 /* CornerStyle.FLAT */;\n                }\n                else if (curRight < nextRight) {\n                    endStyle.bottom = 1 /* CornerStyle.INTERN */;\n                }\n            }\n            else if (previousFrameBottom) {\n                // Accept some hiccups near the viewport edges to save on repaints\n                startStyle.bottom = previousFrameBottom.startStyle.bottom;\n                endStyle.bottom = previousFrameBottom.endStyle.bottom;\n            }\n            curLineRange.startStyle = startStyle;\n            curLineRange.endStyle = endStyle;\n        }\n    }\n    _getVisibleRangesWithStyle(selection, ctx, previousFrame) {\n        const _linesVisibleRanges = ctx.linesVisibleRangesForRange(selection, true) || [];\n        const linesVisibleRanges = _linesVisibleRanges.map(toStyled);\n        const visibleRangesHaveGaps = this._visibleRangesHaveGaps(linesVisibleRanges);\n        if (!visibleRangesHaveGaps && this._roundedSelection) {\n            this._enrichVisibleRangesWithStyle(ctx.visibleRange, linesVisibleRanges, previousFrame);\n        }\n        // The visible ranges are sorted TOP-BOTTOM and LEFT-RIGHT\n        return linesVisibleRanges;\n    }\n    _createSelectionPiece(top, height, className, left, width) {\n        return ('<div class=\"cslr '\n            + className\n            + '\" style=\"top:'\n            + top.toString()\n            + 'px;left:'\n            + left.toString()\n            + 'px;width:'\n            + width.toString()\n            + 'px;height:'\n            + height\n            + 'px;\"></div>');\n    }\n    _actualRenderOneSelection(output2, visibleStartLineNumber, hasMultipleSelections, visibleRanges) {\n        if (visibleRanges.length === 0) {\n            return;\n        }\n        const visibleRangesHaveStyle = !!visibleRanges[0].ranges[0].startStyle;\n        const fullLineHeight = (this._lineHeight).toString();\n        const reducedLineHeight = (this._lineHeight - 1).toString();\n        const firstLineNumber = visibleRanges[0].lineNumber;\n        const lastLineNumber = visibleRanges[visibleRanges.length - 1].lineNumber;\n        for (let i = 0, len = visibleRanges.length; i < len; i++) {\n            const lineVisibleRanges = visibleRanges[i];\n            const lineNumber = lineVisibleRanges.lineNumber;\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const lineHeight = hasMultipleSelections ? (lineNumber === lastLineNumber || lineNumber === firstLineNumber ? reducedLineHeight : fullLineHeight) : fullLineHeight;\n            const top = hasMultipleSelections ? (lineNumber === firstLineNumber ? 1 : 0) : 0;\n            let innerCornerOutput = '';\n            let restOfSelectionOutput = '';\n            for (let j = 0, lenJ = lineVisibleRanges.ranges.length; j < lenJ; j++) {\n                const visibleRange = lineVisibleRanges.ranges[j];\n                if (visibleRangesHaveStyle) {\n                    const startStyle = visibleRange.startStyle;\n                    const endStyle = visibleRange.endStyle;\n                    if (startStyle.top === 1 /* CornerStyle.INTERN */ || startStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                        // Reverse rounded corner to the left\n                        // First comes the selection (blue layer)\n                        innerCornerOutput += this._createSelectionPiece(top, lineHeight, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                        // Second comes the background (white layer) with inverse border radius\n                        let className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n                        if (startStyle.top === 1 /* CornerStyle.INTERN */) {\n                            className += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n                        }\n                        if (startStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                            className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n                        }\n                        innerCornerOutput += this._createSelectionPiece(top, lineHeight, className, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                    }\n                    if (endStyle.top === 1 /* CornerStyle.INTERN */ || endStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                        // Reverse rounded corner to the right\n                        // First comes the selection (blue layer)\n                        innerCornerOutput += this._createSelectionPiece(top, lineHeight, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                        // Second comes the background (white layer) with inverse border radius\n                        let className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n                        if (endStyle.top === 1 /* CornerStyle.INTERN */) {\n                            className += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n                        }\n                        if (endStyle.bottom === 1 /* CornerStyle.INTERN */) {\n                            className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n                        }\n                        innerCornerOutput += this._createSelectionPiece(top, lineHeight, className, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n                    }\n                }\n                let className = SelectionsOverlay.SELECTION_CLASS_NAME;\n                if (visibleRangesHaveStyle) {\n                    const startStyle = visibleRange.startStyle;\n                    const endStyle = visibleRange.endStyle;\n                    if (startStyle.top === 0 /* CornerStyle.EXTERN */) {\n                        className += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n                    }\n                    if (startStyle.bottom === 0 /* CornerStyle.EXTERN */) {\n                        className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n                    }\n                    if (endStyle.top === 0 /* CornerStyle.EXTERN */) {\n                        className += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n                    }\n                    if (endStyle.bottom === 0 /* CornerStyle.EXTERN */) {\n                        className += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n                    }\n                }\n                restOfSelectionOutput += this._createSelectionPiece(top, lineHeight, className, visibleRange.left, visibleRange.width);\n            }\n            output2[lineIndex][0] += innerCornerOutput;\n            output2[lineIndex][1] += restOfSelectionOutput;\n        }\n    }\n    prepareRender(ctx) {\n        // Build HTML for inner corners separate from HTML for the rest of selections,\n        // as the inner corner HTML can interfere with that of other selections.\n        // In final render, make sure to place the inner corner HTML before the rest of selection HTML. See issue #77777.\n        const output = [];\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            output[lineIndex] = ['', ''];\n        }\n        const thisFrameVisibleRangesWithStyle = [];\n        for (let i = 0, len = this._selections.length; i < len; i++) {\n            const selection = this._selections[i];\n            if (selection.isEmpty()) {\n                thisFrameVisibleRangesWithStyle[i] = null;\n                continue;\n            }\n            const visibleRangesWithStyle = this._getVisibleRangesWithStyle(selection, ctx, this._previousFrameVisibleRangesWithStyle[i]);\n            thisFrameVisibleRangesWithStyle[i] = visibleRangesWithStyle;\n            this._actualRenderOneSelection(output, visibleStartLineNumber, this._selections.length > 1, visibleRangesWithStyle);\n        }\n        this._previousFrameVisibleRangesWithStyle = thisFrameVisibleRangesWithStyle;\n        this._renderResult = output.map(([internalCorners, restOfSelection]) => internalCorners + restOfSelection);\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\nSelectionsOverlay.SELECTION_CLASS_NAME = 'selected-text';\nSelectionsOverlay.SELECTION_TOP_LEFT = 'top-left-radius';\nSelectionsOverlay.SELECTION_BOTTOM_LEFT = 'bottom-left-radius';\nSelectionsOverlay.SELECTION_TOP_RIGHT = 'top-right-radius';\nSelectionsOverlay.SELECTION_BOTTOM_RIGHT = 'bottom-right-radius';\nSelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME = 'monaco-editor-background';\nSelectionsOverlay.ROUNDED_PIECE_WIDTH = 10;\nregisterThemingParticipant((theme, collector) => {\n    const editorSelectionForegroundColor = theme.getColor(editorSelectionForeground);\n    if (editorSelectionForegroundColor && !editorSelectionForegroundColor.isTransparent()) {\n        collector.addRule(`.monaco-editor .view-line span.inline-selected-text { color: ${editorSelectionForegroundColor}; }`);\n    }\n});\nfunction abs(n) {\n    return n < 0 ? -n : n;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { applyFontInfo } from '../../config/domFontInfo.js';\nimport { TextEditorCursorStyle } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../../base/browser/ui/mouseCursor/mouseCursor.js';\nclass ViewCursorRenderData {\n    constructor(top, left, paddingLeft, width, height, textContent, textContentClassName) {\n        this.top = top;\n        this.left = left;\n        this.paddingLeft = paddingLeft;\n        this.width = width;\n        this.height = height;\n        this.textContent = textContent;\n        this.textContentClassName = textContentClassName;\n    }\n}\nexport class ViewCursor {\n    constructor(context) {\n        this._context = context;\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        this._cursorStyle = options.get(28 /* EditorOption.cursorStyle */);\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this._lineCursorWidth = Math.min(options.get(31 /* EditorOption.cursorWidth */), this._typicalHalfwidthCharacterWidth);\n        this._isVisible = true;\n        // Create the dom node\n        this._domNode = createFastDomNode(document.createElement('div'));\n        this._domNode.setClassName(`cursor ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n        this._domNode.setHeight(this._lineHeight);\n        this._domNode.setTop(0);\n        this._domNode.setLeft(0);\n        applyFontInfo(this._domNode, fontInfo);\n        this._domNode.setDisplay('none');\n        this._position = new Position(1, 1);\n        this._lastRenderedContent = '';\n        this._renderData = null;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        return this._position;\n    }\n    show() {\n        if (!this._isVisible) {\n            this._domNode.setVisibility('inherit');\n            this._isVisible = true;\n        }\n    }\n    hide() {\n        if (this._isVisible) {\n            this._domNode.setVisibility('hidden');\n            this._isVisible = false;\n        }\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        this._cursorStyle = options.get(28 /* EditorOption.cursorStyle */);\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this._lineCursorWidth = Math.min(options.get(31 /* EditorOption.cursorWidth */), this._typicalHalfwidthCharacterWidth);\n        applyFontInfo(this._domNode, fontInfo);\n        return true;\n    }\n    onCursorPositionChanged(position, pauseAnimation) {\n        if (pauseAnimation) {\n            this._domNode.domNode.style.transitionProperty = 'none';\n        }\n        else {\n            this._domNode.domNode.style.transitionProperty = '';\n        }\n        this._position = position;\n        return true;\n    }\n    /**\n     * If `this._position` is inside a grapheme, returns the position where the grapheme starts.\n     * Also returns the next grapheme.\n     */\n    _getGraphemeAwarePosition() {\n        const { lineNumber, column } = this._position;\n        const lineContent = this._context.viewModel.getLineContent(lineNumber);\n        const [startOffset, endOffset] = strings.getCharContainingOffset(lineContent, column - 1);\n        return [new Position(lineNumber, startOffset + 1), lineContent.substring(startOffset, endOffset)];\n    }\n    _prepareRender(ctx) {\n        let textContent = '';\n        let textContentClassName = '';\n        const [position, nextGrapheme] = this._getGraphemeAwarePosition();\n        if (this._cursorStyle === TextEditorCursorStyle.Line || this._cursorStyle === TextEditorCursorStyle.LineThin) {\n            const visibleRange = ctx.visibleRangeForPosition(position);\n            if (!visibleRange || visibleRange.outsideRenderedLine) {\n                // Outside viewport\n                return null;\n            }\n            let width;\n            if (this._cursorStyle === TextEditorCursorStyle.Line) {\n                width = dom.computeScreenAwareSize(this._lineCursorWidth > 0 ? this._lineCursorWidth : 2);\n                if (width > 2) {\n                    textContent = nextGrapheme;\n                    textContentClassName = this._getTokenClassName(position);\n                }\n            }\n            else {\n                width = dom.computeScreenAwareSize(1);\n            }\n            let left = visibleRange.left;\n            let paddingLeft = 0;\n            if (width >= 2 && left >= 1) {\n                // shift the cursor a bit between the characters\n                paddingLeft = 1;\n                left -= paddingLeft;\n            }\n            const top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.bigNumbersDelta;\n            return new ViewCursorRenderData(top, left, paddingLeft, width, this._lineHeight, textContent, textContentClassName);\n        }\n        const visibleRangeForCharacter = ctx.linesVisibleRangesForRange(new Range(position.lineNumber, position.column, position.lineNumber, position.column + nextGrapheme.length), false);\n        if (!visibleRangeForCharacter || visibleRangeForCharacter.length === 0) {\n            // Outside viewport\n            return null;\n        }\n        const firstVisibleRangeForCharacter = visibleRangeForCharacter[0];\n        if (firstVisibleRangeForCharacter.outsideRenderedLine || firstVisibleRangeForCharacter.ranges.length === 0) {\n            // Outside viewport\n            return null;\n        }\n        const range = firstVisibleRangeForCharacter.ranges[0];\n        const width = (nextGrapheme === '\\t'\n            ? this._typicalHalfwidthCharacterWidth\n            : (range.width < 1\n                ? this._typicalHalfwidthCharacterWidth\n                : range.width));\n        if (this._cursorStyle === TextEditorCursorStyle.Block) {\n            textContent = nextGrapheme;\n            textContentClassName = this._getTokenClassName(position);\n        }\n        let top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.bigNumbersDelta;\n        let height = this._lineHeight;\n        // Underline might interfere with clicking\n        if (this._cursorStyle === TextEditorCursorStyle.Underline || this._cursorStyle === TextEditorCursorStyle.UnderlineThin) {\n            top += this._lineHeight - 2;\n            height = 2;\n        }\n        return new ViewCursorRenderData(top, range.left, 0, width, height, textContent, textContentClassName);\n    }\n    _getTokenClassName(position) {\n        const lineData = this._context.viewModel.getViewLineData(position.lineNumber);\n        const tokenIndex = lineData.tokens.findTokenIndexAtOffset(position.column - 1);\n        return lineData.tokens.getClassName(tokenIndex);\n    }\n    prepareRender(ctx) {\n        this._renderData = this._prepareRender(ctx);\n    }\n    render(ctx) {\n        if (!this._renderData) {\n            this._domNode.setDisplay('none');\n            return null;\n        }\n        if (this._lastRenderedContent !== this._renderData.textContent) {\n            this._lastRenderedContent = this._renderData.textContent;\n            this._domNode.domNode.textContent = this._lastRenderedContent;\n        }\n        this._domNode.setClassName(`cursor ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME} ${this._renderData.textContentClassName}`);\n        this._domNode.setDisplay('block');\n        this._domNode.setTop(this._renderData.top);\n        this._domNode.setLeft(this._renderData.left);\n        this._domNode.setPaddingLeft(this._renderData.paddingLeft);\n        this._domNode.setWidth(this._renderData.width);\n        this._domNode.setLineHeight(this._renderData.height);\n        this._domNode.setHeight(this._renderData.height);\n        return {\n            domNode: this._domNode.domNode,\n            position: this._position,\n            contentLeft: this._renderData.left,\n            height: this._renderData.height,\n            width: 2\n        };\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './viewCursors.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { IntervalTimer, TimeoutTimer } from '../../../../base/common/async.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { ViewCursor } from './viewCursor.js';\nimport { TextEditorCursorStyle } from '../../../common/config/editorOptions.js';\nimport { editorCursorBackground, editorCursorForeground } from '../../../common/core/editorColorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nexport class ViewCursors extends ViewPart {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        this._readOnly = options.get(90 /* EditorOption.readOnly */);\n        this._cursorBlinking = options.get(26 /* EditorOption.cursorBlinking */);\n        this._cursorStyle = options.get(28 /* EditorOption.cursorStyle */);\n        this._cursorSmoothCaretAnimation = options.get(27 /* EditorOption.cursorSmoothCaretAnimation */);\n        this._selectionIsEmpty = true;\n        this._isComposingInput = false;\n        this._isVisible = false;\n        this._primaryCursor = new ViewCursor(this._context);\n        this._secondaryCursors = [];\n        this._renderData = [];\n        this._domNode = createFastDomNode(document.createElement('div'));\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        this._updateDomClassName();\n        this._domNode.appendChild(this._primaryCursor.getDomNode());\n        this._startCursorBlinkAnimation = new TimeoutTimer();\n        this._cursorFlatBlinkInterval = new IntervalTimer();\n        this._blinkingEnabled = false;\n        this._editorHasFocus = false;\n        this._updateBlinking();\n    }\n    dispose() {\n        super.dispose();\n        this._startCursorBlinkAnimation.dispose();\n        this._cursorFlatBlinkInterval.dispose();\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    // --- begin event handlers\n    onCompositionStart(e) {\n        this._isComposingInput = true;\n        this._updateBlinking();\n        return true;\n    }\n    onCompositionEnd(e) {\n        this._isComposingInput = false;\n        this._updateBlinking();\n        return true;\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        this._readOnly = options.get(90 /* EditorOption.readOnly */);\n        this._cursorBlinking = options.get(26 /* EditorOption.cursorBlinking */);\n        this._cursorStyle = options.get(28 /* EditorOption.cursorStyle */);\n        this._cursorSmoothCaretAnimation = options.get(27 /* EditorOption.cursorSmoothCaretAnimation */);\n        this._updateBlinking();\n        this._updateDomClassName();\n        this._primaryCursor.onConfigurationChanged(e);\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            this._secondaryCursors[i].onConfigurationChanged(e);\n        }\n        return true;\n    }\n    _onCursorPositionChanged(position, secondaryPositions, reason) {\n        const pauseAnimation = (this._secondaryCursors.length !== secondaryPositions.length\n            || (this._cursorSmoothCaretAnimation === 'explicit' && reason !== 3 /* CursorChangeReason.Explicit */));\n        this._primaryCursor.onCursorPositionChanged(position, pauseAnimation);\n        this._updateBlinking();\n        if (this._secondaryCursors.length < secondaryPositions.length) {\n            // Create new cursors\n            const addCnt = secondaryPositions.length - this._secondaryCursors.length;\n            for (let i = 0; i < addCnt; i++) {\n                const newCursor = new ViewCursor(this._context);\n                this._domNode.domNode.insertBefore(newCursor.getDomNode().domNode, this._primaryCursor.getDomNode().domNode.nextSibling);\n                this._secondaryCursors.push(newCursor);\n            }\n        }\n        else if (this._secondaryCursors.length > secondaryPositions.length) {\n            // Remove some cursors\n            const removeCnt = this._secondaryCursors.length - secondaryPositions.length;\n            for (let i = 0; i < removeCnt; i++) {\n                this._domNode.removeChild(this._secondaryCursors[0].getDomNode());\n                this._secondaryCursors.splice(0, 1);\n            }\n        }\n        for (let i = 0; i < secondaryPositions.length; i++) {\n            this._secondaryCursors[i].onCursorPositionChanged(secondaryPositions[i], pauseAnimation);\n        }\n    }\n    onCursorStateChanged(e) {\n        const positions = [];\n        for (let i = 0, len = e.selections.length; i < len; i++) {\n            positions[i] = e.selections[i].getPosition();\n        }\n        this._onCursorPositionChanged(positions[0], positions.slice(1), e.reason);\n        const selectionIsEmpty = e.selections[0].isEmpty();\n        if (this._selectionIsEmpty !== selectionIsEmpty) {\n            this._selectionIsEmpty = selectionIsEmpty;\n            this._updateDomClassName();\n        }\n        return true;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations that can end up relayouting text\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onFocusChanged(e) {\n        this._editorHasFocus = e.isFocused;\n        this._updateBlinking();\n        return false;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return true;\n    }\n    onTokensChanged(e) {\n        const shouldRender = (position) => {\n            for (let i = 0, len = e.ranges.length; i < len; i++) {\n                if (e.ranges[i].fromLineNumber <= position.lineNumber && position.lineNumber <= e.ranges[i].toLineNumber) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        if (shouldRender(this._primaryCursor.getPosition())) {\n            return true;\n        }\n        for (const secondaryCursor of this._secondaryCursors) {\n            if (shouldRender(secondaryCursor.getPosition())) {\n                return true;\n            }\n        }\n        return false;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    // ---- blinking logic\n    _getCursorBlinking() {\n        if (this._isComposingInput) {\n            // avoid double cursors\n            return 0 /* TextEditorCursorBlinkingStyle.Hidden */;\n        }\n        if (!this._editorHasFocus) {\n            return 0 /* TextEditorCursorBlinkingStyle.Hidden */;\n        }\n        if (this._readOnly) {\n            return 5 /* TextEditorCursorBlinkingStyle.Solid */;\n        }\n        return this._cursorBlinking;\n    }\n    _updateBlinking() {\n        this._startCursorBlinkAnimation.cancel();\n        this._cursorFlatBlinkInterval.cancel();\n        const blinkingStyle = this._getCursorBlinking();\n        // hidden and solid are special as they involve no animations\n        const isHidden = (blinkingStyle === 0 /* TextEditorCursorBlinkingStyle.Hidden */);\n        const isSolid = (blinkingStyle === 5 /* TextEditorCursorBlinkingStyle.Solid */);\n        if (isHidden) {\n            this._hide();\n        }\n        else {\n            this._show();\n        }\n        this._blinkingEnabled = false;\n        this._updateDomClassName();\n        if (!isHidden && !isSolid) {\n            if (blinkingStyle === 1 /* TextEditorCursorBlinkingStyle.Blink */) {\n                // flat blinking is handled by JavaScript to save battery life due to Chromium step timing issue https://bugs.chromium.org/p/chromium/issues/detail?id=361587\n                this._cursorFlatBlinkInterval.cancelAndSet(() => {\n                    if (this._isVisible) {\n                        this._hide();\n                    }\n                    else {\n                        this._show();\n                    }\n                }, ViewCursors.BLINK_INTERVAL);\n            }\n            else {\n                this._startCursorBlinkAnimation.setIfNotSet(() => {\n                    this._blinkingEnabled = true;\n                    this._updateDomClassName();\n                }, ViewCursors.BLINK_INTERVAL);\n            }\n        }\n    }\n    // --- end blinking logic\n    _updateDomClassName() {\n        this._domNode.setClassName(this._getClassName());\n    }\n    _getClassName() {\n        let result = 'cursors-layer';\n        if (!this._selectionIsEmpty) {\n            result += ' has-selection';\n        }\n        switch (this._cursorStyle) {\n            case TextEditorCursorStyle.Line:\n                result += ' cursor-line-style';\n                break;\n            case TextEditorCursorStyle.Block:\n                result += ' cursor-block-style';\n                break;\n            case TextEditorCursorStyle.Underline:\n                result += ' cursor-underline-style';\n                break;\n            case TextEditorCursorStyle.LineThin:\n                result += ' cursor-line-thin-style';\n                break;\n            case TextEditorCursorStyle.BlockOutline:\n                result += ' cursor-block-outline-style';\n                break;\n            case TextEditorCursorStyle.UnderlineThin:\n                result += ' cursor-underline-thin-style';\n                break;\n            default:\n                result += ' cursor-line-style';\n        }\n        if (this._blinkingEnabled) {\n            switch (this._getCursorBlinking()) {\n                case 1 /* TextEditorCursorBlinkingStyle.Blink */:\n                    result += ' cursor-blink';\n                    break;\n                case 2 /* TextEditorCursorBlinkingStyle.Smooth */:\n                    result += ' cursor-smooth';\n                    break;\n                case 3 /* TextEditorCursorBlinkingStyle.Phase */:\n                    result += ' cursor-phase';\n                    break;\n                case 4 /* TextEditorCursorBlinkingStyle.Expand */:\n                    result += ' cursor-expand';\n                    break;\n                case 5 /* TextEditorCursorBlinkingStyle.Solid */:\n                    result += ' cursor-solid';\n                    break;\n                default:\n                    result += ' cursor-solid';\n            }\n        }\n        else {\n            result += ' cursor-solid';\n        }\n        if (this._cursorSmoothCaretAnimation === 'on' || this._cursorSmoothCaretAnimation === 'explicit') {\n            result += ' cursor-smooth-caret-animation';\n        }\n        return result;\n    }\n    _show() {\n        this._primaryCursor.show();\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            this._secondaryCursors[i].show();\n        }\n        this._isVisible = true;\n    }\n    _hide() {\n        this._primaryCursor.hide();\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            this._secondaryCursors[i].hide();\n        }\n        this._isVisible = false;\n    }\n    // ---- IViewPart implementation\n    prepareRender(ctx) {\n        this._primaryCursor.prepareRender(ctx);\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            this._secondaryCursors[i].prepareRender(ctx);\n        }\n    }\n    render(ctx) {\n        const renderData = [];\n        let renderDataLen = 0;\n        const primaryRenderData = this._primaryCursor.render(ctx);\n        if (primaryRenderData) {\n            renderData[renderDataLen++] = primaryRenderData;\n        }\n        for (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n            const secondaryRenderData = this._secondaryCursors[i].render(ctx);\n            if (secondaryRenderData) {\n                renderData[renderDataLen++] = secondaryRenderData;\n            }\n        }\n        this._renderData = renderData;\n    }\n    getLastRenderData() {\n        return this._renderData;\n    }\n}\nViewCursors.BLINK_INTERVAL = 500;\nregisterThemingParticipant((theme, collector) => {\n    const caret = theme.getColor(editorCursorForeground);\n    if (caret) {\n        let caretBackground = theme.getColor(editorCursorBackground);\n        if (!caretBackground) {\n            caretBackground = caret.opposite();\n        }\n        collector.addRule(`.monaco-editor .cursors-layer .cursor { background-color: ${caret}; border-color: ${caret}; color: ${caretBackground}; }`);\n        if (isHighContrast(theme.type)) {\n            collector.addRule(`.monaco-editor .cursors-layer.has-selection .cursor { border-left: 1px solid ${caretBackground}; border-right: 1px solid ${caretBackground}; }`);\n        }\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { Position } from '../../../common/core/position.js';\nconst invalidFunc = () => { throw new Error(`Invalid change accessor`); };\nexport class ViewZones extends ViewPart {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._contentWidth = layoutInfo.contentWidth;\n        this._contentLeft = layoutInfo.contentLeft;\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setClassName('view-zones');\n        this.domNode.setPosition('absolute');\n        this.domNode.setAttribute('role', 'presentation');\n        this.domNode.setAttribute('aria-hidden', 'true');\n        this.marginDomNode = createFastDomNode(document.createElement('div'));\n        this.marginDomNode.setClassName('margin-view-zones');\n        this.marginDomNode.setPosition('absolute');\n        this.marginDomNode.setAttribute('role', 'presentation');\n        this.marginDomNode.setAttribute('aria-hidden', 'true');\n        this._zones = {};\n    }\n    dispose() {\n        super.dispose();\n        this._zones = {};\n    }\n    // ---- begin view event handlers\n    _recomputeWhitespacesProps() {\n        const whitespaces = this._context.viewLayout.getWhitespaces();\n        const oldWhitespaces = new Map();\n        for (const whitespace of whitespaces) {\n            oldWhitespaces.set(whitespace.id, whitespace);\n        }\n        let hadAChange = false;\n        this._context.viewModel.changeWhitespace((whitespaceAccessor) => {\n            const keys = Object.keys(this._zones);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const id = keys[i];\n                const zone = this._zones[id];\n                const props = this._computeWhitespaceProps(zone.delegate);\n                zone.isInHiddenArea = props.isInHiddenArea;\n                const oldWhitespace = oldWhitespaces.get(id);\n                if (oldWhitespace && (oldWhitespace.afterLineNumber !== props.afterViewLineNumber || oldWhitespace.height !== props.heightInPx)) {\n                    whitespaceAccessor.changeOneWhitespace(id, props.afterViewLineNumber, props.heightInPx);\n                    this._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\n                    hadAChange = true;\n                }\n            }\n        });\n        return hadAChange;\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._contentWidth = layoutInfo.contentWidth;\n        this._contentLeft = layoutInfo.contentLeft;\n        if (e.hasChanged(66 /* EditorOption.lineHeight */)) {\n            this._recomputeWhitespacesProps();\n        }\n        return true;\n    }\n    onLineMappingChanged(e) {\n        return this._recomputeWhitespacesProps();\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged || e.scrollWidthChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    // ---- end view event handlers\n    _getZoneOrdinal(zone) {\n        var _a, _b;\n        return (_b = (_a = zone.ordinal) !== null && _a !== void 0 ? _a : zone.afterColumn) !== null && _b !== void 0 ? _b : 10000;\n    }\n    _computeWhitespaceProps(zone) {\n        if (zone.afterLineNumber === 0) {\n            return {\n                isInHiddenArea: false,\n                afterViewLineNumber: 0,\n                heightInPx: this._heightInPixels(zone),\n                minWidthInPx: this._minWidthInPixels(zone)\n            };\n        }\n        let zoneAfterModelPosition;\n        if (typeof zone.afterColumn !== 'undefined') {\n            zoneAfterModelPosition = this._context.viewModel.model.validatePosition({\n                lineNumber: zone.afterLineNumber,\n                column: zone.afterColumn\n            });\n        }\n        else {\n            const validAfterLineNumber = this._context.viewModel.model.validatePosition({\n                lineNumber: zone.afterLineNumber,\n                column: 1\n            }).lineNumber;\n            zoneAfterModelPosition = new Position(validAfterLineNumber, this._context.viewModel.model.getLineMaxColumn(validAfterLineNumber));\n        }\n        let zoneBeforeModelPosition;\n        if (zoneAfterModelPosition.column === this._context.viewModel.model.getLineMaxColumn(zoneAfterModelPosition.lineNumber)) {\n            zoneBeforeModelPosition = this._context.viewModel.model.validatePosition({\n                lineNumber: zoneAfterModelPosition.lineNumber + 1,\n                column: 1\n            });\n        }\n        else {\n            zoneBeforeModelPosition = this._context.viewModel.model.validatePosition({\n                lineNumber: zoneAfterModelPosition.lineNumber,\n                column: zoneAfterModelPosition.column + 1\n            });\n        }\n        const viewPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(zoneAfterModelPosition, zone.afterColumnAffinity, true);\n        const isVisible = zone.showInHiddenAreas || this._context.viewModel.coordinatesConverter.modelPositionIsVisible(zoneBeforeModelPosition);\n        return {\n            isInHiddenArea: !isVisible,\n            afterViewLineNumber: viewPosition.lineNumber,\n            heightInPx: (isVisible ? this._heightInPixels(zone) : 0),\n            minWidthInPx: this._minWidthInPixels(zone)\n        };\n    }\n    changeViewZones(callback) {\n        let zonesHaveChanged = false;\n        this._context.viewModel.changeWhitespace((whitespaceAccessor) => {\n            const changeAccessor = {\n                addZone: (zone) => {\n                    zonesHaveChanged = true;\n                    return this._addZone(whitespaceAccessor, zone);\n                },\n                removeZone: (id) => {\n                    if (!id) {\n                        return;\n                    }\n                    zonesHaveChanged = this._removeZone(whitespaceAccessor, id) || zonesHaveChanged;\n                },\n                layoutZone: (id) => {\n                    if (!id) {\n                        return;\n                    }\n                    zonesHaveChanged = this._layoutZone(whitespaceAccessor, id) || zonesHaveChanged;\n                }\n            };\n            safeInvoke1Arg(callback, changeAccessor);\n            // Invalidate changeAccessor\n            changeAccessor.addZone = invalidFunc;\n            changeAccessor.removeZone = invalidFunc;\n            changeAccessor.layoutZone = invalidFunc;\n        });\n        return zonesHaveChanged;\n    }\n    _addZone(whitespaceAccessor, zone) {\n        const props = this._computeWhitespaceProps(zone);\n        const whitespaceId = whitespaceAccessor.insertWhitespace(props.afterViewLineNumber, this._getZoneOrdinal(zone), props.heightInPx, props.minWidthInPx);\n        const myZone = {\n            whitespaceId: whitespaceId,\n            delegate: zone,\n            isInHiddenArea: props.isInHiddenArea,\n            isVisible: false,\n            domNode: createFastDomNode(zone.domNode),\n            marginDomNode: zone.marginDomNode ? createFastDomNode(zone.marginDomNode) : null\n        };\n        this._safeCallOnComputedHeight(myZone.delegate, props.heightInPx);\n        myZone.domNode.setPosition('absolute');\n        myZone.domNode.domNode.style.width = '100%';\n        myZone.domNode.setDisplay('none');\n        myZone.domNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\n        this.domNode.appendChild(myZone.domNode);\n        if (myZone.marginDomNode) {\n            myZone.marginDomNode.setPosition('absolute');\n            myZone.marginDomNode.domNode.style.width = '100%';\n            myZone.marginDomNode.setDisplay('none');\n            myZone.marginDomNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\n            this.marginDomNode.appendChild(myZone.marginDomNode);\n        }\n        this._zones[myZone.whitespaceId] = myZone;\n        this.setShouldRender();\n        return myZone.whitespaceId;\n    }\n    _removeZone(whitespaceAccessor, id) {\n        if (this._zones.hasOwnProperty(id)) {\n            const zone = this._zones[id];\n            delete this._zones[id];\n            whitespaceAccessor.removeWhitespace(zone.whitespaceId);\n            zone.domNode.removeAttribute('monaco-visible-view-zone');\n            zone.domNode.removeAttribute('monaco-view-zone');\n            zone.domNode.domNode.parentNode.removeChild(zone.domNode.domNode);\n            if (zone.marginDomNode) {\n                zone.marginDomNode.removeAttribute('monaco-visible-view-zone');\n                zone.marginDomNode.removeAttribute('monaco-view-zone');\n                zone.marginDomNode.domNode.parentNode.removeChild(zone.marginDomNode.domNode);\n            }\n            this.setShouldRender();\n            return true;\n        }\n        return false;\n    }\n    _layoutZone(whitespaceAccessor, id) {\n        if (this._zones.hasOwnProperty(id)) {\n            const zone = this._zones[id];\n            const props = this._computeWhitespaceProps(zone.delegate);\n            zone.isInHiddenArea = props.isInHiddenArea;\n            // const newOrdinal = this._getZoneOrdinal(zone.delegate);\n            whitespaceAccessor.changeOneWhitespace(zone.whitespaceId, props.afterViewLineNumber, props.heightInPx);\n            // TODO@Alex: change `newOrdinal` too\n            this._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\n            this.setShouldRender();\n            return true;\n        }\n        return false;\n    }\n    shouldSuppressMouseDownOnViewZone(id) {\n        if (this._zones.hasOwnProperty(id)) {\n            const zone = this._zones[id];\n            return Boolean(zone.delegate.suppressMouseDown);\n        }\n        return false;\n    }\n    _heightInPixels(zone) {\n        if (typeof zone.heightInPx === 'number') {\n            return zone.heightInPx;\n        }\n        if (typeof zone.heightInLines === 'number') {\n            return this._lineHeight * zone.heightInLines;\n        }\n        return this._lineHeight;\n    }\n    _minWidthInPixels(zone) {\n        if (typeof zone.minWidthInPx === 'number') {\n            return zone.minWidthInPx;\n        }\n        return 0;\n    }\n    _safeCallOnComputedHeight(zone, height) {\n        if (typeof zone.onComputedHeight === 'function') {\n            try {\n                zone.onComputedHeight(height);\n            }\n            catch (e) {\n                onUnexpectedError(e);\n            }\n        }\n    }\n    _safeCallOnDomNodeTop(zone, top) {\n        if (typeof zone.onDomNodeTop === 'function') {\n            try {\n                zone.onDomNodeTop(top);\n            }\n            catch (e) {\n                onUnexpectedError(e);\n            }\n        }\n    }\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(ctx) {\n        const visibleWhitespaces = ctx.viewportData.whitespaceViewportData;\n        const visibleZones = {};\n        let hasVisibleZone = false;\n        for (const visibleWhitespace of visibleWhitespaces) {\n            if (this._zones[visibleWhitespace.id].isInHiddenArea) {\n                continue;\n            }\n            visibleZones[visibleWhitespace.id] = visibleWhitespace;\n            hasVisibleZone = true;\n        }\n        const keys = Object.keys(this._zones);\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const id = keys[i];\n            const zone = this._zones[id];\n            let newTop = 0;\n            let newHeight = 0;\n            let newDisplay = 'none';\n            if (visibleZones.hasOwnProperty(id)) {\n                newTop = visibleZones[id].verticalOffset - ctx.bigNumbersDelta;\n                newHeight = visibleZones[id].height;\n                newDisplay = 'block';\n                // zone is visible\n                if (!zone.isVisible) {\n                    zone.domNode.setAttribute('monaco-visible-view-zone', 'true');\n                    zone.isVisible = true;\n                }\n                this._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(visibleZones[id].verticalOffset));\n            }\n            else {\n                if (zone.isVisible) {\n                    zone.domNode.removeAttribute('monaco-visible-view-zone');\n                    zone.isVisible = false;\n                }\n                this._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(-1000000));\n            }\n            zone.domNode.setTop(newTop);\n            zone.domNode.setHeight(newHeight);\n            zone.domNode.setDisplay(newDisplay);\n            if (zone.marginDomNode) {\n                zone.marginDomNode.setTop(newTop);\n                zone.marginDomNode.setHeight(newHeight);\n                zone.marginDomNode.setDisplay(newDisplay);\n            }\n        }\n        if (hasVisibleZone) {\n            this.domNode.setWidth(Math.max(ctx.scrollWidth, this._contentWidth));\n            this.marginDomNode.setWidth(this._contentLeft);\n        }\n    }\n}\nfunction safeInvoke1Arg(func, arg1) {\n    try {\n        return func(arg1);\n    }\n    catch (e) {\n        onUnexpectedError(e);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport './blockDecorations.css';\nimport { ViewPart } from '../../view/viewPart.js';\nexport class BlockDecorations extends ViewPart {\n    constructor(context) {\n        super(context);\n        this.blocks = [];\n        this.contentWidth = -1;\n        this.contentLeft = 0;\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setAttribute('role', 'presentation');\n        this.domNode.setAttribute('aria-hidden', 'true');\n        this.domNode.setClassName('blockDecorations-container');\n        this.update();\n    }\n    update() {\n        let didChange = false;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        const newContentWidth = layoutInfo.contentWidth - layoutInfo.verticalScrollbarWidth;\n        if (this.contentWidth !== newContentWidth) {\n            this.contentWidth = newContentWidth;\n            didChange = true;\n        }\n        const newContentLeft = layoutInfo.contentLeft;\n        if (this.contentLeft !== newContentLeft) {\n            this.contentLeft = newContentLeft;\n            didChange = true;\n        }\n        return didChange;\n    }\n    dispose() {\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        return this.update();\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged || e.scrollLeftChanged;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(ctx) {\n        var _a;\n        let count = 0;\n        const decorations = ctx.getDecorationsInViewport();\n        for (const decoration of decorations) {\n            if (!decoration.options.blockClassName) {\n                continue;\n            }\n            let block = this.blocks[count];\n            if (!block) {\n                block = this.blocks[count] = createFastDomNode(document.createElement('div'));\n                this.domNode.appendChild(block);\n            }\n            let top;\n            let bottom;\n            if (decoration.options.blockIsAfterEnd) {\n                // range must be empty\n                top = ctx.getVerticalOffsetAfterLineNumber(decoration.range.endLineNumber, false);\n                bottom = ctx.getVerticalOffsetAfterLineNumber(decoration.range.endLineNumber, true);\n            }\n            else {\n                top = ctx.getVerticalOffsetForLineNumber(decoration.range.startLineNumber, true);\n                bottom = decoration.range.isEmpty() && !decoration.options.blockDoesNotCollapse\n                    ? ctx.getVerticalOffsetForLineNumber(decoration.range.startLineNumber, false)\n                    : ctx.getVerticalOffsetAfterLineNumber(decoration.range.endLineNumber, true);\n            }\n            const [paddingTop, paddingRight, paddingBottom, paddingLeft] = (_a = decoration.options.blockPadding) !== null && _a !== void 0 ? _a : [0, 0, 0, 0];\n            block.setClassName('blockDecorations-block ' + decoration.options.blockClassName);\n            block.setLeft(this.contentLeft - paddingLeft);\n            block.setWidth(this.contentWidth + paddingLeft + paddingRight);\n            block.setTop(top - ctx.scrollTop - paddingTop);\n            block.setHeight(bottom - top + paddingTop + paddingBottom);\n            count++;\n        }\n        for (let i = count; i < this.blocks.length; i++) {\n            this.blocks[i].domNode.remove();\n        }\n        this.blocks.length = count;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './whitespace.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { LineRange } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { Position } from '../../../common/core/position.js';\nimport { editorWhitespaces } from '../../../common/core/editorColorRegistry.js';\nexport class WhitespaceOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._options = new WhitespaceOptions(this._context.configuration);\n        this._selection = [];\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const newOptions = new WhitespaceOptions(this._context.configuration);\n        if (this._options.equals(newOptions)) {\n            return e.hasChanged(143 /* EditorOption.layoutInfo */);\n        }\n        this._options = newOptions;\n        return true;\n    }\n    onCursorStateChanged(e) {\n        this._selection = e.selections;\n        if (this._options.renderWhitespace === 'selection') {\n            return true;\n        }\n        return false;\n    }\n    onDecorationsChanged(e) {\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        if (this._options.renderWhitespace === 'none') {\n            this._renderResult = null;\n            return;\n        }\n        const startLineNumber = ctx.visibleRange.startLineNumber;\n        const endLineNumber = ctx.visibleRange.endLineNumber;\n        const lineCount = endLineNumber - startLineNumber + 1;\n        const needed = new Array(lineCount);\n        for (let i = 0; i < lineCount; i++) {\n            needed[i] = true;\n        }\n        const viewportData = this._context.viewModel.getMinimapLinesRenderingData(ctx.viewportData.startLineNumber, ctx.viewportData.endLineNumber, needed);\n        this._renderResult = [];\n        for (let lineNumber = ctx.viewportData.startLineNumber; lineNumber <= ctx.viewportData.endLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - ctx.viewportData.startLineNumber;\n            const lineData = viewportData.data[lineIndex];\n            let selectionsOnLine = null;\n            if (this._options.renderWhitespace === 'selection') {\n                const selections = this._selection;\n                for (const selection of selections) {\n                    if (selection.endLineNumber < lineNumber || selection.startLineNumber > lineNumber) {\n                        // Selection does not intersect line\n                        continue;\n                    }\n                    const startColumn = (selection.startLineNumber === lineNumber ? selection.startColumn : lineData.minColumn);\n                    const endColumn = (selection.endLineNumber === lineNumber ? selection.endColumn : lineData.maxColumn);\n                    if (startColumn < endColumn) {\n                        if (!selectionsOnLine) {\n                            selectionsOnLine = [];\n                        }\n                        selectionsOnLine.push(new LineRange(startColumn - 1, endColumn - 1));\n                    }\n                }\n            }\n            this._renderResult[lineIndex] = this._applyRenderWhitespace(ctx, lineNumber, selectionsOnLine, lineData);\n        }\n    }\n    _applyRenderWhitespace(ctx, lineNumber, selections, lineData) {\n        if (this._options.renderWhitespace === 'selection' && !selections) {\n            return '';\n        }\n        if (this._options.renderWhitespace === 'trailing' && lineData.continuesWithWrappedLine) {\n            return '';\n        }\n        const color = this._context.theme.getColor(editorWhitespaces);\n        const USE_SVG = this._options.renderWithSVG;\n        const lineContent = lineData.content;\n        const len = (this._options.stopRenderingLineAfter === -1 ? lineContent.length : Math.min(this._options.stopRenderingLineAfter, lineContent.length));\n        const continuesWithWrappedLine = lineData.continuesWithWrappedLine;\n        const fauxIndentLength = lineData.minColumn - 1;\n        const onlyBoundary = (this._options.renderWhitespace === 'boundary');\n        const onlyTrailing = (this._options.renderWhitespace === 'trailing');\n        const lineHeight = this._options.lineHeight;\n        const middotWidth = this._options.middotWidth;\n        const wsmiddotWidth = this._options.wsmiddotWidth;\n        const spaceWidth = this._options.spaceWidth;\n        const wsmiddotDiff = Math.abs(wsmiddotWidth - spaceWidth);\n        const middotDiff = Math.abs(middotWidth - spaceWidth);\n        // U+2E31 - WORD SEPARATOR MIDDLE DOT\n        // U+00B7 - MIDDLE DOT\n        const renderSpaceCharCode = (wsmiddotDiff < middotDiff ? 0x2E31 : 0xB7);\n        const canUseHalfwidthRightwardsArrow = this._options.canUseHalfwidthRightwardsArrow;\n        let result = '';\n        let lineIsEmptyOrWhitespace = false;\n        let firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(lineContent);\n        let lastNonWhitespaceIndex;\n        if (firstNonWhitespaceIndex === -1) {\n            lineIsEmptyOrWhitespace = true;\n            firstNonWhitespaceIndex = len;\n            lastNonWhitespaceIndex = len;\n        }\n        else {\n            lastNonWhitespaceIndex = strings.lastNonWhitespaceIndex(lineContent);\n        }\n        let currentSelectionIndex = 0;\n        let currentSelection = selections && selections[currentSelectionIndex];\n        let maxLeft = 0;\n        for (let charIndex = fauxIndentLength; charIndex < len; charIndex++) {\n            const chCode = lineContent.charCodeAt(charIndex);\n            if (currentSelection && charIndex >= currentSelection.endOffset) {\n                currentSelectionIndex++;\n                currentSelection = selections && selections[currentSelectionIndex];\n            }\n            if (chCode !== 9 /* CharCode.Tab */ && chCode !== 32 /* CharCode.Space */) {\n                continue;\n            }\n            if (onlyTrailing && !lineIsEmptyOrWhitespace && charIndex <= lastNonWhitespaceIndex) {\n                // If rendering only trailing whitespace, check that the charIndex points to trailing whitespace.\n                continue;\n            }\n            if (onlyBoundary && charIndex >= firstNonWhitespaceIndex && charIndex <= lastNonWhitespaceIndex && chCode === 32 /* CharCode.Space */) {\n                // rendering only boundary whitespace\n                const prevChCode = (charIndex - 1 >= 0 ? lineContent.charCodeAt(charIndex - 1) : 0 /* CharCode.Null */);\n                const nextChCode = (charIndex + 1 < len ? lineContent.charCodeAt(charIndex + 1) : 0 /* CharCode.Null */);\n                if (prevChCode !== 32 /* CharCode.Space */ && nextChCode !== 32 /* CharCode.Space */) {\n                    continue;\n                }\n            }\n            if (onlyBoundary && continuesWithWrappedLine && charIndex === len - 1) {\n                const prevCharCode = (charIndex - 1 >= 0 ? lineContent.charCodeAt(charIndex - 1) : 0 /* CharCode.Null */);\n                const isSingleTrailingSpace = (chCode === 32 /* CharCode.Space */ && (prevCharCode !== 32 /* CharCode.Space */ && prevCharCode !== 9 /* CharCode.Tab */));\n                if (isSingleTrailingSpace) {\n                    continue;\n                }\n            }\n            if (selections && (!currentSelection || currentSelection.startOffset > charIndex || currentSelection.endOffset <= charIndex)) {\n                // If rendering whitespace on selection, check that the charIndex falls within a selection\n                continue;\n            }\n            const visibleRange = ctx.visibleRangeForPosition(new Position(lineNumber, charIndex + 1));\n            if (!visibleRange) {\n                continue;\n            }\n            if (USE_SVG) {\n                maxLeft = Math.max(maxLeft, visibleRange.left);\n                if (chCode === 9 /* CharCode.Tab */) {\n                    result += this._renderArrow(lineHeight, spaceWidth, visibleRange.left);\n                }\n                else {\n                    result += `<circle cx=\"${(visibleRange.left + spaceWidth / 2).toFixed(2)}\" cy=\"${(lineHeight / 2).toFixed(2)}\" r=\"${(spaceWidth / 7).toFixed(2)}\" />`;\n                }\n            }\n            else {\n                if (chCode === 9 /* CharCode.Tab */) {\n                    result += `<div class=\"mwh\" style=\"left:${visibleRange.left}px;height:${lineHeight}px;\">${canUseHalfwidthRightwardsArrow ? String.fromCharCode(0xFFEB) : String.fromCharCode(0x2192)}</div>`;\n                }\n                else {\n                    result += `<div class=\"mwh\" style=\"left:${visibleRange.left}px;height:${lineHeight}px;\">${String.fromCharCode(renderSpaceCharCode)}</div>`;\n                }\n            }\n        }\n        if (USE_SVG) {\n            maxLeft = Math.round(maxLeft + spaceWidth);\n            return (`<svg style=\"position:absolute;width:${maxLeft}px;height:${lineHeight}px\" viewBox=\"0 0 ${maxLeft} ${lineHeight}\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"${color}\">`\n                + result\n                + `</svg>`);\n        }\n        return result;\n    }\n    _renderArrow(lineHeight, spaceWidth, left) {\n        const strokeWidth = spaceWidth / 7;\n        const width = spaceWidth;\n        const dy = lineHeight / 2;\n        const dx = left;\n        const p1 = { x: 0, y: strokeWidth / 2 };\n        const p2 = { x: 100 / 125 * width, y: p1.y };\n        const p3 = { x: p2.x - 0.2 * p2.x, y: p2.y + 0.2 * p2.x };\n        const p4 = { x: p3.x + 0.1 * p2.x, y: p3.y + 0.1 * p2.x };\n        const p5 = { x: p4.x + 0.35 * p2.x, y: p4.y - 0.35 * p2.x };\n        const p6 = { x: p5.x, y: -p5.y };\n        const p7 = { x: p4.x, y: -p4.y };\n        const p8 = { x: p3.x, y: -p3.y };\n        const p9 = { x: p2.x, y: -p2.y };\n        const p10 = { x: p1.x, y: -p1.y };\n        const p = [p1, p2, p3, p4, p5, p6, p7, p8, p9, p10];\n        const parts = p.map((p) => `${(dx + p.x).toFixed(2)} ${(dy + p.y).toFixed(2)}`).join(' L ');\n        return `<path d=\"M ${parts}\" />`;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\nclass WhitespaceOptions {\n    constructor(config) {\n        const options = config.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        const experimentalWhitespaceRendering = options.get(38 /* EditorOption.experimentalWhitespaceRendering */);\n        if (experimentalWhitespaceRendering === 'off') {\n            // whitespace is rendered in the view line\n            this.renderWhitespace = 'none';\n            this.renderWithSVG = false;\n        }\n        else if (experimentalWhitespaceRendering === 'svg') {\n            this.renderWhitespace = options.get(98 /* EditorOption.renderWhitespace */);\n            this.renderWithSVG = true;\n        }\n        else {\n            this.renderWhitespace = options.get(98 /* EditorOption.renderWhitespace */);\n            this.renderWithSVG = false;\n        }\n        this.spaceWidth = fontInfo.spaceWidth;\n        this.middotWidth = fontInfo.middotWidth;\n        this.wsmiddotWidth = fontInfo.wsmiddotWidth;\n        this.canUseHalfwidthRightwardsArrow = fontInfo.canUseHalfwidthRightwardsArrow;\n        this.lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this.stopRenderingLineAfter = options.get(116 /* EditorOption.stopRenderingLineAfter */);\n    }\n    equals(other) {\n        return (this.renderWhitespace === other.renderWhitespace\n            && this.renderWithSVG === other.renderWithSVG\n            && this.spaceWidth === other.spaceWidth\n            && this.middotWidth === other.middotWidth\n            && this.wsmiddotWidth === other.wsmiddotWidth\n            && this.canUseHalfwidthRightwardsArrow === other.canUseHalfwidthRightwardsArrow\n            && this.lineHeight === other.lineHeight\n            && this.stopRenderingLineAfter === other.stopRenderingLineAfter);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../base/browser/dom.js';\nimport { Selection } from '../common/core/selection.js';\nimport { Range } from '../common/core/range.js';\nimport { createFastDomNode } from '../../base/browser/fastDomNode.js';\nimport { onUnexpectedError } from '../../base/common/errors.js';\nimport { PointerHandler } from './controller/pointerHandler.js';\nimport { TextAreaHandler } from './controller/textAreaHandler.js';\nimport { ViewController } from './view/viewController.js';\nimport { ViewUserInputEvents } from './view/viewUserInputEvents.js';\nimport { ContentViewOverlays, MarginViewOverlays } from './view/viewOverlays.js';\nimport { PartFingerprints } from './view/viewPart.js';\nimport { ViewContentWidgets } from './viewParts/contentWidgets/contentWidgets.js';\nimport { CurrentLineHighlightOverlay, CurrentLineMarginHighlightOverlay } from './viewParts/currentLineHighlight/currentLineHighlight.js';\nimport { DecorationsOverlay } from './viewParts/decorations/decorations.js';\nimport { EditorScrollbar } from './viewParts/editorScrollbar/editorScrollbar.js';\nimport { IndentGuidesOverlay } from './viewParts/indentGuides/indentGuides.js';\nimport { LineNumbersOverlay } from './viewParts/lineNumbers/lineNumbers.js';\nimport { ViewLines } from './viewParts/lines/viewLines.js';\nimport { LinesDecorationsOverlay } from './viewParts/linesDecorations/linesDecorations.js';\nimport { Margin } from './viewParts/margin/margin.js';\nimport { MarginViewLineDecorationsOverlay } from './viewParts/marginDecorations/marginDecorations.js';\nimport { Minimap } from './viewParts/minimap/minimap.js';\nimport { ViewOverlayWidgets } from './viewParts/overlayWidgets/overlayWidgets.js';\nimport { DecorationsOverviewRuler } from './viewParts/overviewRuler/decorationsOverviewRuler.js';\nimport { OverviewRuler } from './viewParts/overviewRuler/overviewRuler.js';\nimport { Rulers } from './viewParts/rulers/rulers.js';\nimport { ScrollDecorationViewPart } from './viewParts/scrollDecoration/scrollDecoration.js';\nimport { SelectionsOverlay } from './viewParts/selections/selections.js';\nimport { ViewCursors } from './viewParts/viewCursors/viewCursors.js';\nimport { ViewZones } from './viewParts/viewZones/viewZones.js';\nimport { Position } from '../common/core/position.js';\nimport { RenderingContext } from './view/renderingContext.js';\nimport { ViewContext } from '../common/viewModel/viewContext.js';\nimport { ViewportData } from '../common/viewLayout/viewLinesViewportData.js';\nimport { ViewEventHandler } from '../common/viewEventHandler.js';\nimport { getThemeTypeSelector } from '../../platform/theme/common/themeService.js';\nimport { PointerHandlerLastRenderData } from './controller/mouseTarget.js';\nimport { BlockDecorations } from './viewParts/blockDecorations/blockDecorations.js';\nimport { inputLatency } from '../../base/browser/performance.js';\nimport { WhitespaceOverlay } from './viewParts/whitespace/whitespace.js';\nimport { GlyphMarginWidgets } from './viewParts/glyphMargin/glyphMargin.js';\nimport { GlyphMarginLane } from '../common/model.js';\nimport { IInstantiationService } from '../../platform/instantiation/common/instantiation.js';\nlet View = class View extends ViewEventHandler {\n    constructor(commandDelegate, configuration, colorTheme, model, userInputEvents, overflowWidgetsDomNode, _instantiationService) {\n        super();\n        this._instantiationService = _instantiationService;\n        // Actual mutable state\n        this._shouldRecomputeGlyphMarginLanes = false;\n        this._selections = [new Selection(1, 1, 1, 1)];\n        this._renderAnimationFrame = null;\n        const viewController = new ViewController(configuration, model, userInputEvents, commandDelegate);\n        // The view context is passed on to most classes (basically to reduce param. counts in ctors)\n        this._context = new ViewContext(configuration, colorTheme, model);\n        // Ensure the view is the first event handler in order to update the layout\n        this._context.addEventHandler(this);\n        this._viewParts = [];\n        // Keyboard handler\n        this._textAreaHandler = this._instantiationService.createInstance(TextAreaHandler, this._context, viewController, this._createTextAreaHandlerHelper());\n        this._viewParts.push(this._textAreaHandler);\n        // These two dom nodes must be constructed up front, since references are needed in the layout provider (scrolling & co.)\n        this._linesContent = createFastDomNode(document.createElement('div'));\n        this._linesContent.setClassName('lines-content' + ' monaco-editor-background');\n        this._linesContent.setPosition('absolute');\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setClassName(this._getEditorClassName());\n        // Set role 'code' for better screen reader support https://github.com/microsoft/vscode/issues/93438\n        this.domNode.setAttribute('role', 'code');\n        this._overflowGuardContainer = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this._overflowGuardContainer, 3 /* PartFingerprint.OverflowGuard */);\n        this._overflowGuardContainer.setClassName('overflow-guard');\n        this._scrollbar = new EditorScrollbar(this._context, this._linesContent, this.domNode, this._overflowGuardContainer);\n        this._viewParts.push(this._scrollbar);\n        // View Lines\n        this._viewLines = new ViewLines(this._context, this._linesContent);\n        // View Zones\n        this._viewZones = new ViewZones(this._context);\n        this._viewParts.push(this._viewZones);\n        // Decorations overview ruler\n        const decorationsOverviewRuler = new DecorationsOverviewRuler(this._context);\n        this._viewParts.push(decorationsOverviewRuler);\n        const scrollDecoration = new ScrollDecorationViewPart(this._context);\n        this._viewParts.push(scrollDecoration);\n        const contentViewOverlays = new ContentViewOverlays(this._context);\n        this._viewParts.push(contentViewOverlays);\n        contentViewOverlays.addDynamicOverlay(new CurrentLineHighlightOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new SelectionsOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new IndentGuidesOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new DecorationsOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new WhitespaceOverlay(this._context));\n        const marginViewOverlays = new MarginViewOverlays(this._context);\n        this._viewParts.push(marginViewOverlays);\n        marginViewOverlays.addDynamicOverlay(new CurrentLineMarginHighlightOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new MarginViewLineDecorationsOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new LinesDecorationsOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new LineNumbersOverlay(this._context));\n        // Glyph margin widgets\n        this._glyphMarginWidgets = new GlyphMarginWidgets(this._context);\n        this._viewParts.push(this._glyphMarginWidgets);\n        const margin = new Margin(this._context);\n        margin.getDomNode().appendChild(this._viewZones.marginDomNode);\n        margin.getDomNode().appendChild(marginViewOverlays.getDomNode());\n        margin.getDomNode().appendChild(this._glyphMarginWidgets.domNode);\n        this._viewParts.push(margin);\n        // Content widgets\n        this._contentWidgets = new ViewContentWidgets(this._context, this.domNode);\n        this._viewParts.push(this._contentWidgets);\n        this._viewCursors = new ViewCursors(this._context);\n        this._viewParts.push(this._viewCursors);\n        // Overlay widgets\n        this._overlayWidgets = new ViewOverlayWidgets(this._context);\n        this._viewParts.push(this._overlayWidgets);\n        const rulers = new Rulers(this._context);\n        this._viewParts.push(rulers);\n        const blockOutline = new BlockDecorations(this._context);\n        this._viewParts.push(blockOutline);\n        const minimap = new Minimap(this._context);\n        this._viewParts.push(minimap);\n        // -------------- Wire dom nodes up\n        if (decorationsOverviewRuler) {\n            const overviewRulerData = this._scrollbar.getOverviewRulerLayoutInfo();\n            overviewRulerData.parent.insertBefore(decorationsOverviewRuler.getDomNode(), overviewRulerData.insertBefore);\n        }\n        this._linesContent.appendChild(contentViewOverlays.getDomNode());\n        this._linesContent.appendChild(rulers.domNode);\n        this._linesContent.appendChild(this._viewZones.domNode);\n        this._linesContent.appendChild(this._viewLines.getDomNode());\n        this._linesContent.appendChild(this._contentWidgets.domNode);\n        this._linesContent.appendChild(this._viewCursors.getDomNode());\n        this._overflowGuardContainer.appendChild(margin.getDomNode());\n        this._overflowGuardContainer.appendChild(this._scrollbar.getDomNode());\n        this._overflowGuardContainer.appendChild(scrollDecoration.getDomNode());\n        this._overflowGuardContainer.appendChild(this._textAreaHandler.textArea);\n        this._overflowGuardContainer.appendChild(this._textAreaHandler.textAreaCover);\n        this._overflowGuardContainer.appendChild(this._overlayWidgets.getDomNode());\n        this._overflowGuardContainer.appendChild(minimap.getDomNode());\n        this._overflowGuardContainer.appendChild(blockOutline.domNode);\n        this.domNode.appendChild(this._overflowGuardContainer);\n        if (overflowWidgetsDomNode) {\n            overflowWidgetsDomNode.appendChild(this._contentWidgets.overflowingContentWidgetsDomNode.domNode);\n        }\n        else {\n            this.domNode.appendChild(this._contentWidgets.overflowingContentWidgetsDomNode);\n        }\n        this._applyLayout();\n        // Pointer handler\n        this._pointerHandler = this._register(new PointerHandler(this._context, viewController, this._createPointerHandlerHelper()));\n    }\n    _flushAccumulatedAndRenderNow() {\n        if (this._shouldRecomputeGlyphMarginLanes) {\n            this._shouldRecomputeGlyphMarginLanes = false;\n            this._context.configuration.setGlyphMarginDecorationLaneCount(this._computeGlyphMarginLaneCount());\n        }\n        inputLatency.onRenderStart();\n        this._renderNow();\n    }\n    _computeGlyphMarginLaneCount() {\n        const model = this._context.viewModel.model;\n        let glyphs = [];\n        // Add all margin decorations\n        glyphs = glyphs.concat(model.getAllMarginDecorations().map((decoration) => {\n            var _a, _b;\n            const lane = (_b = (_a = decoration.options.glyphMargin) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : GlyphMarginLane.Left;\n            return { range: decoration.range, lane };\n        }));\n        // Add all glyph margin widgets\n        glyphs = glyphs.concat(this._glyphMarginWidgets.getWidgets().map((widget) => {\n            const range = model.validateRange(widget.preference.range);\n            return { range, lane: widget.preference.lane };\n        }));\n        // Sorted by their start position\n        glyphs.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\n        let leftDecRange = null;\n        let rightDecRange = null;\n        for (const decoration of glyphs) {\n            if (decoration.lane === GlyphMarginLane.Left && (!leftDecRange || Range.compareRangesUsingEnds(leftDecRange, decoration.range) < 0)) {\n                // assign only if the range of `decoration` ends after, which means it has a higher chance to overlap with the other lane\n                leftDecRange = decoration.range;\n            }\n            if (decoration.lane === GlyphMarginLane.Right && (!rightDecRange || Range.compareRangesUsingEnds(rightDecRange, decoration.range) < 0)) {\n                // assign only if the range of `decoration` ends after, which means it has a higher chance to overlap with the other lane\n                rightDecRange = decoration.range;\n            }\n            if (leftDecRange && rightDecRange) {\n                if (leftDecRange.endLineNumber < rightDecRange.startLineNumber) {\n                    // there's no chance for `leftDecRange` to ever intersect something going further\n                    leftDecRange = null;\n                    continue;\n                }\n                if (rightDecRange.endLineNumber < leftDecRange.startLineNumber) {\n                    // there's no chance for `rightDecRange` to ever intersect something going further\n                    rightDecRange = null;\n                    continue;\n                }\n                // leftDecRange and rightDecRange are intersecting or touching => we need two lanes\n                return 2;\n            }\n        }\n        return 1;\n    }\n    _createPointerHandlerHelper() {\n        return {\n            viewDomNode: this.domNode.domNode,\n            linesContentDomNode: this._linesContent.domNode,\n            viewLinesDomNode: this._viewLines.getDomNode().domNode,\n            focusTextArea: () => {\n                this.focus();\n            },\n            dispatchTextAreaEvent: (event) => {\n                this._textAreaHandler.textArea.domNode.dispatchEvent(event);\n            },\n            getLastRenderData: () => {\n                const lastViewCursorsRenderData = this._viewCursors.getLastRenderData() || [];\n                const lastTextareaPosition = this._textAreaHandler.getLastRenderData();\n                return new PointerHandlerLastRenderData(lastViewCursorsRenderData, lastTextareaPosition);\n            },\n            renderNow: () => {\n                this.render(true, false);\n            },\n            shouldSuppressMouseDownOnViewZone: (viewZoneId) => {\n                return this._viewZones.shouldSuppressMouseDownOnViewZone(viewZoneId);\n            },\n            shouldSuppressMouseDownOnWidget: (widgetId) => {\n                return this._contentWidgets.shouldSuppressMouseDownOnWidget(widgetId);\n            },\n            getPositionFromDOMInfo: (spanNode, offset) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.getPositionFromDOMInfo(spanNode, offset);\n            },\n            visibleRangeForPosition: (lineNumber, column) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.visibleRangeForPosition(new Position(lineNumber, column));\n            },\n            getLineWidth: (lineNumber) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.getLineWidth(lineNumber);\n            }\n        };\n    }\n    _createTextAreaHandlerHelper() {\n        return {\n            visibleRangeForPosition: (position) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.visibleRangeForPosition(position);\n            }\n        };\n    }\n    _applyLayout() {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this.domNode.setWidth(layoutInfo.width);\n        this.domNode.setHeight(layoutInfo.height);\n        this._overflowGuardContainer.setWidth(layoutInfo.width);\n        this._overflowGuardContainer.setHeight(layoutInfo.height);\n        this._linesContent.setWidth(1000000);\n        this._linesContent.setHeight(1000000);\n    }\n    _getEditorClassName() {\n        const focused = this._textAreaHandler.isFocused() ? ' focused' : '';\n        return this._context.configuration.options.get(140 /* EditorOption.editorClassName */) + ' ' + getThemeTypeSelector(this._context.theme.type) + focused;\n    }\n    // --- begin event handlers\n    handleEvents(events) {\n        super.handleEvents(events);\n        this._scheduleRender();\n    }\n    onConfigurationChanged(e) {\n        this.domNode.setClassName(this._getEditorClassName());\n        this._applyLayout();\n        return false;\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections;\n        return false;\n    }\n    onDecorationsChanged(e) {\n        if (e.affectsGlyphMargin) {\n            this._shouldRecomputeGlyphMarginLanes = true;\n        }\n        return false;\n    }\n    onFocusChanged(e) {\n        this.domNode.setClassName(this._getEditorClassName());\n        return false;\n    }\n    onThemeChanged(e) {\n        this._context.theme.update(e.theme);\n        this.domNode.setClassName(this._getEditorClassName());\n        return false;\n    }\n    // --- end event handlers\n    dispose() {\n        if (this._renderAnimationFrame !== null) {\n            this._renderAnimationFrame.dispose();\n            this._renderAnimationFrame = null;\n        }\n        this._contentWidgets.overflowingContentWidgetsDomNode.domNode.remove();\n        this._context.removeEventHandler(this);\n        this._viewLines.dispose();\n        // Destroy view parts\n        for (const viewPart of this._viewParts) {\n            viewPart.dispose();\n        }\n        super.dispose();\n    }\n    _scheduleRender() {\n        if (this._renderAnimationFrame === null) {\n            this._renderAnimationFrame = dom.runAtThisOrScheduleAtNextAnimationFrame(this._onRenderScheduled.bind(this), 100);\n        }\n    }\n    _onRenderScheduled() {\n        this._renderAnimationFrame = null;\n        this._flushAccumulatedAndRenderNow();\n    }\n    _renderNow() {\n        safeInvokeNoArg(() => this._actualRender());\n    }\n    _getViewPartsToRender() {\n        const result = [];\n        let resultLen = 0;\n        for (const viewPart of this._viewParts) {\n            if (viewPart.shouldRender()) {\n                result[resultLen++] = viewPart;\n            }\n        }\n        return result;\n    }\n    _actualRender() {\n        if (!dom.isInDOM(this.domNode.domNode)) {\n            return;\n        }\n        let viewPartsToRender = this._getViewPartsToRender();\n        if (!this._viewLines.shouldRender() && viewPartsToRender.length === 0) {\n            // Nothing to render\n            return;\n        }\n        const partialViewportData = this._context.viewLayout.getLinesViewportData();\n        this._context.viewModel.setViewport(partialViewportData.startLineNumber, partialViewportData.endLineNumber, partialViewportData.centeredLineNumber);\n        const viewportData = new ViewportData(this._selections, partialViewportData, this._context.viewLayout.getWhitespaceViewportData(), this._context.viewModel);\n        if (this._contentWidgets.shouldRender()) {\n            // Give the content widgets a chance to set their max width before a possible synchronous layout\n            this._contentWidgets.onBeforeRender(viewportData);\n        }\n        if (this._viewLines.shouldRender()) {\n            this._viewLines.renderText(viewportData);\n            this._viewLines.onDidRender();\n            // Rendering of viewLines might cause scroll events to occur, so collect view parts to render again\n            viewPartsToRender = this._getViewPartsToRender();\n        }\n        const renderingContext = new RenderingContext(this._context.viewLayout, viewportData, this._viewLines);\n        // Render the rest of the parts\n        for (const viewPart of viewPartsToRender) {\n            viewPart.prepareRender(renderingContext);\n        }\n        for (const viewPart of viewPartsToRender) {\n            viewPart.render(renderingContext);\n            viewPart.onDidRender();\n        }\n    }\n    // --- BEGIN CodeEditor helpers\n    delegateVerticalScrollbarPointerDown(browserEvent) {\n        this._scrollbar.delegateVerticalScrollbarPointerDown(browserEvent);\n    }\n    delegateScrollFromMouseWheelEvent(browserEvent) {\n        this._scrollbar.delegateScrollFromMouseWheelEvent(browserEvent);\n    }\n    restoreState(scrollPosition) {\n        this._context.viewModel.viewLayout.setScrollPosition({\n            scrollTop: scrollPosition.scrollTop,\n            scrollLeft: scrollPosition.scrollLeft\n        }, 1 /* ScrollType.Immediate */);\n        this._context.viewModel.visibleLinesStabilized();\n    }\n    getOffsetForColumn(modelLineNumber, modelColumn) {\n        const modelPosition = this._context.viewModel.model.validatePosition({\n            lineNumber: modelLineNumber,\n            column: modelColumn\n        });\n        const viewPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n        this._flushAccumulatedAndRenderNow();\n        const visibleRange = this._viewLines.visibleRangeForPosition(new Position(viewPosition.lineNumber, viewPosition.column));\n        if (!visibleRange) {\n            return -1;\n        }\n        return visibleRange.left;\n    }\n    getTargetAtClientPoint(clientX, clientY) {\n        const mouseTarget = this._pointerHandler.getTargetAtClientPoint(clientX, clientY);\n        if (!mouseTarget) {\n            return null;\n        }\n        return ViewUserInputEvents.convertViewToModelMouseTarget(mouseTarget, this._context.viewModel.coordinatesConverter);\n    }\n    createOverviewRuler(cssClassName) {\n        return new OverviewRuler(this._context, cssClassName);\n    }\n    change(callback) {\n        this._viewZones.changeViewZones(callback);\n        this._scheduleRender();\n    }\n    render(now, everything) {\n        if (everything) {\n            // Force everything to render...\n            this._viewLines.forceShouldRender();\n            for (const viewPart of this._viewParts) {\n                viewPart.forceShouldRender();\n            }\n        }\n        if (now) {\n            this._flushAccumulatedAndRenderNow();\n        }\n        else {\n            this._scheduleRender();\n        }\n    }\n    writeScreenReaderContent(reason) {\n        this._textAreaHandler.writeScreenReaderContent(reason);\n    }\n    focus() {\n        this._textAreaHandler.focusTextArea();\n    }\n    isFocused() {\n        return this._textAreaHandler.isFocused();\n    }\n    setAriaOptions(options) {\n        this._textAreaHandler.setAriaOptions(options);\n    }\n    addContentWidget(widgetData) {\n        this._contentWidgets.addWidget(widgetData.widget);\n        this.layoutContentWidget(widgetData);\n        this._scheduleRender();\n    }\n    layoutContentWidget(widgetData) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        this._contentWidgets.setWidgetPosition(widgetData.widget, (_b = (_a = widgetData.position) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : null, (_d = (_c = widgetData.position) === null || _c === void 0 ? void 0 : _c.secondaryPosition) !== null && _d !== void 0 ? _d : null, (_f = (_e = widgetData.position) === null || _e === void 0 ? void 0 : _e.preference) !== null && _f !== void 0 ? _f : null, (_h = (_g = widgetData.position) === null || _g === void 0 ? void 0 : _g.positionAffinity) !== null && _h !== void 0 ? _h : null);\n        this._scheduleRender();\n    }\n    removeContentWidget(widgetData) {\n        this._contentWidgets.removeWidget(widgetData.widget);\n        this._scheduleRender();\n    }\n    addOverlayWidget(widgetData) {\n        this._overlayWidgets.addWidget(widgetData.widget);\n        this.layoutOverlayWidget(widgetData);\n        this._scheduleRender();\n    }\n    layoutOverlayWidget(widgetData) {\n        const newPreference = widgetData.position ? widgetData.position.preference : null;\n        const shouldRender = this._overlayWidgets.setWidgetPosition(widgetData.widget, newPreference);\n        if (shouldRender) {\n            this._scheduleRender();\n        }\n    }\n    removeOverlayWidget(widgetData) {\n        this._overlayWidgets.removeWidget(widgetData.widget);\n        this._scheduleRender();\n    }\n    addGlyphMarginWidget(widgetData) {\n        this._glyphMarginWidgets.addWidget(widgetData.widget);\n        this._shouldRecomputeGlyphMarginLanes = true;\n        this._scheduleRender();\n    }\n    layoutGlyphMarginWidget(widgetData) {\n        const newPreference = widgetData.position;\n        const shouldRender = this._glyphMarginWidgets.setWidgetPosition(widgetData.widget, newPreference);\n        if (shouldRender) {\n            this._shouldRecomputeGlyphMarginLanes = true;\n            this._scheduleRender();\n        }\n    }\n    removeGlyphMarginWidget(widgetData) {\n        this._glyphMarginWidgets.removeWidget(widgetData.widget);\n        this._shouldRecomputeGlyphMarginLanes = true;\n        this._scheduleRender();\n    }\n};\nView = __decorate([\n    __param(6, IInstantiationService)\n], View);\nexport { View };\nfunction safeInvokeNoArg(func) {\n    try {\n        return func();\n    }\n    catch (e) {\n        onUnexpectedError(e);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createTrustedTypesPolicy } from '../../../base/browser/trustedTypes.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { StringBuilder } from '../../common/core/stringBuilder.js';\nimport { ModelLineProjectionData } from '../../common/modelLineProjectionData.js';\nimport { LineInjectedText } from '../../common/textModelEvents.js';\nconst ttPolicy = createTrustedTypesPolicy('domLineBreaksComputer', { createHTML: value => value });\nexport class DOMLineBreaksComputerFactory {\n    static create() {\n        return new DOMLineBreaksComputerFactory();\n    }\n    constructor() {\n    }\n    createLineBreaksComputer(fontInfo, tabSize, wrappingColumn, wrappingIndent, wordBreak) {\n        const requests = [];\n        const injectedTexts = [];\n        return {\n            addRequest: (lineText, injectedText, previousLineBreakData) => {\n                requests.push(lineText);\n                injectedTexts.push(injectedText);\n            },\n            finalize: () => {\n                return createLineBreaks(requests, fontInfo, tabSize, wrappingColumn, wrappingIndent, wordBreak, injectedTexts);\n            }\n        };\n    }\n}\nfunction createLineBreaks(requests, fontInfo, tabSize, firstLineBreakColumn, wrappingIndent, wordBreak, injectedTextsPerLine) {\n    var _a;\n    function createEmptyLineBreakWithPossiblyInjectedText(requestIdx) {\n        const injectedTexts = injectedTextsPerLine[requestIdx];\n        if (injectedTexts) {\n            const lineText = LineInjectedText.applyInjectedText(requests[requestIdx], injectedTexts);\n            const injectionOptions = injectedTexts.map(t => t.options);\n            const injectionOffsets = injectedTexts.map(text => text.column - 1);\n            // creating a `LineBreakData` with an invalid `breakOffsetsVisibleColumn` is OK\n            // because `breakOffsetsVisibleColumn` will never be used because it contains injected text\n            return new ModelLineProjectionData(injectionOffsets, injectionOptions, [lineText.length], [], 0);\n        }\n        else {\n            return null;\n        }\n    }\n    if (firstLineBreakColumn === -1) {\n        const result = [];\n        for (let i = 0, len = requests.length; i < len; i++) {\n            result[i] = createEmptyLineBreakWithPossiblyInjectedText(i);\n        }\n        return result;\n    }\n    const overallWidth = Math.round(firstLineBreakColumn * fontInfo.typicalHalfwidthCharacterWidth);\n    const additionalIndent = (wrappingIndent === 3 /* WrappingIndent.DeepIndent */ ? 2 : wrappingIndent === 2 /* WrappingIndent.Indent */ ? 1 : 0);\n    const additionalIndentSize = Math.round(tabSize * additionalIndent);\n    const additionalIndentLength = Math.ceil(fontInfo.spaceWidth * additionalIndentSize);\n    const containerDomNode = document.createElement('div');\n    applyFontInfo(containerDomNode, fontInfo);\n    const sb = new StringBuilder(10000);\n    const firstNonWhitespaceIndices = [];\n    const wrappedTextIndentLengths = [];\n    const renderLineContents = [];\n    const allCharOffsets = [];\n    const allVisibleColumns = [];\n    for (let i = 0; i < requests.length; i++) {\n        const lineContent = LineInjectedText.applyInjectedText(requests[i], injectedTextsPerLine[i]);\n        let firstNonWhitespaceIndex = 0;\n        let wrappedTextIndentLength = 0;\n        let width = overallWidth;\n        if (wrappingIndent !== 0 /* WrappingIndent.None */) {\n            firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(lineContent);\n            if (firstNonWhitespaceIndex === -1) {\n                // all whitespace line\n                firstNonWhitespaceIndex = 0;\n            }\n            else {\n                // Track existing indent\n                for (let i = 0; i < firstNonWhitespaceIndex; i++) {\n                    const charWidth = (lineContent.charCodeAt(i) === 9 /* CharCode.Tab */\n                        ? (tabSize - (wrappedTextIndentLength % tabSize))\n                        : 1);\n                    wrappedTextIndentLength += charWidth;\n                }\n                const indentWidth = Math.ceil(fontInfo.spaceWidth * wrappedTextIndentLength);\n                // Force sticking to beginning of line if no character would fit except for the indentation\n                if (indentWidth + fontInfo.typicalFullwidthCharacterWidth > overallWidth) {\n                    firstNonWhitespaceIndex = 0;\n                    wrappedTextIndentLength = 0;\n                }\n                else {\n                    width = overallWidth - indentWidth;\n                }\n            }\n        }\n        const renderLineContent = lineContent.substr(firstNonWhitespaceIndex);\n        const tmp = renderLine(renderLineContent, wrappedTextIndentLength, tabSize, width, sb, additionalIndentLength);\n        firstNonWhitespaceIndices[i] = firstNonWhitespaceIndex;\n        wrappedTextIndentLengths[i] = wrappedTextIndentLength;\n        renderLineContents[i] = renderLineContent;\n        allCharOffsets[i] = tmp[0];\n        allVisibleColumns[i] = tmp[1];\n    }\n    const html = sb.build();\n    const trustedhtml = (_a = ttPolicy === null || ttPolicy === void 0 ? void 0 : ttPolicy.createHTML(html)) !== null && _a !== void 0 ? _a : html;\n    containerDomNode.innerHTML = trustedhtml;\n    containerDomNode.style.position = 'absolute';\n    containerDomNode.style.top = '10000';\n    if (wordBreak === 'keepAll') {\n        // word-break: keep-all; overflow-wrap: anywhere\n        containerDomNode.style.wordBreak = 'keep-all';\n        containerDomNode.style.overflowWrap = 'anywhere';\n    }\n    else {\n        // overflow-wrap: break-word\n        containerDomNode.style.wordBreak = 'inherit';\n        containerDomNode.style.overflowWrap = 'break-word';\n    }\n    document.body.appendChild(containerDomNode);\n    const range = document.createRange();\n    const lineDomNodes = Array.prototype.slice.call(containerDomNode.children, 0);\n    const result = [];\n    for (let i = 0; i < requests.length; i++) {\n        const lineDomNode = lineDomNodes[i];\n        const breakOffsets = readLineBreaks(range, lineDomNode, renderLineContents[i], allCharOffsets[i]);\n        if (breakOffsets === null) {\n            result[i] = createEmptyLineBreakWithPossiblyInjectedText(i);\n            continue;\n        }\n        const firstNonWhitespaceIndex = firstNonWhitespaceIndices[i];\n        const wrappedTextIndentLength = wrappedTextIndentLengths[i] + additionalIndentSize;\n        const visibleColumns = allVisibleColumns[i];\n        const breakOffsetsVisibleColumn = [];\n        for (let j = 0, len = breakOffsets.length; j < len; j++) {\n            breakOffsetsVisibleColumn[j] = visibleColumns[breakOffsets[j]];\n        }\n        if (firstNonWhitespaceIndex !== 0) {\n            // All break offsets are relative to the renderLineContent, make them absolute again\n            for (let j = 0, len = breakOffsets.length; j < len; j++) {\n                breakOffsets[j] += firstNonWhitespaceIndex;\n            }\n        }\n        let injectionOptions;\n        let injectionOffsets;\n        const curInjectedTexts = injectedTextsPerLine[i];\n        if (curInjectedTexts) {\n            injectionOptions = curInjectedTexts.map(t => t.options);\n            injectionOffsets = curInjectedTexts.map(text => text.column - 1);\n        }\n        else {\n            injectionOptions = null;\n            injectionOffsets = null;\n        }\n        result[i] = new ModelLineProjectionData(injectionOffsets, injectionOptions, breakOffsets, breakOffsetsVisibleColumn, wrappedTextIndentLength);\n    }\n    document.body.removeChild(containerDomNode);\n    return result;\n}\nfunction renderLine(lineContent, initialVisibleColumn, tabSize, width, sb, wrappingIndentLength) {\n    if (wrappingIndentLength !== 0) {\n        const hangingOffset = String(wrappingIndentLength);\n        sb.appendString('<div style=\"text-indent: -');\n        sb.appendString(hangingOffset);\n        sb.appendString('px; padding-left: ');\n        sb.appendString(hangingOffset);\n        sb.appendString('px; box-sizing: border-box; width:');\n    }\n    else {\n        sb.appendString('<div style=\"width:');\n    }\n    sb.appendString(String(width));\n    sb.appendString('px;\">');\n    // if (containsRTL) {\n    // \tsb.appendASCIIString('\" dir=\"ltr');\n    // }\n    const len = lineContent.length;\n    let visibleColumn = initialVisibleColumn;\n    let charOffset = 0;\n    const charOffsets = [];\n    const visibleColumns = [];\n    let nextCharCode = (0 < len ? lineContent.charCodeAt(0) : 0 /* CharCode.Null */);\n    sb.appendString('<span>');\n    for (let charIndex = 0; charIndex < len; charIndex++) {\n        if (charIndex !== 0 && charIndex % 16384 /* Constants.SPAN_MODULO_LIMIT */ === 0) {\n            sb.appendString('</span><span>');\n        }\n        charOffsets[charIndex] = charOffset;\n        visibleColumns[charIndex] = visibleColumn;\n        const charCode = nextCharCode;\n        nextCharCode = (charIndex + 1 < len ? lineContent.charCodeAt(charIndex + 1) : 0 /* CharCode.Null */);\n        let producedCharacters = 1;\n        let charWidth = 1;\n        switch (charCode) {\n            case 9 /* CharCode.Tab */:\n                producedCharacters = (tabSize - (visibleColumn % tabSize));\n                charWidth = producedCharacters;\n                for (let space = 1; space <= producedCharacters; space++) {\n                    if (space < producedCharacters) {\n                        sb.appendCharCode(0xA0); // &nbsp;\n                    }\n                    else {\n                        sb.appendASCIICharCode(32 /* CharCode.Space */);\n                    }\n                }\n                break;\n            case 32 /* CharCode.Space */:\n                if (nextCharCode === 32 /* CharCode.Space */) {\n                    sb.appendCharCode(0xA0); // &nbsp;\n                }\n                else {\n                    sb.appendASCIICharCode(32 /* CharCode.Space */);\n                }\n                break;\n            case 60 /* CharCode.LessThan */:\n                sb.appendString('&lt;');\n                break;\n            case 62 /* CharCode.GreaterThan */:\n                sb.appendString('&gt;');\n                break;\n            case 38 /* CharCode.Ampersand */:\n                sb.appendString('&amp;');\n                break;\n            case 0 /* CharCode.Null */:\n                sb.appendString('&#00;');\n                break;\n            case 65279 /* CharCode.UTF8_BOM */:\n            case 8232 /* CharCode.LINE_SEPARATOR */:\n            case 8233 /* CharCode.PARAGRAPH_SEPARATOR */:\n            case 133 /* CharCode.NEXT_LINE */:\n                sb.appendCharCode(0xFFFD);\n                break;\n            default:\n                if (strings.isFullWidthCharacter(charCode)) {\n                    charWidth++;\n                }\n                if (charCode < 32) {\n                    sb.appendCharCode(9216 + charCode);\n                }\n                else {\n                    sb.appendCharCode(charCode);\n                }\n        }\n        charOffset += producedCharacters;\n        visibleColumn += charWidth;\n    }\n    sb.appendString('</span>');\n    charOffsets[lineContent.length] = charOffset;\n    visibleColumns[lineContent.length] = visibleColumn;\n    sb.appendString('</div>');\n    return [charOffsets, visibleColumns];\n}\nfunction readLineBreaks(range, lineDomNode, lineContent, charOffsets) {\n    if (lineContent.length <= 1) {\n        return null;\n    }\n    const spans = Array.prototype.slice.call(lineDomNode.children, 0);\n    const breakOffsets = [];\n    try {\n        discoverBreaks(range, spans, charOffsets, 0, null, lineContent.length - 1, null, breakOffsets);\n    }\n    catch (err) {\n        console.log(err);\n        return null;\n    }\n    if (breakOffsets.length === 0) {\n        return null;\n    }\n    breakOffsets.push(lineContent.length);\n    return breakOffsets;\n}\nfunction discoverBreaks(range, spans, charOffsets, low, lowRects, high, highRects, result) {\n    if (low === high) {\n        return;\n    }\n    lowRects = lowRects || readClientRect(range, spans, charOffsets[low], charOffsets[low + 1]);\n    highRects = highRects || readClientRect(range, spans, charOffsets[high], charOffsets[high + 1]);\n    if (Math.abs(lowRects[0].top - highRects[0].top) <= 0.1) {\n        // same line\n        return;\n    }\n    // there is at least one line break between these two offsets\n    if (low + 1 === high) {\n        // the two characters are adjacent, so the line break must be exactly between them\n        result.push(high);\n        return;\n    }\n    const mid = low + ((high - low) / 2) | 0;\n    const midRects = readClientRect(range, spans, charOffsets[mid], charOffsets[mid + 1]);\n    discoverBreaks(range, spans, charOffsets, low, lowRects, mid, midRects, result);\n    discoverBreaks(range, spans, charOffsets, mid, midRects, high, highRects, result);\n}\nfunction readClientRect(range, spans, startOffset, endOffset) {\n    range.setStart(spans[(startOffset / 16384 /* Constants.SPAN_MODULO_LIMIT */) | 0].firstChild, startOffset % 16384 /* Constants.SPAN_MODULO_LIMIT */);\n    range.setEnd(spans[(endOffset / 16384 /* Constants.SPAN_MODULO_LIMIT */) | 0].firstChild, endOffset % 16384 /* Constants.SPAN_MODULO_LIMIT */);\n    return range.getClientRects();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ViewEventHandler } from '../../common/viewEventHandler.js';\nexport class DynamicViewOverlay extends ViewEventHandler {\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './lineNumbers.css';\nimport * as platform from '../../../../base/common/platform.js';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { Position } from '../../../common/core/position.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { editorDimmedLineNumber, editorLineNumbers } from '../../../common/core/editorColorRegistry.js';\nexport class LineNumbersOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._readConfig();\n        this._lastCursorModelPosition = new Position(1, 1);\n        this._renderResult = null;\n        this._activeLineNumber = 1;\n        this._context.addEventHandler(this);\n    }\n    _readConfig() {\n        const options = this._context.configuration.options;\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        const lineNumbers = options.get(67 /* EditorOption.lineNumbers */);\n        this._renderLineNumbers = lineNumbers.renderType;\n        this._renderCustomLineNumbers = lineNumbers.renderFn;\n        this._renderFinalNewline = options.get(94 /* EditorOption.renderFinalNewline */);\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this._lineNumbersLeft = layoutInfo.lineNumbersLeft;\n        this._lineNumbersWidth = layoutInfo.lineNumbersWidth;\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        this._readConfig();\n        return true;\n    }\n    onCursorStateChanged(e) {\n        const primaryViewPosition = e.selections[0].getPosition();\n        this._lastCursorModelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(primaryViewPosition);\n        let shouldRender = false;\n        if (this._activeLineNumber !== primaryViewPosition.lineNumber) {\n            this._activeLineNumber = primaryViewPosition.lineNumber;\n            shouldRender = true;\n        }\n        if (this._renderLineNumbers === 2 /* RenderLineNumbersType.Relative */ || this._renderLineNumbers === 3 /* RenderLineNumbersType.Interval */) {\n            shouldRender = true;\n        }\n        return shouldRender;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    _getLineRenderLineNumber(viewLineNumber) {\n        const modelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(viewLineNumber, 1));\n        if (modelPosition.column !== 1) {\n            return '';\n        }\n        const modelLineNumber = modelPosition.lineNumber;\n        if (this._renderCustomLineNumbers) {\n            return this._renderCustomLineNumbers(modelLineNumber);\n        }\n        if (this._renderLineNumbers === 2 /* RenderLineNumbersType.Relative */) {\n            const diff = Math.abs(this._lastCursorModelPosition.lineNumber - modelLineNumber);\n            if (diff === 0) {\n                return '<span class=\"relative-current-line-number\">' + modelLineNumber + '</span>';\n            }\n            return String(diff);\n        }\n        if (this._renderLineNumbers === 3 /* RenderLineNumbersType.Interval */) {\n            if (this._lastCursorModelPosition.lineNumber === modelLineNumber) {\n                return String(modelLineNumber);\n            }\n            if (modelLineNumber % 10 === 0) {\n                return String(modelLineNumber);\n            }\n            return '';\n        }\n        return String(modelLineNumber);\n    }\n    prepareRender(ctx) {\n        if (this._renderLineNumbers === 0 /* RenderLineNumbersType.Off */) {\n            this._renderResult = null;\n            return;\n        }\n        const lineHeightClassName = (platform.isLinux ? (this._lineHeight % 2 === 0 ? ' lh-even' : ' lh-odd') : '');\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const lineCount = this._context.viewModel.getLineCount();\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const renderLineNumber = this._getLineRenderLineNumber(lineNumber);\n            if (!renderLineNumber) {\n                output[lineIndex] = '';\n                continue;\n            }\n            let extraClassName = '';\n            if (lineNumber === lineCount && this._context.viewModel.getLineLength(lineNumber) === 0) {\n                // this is the last line\n                if (this._renderFinalNewline === 'off') {\n                    output[lineIndex] = '';\n                    continue;\n                }\n                if (this._renderFinalNewline === 'dimmed') {\n                    extraClassName = ' dimmed-line-number';\n                }\n            }\n            if (lineNumber === this._activeLineNumber) {\n                extraClassName = ' active-line-number';\n            }\n            output[lineIndex] = (`<div class=\"${LineNumbersOverlay.CLASS_NAME}${lineHeightClassName}${extraClassName}\" style=\"left:${this._lineNumbersLeft}px;width:${this._lineNumbersWidth}px;\">${renderLineNumber}</div>`);\n        }\n        this._renderResult = output;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\nLineNumbersOverlay.CLASS_NAME = 'line-numbers';\nregisterThemingParticipant((theme, collector) => {\n    const editorLineNumbersColor = theme.getColor(editorLineNumbers);\n    const editorDimmedLineNumberColor = theme.getColor(editorDimmedLineNumber);\n    if (editorDimmedLineNumberColor) {\n        collector.addRule(`.monaco-editor .line-numbers.dimmed-line-number { color: ${editorDimmedLineNumberColor}; }`);\n    }\n    else if (editorLineNumbersColor) {\n        collector.addRule(`.monaco-editor .line-numbers.dimmed-line-number { color: ${editorLineNumbersColor.transparent(0.4)}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { FloatHorizontalRange } from '../../view/renderingContext.js';\nexport class RangeUtil {\n    static _createRange() {\n        if (!this._handyReadyRange) {\n            this._handyReadyRange = document.createRange();\n        }\n        return this._handyReadyRange;\n    }\n    static _detachRange(range, endNode) {\n        // Move range out of the span node, IE doesn't like having many ranges in\n        // the same spot and will act badly for lines containing dashes ('-')\n        range.selectNodeContents(endNode);\n    }\n    static _readClientRects(startElement, startOffset, endElement, endOffset, endNode) {\n        const range = this._createRange();\n        try {\n            range.setStart(startElement, startOffset);\n            range.setEnd(endElement, endOffset);\n            return range.getClientRects();\n        }\n        catch (e) {\n            // This is life ...\n            return null;\n        }\n        finally {\n            this._detachRange(range, endNode);\n        }\n    }\n    static _mergeAdjacentRanges(ranges) {\n        if (ranges.length === 1) {\n            // There is nothing to merge\n            return ranges;\n        }\n        ranges.sort(FloatHorizontalRange.compare);\n        const result = [];\n        let resultLen = 0;\n        let prev = ranges[0];\n        for (let i = 1, len = ranges.length; i < len; i++) {\n            const range = ranges[i];\n            if (prev.left + prev.width + 0.9 /* account for browser's rounding errors*/ >= range.left) {\n                prev.width = Math.max(prev.width, range.left + range.width - prev.left);\n            }\n            else {\n                result[resultLen++] = prev;\n                prev = range;\n            }\n        }\n        result[resultLen++] = prev;\n        return result;\n    }\n    static _createHorizontalRangesFromClientRects(clientRects, clientRectDeltaLeft, clientRectScale) {\n        if (!clientRects || clientRects.length === 0) {\n            return null;\n        }\n        // We go through FloatHorizontalRange because it has been observed in bi-di text\n        // that the clientRects are not coming in sorted from the browser\n        const result = [];\n        for (let i = 0, len = clientRects.length; i < len; i++) {\n            const clientRect = clientRects[i];\n            result[i] = new FloatHorizontalRange(Math.max(0, (clientRect.left - clientRectDeltaLeft) / clientRectScale), clientRect.width / clientRectScale);\n        }\n        return this._mergeAdjacentRanges(result);\n    }\n    static readHorizontalRanges(domNode, startChildIndex, startOffset, endChildIndex, endOffset, context) {\n        // Panic check\n        const min = 0;\n        const max = domNode.children.length - 1;\n        if (min > max) {\n            return null;\n        }\n        startChildIndex = Math.min(max, Math.max(min, startChildIndex));\n        endChildIndex = Math.min(max, Math.max(min, endChildIndex));\n        if (startChildIndex === endChildIndex && startOffset === endOffset && startOffset === 0 && !domNode.children[startChildIndex].firstChild) {\n            // We must find the position at the beginning of a <span>\n            // To cover cases of empty <span>s, avoid using a range and use the <span>'s bounding box\n            const clientRects = domNode.children[startChildIndex].getClientRects();\n            context.markDidDomLayout();\n            return this._createHorizontalRangesFromClientRects(clientRects, context.clientRectDeltaLeft, context.clientRectScale);\n        }\n        // If crossing over to a span only to select offset 0, then use the previous span's maximum offset\n        // Chrome is buggy and doesn't handle 0 offsets well sometimes.\n        if (startChildIndex !== endChildIndex) {\n            if (endChildIndex > 0 && endOffset === 0) {\n                endChildIndex--;\n                endOffset = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n            }\n        }\n        let startElement = domNode.children[startChildIndex].firstChild;\n        let endElement = domNode.children[endChildIndex].firstChild;\n        if (!startElement || !endElement) {\n            // When having an empty <span> (without any text content), try to move to the previous <span>\n            if (!startElement && startOffset === 0 && startChildIndex > 0) {\n                startElement = domNode.children[startChildIndex - 1].firstChild;\n                startOffset = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n            }\n            if (!endElement && endOffset === 0 && endChildIndex > 0) {\n                endElement = domNode.children[endChildIndex - 1].firstChild;\n                endOffset = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n            }\n        }\n        if (!startElement || !endElement) {\n            return null;\n        }\n        startOffset = Math.min(startElement.textContent.length, Math.max(0, startOffset));\n        endOffset = Math.min(endElement.textContent.length, Math.max(0, endOffset));\n        const clientRects = this._readClientRects(startElement, startOffset, endElement, endOffset, context.endNode);\n        context.markDidDomLayout();\n        return this._createHorizontalRangesFromClientRects(clientRects, context.clientRectDeltaLeft, context.clientRectScale);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as browser from '../../../../base/browser/browser.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { RangeUtil } from './rangeUtil.js';\nimport { FloatHorizontalRange, VisibleRanges } from '../../view/renderingContext.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine, LineRange, DomPosition } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { EditorFontLigatures } from '../../../common/config/editorOptions.js';\nconst canUseFastRenderedViewLine = (function () {\n    if (platform.isNative) {\n        // In VSCode we know very well when the zoom level changes\n        return true;\n    }\n    if (platform.isLinux || browser.isFirefox || browser.isSafari) {\n        // On Linux, it appears that zooming affects char widths (in pixels), which is unexpected.\n        // --\n        // Even though we read character widths correctly, having read them at a specific zoom level\n        // does not mean they are the same at the current zoom level.\n        // --\n        // This could be improved if we ever figure out how to get an event when browsers zoom,\n        // but until then we have to stick with reading client rects.\n        // --\n        // The same has been observed with Firefox on Windows7\n        // --\n        // The same has been oversved with Safari\n        return false;\n    }\n    return true;\n})();\nlet monospaceAssumptionsAreValid = true;\nexport class ViewLineOptions {\n    constructor(config, themeType) {\n        this.themeType = themeType;\n        const options = config.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        const experimentalWhitespaceRendering = options.get(38 /* EditorOption.experimentalWhitespaceRendering */);\n        if (experimentalWhitespaceRendering === 'off') {\n            this.renderWhitespace = options.get(98 /* EditorOption.renderWhitespace */);\n        }\n        else {\n            // whitespace is rendered in a different layer\n            this.renderWhitespace = 'none';\n        }\n        this.renderControlCharacters = options.get(93 /* EditorOption.renderControlCharacters */);\n        this.spaceWidth = fontInfo.spaceWidth;\n        this.middotWidth = fontInfo.middotWidth;\n        this.wsmiddotWidth = fontInfo.wsmiddotWidth;\n        this.useMonospaceOptimizations = (fontInfo.isMonospace\n            && !options.get(33 /* EditorOption.disableMonospaceOptimizations */));\n        this.canUseHalfwidthRightwardsArrow = fontInfo.canUseHalfwidthRightwardsArrow;\n        this.lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this.stopRenderingLineAfter = options.get(116 /* EditorOption.stopRenderingLineAfter */);\n        this.fontLigatures = options.get(51 /* EditorOption.fontLigatures */);\n    }\n    equals(other) {\n        return (this.themeType === other.themeType\n            && this.renderWhitespace === other.renderWhitespace\n            && this.renderControlCharacters === other.renderControlCharacters\n            && this.spaceWidth === other.spaceWidth\n            && this.middotWidth === other.middotWidth\n            && this.wsmiddotWidth === other.wsmiddotWidth\n            && this.useMonospaceOptimizations === other.useMonospaceOptimizations\n            && this.canUseHalfwidthRightwardsArrow === other.canUseHalfwidthRightwardsArrow\n            && this.lineHeight === other.lineHeight\n            && this.stopRenderingLineAfter === other.stopRenderingLineAfter\n            && this.fontLigatures === other.fontLigatures);\n    }\n}\nexport class ViewLine {\n    constructor(options) {\n        this._options = options;\n        this._isMaybeInvalid = true;\n        this._renderedViewLine = null;\n    }\n    // --- begin IVisibleLineData\n    getDomNode() {\n        if (this._renderedViewLine && this._renderedViewLine.domNode) {\n            return this._renderedViewLine.domNode.domNode;\n        }\n        return null;\n    }\n    setDomNode(domNode) {\n        if (this._renderedViewLine) {\n            this._renderedViewLine.domNode = createFastDomNode(domNode);\n        }\n        else {\n            throw new Error('I have no rendered view line to set the dom node to...');\n        }\n    }\n    onContentChanged() {\n        this._isMaybeInvalid = true;\n    }\n    onTokensChanged() {\n        this._isMaybeInvalid = true;\n    }\n    onDecorationsChanged() {\n        this._isMaybeInvalid = true;\n    }\n    onOptionsChanged(newOptions) {\n        this._isMaybeInvalid = true;\n        this._options = newOptions;\n    }\n    onSelectionChanged() {\n        if (isHighContrast(this._options.themeType) || this._options.renderWhitespace === 'selection') {\n            this._isMaybeInvalid = true;\n            return true;\n        }\n        return false;\n    }\n    renderLine(lineNumber, deltaTop, viewportData, sb) {\n        if (this._isMaybeInvalid === false) {\n            // it appears that nothing relevant has changed\n            return false;\n        }\n        this._isMaybeInvalid = false;\n        const lineData = viewportData.getViewLineRenderingData(lineNumber);\n        const options = this._options;\n        const actualInlineDecorations = LineDecoration.filter(lineData.inlineDecorations, lineNumber, lineData.minColumn, lineData.maxColumn);\n        // Only send selection information when needed for rendering whitespace\n        let selectionsOnLine = null;\n        if (isHighContrast(options.themeType) || this._options.renderWhitespace === 'selection') {\n            const selections = viewportData.selections;\n            for (const selection of selections) {\n                if (selection.endLineNumber < lineNumber || selection.startLineNumber > lineNumber) {\n                    // Selection does not intersect line\n                    continue;\n                }\n                const startColumn = (selection.startLineNumber === lineNumber ? selection.startColumn : lineData.minColumn);\n                const endColumn = (selection.endLineNumber === lineNumber ? selection.endColumn : lineData.maxColumn);\n                if (startColumn < endColumn) {\n                    if (isHighContrast(options.themeType)) {\n                        actualInlineDecorations.push(new LineDecoration(startColumn, endColumn, 'inline-selected-text', 0 /* InlineDecorationType.Regular */));\n                    }\n                    if (this._options.renderWhitespace === 'selection') {\n                        if (!selectionsOnLine) {\n                            selectionsOnLine = [];\n                        }\n                        selectionsOnLine.push(new LineRange(startColumn - 1, endColumn - 1));\n                    }\n                }\n            }\n        }\n        const renderLineInput = new RenderLineInput(options.useMonospaceOptimizations, options.canUseHalfwidthRightwardsArrow, lineData.content, lineData.continuesWithWrappedLine, lineData.isBasicASCII, lineData.containsRTL, lineData.minColumn - 1, lineData.tokens, actualInlineDecorations, lineData.tabSize, lineData.startVisibleColumn, options.spaceWidth, options.middotWidth, options.wsmiddotWidth, options.stopRenderingLineAfter, options.renderWhitespace, options.renderControlCharacters, options.fontLigatures !== EditorFontLigatures.OFF, selectionsOnLine);\n        if (this._renderedViewLine && this._renderedViewLine.input.equals(renderLineInput)) {\n            // no need to do anything, we have the same render input\n            return false;\n        }\n        sb.appendString('<div style=\"top:');\n        sb.appendString(String(deltaTop));\n        sb.appendString('px;height:');\n        sb.appendString(String(this._options.lineHeight));\n        sb.appendString('px;\" class=\"');\n        sb.appendString(ViewLine.CLASS_NAME);\n        sb.appendString('\">');\n        const output = renderViewLine(renderLineInput, sb);\n        sb.appendString('</div>');\n        let renderedViewLine = null;\n        if (monospaceAssumptionsAreValid && canUseFastRenderedViewLine && lineData.isBasicASCII && options.useMonospaceOptimizations && output.containsForeignElements === 0 /* ForeignElementType.None */) {\n            renderedViewLine = new FastRenderedViewLine(this._renderedViewLine ? this._renderedViewLine.domNode : null, renderLineInput, output.characterMapping);\n        }\n        if (!renderedViewLine) {\n            renderedViewLine = createRenderedLine(this._renderedViewLine ? this._renderedViewLine.domNode : null, renderLineInput, output.characterMapping, output.containsRTL, output.containsForeignElements);\n        }\n        this._renderedViewLine = renderedViewLine;\n        return true;\n    }\n    layoutLine(lineNumber, deltaTop) {\n        if (this._renderedViewLine && this._renderedViewLine.domNode) {\n            this._renderedViewLine.domNode.setTop(deltaTop);\n            this._renderedViewLine.domNode.setHeight(this._options.lineHeight);\n        }\n    }\n    // --- end IVisibleLineData\n    getWidth(context) {\n        if (!this._renderedViewLine) {\n            return 0;\n        }\n        return this._renderedViewLine.getWidth(context);\n    }\n    getWidthIsFast() {\n        if (!this._renderedViewLine) {\n            return true;\n        }\n        return this._renderedViewLine.getWidthIsFast();\n    }\n    needsMonospaceFontCheck() {\n        if (!this._renderedViewLine) {\n            return false;\n        }\n        return (this._renderedViewLine instanceof FastRenderedViewLine);\n    }\n    monospaceAssumptionsAreValid() {\n        if (!this._renderedViewLine) {\n            return monospaceAssumptionsAreValid;\n        }\n        if (this._renderedViewLine instanceof FastRenderedViewLine) {\n            return this._renderedViewLine.monospaceAssumptionsAreValid();\n        }\n        return monospaceAssumptionsAreValid;\n    }\n    onMonospaceAssumptionsInvalidated() {\n        if (this._renderedViewLine && this._renderedViewLine instanceof FastRenderedViewLine) {\n            this._renderedViewLine = this._renderedViewLine.toSlowRenderedLine();\n        }\n    }\n    getVisibleRangesForRange(lineNumber, startColumn, endColumn, context) {\n        if (!this._renderedViewLine) {\n            return null;\n        }\n        startColumn = Math.min(this._renderedViewLine.input.lineContent.length + 1, Math.max(1, startColumn));\n        endColumn = Math.min(this._renderedViewLine.input.lineContent.length + 1, Math.max(1, endColumn));\n        const stopRenderingLineAfter = this._renderedViewLine.input.stopRenderingLineAfter;\n        if (stopRenderingLineAfter !== -1 && startColumn > stopRenderingLineAfter + 1 && endColumn > stopRenderingLineAfter + 1) {\n            // This range is obviously not visible\n            return new VisibleRanges(true, [new FloatHorizontalRange(this.getWidth(context), 0)]);\n        }\n        if (stopRenderingLineAfter !== -1 && startColumn > stopRenderingLineAfter + 1) {\n            startColumn = stopRenderingLineAfter + 1;\n        }\n        if (stopRenderingLineAfter !== -1 && endColumn > stopRenderingLineAfter + 1) {\n            endColumn = stopRenderingLineAfter + 1;\n        }\n        const horizontalRanges = this._renderedViewLine.getVisibleRangesForRange(lineNumber, startColumn, endColumn, context);\n        if (horizontalRanges && horizontalRanges.length > 0) {\n            return new VisibleRanges(false, horizontalRanges);\n        }\n        return null;\n    }\n    getColumnOfNodeOffset(spanNode, offset) {\n        if (!this._renderedViewLine) {\n            return 1;\n        }\n        return this._renderedViewLine.getColumnOfNodeOffset(spanNode, offset);\n    }\n}\nViewLine.CLASS_NAME = 'view-line';\n/**\n * A rendered line which is guaranteed to contain only regular ASCII and is rendered with a monospace font.\n */\nclass FastRenderedViewLine {\n    constructor(domNode, renderLineInput, characterMapping) {\n        this._cachedWidth = -1;\n        this.domNode = domNode;\n        this.input = renderLineInput;\n        const keyColumnCount = Math.floor(renderLineInput.lineContent.length / 300 /* Constants.MaxMonospaceDistance */);\n        if (keyColumnCount > 0) {\n            this._keyColumnPixelOffsetCache = new Float32Array(keyColumnCount);\n            for (let i = 0; i < keyColumnCount; i++) {\n                this._keyColumnPixelOffsetCache[i] = -1;\n            }\n        }\n        else {\n            this._keyColumnPixelOffsetCache = null;\n        }\n        this._characterMapping = characterMapping;\n        this._charWidth = renderLineInput.spaceWidth;\n    }\n    getWidth(context) {\n        if (!this.domNode || this.input.lineContent.length < 300 /* Constants.MaxMonospaceDistance */) {\n            const horizontalOffset = this._characterMapping.getHorizontalOffset(this._characterMapping.length);\n            return Math.round(this._charWidth * horizontalOffset);\n        }\n        if (this._cachedWidth === -1) {\n            this._cachedWidth = this._getReadingTarget(this.domNode).offsetWidth;\n            context === null || context === void 0 ? void 0 : context.markDidDomLayout();\n        }\n        return this._cachedWidth;\n    }\n    getWidthIsFast() {\n        return (this.input.lineContent.length < 300 /* Constants.MaxMonospaceDistance */) || this._cachedWidth !== -1;\n    }\n    monospaceAssumptionsAreValid() {\n        if (!this.domNode) {\n            return monospaceAssumptionsAreValid;\n        }\n        if (this.input.lineContent.length < 300 /* Constants.MaxMonospaceDistance */) {\n            const expectedWidth = this.getWidth(null);\n            const actualWidth = this.domNode.domNode.firstChild.offsetWidth;\n            if (Math.abs(expectedWidth - actualWidth) >= 2) {\n                // more than 2px off\n                console.warn(`monospace assumptions have been violated, therefore disabling monospace optimizations!`);\n                monospaceAssumptionsAreValid = false;\n            }\n        }\n        return monospaceAssumptionsAreValid;\n    }\n    toSlowRenderedLine() {\n        return createRenderedLine(this.domNode, this.input, this._characterMapping, false, 0 /* ForeignElementType.None */);\n    }\n    getVisibleRangesForRange(lineNumber, startColumn, endColumn, context) {\n        const startPosition = this._getColumnPixelOffset(lineNumber, startColumn, context);\n        const endPosition = this._getColumnPixelOffset(lineNumber, endColumn, context);\n        return [new FloatHorizontalRange(startPosition, endPosition - startPosition)];\n    }\n    _getColumnPixelOffset(lineNumber, column, context) {\n        if (column <= 300 /* Constants.MaxMonospaceDistance */) {\n            const horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n            return this._charWidth * horizontalOffset;\n        }\n        const keyColumnOrdinal = Math.floor((column - 1) / 300 /* Constants.MaxMonospaceDistance */) - 1;\n        const keyColumn = (keyColumnOrdinal + 1) * 300 /* Constants.MaxMonospaceDistance */ + 1;\n        let keyColumnPixelOffset = -1;\n        if (this._keyColumnPixelOffsetCache) {\n            keyColumnPixelOffset = this._keyColumnPixelOffsetCache[keyColumnOrdinal];\n            if (keyColumnPixelOffset === -1) {\n                keyColumnPixelOffset = this._actualReadPixelOffset(lineNumber, keyColumn, context);\n                this._keyColumnPixelOffsetCache[keyColumnOrdinal] = keyColumnPixelOffset;\n            }\n        }\n        if (keyColumnPixelOffset === -1) {\n            // Could not read actual key column pixel offset\n            const horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n            return this._charWidth * horizontalOffset;\n        }\n        const keyColumnHorizontalOffset = this._characterMapping.getHorizontalOffset(keyColumn);\n        const horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n        return keyColumnPixelOffset + this._charWidth * (horizontalOffset - keyColumnHorizontalOffset);\n    }\n    _getReadingTarget(myDomNode) {\n        return myDomNode.domNode.firstChild;\n    }\n    _actualReadPixelOffset(lineNumber, column, context) {\n        if (!this.domNode) {\n            return -1;\n        }\n        const domPosition = this._characterMapping.getDomPosition(column);\n        const r = RangeUtil.readHorizontalRanges(this._getReadingTarget(this.domNode), domPosition.partIndex, domPosition.charIndex, domPosition.partIndex, domPosition.charIndex, context);\n        if (!r || r.length === 0) {\n            return -1;\n        }\n        return r[0].left;\n    }\n    getColumnOfNodeOffset(spanNode, offset) {\n        return getColumnOfNodeOffset(this._characterMapping, spanNode, offset);\n    }\n}\n/**\n * Every time we render a line, we save what we have rendered in an instance of this class.\n */\nclass RenderedViewLine {\n    constructor(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements) {\n        this.domNode = domNode;\n        this.input = renderLineInput;\n        this._characterMapping = characterMapping;\n        this._isWhitespaceOnly = /^\\s*$/.test(renderLineInput.lineContent);\n        this._containsForeignElements = containsForeignElements;\n        this._cachedWidth = -1;\n        this._pixelOffsetCache = null;\n        if (!containsRTL || this._characterMapping.length === 0 /* the line is empty */) {\n            this._pixelOffsetCache = new Float32Array(Math.max(2, this._characterMapping.length + 1));\n            for (let column = 0, len = this._characterMapping.length; column <= len; column++) {\n                this._pixelOffsetCache[column] = -1;\n            }\n        }\n    }\n    // --- Reading from the DOM methods\n    _getReadingTarget(myDomNode) {\n        return myDomNode.domNode.firstChild;\n    }\n    /**\n     * Width of the line in pixels\n     */\n    getWidth(context) {\n        if (!this.domNode) {\n            return 0;\n        }\n        if (this._cachedWidth === -1) {\n            this._cachedWidth = this._getReadingTarget(this.domNode).offsetWidth;\n            context === null || context === void 0 ? void 0 : context.markDidDomLayout();\n        }\n        return this._cachedWidth;\n    }\n    getWidthIsFast() {\n        if (this._cachedWidth === -1) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Visible ranges for a model range\n     */\n    getVisibleRangesForRange(lineNumber, startColumn, endColumn, context) {\n        if (!this.domNode) {\n            return null;\n        }\n        if (this._pixelOffsetCache !== null) {\n            // the text is LTR\n            const startOffset = this._readPixelOffset(this.domNode, lineNumber, startColumn, context);\n            if (startOffset === -1) {\n                return null;\n            }\n            const endOffset = this._readPixelOffset(this.domNode, lineNumber, endColumn, context);\n            if (endOffset === -1) {\n                return null;\n            }\n            return [new FloatHorizontalRange(startOffset, endOffset - startOffset)];\n        }\n        return this._readVisibleRangesForRange(this.domNode, lineNumber, startColumn, endColumn, context);\n    }\n    _readVisibleRangesForRange(domNode, lineNumber, startColumn, endColumn, context) {\n        if (startColumn === endColumn) {\n            const pixelOffset = this._readPixelOffset(domNode, lineNumber, startColumn, context);\n            if (pixelOffset === -1) {\n                return null;\n            }\n            else {\n                return [new FloatHorizontalRange(pixelOffset, 0)];\n            }\n        }\n        else {\n            return this._readRawVisibleRangesForRange(domNode, startColumn, endColumn, context);\n        }\n    }\n    _readPixelOffset(domNode, lineNumber, column, context) {\n        if (this._characterMapping.length === 0) {\n            // This line has no content\n            if (this._containsForeignElements === 0 /* ForeignElementType.None */) {\n                // We can assume the line is really empty\n                return 0;\n            }\n            if (this._containsForeignElements === 2 /* ForeignElementType.After */) {\n                // We have foreign elements after the (empty) line\n                return 0;\n            }\n            if (this._containsForeignElements === 1 /* ForeignElementType.Before */) {\n                // We have foreign elements before the (empty) line\n                return this.getWidth(context);\n            }\n            // We have foreign elements before & after the (empty) line\n            const readingTarget = this._getReadingTarget(domNode);\n            if (readingTarget.firstChild) {\n                context.markDidDomLayout();\n                return readingTarget.firstChild.offsetWidth;\n            }\n            else {\n                return 0;\n            }\n        }\n        if (this._pixelOffsetCache !== null) {\n            // the text is LTR\n            const cachedPixelOffset = this._pixelOffsetCache[column];\n            if (cachedPixelOffset !== -1) {\n                return cachedPixelOffset;\n            }\n            const result = this._actualReadPixelOffset(domNode, lineNumber, column, context);\n            this._pixelOffsetCache[column] = result;\n            return result;\n        }\n        return this._actualReadPixelOffset(domNode, lineNumber, column, context);\n    }\n    _actualReadPixelOffset(domNode, lineNumber, column, context) {\n        if (this._characterMapping.length === 0) {\n            // This line has no content\n            const r = RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), 0, 0, 0, 0, context);\n            if (!r || r.length === 0) {\n                return -1;\n            }\n            return r[0].left;\n        }\n        if (column === this._characterMapping.length && this._isWhitespaceOnly && this._containsForeignElements === 0 /* ForeignElementType.None */) {\n            // This branch helps in the case of whitespace only lines which have a width set\n            return this.getWidth(context);\n        }\n        const domPosition = this._characterMapping.getDomPosition(column);\n        const r = RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), domPosition.partIndex, domPosition.charIndex, domPosition.partIndex, domPosition.charIndex, context);\n        if (!r || r.length === 0) {\n            return -1;\n        }\n        const result = r[0].left;\n        if (this.input.isBasicASCII) {\n            const horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n            const expectedResult = Math.round(this.input.spaceWidth * horizontalOffset);\n            if (Math.abs(expectedResult - result) <= 1) {\n                return expectedResult;\n            }\n        }\n        return result;\n    }\n    _readRawVisibleRangesForRange(domNode, startColumn, endColumn, context) {\n        if (startColumn === 1 && endColumn === this._characterMapping.length) {\n            // This branch helps IE with bidi text & gives a performance boost to other browsers when reading visible ranges for an entire line\n            return [new FloatHorizontalRange(0, this.getWidth(context))];\n        }\n        const startDomPosition = this._characterMapping.getDomPosition(startColumn);\n        const endDomPosition = this._characterMapping.getDomPosition(endColumn);\n        return RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), startDomPosition.partIndex, startDomPosition.charIndex, endDomPosition.partIndex, endDomPosition.charIndex, context);\n    }\n    /**\n     * Returns the column for the text found at a specific offset inside a rendered dom node\n     */\n    getColumnOfNodeOffset(spanNode, offset) {\n        return getColumnOfNodeOffset(this._characterMapping, spanNode, offset);\n    }\n}\nclass WebKitRenderedViewLine extends RenderedViewLine {\n    _readVisibleRangesForRange(domNode, lineNumber, startColumn, endColumn, context) {\n        const output = super._readVisibleRangesForRange(domNode, lineNumber, startColumn, endColumn, context);\n        if (!output || output.length === 0 || startColumn === endColumn || (startColumn === 1 && endColumn === this._characterMapping.length)) {\n            return output;\n        }\n        // WebKit is buggy and returns an expanded range (to contain words in some cases)\n        // The last client rect is enlarged (I think)\n        if (!this.input.containsRTL) {\n            // This is an attempt to patch things up\n            // Find position of last column\n            const endPixelOffset = this._readPixelOffset(domNode, lineNumber, endColumn, context);\n            if (endPixelOffset !== -1) {\n                const lastRange = output[output.length - 1];\n                if (lastRange.left < endPixelOffset) {\n                    // Trim down the width of the last visible range to not go after the last column's position\n                    lastRange.width = endPixelOffset - lastRange.left;\n                }\n            }\n        }\n        return output;\n    }\n}\nconst createRenderedLine = (function () {\n    if (browser.isWebKit) {\n        return createWebKitRenderedLine;\n    }\n    return createNormalRenderedLine;\n})();\nfunction createWebKitRenderedLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements) {\n    return new WebKitRenderedViewLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements);\n}\nfunction createNormalRenderedLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements) {\n    return new RenderedViewLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements);\n}\nexport function getColumnOfNodeOffset(characterMapping, spanNode, offset) {\n    const spanNodeTextContentLength = spanNode.textContent.length;\n    let spanIndex = -1;\n    while (spanNode) {\n        spanNode = spanNode.previousSibling;\n        spanIndex++;\n    }\n    return characterMapping.getColumn(new DomPosition(spanIndex, offset), spanNodeTextContentLength);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './margin.css';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ViewPart } from '../../view/viewPart.js';\nexport class Margin extends ViewPart {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this._canUseLayerHinting = !options.get(32 /* EditorOption.disableLayerHinting */);\n        this._contentLeft = layoutInfo.contentLeft;\n        this._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n        this._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n        this._domNode = createFastDomNode(document.createElement('div'));\n        this._domNode.setClassName(Margin.OUTER_CLASS_NAME);\n        this._domNode.setPosition('absolute');\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        this._glyphMarginBackgroundDomNode = createFastDomNode(document.createElement('div'));\n        this._glyphMarginBackgroundDomNode.setClassName(Margin.CLASS_NAME);\n        this._domNode.appendChild(this._glyphMarginBackgroundDomNode);\n    }\n    dispose() {\n        super.dispose();\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this._canUseLayerHinting = !options.get(32 /* EditorOption.disableLayerHinting */);\n        this._contentLeft = layoutInfo.contentLeft;\n        this._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n        this._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n        return true;\n    }\n    onScrollChanged(e) {\n        return super.onScrollChanged(e) || e.scrollTopChanged;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        // Nothing to read\n    }\n    render(ctx) {\n        this._domNode.setLayerHinting(this._canUseLayerHinting);\n        this._domNode.setContain('strict');\n        const adjustedScrollTop = ctx.scrollTop - ctx.bigNumbersDelta;\n        this._domNode.setTop(-adjustedScrollTop);\n        const height = Math.min(ctx.scrollHeight, 1000000);\n        this._domNode.setHeight(height);\n        this._domNode.setWidth(this._contentLeft);\n        this._glyphMarginBackgroundDomNode.setLeft(this._glyphMarginLeft);\n        this._glyphMarginBackgroundDomNode.setWidth(this._glyphMarginWidth);\n        this._glyphMarginBackgroundDomNode.setHeight(height);\n    }\n}\nMargin.CLASS_NAME = 'glyph-margin';\nMargin.OUTER_CLASS_NAME = 'margin';\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","toVSDataTransfer","dataTransfer","vsDataTransfer","VSDataTransfer","item","items","type","kind","asStringValue","getAsString","append","createStringDataTransferItem","file","getAsFile","createFileDataTransferItemFromFile","uri","path","URI","parse","undefined","createFileDataTransferItem","name","this","Uint8Array","arrayBuffer","INTERNAL_DND_MIME_TYPES","Object","freeze","CodeDataTransfers","EDITORS","FILES","DataTransfers","RESOURCES","INTERNAL_URI_LIST","toExternalVSDataTransfer","sourceDataTransfer","overwriteUriList","arguments","length","uriList","get","replace","Mimes","has","editorData","push","toString","_a","UriList","create","internal","delete","isCodeEditor","thing","getEditorType","editorCommon","ICodeEditor","isDiffEditor","IDiffEditor","getCodeEditor","getModifiedEditor","onDidChangeActiveEditor","isCompositeEditor","activeCodeEditor","PageCoordinates","constructor","x","y","_pageCoordinatesBrand","toClientCoordinates","ClientCoordinates","window","scrollX","scrollY","clientX","clientY","_clientCoordinatesBrand","toPageCoordinates","EditorPagePosition","width","height","_editorPagePositionBrand","CoordinatesRelativeToEditor","_positionRelativeToEditorBrand","createEditorPagePosition","editorViewDomNode","editorPos","dom","left","top","createCoordinatesRelativeToEditor","editorPagePosition","pos","scaleX","offsetWidth","scaleY","offsetHeight","relativeX","relativeY","EditorMouseEvent","StandardMouseEvent","isFromPointerCapture","super","_editorMouseEventBrand","posx","posy","relativePos","EditorMouseEventFactory","_editorViewDomNode","_create","onContextMenu","target","callback","onMouseUp","onMouseDown","MOUSE_DOWN","onPointerDown","POINTER_DOWN","pointerId","onMouseLeave","MOUSE_LEAVE","onMouseMove","EditorPointerEventFactory","onPointerUp","onPointerLeave","POINTER_LEAVE","onPointerMove","GlobalEditorPointerMoveMonitor","Disposable","_globalPointerMoveMonitor","_register","GlobalPointerMoveMonitor","_keydownListener","startMonitoring","initialElement","initialButtons","pointerMoveCallback","onStopCallback","ownerDocument","toKeyCodeChord","isModifierKey","stopMonitoring","browserEvent","dispose","DynamicCssRules","_editor","_instanceId","_idPool","_counter","_rules","Map","_garbageCollectionScheduler","RunOnceScheduler","garbageCollect","createClassNameRef","options","rule","getOrCreateRule","increaseRefCount","className","decreaseRefCount","schedule","properties","key","computeUniqueKey","existingRule","counter","RefCountedCssRule","concat","getContainerDomNode","set","JSON","stringify","values","hasReferences","_containerElement","_referenceCount","_styleElement","textContent","getCssText","str","prop","cssValue","asCssVariable","id","cssPropName","camelToDashes","remove","_ref","first","toLowerCase","_ref2","letter","EditorExtensionsRegistry","Command","opts","precondition","_kbOpts","kbOpts","_menuOpts","menuOpts","_description","description","register","Array","isArray","forEach","_registerMenuItem","kbOptsArr","kbWhen","kbExpr","ContextKeyExpr","and","desc","weight","args","when","primary","secondary","win","linux","mac","KeybindingsRegistry","registerKeybindingRule","CommandsRegistry","registerCommand","handler","accessor","runCommand","MenuRegistry","appendMenuItem","menuId","group","command","title","icon","order","MultiCommand","_implementations","addImplementation","priority","implementation","sort","a","b","i","splice","logService","ILogService","contextKeyService","IContextKeyService","trace","impl","context","getContext","getActiveElement","evaluate","ProxyCommand","EditorCommand","bindToContribution","controllerGetter","_callback","runEditorCommand","editor","controller","runner","codeEditorService","ICodeEditorService","getFocusedCodeEditor","getActiveCodeEditor","invokeWithinContext","editorAccessor","contextMatchesRules","EditorAction","convertOptions","withDefaults","MenuId","EditorContext","label","contextMenuOpts","map","alias","reportTelemetry","run","ITelemetryService","publicLog2","MultiEditorAction","EditorAction2","Action2","_len","_key","_b","kbService","debug","serialize","registerModelAndPositionCommand","_len2","_key2","instaService","IInstantiationService","resource","position","assertType","isUri","Position","isIPosition","model","IModelService","getModel","editorPosition","lift","invokeFunction","slice","ITextModelService","createModelReference","reference","object","textEditorModel","err","finally","registerEditorCommand","editorCommand","EditorContributionRegistry","INSTANCE","registerEditorAction","ctor","action","registerMultiEditorAction","registerInstantiatedEditorAction","editorAction","registerEditorContribution","instantiation","getEditorCommand","commandId","getEditorActions","getEditorContributions","getSomeEditorContributions","ids","filter","c","indexOf","getDiffEditorContributions","editorContributions","diffEditorContributions","editorActions","editorCommands","Registry","add","UndoCommand","MenubarEditMenu","nls","comment","CommandPalette","RedoCommand","SelectAllCommand","MenubarSelectionMenu","__decorate","decorators","d","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","AbstractCodeEditorService","_themeService","_onWillCreateCodeEditor","Emitter","_onCodeEditorAdd","onCodeEditorAdd","event","_onCodeEditorRemove","onCodeEditorRemove","_onWillCreateDiffEditor","_onDiffEditorAdd","onDiffEditorAdd","_onDiffEditorRemove","onDiffEditorRemove","_decorationOptionProviders","_codeEditorOpenHandlers","LinkedList","_modelProperties","_codeEditors","_diffEditors","_globalStyleSheet","willCreateCodeEditor","fire","addCodeEditor","getId","removeCodeEditor","listCodeEditors","keys","willCreateDiffEditor","addDiffEditor","listDiffEditors","editorWithWidgetFocus","editors","hasTextFocus","hasWidgetFocus","removeDecorationType","provider","refCount","ed","removeDecorationsByType","setModelProperty","key1","dest","getModelProperty","openCodeEditor","input","source","sideBySide","candidate","registerCodeEditorOpenHandler","rm","unshift","toDisposable","IThemeService","IBulkEditService","createDecorator","ResourceEdit","metadata","convert","edit","edits","ResourceTextEdit","is","ResourceFileEdit","Error","isObject","textEdit","versionId","Boolean","newResource","oldResource","STOP_WORKER_DELTA_TIME_MS","canSyncModel","modelService","isTooLargeForSyncing","EditorWorkerService","configurationService","languageConfigurationService","languageFeaturesService","_modelService","_workerManager","WorkerManager","_logService","linkProvider","language","hasAccessToAllModels","provideLinks","token","withWorker","client","computeLinks","links","completionProvider","WordBasedCompletionItemProvider","canComputeUnicodeHighlights","computedUnicodeHighlights","range","computeDiff","original","modified","algorithm","identical","quitEarly","changes","toLineRangeMappings","moves","m","MovedText","LineRangeMapping","LineRange","DetailedLineRangeMapping","RangeMapping","Range","computeMoreMinimalEdits","pretty","isNonEmptyArray","sw","StopWatch","elapsed","race","timeout","canNavigateValueSet","navigateValueSet","up","canComputeWordRanges","computeWordRanges","ITextResourceConfigurationService","ILanguageConfigurationService","ILanguageFeaturesService","workerManager","_debugDisplayName","_configurationService","provideCompletionItems","config","getValue","wordBasedSuggestions","models","wordBasedSuggestionsMode","getModels","getLanguageId","wordDefRegExp","getLanguageConfiguration","getWordDefinition","word","getWordAtPosition","lineNumber","startColumn","endColumn","fromPositions","insert","setEndPosition","column","data","textualSuggest","duration","suggestions","words","insertText","_editorWorkerClient","_lastWorkerUsedTime","Date","getTime","IntervalTimer","cancelAndSet","_checkStopIdleWorker","Math","round","onModelRemoved","_","_checkStopEmptyWorker","EditorWorkerClient","EditorModelManager","proxy","keepIdleModels","_syncedModels","_syncedModelsLastUsedTime","_proxy","timer","_checkStopModelSync","STOP_SYNC_MODEL_DELTA_TIME_MS","modelUrl","ensureSyncedResources","resources","forceLargeModels","resourceStr","_beginModelSync","currentTime","toRemove","_stopModelSync","acceptNewModel","url","lines","getLinesContent","EOL","getEOL","getVersionId","toDispose","DisposableStore","onDidChangeContent","acceptModelChanged","onWillDispose","acceptRemovedModel","SynchronousWorkerClient","instance","_instance","_proxyObj","getProxyObject","EditorWorkerHost","workerClient","_workerClient","fhr","method","_disposed","_keepIdleModels","_workerFactory","DefaultWorkerFactory","_worker","_modelManager","_getOrCreateWorker","SimpleWorkerClient","logOnceWebWorkerWarning","EditorSimpleWorker","_getProxy","_getOrCreateModelManager","_withSyncedResources","canceled","computeUnicodeHighlights","computeDefaultDocumentColors","leadingWord","wordDef","wordDefFlags","flags","MarkerDecorationsContribution","_markerDecorationsService","ID","IMarkerDecorationsService","CommandOpener","_commandService","open","matchesScheme","Schemas","allowCommands","includes","decodeURIComponent","query","executeCommand","ICommandService","EditorOpener","_editorService","selection","extractSelection","scheme","normalizePath","assign","fromUserGesture","EditorOpenSource","USER","API","editorOptions","openToSide","OpenerService","editorService","commandService","_openers","_validators","_resolvers","_resolvedUriTargets","ResourceMap","with","fragment","_externalOpeners","_defaultExternalOpener","openExternal","href","matchesSomeScheme","http","https","location","mailto","vsls","_doOpenExternal","registerOpener","opener","targetURI","validationTarget","validator","shouldOpen","resolveExternalUri","resolver","resolved","externalUri","encodeURI","allowContributedOpeners","preferredOpenerId","sourceUri","CancellationToken","None","clear","createWebWorker","MonacoWebWorkerImpl","_foreignModuleId","moduleId","_foreignModuleCreateData","createData","_foreignModuleHost","host","_foreignProxy","_getForeignProxy","foreignHostMethods","getAllMethodNames","loadForeignModule","foreignMethods","proxyMethodRequest","fmr","createProxyMethod","prototype","call","foreignProxy","foreignMethod","getProxy","withSyncedResources","StableEditorScrollState","capture","getScrollTop","hasPendingScrollAnimation","getContentHeight","visiblePosition","visiblePositionScrollDelta","visibleRanges","getVisibleRanges","getStartPosition","visiblePositionScrollTop","getTopForPosition","getPosition","_initialScrollTop","_initialContentHeight","_visiblePosition","_visiblePositionScrollDelta","_cursorPosition","restore","setScrollTop","restoreRelativeVerticalPositionOfCursor","currentCursorPosition","offset","getTopForLineNumber","ViewContentWidgets","ViewPart","viewDomNode","_viewDomNode","_widgets","domNode","createFastDomNode","document","createElement","PartFingerprints","write","setClassName","setPosition","setTop","overflowingContentWidgetsDomNode","onConfigurationChanged","widgetId","onDecorationsChanged","onFlushed","onLineMappingChanged","_updateAnchorsViewPositions","onLinesChanged","onLinesDeleted","onLinesInserted","onScrollChanged","onZonesChanged","updateAnchorViewPosition","addWidget","_widget","myWidget","Widget","_context","allowEditorOverflow","appendChild","setShouldRender","setWidgetPosition","widget","primaryAnchor","secondaryAnchor","preference","affinity","removeWidget","hasOwnProperty","parentNode","removeChild","removeAttribute","shouldSuppressMouseDownOnWidget","suppressMouseDown","onBeforeRender","viewportData","prepareRender","ctx","render","actual","_primaryAnchor","PositionPair","_secondaryAnchor","_actual","getDomNode","configuration","layoutInfo","_fixedOverflowWidgets","_contentWidth","contentWidth","_contentLeft","contentLeft","_lineHeight","_affinity","_preference","_cachedDomNodeOffsetWidth","_cachedDomNodeOffsetHeight","_maxWidth","_getMaxWidth","_isVisible","_renderData","setDisplay","setVisibility","setAttribute","setMaxWidth","hasChanged","_setPosition","modelPosition","getValidPositionPair","viewModel","validModelPosition","validatePosition","coordinatesConverter","modelPositionIsVisible","viewPosition","convertModelPositionToViewPosition","elDocument","elWindow","defaultView","innerWidth","documentElement","body","_layoutBoxInViewport","anchor","aboveLineTop","heightAvailableAboveLine","underLineTop","aboveTop","fitsAbove","belowTop","fitsBelow","viewportHeight","scrollLeft","viewportWidth","_layoutHorizontalSegmentInPage","windowSize","domNodePosition","MIN_LIMIT","max","MAX_LIMIT","min","absoluteLeft","delta","_layoutBoxInPage","absoluteAboveTop","absoluteBelowTop","absoluteAboveLeft","_prepareRenderWidgetAtExactPositionOverflowing","topLeft","Coordinate","_getAnchorsCoordinates","getCoordinates","lineHeight","horizontalPosition","visibleRangeForPosition","getVerticalOffsetForLineNumber","scrollTop","AnchorCoordinate","_reduceAnchorCoordinates","fontInfo","typicalFullwidthCharacterWidth","_prepareRenderWidget","preferredDimensions","beforeRender","safeInvoke","clientRect","getBoundingClientRect","placement","pass","pref","coordinate","startLineNumber","endLineNumber","afterRender","setLeft","bigNumbersDelta","_coordinateBrand","_anchorCoordinateBrand","fn","AbstractLineHighlightOverlay","DynamicViewOverlay","_renderLineHighlight","_renderLineHighlightOnlyWhenFocus","_selectionIsEmpty","_focused","_cursorLineNumbers","_selections","Selection","addEventHandler","removeEventHandler","_readFromSelections","cursorsLineNumbers","s","positionLineNumber","arrays","selectionIsEmpty","every","isEmpty","onThemeChanged","onCursorStateChanged","selections","scrollWidthChanged","scrollTopChanged","onFocusChanged","isFocused","_shouldRenderThis","renderedLine","_renderOne","visibleStartLineNumber","visibleRange","visibleEndLineNumber","len","index","renderData","lineIndex","_shouldRenderInMargin","_shouldRenderInContent","CurrentLineHighlightOverlay","_shouldRenderOther","scrollWidth","CurrentLineMarginHighlightOverlay","registerThemingParticipant","theme","collector","lineHighlight","getColor","editorLineHighlight","addRule","isTransparent","defines","editorLineHighlightBorder","lineHighlightBorder","isHighContrast","DecorationsOverlay","_typicalHalfwidthCharacterWidth","typicalHalfwidthCharacterWidth","_renderResult","_decorations","getDecorationsInViewport","decorations","decorationsLen","zIndex","aClassName","bClassName","compareRangesUsingStarts","output","_renderWholeLineDecorations","_renderNormalDecorations","String","lenI","isWholeLine","decorationOutput","j","prevClassName","prevShowIfCollapsed","prevRange","prevShouldFillLineOnLineBreak","showIfCollapsed","getLineMaxColumn","areIntersectingOrTouching","plusRange","_renderNormalDecoration","shouldFillLineOnLineBreak","linesVisibleRanges","linesVisibleRangesForRange","lenJ","lineVisibleRanges","outsideRenderedLine","ranges","singleVisibleRange","center","HorizontalRange","k","lenK","expandToLeft","continuesOnNextLine","EditorScrollbar","linesContent","overflowGuardDomNode","scrollbar","mouseWheelScrollSensitivity","fastScrollSensitivity","scrollPredominantAxis","scrollbarOptions","listenOnDomNode","getThemeTypeSelector","useShadows","lazyRender","vertical","horizontal","verticalHasArrows","horizontalHasArrows","verticalScrollbarSize","verticalSliderSize","horizontalScrollbarSize","horizontalSliderSize","handleMouseWheel","alwaysConsumeMouseWheel","arrowSize","scrollByPage","SmoothScrollableElement","viewLayout","getScrollable","scrollbarDomNode","_setLayout","onBrowserDesperateReveal","lookAtScrollTop","lookAtScrollLeft","newScrollPosition","deltaTop","getCurrentScrollTop","deltaLeft","getCurrentScrollLeft","setScrollPosition","side","setWidth","minimap","minimapWidth","setHeight","getOverviewRulerLayoutInfo","delegateVerticalScrollbarPointerDown","delegateScrollFromMouseWheelEvent","newOpts","updateOptions","updateClassName","renderNow","IndentGuidesOverlay","_primaryPosition","wrappingInfo","_spaceWidth","spaceWidth","_maxIndentLeft","wrappingColumn","_bracketPairGuideOptions","newPosition","equals","onLanguageConfigurationChanged","_c","_d","indentation","bracketPairs","activeCursorPosition","indents","getGuidesByLine","getLineCount","indent","leftOffset","guide","visibleColumn","horizontalLine","bracketGuides","getBracketGuidesInRangeByLine","highlightActive","highlightActiveBracketPair","horizontalGuides","bracketPairsHorizontal","HorizontalGuidesState","Enabled","EnabledForActive","Disabled","includeInactive","indentGuides","getLinesIndentGuides","activeIndentStartLineNumber","activeIndentEndLineNumber","activeIndentLevel","highlightActiveIndentation","activeIndentInfo","getActiveIndentGuide","indentSize","getOptions","lineGuides","bracketGuidesInLine","bracketGuidesInLineQueue","ArrayQueue","indentGuidesInLine","indentLvl","indentGuide","isActive","takeWhile","g","peeked","peek","IndentGuide","transparentToUndefined","color","colors","bracketColor","editorBracketHighlightingForeground1","guideColor","editorBracketPairGuideBackground1","guideColorActive","editorBracketPairGuideActiveBackground1","editorBracketHighlightingForeground2","editorBracketPairGuideBackground2","editorBracketPairGuideActiveBackground2","editorBracketHighlightingForeground3","editorBracketPairGuideBackground3","editorBracketPairGuideActiveBackground3","editorBracketHighlightingForeground4","editorBracketPairGuideBackground4","editorBracketPairGuideActiveBackground4","editorBracketHighlightingForeground5","editorBracketPairGuideBackground5","editorBracketPairGuideActiveBackground5","editorBracketHighlightingForeground6","editorBracketPairGuideBackground6","editorBracketPairGuideActiveBackground6","colorProvider","BracketPairGuidesClassNames","indentColors","indentColor","editorIndentGuide1","indentColorActive","editorActiveIndentGuide1","editorIndentGuide2","editorActiveIndentGuide2","editorIndentGuide3","editorActiveIndentGuide3","editorIndentGuide4","editorActiveIndentGuide4","editorIndentGuide5","editorActiveIndentGuide5","editorIndentGuide6","editorActiveIndentGuide6","colorValues","effectiveGuideColor","transparent","effectiveGuideColorActive","isDefined","indentColorValues","effectiveIndentColor","effectiveIndentColorActive","level","getInlineClassNameOfLevel","activeClassName","DomReadingContext","didDomLayout","_didDomLayout","readClientRect","_clientRectRead","rect","_domNode","markDidDomLayout","_clientRectDeltaLeft","_clientRectScale","clientRectDeltaLeft","clientRectScale","endNode","LastRenderedData","_currentVisibleRange","getCurrentVisibleRange","setCurrentVisibleRange","currentVisibleRange","HorizontalRevealRangeRequest","minimalReveal","startScrollTop","stopScrollTop","scrollType","minLineNumber","maxLineNumber","HorizontalRevealSelectionsRequest","ViewLines","_linesContent","_textRangeRestingSpot","_visibleLines","VisibleLinesCollection","conf","_isViewportWrapping","isViewportWrapping","_revealHorizontalRightPadding","_cursorSurroundingLines","_cursorSurroundingLinesStyle","_canUseLayerHinting","_viewLineOptions","ViewLineOptions","MOUSE_CURSOR_TEXT_CSS_CLASS_NAME","applyFontInfo","_maxLineWidth","_asyncUpdateLineWidths","_updateLineWidthsSlow","_asyncCheckMonospaceFontAssumptions","_checkMonospaceFontAssumptions","_lastRenderedData","_horizontalRevealRequest","_stickyScrollEnabled","enabled","_maxNumberStickyLines","maxLineCount","createVisibleLine","ViewLine","_onOptionsMaybeChanged","newViewLineOptions","getStartLineNumber","getEndLineNumber","getVisibleLine","onOptionsChanged","rendStartLineNumber","rendEndLineNumber","onSelectionChanged","shouldRender","onRevealRangeRequest","desiredScrollTop","_computeScrollTopToRevealRange","getFutureViewport","verticalType","validateScrollPosition","revealHorizontal","abs","scrollLeftChanged","onTokensChanged","setMaxLineWidth","getPositionFromDOMInfo","spanNode","viewLineDomNode","_getViewLineDomNode","_getLineNumberFor","getColumnOfNodeOffset","minColumn","getLineMinColumn","node","nodeType","CLASS_NAME","parentElement","getLineWidth","getWidth","_updateLineWidthsSlowIfDomDidLayout","_range","includeNewLines","originalEndLineNumber","intersectRanges","visibleRangesLen","domReadingContext","nextLineModelLineNumber","convertViewPositionToModelPosition","continuesInNextLine","visibleRangesForLine","getVisibleRangesForRange","currentLineModelLineNumber","LineVisibleRanges","from","_visibleRangesForLineRange","HorizontalPosition","_updateLineWidthsFast","_updateLineWidths","isScheduled","cancel","fast","localMaxLineWidth","allWidthsComputed","visibleLine","getWidthIsFast","_ensureMaxLineWidth","longestLineNumber","longestWidth","needsMonospaceFontCheck","lineWidth","monospaceAssumptionsAreValid","onMonospaceAssumptionsInvalidated","renderText","renderLines","getScrollWidth","getScrollHeight","horizontalRevealRequest","onDidRender","newScrollLeft","_computeScrollLeftToReveal","maxHorizontalOffset","platform","setLayerHinting","setContain","adjustedScrollTop","iLineWidth","ceil","viewport","viewportStartY","viewportEndY","boxIsSingleRange","boxStartY","boxEndY","newScrollTop","paddingTop","paddingBottom","minScrollTop","boxMiddleY","_computeMinimumScrolling","getCurrentViewport","viewportStartX","viewportEndX","verticalScrollbarWidth","boxStartX","boxEndX","HORIZONTAL_EXTRA_PX","viewportStart","viewportEnd","boxStart","boxEnd","revealAtStart","revealAtEnd","viewportLength","DecorationToRender","_decorationToRenderBrand","LineDecorationToRender","VisibleLineDecorationsToRender","decoration","getDecorations","DedupOverlay","_render","prevEndLineIndex","startLineIndex","endLineIndex","GlyphMarginWidgets","_glyphMargin","_glyphMarginLeft","glyphMarginLeft","_glyphMarginWidth","glyphMarginWidth","_glyphMarginDecorationLaneCount","glyphMarginDecorationLaneCount","_managedDomNodes","_decorationGlyphsToRender","getWidgets","renderInfo","lane","equalsRange","_collectDecorationBasedGlyphRenderRequest","requests","glyphMarginClassName","glyphMargin","DecorationBasedGlyphRenderRequest","_collectWidgetBasedGlyphRenderRequest","widgetLineNumber","WidgetBasedGlyphRenderRequest","_collectSortedGlyphRenderRequests","decorationGlyphsToRender","requestsAtLocation","el","winner","classNames","request","accept","join","pop","relativeVerticalOffset","dec","combinedClassName","DecorationBasedGlyph","LinesDecorationsOverlay","_decorationsLeft","decorationsLeft","_decorationsWidth","decorationsWidth","_getDecorations","rLen","linesDecorationsClassName","firstLineDecorationClassName","toRender","common","lineOutput","MarginViewLineDecorationsOverlay","marginClassName","allCharCodes","v","MinimapCharRenderer","charData","scale","_minimapCharRendererBrand","charDataNormal","soften","charDataLight","ratio","Uint8ClampedArray","toUint8","renderChar","dx","dy","chCode","foregroundAlpha","backgroundColor","backgroundAlpha","fontScale","useLighterFont","force1pxHeight","charWidth","charHeight","renderHeight","console","warn","charIndex","getCharIndex","destWidth","backgroundR","backgroundG","backgroundB","deltaR","deltaG","deltaB","destAlpha","sourceOffset","row","blockRenderChar","colorR","colorG","colorB","charTable","A","B","C","D","E","F","decodeData","prebakedMiniMaps","createSingleCallFunction","MinimapCharRendererFactory","fontFamily","lastCreated","lastFontFamily","factory","createFromSampleData","createSampleData","canvas","style","fillStyle","font","textBaseline","code","fillText","fromCharCode","getImageData","_downsample","_downsampleChar","destOffset","targetIndex","brightest","sourceY1","sourceY2","sourceX1","sourceX2","samples","sy","sourceRow","floor","yBalance","sx","xBalance","sourceIndex","final","pixelsPerCharacter","resultLen","resultOffset","adjust","MinimapOptions","tokensColorTracker","pixelRatio","minimapLayout","minimapOpts","renderMinimap","size","minimapHeightIsEditorHeight","scrollBeyondLastLine","bottom","showSlider","autohide","minimapLeft","minimapHeight","canvasInnerWidth","minimapCanvasInnerWidth","canvasInnerHeight","minimapCanvasInnerHeight","canvasOuterWidth","minimapCanvasOuterWidth","canvasOuterHeight","minimapCanvasOuterHeight","isSampling","minimapIsSampling","editorHeight","minimapScale","minimapLineHeight","minimapCharWidth","charRenderer","defaultBackgroundColor","_getMinimapBackground","_getMinimapForegroundOpacity","themeColor","minimapBackground","RGBA8","rgba","minimapForegroundOpacity","_clamp","other","MinimapLayout","scrollHeight","sliderNeeded","_computedSliderRatio","sliderTop","sliderHeight","topPaddingLineCount","getDesiredScrollTopFromDelta","getDesiredScrollTopFromTouchLocation","pageY","intersectWithViewport","getYForLineNumber","viewportStartLineNumber","viewportEndLineNumber","viewportStartLineNumberVerticalOffset","viewportContainsWhitespaceGaps","lineCount","realLineCount","previousLayout","minimapLinesFitting","logicalScrollHeight","maxMinimapSliderTop","computedSliderRatio","maxLinesFitting","viewportLineCount","expectedViewportLineCount","extraLinesAtTheTop","extraLinesAtTheBottom","consideringStartLineNumber","partialLine","sliderTopAligned","MinimapLine","onContentChanged","INVALID","RenderData","renderedLayout","imageData","_imageData","_renderedLines","RenderedLinesCollection","_set","linesEquals","layout","scrollEquals","_get","tmp","rendLineNumberStart","changeFromLineNumber","changeCount","deleteFromLineNumber","deleteToLineNumber","insertFromLineNumber","insertToLineNumber","MinimapBuffers","WIDTH","HEIGHT","background","_backgroundFillData","_createBackgroundFillData","_buffers","createImageData","_lastUsedBuffer","getBuffer","backgroundA","MinimapSamplingState","compute","viewLineCount","oldSamplingState","minimapLineCount","EditorLayoutInfoComputer","computeContainedMinimapLineCount","halfRatio","minimapLines","lastIndex","oldMinimapLines","oldLength","oldIndex","oldDeltaLineCount","minViewLineNumber","events","lastEvent","fromViewLineNumber","toViewLineNumber","oldMinimapLineNumber","_oldIndex","selectedViewLineNumber","_i","samplingRatio","modelLineToMinimapLine","modelLineRangeToMinimapLineRange","fromLineNumber","toLineNumber","fromLineIndex","toLineIndex","sampledLineNumber","decorationLineRangeToMinimapLineRange","minimapLineStart","minimapLineEnd","deletedLineCount","changeStartIndex","changeEndIndex","insertedLineCount","Minimap","MinimapTokensColorTracker","getInstance","_minimapSelections","samplingState","_samplingState","_shouldCheckSampling","InnerMinimap","_recreateLineSampling","onDidChangeOptions","affectsMinimap","minimapLineRange","count","onTokensColorsChanged","minimapCtx","whitespaceViewportData","wasSampling","getRealLineCount","getLineContent","getMinimapLinesRenderingData","needed","getViewLineData","getSelections","getMinimapDecorationsInViewport","modelStartLineNumber","modelEndLineNumber","getMinimapDecorationsInRange","minimapStartLineNumber","minimapEndLineNumber","ViewModelDecoration","revealLineNumber","revealRange","_renderDecorations","_gestureInProgress","_theme","_model","_lastRenderData","_selectionColor","minimapSelection","_getMinimapDomNodeClassName","_shadow","_canvas","_decorationsCanvas","_slider","_sliderHorizontal","_applyLayout","_pointerDownListener","preventDefault","button","initialPosY","_startSliderDragging","internalOffsetY","offsetY","_sliderPointerMoveMonitor","_sliderPointerDownListener","stopPropagation","_gestureDisposable","Gesture","addTarget","_sliderTouchStartListener","EventType","Start","toggleClassName","scrollDueToTouchEvent","passive","_sliderTouchMoveListener","Change","_sliderTouchEndListener","End","initialSliderState","Element","initialPosX","pageX","handlePointerMove","minimapPosition","pointerOrthogonalDelta","pointerDelta","buttons","pointerMoveData","touch","startY","class_","_getBuffer","renderingCtx","renderDecorations","tabSize","canvasContext","clearRect","highlightedLines","ContiguousLineMap","_renderSelectionLineHighlights","_renderDecorationsLineHighlights","lineOffsetMap","_renderSelectionsHighlights","_renderDecorationsHighlights","y1","y2","intersection","line","yy1","yy2","fillRect","MINIMAP_GUTTER_WIDTH","highlightColors","minimapOptions","MinimapPosition","Inline","decorationColor","highlightColor","characterWidth","renderDecorationOnLine","Gutter","renderDecoration","decorationRange","x1","getXOffsetForPosition","x2","lineIndexToXOffset","lineData","prevx","charCode","charCodeAt","strings","_lastData","_dirtyY1","_dirtyY2","_renderUntouchedLines","lineInfo","defaultBackground","backgroundIsLight","renderMinimapLineHeight","innerLinePadding","renderBackground","renderedLines","_renderLine","dirtyY1","dirtyHeight","putImageData","lastRenderData","lastTargetData","lastStartLineNumber","lastLines","lastLinesLength","targetData","maxDestPixel","dirtyPixel1","dirtyPixel2","copySourceStart","copySourceEnd","copyDestStart","copyDestEnd","dest_dy","lastLineIndex","source_dy","sourceStart","sourceEnd","destStart","destEnd","subarray","colorTracker","minimapCharRenderer","content","tokens","maxDx","tabsCharDelta","tokenIndex","tokensLen","getCount","tokenEndIndex","getEndOffset","tokenColorId","getForeground","tokenColor","insertSpacesCount","defaultValue","_startLineNumber","_endLineNumber","_defaultValue","_values","ViewOverlayWidgets","_verticalScrollbarWidth","_minimapWidth","_horizontalScrollbarHeight","horizontalScrollbarHeight","_editorHeight","_editorWidth","_updateMaxMinWidth","widgetData","maxMinWidth","widgetMinWidthInPx","getMinContentWidthInPx","setOverlayWidgetsMinWidth","_renderWidget","setRight","widgetHeight","clientHeight","right","Settings","overviewRulerLanes","renderBorder","borderColor","editorOverviewRulerBorder","hideCursor","cursorColor","editorCursorForeground","themeType","minimapEnabled","minimapSide","editorOverviewRulerBackground","TokenizationRegistry","getDefaultBackground","overviewRuler","domWidth","domHeight","canvasWidth","canvasHeight","w","_initLanes","canvasLeftOffset","laneCount","remainingWidth","leftWidth","rightWidth","centerWidth","centerOffset","Color","DecorationsOverviewRuler","_actualShouldRender","_renderedDecorations","_renderedCursorPositions","_updateSettings","_tokensColorTrackerListener","onDidChange","changedColorMap","_cursorPositions","newSettings","_settings","_markRenderingIsNeeded","_markRenderingIsMaybeNeeded","compare","affectsOverviewRuler","scrollHeightChanged","editorCtx","setBackgroundColor","Format","CSS","formatHexA","getAllOverviewRulerDecorations","OverviewRulerDecorationsGroup","compareByRenderingProps","equalsArr","heightRatio","minDecorationHeight","halfMinDecorationHeight","canvasCtx","isOpaque","decorationGroup","decorationGroupData","prevLane","prevY1","prevY2","yCenter","cursorHeight","halfCursorHeight","cursorX","cursorW","cursor","beginPath","strokeStyle","moveTo","lineTo","stroke","OverviewRuler","ViewEventHandler","cssClassName","_zoneManager","OverviewZoneManager","setDOMWidth","setDOMHeight","setOuterHeight","setLineHeight","setPixelRatio","getDOMWidth","getDOMHeight","getCanvasWidth","getCanvasHeight","setLayout","setZones","zones","getOuterHeight","colorZones","resolveColorZones","id2Color","getId2Color","_renderOneLane","currentColorId","currentFrom","currentTo","zone","zoneColorId","colorId","zoneFrom","zoneTo","to","Rulers","_renderedRulers","_rulers","_ensureRulersCount","currentCount","desiredCount","rulerWidth","addCount","removeCount","ruler","setBoxShadow","ScrollDecorationViewPart","_scrollTop","_width","_updateWidth","_shouldShow","_useShadows","_updateShouldShow","newShouldShow","HorizontalRangeWithStyle","startStyle","endStyle","LineVisibleRangesWithStyle","toStyledRange","toStyled","SelectionsOverlay","_previousFrameVisibleRangesWithStyle","_roundedSelection","_visibleRangesHaveGaps","_enrichVisibleRangesWithStyle","previousFrame","epsilon","previousFrameTop","previousFrameBottom","topLineNumber","bottomLineNumber","curLineRange","curLeft","curRight","prevLeft","prevRight","nextLeft","nextRight","_getVisibleRangesWithStyle","_createSelectionPiece","_actualRenderOneSelection","output2","hasMultipleSelections","visibleRangesHaveStyle","fullLineHeight","reducedLineHeight","firstLineNumber","lastLineNumber","innerCornerOutput","restOfSelectionOutput","SELECTION_CLASS_NAME","ROUNDED_PIECE_WIDTH","EDITOR_BACKGROUND_CLASS_NAME","SELECTION_TOP_RIGHT","SELECTION_BOTTOM_RIGHT","SELECTION_TOP_LEFT","SELECTION_BOTTOM_LEFT","thisFrameVisibleRangesWithStyle","visibleRangesWithStyle","internalCorners","restOfSelection","n","editorSelectionForegroundColor","editorSelectionForeground","ViewCursorRenderData","paddingLeft","textContentClassName","ViewCursor","_cursorStyle","_lineCursorWidth","_position","_lastRenderedContent","show","hide","onCursorPositionChanged","pauseAnimation","transitionProperty","_getGraphemeAwarePosition","lineContent","startOffset","endOffset","substring","_prepareRender","nextGrapheme","TextEditorCursorStyle","Line","LineThin","_getTokenClassName","visibleRangeForCharacter","firstVisibleRangeForCharacter","Block","Underline","UnderlineThin","findTokenIndexAtOffset","getClassName","setPaddingLeft","ViewCursors","_readOnly","_cursorBlinking","_cursorSmoothCaretAnimation","_isComposingInput","_primaryCursor","_secondaryCursors","_updateDomClassName","_startCursorBlinkAnimation","TimeoutTimer","_cursorFlatBlinkInterval","_blinkingEnabled","_editorHasFocus","_updateBlinking","onCompositionStart","onCompositionEnd","_onCursorPositionChanged","secondaryPositions","reason","addCnt","newCursor","insertBefore","nextSibling","removeCnt","positions","secondaryCursor","_getCursorBlinking","blinkingStyle","isHidden","isSolid","_hide","_show","BLINK_INTERVAL","setIfNotSet","_getClassName","BlockOutline","renderDataLen","primaryRenderData","secondaryRenderData","getLastRenderData","caret","caretBackground","editorCursorBackground","opposite","invalidFunc","ViewZones","marginDomNode","_zones","_recomputeWhitespacesProps","whitespaces","getWhitespaces","oldWhitespaces","whitespace","hadAChange","changeWhitespace","whitespaceAccessor","props","_computeWhitespaceProps","delegate","isInHiddenArea","oldWhitespace","afterLineNumber","afterViewLineNumber","heightInPx","changeOneWhitespace","_safeCallOnComputedHeight","_getZoneOrdinal","ordinal","afterColumn","_heightInPixels","minWidthInPx","_minWidthInPixels","zoneAfterModelPosition","zoneBeforeModelPosition","validAfterLineNumber","afterColumnAffinity","isVisible","showInHiddenAreas","changeViewZones","zonesHaveChanged","changeAccessor","addZone","_addZone","removeZone","_removeZone","layoutZone","_layoutZone","func","arg1","onUnexpectedError","safeInvoke1Arg","myZone","whitespaceId","insertWhitespace","removeWhitespace","shouldSuppressMouseDownOnViewZone","heightInLines","onComputedHeight","_safeCallOnDomNodeTop","onDomNodeTop","visibleWhitespaces","visibleZones","hasVisibleZone","visibleWhitespace","newTop","newHeight","newDisplay","verticalOffset","getScrolledTopFromAbsoluteTop","BlockDecorations","blocks","update","didChange","newContentWidth","newContentLeft","blockClassName","block","blockIsAfterEnd","getVerticalOffsetAfterLineNumber","blockDoesNotCollapse","paddingRight","blockPadding","WhitespaceOverlay","_options","WhitespaceOptions","_selection","newOptions","renderWhitespace","selectionsOnLine","maxColumn","_applyRenderWhitespace","continuesWithWrappedLine","editorWhitespaces","USE_SVG","renderWithSVG","stopRenderingLineAfter","fauxIndentLength","onlyBoundary","onlyTrailing","middotWidth","wsmiddotWidth","renderSpaceCharCode","canUseHalfwidthRightwardsArrow","lastNonWhitespaceIndex","lineIsEmptyOrWhitespace","firstNonWhitespaceIndex","currentSelectionIndex","currentSelection","maxLeft","prevChCode","nextChCode","prevCharCode","_renderArrow","toFixed","p1","p2","p3","p4","p5","parts","p","experimentalWhitespaceRendering","View","commandDelegate","colorTheme","userInputEvents","overflowWidgetsDomNode","_instantiationService","_shouldRecomputeGlyphMarginLanes","_renderAnimationFrame","viewController","ViewController","ViewContext","_viewParts","_textAreaHandler","createInstance","TextAreaHandler","_createTextAreaHandlerHelper","_getEditorClassName","_overflowGuardContainer","_scrollbar","_viewLines","_viewZones","decorationsOverviewRuler","scrollDecoration","contentViewOverlays","ContentViewOverlays","addDynamicOverlay","marginViewOverlays","MarginViewOverlays","LineNumbersOverlay","_glyphMarginWidgets","margin","Margin","_contentWidgets","_viewCursors","_overlayWidgets","rulers","blockOutline","overviewRulerData","parent","textArea","textAreaCover","_pointerHandler","PointerHandler","_createPointerHandlerHelper","_flushAccumulatedAndRenderNow","setGlyphMarginDecorationLaneCount","_computeGlyphMarginLaneCount","inputLatency","onRenderStart","_renderNow","glyphs","getAllMarginDecorations","GlyphMarginLane","Left","validateRange","leftDecRange","rightDecRange","compareRangesUsingEnds","Right","linesContentDomNode","viewLinesDomNode","focusTextArea","focus","dispatchTextAreaEvent","dispatchEvent","lastViewCursorsRenderData","lastTextareaPosition","PointerHandlerLastRenderData","viewZoneId","focused","handleEvents","_scheduleRender","affectsGlyphMargin","viewPart","_onRenderScheduled","bind","safeInvokeNoArg","_actualRender","_getViewPartsToRender","viewPartsToRender","partialViewportData","getLinesViewportData","setViewport","centeredLineNumber","ViewportData","getWhitespaceViewportData","renderingContext","RenderingContext","restoreState","scrollPosition","visibleLinesStabilized","getOffsetForColumn","modelLineNumber","modelColumn","getTargetAtClientPoint","mouseTarget","ViewUserInputEvents","convertViewToModelMouseTarget","createOverviewRuler","change","now","everything","forceShouldRender","writeScreenReaderContent","setAriaOptions","addContentWidget","layoutContentWidget","_e","_f","_g","_h","secondaryPosition","positionAffinity","removeContentWidget","addOverlayWidget","layoutOverlayWidget","newPreference","removeOverlayWidget","addGlyphMarginWidget","layoutGlyphMarginWidget","removeGlyphMarginWidget","ttPolicy","createTrustedTypesPolicy","createHTML","DOMLineBreaksComputerFactory","createLineBreaksComputer","wrappingIndent","wordBreak","injectedTexts","addRequest","lineText","injectedText","previousLineBreakData","finalize","firstLineBreakColumn","injectedTextsPerLine","createEmptyLineBreakWithPossiblyInjectedText","requestIdx","LineInjectedText","applyInjectedText","injectionOptions","t","injectionOffsets","text","ModelLineProjectionData","overallWidth","additionalIndent","additionalIndentSize","additionalIndentLength","containerDomNode","sb","StringBuilder","firstNonWhitespaceIndices","wrappedTextIndentLengths","renderLineContents","allCharOffsets","allVisibleColumns","wrappedTextIndentLength","indentWidth","renderLineContent","substr","renderLine","html","build","trustedhtml","innerHTML","overflowWrap","createRange","lineDomNodes","children","breakOffsets","readLineBreaks","visibleColumns","breakOffsetsVisibleColumn","curInjectedTexts","createLineBreaks","initialVisibleColumn","wrappingIndentLength","hangingOffset","appendString","charOffset","charOffsets","nextCharCode","producedCharacters","space","appendCharCode","appendASCIICharCode","lineDomNode","spans","discoverBreaks","log","low","lowRects","high","highRects","mid","midRects","setStart","firstChild","setEnd","getClientRects","_readConfig","_lastCursorModelPosition","_activeLineNumber","lineNumbers","_renderLineNumbers","renderType","_renderCustomLineNumbers","renderFn","_renderFinalNewline","_lineNumbersLeft","lineNumbersLeft","_lineNumbersWidth","lineNumbersWidth","primaryViewPosition","_getLineRenderLineNumber","viewLineNumber","diff","lineHeightClassName","renderLineNumber","extraClassName","getLineLength","editorLineNumbersColor","editorLineNumbers","editorDimmedLineNumberColor","editorDimmedLineNumber","RangeUtil","_createRange","_handyReadyRange","_detachRange","selectNodeContents","_readClientRects","startElement","endElement","_mergeAdjacentRanges","FloatHorizontalRange","prev","_createHorizontalRangesFromClientRects","clientRects","readHorizontalRanges","startChildIndex","endChildIndex","canUseFastRenderedViewLine","browser","renderControlCharacters","useMonospaceOptimizations","isMonospace","fontLigatures","_isMaybeInvalid","_renderedViewLine","setDomNode","getViewLineRenderingData","actualInlineDecorations","LineDecoration","inlineDecorations","renderLineInput","RenderLineInput","isBasicASCII","containsRTL","startVisibleColumn","EditorFontLigatures","OFF","renderViewLine","renderedViewLine","containsForeignElements","FastRenderedViewLine","characterMapping","createRenderedLine","layoutLine","toSlowRenderedLine","VisibleRanges","horizontalRanges","_cachedWidth","keyColumnCount","_keyColumnPixelOffsetCache","Float32Array","_characterMapping","_charWidth","horizontalOffset","getHorizontalOffset","_getReadingTarget","expectedWidth","actualWidth","startPosition","_getColumnPixelOffset","endPosition","keyColumnOrdinal","keyColumn","keyColumnPixelOffset","_actualReadPixelOffset","keyColumnHorizontalOffset","myDomNode","domPosition","getDomPosition","partIndex","RenderedViewLine","_isWhitespaceOnly","test","_containsForeignElements","_pixelOffsetCache","_readPixelOffset","_readVisibleRangesForRange","pixelOffset","_readRawVisibleRangesForRange","readingTarget","cachedPixelOffset","expectedResult","startDomPosition","endDomPosition","WebKitRenderedViewLine","endPixelOffset","lastRange","createWebKitRenderedLine","createNormalRenderedLine","spanNodeTextContentLength","spanIndex","previousSibling","getColumn","DomPosition","OUTER_CLASS_NAME","_glyphMarginBackgroundDomNode"],"sourceRoot":""}