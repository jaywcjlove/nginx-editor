{"version":3,"file":"static/js/monaco-editor-vendor.b7318971.3cb83256.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/platform/accessibility/browser/accessibilityService.js","../node_modules/monaco-editor/esm/vs/platform/accessibility/common/accessibility.js","../node_modules/monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js","../node_modules/monaco-editor/esm/vs/platform/actions/common/actions.js","../node_modules/monaco-editor/esm/vs/platform/actions/common/menuService.js","../node_modules/monaco-editor/esm/vs/platform/clipboard/browser/clipboardService.js","../node_modules/monaco-editor/esm/vs/platform/clipboard/common/clipboardService.js","../node_modules/monaco-editor/esm/vs/platform/commands/common/commands.js","../node_modules/monaco-editor/esm/vs/platform/configuration/common/configuration.js","../node_modules/monaco-editor/esm/vs/platform/configuration/common/configurationModels.js","../node_modules/monaco-editor/esm/vs/platform/configuration/common/configurationRegistry.js","../node_modules/monaco-editor/esm/vs/platform/contextkey/browser/contextKeyService.js","../node_modules/monaco-editor/esm/vs/platform/contextkey/common/contextkey.js","../node_modules/monaco-editor/esm/vs/platform/contextkey/common/contextkeys.js","../node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextMenuHandler.js","../node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextMenuService.js","../node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextView.js","../node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextViewService.js"],"sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { CONTEXT_ACCESSIBILITY_MODE_ENABLED } from '../common/accessibility.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nlet AccessibilityService = class AccessibilityService extends Disposable {\n    constructor(_contextKeyService, _configurationService) {\n        super();\n        this._contextKeyService = _contextKeyService;\n        this._configurationService = _configurationService;\n        this._accessibilitySupport = 0 /* Unknown */;\n        this._onDidChangeScreenReaderOptimized = new Emitter();\n        this._accessibilityModeEnabledContext = CONTEXT_ACCESSIBILITY_MODE_ENABLED.bindTo(this._contextKeyService);\n        const updateContextKey = () => this._accessibilityModeEnabledContext.set(this.isScreenReaderOptimized());\n        this._register(this._configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('editor.accessibilitySupport')) {\n                updateContextKey();\n                this._onDidChangeScreenReaderOptimized.fire();\n            }\n        }));\n        updateContextKey();\n        this.onDidChangeScreenReaderOptimized(() => updateContextKey());\n    }\n    get onDidChangeScreenReaderOptimized() {\n        return this._onDidChangeScreenReaderOptimized.event;\n    }\n    isScreenReaderOptimized() {\n        const config = this._configurationService.getValue('editor.accessibilitySupport');\n        return config === 'on' || (config === 'auto' && this._accessibilitySupport === 2 /* Enabled */);\n    }\n    getAccessibilitySupport() {\n        return this._accessibilitySupport;\n    }\n};\nAccessibilityService = __decorate([\n    __param(0, IContextKeyService),\n    __param(1, IConfigurationService)\n], AccessibilityService);\nexport { AccessibilityService };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IAccessibilityService = createDecorator('accessibilityService');\nexport const CONTEXT_ACCESSIBILITY_MODE_ENABLED = new RawContextKey('accessibilityModeEnabled', false);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { $, addDisposableListener, append, asCSSUrl, EventType, ModifierKeyEmitter, prepend } from '../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { ActionViewItem, BaseActionViewItem } from '../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { DropdownMenuActionViewItem } from '../../../base/browser/ui/dropdown/dropdownActionViewItem.js';\nimport { ActionRunner, Separator, SubmenuAction } from '../../../base/common/actions.js';\nimport { UILabelProvider } from '../../../base/common/keybindingLabels.js';\nimport { DisposableStore, MutableDisposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { isLinux, isWindows, OS } from '../../../base/common/platform.js';\nimport './menuEntryActionViewItem.css';\nimport { localize } from '../../../nls.js';\nimport { IMenuService, MenuItemAction, SubmenuItemAction } from '../common/actions.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { INotificationService } from '../../notification/common/notification.js';\nimport { IStorageService } from '../../storage/common/storage.js';\nimport { ThemeIcon } from '../../theme/common/themeService.js';\nexport function createAndFillInActionBarActions(menu, options, target, primaryGroup, primaryMaxCount, shouldInlineSubmenu, useSeparatorsInPrimaryActions) {\n    const groups = menu.getActions(options);\n    const isPrimaryAction = typeof primaryGroup === 'string' ? (actionGroup) => actionGroup === primaryGroup : primaryGroup;\n    // Action bars handle alternative actions on their own so the alternative actions should be ignored\n    fillInActions(groups, target, false, isPrimaryAction, primaryMaxCount, shouldInlineSubmenu, useSeparatorsInPrimaryActions);\n    return asDisposable(groups);\n}\nfunction asDisposable(groups) {\n    const disposables = new DisposableStore();\n    for (const [, actions] of groups) {\n        for (const action of actions) {\n            disposables.add(action);\n        }\n    }\n    return disposables;\n}\nfunction fillInActions(groups, target, useAlternativeActions, isPrimaryAction = actionGroup => actionGroup === 'navigation', primaryMaxCount = Number.MAX_SAFE_INTEGER, shouldInlineSubmenu = () => false, useSeparatorsInPrimaryActions = false) {\n    let primaryBucket;\n    let secondaryBucket;\n    if (Array.isArray(target)) {\n        primaryBucket = target;\n        secondaryBucket = target;\n    }\n    else {\n        primaryBucket = target.primary;\n        secondaryBucket = target.secondary;\n    }\n    const submenuInfo = new Set();\n    for (const [group, actions] of groups) {\n        let target;\n        if (isPrimaryAction(group)) {\n            target = primaryBucket;\n            if (target.length > 0 && useSeparatorsInPrimaryActions) {\n                target.push(new Separator());\n            }\n        }\n        else {\n            target = secondaryBucket;\n            if (target.length > 0) {\n                target.push(new Separator());\n            }\n        }\n        for (let action of actions) {\n            if (useAlternativeActions) {\n                action = action instanceof MenuItemAction && action.alt ? action.alt : action;\n            }\n            const newLen = target.push(action);\n            // keep submenu info for later inlining\n            if (action instanceof SubmenuAction) {\n                submenuInfo.add({ group, action, index: newLen - 1 });\n            }\n        }\n    }\n    // ask the outside if submenu should be inlined or not. only ask when\n    // there would be enough space\n    for (const { group, action, index } of submenuInfo) {\n        const target = isPrimaryAction(group) ? primaryBucket : secondaryBucket;\n        // inlining submenus with length 0 or 1 is easy,\n        // larger submenus need to be checked with the overall limit\n        const submenuActions = action.actions;\n        if ((submenuActions.length <= 1 || target.length + submenuActions.length - 2 <= primaryMaxCount) && shouldInlineSubmenu(action, group, target.length)) {\n            target.splice(index, 1, ...submenuActions);\n        }\n    }\n    // overflow items from the primary group into the secondary bucket\n    if (primaryBucket !== secondaryBucket && primaryBucket.length > primaryMaxCount) {\n        const overflow = primaryBucket.splice(primaryMaxCount, primaryBucket.length - primaryMaxCount);\n        secondaryBucket.unshift(...overflow, new Separator());\n    }\n}\nlet MenuEntryActionViewItem = class MenuEntryActionViewItem extends ActionViewItem {\n    constructor(_action, options, _keybindingService, _notificationService, _contextKeyService) {\n        super(undefined, _action, { icon: !!(_action.class || _action.item.icon), label: !_action.class && !_action.item.icon, draggable: options === null || options === void 0 ? void 0 : options.draggable });\n        this._keybindingService = _keybindingService;\n        this._notificationService = _notificationService;\n        this._contextKeyService = _contextKeyService;\n        this._wantsAltCommand = false;\n        this._itemClassDispose = this._register(new MutableDisposable());\n        this._altKey = ModifierKeyEmitter.getInstance();\n    }\n    get _menuItemAction() {\n        return this._action;\n    }\n    get _commandAction() {\n        return this._wantsAltCommand && this._menuItemAction.alt || this._menuItemAction;\n    }\n    onClick(event) {\n        return __awaiter(this, void 0, void 0, function* () {\n            event.preventDefault();\n            event.stopPropagation();\n            try {\n                yield this.actionRunner.run(this._commandAction, this._context);\n            }\n            catch (err) {\n                this._notificationService.error(err);\n            }\n        });\n    }\n    render(container) {\n        super.render(container);\n        container.classList.add('menu-entry');\n        this._updateItemClass(this._menuItemAction.item);\n        let mouseOver = false;\n        let alternativeKeyDown = this._altKey.keyStatus.altKey || ((isWindows || isLinux) && this._altKey.keyStatus.shiftKey);\n        const updateAltState = () => {\n            const wantsAltCommand = mouseOver && alternativeKeyDown;\n            if (wantsAltCommand !== this._wantsAltCommand) {\n                this._wantsAltCommand = wantsAltCommand;\n                this.updateLabel();\n                this.updateTooltip();\n                this.updateClass();\n            }\n        };\n        if (this._menuItemAction.alt) {\n            this._register(this._altKey.event(value => {\n                alternativeKeyDown = value.altKey || ((isWindows || isLinux) && value.shiftKey);\n                updateAltState();\n            }));\n        }\n        this._register(addDisposableListener(container, 'mouseleave', _ => {\n            mouseOver = false;\n            updateAltState();\n        }));\n        this._register(addDisposableListener(container, 'mouseenter', _ => {\n            mouseOver = true;\n            updateAltState();\n        }));\n    }\n    updateLabel() {\n        if (this.options.label && this.label) {\n            this.label.textContent = this._commandAction.label;\n        }\n    }\n    updateTooltip() {\n        if (this.label) {\n            const keybinding = this._keybindingService.lookupKeybinding(this._commandAction.id, this._contextKeyService);\n            const keybindingLabel = keybinding && keybinding.getLabel();\n            const tooltip = this._commandAction.tooltip || this._commandAction.label;\n            let title = keybindingLabel\n                ? localize('titleAndKb', \"{0} ({1})\", tooltip, keybindingLabel)\n                : tooltip;\n            if (!this._wantsAltCommand && this._menuItemAction.alt) {\n                const altTooltip = this._menuItemAction.alt.tooltip || this._menuItemAction.alt.label;\n                const altKeybinding = this._keybindingService.lookupKeybinding(this._menuItemAction.alt.id, this._contextKeyService);\n                const altKeybindingLabel = altKeybinding && altKeybinding.getLabel();\n                const altTitleSection = altKeybindingLabel\n                    ? localize('titleAndKb', \"{0} ({1})\", altTooltip, altKeybindingLabel)\n                    : altTooltip;\n                title += `\\n[${UILabelProvider.modifierLabels[OS].altKey}] ${altTitleSection}`;\n            }\n            this.label.title = title;\n        }\n    }\n    updateClass() {\n        if (this.options.icon) {\n            if (this._commandAction !== this._menuItemAction) {\n                if (this._menuItemAction.alt) {\n                    this._updateItemClass(this._menuItemAction.alt.item);\n                }\n            }\n            else if (this._menuItemAction.alt) {\n                this._updateItemClass(this._menuItemAction.item);\n            }\n        }\n    }\n    _updateItemClass(item) {\n        var _a;\n        this._itemClassDispose.value = undefined;\n        const { element, label } = this;\n        if (!element || !label) {\n            return;\n        }\n        const icon = this._commandAction.checked && ((_a = item.toggled) === null || _a === void 0 ? void 0 : _a.icon) ? item.toggled.icon : item.icon;\n        if (!icon) {\n            return;\n        }\n        if (ThemeIcon.isThemeIcon(icon)) {\n            // theme icons\n            const iconClasses = ThemeIcon.asClassNameArray(icon);\n            label.classList.add(...iconClasses);\n            this._itemClassDispose.value = toDisposable(() => {\n                label.classList.remove(...iconClasses);\n            });\n        }\n        else {\n            // icon path/url\n            if (icon.light) {\n                label.style.setProperty('--menu-entry-icon-light', asCSSUrl(icon.light));\n            }\n            if (icon.dark) {\n                label.style.setProperty('--menu-entry-icon-dark', asCSSUrl(icon.dark));\n            }\n            label.classList.add('icon');\n            this._itemClassDispose.value = toDisposable(() => {\n                label.classList.remove('icon');\n                label.style.removeProperty('--menu-entry-icon-light');\n                label.style.removeProperty('--menu-entry-icon-dark');\n            });\n        }\n    }\n};\nMenuEntryActionViewItem = __decorate([\n    __param(2, IKeybindingService),\n    __param(3, INotificationService),\n    __param(4, IContextKeyService)\n], MenuEntryActionViewItem);\nexport { MenuEntryActionViewItem };\nlet SubmenuEntryActionViewItem = class SubmenuEntryActionViewItem extends DropdownMenuActionViewItem {\n    constructor(action, options, contextMenuService) {\n        var _a, _b;\n        const dropdownOptions = Object.assign({}, options !== null && options !== void 0 ? options : Object.create(null), {\n            menuAsChild: (_a = options === null || options === void 0 ? void 0 : options.menuAsChild) !== null && _a !== void 0 ? _a : false,\n            classNames: (_b = options === null || options === void 0 ? void 0 : options.classNames) !== null && _b !== void 0 ? _b : (ThemeIcon.isThemeIcon(action.item.icon) ? ThemeIcon.asClassName(action.item.icon) : undefined),\n        });\n        super(action, { getActions: () => action.actions }, contextMenuService, dropdownOptions);\n    }\n    render(container) {\n        super.render(container);\n        if (this.element) {\n            container.classList.add('menu-entry');\n            const { icon } = this._action.item;\n            if (icon && !ThemeIcon.isThemeIcon(icon)) {\n                this.element.classList.add('icon');\n                if (icon.light) {\n                    this.element.style.setProperty('--menu-entry-icon-light', asCSSUrl(icon.light));\n                }\n                if (icon.dark) {\n                    this.element.style.setProperty('--menu-entry-icon-dark', asCSSUrl(icon.dark));\n                }\n            }\n        }\n    }\n};\nSubmenuEntryActionViewItem = __decorate([\n    __param(2, IContextMenuService)\n], SubmenuEntryActionViewItem);\nexport { SubmenuEntryActionViewItem };\nlet DropdownWithDefaultActionViewItem = class DropdownWithDefaultActionViewItem extends BaseActionViewItem {\n    constructor(submenuAction, options, _keybindingService, _notificationService, _contextMenuService, _menuService, _instaService, _storageService) {\n        var _a, _b, _c;\n        super(null, submenuAction);\n        this._keybindingService = _keybindingService;\n        this._notificationService = _notificationService;\n        this._contextMenuService = _contextMenuService;\n        this._menuService = _menuService;\n        this._instaService = _instaService;\n        this._storageService = _storageService;\n        this._container = null;\n        this._storageKey = `${submenuAction.item.submenu._debugName}_lastActionId`;\n        // determine default action\n        let defaultAction;\n        let defaultActionId = _storageService.get(this._storageKey, 1 /* WORKSPACE */);\n        if (defaultActionId) {\n            defaultAction = submenuAction.actions.find(a => defaultActionId === a.id);\n        }\n        if (!defaultAction) {\n            defaultAction = submenuAction.actions[0];\n        }\n        this._defaultAction = this._instaService.createInstance(MenuEntryActionViewItem, defaultAction, undefined);\n        const dropdownOptions = Object.assign({}, options !== null && options !== void 0 ? options : Object.create(null), {\n            menuAsChild: (_a = options === null || options === void 0 ? void 0 : options.menuAsChild) !== null && _a !== void 0 ? _a : true,\n            classNames: (_b = options === null || options === void 0 ? void 0 : options.classNames) !== null && _b !== void 0 ? _b : ['codicon', 'codicon-chevron-down'],\n            actionRunner: (_c = options === null || options === void 0 ? void 0 : options.actionRunner) !== null && _c !== void 0 ? _c : new ActionRunner()\n        });\n        this._dropdown = new DropdownMenuActionViewItem(submenuAction, submenuAction.actions, this._contextMenuService, dropdownOptions);\n        this._dropdown.actionRunner.onDidRun((e) => {\n            if (e.action instanceof MenuItemAction) {\n                this.update(e.action);\n            }\n        });\n    }\n    update(lastAction) {\n        this._storageService.store(this._storageKey, lastAction.id, 1 /* WORKSPACE */, 0 /* USER */);\n        this._defaultAction.dispose();\n        this._defaultAction = this._instaService.createInstance(MenuEntryActionViewItem, lastAction, undefined);\n        this._defaultAction.actionRunner = new class extends ActionRunner {\n            runAction(action, context) {\n                return __awaiter(this, void 0, void 0, function* () {\n                    yield action.run(undefined);\n                });\n            }\n        }();\n        if (this._container) {\n            this._defaultAction.render(prepend(this._container, $('.action-container')));\n        }\n    }\n    setActionContext(newContext) {\n        super.setActionContext(newContext);\n        this._defaultAction.setActionContext(newContext);\n        this._dropdown.setActionContext(newContext);\n    }\n    render(container) {\n        this._container = container;\n        super.render(this._container);\n        this._container.classList.add('monaco-dropdown-with-default');\n        const primaryContainer = $('.action-container');\n        this._defaultAction.render(append(this._container, primaryContainer));\n        this._register(addDisposableListener(primaryContainer, EventType.KEY_DOWN, (e) => {\n            const event = new StandardKeyboardEvent(e);\n            if (event.equals(17 /* RightArrow */)) {\n                this._defaultAction.element.tabIndex = -1;\n                this._dropdown.focus();\n                event.stopPropagation();\n            }\n        }));\n        const dropdownContainer = $('.dropdown-action-container');\n        this._dropdown.render(append(this._container, dropdownContainer));\n        this._register(addDisposableListener(dropdownContainer, EventType.KEY_DOWN, (e) => {\n            var _a;\n            const event = new StandardKeyboardEvent(e);\n            if (event.equals(15 /* LeftArrow */)) {\n                this._defaultAction.element.tabIndex = 0;\n                this._dropdown.setFocusable(false);\n                (_a = this._defaultAction.element) === null || _a === void 0 ? void 0 : _a.focus();\n                event.stopPropagation();\n            }\n        }));\n    }\n    focus(fromRight) {\n        if (fromRight) {\n            this._dropdown.focus();\n        }\n        else {\n            this._defaultAction.element.tabIndex = 0;\n            this._defaultAction.element.focus();\n        }\n    }\n    blur() {\n        this._defaultAction.element.tabIndex = -1;\n        this._dropdown.blur();\n        this._container.blur();\n    }\n    setFocusable(focusable) {\n        if (focusable) {\n            this._defaultAction.element.tabIndex = 0;\n        }\n        else {\n            this._defaultAction.element.tabIndex = -1;\n            this._dropdown.setFocusable(false);\n        }\n    }\n    dispose() {\n        this._defaultAction.dispose();\n        this._dropdown.dispose();\n        super.dispose();\n    }\n};\nDropdownWithDefaultActionViewItem = __decorate([\n    __param(2, IKeybindingService),\n    __param(3, INotificationService),\n    __param(4, IContextMenuService),\n    __param(5, IMenuService),\n    __param(6, IInstantiationService),\n    __param(7, IStorageService)\n], DropdownWithDefaultActionViewItem);\n/**\n * Creates action view items for menu actions or submenu actions.\n */\nexport function createActionViewItem(instaService, action, options) {\n    if (action instanceof MenuItemAction) {\n        return instaService.createInstance(MenuEntryActionViewItem, action, undefined);\n    }\n    else if (action instanceof SubmenuItemAction) {\n        if (action.item.rememberDefaultAction) {\n            return instaService.createInstance(DropdownWithDefaultActionViewItem, action, options);\n        }\n        else {\n            return instaService.createInstance(SubmenuEntryActionViewItem, action, options);\n        }\n    }\n    else {\n        return undefined;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Separator, SubmenuAction } from '../../../base/common/actions.js';\nimport { CSSIcon } from '../../../base/common/codicons.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { ICommandService } from '../../commands/common/commands.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { ThemeIcon } from '../../theme/common/themeService.js';\nexport function isIMenuItem(item) {\n    return item.command !== undefined;\n}\nexport class MenuId {\n    constructor(debugName) {\n        this.id = MenuId._idPool++;\n        this._debugName = debugName;\n    }\n}\nMenuId._idPool = 0;\nMenuId.CommandPalette = new MenuId('CommandPalette');\nMenuId.DebugBreakpointsContext = new MenuId('DebugBreakpointsContext');\nMenuId.DebugCallStackContext = new MenuId('DebugCallStackContext');\nMenuId.DebugConsoleContext = new MenuId('DebugConsoleContext');\nMenuId.DebugVariablesContext = new MenuId('DebugVariablesContext');\nMenuId.DebugWatchContext = new MenuId('DebugWatchContext');\nMenuId.DebugToolBar = new MenuId('DebugToolBar');\nMenuId.EditorContext = new MenuId('EditorContext');\nMenuId.SimpleEditorContext = new MenuId('SimpleEditorContext');\nMenuId.EditorContextCopy = new MenuId('EditorContextCopy');\nMenuId.EditorContextPeek = new MenuId('EditorContextPeek');\nMenuId.EditorTitle = new MenuId('EditorTitle');\nMenuId.EditorTitleRun = new MenuId('EditorTitleRun');\nMenuId.EditorTitleContext = new MenuId('EditorTitleContext');\nMenuId.EmptyEditorGroup = new MenuId('EmptyEditorGroup');\nMenuId.EmptyEditorGroupContext = new MenuId('EmptyEditorGroupContext');\nMenuId.ExplorerContext = new MenuId('ExplorerContext');\nMenuId.ExtensionContext = new MenuId('ExtensionContext');\nMenuId.GlobalActivity = new MenuId('GlobalActivity');\nMenuId.LayoutControlMenuSubmenu = new MenuId('LayoutControlMenuSubmenu');\nMenuId.LayoutControlMenu = new MenuId('LayoutControlMenu');\nMenuId.MenubarMainMenu = new MenuId('MenubarMainMenu');\nMenuId.MenubarAppearanceMenu = new MenuId('MenubarAppearanceMenu');\nMenuId.MenubarDebugMenu = new MenuId('MenubarDebugMenu');\nMenuId.MenubarEditMenu = new MenuId('MenubarEditMenu');\nMenuId.MenubarCopy = new MenuId('MenubarCopy');\nMenuId.MenubarFileMenu = new MenuId('MenubarFileMenu');\nMenuId.MenubarGoMenu = new MenuId('MenubarGoMenu');\nMenuId.MenubarHelpMenu = new MenuId('MenubarHelpMenu');\nMenuId.MenubarLayoutMenu = new MenuId('MenubarLayoutMenu');\nMenuId.MenubarNewBreakpointMenu = new MenuId('MenubarNewBreakpointMenu');\nMenuId.MenubarPanelAlignmentMenu = new MenuId('MenubarPanelAlignmentMenu');\nMenuId.MenubarPanelPositionMenu = new MenuId('MenubarPanelPositionMenu');\nMenuId.MenubarPreferencesMenu = new MenuId('MenubarPreferencesMenu');\nMenuId.MenubarRecentMenu = new MenuId('MenubarRecentMenu');\nMenuId.MenubarSelectionMenu = new MenuId('MenubarSelectionMenu');\nMenuId.MenubarSwitchEditorMenu = new MenuId('MenubarSwitchEditorMenu');\nMenuId.MenubarSwitchGroupMenu = new MenuId('MenubarSwitchGroupMenu');\nMenuId.MenubarTerminalMenu = new MenuId('MenubarTerminalMenu');\nMenuId.MenubarViewMenu = new MenuId('MenubarViewMenu');\nMenuId.MenubarHomeMenu = new MenuId('MenubarHomeMenu');\nMenuId.OpenEditorsContext = new MenuId('OpenEditorsContext');\nMenuId.ProblemsPanelContext = new MenuId('ProblemsPanelContext');\nMenuId.SCMChangeContext = new MenuId('SCMChangeContext');\nMenuId.SCMResourceContext = new MenuId('SCMResourceContext');\nMenuId.SCMResourceFolderContext = new MenuId('SCMResourceFolderContext');\nMenuId.SCMResourceGroupContext = new MenuId('SCMResourceGroupContext');\nMenuId.SCMSourceControl = new MenuId('SCMSourceControl');\nMenuId.SCMTitle = new MenuId('SCMTitle');\nMenuId.SearchContext = new MenuId('SearchContext');\nMenuId.StatusBarWindowIndicatorMenu = new MenuId('StatusBarWindowIndicatorMenu');\nMenuId.StatusBarRemoteIndicatorMenu = new MenuId('StatusBarRemoteIndicatorMenu');\nMenuId.TestItem = new MenuId('TestItem');\nMenuId.TestItemGutter = new MenuId('TestItemGutter');\nMenuId.TestPeekElement = new MenuId('TestPeekElement');\nMenuId.TestPeekTitle = new MenuId('TestPeekTitle');\nMenuId.TouchBarContext = new MenuId('TouchBarContext');\nMenuId.TitleBarContext = new MenuId('TitleBarContext');\nMenuId.TunnelContext = new MenuId('TunnelContext');\nMenuId.TunnelPrivacy = new MenuId('TunnelPrivacy');\nMenuId.TunnelProtocol = new MenuId('TunnelProtocol');\nMenuId.TunnelPortInline = new MenuId('TunnelInline');\nMenuId.TunnelTitle = new MenuId('TunnelTitle');\nMenuId.TunnelLocalAddressInline = new MenuId('TunnelLocalAddressInline');\nMenuId.TunnelOriginInline = new MenuId('TunnelOriginInline');\nMenuId.ViewItemContext = new MenuId('ViewItemContext');\nMenuId.ViewContainerTitle = new MenuId('ViewContainerTitle');\nMenuId.ViewContainerTitleContext = new MenuId('ViewContainerTitleContext');\nMenuId.ViewTitle = new MenuId('ViewTitle');\nMenuId.ViewTitleContext = new MenuId('ViewTitleContext');\nMenuId.CommentThreadTitle = new MenuId('CommentThreadTitle');\nMenuId.CommentThreadActions = new MenuId('CommentThreadActions');\nMenuId.CommentTitle = new MenuId('CommentTitle');\nMenuId.CommentActions = new MenuId('CommentActions');\nMenuId.InteractiveToolbar = new MenuId('InteractiveToolbar');\nMenuId.InteractiveCellTitle = new MenuId('InteractiveCellTitle');\nMenuId.InteractiveCellExecute = new MenuId('InteractiveCellExecute');\nMenuId.InteractiveInputExecute = new MenuId('InteractiveInputExecute');\nMenuId.NotebookToolbar = new MenuId('NotebookToolbar');\nMenuId.NotebookCellTitle = new MenuId('NotebookCellTitle');\nMenuId.NotebookCellInsert = new MenuId('NotebookCellInsert');\nMenuId.NotebookCellBetween = new MenuId('NotebookCellBetween');\nMenuId.NotebookCellListTop = new MenuId('NotebookCellTop');\nMenuId.NotebookCellExecute = new MenuId('NotebookCellExecute');\nMenuId.NotebookCellExecutePrimary = new MenuId('NotebookCellExecutePrimary');\nMenuId.NotebookDiffCellInputTitle = new MenuId('NotebookDiffCellInputTitle');\nMenuId.NotebookDiffCellMetadataTitle = new MenuId('NotebookDiffCellMetadataTitle');\nMenuId.NotebookDiffCellOutputsTitle = new MenuId('NotebookDiffCellOutputsTitle');\nMenuId.NotebookOutputToolbar = new MenuId('NotebookOutputToolbar');\nMenuId.NotebookEditorLayoutConfigure = new MenuId('NotebookEditorLayoutConfigure');\nMenuId.BulkEditTitle = new MenuId('BulkEditTitle');\nMenuId.BulkEditContext = new MenuId('BulkEditContext');\nMenuId.TimelineItemContext = new MenuId('TimelineItemContext');\nMenuId.TimelineTitle = new MenuId('TimelineTitle');\nMenuId.TimelineTitleContext = new MenuId('TimelineTitleContext');\nMenuId.AccountsContext = new MenuId('AccountsContext');\nMenuId.PanelTitle = new MenuId('PanelTitle');\nMenuId.AuxiliaryBarTitle = new MenuId('AuxiliaryBarTitle');\nMenuId.TerminalInstanceContext = new MenuId('TerminalInstanceContext');\nMenuId.TerminalEditorInstanceContext = new MenuId('TerminalEditorInstanceContext');\nMenuId.TerminalNewDropdownContext = new MenuId('TerminalNewDropdownContext');\nMenuId.TerminalTabContext = new MenuId('TerminalTabContext');\nMenuId.TerminalTabEmptyAreaContext = new MenuId('TerminalTabEmptyAreaContext');\nMenuId.TerminalInlineTabContext = new MenuId('TerminalInlineTabContext');\nMenuId.WebviewContext = new MenuId('WebviewContext');\nMenuId.InlineCompletionsActions = new MenuId('InlineCompletionsActions');\nMenuId.NewFile = new MenuId('NewFile');\nexport const IMenuService = createDecorator('menuService');\nexport const MenuRegistry = new class {\n    constructor() {\n        this._commands = new Map();\n        this._menuItems = new Map();\n        this._onDidChangeMenu = new Emitter();\n        this.onDidChangeMenu = this._onDidChangeMenu.event;\n        this._commandPaletteChangeEvent = {\n            has: id => id === MenuId.CommandPalette\n        };\n    }\n    addCommand(command) {\n        return this.addCommands(Iterable.single(command));\n    }\n    addCommands(commands) {\n        for (const command of commands) {\n            this._commands.set(command.id, command);\n        }\n        this._onDidChangeMenu.fire(this._commandPaletteChangeEvent);\n        return toDisposable(() => {\n            let didChange = false;\n            for (const command of commands) {\n                didChange = this._commands.delete(command.id) || didChange;\n            }\n            if (didChange) {\n                this._onDidChangeMenu.fire(this._commandPaletteChangeEvent);\n            }\n        });\n    }\n    getCommand(id) {\n        return this._commands.get(id);\n    }\n    getCommands() {\n        const map = new Map();\n        this._commands.forEach((value, key) => map.set(key, value));\n        return map;\n    }\n    appendMenuItem(id, item) {\n        return this.appendMenuItems(Iterable.single({ id, item }));\n    }\n    appendMenuItems(items) {\n        const changedIds = new Set();\n        const toRemove = new LinkedList();\n        for (const { id, item } of items) {\n            let list = this._menuItems.get(id);\n            if (!list) {\n                list = new LinkedList();\n                this._menuItems.set(id, list);\n            }\n            toRemove.push(list.push(item));\n            changedIds.add(id);\n        }\n        this._onDidChangeMenu.fire(changedIds);\n        return toDisposable(() => {\n            if (toRemove.size > 0) {\n                for (let fn of toRemove) {\n                    fn();\n                }\n                this._onDidChangeMenu.fire(changedIds);\n                toRemove.clear();\n            }\n        });\n    }\n    getMenuItems(id) {\n        let result;\n        if (this._menuItems.has(id)) {\n            result = [...this._menuItems.get(id)];\n        }\n        else {\n            result = [];\n        }\n        if (id === MenuId.CommandPalette) {\n            // CommandPalette is special because it shows\n            // all commands by default\n            this._appendImplicitItems(result);\n        }\n        return result;\n    }\n    _appendImplicitItems(result) {\n        const set = new Set();\n        for (const item of result) {\n            if (isIMenuItem(item)) {\n                set.add(item.command.id);\n                if (item.alt) {\n                    set.add(item.alt.id);\n                }\n            }\n        }\n        this._commands.forEach((command, id) => {\n            if (!set.has(id)) {\n                result.push({ command });\n            }\n        });\n    }\n};\nexport class SubmenuItemAction extends SubmenuAction {\n    constructor(item, _menuService, _contextKeyService, _options) {\n        super(`submenuitem.${item.submenu.id}`, typeof item.title === 'string' ? item.title : item.title.value, [], 'submenu');\n        this.item = item;\n        this._menuService = _menuService;\n        this._contextKeyService = _contextKeyService;\n        this._options = _options;\n    }\n    get actions() {\n        const result = [];\n        const menu = this._menuService.createMenu(this.item.submenu, this._contextKeyService);\n        const groups = menu.getActions(this._options);\n        menu.dispose();\n        for (const [, actions] of groups) {\n            if (actions.length > 0) {\n                result.push(...actions);\n                result.push(new Separator());\n            }\n        }\n        if (result.length) {\n            result.pop(); // remove last separator\n        }\n        return result;\n    }\n}\n// implements IAction, does NOT extend Action, so that no one\n// subscribes to events of Action or modified properties\nlet MenuItemAction = class MenuItemAction {\n    constructor(item, alt, options, contextKeyService, _commandService) {\n        var _a, _b;\n        this._commandService = _commandService;\n        this.id = item.id;\n        this.label = (options === null || options === void 0 ? void 0 : options.renderShortTitle) && item.shortTitle\n            ? (typeof item.shortTitle === 'string' ? item.shortTitle : item.shortTitle.value)\n            : (typeof item.title === 'string' ? item.title : item.title.value);\n        this.tooltip = (_b = (typeof item.tooltip === 'string' ? item.tooltip : (_a = item.tooltip) === null || _a === void 0 ? void 0 : _a.value)) !== null && _b !== void 0 ? _b : '';\n        this.enabled = !item.precondition || contextKeyService.contextMatchesRules(item.precondition);\n        this.checked = undefined;\n        if (item.toggled) {\n            const toggled = (item.toggled.condition ? item.toggled : { condition: item.toggled });\n            this.checked = contextKeyService.contextMatchesRules(toggled.condition);\n            if (this.checked && toggled.tooltip) {\n                this.tooltip = typeof toggled.tooltip === 'string' ? toggled.tooltip : toggled.tooltip.value;\n            }\n            if (toggled.title) {\n                this.label = typeof toggled.title === 'string' ? toggled.title : toggled.title.value;\n            }\n        }\n        this.item = item;\n        this.alt = alt ? new MenuItemAction(alt, undefined, options, contextKeyService, _commandService) : undefined;\n        this._options = options;\n        if (ThemeIcon.isThemeIcon(item.icon)) {\n            this.class = CSSIcon.asClassName(item.icon);\n        }\n    }\n    dispose() {\n        // there is NOTHING to dispose and the MenuItemAction should\n        // never have anything to dispose as it is a convenience type\n        // to bridge into the rendering world.\n    }\n    run(...args) {\n        var _a, _b;\n        let runArgs = [];\n        if ((_a = this._options) === null || _a === void 0 ? void 0 : _a.arg) {\n            runArgs = [...runArgs, this._options.arg];\n        }\n        if ((_b = this._options) === null || _b === void 0 ? void 0 : _b.shouldForwardArgs) {\n            runArgs = [...runArgs, ...args];\n        }\n        return this._commandService.executeCommand(this.id, ...runArgs);\n    }\n};\nMenuItemAction = __decorate([\n    __param(3, IContextKeyService),\n    __param(4, ICommandService)\n], MenuItemAction);\nexport { MenuItemAction };\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { IMenuService, isIMenuItem, MenuItemAction, MenuRegistry, SubmenuItemAction } from './actions.js';\nimport { ICommandService } from '../../commands/common/commands.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nlet MenuService = class MenuService {\n    constructor(_commandService) {\n        this._commandService = _commandService;\n        //\n    }\n    /**\n     * Create a new menu for the given menu identifier. A menu sends events when it's entries\n     * have changed (placement, enablement, checked-state). By default it does send events for\n     * sub menu entries. That is more expensive and must be explicitly enabled with the\n     * `emitEventsForSubmenuChanges` flag.\n     */\n    createMenu(id, contextKeyService, options) {\n        return new Menu(id, Object.assign({ emitEventsForSubmenuChanges: false, eventDebounceDelay: 50 }, options), this._commandService, contextKeyService, this);\n    }\n};\nMenuService = __decorate([\n    __param(0, ICommandService)\n], MenuService);\nexport { MenuService };\nlet Menu = class Menu {\n    constructor(_id, _options, _commandService, _contextKeyService, _menuService) {\n        this._id = _id;\n        this._options = _options;\n        this._commandService = _commandService;\n        this._contextKeyService = _contextKeyService;\n        this._menuService = _menuService;\n        this._disposables = new DisposableStore();\n        this._menuGroups = [];\n        this._contextKeys = new Set();\n        this._build();\n        // Rebuild this menu whenever the menu registry reports an event for this MenuId.\n        // This usually happen while code and extensions are loaded and affects the over\n        // structure of the menu\n        const rebuildMenuSoon = new RunOnceScheduler(() => {\n            this._build();\n            this._onDidChange.fire(this);\n        }, _options.eventDebounceDelay);\n        this._disposables.add(rebuildMenuSoon);\n        this._disposables.add(MenuRegistry.onDidChangeMenu(e => {\n            if (e.has(_id)) {\n                rebuildMenuSoon.schedule();\n            }\n        }));\n        // When context keys change we need to check if the menu also has changed. However,\n        // we only do that when someone listens on this menu because (1) context key events are\n        // firing often and (2) menu are often leaked\n        const contextKeyListener = this._disposables.add(new DisposableStore());\n        const startContextKeyListener = () => {\n            const fireChangeSoon = new RunOnceScheduler(() => this._onDidChange.fire(this), _options.eventDebounceDelay);\n            contextKeyListener.add(fireChangeSoon);\n            contextKeyListener.add(_contextKeyService.onDidChangeContext(e => {\n                if (e.affectsSome(this._contextKeys)) {\n                    fireChangeSoon.schedule();\n                }\n            }));\n        };\n        this._onDidChange = new Emitter({\n            // start/stop context key listener\n            onFirstListenerAdd: startContextKeyListener,\n            onLastListenerRemove: contextKeyListener.clear.bind(contextKeyListener)\n        });\n        this.onDidChange = this._onDidChange.event;\n    }\n    dispose() {\n        this._disposables.dispose();\n        this._onDidChange.dispose();\n    }\n    _build() {\n        // reset\n        this._menuGroups.length = 0;\n        this._contextKeys.clear();\n        const menuItems = MenuRegistry.getMenuItems(this._id);\n        let group;\n        menuItems.sort(Menu._compareMenuItems);\n        for (const item of menuItems) {\n            // group by groupId\n            const groupName = item.group || '';\n            if (!group || group[0] !== groupName) {\n                group = [groupName, []];\n                this._menuGroups.push(group);\n            }\n            group[1].push(item);\n            // keep keys for eventing\n            this._collectContextKeys(item);\n        }\n    }\n    _collectContextKeys(item) {\n        Menu._fillInKbExprKeys(item.when, this._contextKeys);\n        if (isIMenuItem(item)) {\n            // keep precondition keys for event if applicable\n            if (item.command.precondition) {\n                Menu._fillInKbExprKeys(item.command.precondition, this._contextKeys);\n            }\n            // keep toggled keys for event if applicable\n            if (item.command.toggled) {\n                const toggledExpression = item.command.toggled.condition || item.command.toggled;\n                Menu._fillInKbExprKeys(toggledExpression, this._contextKeys);\n            }\n        }\n        else if (this._options.emitEventsForSubmenuChanges) {\n            // recursively collect context keys from submenus so that this\n            // menu fires events when context key changes affect submenus\n            MenuRegistry.getMenuItems(item.submenu).forEach(this._collectContextKeys, this);\n        }\n    }\n    getActions(options) {\n        const result = [];\n        for (let group of this._menuGroups) {\n            const [id, items] = group;\n            const activeActions = [];\n            for (const item of items) {\n                if (this._contextKeyService.contextMatchesRules(item.when)) {\n                    const action = isIMenuItem(item)\n                        ? new MenuItemAction(item.command, item.alt, options, this._contextKeyService, this._commandService)\n                        : new SubmenuItemAction(item, this._menuService, this._contextKeyService, options);\n                    activeActions.push(action);\n                }\n            }\n            if (activeActions.length > 0) {\n                result.push([id, activeActions]);\n            }\n        }\n        return result;\n    }\n    static _fillInKbExprKeys(exp, set) {\n        if (exp) {\n            for (let key of exp.keys()) {\n                set.add(key);\n            }\n        }\n    }\n    static _compareMenuItems(a, b) {\n        let aGroup = a.group;\n        let bGroup = b.group;\n        if (aGroup !== bGroup) {\n            // Falsy groups come last\n            if (!aGroup) {\n                return 1;\n            }\n            else if (!bGroup) {\n                return -1;\n            }\n            // 'navigation' group comes first\n            if (aGroup === 'navigation') {\n                return -1;\n            }\n            else if (bGroup === 'navigation') {\n                return 1;\n            }\n            // lexical sort for groups\n            let value = aGroup.localeCompare(bGroup);\n            if (value !== 0) {\n                return value;\n            }\n        }\n        // sort on priority - default is 0\n        let aPrio = a.order || 0;\n        let bPrio = b.order || 0;\n        if (aPrio < bPrio) {\n            return -1;\n        }\n        else if (aPrio > bPrio) {\n            return 1;\n        }\n        // sort on titles\n        return Menu._compareTitles(isIMenuItem(a) ? a.command.title : a.title, isIMenuItem(b) ? b.command.title : b.title);\n    }\n    static _compareTitles(a, b) {\n        const aStr = typeof a === 'string' ? a : a.original;\n        const bStr = typeof b === 'string' ? b : b.original;\n        return aStr.localeCompare(bStr);\n    }\n};\nMenu = __decorate([\n    __param(2, ICommandService),\n    __param(3, IContextKeyService),\n    __param(4, IMenuService)\n], Menu);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { isSafari, isWebkitWebView } from '../../../base/browser/browser.js';\nimport { $, addDisposableListener } from '../../../base/browser/dom.js';\nimport { DeferredPromise } from '../../../base/common/async.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nimport { ILogService } from '../../log/common/log.js';\nlet BrowserClipboardService = class BrowserClipboardService extends Disposable {\n    constructor(layoutService, logService) {\n        super();\n        this.layoutService = layoutService;\n        this.logService = logService;\n        this.mapTextToType = new Map(); // unsupported in web (only in-memory)\n        this.findText = ''; // unsupported in web (only in-memory)\n        if (isSafari || isWebkitWebView) {\n            this.installWebKitWriteTextWorkaround();\n        }\n    }\n    // In Safari, it has the following note:\n    //\n    // \"The request to write to the clipboard must be triggered during a user gesture.\n    // A call to clipboard.write or clipboard.writeText outside the scope of a user\n    // gesture(such as \"click\" or \"touch\" event handlers) will result in the immediate\n    // rejection of the promise returned by the API call.\"\n    // From: https://webkit.org/blog/10855/async-clipboard-api/\n    //\n    // Since extensions run in a web worker, and handle gestures in an asynchronous way,\n    // they are not classified by Safari as \"in response to a user gesture\" and will reject.\n    //\n    // This function sets up some handlers to work around that behavior.\n    installWebKitWriteTextWorkaround() {\n        const handler = () => {\n            const currentWritePromise = new DeferredPromise();\n            // Cancel the previous promise since we just created a new one in response to this new event\n            if (this.webKitPendingClipboardWritePromise && !this.webKitPendingClipboardWritePromise.isSettled) {\n                this.webKitPendingClipboardWritePromise.cancel();\n            }\n            this.webKitPendingClipboardWritePromise = currentWritePromise;\n            // The ctor of ClipboardItem allows you to pass in a promise that will resolve to a string.\n            // This allows us to pass in a Promise that will either be cancelled by another event or\n            // resolved with the contents of the first call to this.writeText.\n            // see https://developer.mozilla.org/en-US/docs/Web/API/ClipboardItem/ClipboardItem#parameters\n            navigator.clipboard.write([new ClipboardItem({\n                    'text/plain': currentWritePromise.p,\n                })]).catch((err) => __awaiter(this, void 0, void 0, function* () {\n                if (!(err instanceof Error) || err.name !== 'NotAllowedError' || !currentWritePromise.isRejected) {\n                    this.logService.error(err);\n                }\n            }));\n        };\n        if (this.layoutService.hasContainer) {\n            this._register(addDisposableListener(this.layoutService.container, 'click', handler));\n            this._register(addDisposableListener(this.layoutService.container, 'keydown', handler));\n        }\n    }\n    writeText(text, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // With type: only in-memory is supported\n            if (type) {\n                this.mapTextToType.set(type, text);\n                return;\n            }\n            if (this.webKitPendingClipboardWritePromise) {\n                // For Safari, we complete this Promise which allows the call to `navigator.clipboard.write()`\n                // above to resolve and successfully copy to the clipboard. If we let this continue, Safari\n                // would throw an error because this call stack doesn't appear to originate from a user gesture.\n                return this.webKitPendingClipboardWritePromise.complete(text);\n            }\n            // Guard access to navigator.clipboard with try/catch\n            // as we have seen DOMExceptions in certain browsers\n            // due to security policies.\n            try {\n                return yield navigator.clipboard.writeText(text);\n            }\n            catch (error) {\n                console.error(error);\n            }\n            // Fallback to textarea and execCommand solution\n            const activeElement = document.activeElement;\n            const textArea = document.body.appendChild($('textarea', { 'aria-hidden': true }));\n            textArea.style.height = '1px';\n            textArea.style.width = '1px';\n            textArea.style.position = 'absolute';\n            textArea.value = text;\n            textArea.focus();\n            textArea.select();\n            document.execCommand('copy');\n            if (activeElement instanceof HTMLElement) {\n                activeElement.focus();\n            }\n            document.body.removeChild(textArea);\n            return;\n        });\n    }\n    readText(type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // With type: only in-memory is supported\n            if (type) {\n                return this.mapTextToType.get(type) || '';\n            }\n            // Guard access to navigator.clipboard with try/catch\n            // as we have seen DOMExceptions in certain browsers\n            // due to security policies.\n            try {\n                return yield navigator.clipboard.readText();\n            }\n            catch (error) {\n                console.error(error);\n                return '';\n            }\n        });\n    }\n    readFindText() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.findText;\n        });\n    }\n    writeFindText(text) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.findText = text;\n        });\n    }\n};\nBrowserClipboardService = __decorate([\n    __param(0, ILayoutService),\n    __param(1, ILogService)\n], BrowserClipboardService);\nexport { BrowserClipboardService };\n","import { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IClipboardService = createDecorator('clipboardService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { validateConstraints } from '../../../base/common/types.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const ICommandService = createDecorator('commandService');\nexport const CommandsRegistry = new class {\n    constructor() {\n        this._commands = new Map();\n        this._onDidRegisterCommand = new Emitter();\n        this.onDidRegisterCommand = this._onDidRegisterCommand.event;\n    }\n    registerCommand(idOrCommand, handler) {\n        if (!idOrCommand) {\n            throw new Error(`invalid command`);\n        }\n        if (typeof idOrCommand === 'string') {\n            if (!handler) {\n                throw new Error(`invalid command`);\n            }\n            return this.registerCommand({ id: idOrCommand, handler });\n        }\n        // add argument validation if rich command metadata is provided\n        if (idOrCommand.description) {\n            const constraints = [];\n            for (let arg of idOrCommand.description.args) {\n                constraints.push(arg.constraint);\n            }\n            const actualHandler = idOrCommand.handler;\n            idOrCommand.handler = function (accessor, ...args) {\n                validateConstraints(args, constraints);\n                return actualHandler(accessor, ...args);\n            };\n        }\n        // find a place to store the command\n        const { id } = idOrCommand;\n        let commands = this._commands.get(id);\n        if (!commands) {\n            commands = new LinkedList();\n            this._commands.set(id, commands);\n        }\n        let removeFn = commands.unshift(idOrCommand);\n        let ret = toDisposable(() => {\n            removeFn();\n            const command = this._commands.get(id);\n            if (command === null || command === void 0 ? void 0 : command.isEmpty()) {\n                this._commands.delete(id);\n            }\n        });\n        // tell the world about this command\n        this._onDidRegisterCommand.fire(id);\n        return ret;\n    }\n    registerCommandAlias(oldId, newId) {\n        return CommandsRegistry.registerCommand(oldId, (accessor, ...args) => accessor.get(ICommandService).executeCommand(newId, ...args));\n    }\n    getCommand(id) {\n        const list = this._commands.get(id);\n        if (!list || list.isEmpty()) {\n            return undefined;\n        }\n        return Iterable.first(list);\n    }\n    getCommands() {\n        const result = new Map();\n        for (const key of this._commands.keys()) {\n            const command = this.getCommand(key);\n            if (command) {\n                result.set(key, command);\n            }\n        }\n        return result;\n    }\n};\nexport const NullCommandService = {\n    _serviceBrand: undefined,\n    onWillExecuteCommand: () => Disposable.None,\n    onDidExecuteCommand: () => Disposable.None,\n    executeCommand() {\n        return Promise.resolve(undefined);\n    }\n};\nCommandsRegistry.registerCommand('noop', () => { });\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IConfigurationService = createDecorator('configurationService');\nexport function toValuesTree(properties, conflictReporter) {\n    const root = Object.create(null);\n    for (let key in properties) {\n        addToValueTree(root, key, properties[key], conflictReporter);\n    }\n    return root;\n}\nexport function addToValueTree(settingsTreeRoot, key, value, conflictReporter) {\n    const segments = key.split('.');\n    const last = segments.pop();\n    let curr = settingsTreeRoot;\n    for (let i = 0; i < segments.length; i++) {\n        let s = segments[i];\n        let obj = curr[s];\n        switch (typeof obj) {\n            case 'undefined':\n                obj = curr[s] = Object.create(null);\n                break;\n            case 'object':\n                break;\n            default:\n                conflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is ${JSON.stringify(obj)}`);\n                return;\n        }\n        curr = obj;\n    }\n    if (typeof curr === 'object' && curr !== null) {\n        try {\n            curr[last] = value; // workaround https://github.com/microsoft/vscode/issues/13606\n        }\n        catch (e) {\n            conflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n        }\n    }\n    else {\n        conflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n    }\n}\nexport function removeFromValueTree(valueTree, key) {\n    const segments = key.split('.');\n    doRemoveFromValueTree(valueTree, segments);\n}\nfunction doRemoveFromValueTree(valueTree, segments) {\n    const first = segments.shift();\n    if (segments.length === 0) {\n        // Reached last segment\n        delete valueTree[first];\n        return;\n    }\n    if (Object.keys(valueTree).indexOf(first) !== -1) {\n        const value = valueTree[first];\n        if (typeof value === 'object' && !Array.isArray(value)) {\n            doRemoveFromValueTree(value, segments);\n            if (Object.keys(value).length === 0) {\n                delete valueTree[first];\n            }\n        }\n    }\n}\n/**\n * A helper function to get the configuration value with a specific settings path (e.g. config.some.setting)\n */\nexport function getConfigurationValue(config, settingPath, defaultValue) {\n    function accessSetting(config, path) {\n        let current = config;\n        for (const component of path) {\n            if (typeof current !== 'object' || current === null) {\n                return undefined;\n            }\n            current = current[component];\n        }\n        return current;\n    }\n    const path = settingPath.split('.');\n    const result = accessSetting(config, path);\n    return typeof result === 'undefined' ? defaultValue : result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as arrays from '../../../base/common/arrays.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport * as objects from '../../../base/common/objects.js';\nimport * as types from '../../../base/common/types.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { addToValueTree, getConfigurationValue, removeFromValueTree, toValuesTree } from './configuration.js';\nimport { Extensions, overrideIdentifiersFromKey, OVERRIDE_PROPERTY_REGEX } from './configurationRegistry.js';\nimport { Registry } from '../../registry/common/platform.js';\nexport class ConfigurationModel {\n    constructor(_contents = {}, _keys = [], _overrides = []) {\n        this._contents = _contents;\n        this._keys = _keys;\n        this._overrides = _overrides;\n        this.isFrozen = false;\n        this.overrideConfigurations = new Map();\n    }\n    get contents() {\n        return this.checkAndFreeze(this._contents);\n    }\n    get overrides() {\n        return this.checkAndFreeze(this._overrides);\n    }\n    get keys() {\n        return this.checkAndFreeze(this._keys);\n    }\n    isEmpty() {\n        return this._keys.length === 0 && Object.keys(this._contents).length === 0 && this._overrides.length === 0;\n    }\n    getValue(section) {\n        return section ? getConfigurationValue(this.contents, section) : this.contents;\n    }\n    getOverrideValue(section, overrideIdentifier) {\n        const overrideContents = this.getContentsForOverrideIdentifer(overrideIdentifier);\n        return overrideContents\n            ? section ? getConfigurationValue(overrideContents, section) : overrideContents\n            : undefined;\n    }\n    override(identifier) {\n        let overrideConfigurationModel = this.overrideConfigurations.get(identifier);\n        if (!overrideConfigurationModel) {\n            overrideConfigurationModel = this.createOverrideConfigurationModel(identifier);\n            this.overrideConfigurations.set(identifier, overrideConfigurationModel);\n        }\n        return overrideConfigurationModel;\n    }\n    merge(...others) {\n        const contents = objects.deepClone(this.contents);\n        const overrides = objects.deepClone(this.overrides);\n        const keys = [...this.keys];\n        for (const other of others) {\n            this.mergeContents(contents, other.contents);\n            for (const otherOverride of other.overrides) {\n                const [override] = overrides.filter(o => arrays.equals(o.identifiers, otherOverride.identifiers));\n                if (override) {\n                    this.mergeContents(override.contents, otherOverride.contents);\n                    override.keys.push(...otherOverride.keys);\n                    override.keys = arrays.distinct(override.keys);\n                }\n                else {\n                    overrides.push(objects.deepClone(otherOverride));\n                }\n            }\n            for (const key of other.keys) {\n                if (keys.indexOf(key) === -1) {\n                    keys.push(key);\n                }\n            }\n        }\n        return new ConfigurationModel(contents, keys, overrides);\n    }\n    freeze() {\n        this.isFrozen = true;\n        return this;\n    }\n    createOverrideConfigurationModel(identifier) {\n        const overrideContents = this.getContentsForOverrideIdentifer(identifier);\n        if (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\n            // If there are no valid overrides, return self\n            return this;\n        }\n        let contents = {};\n        for (const key of arrays.distinct([...Object.keys(this.contents), ...Object.keys(overrideContents)])) {\n            let contentsForKey = this.contents[key];\n            let overrideContentsForKey = overrideContents[key];\n            // If there are override contents for the key, clone and merge otherwise use base contents\n            if (overrideContentsForKey) {\n                // Clone and merge only if base contents and override contents are of type object otherwise just override\n                if (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\n                    contentsForKey = objects.deepClone(contentsForKey);\n                    this.mergeContents(contentsForKey, overrideContentsForKey);\n                }\n                else {\n                    contentsForKey = overrideContentsForKey;\n                }\n            }\n            contents[key] = contentsForKey;\n        }\n        return new ConfigurationModel(contents, this.keys, this.overrides);\n    }\n    mergeContents(source, target) {\n        for (const key of Object.keys(target)) {\n            if (key in source) {\n                if (types.isObject(source[key]) && types.isObject(target[key])) {\n                    this.mergeContents(source[key], target[key]);\n                    continue;\n                }\n            }\n            source[key] = objects.deepClone(target[key]);\n        }\n    }\n    checkAndFreeze(data) {\n        if (this.isFrozen && !Object.isFrozen(data)) {\n            return objects.deepFreeze(data);\n        }\n        return data;\n    }\n    getContentsForOverrideIdentifer(identifier) {\n        let contentsForIdentifierOnly = null;\n        let contents = null;\n        const mergeContents = (contentsToMerge) => {\n            if (contentsToMerge) {\n                if (contents) {\n                    this.mergeContents(contents, contentsToMerge);\n                }\n                else {\n                    contents = objects.deepClone(contentsToMerge);\n                }\n            }\n        };\n        for (const override of this.overrides) {\n            if (arrays.equals(override.identifiers, [identifier])) {\n                contentsForIdentifierOnly = override.contents;\n            }\n            else if (override.identifiers.includes(identifier)) {\n                mergeContents(override.contents);\n            }\n        }\n        // Merge contents of the identifier only at the end to take precedence.\n        mergeContents(contentsForIdentifierOnly);\n        return contents;\n    }\n    toJSON() {\n        return {\n            contents: this.contents,\n            overrides: this.overrides,\n            keys: this.keys\n        };\n    }\n    // Update methods\n    setValue(key, value) {\n        this.addKey(key);\n        addToValueTree(this.contents, key, value, e => { throw new Error(e); });\n    }\n    removeValue(key) {\n        if (this.removeKey(key)) {\n            removeFromValueTree(this.contents, key);\n        }\n    }\n    addKey(key) {\n        let index = this.keys.length;\n        for (let i = 0; i < index; i++) {\n            if (key.indexOf(this.keys[i]) === 0) {\n                index = i;\n            }\n        }\n        this.keys.splice(index, 1, key);\n    }\n    removeKey(key) {\n        let index = this.keys.indexOf(key);\n        if (index !== -1) {\n            this.keys.splice(index, 1);\n            return true;\n        }\n        return false;\n    }\n}\nexport class DefaultConfigurationModel extends ConfigurationModel {\n    constructor(configurationDefaultsOverrides = {}) {\n        const properties = Registry.as(Extensions.Configuration).getConfigurationProperties();\n        const keys = Object.keys(properties);\n        const contents = Object.create(null);\n        const overrides = [];\n        for (const key in properties) {\n            const defaultOverrideValue = configurationDefaultsOverrides[key];\n            const value = defaultOverrideValue !== undefined ? defaultOverrideValue : properties[key].default;\n            addToValueTree(contents, key, value, message => console.error(`Conflict in default settings: ${message}`));\n        }\n        for (const key of Object.keys(contents)) {\n            if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n                overrides.push({\n                    identifiers: overrideIdentifiersFromKey(key),\n                    keys: Object.keys(contents[key]),\n                    contents: toValuesTree(contents[key], message => console.error(`Conflict in default settings file: ${message}`)),\n                });\n            }\n        }\n        super(contents, keys, overrides);\n    }\n}\nexport class Configuration {\n    constructor(_defaultConfiguration, _localUserConfiguration, _remoteUserConfiguration = new ConfigurationModel(), _workspaceConfiguration = new ConfigurationModel(), _folderConfigurations = new ResourceMap(), _memoryConfiguration = new ConfigurationModel(), _memoryConfigurationByResource = new ResourceMap(), _freeze = true) {\n        this._defaultConfiguration = _defaultConfiguration;\n        this._localUserConfiguration = _localUserConfiguration;\n        this._remoteUserConfiguration = _remoteUserConfiguration;\n        this._workspaceConfiguration = _workspaceConfiguration;\n        this._folderConfigurations = _folderConfigurations;\n        this._memoryConfiguration = _memoryConfiguration;\n        this._memoryConfigurationByResource = _memoryConfigurationByResource;\n        this._freeze = _freeze;\n        this._workspaceConsolidatedConfiguration = null;\n        this._foldersConsolidatedConfigurations = new ResourceMap();\n        this._userConfiguration = null;\n    }\n    getValue(section, overrides, workspace) {\n        const consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n        return consolidateConfigurationModel.getValue(section);\n    }\n    updateValue(key, value, overrides = {}) {\n        let memoryConfiguration;\n        if (overrides.resource) {\n            memoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\n            if (!memoryConfiguration) {\n                memoryConfiguration = new ConfigurationModel();\n                this._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\n            }\n        }\n        else {\n            memoryConfiguration = this._memoryConfiguration;\n        }\n        if (value === undefined) {\n            memoryConfiguration.removeValue(key);\n        }\n        else {\n            memoryConfiguration.setValue(key, value);\n        }\n        if (!overrides.resource) {\n            this._workspaceConsolidatedConfiguration = null;\n        }\n    }\n    inspect(key, overrides, workspace) {\n        const consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n        const folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\n        const memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\n        const defaultValue = overrides.overrideIdentifier ? this._defaultConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this._defaultConfiguration.freeze().getValue(key);\n        const userValue = overrides.overrideIdentifier ? this.userConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this.userConfiguration.freeze().getValue(key);\n        const userLocalValue = overrides.overrideIdentifier ? this.localUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this.localUserConfiguration.freeze().getValue(key);\n        const userRemoteValue = overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this.remoteUserConfiguration.freeze().getValue(key);\n        const workspaceValue = workspace ? overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this._workspaceConfiguration.freeze().getValue(key) : undefined; //Check on workspace exists or not because _workspaceConfiguration is never null\n        const workspaceFolderValue = folderConfigurationModel ? overrides.overrideIdentifier ? folderConfigurationModel.freeze().override(overrides.overrideIdentifier).getValue(key) : folderConfigurationModel.freeze().getValue(key) : undefined;\n        const memoryValue = overrides.overrideIdentifier ? memoryConfigurationModel.override(overrides.overrideIdentifier).getValue(key) : memoryConfigurationModel.getValue(key);\n        const value = consolidateConfigurationModel.getValue(key);\n        const overrideIdentifiers = arrays.distinct(arrays.flatten(consolidateConfigurationModel.overrides.map(override => override.identifiers))).filter(overrideIdentifier => consolidateConfigurationModel.getOverrideValue(key, overrideIdentifier) !== undefined);\n        return {\n            defaultValue: defaultValue,\n            userValue: userValue,\n            userLocalValue: userLocalValue,\n            userRemoteValue: userRemoteValue,\n            workspaceValue: workspaceValue,\n            workspaceFolderValue: workspaceFolderValue,\n            memoryValue: memoryValue,\n            value,\n            default: defaultValue !== undefined ? { value: this._defaultConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._defaultConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n            user: userValue !== undefined ? { value: this.userConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.userConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n            userLocal: userLocalValue !== undefined ? { value: this.localUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.localUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n            userRemote: userRemoteValue !== undefined ? { value: this.remoteUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n            workspace: workspaceValue !== undefined ? { value: this._workspaceConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n            workspaceFolder: workspaceFolderValue !== undefined ? { value: folderConfigurationModel === null || folderConfigurationModel === void 0 ? void 0 : folderConfigurationModel.freeze().getValue(key), override: overrides.overrideIdentifier ? folderConfigurationModel === null || folderConfigurationModel === void 0 ? void 0 : folderConfigurationModel.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n            memory: memoryValue !== undefined ? { value: memoryConfigurationModel.getValue(key), override: overrides.overrideIdentifier ? memoryConfigurationModel.getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n            overrideIdentifiers: overrideIdentifiers.length ? overrideIdentifiers : undefined\n        };\n    }\n    get userConfiguration() {\n        if (!this._userConfiguration) {\n            this._userConfiguration = this._remoteUserConfiguration.isEmpty() ? this._localUserConfiguration : this._localUserConfiguration.merge(this._remoteUserConfiguration);\n            if (this._freeze) {\n                this._userConfiguration.freeze();\n            }\n        }\n        return this._userConfiguration;\n    }\n    get localUserConfiguration() {\n        return this._localUserConfiguration;\n    }\n    get remoteUserConfiguration() {\n        return this._remoteUserConfiguration;\n    }\n    getConsolidateConfigurationModel(overrides, workspace) {\n        let configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\n        return overrides.overrideIdentifier ? configurationModel.override(overrides.overrideIdentifier) : configurationModel;\n    }\n    getConsolidatedConfigurationModelForResource({ resource }, workspace) {\n        let consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n        if (workspace && resource) {\n            const root = workspace.getFolder(resource);\n            if (root) {\n                consolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\n            }\n            const memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\n            if (memoryConfigurationForResource) {\n                consolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\n            }\n        }\n        return consolidateConfiguration;\n    }\n    getWorkspaceConsolidatedConfiguration() {\n        if (!this._workspaceConsolidatedConfiguration) {\n            this._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this.userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\n            if (this._freeze) {\n                this._workspaceConfiguration = this._workspaceConfiguration.freeze();\n            }\n        }\n        return this._workspaceConsolidatedConfiguration;\n    }\n    getFolderConsolidatedConfiguration(folder) {\n        let folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\n        if (!folderConsolidatedConfiguration) {\n            const workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n            const folderConfiguration = this._folderConfigurations.get(folder);\n            if (folderConfiguration) {\n                folderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\n                if (this._freeze) {\n                    folderConsolidatedConfiguration = folderConsolidatedConfiguration.freeze();\n                }\n                this._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\n            }\n            else {\n                folderConsolidatedConfiguration = workspaceConsolidateConfiguration;\n            }\n        }\n        return folderConsolidatedConfiguration;\n    }\n    getFolderConfigurationModelForResource(resource, workspace) {\n        if (workspace && resource) {\n            const root = workspace.getFolder(resource);\n            if (root) {\n                return this._folderConfigurations.get(root.uri);\n            }\n        }\n        return undefined;\n    }\n    toData() {\n        return {\n            defaults: {\n                contents: this._defaultConfiguration.contents,\n                overrides: this._defaultConfiguration.overrides,\n                keys: this._defaultConfiguration.keys\n            },\n            user: {\n                contents: this.userConfiguration.contents,\n                overrides: this.userConfiguration.overrides,\n                keys: this.userConfiguration.keys\n            },\n            workspace: {\n                contents: this._workspaceConfiguration.contents,\n                overrides: this._workspaceConfiguration.overrides,\n                keys: this._workspaceConfiguration.keys\n            },\n            folders: [...this._folderConfigurations.keys()].reduce((result, folder) => {\n                const { contents, overrides, keys } = this._folderConfigurations.get(folder);\n                result.push([folder, { contents, overrides, keys }]);\n                return result;\n            }, [])\n        };\n    }\n    static parse(data) {\n        const defaultConfiguration = this.parseConfigurationModel(data.defaults);\n        const userConfiguration = this.parseConfigurationModel(data.user);\n        const workspaceConfiguration = this.parseConfigurationModel(data.workspace);\n        const folders = data.folders.reduce((result, value) => {\n            result.set(URI.revive(value[0]), this.parseConfigurationModel(value[1]));\n            return result;\n        }, new ResourceMap());\n        return new Configuration(defaultConfiguration, userConfiguration, new ConfigurationModel(), workspaceConfiguration, folders, new ConfigurationModel(), new ResourceMap(), false);\n    }\n    static parseConfigurationModel(model) {\n        return new ConfigurationModel(model.contents, model.keys, model.overrides).freeze();\n    }\n}\nexport class ConfigurationChangeEvent {\n    constructor(change, previous, currentConfiguraiton, currentWorkspace) {\n        this.change = change;\n        this.previous = previous;\n        this.currentConfiguraiton = currentConfiguraiton;\n        this.currentWorkspace = currentWorkspace;\n        this._previousConfiguration = undefined;\n        const keysSet = new Set();\n        change.keys.forEach(key => keysSet.add(key));\n        change.overrides.forEach(([, keys]) => keys.forEach(key => keysSet.add(key)));\n        this.affectedKeys = [...keysSet.values()];\n        const configurationModel = new ConfigurationModel();\n        this.affectedKeys.forEach(key => configurationModel.setValue(key, {}));\n        this.affectedKeysTree = configurationModel.contents;\n    }\n    get previousConfiguration() {\n        if (!this._previousConfiguration && this.previous) {\n            this._previousConfiguration = Configuration.parse(this.previous.data);\n        }\n        return this._previousConfiguration;\n    }\n    affectsConfiguration(section, overrides) {\n        var _a;\n        if (this.doesAffectedKeysTreeContains(this.affectedKeysTree, section)) {\n            if (overrides) {\n                const value1 = this.previousConfiguration ? this.previousConfiguration.getValue(section, overrides, (_a = this.previous) === null || _a === void 0 ? void 0 : _a.workspace) : undefined;\n                const value2 = this.currentConfiguraiton.getValue(section, overrides, this.currentWorkspace);\n                return !objects.equals(value1, value2);\n            }\n            return true;\n        }\n        return false;\n    }\n    doesAffectedKeysTreeContains(affectedKeysTree, section) {\n        let requestedTree = toValuesTree({ [section]: true }, () => { });\n        let key;\n        while (typeof requestedTree === 'object' && (key = Object.keys(requestedTree)[0])) { // Only one key should present, since we added only one property\n            affectedKeysTree = affectedKeysTree[key];\n            if (!affectedKeysTree) {\n                return false; // Requested tree is not found\n            }\n            requestedTree = requestedTree[key];\n        }\n        return true;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { distinct } from '../../../base/common/arrays.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport * as types from '../../../base/common/types.js';\nimport * as nls from '../../../nls.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport { Registry } from '../../registry/common/platform.js';\nexport const Extensions = {\n    Configuration: 'base.contributions.configuration'\n};\nexport const allSettings = { properties: {}, patternProperties: {} };\nexport const applicationSettings = { properties: {}, patternProperties: {} };\nexport const machineSettings = { properties: {}, patternProperties: {} };\nexport const machineOverridableSettings = { properties: {}, patternProperties: {} };\nexport const windowSettings = { properties: {}, patternProperties: {} };\nexport const resourceSettings = { properties: {}, patternProperties: {} };\nexport const resourceLanguageSettingsSchemaId = 'vscode://schemas/settings/resourceLanguage';\nconst contributionRegistry = Registry.as(JSONExtensions.JSONContribution);\nclass ConfigurationRegistry {\n    constructor() {\n        this.overrideIdentifiers = new Set();\n        this._onDidSchemaChange = new Emitter();\n        this._onDidUpdateConfiguration = new Emitter();\n        this.configurationDefaultsOverrides = new Map();\n        this.defaultLanguageConfigurationOverridesNode = {\n            id: 'defaultOverrides',\n            title: nls.localize('defaultLanguageConfigurationOverrides.title', \"Default Language Configuration Overrides\"),\n            properties: {}\n        };\n        this.configurationContributors = [this.defaultLanguageConfigurationOverridesNode];\n        this.resourceLanguageSettingsSchema = { properties: {}, patternProperties: {}, additionalProperties: false, errorMessage: 'Unknown editor configuration setting', allowTrailingCommas: true, allowComments: true };\n        this.configurationProperties = {};\n        this.excludedConfigurationProperties = {};\n        contributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n        this.registerOverridePropertyPatternKey();\n    }\n    registerConfiguration(configuration, validate = true) {\n        this.registerConfigurations([configuration], validate);\n    }\n    registerConfigurations(configurations, validate = true) {\n        const properties = this.doRegisterConfigurations(configurations, validate);\n        contributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n        this._onDidSchemaChange.fire();\n        this._onDidUpdateConfiguration.fire({ properties });\n    }\n    registerDefaultConfigurations(configurationDefaults) {\n        var _a;\n        const properties = [];\n        const overrideIdentifiers = [];\n        for (const { overrides, source } of configurationDefaults) {\n            for (const key in overrides) {\n                properties.push(key);\n                if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n                    const defaultValue = Object.assign(Object.assign({}, (((_a = this.configurationDefaultsOverrides.get(key)) === null || _a === void 0 ? void 0 : _a.value) || {})), overrides[key]);\n                    this.configurationDefaultsOverrides.set(key, { source, value: defaultValue });\n                    const property = {\n                        type: 'object',\n                        default: defaultValue,\n                        description: nls.localize('defaultLanguageConfiguration.description', \"Configure settings to be overridden for {0} language.\", key),\n                        $ref: resourceLanguageSettingsSchemaId,\n                        defaultDefaultValue: defaultValue,\n                        source: types.isString(source) ? undefined : source,\n                    };\n                    overrideIdentifiers.push(...overrideIdentifiersFromKey(key));\n                    this.configurationProperties[key] = property;\n                    this.defaultLanguageConfigurationOverridesNode.properties[key] = property;\n                }\n                else {\n                    this.configurationDefaultsOverrides.set(key, { value: overrides[key], source });\n                    const property = this.configurationProperties[key];\n                    if (property) {\n                        this.updatePropertyDefaultValue(key, property);\n                        this.updateSchema(key, property);\n                    }\n                }\n            }\n        }\n        this.registerOverrideIdentifiers(overrideIdentifiers);\n        this._onDidSchemaChange.fire();\n        this._onDidUpdateConfiguration.fire({ properties, defaultsOverrides: true });\n    }\n    registerOverrideIdentifiers(overrideIdentifiers) {\n        for (const overrideIdentifier of overrideIdentifiers) {\n            this.overrideIdentifiers.add(overrideIdentifier);\n        }\n        this.updateOverridePropertyPatternKey();\n    }\n    doRegisterConfigurations(configurations, validate) {\n        const properties = [];\n        configurations.forEach(configuration => {\n            properties.push(...this.validateAndRegisterProperties(configuration, validate, configuration.extensionInfo, configuration.restrictedProperties)); // fills in defaults\n            this.configurationContributors.push(configuration);\n            this.registerJSONConfiguration(configuration);\n        });\n        return properties;\n    }\n    validateAndRegisterProperties(configuration, validate = true, extensionInfo, restrictedProperties, scope = 3 /* WINDOW */) {\n        scope = types.isUndefinedOrNull(configuration.scope) ? scope : configuration.scope;\n        let propertyKeys = [];\n        let properties = configuration.properties;\n        if (properties) {\n            for (let key in properties) {\n                if (validate && validateProperty(key)) {\n                    delete properties[key];\n                    continue;\n                }\n                const property = properties[key];\n                property.source = extensionInfo;\n                // update default value\n                property.defaultDefaultValue = properties[key].default;\n                this.updatePropertyDefaultValue(key, property);\n                // update scope\n                if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n                    property.scope = undefined; // No scope for overridable properties `[${identifier}]`\n                }\n                else {\n                    property.scope = types.isUndefinedOrNull(property.scope) ? scope : property.scope;\n                    property.restricted = types.isUndefinedOrNull(property.restricted) ? !!(restrictedProperties === null || restrictedProperties === void 0 ? void 0 : restrictedProperties.includes(key)) : property.restricted;\n                }\n                // Add to properties maps\n                // Property is included by default if 'included' is unspecified\n                if (properties[key].hasOwnProperty('included') && !properties[key].included) {\n                    this.excludedConfigurationProperties[key] = properties[key];\n                    delete properties[key];\n                    continue;\n                }\n                else {\n                    this.configurationProperties[key] = properties[key];\n                }\n                if (!properties[key].deprecationMessage && properties[key].markdownDeprecationMessage) {\n                    // If not set, default deprecationMessage to the markdown source\n                    properties[key].deprecationMessage = properties[key].markdownDeprecationMessage;\n                }\n                propertyKeys.push(key);\n            }\n        }\n        let subNodes = configuration.allOf;\n        if (subNodes) {\n            for (let node of subNodes) {\n                propertyKeys.push(...this.validateAndRegisterProperties(node, validate, extensionInfo, restrictedProperties, scope));\n            }\n        }\n        return propertyKeys;\n    }\n    getConfigurationProperties() {\n        return this.configurationProperties;\n    }\n    registerJSONConfiguration(configuration) {\n        const register = (configuration) => {\n            let properties = configuration.properties;\n            if (properties) {\n                for (const key in properties) {\n                    this.updateSchema(key, properties[key]);\n                }\n            }\n            let subNodes = configuration.allOf;\n            if (subNodes) {\n                subNodes.forEach(register);\n            }\n        };\n        register(configuration);\n    }\n    updateSchema(key, property) {\n        allSettings.properties[key] = property;\n        switch (property.scope) {\n            case 1 /* APPLICATION */:\n                applicationSettings.properties[key] = property;\n                break;\n            case 2 /* MACHINE */:\n                machineSettings.properties[key] = property;\n                break;\n            case 6 /* MACHINE_OVERRIDABLE */:\n                machineOverridableSettings.properties[key] = property;\n                break;\n            case 3 /* WINDOW */:\n                windowSettings.properties[key] = property;\n                break;\n            case 4 /* RESOURCE */:\n                resourceSettings.properties[key] = property;\n                break;\n            case 5 /* LANGUAGE_OVERRIDABLE */:\n                resourceSettings.properties[key] = property;\n                this.resourceLanguageSettingsSchema.properties[key] = property;\n                break;\n        }\n    }\n    updateOverridePropertyPatternKey() {\n        for (const overrideIdentifier of this.overrideIdentifiers.values()) {\n            const overrideIdentifierProperty = `[${overrideIdentifier}]`;\n            const resourceLanguagePropertiesSchema = {\n                type: 'object',\n                description: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n                errorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n                $ref: resourceLanguageSettingsSchemaId,\n            };\n            this.updatePropertyDefaultValue(overrideIdentifierProperty, resourceLanguagePropertiesSchema);\n            allSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            applicationSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            machineSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            machineOverridableSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            windowSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            resourceSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n        }\n        this._onDidSchemaChange.fire();\n    }\n    registerOverridePropertyPatternKey() {\n        const resourceLanguagePropertiesSchema = {\n            type: 'object',\n            description: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n            errorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n            $ref: resourceLanguageSettingsSchemaId,\n        };\n        allSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        applicationSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        machineSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        machineOverridableSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        windowSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        resourceSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        this._onDidSchemaChange.fire();\n    }\n    updatePropertyDefaultValue(key, property) {\n        const configurationdefaultOverride = this.configurationDefaultsOverrides.get(key);\n        let defaultValue = configurationdefaultOverride === null || configurationdefaultOverride === void 0 ? void 0 : configurationdefaultOverride.value;\n        let defaultSource = configurationdefaultOverride === null || configurationdefaultOverride === void 0 ? void 0 : configurationdefaultOverride.source;\n        if (types.isUndefined(defaultValue)) {\n            defaultValue = property.defaultDefaultValue;\n            defaultSource = undefined;\n        }\n        if (types.isUndefined(defaultValue)) {\n            defaultValue = getDefaultValue(property.type);\n        }\n        property.default = defaultValue;\n        property.defaultValueSource = defaultSource;\n    }\n}\nconst OVERRIDE_IDENTIFIER_PATTERN = `\\\\[([^\\\\]]+)\\\\]`;\nconst OVERRIDE_IDENTIFIER_REGEX = new RegExp(OVERRIDE_IDENTIFIER_PATTERN, 'g');\nexport const OVERRIDE_PROPERTY_PATTERN = `^(${OVERRIDE_IDENTIFIER_PATTERN})+$`;\nexport const OVERRIDE_PROPERTY_REGEX = new RegExp(OVERRIDE_PROPERTY_PATTERN);\nexport function overrideIdentifiersFromKey(key) {\n    const identifiers = [];\n    if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n        let matches = OVERRIDE_IDENTIFIER_REGEX.exec(key);\n        while (matches === null || matches === void 0 ? void 0 : matches.length) {\n            const identifier = matches[1].trim();\n            if (identifier) {\n                identifiers.push(identifier);\n            }\n            matches = OVERRIDE_IDENTIFIER_REGEX.exec(key);\n        }\n    }\n    return distinct(identifiers);\n}\nexport function getDefaultValue(type) {\n    const t = Array.isArray(type) ? type[0] : type;\n    switch (t) {\n        case 'boolean':\n            return false;\n        case 'integer':\n        case 'number':\n            return 0;\n        case 'string':\n            return '';\n        case 'array':\n            return [];\n        case 'object':\n            return {};\n        default:\n            return null;\n    }\n}\nconst configurationRegistry = new ConfigurationRegistry();\nRegistry.add(Extensions.Configuration, configurationRegistry);\nexport function validateProperty(property) {\n    if (!property.trim()) {\n        return nls.localize('config.property.empty', \"Cannot register an empty property\");\n    }\n    if (OVERRIDE_PROPERTY_REGEX.test(property)) {\n        return nls.localize('config.property.languageDefault', \"Cannot register '{0}'. This matches property pattern '\\\\\\\\[.*\\\\\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.\", property);\n    }\n    if (configurationRegistry.getConfigurationProperties()[property] !== undefined) {\n        return nls.localize('config.property.duplicate', \"Cannot register '{0}'. This property is already registered.\", property);\n    }\n    return null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { PauseableEmitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { DisposableStore, MutableDisposable } from '../../../base/common/lifecycle.js';\nimport { TernarySearchTree } from '../../../base/common/map.js';\nimport { localize } from '../../../nls.js';\nimport { CommandsRegistry } from '../../commands/common/commands.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { IContextKeyService, RawContextKey, SET_CONTEXT_COMMAND_ID } from '../common/contextkey.js';\nconst KEYBINDING_CONTEXT_ATTR = 'data-keybinding-context';\nexport class Context {\n    constructor(id, parent) {\n        this._id = id;\n        this._parent = parent;\n        this._value = Object.create(null);\n        this._value['_contextId'] = id;\n    }\n    setValue(key, value) {\n        // console.log('SET ' + key + ' = ' + value + ' ON ' + this._id);\n        if (this._value[key] !== value) {\n            this._value[key] = value;\n            return true;\n        }\n        return false;\n    }\n    removeValue(key) {\n        // console.log('REMOVE ' + key + ' FROM ' + this._id);\n        if (key in this._value) {\n            delete this._value[key];\n            return true;\n        }\n        return false;\n    }\n    getValue(key) {\n        const ret = this._value[key];\n        if (typeof ret === 'undefined' && this._parent) {\n            return this._parent.getValue(key);\n        }\n        return ret;\n    }\n}\nclass NullContext extends Context {\n    constructor() {\n        super(-1, null);\n    }\n    setValue(key, value) {\n        return false;\n    }\n    removeValue(key) {\n        return false;\n    }\n    getValue(key) {\n        return undefined;\n    }\n}\nNullContext.INSTANCE = new NullContext();\nclass ConfigAwareContextValuesContainer extends Context {\n    constructor(id, _configurationService, emitter) {\n        super(id, null);\n        this._configurationService = _configurationService;\n        this._values = TernarySearchTree.forConfigKeys();\n        this._listener = this._configurationService.onDidChangeConfiguration(event => {\n            if (event.source === 6 /* DEFAULT */) {\n                // new setting, reset everything\n                const allKeys = Array.from(Iterable.map(this._values, ([k]) => k));\n                this._values.clear();\n                emitter.fire(new ArrayContextKeyChangeEvent(allKeys));\n            }\n            else {\n                const changedKeys = [];\n                for (const configKey of event.affectedKeys) {\n                    const contextKey = `config.${configKey}`;\n                    const cachedItems = this._values.findSuperstr(contextKey);\n                    if (cachedItems !== undefined) {\n                        changedKeys.push(...Iterable.map(cachedItems, ([key]) => key));\n                        this._values.deleteSuperstr(contextKey);\n                    }\n                    if (this._values.has(contextKey)) {\n                        changedKeys.push(contextKey);\n                        this._values.delete(contextKey);\n                    }\n                }\n                emitter.fire(new ArrayContextKeyChangeEvent(changedKeys));\n            }\n        });\n    }\n    dispose() {\n        this._listener.dispose();\n    }\n    getValue(key) {\n        if (key.indexOf(ConfigAwareContextValuesContainer._keyPrefix) !== 0) {\n            return super.getValue(key);\n        }\n        if (this._values.has(key)) {\n            return this._values.get(key);\n        }\n        const configKey = key.substr(ConfigAwareContextValuesContainer._keyPrefix.length);\n        const configValue = this._configurationService.getValue(configKey);\n        let value = undefined;\n        switch (typeof configValue) {\n            case 'number':\n            case 'boolean':\n            case 'string':\n                value = configValue;\n                break;\n            default:\n                if (Array.isArray(configValue)) {\n                    value = JSON.stringify(configValue);\n                }\n                else {\n                    value = configValue;\n                }\n        }\n        this._values.set(key, value);\n        return value;\n    }\n    setValue(key, value) {\n        return super.setValue(key, value);\n    }\n    removeValue(key) {\n        return super.removeValue(key);\n    }\n}\nConfigAwareContextValuesContainer._keyPrefix = 'config.';\nclass ContextKey {\n    constructor(service, key, defaultValue) {\n        this._service = service;\n        this._key = key;\n        this._defaultValue = defaultValue;\n        this.reset();\n    }\n    set(value) {\n        this._service.setContext(this._key, value);\n    }\n    reset() {\n        if (typeof this._defaultValue === 'undefined') {\n            this._service.removeContext(this._key);\n        }\n        else {\n            this._service.setContext(this._key, this._defaultValue);\n        }\n    }\n    get() {\n        return this._service.getContextKeyValue(this._key);\n    }\n}\nclass SimpleContextKeyChangeEvent {\n    constructor(key) {\n        this.key = key;\n    }\n    affectsSome(keys) {\n        return keys.has(this.key);\n    }\n}\nclass ArrayContextKeyChangeEvent {\n    constructor(keys) {\n        this.keys = keys;\n    }\n    affectsSome(keys) {\n        for (const key of this.keys) {\n            if (keys.has(key)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nclass CompositeContextKeyChangeEvent {\n    constructor(events) {\n        this.events = events;\n    }\n    affectsSome(keys) {\n        for (const e of this.events) {\n            if (e.affectsSome(keys)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nexport class AbstractContextKeyService {\n    constructor(myContextId) {\n        this._onDidChangeContext = new PauseableEmitter({ merge: input => new CompositeContextKeyChangeEvent(input) });\n        this.onDidChangeContext = this._onDidChangeContext.event;\n        this._isDisposed = false;\n        this._myContextId = myContextId;\n    }\n    createKey(key, defaultValue) {\n        if (this._isDisposed) {\n            throw new Error(`AbstractContextKeyService has been disposed`);\n        }\n        return new ContextKey(this, key, defaultValue);\n    }\n    bufferChangeEvents(callback) {\n        this._onDidChangeContext.pause();\n        try {\n            callback();\n        }\n        finally {\n            this._onDidChangeContext.resume();\n        }\n    }\n    createScoped(domNode) {\n        if (this._isDisposed) {\n            throw new Error(`AbstractContextKeyService has been disposed`);\n        }\n        return new ScopedContextKeyService(this, domNode);\n    }\n    contextMatchesRules(rules) {\n        if (this._isDisposed) {\n            throw new Error(`AbstractContextKeyService has been disposed`);\n        }\n        const context = this.getContextValuesContainer(this._myContextId);\n        const result = (rules ? rules.evaluate(context) : true);\n        // console.group(rules.serialize() + ' -> ' + result);\n        // rules.keys().forEach(key => { console.log(key, ctx[key]); });\n        // console.groupEnd();\n        return result;\n    }\n    getContextKeyValue(key) {\n        if (this._isDisposed) {\n            return undefined;\n        }\n        return this.getContextValuesContainer(this._myContextId).getValue(key);\n    }\n    setContext(key, value) {\n        if (this._isDisposed) {\n            return;\n        }\n        const myContext = this.getContextValuesContainer(this._myContextId);\n        if (!myContext) {\n            return;\n        }\n        if (myContext.setValue(key, value)) {\n            this._onDidChangeContext.fire(new SimpleContextKeyChangeEvent(key));\n        }\n    }\n    removeContext(key) {\n        if (this._isDisposed) {\n            return;\n        }\n        if (this.getContextValuesContainer(this._myContextId).removeValue(key)) {\n            this._onDidChangeContext.fire(new SimpleContextKeyChangeEvent(key));\n        }\n    }\n    getContext(target) {\n        if (this._isDisposed) {\n            return NullContext.INSTANCE;\n        }\n        return this.getContextValuesContainer(findContextAttr(target));\n    }\n}\nlet ContextKeyService = class ContextKeyService extends AbstractContextKeyService {\n    constructor(configurationService) {\n        super(0);\n        this._contexts = new Map();\n        this._toDispose = new DisposableStore();\n        this._lastContextId = 0;\n        const myContext = new ConfigAwareContextValuesContainer(this._myContextId, configurationService, this._onDidChangeContext);\n        this._contexts.set(this._myContextId, myContext);\n        this._toDispose.add(myContext);\n        // Uncomment this to see the contexts continuously logged\n        // let lastLoggedValue: string | null = null;\n        // setInterval(() => {\n        // \tlet values = Object.keys(this._contexts).map((key) => this._contexts[key]);\n        // \tlet logValue = values.map(v => JSON.stringify(v._value, null, '\\t')).join('\\n');\n        // \tif (lastLoggedValue !== logValue) {\n        // \t\tlastLoggedValue = logValue;\n        // \t\tconsole.log(lastLoggedValue);\n        // \t}\n        // }, 2000);\n    }\n    dispose() {\n        this._onDidChangeContext.dispose();\n        this._isDisposed = true;\n        this._toDispose.dispose();\n    }\n    getContextValuesContainer(contextId) {\n        if (this._isDisposed) {\n            return NullContext.INSTANCE;\n        }\n        return this._contexts.get(contextId) || NullContext.INSTANCE;\n    }\n    createChildContext(parentContextId = this._myContextId) {\n        if (this._isDisposed) {\n            throw new Error(`ContextKeyService has been disposed`);\n        }\n        let id = (++this._lastContextId);\n        this._contexts.set(id, new Context(id, this.getContextValuesContainer(parentContextId)));\n        return id;\n    }\n    disposeContext(contextId) {\n        if (!this._isDisposed) {\n            this._contexts.delete(contextId);\n        }\n    }\n};\nContextKeyService = __decorate([\n    __param(0, IConfigurationService)\n], ContextKeyService);\nexport { ContextKeyService };\nclass ScopedContextKeyService extends AbstractContextKeyService {\n    constructor(parent, domNode) {\n        super(parent.createChildContext());\n        this._parentChangeListener = new MutableDisposable();\n        this._parent = parent;\n        this._updateParentChangeListener();\n        this._domNode = domNode;\n        if (this._domNode.hasAttribute(KEYBINDING_CONTEXT_ATTR)) {\n            let extraInfo = '';\n            if (this._domNode.classList) {\n                extraInfo = Array.from(this._domNode.classList.values()).join(', ');\n            }\n            console.error(`Element already has context attribute${extraInfo ? ': ' + extraInfo : ''}`);\n        }\n        this._domNode.setAttribute(KEYBINDING_CONTEXT_ATTR, String(this._myContextId));\n    }\n    _updateParentChangeListener() {\n        // Forward parent events to this listener. Parent will change.\n        this._parentChangeListener.value = this._parent.onDidChangeContext(this._onDidChangeContext.fire, this._onDidChangeContext);\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._onDidChangeContext.dispose();\n        this._parent.disposeContext(this._myContextId);\n        this._parentChangeListener.dispose();\n        this._domNode.removeAttribute(KEYBINDING_CONTEXT_ATTR);\n        this._isDisposed = true;\n    }\n    getContextValuesContainer(contextId) {\n        if (this._isDisposed) {\n            return NullContext.INSTANCE;\n        }\n        return this._parent.getContextValuesContainer(contextId);\n    }\n    createChildContext(parentContextId = this._myContextId) {\n        if (this._isDisposed) {\n            throw new Error(`ScopedContextKeyService has been disposed`);\n        }\n        return this._parent.createChildContext(parentContextId);\n    }\n    disposeContext(contextId) {\n        if (this._isDisposed) {\n            return;\n        }\n        this._parent.disposeContext(contextId);\n    }\n}\nfunction findContextAttr(domNode) {\n    while (domNode) {\n        if (domNode.hasAttribute(KEYBINDING_CONTEXT_ATTR)) {\n            const attr = domNode.getAttribute(KEYBINDING_CONTEXT_ATTR);\n            if (attr) {\n                return parseInt(attr, 10);\n            }\n            return NaN;\n        }\n        domNode = domNode.parentElement;\n    }\n    return 0;\n}\nCommandsRegistry.registerCommand(SET_CONTEXT_COMMAND_ID, function (accessor, contextKey, contextValue) {\n    accessor.get(IContextKeyService).createKey(String(contextKey), contextValue);\n});\nCommandsRegistry.registerCommand({\n    id: 'getContextKeyInfo',\n    handler() {\n        return [...RawContextKey.all()].sort((a, b) => a.key.localeCompare(b.key));\n    },\n    description: {\n        description: localize('getContextKeyInfo', \"A command that returns information about context keys\"),\n        args: []\n    }\n});\nCommandsRegistry.registerCommand('_generateContextKeyInfo', function () {\n    const result = [];\n    const seen = new Set();\n    for (let info of RawContextKey.all()) {\n        if (!seen.has(info.key)) {\n            seen.add(info.key);\n            result.push(info);\n        }\n    }\n    result.sort((a, b) => a.key.localeCompare(b.key));\n    console.log(JSON.stringify(result, undefined, 2));\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isChrome, isEdge, isFirefox, isLinux, isMacintosh, isSafari, isWeb, isWindows } from '../../../base/common/platform.js';\nimport { isFalsyOrWhitespace } from '../../../base/common/strings.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nconst CONSTANT_VALUES = new Map();\nCONSTANT_VALUES.set('false', false);\nCONSTANT_VALUES.set('true', true);\nCONSTANT_VALUES.set('isMac', isMacintosh);\nCONSTANT_VALUES.set('isLinux', isLinux);\nCONSTANT_VALUES.set('isWindows', isWindows);\nCONSTANT_VALUES.set('isWeb', isWeb);\nCONSTANT_VALUES.set('isMacNative', isMacintosh && !isWeb);\nCONSTANT_VALUES.set('isEdge', isEdge);\nCONSTANT_VALUES.set('isFirefox', isFirefox);\nCONSTANT_VALUES.set('isChrome', isChrome);\nCONSTANT_VALUES.set('isSafari', isSafari);\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nexport class ContextKeyExpr {\n    static has(key) {\n        return ContextKeyDefinedExpr.create(key);\n    }\n    static equals(key, value) {\n        return ContextKeyEqualsExpr.create(key, value);\n    }\n    static regex(key, value) {\n        return ContextKeyRegexExpr.create(key, value);\n    }\n    static not(key) {\n        return ContextKeyNotExpr.create(key);\n    }\n    static and(...expr) {\n        return ContextKeyAndExpr.create(expr, null);\n    }\n    static or(...expr) {\n        return ContextKeyOrExpr.create(expr, null, true);\n    }\n    static deserialize(serialized, strict = false) {\n        if (!serialized) {\n            return undefined;\n        }\n        return this._deserializeOrExpression(serialized, strict);\n    }\n    static _deserializeOrExpression(serialized, strict) {\n        let pieces = serialized.split('||');\n        return ContextKeyOrExpr.create(pieces.map(p => this._deserializeAndExpression(p, strict)), null, true);\n    }\n    static _deserializeAndExpression(serialized, strict) {\n        let pieces = serialized.split('&&');\n        return ContextKeyAndExpr.create(pieces.map(p => this._deserializeOne(p, strict)), null);\n    }\n    static _deserializeOne(serializedOne, strict) {\n        serializedOne = serializedOne.trim();\n        if (serializedOne.indexOf('!=') >= 0) {\n            let pieces = serializedOne.split('!=');\n            return ContextKeyNotEqualsExpr.create(pieces[0].trim(), this._deserializeValue(pieces[1], strict));\n        }\n        if (serializedOne.indexOf('==') >= 0) {\n            let pieces = serializedOne.split('==');\n            return ContextKeyEqualsExpr.create(pieces[0].trim(), this._deserializeValue(pieces[1], strict));\n        }\n        if (serializedOne.indexOf('=~') >= 0) {\n            let pieces = serializedOne.split('=~');\n            return ContextKeyRegexExpr.create(pieces[0].trim(), this._deserializeRegexValue(pieces[1], strict));\n        }\n        if (serializedOne.indexOf(' in ') >= 0) {\n            let pieces = serializedOne.split(' in ');\n            return ContextKeyInExpr.create(pieces[0].trim(), pieces[1].trim());\n        }\n        if (/^[^<=>]+>=[^<=>]+$/.test(serializedOne)) {\n            const pieces = serializedOne.split('>=');\n            return ContextKeyGreaterEqualsExpr.create(pieces[0].trim(), pieces[1].trim());\n        }\n        if (/^[^<=>]+>[^<=>]+$/.test(serializedOne)) {\n            const pieces = serializedOne.split('>');\n            return ContextKeyGreaterExpr.create(pieces[0].trim(), pieces[1].trim());\n        }\n        if (/^[^<=>]+<=[^<=>]+$/.test(serializedOne)) {\n            const pieces = serializedOne.split('<=');\n            return ContextKeySmallerEqualsExpr.create(pieces[0].trim(), pieces[1].trim());\n        }\n        if (/^[^<=>]+<[^<=>]+$/.test(serializedOne)) {\n            const pieces = serializedOne.split('<');\n            return ContextKeySmallerExpr.create(pieces[0].trim(), pieces[1].trim());\n        }\n        if (/^\\!\\s*/.test(serializedOne)) {\n            return ContextKeyNotExpr.create(serializedOne.substr(1).trim());\n        }\n        return ContextKeyDefinedExpr.create(serializedOne);\n    }\n    static _deserializeValue(serializedValue, strict) {\n        serializedValue = serializedValue.trim();\n        if (serializedValue === 'true') {\n            return true;\n        }\n        if (serializedValue === 'false') {\n            return false;\n        }\n        let m = /^'([^']*)'$/.exec(serializedValue);\n        if (m) {\n            return m[1].trim();\n        }\n        return serializedValue;\n    }\n    static _deserializeRegexValue(serializedValue, strict) {\n        if (isFalsyOrWhitespace(serializedValue)) {\n            if (strict) {\n                throw new Error('missing regexp-value for =~-expression');\n            }\n            else {\n                console.warn('missing regexp-value for =~-expression');\n            }\n            return null;\n        }\n        let start = serializedValue.indexOf('/');\n        let end = serializedValue.lastIndexOf('/');\n        if (start === end || start < 0 /* || to < 0 */) {\n            if (strict) {\n                throw new Error(`bad regexp-value '${serializedValue}', missing /-enclosure`);\n            }\n            else {\n                console.warn(`bad regexp-value '${serializedValue}', missing /-enclosure`);\n            }\n            return null;\n        }\n        let value = serializedValue.slice(start + 1, end);\n        let caseIgnoreFlag = serializedValue[end + 1] === 'i' ? 'i' : '';\n        try {\n            return new RegExp(value, caseIgnoreFlag);\n        }\n        catch (e) {\n            if (strict) {\n                throw new Error(`bad regexp-value '${serializedValue}', parse error: ${e}`);\n            }\n            else {\n                console.warn(`bad regexp-value '${serializedValue}', parse error: ${e}`);\n            }\n            return null;\n        }\n    }\n}\nexport function expressionsAreEqualWithConstantSubstitution(a, b) {\n    const aExpr = a ? a.substituteConstants() : undefined;\n    const bExpr = b ? b.substituteConstants() : undefined;\n    if (!aExpr && !bExpr) {\n        return true;\n    }\n    if (!aExpr || !bExpr) {\n        return false;\n    }\n    return aExpr.equals(bExpr);\n}\nfunction cmp(a, b) {\n    return a.cmp(b);\n}\nexport class ContextKeyFalseExpr {\n    constructor() {\n        this.type = 0 /* False */;\n    }\n    cmp(other) {\n        return this.type - other.type;\n    }\n    equals(other) {\n        return (other.type === this.type);\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return false;\n    }\n    serialize() {\n        return 'false';\n    }\n    keys() {\n        return [];\n    }\n    negate() {\n        return ContextKeyTrueExpr.INSTANCE;\n    }\n}\nContextKeyFalseExpr.INSTANCE = new ContextKeyFalseExpr();\nexport class ContextKeyTrueExpr {\n    constructor() {\n        this.type = 1 /* True */;\n    }\n    cmp(other) {\n        return this.type - other.type;\n    }\n    equals(other) {\n        return (other.type === this.type);\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return true;\n    }\n    serialize() {\n        return 'true';\n    }\n    keys() {\n        return [];\n    }\n    negate() {\n        return ContextKeyFalseExpr.INSTANCE;\n    }\n}\nContextKeyTrueExpr.INSTANCE = new ContextKeyTrueExpr();\nexport class ContextKeyDefinedExpr {\n    constructor(key, negated) {\n        this.key = key;\n        this.negated = negated;\n        this.type = 2 /* Defined */;\n    }\n    static create(key, negated = null) {\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            return constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n        }\n        return new ContextKeyDefinedExpr(key, negated);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp1(this.key, other.key);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            return constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n        }\n        return this;\n    }\n    evaluate(context) {\n        return (!!context.getValue(this.key));\n    }\n    serialize() {\n        return this.key;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotExpr.create(this.key, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyEqualsExpr {\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 4 /* Equals */;\n    }\n    static create(key, value, negated = null) {\n        if (typeof value === 'boolean') {\n            return (value ? ContextKeyDefinedExpr.create(key, negated) : ContextKeyNotExpr.create(key, negated));\n        }\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            const trueValue = constantValue ? 'true' : 'false';\n            return (value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n        }\n        return new ContextKeyEqualsExpr(key, value, negated);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            const trueValue = constantValue ? 'true' : 'false';\n            return (this.value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        // Intentional ==\n        // eslint-disable-next-line eqeqeq\n        return (context.getValue(this.key) == this.value);\n    }\n    serialize() {\n        return `${this.key} == '${this.value}'`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyInExpr {\n    constructor(key, valueKey) {\n        this.key = key;\n        this.valueKey = valueKey;\n        this.type = 10 /* In */;\n        this.negated = null;\n    }\n    static create(key, valueKey) {\n        return new ContextKeyInExpr(key, valueKey);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.valueKey, other.key, other.valueKey);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.valueKey === other.valueKey);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        const source = context.getValue(this.valueKey);\n        const item = context.getValue(this.key);\n        if (Array.isArray(source)) {\n            return (source.indexOf(item) >= 0);\n        }\n        if (typeof item === 'string' && typeof source === 'object' && source !== null) {\n            return hasOwnProperty.call(source, item);\n        }\n        return false;\n    }\n    serialize() {\n        return `${this.key} in '${this.valueKey}'`;\n    }\n    keys() {\n        return [this.key, this.valueKey];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotInExpr.create(this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotInExpr {\n    constructor(_actual) {\n        this._actual = _actual;\n        this.type = 11 /* NotIn */;\n        //\n    }\n    static create(actual) {\n        return new ContextKeyNotInExpr(actual);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return this._actual.cmp(other._actual);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return this._actual.equals(other._actual);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return !this._actual.evaluate(context);\n    }\n    serialize() {\n        throw new Error('Method not implemented.');\n    }\n    keys() {\n        return this._actual.keys();\n    }\n    negate() {\n        return this._actual;\n    }\n}\nexport class ContextKeyNotEqualsExpr {\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 5 /* NotEquals */;\n    }\n    static create(key, value, negated = null) {\n        if (typeof value === 'boolean') {\n            if (value) {\n                return ContextKeyNotExpr.create(key, negated);\n            }\n            return ContextKeyDefinedExpr.create(key, negated);\n        }\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            const falseValue = constantValue ? 'true' : 'false';\n            return (value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return new ContextKeyNotEqualsExpr(key, value, negated);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            const falseValue = constantValue ? 'true' : 'false';\n            return (this.value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        // Intentional !=\n        // eslint-disable-next-line eqeqeq\n        return (context.getValue(this.key) != this.value);\n    }\n    serialize() {\n        return `${this.key} != '${this.value}'`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotExpr {\n    constructor(key, negated) {\n        this.key = key;\n        this.negated = negated;\n        this.type = 3 /* Not */;\n    }\n    static create(key, negated = null) {\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            return (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return new ContextKeyNotExpr(key, negated);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp1(this.key, other.key);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            return (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        return (!context.getValue(this.key));\n    }\n    serialize() {\n        return `!${this.key}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyDefinedExpr.create(this.key, this);\n        }\n        return this.negated;\n    }\n}\nfunction withFloatOrStr(value, callback) {\n    if (typeof value === 'string') {\n        const n = parseFloat(value);\n        if (!isNaN(n)) {\n            value = n;\n        }\n    }\n    if (typeof value === 'string' || typeof value === 'number') {\n        return callback(value);\n    }\n    return ContextKeyFalseExpr.INSTANCE;\n}\nexport class ContextKeyGreaterExpr {\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 12 /* Greater */;\n    }\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeyGreaterExpr(key, value, negated));\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) > this.value);\n    }\n    serialize() {\n        return `${this.key} > ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeySmallerEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyGreaterEqualsExpr {\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 13 /* GreaterEquals */;\n    }\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeyGreaterEqualsExpr(key, value, negated));\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) >= this.value);\n    }\n    serialize() {\n        return `${this.key} >= ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeySmallerExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeySmallerExpr {\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 14 /* Smaller */;\n    }\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeySmallerExpr(key, value, negated));\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) < this.value);\n    }\n    serialize() {\n        return `${this.key} < ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyGreaterEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeySmallerEqualsExpr {\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 15 /* SmallerEquals */;\n    }\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeySmallerEqualsExpr(key, value, negated));\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) <= this.value);\n    }\n    serialize() {\n        return `${this.key} <= ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyGreaterExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyRegexExpr {\n    constructor(key, regexp) {\n        this.key = key;\n        this.regexp = regexp;\n        this.type = 7 /* Regex */;\n        this.negated = null;\n        //\n    }\n    static create(key, regexp) {\n        return new ContextKeyRegexExpr(key, regexp);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.key < other.key) {\n            return -1;\n        }\n        if (this.key > other.key) {\n            return 1;\n        }\n        const thisSource = this.regexp ? this.regexp.source : '';\n        const otherSource = other.regexp ? other.regexp.source : '';\n        if (thisSource < otherSource) {\n            return -1;\n        }\n        if (thisSource > otherSource) {\n            return 1;\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            const thisSource = this.regexp ? this.regexp.source : '';\n            const otherSource = other.regexp ? other.regexp.source : '';\n            return (this.key === other.key && thisSource === otherSource);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        let value = context.getValue(this.key);\n        return this.regexp ? this.regexp.test(value) : false;\n    }\n    serialize() {\n        const value = this.regexp\n            ? `/${this.regexp.source}/${this.regexp.ignoreCase ? 'i' : ''}`\n            : '/invalid/';\n        return `${this.key} =~ ${value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotRegexExpr.create(this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotRegexExpr {\n    constructor(_actual) {\n        this._actual = _actual;\n        this.type = 8 /* NotRegex */;\n        //\n    }\n    static create(actual) {\n        return new ContextKeyNotRegexExpr(actual);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return this._actual.cmp(other._actual);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return this._actual.equals(other._actual);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return !this._actual.evaluate(context);\n    }\n    serialize() {\n        throw new Error('Method not implemented.');\n    }\n    keys() {\n        return this._actual.keys();\n    }\n    negate() {\n        return this._actual;\n    }\n}\n/**\n * @returns the same instance if nothing changed.\n */\nfunction eliminateConstantsInArray(arr) {\n    // Allocate array only if there is a difference\n    let newArr = null;\n    for (let i = 0, len = arr.length; i < len; i++) {\n        const newExpr = arr[i].substituteConstants();\n        if (arr[i] !== newExpr) {\n            // something has changed!\n            // allocate array on first difference\n            if (newArr === null) {\n                newArr = [];\n                for (let j = 0; j < i; j++) {\n                    newArr[j] = arr[j];\n                }\n            }\n        }\n        if (newArr !== null) {\n            newArr[i] = newExpr;\n        }\n    }\n    if (newArr === null) {\n        return arr;\n    }\n    return newArr;\n}\nclass ContextKeyAndExpr {\n    constructor(expr, negated) {\n        this.expr = expr;\n        this.negated = negated;\n        this.type = 6 /* And */;\n    }\n    static create(_expr, negated) {\n        return ContextKeyAndExpr._normalizeArr(_expr, negated);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.expr.length < other.expr.length) {\n            return -1;\n        }\n        if (this.expr.length > other.expr.length) {\n            return 1;\n        }\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            const r = cmp(this.expr[i], other.expr[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            if (this.expr.length !== other.expr.length) {\n                return false;\n            }\n            for (let i = 0, len = this.expr.length; i < len; i++) {\n                if (!this.expr[i].equals(other.expr[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    substituteConstants() {\n        const exprArr = eliminateConstantsInArray(this.expr);\n        if (exprArr === this.expr) {\n            // no change\n            return this;\n        }\n        return ContextKeyAndExpr.create(exprArr, this.negated);\n    }\n    evaluate(context) {\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            if (!this.expr[i].evaluate(context)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static _normalizeArr(arr, negated) {\n        const expr = [];\n        let hasTrue = false;\n        for (const e of arr) {\n            if (!e) {\n                continue;\n            }\n            if (e.type === 1 /* True */) {\n                // anything && true ==> anything\n                hasTrue = true;\n                continue;\n            }\n            if (e.type === 0 /* False */) {\n                // anything && false ==> false\n                return ContextKeyFalseExpr.INSTANCE;\n            }\n            if (e.type === 6 /* And */) {\n                expr.push(...e.expr);\n                continue;\n            }\n            expr.push(e);\n        }\n        if (expr.length === 0 && hasTrue) {\n            return ContextKeyTrueExpr.INSTANCE;\n        }\n        if (expr.length === 0) {\n            return undefined;\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        expr.sort(cmp);\n        // eliminate duplicate terms\n        for (let i = 1; i < expr.length; i++) {\n            if (expr[i - 1].equals(expr[i])) {\n                expr.splice(i, 1);\n                i--;\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // We must distribute any OR expression because we don't support parens\n        // OR extensions will be at the end (due to sorting rules)\n        while (expr.length > 1) {\n            const lastElement = expr[expr.length - 1];\n            if (lastElement.type !== 9 /* Or */) {\n                break;\n            }\n            // pop the last element\n            expr.pop();\n            // pop the second to last element\n            const secondToLastElement = expr.pop();\n            const isFinished = (expr.length === 0);\n            // distribute `lastElement` over `secondToLastElement`\n            const resultElement = ContextKeyOrExpr.create(lastElement.expr.map(el => ContextKeyAndExpr.create([el, secondToLastElement], null)), null, isFinished);\n            if (resultElement) {\n                expr.push(resultElement);\n                expr.sort(cmp);\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        return new ContextKeyAndExpr(expr, negated);\n    }\n    serialize() {\n        return this.expr.map(e => e.serialize()).join(' && ');\n    }\n    keys() {\n        const result = [];\n        for (let expr of this.expr) {\n            result.push(...expr.keys());\n        }\n        return result;\n    }\n    negate() {\n        if (!this.negated) {\n            const result = [];\n            for (let expr of this.expr) {\n                result.push(expr.negate());\n            }\n            this.negated = ContextKeyOrExpr.create(result, this, true);\n        }\n        return this.negated;\n    }\n}\nclass ContextKeyOrExpr {\n    constructor(expr, negated) {\n        this.expr = expr;\n        this.negated = negated;\n        this.type = 9 /* Or */;\n    }\n    static create(_expr, negated, extraRedundantCheck) {\n        return ContextKeyOrExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.expr.length < other.expr.length) {\n            return -1;\n        }\n        if (this.expr.length > other.expr.length) {\n            return 1;\n        }\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            const r = cmp(this.expr[i], other.expr[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            if (this.expr.length !== other.expr.length) {\n                return false;\n            }\n            for (let i = 0, len = this.expr.length; i < len; i++) {\n                if (!this.expr[i].equals(other.expr[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    substituteConstants() {\n        const exprArr = eliminateConstantsInArray(this.expr);\n        if (exprArr === this.expr) {\n            // no change\n            return this;\n        }\n        return ContextKeyOrExpr.create(exprArr, this.negated, false);\n    }\n    evaluate(context) {\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            if (this.expr[i].evaluate(context)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    static _normalizeArr(arr, negated, extraRedundantCheck) {\n        let expr = [];\n        let hasFalse = false;\n        if (arr) {\n            for (let i = 0, len = arr.length; i < len; i++) {\n                const e = arr[i];\n                if (!e) {\n                    continue;\n                }\n                if (e.type === 0 /* False */) {\n                    // anything || false ==> anything\n                    hasFalse = true;\n                    continue;\n                }\n                if (e.type === 1 /* True */) {\n                    // anything || true ==> true\n                    return ContextKeyTrueExpr.INSTANCE;\n                }\n                if (e.type === 9 /* Or */) {\n                    expr = expr.concat(e.expr);\n                    continue;\n                }\n                expr.push(e);\n            }\n            if (expr.length === 0 && hasFalse) {\n                return ContextKeyFalseExpr.INSTANCE;\n            }\n            expr.sort(cmp);\n        }\n        if (expr.length === 0) {\n            return undefined;\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // eliminate duplicate terms\n        for (let i = 1; i < expr.length; i++) {\n            if (expr[i - 1].equals(expr[i])) {\n                expr.splice(i, 1);\n                i--;\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // eliminate redundant terms\n        if (extraRedundantCheck) {\n            for (let i = 0; i < expr.length; i++) {\n                for (let j = i + 1; j < expr.length; j++) {\n                    if (implies(expr[i], expr[j])) {\n                        expr.splice(j, 1);\n                        j--;\n                    }\n                }\n            }\n            if (expr.length === 1) {\n                return expr[0];\n            }\n        }\n        return new ContextKeyOrExpr(expr, negated);\n    }\n    serialize() {\n        return this.expr.map(e => e.serialize()).join(' || ');\n    }\n    keys() {\n        const result = [];\n        for (let expr of this.expr) {\n            result.push(...expr.keys());\n        }\n        return result;\n    }\n    negate() {\n        if (!this.negated) {\n            let result = [];\n            for (let expr of this.expr) {\n                result.push(expr.negate());\n            }\n            // We don't support parens, so here we distribute the AND over the OR terminals\n            // We always take the first 2 AND pairs and distribute them\n            while (result.length > 1) {\n                const LEFT = result.shift();\n                const RIGHT = result.shift();\n                const all = [];\n                for (const left of getTerminals(LEFT)) {\n                    for (const right of getTerminals(RIGHT)) {\n                        all.push(ContextKeyAndExpr.create([left, right], null));\n                    }\n                }\n                const isFinished = (result.length === 0);\n                result.unshift(ContextKeyOrExpr.create(all, null, isFinished));\n            }\n            this.negated = result[0];\n        }\n        return this.negated;\n    }\n}\nexport class RawContextKey extends ContextKeyDefinedExpr {\n    constructor(key, defaultValue, metaOrHide) {\n        super(key, null);\n        this._defaultValue = defaultValue;\n        // collect all context keys into a central place\n        if (typeof metaOrHide === 'object') {\n            RawContextKey._info.push(Object.assign(Object.assign({}, metaOrHide), { key }));\n        }\n        else if (metaOrHide !== true) {\n            RawContextKey._info.push({ key, description: metaOrHide, type: defaultValue !== null && defaultValue !== undefined ? typeof defaultValue : undefined });\n        }\n    }\n    static all() {\n        return RawContextKey._info.values();\n    }\n    bindTo(target) {\n        return target.createKey(this.key, this._defaultValue);\n    }\n    getValue(target) {\n        return target.getContextKeyValue(this.key);\n    }\n    toNegated() {\n        return this.negate();\n    }\n    isEqualTo(value) {\n        return ContextKeyEqualsExpr.create(this.key, value);\n    }\n}\nRawContextKey._info = [];\nexport const IContextKeyService = createDecorator('contextKeyService');\nexport const SET_CONTEXT_COMMAND_ID = 'setContext';\nfunction cmp1(key1, key2) {\n    if (key1 < key2) {\n        return -1;\n    }\n    if (key1 > key2) {\n        return 1;\n    }\n    return 0;\n}\nfunction cmp2(key1, value1, key2, value2) {\n    if (key1 < key2) {\n        return -1;\n    }\n    if (key1 > key2) {\n        return 1;\n    }\n    if (value1 < value2) {\n        return -1;\n    }\n    if (value1 > value2) {\n        return 1;\n    }\n    return 0;\n}\n/**\n * Returns true if it is provable `p` implies `q`.\n */\nexport function implies(p, q) {\n    if (q.type === 6 /* And */ && (p.type !== 9 /* Or */ && p.type !== 6 /* And */)) {\n        // covers the case: A implies A && B\n        for (const qTerm of q.expr) {\n            if (p.equals(qTerm)) {\n                return true;\n            }\n        }\n    }\n    const notP = p.negate();\n    const expr = getTerminals(notP).concat(getTerminals(q));\n    expr.sort(cmp);\n    for (let i = 0; i < expr.length; i++) {\n        const a = expr[i];\n        const notA = a.negate();\n        for (let j = i + 1; j < expr.length; j++) {\n            const b = expr[j];\n            if (notA.equals(b)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction getTerminals(node) {\n    if (node.type === 9 /* Or */) {\n        return node.expr;\n    }\n    return [node];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isIOS, isLinux, isMacintosh, isWeb, isWindows } from '../../../base/common/platform.js';\nimport { localize } from '../../../nls.js';\nimport { RawContextKey } from './contextkey.js';\nexport const IsMacContext = new RawContextKey('isMac', isMacintosh, localize('isMac', \"Whether the operating system is macOS\"));\nexport const IsLinuxContext = new RawContextKey('isLinux', isLinux, localize('isLinux', \"Whether the operating system is Linux\"));\nexport const IsWindowsContext = new RawContextKey('isWindows', isWindows, localize('isWindows', \"Whether the operating system is Windows\"));\nexport const IsWebContext = new RawContextKey('isWeb', isWeb, localize('isWeb', \"Whether the platform is a web browser\"));\nexport const IsMacNativeContext = new RawContextKey('isMacNative', isMacintosh && !isWeb, localize('isMacNative', \"Whether the operating system is macOS on a non-browser platform\"));\nexport const IsIOSContext = new RawContextKey('isIOS', isIOS, localize('isIOS', \"Whether the operating system is iOS\"));\nexport const IsDevelopmentContext = new RawContextKey('isDevelopment', false, true);\nexport const InputFocusedContextKey = 'inputFocus';\nexport const InputFocusedContext = new RawContextKey(InputFocusedContextKey, false, localize('inputFocus', \"Whether keyboard focus is inside an input box\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, addDisposableListener, EventType, isHTMLElement } from '../../../base/browser/dom.js';\nimport { StandardMouseEvent } from '../../../base/browser/mouseEvent.js';\nimport { Menu } from '../../../base/browser/ui/menu/menu.js';\nimport { ActionRunner } from '../../../base/common/actions.js';\nimport { isCancellationError } from '../../../base/common/errors.js';\nimport { combinedDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport './contextMenuHandler.css';\nimport { attachMenuStyler } from '../../theme/common/styler.js';\nexport class ContextMenuHandler {\n    constructor(contextViewService, telemetryService, notificationService, keybindingService, themeService) {\n        this.contextViewService = contextViewService;\n        this.telemetryService = telemetryService;\n        this.notificationService = notificationService;\n        this.keybindingService = keybindingService;\n        this.themeService = themeService;\n        this.focusToReturn = null;\n        this.block = null;\n        this.options = { blockMouse: true };\n    }\n    configure(options) {\n        this.options = options;\n    }\n    showContextMenu(delegate) {\n        const actions = delegate.getActions();\n        if (!actions.length) {\n            return; // Don't render an empty context menu\n        }\n        this.focusToReturn = document.activeElement;\n        let menu;\n        let shadowRootElement = isHTMLElement(delegate.domForShadowRoot) ? delegate.domForShadowRoot : undefined;\n        this.contextViewService.showContextView({\n            getAnchor: () => delegate.getAnchor(),\n            canRelayout: false,\n            anchorAlignment: delegate.anchorAlignment,\n            anchorAxisAlignment: delegate.anchorAxisAlignment,\n            render: (container) => {\n                let className = delegate.getMenuClassName ? delegate.getMenuClassName() : '';\n                if (className) {\n                    container.className += ' ' + className;\n                }\n                // Render invisible div to block mouse interaction in the rest of the UI\n                if (this.options.blockMouse) {\n                    this.block = container.appendChild($('.context-view-block'));\n                    this.block.style.position = 'fixed';\n                    this.block.style.cursor = 'initial';\n                    this.block.style.left = '0';\n                    this.block.style.top = '0';\n                    this.block.style.width = '100%';\n                    this.block.style.height = '100%';\n                    this.block.style.zIndex = '-1';\n                    // TODO@Steven: this is never getting disposed\n                    addDisposableListener(this.block, EventType.MOUSE_DOWN, e => e.stopPropagation());\n                }\n                const menuDisposables = new DisposableStore();\n                const actionRunner = delegate.actionRunner || new ActionRunner();\n                actionRunner.onBeforeRun(this.onActionRun, this, menuDisposables);\n                actionRunner.onDidRun(this.onDidActionRun, this, menuDisposables);\n                menu = new Menu(container, actions, {\n                    actionViewItemProvider: delegate.getActionViewItem,\n                    context: delegate.getActionsContext ? delegate.getActionsContext() : null,\n                    actionRunner,\n                    getKeyBinding: delegate.getKeyBinding ? delegate.getKeyBinding : action => this.keybindingService.lookupKeybinding(action.id)\n                });\n                menuDisposables.add(attachMenuStyler(menu, this.themeService));\n                menu.onDidCancel(() => this.contextViewService.hideContextView(true), null, menuDisposables);\n                menu.onDidBlur(() => this.contextViewService.hideContextView(true), null, menuDisposables);\n                menuDisposables.add(addDisposableListener(window, EventType.BLUR, () => this.contextViewService.hideContextView(true)));\n                menuDisposables.add(addDisposableListener(window, EventType.MOUSE_DOWN, (e) => {\n                    if (e.defaultPrevented) {\n                        return;\n                    }\n                    let event = new StandardMouseEvent(e);\n                    let element = event.target;\n                    // Don't do anything as we are likely creating a context menu\n                    if (event.rightButton) {\n                        return;\n                    }\n                    while (element) {\n                        if (element === container) {\n                            return;\n                        }\n                        element = element.parentElement;\n                    }\n                    this.contextViewService.hideContextView(true);\n                }));\n                return combinedDisposable(menuDisposables, menu);\n            },\n            focus: () => {\n                if (menu) {\n                    menu.focus(!!delegate.autoSelectFirstItem);\n                }\n            },\n            onHide: (didCancel) => {\n                if (delegate.onHide) {\n                    delegate.onHide(!!didCancel);\n                }\n                if (this.block) {\n                    this.block.remove();\n                    this.block = null;\n                }\n                if (this.focusToReturn) {\n                    this.focusToReturn.focus();\n                }\n            }\n        }, shadowRootElement, !!shadowRootElement);\n    }\n    onActionRun(e) {\n        this.telemetryService.publicLog2('workbenchActionExecuted', { id: e.action.id, from: 'contextMenu' });\n        this.contextViewService.hideContextView(false);\n        // Restore focus here\n        if (this.focusToReturn) {\n            this.focusToReturn.focus();\n        }\n    }\n    onDidActionRun(e) {\n        if (e.error && !isCancellationError(e.error)) {\n            this.notificationService.error(e.error);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { ModifierKeyEmitter } from '../../../base/browser/dom.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { INotificationService } from '../../notification/common/notification.js';\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\nimport { IThemeService } from '../../theme/common/themeService.js';\nimport { ContextMenuHandler } from './contextMenuHandler.js';\nimport { IContextViewService } from './contextView.js';\nlet ContextMenuService = class ContextMenuService extends Disposable {\n    constructor(telemetryService, notificationService, contextViewService, keybindingService, themeService) {\n        super();\n        this._onDidShowContextMenu = new Emitter();\n        this._onDidHideContextMenu = new Emitter();\n        this.contextMenuHandler = new ContextMenuHandler(contextViewService, telemetryService, notificationService, keybindingService, themeService);\n    }\n    configure(options) {\n        this.contextMenuHandler.configure(options);\n    }\n    // ContextMenu\n    showContextMenu(delegate) {\n        this.contextMenuHandler.showContextMenu(Object.assign(Object.assign({}, delegate), { onHide: (didCancel) => {\n                if (delegate.onHide) {\n                    delegate.onHide(didCancel);\n                }\n                this._onDidHideContextMenu.fire();\n            } }));\n        ModifierKeyEmitter.getInstance().resetKeyStatus();\n        this._onDidShowContextMenu.fire();\n    }\n};\nContextMenuService = __decorate([\n    __param(0, ITelemetryService),\n    __param(1, INotificationService),\n    __param(2, IContextViewService),\n    __param(3, IKeybindingService),\n    __param(4, IThemeService)\n], ContextMenuService);\nexport { ContextMenuService };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IContextViewService = createDecorator('contextViewService');\nexport const IContextMenuService = createDecorator('contextMenuService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { ContextView } from '../../../base/browser/ui/contextview/contextview.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nlet ContextViewService = class ContextViewService extends Disposable {\n    constructor(layoutService) {\n        super();\n        this.layoutService = layoutService;\n        this.currentViewDisposable = Disposable.None;\n        this.container = layoutService.hasContainer ? layoutService.container : null;\n        this.contextView = this._register(new ContextView(this.container, 1 /* ABSOLUTE */));\n        this.layout();\n        this._register(layoutService.onDidLayout(() => this.layout()));\n    }\n    // ContextView\n    setContainer(container, domPosition) {\n        this.contextView.setContainer(container, domPosition || 1 /* ABSOLUTE */);\n    }\n    showContextView(delegate, container, shadowRoot) {\n        if (container) {\n            if (container !== this.container) {\n                this.container = container;\n                this.setContainer(container, shadowRoot ? 3 /* FIXED_SHADOW */ : 2 /* FIXED */);\n            }\n        }\n        else {\n            if (this.layoutService.hasContainer && this.container !== this.layoutService.container) {\n                this.container = this.layoutService.container;\n                this.setContainer(this.container, 1 /* ABSOLUTE */);\n            }\n        }\n        this.contextView.show(delegate);\n        const disposable = toDisposable(() => {\n            if (this.currentViewDisposable === disposable) {\n                this.hideContextView();\n            }\n        });\n        this.currentViewDisposable = disposable;\n        return disposable;\n    }\n    getContextViewElement() {\n        return this.contextView.getViewElement();\n    }\n    layout() {\n        this.contextView.layout();\n    }\n    hideContextView(data) {\n        this.contextView.hide(data);\n    }\n};\nContextViewService = __decorate([\n    __param(0, ILayoutService)\n], ContextViewService);\nexport { ContextViewService };\n"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","AccessibilityService","_contextKeyService","_configurationService","_accessibilitySupport","_onDidChangeScreenReaderOptimized","Emitter","_accessibilityModeEnabledContext","CONTEXT_ACCESSIBILITY_MODE_ENABLED","updateContextKey","set","isScreenReaderOptimized","_register","onDidChangeConfiguration","e","affectsConfiguration","fire","onDidChangeScreenReaderOptimized","this","event","config","getValue","Disposable","IContextKeyService","IConfigurationService","IAccessibilityService","createDecorator","RawContextKey","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","apply","createAndFillInActionBarActions","menu","options","primaryGroup","primaryMaxCount","shouldInlineSubmenu","useSeparatorsInPrimaryActions","groups","getActions","useAlternativeActions","primaryBucket","secondaryBucket","isPrimaryAction","actionGroup","Number","MAX_SAFE_INTEGER","Array","isArray","primary","secondary","submenuInfo","Set","group","actions","push","Separator","action","MenuItemAction","alt","newLen","SubmenuAction","add","index","submenuActions","splice","overflow","unshift","fillInActions","disposables","DisposableStore","asDisposable","MenuEntryActionViewItem","_action","_keybindingService","_notificationService","undefined","icon","class","item","label","draggable","_wantsAltCommand","_itemClassDispose","MutableDisposable","_altKey","ModifierKeyEmitter","_menuItemAction","preventDefault","stopPropagation","actionRunner","run","_commandAction","_context","error","container","classList","_updateItemClass","mouseOver","alternativeKeyDown","keyStatus","altKey","isWindows","isLinux","shiftKey","updateAltState","wantsAltCommand","updateLabel","updateTooltip","updateClass","addDisposableListener","_","textContent","keybinding","lookupKeybinding","id","keybindingLabel","getLabel","tooltip","title","localize","altTooltip","altKeybinding","altKeybindingLabel","altTitleSection","UILabelProvider","OS","_a","element","checked","toggled","ThemeIcon","iconClasses","toDisposable","remove","light","style","setProperty","asCSSUrl","dark","removeProperty","ActionViewItem","IKeybindingService","INotificationService","SubmenuEntryActionViewItem","contextMenuService","_b","dropdownOptions","assign","create","menuAsChild","classNames","DropdownMenuActionViewItem","IContextMenuService","DropdownWithDefaultActionViewItem","submenuAction","_contextMenuService","_menuService","_instaService","_storageService","_c","defaultAction","_container","_storageKey","submenu","_debugName","defaultActionId","get","find","a","_defaultAction","createInstance","ActionRunner","_dropdown","onDidRun","update","lastAction","store","dispose","context","render","prepend","$","newContext","setActionContext","primaryContainer","append","EventType","StandardKeyboardEvent","equals","tabIndex","focus","dropdownContainer","setFocusable","fromRight","blur","focusable","BaseActionViewItem","createActionViewItem","instaService","SubmenuItemAction","rememberDefaultAction","IMenuService","IInstantiationService","IStorageService","isIMenuItem","command","MenuId","debugName","_idPool","CommandPalette","DebugBreakpointsContext","DebugCallStackContext","DebugConsoleContext","DebugVariablesContext","DebugWatchContext","DebugToolBar","EditorContext","SimpleEditorContext","EditorContextCopy","EditorContextPeek","EditorTitle","EditorTitleRun","EditorTitleContext","EmptyEditorGroup","EmptyEditorGroupContext","ExplorerContext","ExtensionContext","GlobalActivity","LayoutControlMenuSubmenu","LayoutControlMenu","MenubarMainMenu","MenubarAppearanceMenu","MenubarDebugMenu","MenubarEditMenu","MenubarCopy","MenubarFileMenu","MenubarGoMenu","MenubarHelpMenu","MenubarLayoutMenu","MenubarNewBreakpointMenu","MenubarPanelAlignmentMenu","MenubarPanelPositionMenu","MenubarPreferencesMenu","MenubarRecentMenu","MenubarSelectionMenu","MenubarSwitchEditorMenu","MenubarSwitchGroupMenu","MenubarTerminalMenu","MenubarViewMenu","MenubarHomeMenu","OpenEditorsContext","ProblemsPanelContext","SCMChangeContext","SCMResourceContext","SCMResourceFolderContext","SCMResourceGroupContext","SCMSourceControl","SCMTitle","SearchContext","StatusBarWindowIndicatorMenu","StatusBarRemoteIndicatorMenu","TestItem","TestItemGutter","TestPeekElement","TestPeekTitle","TouchBarContext","TitleBarContext","TunnelContext","TunnelPrivacy","TunnelProtocol","TunnelPortInline","TunnelTitle","TunnelLocalAddressInline","TunnelOriginInline","ViewItemContext","ViewContainerTitle","ViewContainerTitleContext","ViewTitle","ViewTitleContext","CommentThreadTitle","CommentThreadActions","CommentTitle","CommentActions","InteractiveToolbar","InteractiveCellTitle","InteractiveCellExecute","InteractiveInputExecute","NotebookToolbar","NotebookCellTitle","NotebookCellInsert","NotebookCellBetween","NotebookCellListTop","NotebookCellExecute","NotebookCellExecutePrimary","NotebookDiffCellInputTitle","NotebookDiffCellMetadataTitle","NotebookDiffCellOutputsTitle","NotebookOutputToolbar","NotebookEditorLayoutConfigure","BulkEditTitle","BulkEditContext","TimelineItemContext","TimelineTitle","TimelineTitleContext","AccountsContext","PanelTitle","AuxiliaryBarTitle","TerminalInstanceContext","TerminalEditorInstanceContext","TerminalNewDropdownContext","TerminalTabContext","TerminalTabEmptyAreaContext","TerminalInlineTabContext","WebviewContext","InlineCompletionsActions","NewFile","MenuRegistry","_commands","Map","_menuItems","_onDidChangeMenu","onDidChangeMenu","_commandPaletteChangeEvent","has","addCommands","Iterable","commands","didChange","delete","map","forEach","appendMenuItems","items","changedIds","toRemove","LinkedList","list","size","fn","clear","_appendImplicitItems","_options","createMenu","pop","contextKeyService","_commandService","renderShortTitle","shortTitle","enabled","precondition","contextMatchesRules","condition","CSSIcon","runArgs","arg","shouldForwardArgs","args","executeCommand","ICommandService","MenuService","Menu","emitEventsForSubmenuChanges","eventDebounceDelay","_id","_disposables","_menuGroups","_contextKeys","_build","rebuildMenuSoon","RunOnceScheduler","_onDidChange","schedule","contextKeyListener","onFirstListenerAdd","fireChangeSoon","onDidChangeContext","affectsSome","onLastListenerRemove","bind","onDidChange","menuItems","sort","_compareMenuItems","groupName","_collectContextKeys","_fillInKbExprKeys","when","toggledExpression","activeActions","exp","keys","b","aGroup","bGroup","localeCompare","aPrio","order","bPrio","_compareTitles","aStr","original","bStr","BrowserClipboardService","layoutService","logService","mapTextToType","findText","isSafari","isWebkitWebView","installWebKitWriteTextWorkaround","handler","currentWritePromise","DeferredPromise","webKitPendingClipboardWritePromise","isSettled","cancel","navigator","clipboard","write","ClipboardItem","p","catch","err","Error","name","isRejected","hasContainer","text","type","complete","writeText","console","activeElement","document","textArea","body","appendChild","height","width","position","select","execCommand","HTMLElement","removeChild","readText","ILayoutService","ILogService","IClipboardService","CommandsRegistry","_onDidRegisterCommand","onDidRegisterCommand","idOrCommand","registerCommand","description","constraints","constraint","actualHandler","accessor","validateConstraints","removeFn","ret","isEmpty","oldId","newId","getCommand","toValuesTree","properties","conflictReporter","root","addToValueTree","settingsTreeRoot","segments","split","last","curr","s","obj","slice","join","JSON","stringify","removeFromValueTree","valueTree","doRemoveFromValueTree","first","shift","indexOf","getConfigurationValue","settingPath","defaultValue","path","current","component","accessSetting","ConfigurationModel","_contents","_keys","_overrides","isFrozen","overrideConfigurations","checkAndFreeze","section","contents","overrideIdentifier","overrideContents","getContentsForOverrideIdentifer","identifier","overrideConfigurationModel","createOverrideConfigurationModel","objects","overrides","others","other","mergeContents","otherOverride","filter","o","arrays","identifiers","override","contentsForKey","overrideContentsForKey","source","types","data","contentsForIdentifierOnly","contentsToMerge","includes","addKey","removeKey","DefaultConfigurationModel","configurationDefaultsOverrides","Registry","Extensions","getConfigurationProperties","defaultOverrideValue","default","message","OVERRIDE_PROPERTY_REGEX","overrideIdentifiersFromKey","Configuration","_defaultConfiguration","_localUserConfiguration","_remoteUserConfiguration","_workspaceConfiguration","_folderConfigurations","ResourceMap","_memoryConfiguration","_memoryConfigurationByResource","_freeze","_workspaceConsolidatedConfiguration","_foldersConsolidatedConfigurations","_userConfiguration","workspace","getConsolidateConfigurationModel","memoryConfiguration","resource","removeValue","setValue","consolidateConfigurationModel","folderConfigurationModel","getFolderConfigurationModelForResource","memoryConfigurationModel","freeze","userValue","userConfiguration","userLocalValue","localUserConfiguration","userRemoteValue","remoteUserConfiguration","workspaceValue","workspaceFolderValue","memoryValue","overrideIdentifiers","getOverrideValue","user","userLocal","userRemote","workspaceFolder","memory","merge","configurationModel","getConsolidatedConfigurationModelForResource","consolidateConfiguration","getWorkspaceConsolidatedConfiguration","getFolder","getFolderConsolidatedConfiguration","uri","memoryConfigurationForResource","folder","folderConsolidatedConfiguration","workspaceConsolidateConfiguration","folderConfiguration","defaults","folders","reduce","defaultConfiguration","parseConfigurationModel","workspaceConfiguration","URI","model","ConfigurationChangeEvent","change","previous","currentConfiguraiton","currentWorkspace","_previousConfiguration","keysSet","affectedKeys","values","affectedKeysTree","parse","doesAffectedKeysTreeContains","value1","previousConfiguration","value2","requestedTree","allSettings","patternProperties","applicationSettings","machineSettings","machineOverridableSettings","windowSettings","resourceSettings","resourceLanguageSettingsSchemaId","contributionRegistry","JSONExtensions","ConfigurationRegistry","_onDidSchemaChange","_onDidUpdateConfiguration","defaultLanguageConfigurationOverridesNode","nls","configurationContributors","resourceLanguageSettingsSchema","additionalProperties","errorMessage","allowTrailingCommas","allowComments","configurationProperties","excludedConfigurationProperties","registerSchema","registerOverridePropertyPatternKey","configuration","validate","registerConfigurations","configurations","doRegisterConfigurations","configurationDefaults","test","property","$ref","defaultDefaultValue","updatePropertyDefaultValue","updateSchema","registerOverrideIdentifiers","defaultsOverrides","updateOverridePropertyPatternKey","validateAndRegisterProperties","extensionInfo","restrictedProperties","registerJSONConfiguration","scope","propertyKeys","validateProperty","restricted","hasOwnProperty","included","deprecationMessage","markdownDeprecationMessage","subNodes","allOf","node","register","overrideIdentifierProperty","resourceLanguagePropertiesSchema","OVERRIDE_PROPERTY_PATTERN","configurationdefaultOverride","defaultSource","getDefaultValue","defaultValueSource","OVERRIDE_IDENTIFIER_PATTERN","OVERRIDE_IDENTIFIER_REGEX","RegExp","matches","exec","trim","distinct","configurationRegistry","KEYBINDING_CONTEXT_ATTR","Context","parent","_parent","_value","NullContext","INSTANCE","ConfigAwareContextValuesContainer","emitter","_values","TernarySearchTree","_listener","allKeys","from","ArrayContextKeyChangeEvent","changedKeys","configKey","contextKey","cachedItems","findSuperstr","deleteSuperstr","_keyPrefix","substr","configValue","ContextKey","service","_service","_key","_defaultValue","reset","setContext","removeContext","getContextKeyValue","SimpleContextKeyChangeEvent","CompositeContextKeyChangeEvent","events","AbstractContextKeyService","myContextId","_onDidChangeContext","PauseableEmitter","input","_isDisposed","_myContextId","callback","pause","resume","domNode","ScopedContextKeyService","rules","getContextValuesContainer","evaluate","myContext","hasAttribute","attr","getAttribute","parseInt","NaN","parentElement","findContextAttr","ContextKeyService","configurationService","_contexts","_toDispose","_lastContextId","contextId","parentContextId","createChildContext","_parentChangeListener","_updateParentChangeListener","_domNode","extraInfo","setAttribute","String","disposeContext","removeAttribute","SET_CONTEXT_COMMAND_ID","contextValue","createKey","seen","info","log","CONSTANT_VALUES","isMacintosh","isWeb","isEdge","isFirefox","isChrome","prototype","ContextKeyExpr","ContextKeyDefinedExpr","ContextKeyEqualsExpr","ContextKeyRegexExpr","ContextKeyNotExpr","expr","ContextKeyAndExpr","ContextKeyOrExpr","serialized","strict","_deserializeOrExpression","pieces","_deserializeAndExpression","_deserializeOne","serializedOne","ContextKeyNotEqualsExpr","_deserializeValue","_deserializeRegexValue","ContextKeyInExpr","ContextKeyGreaterEqualsExpr","ContextKeyGreaterExpr","ContextKeySmallerEqualsExpr","ContextKeySmallerExpr","serializedValue","m","isFalsyOrWhitespace","warn","start","end","lastIndexOf","caseIgnoreFlag","expressionsAreEqualWithConstantSubstitution","aExpr","substituteConstants","bExpr","cmp","ContextKeyFalseExpr","ContextKeyTrueExpr","negated","cmp1","constantValue","cmp2","trueValue","valueKey","call","ContextKeyNotInExpr","_actual","actual","falseValue","withFloatOrStr","n","parseFloat","isNaN","regexp","thisSource","otherSource","ignoreCase","ContextKeyNotRegexExpr","eliminateConstantsInArray","arr","newArr","len","newExpr","j","exprArr","serialize","negate","_expr","_normalizeArr","hasTrue","lastElement","secondToLastElement","isFinished","resultElement","el","LEFT","RIGHT","all","getTerminals","left","right","extraRedundantCheck","hasFalse","concat","implies","metaOrHide","_info","key1","key2","q","qTerm","notA","IsWindowsContext","InputFocusedContextKey","isIOS","ContextMenuHandler","contextViewService","telemetryService","notificationService","keybindingService","themeService","focusToReturn","block","blockMouse","delegate","shadowRootElement","isHTMLElement","domForShadowRoot","showContextView","getAnchor","canRelayout","anchorAlignment","anchorAxisAlignment","className","getMenuClassName","cursor","top","zIndex","menuDisposables","onBeforeRun","onActionRun","onDidActionRun","actionViewItemProvider","getActionViewItem","getActionsContext","getKeyBinding","attachMenuStyler","onDidCancel","hideContextView","onDidBlur","window","defaultPrevented","StandardMouseEvent","rightButton","combinedDisposable","autoSelectFirstItem","onHide","didCancel","publicLog2","isCancellationError","ContextMenuService","_onDidShowContextMenu","_onDidHideContextMenu","contextMenuHandler","configure","showContextMenu","resetKeyStatus","ITelemetryService","IContextViewService","IThemeService","ContextViewService","currentViewDisposable","contextView","ContextView","layout","onDidLayout","domPosition","setContainer","shadowRoot","show","disposable","getViewElement","hide"],"sourceRoot":""}