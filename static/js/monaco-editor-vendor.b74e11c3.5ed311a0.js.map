{"version":3,"file":"static/js/monaco-editor-vendor.b74e11c3.5ed311a0.js","mappings":"+UAMaA,EAAkB,WAC3B,SAAAA,EAAYC,EAAWC,EAAgBC,IAAMC,EAAAA,EAAAA,GAAA,KAAAJ,GACzCK,KAAKJ,UAAYA,EACjBI,KAAKH,eAAiBA,EACtBG,KAAKF,KAAOA,EACZE,KAAKC,gBAAkB,IAC3B,CAgDC,OAhDAC,EAAAA,EAAAA,GAAAP,EAAA,EAAAQ,IAAA,oBAAAC,MACD,SAAkBC,EAAOC,GACrB,IAAMC,EAAOF,EAAMG,gBAAgBR,KAAKJ,WACnCI,KAAKF,MACNQ,EAAQG,iBAAiBT,KAAKJ,UAAW,MAE7CU,EAAQG,iBAAiB,IAAIC,EAAAA,EAAMV,KAAKH,eAAec,WAAYX,KAAKH,eAAee,OAAQZ,KAAKH,eAAec,WAAYX,KAAKH,eAAee,QAASL,IACxJP,KAAKJ,UAAUiB,iBAAiBb,KAAKH,iBAAqBG,KAAKF,OAASE,KAAKJ,UAAUkB,iBAAiBC,OAAOf,KAAKH,iBAAmBG,KAAKJ,UAAUoB,mBAAmBD,OAAOf,KAAKH,iBAKrLG,KAAKF,KACLE,KAAKC,gBAAkB,IAAIgB,EAAAA,EAAUjB,KAAKH,eAAec,WAAYX,KAAKH,eAAee,OAAQZ,KAAKJ,UAAUsB,cAAgBlB,KAAKJ,UAAUuB,gBAAkBnB,KAAKH,eAAec,WAAYX,KAAKJ,UAAUuB,kBAAoBnB,KAAKJ,UAAUsB,cAC/OlB,KAAKH,eAAee,OAASZ,KAAKJ,UAAUwB,UAAYpB,KAAKJ,UAAUyB,YACvErB,KAAKJ,UAAUwB,WAGnBpB,KAAKH,eAAec,WAAaX,KAAKJ,UAAUsB,cAEhDlB,KAAKC,gBAAkB,IAAIgB,EAAAA,EAAUjB,KAAKH,eAAec,WAAaX,KAAKJ,UAAUsB,cAAgBlB,KAAKJ,UAAUuB,gBAAiBnB,KAAKH,eAAee,OAAQZ,KAAKH,eAAec,WAAYX,KAAKJ,UAAUuB,kBAAoBnB,KAAKJ,UAAUsB,cAC/OlB,KAAKH,eAAee,OAASZ,KAAKJ,UAAUwB,UAAYpB,KAAKJ,UAAUyB,YACvErB,KAAKJ,UAAUwB,WAGnBpB,KAAKH,eAAec,WAAaX,KAAKJ,UAAUsB,cAEhDlB,KAAKC,gBAAkB,IAAIgB,EAAAA,EAAUjB,KAAKH,eAAec,WAAYX,KAAKH,eAAee,OAAQZ,KAAKH,eAAec,WAAaX,KAAKJ,UAAUsB,cAAgBlB,KAAKJ,UAAUuB,gBAAiBnB,KAAKJ,UAAUuB,kBAAoBnB,KAAKJ,UAAUsB,cAC/OlB,KAAKH,eAAee,OAASZ,KAAKJ,UAAUwB,UAAYpB,KAAKJ,UAAUyB,YACvErB,KAAKJ,UAAUwB,WAInBpB,KAAKJ,UAAUwB,WAAapB,KAAKH,eAAee,OAEhDZ,KAAKC,gBAAkB,IAAIgB,EAAAA,EAAUjB,KAAKH,eAAec,WAAaX,KAAKJ,UAAUsB,cAAgBlB,KAAKJ,UAAUuB,iBAAiBnB,KAAKJ,UAAUuB,gBAAoBnB,KAAKJ,UAAUsB,cACnLlB,KAAKH,eAAee,OAASZ,KAAKJ,UAAUwB,UAAYpB,KAAKJ,UAAUyB,aACarB,KAAKH,eAAec,WAAYX,KAAKJ,UAAUuB,kBAAoBnB,KAAKJ,UAAUsB,cACtKlB,KAAKH,eAAee,OACpBZ,KAAKJ,UAAUwB,WAInBpB,KAAKC,gBAAkB,IAAIgB,EAAAA,EAAUjB,KAAKH,eAAec,WAAaX,KAAKJ,UAAUsB,cAAgBlB,KAAKJ,UAAUuB,gBAAiBnB,KAAKH,eAAee,OAAQZ,KAAKH,eAAec,WAAYX,KAAKH,eAAee,OAASZ,KAAKJ,UAAUwB,UAAYpB,KAAKJ,UAAUyB,aAlCxQrB,KAAKC,gBAAkBD,KAAKJ,SAoCpC,GAAC,CAAAO,IAAA,qBAAAC,MACD,SAAmBC,EAAOiB,GACtB,OAAOtB,KAAKC,eAChB,KAACN,CAAA,CAtD0B,GCO/B,SAAS4B,EAAmBC,GACxB,OAAIC,EAAAA,GACOD,EAAEE,OAGFF,EAAEG,OAEjB,CACO,IAAMC,EAAqB,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAC9B,SAAAA,EAAYK,GAAQ,IAAAC,EAeW,OAfXnC,EAAAA,EAAAA,GAAA,KAAA6B,IAChBM,EAAAH,EAAAI,KAAA,OACKC,QAAUH,EACfC,EAAKG,kBAAoBH,EAAKE,QAAQE,8BACtCJ,EAAKK,UAAUL,EAAKE,QAAQI,aAAY,SAAChB,GAAC,OAAKU,EAAKO,mBAAmBjB,EAAE,KACzEU,EAAKK,UAAUL,EAAKE,QAAQM,WAAU,SAAClB,GAAC,OAAKU,EAAKS,iBAAiBnB,EAAE,KACrEU,EAAKK,UAAUL,EAAKE,QAAQQ,aAAY,SAACpB,GAAC,OAAKU,EAAKW,mBAAmBrB,EAAE,KACzEU,EAAKK,UAAUL,EAAKE,QAAQU,aAAY,SAACtB,GAAC,OAAKU,EAAKa,mBAAmBvB,EAAE,KACzEU,EAAKK,UAAUL,EAAKE,QAAQY,qBAAoB,kBAAMd,EAAKe,4BAA4B,KACvFf,EAAKK,UAAUL,EAAKE,QAAQc,WAAU,SAAC1B,GAAC,OAAKU,EAAKiB,gBAAgB3B,EAAE,KACpEU,EAAKK,UAAUL,EAAKE,QAAQgB,SAAQ,SAAC5B,GAAC,OAAKU,EAAKmB,cAAc7B,EAAE,KAChEU,EAAKK,UAAUL,EAAKE,QAAQkB,uBAAsB,kBAAMpB,EAAKqB,cAAc,KAC3ErB,EAAKK,UAAUL,EAAKE,QAAQoB,qBAAoB,kBAAMtB,EAAKqB,cAAc,KACzErB,EAAKuB,YAAa,EAClBvB,EAAKwB,kBAAmB,EACxBxB,EAAKyB,eAAiB,KAAKzB,CAC/B,CAoJC,OApJAhC,EAAAA,EAAAA,GAAA0B,EAAA,EAAAzB,IAAA,eAAAC,MACD,WACIJ,KAAK4D,oBACL5D,KAAK2D,eAAiB,KACtB3D,KAAKyD,YAAa,EAClBzD,KAAK0D,kBAAmB,CAC5B,GAAC,CAAAvD,IAAA,kBAAAC,MACD,SAAgBoB,GACPxB,KAAKoC,QAAQyB,UAAU,MAAsC7D,KAAKoC,QAAQyB,UAAU,MAGrFtC,EAAmBC,KACnBxB,KAAK0D,kBAAmB,GAExB1D,KAAKyD,YAAclC,EAAmBC,IACtCxB,KAAKoC,QAAQ0B,cAAc,CACvBC,WAAY,SAGxB,GAAC,CAAA5D,IAAA,gBAAAC,MACD,SAAcoB,GACLxB,KAAKoC,QAAQyB,UAAU,MAAsC7D,KAAKoC,QAAQyB,UAAU,MAGrFtC,EAAmBC,KACnBxB,KAAK0D,kBAAmB,GAExB1D,KAAKyD,YAAcjC,EAAEwC,UAAYpC,EAAsBqC,mBACvDjE,KAAKoC,QAAQ0B,cAAc,CACvBC,WAAY,YAGxB,GAAC,CAAA5D,IAAA,qBAAAC,MACD,SAAmB8D,GACflE,KAAKyD,YAAa,CACtB,GAAC,CAAAtD,IAAA,mBAAAC,MACD,SAAiB8D,GACblE,KAAKyD,YAAa,EAElBzD,KAAKoC,QAAQ0B,cAAc,CACvBC,WAAY,QAEpB,GAAC,CAAA5D,IAAA,qBAAAC,MACD,SAAmB8D,GACf,IAAMC,EAASD,EAAWC,OAC1B,GAA4B,OAAxBnE,KAAK2D,eAAyB,CAC9B,IACMS,GADapE,KAAKoC,QAAQiC,iBAAmB,IACbC,QAAO,SAAA1E,GAAS,OAAIuE,EAAOI,UAAY3E,EAAUiB,iBAAiBsD,EAAOI,SAAS,IACxH,GAAkC,IAA9BH,EAAmBI,OAInB,OAHAxE,KAAK2D,eAAiBS,EAAmB,EAKjD,CACI7C,EAAmB2C,EAAWO,OAC9BzE,KAAKoC,QAAQ0B,cAAc,CACvBC,WAAY,SAIhB/D,KAAKoC,QAAQ0B,cAAc,CACvBC,WAAY,YAGhBI,EAAOI,WACHvE,KAAK2D,eAAe9C,iBAAiBsD,EAAOI,UAC5CvE,KAAK4D,oBAGL5D,KAAK0E,OAAOP,EAAOI,UAG/B,GAAC,CAAApE,IAAA,6BAAAC,MACD,WACIJ,KAAKoC,QAAQ0B,cAAc,CACvBC,WAAY,SAEhB/D,KAAK4D,oBACL5D,KAAK2D,eAAiB,KACtB3D,KAAKyD,YAAa,CACtB,GAAC,CAAAtD,IAAA,qBAAAC,MACD,SAAmB8D,GACf,GAAIA,EAAWC,SAAWnE,KAAK2E,YAAYT,EAAWC,SAAWnE,KAAK4E,WAAWV,EAAWC,UAAYD,EAAWC,OAAOI,SAAU,CAChI,IAAMM,EAAoB,IAAIC,EAAAA,EAASZ,EAAWC,OAAOI,SAAS5D,WAAYuD,EAAWC,OAAOI,SAAS3D,QACzG,GAA4B,OAAxBZ,KAAK2D,eAAyB,CAC9B,IAAIoB,EAAgB,KACpB,GAAIb,EAAWO,MAAMO,SAAU,CAC3B,IAAMC,EAAmBjF,KAAKoC,QAAQ8C,eACtC,GAAID,EAAkB,CAClB,IAAQE,EAAmDF,EAAnDE,yBAA0BC,EAAyBH,EAAzBG,qBAClCL,EAAgB,CAAC,IAAI9D,EAAAA,EAAUkE,EAA0BC,EAAsBP,EAAkBlE,WAAYkE,EAAkBjE,QACnI,CACJ,MAEImE,GAAiB/E,KAAKoC,QAAQiC,iBAAmB,IAAIgB,KAAI,SAAAzF,GACrD,OAAIA,EAAUiB,iBAAiBgE,GACpB,IAAI5D,EAAAA,EAAU4D,EAAkBlE,WAAYkE,EAAkBjE,OAAQiE,EAAkBlE,WAAYkE,EAAkBjE,QAGtHhB,CAEf,IAGJI,KAAKoC,QAAQkD,cAAcP,GAAiB,GAAI,QAAS,EAC7D,OACU/E,KAAK2D,eAAe9C,iBAAiBgE,KACzCtD,EAAmB2C,EAAWO,QAC5BzE,KAAK0D,oBAAsB1D,KAAK2D,eAAe7C,iBAAiBC,OAAO8D,IAAsB7E,KAAK2D,eAAe3C,mBAAmBD,OAAO8D,OAE/I7E,KAAKoC,QAAQmD,eACbvF,KAAKoC,QAAQoD,eAAe5D,EAAsB6D,GAAI,IAAI9F,EAAmBK,KAAK2D,eAAgBkB,EAAmBtD,EAAmB2C,EAAWO,QAAUzE,KAAK0D,mBAClK1D,KAAKoC,QAAQmD,eAErB,CACAvF,KAAKoC,QAAQ0B,cAAc,CACvBC,WAAY,SAEhB/D,KAAK4D,oBACL5D,KAAK2D,eAAiB,KACtB3D,KAAKyD,YAAa,CACtB,GAAC,CAAAtD,IAAA,SAAAC,MACD,SAAOmE,GACHvE,KAAKqC,kBAAkBqD,IAAI,CAAC,CACpBC,MAAO,IAAIjF,EAAAA,EAAM6D,EAAS5D,WAAY4D,EAAS3D,OAAQ2D,EAAS5D,WAAY4D,EAAS3D,QACrFgF,QAAShE,EAAsBiE,uBAEvC7F,KAAKoC,QAAQ0D,eAAevB,EAAU,EAC1C,GAAC,CAAApE,IAAA,oBAAAC,MACD,WACIJ,KAAKqC,kBAAkB0D,OAC3B,GAAC,CAAA5F,IAAA,cAAAC,MACD,SAAY+D,GACR,OAAuB,IAAhBA,EAAO6B,MACM,IAAhB7B,EAAO6B,IACf,GAAC,CAAA7F,IAAA,aAAAC,MACD,SAAW+D,GACP,OAAuB,IAAhBA,EAAO6B,MACM,IAAhB7B,EAAO6B,MACS,IAAhB7B,EAAO6B,IACf,GAAC,CAAA7F,IAAA,UAAAC,MACD,WACIJ,KAAK4D,oBACL5D,KAAK2D,eAAiB,KACtB3D,KAAKyD,YAAa,EAClBzD,KAAK0D,kBAAmB,GACxBuC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAtE,EAAAuE,WAAA,gBAAAhE,KAAA,KACJ,KAACP,CAAA,CArK6B,CAASwE,EAAAA,IAuK3CxE,EAAsB6D,GAAK,6BAC3B7D,EAAsBqC,kBAAoBxC,EAAAA,GAAc,EAAsB,EAC9EG,EAAsBiE,oBAAsBQ,EAAAA,GAAuBC,SAAS,CACxEC,YAAa,aACbC,UAAW,gBAEfC,EAAAA,EAAAA,IAA2B7E,EAAsB6D,GAAI7D,EAAuB,E,8GC9LxE8E,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAU9G,GAAS,IAAM+G,EAAKL,EAAUM,KAAKhH,GAAS,CAAE,MAAOoB,GAAKyF,EAAOzF,EAAI,CAAE,CAC1F,SAAS6F,EAASjH,GAAS,IAAM+G,EAAKL,EAAiB,MAAE1G,GAAS,CAAE,MAAOoB,GAAKyF,EAAOzF,EAAI,CAAE,CAC7F,SAAS2F,EAAKG,GAJlB,IAAelH,EAIakH,EAAOC,KAAOP,EAAQM,EAAOlH,QAJ1CA,EAIyDkH,EAAOlH,MAJhDA,aAAiByG,EAAIzG,EAAQ,IAAIyG,GAAE,SAAUG,GAAWA,EAAQ5G,EAAQ,KAIjBoH,KAAKN,EAAWG,EAAW,CAC7GF,GAAML,EAAYA,EAAUW,MAAMd,EAASC,GAAc,KAAKQ,OAClE,GACJ,EAOAM,EAAAA,EAAiBC,gBAAgB,kCAAkC,SAAUC,GAAmB,QAAAC,EAAAC,UAAAtD,OAANuD,EAAI,IAAAC,MAAAH,EAAA,EAAAA,EAAA,KAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAJF,EAAIE,EAAA,GAAAH,UAAAG,GAC1F,OAAOvB,EAAU1G,UAAM,OAAQ,GAAMkI,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAN,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAtB,MAAA,OAKjB,OAJXiB,EAAYN,EAAI,IACvBa,EAAAA,EAAAA,IAAWC,EAAAA,EAAIC,MAAMT,IACfC,EAAiBV,EAASmB,IAAIC,EAAAA,IAC9BT,EAAeX,EAASmB,IAAIE,EAAAA,GAAkBP,EAAAtB,KAAA,EAC5BmB,EAAaW,qBAAqBb,GAAS,OAEvD,OAFNG,EAASE,EAAAS,KAAAT,EAAAC,KAAG,EAAHD,EAAAtB,KAAG,GAEAkB,EAAec,YAAYZ,EAAUa,OAAOC,gBAAiBC,EAAAA,EAAkBC,MAAK,eAAAd,EAAAe,OAAA,SAAAf,EAAAS,KAAEO,sBAAkB,QAGlG,OAHkGhB,EAAAC,KAAA,GAGtHH,EAAUmB,UAAUjB,EAAAkB,OAAA,6BAAAlB,EAAAmB,OAAA,GAAAzB,EAAA,sBAGhC,G,2WC7BI0B,EAA0C,SAAUC,EAAY5F,EAAQhE,EAAK6J,GAC7E,IAA2HC,EAAvHC,EAAIpC,UAAUtD,OAAQ2F,EAAID,EAAI,EAAI/F,EAAkB,OAAT6F,EAAgBA,EAAOI,OAAOC,yBAAyBlG,EAAQhE,GAAO6J,EACrH,GAAuB,kBAAZM,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASR,EAAY5F,EAAQhE,EAAK6J,QACpH,IAAK,IAAIQ,EAAIT,EAAWvF,OAAS,EAAGgG,GAAK,EAAGA,KAASP,EAAIF,EAAWS,MAAIL,GAAKD,EAAI,EAAID,EAAEE,GAAKD,EAAI,EAAID,EAAE9F,EAAQhE,EAAKgK,GAAKF,EAAE9F,EAAQhE,KAASgK,GAChJ,OAAOD,EAAI,GAAKC,GAAKC,OAAOK,eAAetG,EAAQhE,EAAKgK,GAAIA,CAChE,EACIO,EAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUzG,EAAQhE,GAAOyK,EAAUzG,EAAQhE,EAAKwK,EAAa,CACxE,EACIjE,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAU9G,GAAS,IAAM+G,EAAKL,EAAUM,KAAKhH,GAAS,CAAE,MAAOoB,GAAKyF,EAAOzF,EAAI,CAAE,CAC1F,SAAS6F,EAASjH,GAAS,IAAM+G,EAAKL,EAAiB,MAAE1G,GAAS,CAAE,MAAOoB,GAAKyF,EAAOzF,EAAI,CAAE,CAC7F,SAAS2F,EAAKG,GAJlB,IAAelH,EAIakH,EAAOC,KAAOP,EAAQM,EAAOlH,QAJ1CA,EAIyDkH,EAAOlH,MAJhDA,aAAiByG,EAAIzG,EAAQ,IAAIyG,GAAE,SAAUG,GAAWA,EAAQ5G,EAAQ,KAIjBoH,KAAKN,EAAWG,EAAW,CAC7GF,GAAML,EAAYA,EAAUW,MAAMd,EAASC,GAAc,KAAKQ,OAClE,GACJ,EAcayD,EAAW,oBAAAA,KAAA9K,EAAAA,EAAAA,GAAA,KAAA8K,EAAA,CA0BnB,OA1BmB3K,EAAAA,EAAAA,GAAA2K,EAAA,EAAA1K,IAAA,SAAAC,MACpB,WACI,IAAI0K,EACmB,QAAtBA,EAAK9K,KAAK+K,cAA2B,IAAPD,GAAyBA,EAAGE,SAASC,OAAOjL,KAAKkL,GACpF,IAAC,EAAA/K,IAAA,SAAAC,MACD,SAAc+K,EAAWC,GAGrB,IAAIC,EACqB,kBAAdF,EACPE,EAAc,GAAHC,OAAMF,EAAUF,GAAE,KAAAI,OAAIH,IAGjCE,EAAc,GAAHC,OAAMF,EAAUF,GAAE,KAAAI,OAAIH,EAAUI,WACCC,IAAxCJ,EAAUJ,SAASjC,IAAIsC,KACvBA,EAAc,GAAHC,OAAMF,EAAUF,GAAE,KAAAI,OAAIH,EAAUI,KAAI,KAAAD,OAAIH,EAAUxF,MAAMxE,gBAAe,KAAAmK,OAAIH,EAAUxF,MAAMtE,eAI9G,IADA,IAAI6J,EAAKG,EACAb,EAAI,OAAkCgB,IAA/BJ,EAAUJ,SAASjC,IAAImC,GAAmBV,IACtDU,EAAK,GAAHI,OAAMD,EAAW,KAAAC,OAAId,GAE3B,OAAOU,CACX,GAAC,CAAA/K,IAAA,QAAAC,MACD,SAAaqL,GACT,OAAiC,IAA1BA,EAAQT,SAASU,IAC5B,KAACb,CAAA,CA1BmB,GA4BXc,EAAc,SAAAC,IAAA9J,EAAAA,EAAAA,GAAA6J,EAAAC,GAAA,IAAA7J,GAAAC,EAAAA,EAAAA,GAAA2J,GACvB,SAAAA,EAAYT,EAAIH,EAAQc,GAAQ,IAAA3J,EAKF,OALEnC,EAAAA,EAAAA,GAAA,KAAA4L,IAC5BzJ,EAAAH,EAAAI,KAAA,OACK+I,GAAKA,EACVhJ,EAAK6I,OAASA,EACd7I,EAAK2J,OAASA,EACd3J,EAAK8I,SAAW,IAAIc,IAAM5J,CAC9B,CAAC,OAAAhC,EAAAA,EAAAA,GAAAyL,EAAA,CAPsB,CAASd,GASvBkB,EAAY,SAAAC,IAAAlK,EAAAA,EAAAA,GAAAiK,EAAAC,GAAA,IAAAC,GAAAjK,EAAAA,EAAAA,GAAA+J,GACrB,SAAAA,EAAYb,EAAIH,EAAQmB,EAAOC,GAAO,IAAAC,EAMR,OANQrM,EAAAA,EAAAA,GAAA,KAAAgM,IAClCK,EAAAH,EAAA9J,KAAA,OACK+I,GAAKA,EACVkB,EAAKrB,OAASA,EACdqB,EAAKF,MAAQA,EACbE,EAAKD,MAAQA,EACbC,EAAKpB,SAAW,IAAIc,IAAMM,CAC9B,CAAC,OAAAlM,EAAAA,EAAAA,GAAA6L,EAAA,CARoB,CAASlB,GAUrBwB,EAAY,SAAAC,IAAAxK,EAAAA,EAAAA,GAAAuK,EAAAC,GAAA,IAAAC,GAAAvK,EAAAA,EAAAA,GAAAqK,GAuDrB,SAAAA,EAAYG,GAAK,IAAAC,EAQW,OARX1M,EAAAA,EAAAA,GAAA,KAAAsM,IACbI,EAAAF,EAAApK,KAAA,OACKqK,IAAMA,EACXC,EAAKvB,GAAK,OACVuB,EAAK1B,YAASS,EACdiB,EAAKC,QAAU,IAAIZ,IACnBW,EAAKzB,SAAW,IAAIc,IACpBW,EAAKvB,GAAK,OACVuB,EAAK1B,YAASS,EAAUiB,CAC5B,CA4DC,OA5DAvM,EAAAA,EAAAA,GAAAmM,EAAA,EAAAlM,IAAA,WAAAC,MACD,WACI,IACuCuM,EADnCC,EAAQ,EAAEC,GAAAC,EAAAA,EAAAA,GACa9M,KAAK0M,SAAO,IAAvC,IAAAG,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAzF,MAAyC,KAAA0F,GAAAC,EAAAA,EAAAA,GAAAP,EAAAvM,MAAA,GAA7BD,EAAG8M,EAAA,GACiB,IADVA,EAAA,GACRjC,SAASU,KACf1L,KAAK0M,QAAQzB,OAAO9K,GAGpByM,GAAS,CAEjB,CAAC,OAAAO,GAAAN,EAAArL,EAAA2L,EAAA,SAAAN,EAAAO,GAAA,CACD,GAAc,IAAVR,EAEA5M,KAAKgL,SAAWhL,KAAK0M,YAEpB,CAED,IACsCW,EADhCC,EAAQC,EAAAA,EAASC,MAAMxN,KAAK0M,QAAQe,UAAUC,GAAAZ,EAAAA,EAAAA,GAC5BQ,EAAMtC,UAAQ,IAAtC,IAAA0C,EAAAX,MAAAM,EAAAK,EAAAV,KAAAzF,MAAwC,KAA1BoG,GAA0BT,EAAAA,EAAAA,GAAAG,EAAAjN,MAAA,GAArB,GACfuN,EAAM5C,OAAS/K,KACfA,KAAKgL,SAAStF,IAAIiI,EAAMzC,GAAIyC,EAChC,CAAC,OAAAR,GAAAO,EAAAlM,EAAA2L,EAAA,SAAAO,EAAAN,GAAA,CACL,CACA,OAAOpN,IACX,GAAC,CAAAG,IAAA,qBAAAC,MACD,WACI,IAC0CwN,EADpCC,EAAQ,GAAGC,GAAAhB,EAAAA,EAAAA,GACG9M,KAAKgL,SAASyC,UAAQ,IAA1C,IAAAK,EAAAf,MAAAa,EAAAE,EAAAd,KAAAzF,MAA4C,KAAjCoG,EAAKC,EAAAxN,MACRuN,aAAiBhC,EACjBkC,EAAME,KAAKJ,EAAM9B,QAGjBgC,EAAME,KAAItG,MAAVoG,GAAKG,EAAAA,EAAAA,GAAST,EAAAA,EAASlI,IAAIsI,EAAM3C,SAASyC,UAAU,SAAAE,GAAK,OAAIA,EAAM9B,MAAM,KAEjF,CAAC,OAAAsB,GAAAW,EAAAtM,EAAA2L,EAAA,SAAAW,EAAAV,GAAA,CACD,OAAOS,EAAMI,MAAK,SAACC,EAAGC,GAAC,OAAKzN,EAAAA,EAAM0N,yBAAyBF,EAAEvI,MAAOwI,EAAExI,MAAM,GAChF,GAAC,CAAAxF,IAAA,0BAAAC,MACD,WACI,IAAMyN,EAAQ7N,KAAK0J,qBACb2E,EAAS,GAEf,OADAhC,EAAaiC,wBAAwBD,EAAQR,EAAO,IAC7CQ,EAAOJ,MAAK,SAACC,EAAGC,GAAC,OAAKrJ,EAAAA,EAASyJ,QAAQ7N,EAAAA,EAAMM,iBAAiBkN,EAAEvI,OAAQjF,EAAAA,EAAMM,iBAAiBmN,EAAExI,SAAWb,EAAAA,EAASyJ,QAAQ7N,EAAAA,EAAMI,eAAeqN,EAAExI,OAAQjF,EAAAA,EAAMI,eAAeoN,EAAEvI,OAAO,GACrM,IAAC,EAAAxF,IAAA,SAAAC,MAzGD,SAAcoO,EAAUC,EAAWC,GAC/B,IAAMC,EAAM,IAAIC,EAAAA,EAAwBF,GAClCpH,EAAS,IAAI+E,EAAaoC,EAAUjC,KACpCqC,EAAWL,EAASM,QAAQL,GAC5BM,EAAWF,EAASxJ,KAAI,SAACwJ,EAAUG,GACrC,IAAIlE,EACEI,EAAKL,EAAYoE,OAAO,YAAD3D,OAAa0D,GAAS1H,GAC7CgG,EAAQ,IAAIvB,EAAab,EAAI5D,EAAwC,QAA/BwD,EAAK+D,EAASK,mBAAgC,IAAPpE,EAAgBA,EAAK,2BAA4BkE,GACpI,OAAOjI,QAAQC,QAAQ6H,EAASM,uBAAuBV,EAAWE,EAAID,QAAQlH,MAAK,SAAAF,GAAU,IAC1D8H,EAD0DC,GAAAvC,EAAAA,EAAAA,GACtExF,GAAU,IAAE,IAA/B,IAAA+H,EAAAtC,MAAAqC,EAAAC,EAAArC,KAAAzF,MAAiC,KAAtB+H,EAAIF,EAAAhP,MACXiM,EAAakD,oBAAoBD,EAAMhC,EAC3C,CAAC,OAAAH,GAAAkC,EAAA7N,EAAA2L,EAAA,SAAAkC,EAAAjC,GAAA,CACD,OAAOE,CACX,IAAG,SAAAH,GAEC,OADAqC,EAAAA,EAAAA,IAA0BrC,GACnBG,CACX,IAAG9F,MAAK,SAAA8F,GACCzC,EAAY4E,MAAMnC,GAInBA,EAAMoC,SAHNpI,EAAOoF,QAAQhH,IAAIwF,EAAIoC,EAK/B,GACJ,IACMqC,EAAWnB,EAASoB,aAAY,WAClC,IAAMC,EAAcrB,EAASM,QAAQL,IAChC1N,EAAAA,EAAAA,IAAO8O,EAAahB,IACrBF,EAAImB,QAEZ,IACA,OAAO/I,QAAQgJ,IAAIhB,GAAUvH,MAAK,WAC9B,OAAImH,EAAID,MAAMsB,0BAA4BtB,EAAMsB,wBACrC3D,EAAa4D,OAAOzB,EAAUC,EAAWC,GAGzCpH,EAAO4I,UAEtB,IAAGC,SAAQ,WACPxB,EAAIhF,UACJgG,EAAShG,UACTgF,EAAIhF,SACR,GACJ,GAAC,CAAAxJ,IAAA,sBAAAC,MACD,SAA2BkP,EAAMlE,GAC7B,IAAMF,EAAKL,EAAYoE,OAAOK,EAAMlE,GAC9BgF,EAAM,IAAIzE,EAAeT,EAAIE,EAAWkE,GAC9C,GAAIA,EAAKtE,SAAU,KACsBqF,EADtBC,GAAAxD,EAAAA,EAAAA,GACSwC,EAAKtE,UAAQ,IAArC,IAAAsF,EAAAvD,MAAAsD,EAAAC,EAAAtD,KAAAzF,MAAuC,KAA5BgJ,EAASF,EAAAjQ,MAChBiM,EAAakD,oBAAoBgB,EAAWH,EAChD,CAAC,OAAAjD,GAAAmD,EAAA9O,EAAA2L,EAAA,SAAAmD,EAAAlD,GAAA,CACL,CACAhC,EAAUJ,SAAStF,IAAI0K,EAAIlF,GAAIkF,EACnC,GAAC,CAAAjQ,IAAA,0BAAAC,MAqDD,SAA+BiO,EAAQmC,EAASC,GAAwB,IACzCC,EADyCC,GAAA7D,EAAAA,EAAAA,GAChD0D,GAAO,IAA3B,IAAAG,EAAA5D,MAAA2D,EAAAC,EAAA3D,KAAAzF,MAA6B,KAAlBqJ,EAAKF,EAAAtQ,MACZiO,EAAON,KAAK,CACR8C,KAAMD,EAAMC,KACZC,KAAMF,EAAME,KACZvF,KAAMqF,EAAMrF,KACZwF,OAAQH,EAAMG,OACdC,cAAeJ,EAAMI,eAAiBP,EACtC9K,MAAOiL,EAAMjL,MACbsL,eAAgBL,EAAMK,eACtBjG,cAAUQ,IAGVoF,EAAM5F,UACNqB,EAAaiC,wBAAwBD,EAAQuC,EAAM5F,SAAU4F,EAAMrF,KAE3E,CAAC,OAAA4B,GAAAwD,EAAAnP,EAAA2L,EAAA,SAAAwD,EAAAvD,GAAA,CACL,KAACf,CAAA,CA5HoB,CAASxB,GA8HrB7B,GAAuBkI,EAAAA,EAAAA,IAAgB,wBAChDC,EAAmB,WACnB,SAAAA,EAAYC,EAA0BC,EAAW9I,GAAc,IAAA+I,EAAA,MAAAvR,EAAAA,EAAAA,GAAA,KAAAoR,GAC3DnR,KAAKoR,yBAA2BA,EAChCpR,KAAKuR,aAAe,IAAIC,EAAAA,GACxBxR,KAAKyR,OAAS,IAAIC,EAAAA,GAAS,GAAI,IAC/B1R,KAAK2R,qBAAuBN,EAAUO,IAAIR,EAAyBS,uBAAwB,kBAAmB,CAAEC,IAAK,MAErH9R,KAAKuR,aAAaQ,IAAIxJ,EAAayJ,gBAAe,SAAAvD,GAC9C6C,EAAKG,OAAOxG,OAAOwD,EAAUvD,GACjC,IACJ,CAgDC,OAhDAhL,EAAAA,EAAAA,GAAAiR,EAAA,EAAAhR,IAAA,UAAAC,MACD,WACIJ,KAAKuR,aAAa5H,SACtB,GAAC,CAAAxJ,IAAA,cAAAC,MACD,SAAYqO,EAAWC,GACnB,OAAOhI,EAAU1G,UAAM,OAAQ,GAAMkI,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAAoG,EAAAK,EAAAoD,EAAAC,EAAAC,EAAAxC,EAAAyC,EAAA,YAAAlK,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAtB,MAAA,OAsBlC,GArBKoH,EAAWxO,KAAKoR,yBAAyBS,uBACzChD,EAAWL,EAASM,QAAQL,IAC9BwD,EAAOjS,KAAKyR,OAAO1I,IAAI0F,EAAUvD,MACxB+G,EAAKI,YAAc5D,EAAU6D,iBAAmBvR,EAAAA,EAAAA,IAAOkR,EAAKpD,SAAUA,KACzEqD,EAAS,IAAItD,EAAAA,EACnBqD,EAAO,CACHI,UAAW5D,EAAU6D,eACrBzD,SAAAA,EACA0D,WAAY,EACZL,OAAAA,EACAM,QAASnG,EAAa4D,OAAOzB,EAAUC,EAAWyD,EAAOxD,OACzDrO,WAAOmL,GAEXxL,KAAKyR,OAAO/L,IAAI+I,EAAUvD,GAAI+G,GACxBE,EAAMM,KAAKN,MACjBF,EAAKO,QAAQhL,MAAK,SAAAkL,GACdT,EAAK5R,MAAQqS,EACbN,EAAKT,qBAAqBgB,OAAOlE,EAAWgE,KAAKN,MAAQA,EAC7D,IAAGS,OAAM,SAAAC,GACLT,EAAKX,OAAOxG,OAAOwD,EAAUvD,GACjC,MAEA+G,EAAK5R,MAAO,CAAFqI,EAAAtB,KAAA,eAAAsB,EAAAe,OAAA,SAEHwI,EAAK5R,OAAK,OAYV,OATX4R,EAAKM,YAAc,EACb5C,EAAWjB,EAAMoE,yBAAwB,WAEjB,MAApBb,EAAKM,aACPN,EAAKC,OAAOpC,SACZsC,EAAKX,OAAOxG,OAAOwD,EAAUvD,IAErC,IAAExC,EAAAC,KAAA,EAAAD,EAAAtB,KAAA,GAEe6K,EAAKO,QAAO,eAAA9J,EAAAe,OAAA,SAAAf,EAAAS,MAAA,QAGN,OAHMT,EAAAC,KAAA,GAGzBgH,EAAShG,UAAUjB,EAAAkB,OAAA,6BAAAlB,EAAAmB,OAAA,GAAAzB,EAAA,sBAG/B,KAAC+I,CAAA,CA1DkB,GA4DvBA,EAAsBrH,EAAW,CAC7BY,EAAQ,EAAGqI,EAAAA,GACXrI,EAAQ,EAAGsI,EAAAA,GACXtI,EAAQ,EAAGuI,EAAAA,IACZ9B,IAEH+B,EAAAA,EAAAA,GAAkBlK,EAAsBmI,EAAqB,E,mCC7PzDgC,E,0WAlBArJ,EAA0C,SAAUC,EAAY5F,EAAQhE,EAAK6J,GAC7E,IAA2HC,EAAvHC,EAAIpC,UAAUtD,OAAQ2F,EAAID,EAAI,EAAI/F,EAAkB,OAAT6F,EAAgBA,EAAOI,OAAOC,yBAAyBlG,EAAQhE,GAAO6J,EACrH,GAAuB,kBAAZM,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASR,EAAY5F,EAAQhE,EAAK6J,QACpH,IAAK,IAAIQ,EAAIT,EAAWvF,OAAS,EAAGgG,GAAK,EAAGA,KAASP,EAAIF,EAAWS,MAAIL,GAAKD,EAAI,EAAID,EAAEE,GAAKD,EAAI,EAAID,EAAE9F,EAAQhE,EAAKgK,GAAKF,EAAE9F,EAAQhE,KAASgK,GAChJ,OAAOD,EAAI,GAAKC,GAAKC,OAAOK,eAAetG,EAAQhE,EAAKgK,GAAIA,CAChE,EACIO,EAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUzG,EAAQhE,GAAOyK,EAAUzG,EAAQhE,EAAKwK,EAAa,CACxE,EACIjE,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAU9G,GAAS,IAAM+G,EAAKL,EAAUM,KAAKhH,GAAS,CAAE,MAAOoB,GAAKyF,EAAOzF,EAAI,CAAE,CAC1F,SAAS6F,EAASjH,GAAS,IAAM+G,EAAKL,EAAiB,MAAE1G,GAAS,CAAE,MAAOoB,GAAKyF,EAAOzF,EAAI,CAAE,CAC7F,SAAS2F,EAAKG,GAJlB,IAAelH,EAIakH,EAAOC,KAAOP,EAAQM,EAAOlH,QAJ1CA,EAIyDkH,EAAOlH,MAJhDA,aAAiByG,EAAIzG,EAAQ,IAAIyG,GAAE,SAAUG,GAAWA,EAAQ5G,EAAQ,KAIjBoH,KAAKN,EAAWG,EAAW,CAC7GF,GAAML,EAAYA,EAAUW,MAAMd,EAASC,GAAc,KAAKQ,OAClE,GACJ,EAyBagM,EAA2B,yBAC3BC,EAAwB,IAAIC,EAAAA,GAAc,sBAAsB,GAAOC,EAAAA,EAAAA,IAAS,qBAAsB,wCAC7GC,EAAsB,oCACxBC,EAAsBN,EAAqB,SAAAtR,IAAAC,EAAAA,EAAAA,GAAA2R,EAAA5R,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAyR,GAI3C,SAAAA,EAAYxR,EAAQyR,EAAsBC,EAAkBC,EAAmBxC,EAA0ByC,EAAoBC,GAAkB,IAAA5R,GAAAnC,EAAAA,EAAAA,GAAA,KAAA0T,IAC3IvR,EAAAH,EAAAI,KAAA,OACKwR,iBAAmBA,EACxBzR,EAAK0R,kBAAoBA,EACzB1R,EAAKkP,yBAA2BA,EAChClP,EAAK2R,mBAAqBA,EAC1B3R,EAAK4R,iBAAmBA,EACxB5R,EAAKE,QAAUH,EACf,IAAMmJ,EAAYnJ,EAAO8R,sBAKuO,OAJhQ7R,EAAKK,WAAUyR,EAAAA,EAAAA,uBAAsB5I,EAAW,QAAQ,SAAA5J,GAAC,OAAIU,EAAK+R,WAAWzS,EAAE,KAC/EU,EAAKK,WAAUyR,EAAAA,EAAAA,uBAAsB5I,EAAW,OAAO,SAAA5J,GAAC,OAAIU,EAAK+R,WAAWzS,EAAE,KAC9EU,EAAKK,WAAUyR,EAAAA,EAAAA,uBAAsB5I,EAAW,SAAS,SAAA5J,GAAC,OAAIU,EAAKgS,YAAY1S,EAAE,IAAE,IACnFU,EAAKiS,sBAAwBjS,EAAKK,UAAU,IAAI6R,EAAAA,sBAAsB,kBAAmBnS,EAAQyR,IACjGxR,EAAKmS,wBAA0BnS,EAAKK,UAAUmR,EAAqBY,eAAeC,EAAAA,EAAuB,kBAAmBtS,EAAQoR,EAAuB,CAAEnI,GAAIkI,EAA0BlH,OAAOqH,EAAAA,EAAAA,IAAS,uBAAwB,4BAA6BrR,CACpQ,CAfC,OAeAhC,EAAAA,EAAAA,GAAAuT,EAAA,EAAAtT,IAAA,kBAAAC,MACD,WACIJ,KAAKqU,wBAAwBG,iBACjC,GAAC,CAAArU,IAAA,UAAAC,MACD,SAAQqU,GACJzU,KAAKoC,QAAQsS,QACb,IACI1U,KAAK2U,sBAAwB,CAAEF,YAAAA,IAC/BG,EAAAA,EAAAA,qBAAoBC,YAAY,QACpC,CAAC,QAEG7U,KAAK2U,2BAAwBnJ,CACjC,CACJ,GAAC,CAAArL,IAAA,mBAAAC,MACD,WACI,OAAOJ,KAAKoC,QAAQyB,UAAU,IAA+BiR,UACrD9U,KAAKoC,QAAQyB,UAAU,GACnC,GAAC,CAAA1D,IAAA,aAAAC,MACD,SAAWoB,GAAG,IACNsJ,EAAIiK,EADE3I,EAAA,KAEV,GAAKpM,KAAKoC,QAAQ4S,iBAGdC,EAAAA,IAIAjV,KAAK4T,kBAAkBsB,eAAe,IAErC1T,EAAE2T,eAAkBnV,KAAKoV,oBAA9B,CAGA,IAAM/U,EAAQL,KAAKoC,QAAQiT,WACrBC,EAAatV,KAAKoC,QAAQiC,gBAChC,GAAKhE,IAA0B,OAAfiV,QAAsC,IAAfA,OAAwB,EAASA,EAAW9Q,QAAnF,CAGA,IAAM+Q,EAAgCvV,KAAKoC,QAAQyB,UAAU,IACzD2R,EAASF,EACPG,EAA8C,IAAtBH,EAAW9Q,QAAgB8Q,EAAW,GAAGI,UACvE,GAAID,EAAuB,CACvB,IAAKF,EACD,OAEJC,EAAS,CAAC,IAAI9U,EAAAA,EAAM8U,EAAO,GAAGrU,gBAAiB,EAAGqU,EAAO,GAAGrU,gBAAiB,EAAId,EAAMsV,cAAcH,EAAO,GAAGrU,kBACnH,CACA,IAAMyU,EAAiD,QAAvC9K,EAAK9K,KAAKoC,QAAQyT,uBAAoC,IAAP/K,OAAgB,EAASA,EAAGgL,mBAAmBR,EAAYC,EAA+BN,EAAAA,IAEnJc,EAAsB,CACxBC,gBAFoBhO,MAAMiO,QAAQL,GAAUA,EAAS,KAGrDM,eAAgBT,EAChBU,KAAM,MAEJC,EAAYpW,KAAKoR,yBAAyBiF,0BAC3CvH,QAAQzO,GACRiE,QAAO,SAAAgS,GAAC,QAAMA,EAAEC,oBAAoB,IACzC,GAAKH,EAAU5R,OAAf,CAIA,IAAMgS,GAAeC,EAAAA,EAAAA,GAAiBjV,EAAE2T,eAClCuB,EAAwBN,EAAUO,SAAQ,SAAAL,GAAO,IAAIxL,EAAI,OAAkC,QAA1BA,EAAKwL,EAAEM,qBAAkC,IAAP9L,EAAgBA,EAAK,EAAI,IAE5H+L,GAASC,EAAAA,EAAAA,KACf9W,KAAK+W,gBAAgBvV,EAAE2T,cAAe,CAClCjK,GAAI2L,EACJH,sBAAAA,EACAX,oBAAAA,IAEJ,IAAMvD,GAAUwE,EAAAA,EAAAA,KAAwB,SAACtI,GAAK,OAAKhI,EAAU0F,OAAM,OAAQ,GAAMlE,EAAAA,EAAAA,KAAAC,MAAE,SAAA8O,IAAA,IAAAC,EAAArK,EAAAF,EAAArF,EAAAoG,EAAAL,EAAA8J,EAAAC,EAAAhX,EAAAqM,EAAA,YAAAvE,EAAAA,EAAAA,KAAAO,MAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAjQ,MAAA,OACtD,OADsDiQ,EAAAC,GAC/DC,EAAAA,GAAQF,EAAAjQ,KAAA,EAAOL,QAAQgJ,IAAIqG,EAAU/Q,KAAI,SAACwJ,GAAQ,OAAKnI,EAAU+F,OAAM,OAAQ,GAAMvE,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAtB,MAAA,OAExF,OAFwFsB,EAAAC,KAAA,EAAAD,EAAAtB,KAAA,EAElFyH,EAAS0H,qBAAqBlW,EAAOmV,EAAQgB,EAAc9H,GAAM,cAAAhG,EAAAe,OAAA,SAAAf,EAAAS,MAAA,OAG3D,OAH2DT,EAAAC,KAAA,EAAAD,EAAA4O,GAAA5O,EAAA,SAG9E8O,QAAQC,MAAK/O,EAAA4O,IAAM5O,EAAAe,OAAA,cACZ+B,GAAS,yBAAA9C,EAAAmB,OAAA,GAAAzB,EAAA,iBAEtB,KAAE,OAAAiP,EAAAK,GAAAL,EAAAlO,MARE+N,GAAU,EAAHG,EAAAC,IAAAD,EAAAK,KAWLC,UAAU9K,GAAAC,EAAAA,EAAAA,GACGoK,GAAO,IAA5B,IAAArK,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAzF,MAA8B,CAAnBD,EAAMqF,EAAAvM,MAAAsN,GAAAZ,EAAAA,EAAAA,GACexF,GAAM,IAAlC,IAAAoG,EAAAX,MAAAM,EAAAK,EAAAV,KAAAzF,MAAoC4P,GAAAjK,EAAAA,EAAAA,GAAAG,EAAAjN,MAAA,GAAxBgX,EAAID,EAAA,GAAE/W,EAAK+W,EAAA,GACnBX,EAAaoB,QAAQR,EAAMhX,EAC9B,OAAA+M,GAAAO,EAAAlM,EAAA2L,EAAA,SAAAO,EAAAN,GAAA,CACL,CAAC,OAAAD,GAAAN,EAAArL,EAAA2L,EAAA,SAAAN,EAAAO,GAAA,QAAAiK,EAAA5N,OAAA,SACM+M,GAAY,wBAAAa,EAAAxN,OAAA,GAAAoN,EAAA,IACrB,IACoC,QAArClC,EAAK/U,KAAK6X,6BAA0C,IAAP9C,GAAyBA,EAAG+C,oBAAoBhI,SAC9F9P,KAAK6X,sBAAwB,CAAEhB,OAAQA,EAAQiB,oBAAqBtF,EA/BpE,MAFIxS,KAAK+W,gBAAgBvV,EAAE2T,cAAe,CAAEY,oBAAAA,GArB5C,CALA,CA4DJ,GAAC,CAAA5V,IAAA,cAAAC,MACD,SAAYoB,GACR,IAAIsJ,EAAIiK,EACR,OAAOrO,EAAU1G,UAAM,OAAQ,GAAMkI,EAAAA,EAAAA,KAAAC,MAAE,SAAA4P,IAAA,IAAA1X,EAAAiV,EAAA0C,EAAAxB,EAAAyB,EAAAC,EAAA,OAAAhQ,EAAAA,EAAAA,KAAAO,MAAA,SAAA0P,GAAA,cAAAA,EAAAxP,KAAAwP,EAAA/Q,MAAA,UAC9B5F,EAAE2T,eAAkBnV,KAAKoC,QAAQ4S,eAAc,CAAAmD,EAAA/Q,KAAA,eAAA+Q,EAAA1O,OAAA,iBAML,GAHR,QAAtCqB,EAAK9K,KAAKoY,8BAA2C,IAAPtN,GAAyBA,EAAGgF,SAC3E9P,KAAKoY,4BAAyB5M,EACxBnL,EAAQL,KAAKoC,QAAQiT,YAEN,QADfC,EAAatV,KAAKoC,QAAQiC,uBACY,IAAfiR,OAAwB,EAASA,EAAW9Q,SAAYnE,EAAK,CAAA8X,EAAA/Q,KAAA,eAAA+Q,EAAA1O,OAAA,oBAGrFzJ,KAAKoV,mBAAoB,CAAF+C,EAAA/Q,KAAA,gBAAA+Q,EAAA1O,OAAA,kBAgBkJ,GAbxKuO,EAAWhY,KAAKqY,kBAAkB7W,IAClCgV,GAAe8B,EAAAA,EAAAA,GAAyB9W,EAAE2T,gBACnClK,OAAOuI,GACdyE,EAAwB,GAAH3M,QAAA0C,EAAAA,EAAAA,GACpBxM,EAAE2T,cAAcoD,QAAKvK,EAAAA,EAAAA,GACyE,QAA7F+G,EAAkB,OAAbiD,QAAkC,IAAbA,OAAsB,EAASA,EAAStB,6BAA0C,IAAP3B,EAAgBA,EAAK,IAAE,CAIhIyD,EAAAA,EAAMC,UAEJP,EAAelY,KAAKoR,yBAAyBiF,0BAC9CvH,QAAQzO,GACRiE,QAAO,SAAAuK,GAAc,IAAI/D,EAAI,OAA0C,QAAlCA,EAAK+D,EAAS6J,sBAAmC,IAAP5N,OAAgB,EAASA,EAAG6N,MAAK,SAAA3S,GAAI,OAAI4S,EAAAA,EAAAA,IAAgB5S,EAAMiS,EAAsB,GAAG,IACvKC,EAAa1T,OAAQ,CAAF2T,EAAA/Q,KAAA,gBAAA+Q,EAAA1O,OAAA,kBAMxBjI,EAAEqX,iBACFrX,EAAEsX,2BACE9Y,KAAK2U,sBACL3U,KAAK+Y,gBAAgB/Y,KAAK2U,sBAAsBF,YAAayD,EAAc5C,EAAYkB,EAAcwB,GAGrGhY,KAAKgZ,cAAcd,EAAc5C,EAAYkB,EAAcwB,GAC9D,yBAAAG,EAAAtO,OAAA,GAAAkO,EAAA,SAET,GAAC,CAAA5X,IAAA,gBAAAC,MACD,SAAc8X,EAAc5C,EAAYkB,EAAcwB,GAAU,IAAA1G,EAAA,KACtD2H,GAAIjC,EAAAA,EAAAA,KAAwB,SAACtI,GAAK,OAAKhI,EAAU4K,OAAM,OAAQ,GAAMpJ,EAAAA,EAAAA,KAAAC,MAAE,SAAA+Q,IAAA,IAAAjX,EAAA5B,EAAA8Y,EAAAC,EAAAC,EAAAC,EAAA,OAAApR,EAAAA,EAAAA,KAAAO,MAAA,SAAA8Q,GAAA,cAAAA,EAAA5Q,KAAA4Q,EAAAnS,MAAA,OAC9C,IAArBnF,EAASjC,KAAKoC,SACRoX,WAAY,CAAFD,EAAAnS,KAAA,eAAAmS,EAAA9P,OAAA,iBAMlB,OAHEpJ,EAAQ4B,EAAOoT,WACf8D,EAAc,IAAIM,EAAAA,GAAmCxX,EAAQ,OAA2EuJ,EAAWkD,GAAM6K,EAAA5Q,KAAA,EAAA4Q,EAAAnS,KAAA,EAErJpH,KAAK0Z,oBAAoBlD,EAAcwB,EAAUmB,EAAYzK,OAAM,WACrEyK,EAAYzK,MAAMsB,wBAAyB,CAAFuJ,EAAAnS,KAAA,gBAAAmS,EAAA9P,OAAA,kBAI+D,IAAtG2P,EAAqBlB,EAAa5T,QAAO,SAAAuK,GAAQ,OAAI8K,EAAyB9K,EAAU2H,EAAa,KACnFhS,SACc,IAA9B4U,EAAmB5U,QAA6C,SAA7B4U,EAAmB,GAAGlO,IAAe,CAAAqO,EAAAnS,KAAA,SAE5E,OAF4EmS,EAAAnS,KAAA,GAEtEpH,KAAK4Z,yBAAyBpD,EAAcwB,EAAUmB,EAAYzK,OAAM,QASA,eAAA6K,EAAA9P,OAAA,UATA,QAG5D,OAH4D8P,EAAAnS,KAAA,GAGtDpH,KAAK6Z,cAAcT,EAAoB5C,EAAcnW,EAAOiV,EAAY6D,EAAYzK,OAAM,QAAnG,GAAb2K,EAAaE,EAAApQ,MACfgQ,EAAYzK,MAAMsB,wBAAyB,CAAFuJ,EAAAnS,KAAA,gBAAAmS,EAAA9P,OAAA,qBAIhB,IAAzB4P,EAAc7U,QAAgD,SAAhC6U,EAAc,GAAGS,WAAqB,CAAAP,EAAAnS,KAAA,SACpE,OADoEmS,EAAAnS,KAAA,GAC9DpH,KAAK4Z,yBAAyBpD,EAAcwB,EAAUmB,EAAYzK,OAAM,YAG9E2K,EAAc7U,OAAQ,CAAF+U,EAAAnS,KAAA,SACoF,OAAlGkS,EAAsF,eAAtErX,EAAO4B,UAAU,IAA+BkW,kBAAkCR,EAAA9P,OAAA,SACjGzJ,KAAKqU,wBAAwB2F,yBAAyB1E,EAAY,CAAE2E,gBAAiB,EAAGC,SAAUb,GAAiBC,EAAeH,EAAYzK,QAAM,QAE/J,OAF+J6K,EAAAnS,KAAA,GAEzJpH,KAAK4Z,yBAAyBpD,EAAcwB,EAAUmB,EAAYzK,OAAM,QAM7E,OAN6E6K,EAAA5Q,KAAA,GAG9EwQ,EAAYxP,UACR3J,KAAKoY,yBAA2Ba,IAChCjZ,KAAKoY,4BAAyB5M,GACjC+N,EAAA3P,OAAA,6BAAA2P,EAAA1P,OAAA,GAAAqP,EAAA,sBAEP,IACFlZ,KAAKmU,sBAAsBgG,UAAU7E,EAAW,GAAGxU,kBAAkByS,EAAAA,EAAAA,IAAS,0BAA2B,2CAA4C0F,GACrJjZ,KAAKoY,uBAAyBa,CAClC,GAAC,CAAA9Y,IAAA,kBAAAC,MACD,SAAgBqU,EAAayD,EAAc5C,EAAYkB,EAAcwB,GAAU,IAAA5F,EAAA,KACrE6G,GAAIjC,EAAAA,EAAAA,KAAwB,SAACtI,GAAK,OAAKhI,EAAU0L,OAAM,OAAQ,GAAMlK,EAAAA,EAAAA,KAAAC,MAAE,SAAAiS,IAAA,IAAAnY,EAAA5B,EAAA8Y,EAAAC,EAAAC,EAAAgB,EAAAC,EAAAC,EAAA,OAAArS,EAAAA,EAAAA,KAAAO,MAAA,SAAA+R,GAAA,cAAAA,EAAA7R,KAAA6R,EAAApT,MAAA,OAC9C,IAArBnF,EAASjC,KAAKoC,SACRoX,WAAY,CAAFgB,EAAApT,KAAA,eAAAoT,EAAA/Q,OAAA,iBAMlB,OAHEpJ,EAAQ4B,EAAOoT,WACf8D,EAAc,IAAIM,EAAAA,GAAmCxX,EAAQ,OAA2EuJ,EAAWkD,GAAM8L,EAAA7R,KAAA,EAAA6R,EAAApT,KAAA,EAErJpH,KAAK0Z,oBAAoBlD,EAAcwB,EAAUmB,EAAYzK,OAAM,WACrEyK,EAAYzK,MAAMsB,wBAAyB,CAAFwK,EAAApT,KAAA,gBAAAoT,EAAA/Q,OAAA,kBASvB,OALlB2P,EAAqBlB,EAAa5T,QAAO,SAAAuK,GAAQ,OAAI8K,EAAyB9K,EAAU2H,EAAa,IACrG/B,IAEA2E,EAAqBA,EAAmB9U,QAAO,SAAAmW,GAAI,OAAIA,EAAKvP,KAAOuJ,CAAW,KACjF+F,EAAApT,KAAA,GAC2BpH,KAAK6Z,cAAcT,EAAoB5C,EAAcnW,EAAOiV,EAAY6D,EAAYzK,OAAM,QAAnG,GAAb2K,EAAamB,EAAArR,MACfgQ,EAAYzK,MAAMsB,wBAAyB,CAAFwK,EAAApT,KAAA,gBAAAoT,EAAA/Q,OAAA,qBAGxC4P,EAAc7U,OAAQ,CAAFgW,EAAApT,KAAA,gBAAAoT,EAAA/Q,OAAA,sBAIrBgL,EAAa,CAAF+F,EAAApT,KAAA,SACXiT,EAAahB,EAAcqB,GAAG,GAAGF,EAAApT,KAAA,iBAGhB,OAHgBoT,EAAApT,KAAA,GAGVpH,KAAK6T,mBAAmB8G,KAAKtB,EAAchU,KAAI,SAACoV,GAAI,MAAM,CAC7EvO,MAAOuO,EAAKvO,MACZ3F,YAAakU,EAAKX,WAClB/I,OAAQ0J,EAAK1J,OACb0J,KAAAA,EACH,IAAI,CACDG,aAAarH,EAAAA,EAAAA,IAAS,2BAA4B,yBACpD,QAPI+G,EAAQE,EAAArR,KAQdkR,EAA0B,OAAbC,QAAkC,IAAbA,OAAsB,EAASA,EAASG,KAAK,WAE9EJ,EAAY,CAAFG,EAAApT,KAAA,gBAAAoT,EAAA/Q,OAAA,kBAIf,OADM8Q,GAAwBM,EAAAA,EAAAA,GAA4Bxa,EAAMmM,IAAK8I,EAAY+E,GAAWG,EAAApT,KAAA,GACtFpH,KAAK2T,iBAAiBlM,MAAM8S,EAAuB,CAAEtY,OAAQjC,KAAKoC,UAAU,QAMjF,OANiFoY,EAAA7R,KAAA,GAGlFwQ,EAAYxP,UACR3J,KAAKoY,yBAA2Ba,IAChCjZ,KAAKoY,4BAAyB5M,GACjCgP,EAAA5Q,OAAA,6BAAA4Q,EAAA3Q,OAAA,GAAAuQ,EAAA,sBAEP,IACFpa,KAAK8T,iBAAiBgH,aAAa,CAC/BC,SAAU,GACVC,OAAOzH,EAAAA,EAAAA,IAAS,kBAAmB,4BACpC,kBAAM0F,CAAC,GACd,GAAC,CAAA9Y,IAAA,kBAAAC,MACD,SAAgBoW,EAAcwB,GAC1BxB,EAAayE,QAAQzH,EAAqB0H,KAAKC,UAAUnD,GAC7D,GAAC,CAAA7X,IAAA,oBAAAC,MACD,SAAkBoB,GACd,IAAIsJ,EACJ,GAAKtJ,EAAE2T,cAAP,CAIA,IAAMiG,EAAc5Z,EAAE2T,cAAckG,QAAQ7H,GAC5C,GAAI4H,EACA,IACI,OAAOF,KAAKI,MAAMF,EACtB,CACA,MAAOrG,GACH,MACJ,CAGJ,IAAAwG,EAAsBC,EAAAA,GAAoBC,YAAYja,EAAE2T,eAAcuG,GAAAxO,EAAAA,EAAAA,GAAAqO,EAAA,GAA5DvD,GAAF0D,EAAA,GAAUA,EAAA,IAClB,OAAI1D,EACO,CACHjC,oBAAqB,CACjBI,KAAM6B,EAAS7B,KACfH,gBAAqD,QAAnClL,EAAKkN,EAAShC,uBAAoC,IAAPlL,EAAgBA,EAAK,KAClFoL,iBAAkB8B,EAAS2D,4BALvC,CAbA,CAuBJ,GAAC,CAAAxb,IAAA,sBAAAC,MACD,SAAoBoW,EAAcwB,EAAUtJ,GACxC,IAAI5D,EACJ,OAAOpE,EAAU1G,UAAM,OAAQ,GAAMkI,EAAAA,EAAAA,KAAAC,MAAE,SAAAyT,IAAA,IAAAC,EAAA/N,EAAAF,EAAAkO,EAAA3b,EAAAC,EAAA2b,EAAA,OAAA7T,EAAAA,EAAAA,KAAAO,MAAA,SAAAuT,GAAA,cAAAA,EAAArT,KAAAqT,EAAA5U,MAAA,YACjB,OAAb4Q,QAAkC,IAAbA,OAAsB,EAASA,EAAS9M,MAA8C,QAArCJ,EAAK9K,KAAK6X,6BAA0C,IAAP/M,OAAgB,EAASA,EAAG+L,UAAYmB,EAAS9M,GAAE,CAAA8Q,EAAA5U,KAAA,QAC3I,OAD2I4U,EAAA5U,KAAA,EACrIpH,KAAK6X,sBAAsBC,oBAAmB,OAAvD,GAAnB+D,EAAmBG,EAAA7S,MACrBuF,EAAMsB,wBAAyB,CAAFgM,EAAA5U,KAAA,eAAA4U,EAAAvS,OAAA,iBAAAqE,GAAAhB,EAAAA,EAAAA,GAGN+O,GAAmB,IAA9C,IAAA/N,EAAAf,MAAAa,EAAAE,EAAAd,KAAAzF,MAAgDuU,GAAA5O,EAAAA,EAAAA,GAAAU,EAAAxN,MAAA,GAApCD,EAAG2b,EAAA,GAAE1b,EAAK0b,EAAA,GAClBtF,EAAaoB,QAAQzX,EAAKC,EAC7B,OAAA+M,GAAAW,EAAAtM,EAAA2L,EAAA,SAAAW,EAAAV,GAAA,WAEAoJ,EAAayF,IAAIzD,EAAAA,EAAMC,SAAU,CAAFuD,EAAA5U,KAAA,SACd,OADc4U,EAAA5U,KAAA,GACRpH,KAAK4T,kBAAkBsI,gBAAe,QAA/C,GAATH,EAASC,EAAA7S,MACXuF,EAAMsB,wBAAyB,CAAFgM,EAAA5U,KAAA,gBAAA4U,EAAAvS,OAAA,kBAG7BsS,EAAUvX,QACVgS,EAAa2F,OAAO3D,EAAAA,EAAMC,SAAS2D,EAAAA,EAAAA,IAA6BC,EAAAA,GAAQpM,OAAO8L,KAClF,yBAAAC,EAAAnS,OAAA,GAAA+R,EAAA,SAGb,GAAC,CAAAzb,IAAA,gBAAAC,MACD,SAAcgW,EAAWI,EAAcnW,EAAOiV,EAAY5G,GACtD,OAAOhI,EAAU1G,UAAM,OAAQ,GAAMkI,EAAAA,EAAAA,KAAAC,MAAE,SAAAmU,IAAA,IAAApF,EAAAqF,EAAAC,EAAA,YAAAtU,EAAAA,EAAAA,KAAAO,MAAA,SAAAgU,GAAA,cAAAA,EAAA9T,KAAA8T,EAAArV,MAAA,OACnB,OADmBqV,EAAArV,KAAA,GACbsV,EAAAA,EAAAA,IAAiB3V,QAAQgJ,IAAIqG,EAAU/Q,KAAI,SAACwJ,GAAQ,OAAKnI,EAAU8V,OAAM,OAAQ,GAAMtU,EAAAA,EAAAA,KAAAC,MAAE,SAAAwU,IAAA,IAAA7R,EAAA2P,EAAA,OAAAvS,EAAAA,EAAAA,KAAAO,MAAA,SAAAmU,GAAA,cAAAA,EAAAjU,KAAAiU,EAAAxV,MAAA,OAG1F,OAH0FwV,EAAAjU,KAAA,EAAAiU,EAAAxV,KAAA,EAGrC,QAA7C0D,EAAK+D,EAASgO,iCAA8C,IAAP/R,OAAgB,EAASA,EAAG3I,KAAK0M,EAAUxO,EAAOiV,EAAYkB,EAAc9H,GAAO,OAAnJ,KAAJ+L,EAAImC,EAAAzT,MACA,CAAFyT,EAAAxV,KAAA,eAAAwV,EAAAnT,OAAA,SACGW,OAAO0S,OAAO1S,OAAO0S,OAAO,CAAC,EAAGrC,GAAO,CAAEX,WAAYjL,EAAS3D,MAAK,OAAA0R,EAAAxV,KAAA,gBAAAwV,EAAAjU,KAAA,EAAAiU,EAAAtF,GAAAsF,EAAA,SAI9EpF,QAAQC,MAAKmF,EAAAtF,IAAM,eAAAsF,EAAAnT,OAAA,cAEhB+B,GAAS,yBAAAoR,EAAA/S,OAAA,GAAA8S,EAAA,iBAClB,KAAIjO,GAAM,OACiE,OAbvEwI,EAAOuF,EAAAtT,KAaPoT,GAAQhF,EAAAA,EAAAA,IAAqB,OAAZL,QAAgC,IAAZA,EAAqBA,EAAU,IAAGuF,EAAAhT,OAAA,UACtEsT,EAAAA,EAAAA,GAAmBR,IAAM,wBAAAE,EAAA5S,OAAA,GAAAyS,EAAA,IAExC,GAAC,CAAAnc,IAAA,2BAAAC,MACD,SAAyBoW,EAAcwB,EAAUtJ,GAC7C,IAAI5D,EAAIiK,EAAIiI,EACZ,OAAOtW,EAAU1G,UAAM,OAAQ,GAAMkI,EAAAA,EAAAA,KAAAC,MAAE,SAAA8U,IAAA,IAAAC,EAAA3c,EAAA4c,EAAA,OAAAjV,EAAAA,EAAAA,KAAAO,MAAA,SAAA2U,GAAA,cAAAA,EAAAzU,KAAAyU,EAAAhW,MAAA,OACmF,GAAhH8V,EAA2D,QAAvCpS,EAAK0L,EAAazN,IAAIyP,EAAAA,EAAMjY,aAA0B,IAAPuK,EAAgBA,EAAK0L,EAAazN,IAAI,QACxF,CAAFqU,EAAAhW,KAAA,eAAAgW,EAAA3T,OAAA,iBAGR,OAHQ2T,EAAAhW,KAAA,EAGF8V,EAAiBG,WAAU,OAApC,GAAJ9c,EAAI6c,EAAAjU,MACNuF,EAAMsB,wBAAyB,CAAFoN,EAAAhW,KAAA,eAAAgW,EAAA3T,OAAA,iBAG3B0T,EAAU,CACZ5c,KAAAA,EACA2V,eAA2H,QAA1GnB,EAAkB,OAAbiD,QAAkC,IAAbA,OAAsB,EAASA,EAASjC,oBAAoBG,sBAAmC,IAAPnB,GAAgBA,EACnJiB,gBAA6H,QAA3GgH,EAAkB,OAAbhF,QAAkC,IAAbA,OAAsB,EAASA,EAASjC,oBAAoBC,uBAAoC,IAAPgH,EAAgBA,EAAK,KAC1J7G,KAAM,MAEVnW,KAAKoC,QAAQkb,QAAQ,WAAY,QAA6BH,GAAS,yBAAAC,EAAAvT,OAAA,GAAAoT,EAAA,SAE/E,IAAC,EAAA9c,IAAA,MAAAC,MAhWD,SAAW6B,GACP,OAAOA,EAAOsb,gBAAgBpK,EAAsB1N,GACxD,KAACgO,CAAA,CAH0C,CAAqCrN,EAAAA,IA6WpF,SAASuT,EAAyB9K,EAAU2H,GACxC,IAAI1L,EACJ,OAAO0S,QAA2C,QAAlC1S,EAAK+D,EAAS6J,sBAAmC,IAAP5N,OAAgB,EAASA,EAAG6N,MAAK,SAAA3S,GAAI,OAAIwQ,EAAaiH,QAAQzX,EAAK,IACjI,CAbAyN,EAAoBhO,GAAK,2CACzBgO,EAAsBN,EAAwBrJ,EAAW,CACrDY,EAAQ,EAAGgT,EAAAA,IACXhT,EAAQ,EAAGiT,EAAAA,IACXjT,EAAQ,EAAGkT,EAAAA,GACXlT,EAAQ,EAAGqI,EAAAA,GACXrI,EAAQ,EAAGmT,EAAAA,IACXnT,EAAQ,EAAGoT,EAAAA,KACZrK,G,gBCnZHhN,EAAAA,EAAAA,IAA2BgN,EAAoBhO,GAAIgO,EAAqB,IACxEsK,EAAAA,EAAAA,GAAsBC,EAAAA,IACtBC,EAAAA,EAAAA,IAAsB,aAAAC,IAAApc,EAAAA,EAAAA,GAAAqc,EAAAD,GAAA,IAAAnc,GAAAC,EAAAA,EAAAA,GAAAmc,GAClB,SAAAA,IAAc,OAAApe,EAAAA,EAAAA,GAAA,KAAAoe,GAAApc,EAAAI,KAAA,KACJ,CACF+I,GAAIkI,EACJgL,aAAc/K,EACdgL,OAAQ,CACJC,OAAQ,IACRC,QAAS,OAGrB,CAIC,OAJAre,EAAAA,EAAAA,GAAAie,EAAA,EAAAhe,IAAA,mBAAAC,MACD,SAAiBoe,EAAWvc,EAAQwc,GAChC,IAAI3T,EACJ,OAAkD,QAA1CA,EAAK2I,EAAoB1K,IAAI9G,UAA4B,IAAP6I,OAAgB,EAASA,EAAG4T,iBAC1F,KAACP,CAAA,CAdqB,CAAcQ,EAAAA,OAgBxCC,EAAAA,EAAAA,IAAoB,SAAAC,IAAA/c,EAAAA,EAAAA,GAAAgd,EAAAD,GAAA,IAAA5S,GAAAjK,EAAAA,EAAAA,GAAA8c,GAChB,SAAAA,IAAc,OAAA/e,EAAAA,EAAAA,GAAA,KAAA+e,GAAA7S,EAAA9J,KAAA,KACJ,CACF+I,GAAI,wBACJgB,MAAO6S,EAAAA,GAAa,UAAW,eAC/BC,MAAO,cACPZ,kBAAc5S,EACdjF,YAAa,CACTA,YAAa,WACbwB,KAAM,CAAC,CACCwD,KAAM,OACN0T,OAAQ,CACJjZ,KAAM,SACNkZ,WAAY,CACR,GAAM,CACFlZ,KAAM,SACNO,YAAawY,EAAAA,GAAa,aAAc,oGAOxE,CAKC,OALA7e,EAAAA,EAAAA,GAAA4e,EAAA,EAAA3e,IAAA,MAAAC,MACD,SAAIoe,EAAWvc,EAAQ8F,GACnB,IAAI+C,EACEI,EAAsE,kBAAhD,OAATnD,QAA0B,IAATA,OAAkB,EAASA,EAAKmD,IAAmBnD,EAAKmD,QAAKM,EACjG,OAAkD,QAA1CV,EAAK2I,EAAoB1K,IAAI9G,UAA4B,IAAP6I,OAAgB,EAASA,EAAGqU,QAAQjU,EAClG,KAAC4T,CAAA,CA5Be,CAAeM,EAAAA,I,mQCvB/BtV,EAA0C,SAAUC,EAAY5F,EAAQhE,EAAK6J,GAC7E,IAA2HC,EAAvHC,EAAIpC,UAAUtD,OAAQ2F,EAAID,EAAI,EAAI/F,EAAkB,OAAT6F,EAAgBA,EAAOI,OAAOC,yBAAyBlG,EAAQhE,GAAO6J,EACrH,GAAuB,kBAAZM,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASR,EAAY5F,EAAQhE,EAAK6J,QACpH,IAAK,IAAIQ,EAAIT,EAAWvF,OAAS,EAAGgG,GAAK,EAAGA,KAASP,EAAIF,EAAWS,MAAIL,GAAKD,EAAI,EAAID,EAAEE,GAAKD,EAAI,EAAID,EAAE9F,EAAQhE,EAAKgK,GAAKF,EAAE9F,EAAQhE,KAASgK,GAChJ,OAAOD,EAAI,GAAKC,GAAKC,OAAOK,eAAetG,EAAQhE,EAAKgK,GAAIA,CAChE,EACIO,EAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUzG,EAAQhE,GAAOyK,EAAUzG,EAAQhE,EAAKwK,EAAa,CACxE,EACIjE,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAU9G,GAAS,IAAM+G,EAAKL,EAAUM,KAAKhH,GAAS,CAAE,MAAOoB,GAAKyF,EAAOzF,EAAI,CAAE,CAC1F,SAAS6F,EAASjH,GAAS,IAAM+G,EAAKL,EAAiB,MAAE1G,GAAS,CAAE,MAAOoB,GAAKyF,EAAOzF,EAAI,CAAE,CAC7F,SAAS2F,EAAKG,GAJlB,IAAelH,EAIakH,EAAOC,KAAOP,EAAQM,EAAOlH,QAJ1CA,EAIyDkH,EAAOlH,MAJhDA,aAAiByG,EAAIzG,EAAQ,IAAIyG,GAAE,SAAUG,GAAWA,EAAQ5G,EAAQ,KAIjBoH,KAAKN,EAAWG,EAAW,CAC7GF,GAAML,EAAYA,EAAUW,MAAMd,EAASC,GAAc,KAAKQ,OAClE,GACJ,EAWMiY,GAAe9L,EAAAA,EAAAA,IAAS,UAAW,YACnC+L,EAA0B,oBAAAA,KAAAvf,EAAAA,EAAAA,GAAA,KAAAuf,EAAA,CAY3B,OAZ2Bpf,EAAAA,EAAAA,GAAAof,EAAA,EAAAnf,IAAA,4BAAAC,MAC5B,SAA0Bmf,EAAQC,EAAShJ,EAAc9H,GACrD,OAAOhI,EAAU1G,UAAM,OAAQ,GAAMkI,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAAqS,EAAA,OAAAvS,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAtB,MAAA,OACtB,OADsBsB,EAAAtB,KAAA,EAChBpH,KAAKyf,QAAQjJ,EAAc9H,GAAM,OAA1C,OAAJ+L,EAAI/R,EAAAS,KAAAT,EAAAe,OAAA,SACHgR,EAAO,CAAEiF,WAAYjF,EAAKiF,WAAYxT,MAAOuO,EAAKvO,MAAO6E,OAAQ0J,EAAK1J,OAAQ4O,gBAAiBlF,EAAKkF,gBAAiBC,QAASnF,EAAKmF,cAAYpU,GAAS,wBAAA9C,EAAAmB,OAAA,GAAAzB,EAAA,SAEvK,GAAC,CAAAjI,IAAA,6BAAAC,MACD,SAA2Bmf,EAAQM,EAAWrJ,EAAc9H,GACxD,OAAOhI,EAAU1G,UAAM,OAAQ,GAAMkI,EAAAA,EAAAA,KAAAC,MAAE,SAAA8O,IAAA,IAAAwD,EAAA,OAAAvS,EAAAA,EAAAA,KAAAO,MAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAjQ,MAAA,OACtB,OADsBiQ,EAAAjQ,KAAA,EAChBpH,KAAKyf,QAAQjJ,EAAc9H,GAAM,OAA1C,OAAJ+L,EAAIpD,EAAAlO,KAAAkO,EAAA5N,OAAA,SACHgR,EAAO,CAAEiF,WAAYjF,EAAKiF,WAAYxT,MAAOuO,EAAKvO,MAAOyT,gBAAiBlF,EAAKkF,gBAAiBC,QAASnF,EAAKmF,cAAYpU,GAAS,wBAAA6L,EAAAxN,OAAA,GAAAoN,EAAA,SAElJ,KAACqI,CAAA,CAZ2B,GAc1BQ,EAAmB,SAAAC,IAAAje,EAAAA,EAAAA,GAAAge,EAAAC,GAAA,IAAAhe,GAAAC,EAAAA,EAAAA,GAAA8d,GACrB,SAAAA,IAAc,IAAA5d,EAIyB,OAJzBnC,EAAAA,EAAAA,GAAA,KAAA+f,IACV5d,EAAAH,EAAA0F,MAAA,KAASK,YACJoD,GAAK,OACVhJ,EAAK8d,cAAgB,CAACxH,EAAAA,EAAMjY,MAC5B2B,EAAKwW,eAAiB,CAACF,EAAAA,EAAMjY,MAAM2B,CACvC,CAoBC,OApBAhC,EAAAA,EAAAA,GAAA4f,EAAA,EAAA3f,IAAA,UAAAC,MACD,SAAQoW,EAAcyJ,GAClB,OAAOvZ,EAAU1G,UAAM,OAAQ,GAAMkI,EAAAA,EAAAA,KAAAC,MAAE,SAAA4P,IAAA,IAAAmI,EAAAR,EAAA,OAAAxX,EAAAA,EAAAA,KAAAO,MAAA,SAAA0P,GAAA,cAAAA,EAAAxP,KAAAwP,EAAA/Q,MAAA,OACW,GAAxC8Y,EAAY1J,EAAazN,IAAIyP,EAAAA,EAAMjY,MACzB,CAAF4X,EAAA/Q,KAAA,eAAA+Q,EAAA1O,OAAA,qBAKV+M,EAAayF,IAAIzD,EAAAA,EAAMC,SAAU,CAAFN,EAAA/Q,KAAA,eAAA+Q,EAAA1O,OAAA,iBAGhB,OAHgB0O,EAAA/Q,KAAA,EAGV8Y,EAAU7C,WAAU,OAA7B,OAAVqC,EAAUvH,EAAAhP,KAAAgP,EAAA1O,OAAA,SACT,CACHkW,gBAAiBnH,EAAAA,EAAMjY,KACvB2L,OAAOqH,EAAAA,EAAAA,IAAS,aAAc,qBAC9BxC,OAAQsO,EACRK,WAAAA,IACH,wBAAAvH,EAAAtO,OAAA,GAAAkO,EAAA,IAET,KAAC+H,CAAA,CA1BoB,CAASR,GA4B5Ba,EAAY,SAAAC,IAAAte,EAAAA,EAAAA,GAAAqe,EAAAC,GAAA,IAAAnU,GAAAjK,EAAAA,EAAAA,GAAAme,GACd,SAAAA,IAAc,IAAA/T,EAI4B,OAJ5BrM,EAAAA,EAAAA,GAAA,KAAAogB,IACV/T,EAAAH,EAAAxE,MAAA,KAASK,YACJoD,GAAK,MACVkB,EAAK4T,cAAgB,CAACxH,EAAAA,EAAMC,SAC5BrM,EAAKsM,eAAiB,CAACF,EAAAA,EAAMC,SAASrM,CAC1C,CAuCC,OAvCAlM,EAAAA,EAAAA,GAAAigB,EAAA,EAAAhgB,IAAA,UAAAC,MACD,SAAQoW,EAAc9H,GAClB,OAAOhI,EAAU1G,UAAM,OAAQ,GAAMkI,EAAAA,EAAAA,KAAAC,MAAE,SAAA+Q,IAAA,IAAA1I,EAAA6P,EAAAX,EAAAxT,EAAA,OAAAhE,EAAAA,EAAAA,KAAAO,MAAA,SAAA8Q,GAAA,cAAAA,EAAA5Q,KAAA4Q,EAAAnS,MAAA,OACnB,OADmBmS,EAAAnS,KAAA,EACbkZ,EAAe9J,GAAa,OAArC,IAAPhG,EAAO+I,EAAApQ,MACA3E,SAAUkK,EAAMsB,wBAAuB,CAAAuJ,EAAAnS,KAAA,eAAAmS,EAAA9P,OAAA,iBA2BnD,OAxBG4W,EAAW,EACTX,EAAalP,EACdnL,KAAI,SAAAkb,GAA2B,IAAxB/T,EAAG+T,EAAH/T,IAAKgU,EAAYD,EAAZC,aACb,OAAIhU,EAAIiU,SAAWC,EAAAA,GAAQC,KAChBnU,EAAIoU,QAGXP,IACOG,EAEf,IACKK,KAAK,KAIN3U,EAFAmU,EAAW,EAEH7P,EAAQhM,OAAS,GACnB+O,EAAAA,EAAAA,IAAS,mCAAoC,gBAC7CA,EAAAA,EAAAA,IAAS,kCAAmC,cAI1C/C,EAAQhM,OAAS,GACnB+O,EAAAA,EAAAA,IAAS,oCAAqC,iBAC9CA,EAAAA,EAAAA,IAAS,mCAAoC,eACtDgG,EAAA9P,OAAA,SACM,CACHkW,gBAAiBnH,EAAAA,EAAMC,QACvBiH,WAAAA,EACAxT,MAAAA,EACA6E,OAAQsO,IACX,wBAAA9F,EAAA1P,OAAA,GAAAqP,EAAA,IAET,KAACiH,CAAA,CA7Ca,CAASb,GA+CvBwB,EAAoB,SAAAC,IAAAjf,EAAAA,EAAAA,GAAAgf,EAAAC,GAAA,IAAAxU,GAAAvK,EAAAA,EAAAA,GAAA8e,GACpB,SAAAA,EAAYE,GAA0B,IAAAvU,EAKI,OALJ1M,EAAAA,EAAAA,GAAA,KAAA+gB,IAClCrU,EAAAF,EAAApK,KAAA,OACK6e,yBAA2BA,EAChCvU,EAAKvB,GAAK,eACVuB,EAAKuT,cAAgB,CAACxH,EAAAA,EAAMC,SAC5BhM,EAAKiM,eAAiB,CAACF,EAAAA,EAAMC,SAAShM,CAC1C,CAuBC,OAvBAvM,EAAAA,EAAAA,GAAA4gB,EAAA,EAAA3gB,IAAA,UAAAC,MACD,SAAQoW,EAAc9H,GAClB,OAAOhI,EAAU1G,UAAM,OAAQ,GAAMkI,EAAAA,EAAAA,KAAAC,MAAE,SAAAiS,IAAA,IAAA5J,EAAAyQ,EAAA3P,EAAA,YAAApJ,EAAAA,EAAAA,KAAAO,MAAA,SAAA+R,GAAA,cAAAA,EAAA7R,KAAA6R,EAAApT,MAAA,OACnB,OADmBoT,EAAApT,KAAA,EACbkZ,EAAe9J,GAAa,OAArC,IAAPhG,EAAOgK,EAAArR,MACA3E,SAAUkK,EAAMsB,wBAAuB,CAAAwK,EAAApT,KAAA,eAAAoT,EAAA/Q,OAAA,iBAMjD,IAHGwX,GAAe1J,EAAAA,EAAAA,IAAS/G,EAAQnL,KAAI,SAAA6b,GAAa,IAAV1U,EAAG0U,EAAH1U,IACnC2U,EAAO7P,EAAK0P,yBAAyBI,mBAAmB5U,GAC9D,OAAO2U,GAAOE,EAAAA,EAAAA,IAAaF,EAAK3U,IAAKA,QAAOhB,CAChD,MACkBhH,OAAQ,CAAFgW,EAAApT,KAAA,eAAAoT,EAAA/Q,OAAA,wBAAA+Q,EAAA/Q,OAAA,SAGjB,CACHkW,gBAAiBnH,EAAAA,EAAMC,QACvBiH,WAAYuB,EAAaJ,KAAK,KAC9B3U,MAAOsE,EAAQhM,OAAS,GAClB+O,EAAAA,EAAAA,IAAS,4CAA6C,0BACtDA,EAAAA,EAAAA,IAAS,2CAA4C,wBAC3DxC,OAAQsO,IACX,wBAAA7E,EAAA3Q,OAAA,GAAAuQ,EAAA,IAET,KAAC0G,CAAA,CA9BmB,CAAsCxB,GAmC9D,SAASgB,EAAe9J,GACpB,OAAO9P,EAAU1G,UAAM,OAAQ,GAAMkI,EAAAA,EAAAA,KAAAC,MAAE,SAAAyT,IAAA,IAAA0F,EAAAC,EAAA/Q,EAAA3D,EAAAF,EAAAiE,EAAA,OAAA1I,EAAAA,EAAAA,KAAAO,MAAA,SAAAuT,GAAA,cAAAA,EAAArT,KAAAqT,EAAA5U,MAAA,OACiB,GAA9Cka,EAAe9K,EAAazN,IAAIyP,EAAAA,EAAMC,SACzB,CAAFuD,EAAA5U,KAAA,eAAA4U,EAAAvS,OAAA,SACN,IAAE,OAEM,OAFNuS,EAAA5U,KAAA,EAEYka,EAAajE,WAAU,OAA1CkE,EAAUvF,EAAA7S,KACVqH,EAAU,GAAE3D,GAAAC,EAAAA,EAAAA,GACEuP,EAAAA,GAAQf,MAAMiG,IAAW,IAA7C,IAAA1U,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAzF,MAA+C,CAApCqJ,EAAKjE,EAAAvM,MACZ,IACIoQ,EAAQzC,KAAK,CAAEvB,IAAK3D,EAAAA,EAAIyS,MAAM1K,GAAQ4P,aAAc5P,GACxD,CACA,MAAO9F,GACH,CAER,CAAC,OAAAqC,GAAAN,EAAArL,EAAA2L,EAAA,SAAAN,EAAAO,GAAA,QAAA4O,EAAAvS,OAAA,SACM+G,GAAO,yBAAAwL,EAAAnS,OAAA,GAAA+R,EAAA,IAEtB,CArBAkF,EAAuBhX,EAAW,CAC9BY,EAAQ,EAAG8W,EAAAA,KACZV,GAoBH,IAAIW,EAA2B,SAAA5f,IAAAC,EAAAA,EAAAA,GAAA2f,EAAA5f,GAAA,IAAA6f,GAAA1f,EAAAA,EAAAA,GAAAyf,GAC3B,SAAAA,EAAYE,EAAyBC,GAAyB,IAAAxP,EAI0E,OAJ1ErS,EAAAA,EAAAA,GAAA,KAAA0hB,IAC1DrP,EAAAsP,EAAAvf,KAAA,OACKI,UAAUof,EAAwBE,2BAA2Bvb,SAAS,IAAK,IAAIwZ,IACpF1N,EAAK7P,UAAUof,EAAwBE,2BAA2Bvb,SAAS,IAAK,IAAI6Z,IACpF/N,EAAK7P,UAAUof,EAAwBE,2BAA2Bvb,SAAS,IAAK,IAAIwa,EAAqBc,KAA2BxP,CACxI,CAAC,OAAAlS,EAAAA,EAAAA,GAAAuhB,EAAA,CAN0B,CAA6Crb,EAAAA,IAQ5Eqb,EAA8B3X,EAAW,CACrCY,EAAQ,EAAGqI,EAAAA,GACXrI,EAAQ,EAAG8W,EAAAA,KACZC,GAEH,IAAIzD,EAA4B,SAAA8D,IAAAhgB,EAAAA,EAAAA,GAAAkc,EAAA8D,GAAA,IAAAC,GAAA/f,EAAAA,EAAAA,GAAAgc,GAC5B,SAAAA,EAAY2D,EAAyBC,GAAyB,IAAApF,EAIyE,OAJzEzc,EAAAA,EAAAA,GAAA,KAAAie,IAC1DxB,EAAAuF,EAAA5f,KAAA,OACKI,UAAUof,EAAwBtL,0BAA0B/P,SAAS,IAAK,IAAIwZ,IACnFtD,EAAKja,UAAUof,EAAwBtL,0BAA0B/P,SAAS,IAAK,IAAI6Z,IACnF3D,EAAKja,UAAUof,EAAwBtL,0BAA0B/P,SAAS,IAAK,IAAIwa,EAAqBc,KAA2BpF,CACvI,CAAC,OAAAtc,EAAAA,EAAAA,GAAA8d,EAAA,CAN2B,CAA8C5X,EAAAA,IAQ9E4X,EAA+BlU,EAAW,CACtCY,EAAQ,EAAGqI,EAAAA,GACXrI,EAAQ,EAAG8W,EAAAA,KACZxD,E,mCClLCgE,E,6VAlBAlY,EAA0C,SAAUC,EAAY5F,EAAQhE,EAAK6J,GAC7E,IAA2HC,EAAvHC,EAAIpC,UAAUtD,OAAQ2F,EAAID,EAAI,EAAI/F,EAAkB,OAAT6F,EAAgBA,EAAOI,OAAOC,yBAAyBlG,EAAQhE,GAAO6J,EACrH,GAAuB,kBAAZM,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASR,EAAY5F,EAAQhE,EAAK6J,QACpH,IAAK,IAAIQ,EAAIT,EAAWvF,OAAS,EAAGgG,GAAK,EAAGA,KAASP,EAAIF,EAAWS,MAAIL,GAAKD,EAAI,EAAID,EAAEE,GAAKD,EAAI,EAAID,EAAE9F,EAAQhE,EAAKgK,GAAKF,EAAE9F,EAAQhE,KAASgK,GAChJ,OAAOD,EAAI,GAAKC,GAAKC,OAAOK,eAAetG,EAAQhE,EAAKgK,GAAIA,CAChE,EACIO,EAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUzG,EAAQhE,GAAOyK,EAAUzG,EAAQhE,EAAKwK,EAAa,CACxE,EACIjE,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAU9G,GAAS,IAAM+G,EAAKL,EAAUM,KAAKhH,GAAS,CAAE,MAAOoB,GAAKyF,EAAOzF,EAAI,CAAE,CAC1F,SAAS6F,EAASjH,GAAS,IAAM+G,EAAKL,EAAiB,MAAE1G,GAAS,CAAE,MAAOoB,GAAKyF,EAAOzF,EAAI,CAAE,CAC7F,SAAS2F,EAAKG,GAJlB,IAAelH,EAIakH,EAAOC,KAAOP,EAAQM,EAAOlH,QAJ1CA,EAIyDkH,EAAOlH,MAJhDA,aAAiByG,EAAIzG,EAAQ,IAAIyG,GAAE,SAAUG,GAAWA,EAAQ5G,EAAQ,KAIjBoH,KAAKN,EAAWG,EAAW,CAC7GF,GAAML,EAAYA,EAAUW,MAAMd,EAASC,GAAc,KAAKQ,OAClE,GACJ,EAoBa6a,EAAwB,qDACxBC,EAA0B,wBAC1BC,EAAuB,IAAI7O,EAAAA,GAAc,qBAAqB,GAAOC,EAAAA,EAAAA,IAAS,oBAAqB,uCAC5G6O,EAA2BJ,EAA0B,SAAAngB,IAAAC,EAAAA,EAAAA,GAAAsgB,EAAAvgB,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAogB,GAIrD,SAAAA,EAAYngB,EAAQyR,EAAsB2O,EAAgBjR,EAA0BkR,GAA8B,IAAApgB,EAQb,OARanC,EAAAA,EAAAA,GAAA,KAAAqiB,IAC9GlgB,EAAAH,EAAAI,KAAA,OACKkgB,eAAiBA,EACtBngB,EAAKkP,yBAA2BA,EAChClP,EAAKogB,6BAA+BA,EACpCpgB,EAAKqgB,kBAAoBC,EAAAA,GAAuBC,cAChDvgB,EAAKwgB,qBAAuBxgB,EAAKK,UAAUmR,EAAqBY,eAAeF,EAAAA,sBAAuB,iBAAkBnS,IACxHC,EAAKygB,uBAAyBzgB,EAAKK,UAAUmR,EAAqBY,eAAeC,EAAAA,EAAuB,iBAAkBtS,EAAQkgB,EAAsB,CAAEjX,GAAIgX,EAAyBhW,OAAOqH,EAAAA,EAAAA,IAAS,sBAAuB,2BAC9NrR,EAAKK,UAAUN,EAAO2gB,kBAAiB,SAAAphB,GAAC,OAAIU,EAAK0gB,iBAAiB3gB,EAAQT,EAAE+C,SAAU/C,EAAEiD,MAAM,KAAGvC,CACrG,CAVC,OAUAhC,EAAAA,EAAAA,GAAAkiB,EAAA,EAAAjiB,IAAA,iBAAAC,MACD,WACIJ,KAAK2iB,uBAAuBnO,iBAChC,GAAC,CAAArU,IAAA,mBAAAC,MACD,SAAiB6B,EAAQsC,EAAUse,GAC/B,IAAI/X,EACJ,OAAOpE,EAAU1G,UAAM,OAAQ,GAAMkI,EAAAA,EAAAA,KAAAC,MAAE,SAAA8O,IAAA,IAAAgC,EAAA7M,EAAA,YAAAlE,EAAAA,EAAAA,KAAAO,MAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAjQ,MAAA,UAC9Byb,EAAUrM,cAAiBvU,EAAOuX,WAAU,CAAAnC,EAAAjQ,KAAA,eAAAiQ,EAAA5N,OAAA,iBAGf,QAAjCqB,EAAK9K,KAAK8iB,yBAAsC,IAAPhY,GAAyBA,EAAGgF,SACtE7N,EAAOyS,QACPzS,EAAO8gB,YAAYxe,GACb0U,GAAIjC,EAAAA,EAAAA,KAAwB,SAACtI,GAAK,OAAKhI,EAAU0F,OAAM,OAAQ,GAAMlE,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAA+Q,EAAA6J,EAAA3iB,EAAA+V,EAAAmG,EAAAtC,EAAAX,EAAA,OAAApR,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAtB,MAAA,OAG7C,OAFtB+R,EAAc,IAAIM,EAAAA,GAAmCxX,EAAQ,OAAmCuJ,EAAWkD,GAAMhG,EAAAC,KAAA,EAAAD,EAAAtB,KAAA,EAErFpH,KAAKijB,wBAAwBJ,GAAU,OAAhD,GACQ,KADvBG,EAAeta,EAAAS,MACDuC,OAAcyN,EAAYzK,MAAMsB,wBAAuB,CAAAtH,EAAAtB,KAAA,eAAAsB,EAAAe,OAAA,iBAG5C,GAAzBpJ,EAAQ4B,EAAOoT,WACT,CAAF3M,EAAAtB,KAAA,gBAAAsB,EAAAe,OAAA,kBAYI,OATR2M,EAAYpW,KAAKoR,yBAAyByQ,2BAC3C/S,QAAQzO,GACRiE,QAAO,SAAAuK,GACR,OAAKA,EAASmR,eAIPnR,EAASmR,cAAcrH,MAAK,SAAAvB,GAAI,OAAI4L,EAAgBvF,QAAQrG,EAAK,GAC5E,IAAE1O,EAAAtB,KAAA,GACkBpH,KAAKkjB,aAAa9M,EAAW/V,EAAOkE,EAAUye,EAAiB7J,GAAY,QAApF,GAALoD,EAAK7T,EAAAS,MACPgQ,EAAYzK,MAAMsB,wBAAyB,CAAFtH,EAAAtB,KAAA,gBAAAsB,EAAAe,OAAA,sBAGzC8S,EAAM/X,OAAQ,CAAFkE,EAAAtB,KAAA,SAIZ,OAHM6S,EAAkBja,KAAKmjB,0BAA0B9iB,EAAOkc,GACxDjD,EAA4F,cAA5ErX,EAAO4B,UAAU,IAAsCuf,iBAC7E1a,EAAAtB,KAAA,GACMpH,KAAK2iB,uBAAuB3I,yBAAyB,CAACtZ,EAAAA,EAAM2iB,cAAc9e,IAAY,CAAE0V,gBAAAA,EAAiBC,SAAUqC,GAASjD,EAAe5K,GAAM,QAO1J,OAP0JhG,EAAAC,KAAA,GAI3JwQ,EAAYxP,UACR3J,KAAK8iB,oBAAsB7J,IAC3BjZ,KAAK8iB,uBAAoBtX,GAC5B9C,EAAAkB,OAAA,6BAAAlB,EAAAmB,OAAA,GAAAzB,EAAA,sBAEP,IACFpI,KAAK0iB,qBAAqBvI,UAAU5V,GAAUgP,EAAAA,EAAAA,IAAS,yBAA0B,0CAA2C0F,GAC5HjZ,KAAK8iB,kBAAoB7J,EAAE,wBAAA5B,EAAAxN,OAAA,GAAAoN,EAAA,SAEnC,GAAC,CAAA9W,IAAA,eAAAC,MACD,SAAagW,EAAW/V,EAAOkE,EAAUiS,EAAc2C,GACnD,OAAOzS,EAAU1G,UAAM,OAAQ,GAAMkI,EAAAA,EAAAA,KAAAC,MAAE,SAAA+Q,IAAA,IAAAhC,EAAAqF,EAAA9P,EAAA,YAAAvE,EAAAA,EAAAA,KAAAO,MAAA,SAAA8Q,GAAA,cAAAA,EAAA5Q,KAAA4Q,EAAAnS,MAAA,OACnB,OADmBmS,EAAAnS,KAAA,GACbsV,EAAAA,EAAAA,IAAiB3V,QAAQgJ,IAAIqG,EAAU/Q,KAAI,SAACwJ,GAAQ,OAAKnI,EAAU+F,OAAM,OAAQ,GAAMvE,EAAAA,EAAAA,KAAAC,MAAE,SAAA4P,IAAA,IAAA0C,EAAA,OAAAvS,EAAAA,EAAAA,KAAAO,MAAA,SAAA0P,GAAA,cAAAA,EAAAxP,KAAAwP,EAAA/Q,MAAA,OAE1F,OAF0F+Q,EAAAxP,KAAA,EAAAwP,EAAA/Q,KAAA,EAEpFyH,EAASyU,2BAA2BjjB,EAAOkE,EAAUiS,EAAc2C,EAAYzK,OAAM,OAA9F,KAAJ+L,EAAItC,EAAAhP,MACA,CAAFgP,EAAA/Q,KAAA,eAAA+Q,EAAA1O,OAAA,SACGW,OAAO0S,OAAO1S,OAAO0S,OAAO,CAAC,EAAGrC,GAAO,CAAEX,WAAYjL,EAAS3D,MAAK,OAAAiN,EAAA/Q,KAAA,gBAAA+Q,EAAAxP,KAAA,EAAAwP,EAAAb,GAAAa,EAAA,SAI9EX,QAAQC,MAAKU,EAAAb,IAAM,eAAAa,EAAA1O,OAAA,cAEhB+B,GAAS,yBAAA2M,EAAAtO,OAAA,GAAAkO,EAAA,iBAClB,KAAIoB,EAAYzK,OAAM,OACqD,OAZvEwI,EAAOqC,EAAApQ,KAYPoT,GAAQhF,EAAAA,EAAAA,IAAqB,OAAZL,QAAgC,IAAZA,EAAqBA,EAAU,IAAGqC,EAAA9P,OAAA,UACtEsT,EAAAA,EAAAA,GAAmBR,IAAM,wBAAAhD,EAAA1P,OAAA,GAAAqP,EAAA,IAExC,GAAC,CAAA/Y,IAAA,4BAAAC,MACD,SAA0BC,EAAOkc,GAE7B,IADA,IAOCgH,EAPKC,EAAqBxjB,KAAKqiB,eAAeoB,SAASxB,EAAuB,CAAE5Z,SAAUhI,EAAMmM,MAAOkX,EAAA,WACnG,IAAAC,GAAAzW,EAAAA,EAAAA,GAAA0W,EAAAC,GAAA,GAAOC,EAAUH,EAAA,GAAEI,EAASJ,EAAA,GACvBK,EAAYzH,EAAM0H,WAAU,SAAAxJ,GAAI,OAAIsJ,IAActJ,EAAKX,YACtDW,EAAKkF,kBAAmB/G,EAAAA,EAAAA,IAAgBkL,EAAY,CAACrJ,EAAKkF,iBAAiB,IAClF,GAAIqE,GAAa,EAAG,OAAAE,EACTF,EAEf,EANAH,EAAA,EAAAD,EAAsCxZ,OAAOoG,QAAQgT,GAAmBK,EAAAD,EAAApf,OAAAqf,IAAA,GAAAN,EAAAG,IAAE,OAAFH,EAAAW,EAOxE,OAAO,CACX,GAAC,CAAA/jB,IAAA,0BAAAC,MACD,SAAwByiB,GACpB,OAAOnc,EAAU1G,UAAM,OAAQ,GAAMkI,EAAAA,EAAAA,KAAAC,MAAE,SAAAiS,IAAA,IAAA5D,EAAAvE,EAAApF,EAAAF,EAAAzB,EAAAiZ,EAAAzW,EAAAL,EAAA8J,EAAAnR,EAAA5F,EAAA,OAAA8H,EAAAA,EAAAA,KAAAO,MAAA,SAAA+R,GAAA,cAAAA,EAAA7R,KAAA6R,EAAApT,MAAA,UAC9Byb,EAAUrM,aAAc,CAAFgE,EAAApT,KAAA,eAAAoT,EAAA/Q,OAAA,SAChB,IAAI2a,EAAAA,IAAgB,OAEsC,GAA/D5N,GAAe8B,EAAAA,EAAAA,GAAyBuK,EAAUrM,eACpDxW,KAAKuiB,kBAAkB8B,QAAQC,EAAAA,EAA2Bne,WAAY,CAAFqU,EAAApT,KAAA,SACa,GAA3E6K,EAAOjS,KAAKuiB,kBAAkBlH,QAAQiJ,EAAAA,EAA2Bne,YACnE6B,MAAMiO,QAAQhE,GAAO,CAAFuI,EAAApT,KAAA,SAAAyF,GAAAC,EAAAA,EAAAA,GACFmF,GAAIuI,EAAA7R,KAAA,EAAAkE,EAAAE,IAAA,WAAAJ,EAAAE,EAAAG,KAAAzF,KAAE,CAAFiT,EAAApT,KAAA,SACQ,OADlB8D,EAAEyB,EAAAvM,MAAAoa,EAAApT,KAAA,GACsBpH,KAAKsiB,6BAA6BiC,4BAA4BrZ,EAAGsZ,YAAW,QAC3G,GADML,EAAgB3J,EAAArR,KACA,CAAAuE,GAAAZ,EAAAA,EAAAA,GACUqX,GAAgB,IAA5C,IAAAzW,EAAAX,MAAAM,EAAAK,EAAAV,KAAAzF,MAA8C4P,GAAAjK,EAAAA,EAAAA,GAAAG,EAAAjN,MAAA,GAAlC4F,EAAImR,EAAA,GAAE/W,EAAK+W,EAAA,GACnBX,EAAaoB,QAAQ5R,EAAM5F,EAC9B,OAAA+M,GAAAO,EAAAlM,EAAA2L,EAAA,SAAAO,EAAAN,GAAA,CACL,CAAC,QAAAoN,EAAApT,KAAA,gBAAAoT,EAAApT,KAAA,iBAAAoT,EAAA7R,KAAA,GAAA6R,EAAAlD,GAAAkD,EAAA,SAAA3N,EAAArL,EAAAgZ,EAAAlD,IAAA,eAAAkD,EAAA7R,KAAA,GAAAkE,EAAAO,IAAAoN,EAAA5Q,OAAA,mBAAA4Q,EAAA/Q,OAAA,SAIN+M,GAAY,yBAAAgE,EAAA3Q,OAAA,GAAAuQ,EAAA,wBAE3B,IAAC,EAAAja,IAAA,MAAAC,MArHD,SAAW6B,GACP,OAAOA,EAAOsb,gBAAgByE,EAA2Bvc,GAC7D,KAAC2c,CAAA,CAHoD,CAA0Chc,EAAAA,IAwHnGgc,EAAyB3c,GAAK,0CAC9B2c,EAA2BJ,EAA6BlY,EAAW,CAC/DY,EAAQ,EAAGgT,EAAAA,IACXhT,EAAQ,EAAG+Z,EAAAA,IACX/Z,EAAQ,EAAGqI,EAAAA,GACXrI,EAAQ,EAAGga,EAAAA,IACZtC,IC9JH3b,EAAAA,EAAAA,IAA2B2b,EAAyB3c,GAAI2c,EAA0B,IAClFnE,EAAAA,EAAAA,IAAsB,aAAAC,IAAApc,EAAAA,EAAAA,GAAAqc,EAAAD,GAAA,IAAAnc,GAAAC,EAAAA,EAAAA,GAAAmc,GAClB,SAAAA,IAAc,OAAApe,EAAAA,EAAAA,GAAA,KAAAoe,GAAApc,EAAAI,KAAA,KACJ,CACF+I,GAAIgX,EACJ9D,aAAc+D,EACd9D,OAAQ,CACJC,OAAQ,IACRC,QAAS,OAGrB,CAIC,OAJAre,EAAAA,EAAAA,GAAAie,EAAA,EAAAhe,IAAA,mBAAAC,MACD,SAAiBoe,EAAWvc,EAAQwc,GAChC,IAAI3T,EAC4C,QAA/CA,EAAKsX,EAAyBrZ,IAAI9G,UAA4B,IAAP6I,GAAyBA,EAAG6Z,gBACxF,KAACxG,CAAA,CAdqB,CAAcQ,EAAAA,OAgBxCZ,EAAAA,EAAAA,GAAsB0D,EAAAA,GACtBmD,EAAAA,EAASC,GAAGC,EAAAA,GAAwBC,eAAeC,sBAAsB5a,OAAO0S,OAAO1S,OAAO0S,OAAO,CAAC,EAAGmI,EAAAA,IAA8B,CAAE/F,YAAUgG,EAAAA,EAAAA,GAAA,GAC1IjD,EAAwB,CACrBjc,KAAM,SACNmf,MAAO,EACP5e,YAAawY,EAAAA,GAAa,6BAA8B,iFACxDqG,QAAS,CAAC,EACVC,qBAAsB,CAClBrf,KAAM,c,oHChCf,SAAS6U,EAA4BrO,EAAKgJ,EAAQiF,GACrD,IAAI3P,EAAIiK,EACR,MAAO,CACHwH,MAAO,GAAFjR,QAAA0C,EAAAA,EAAAA,GACEwH,EAAOnQ,KAAI,SAAAM,GAAK,OAAI,IAAI2f,EAAAA,GAAiB9Y,EAAgC,kBAApBiO,EAAKiF,WACvD,CAAE/Z,MAAAA,EAAOpF,KAAMka,EAAKiF,WAAY6F,iBAAiB,GACjD,CAAE5f,MAAAA,EAAOpF,KAAMka,EAAKiF,WAAW8F,QAASD,iBAAiB,GAAO,MAACvX,EAAAA,EAAAA,GACiB,QAAnF+G,EAAoC,QAA9BjK,EAAK2P,EAAKgL,sBAAmC,IAAP3a,OAAgB,EAASA,EAAGyR,aAA0B,IAAPxH,EAAgBA,EAAK,KAGjI,CACO,SAASgI,EAAmBR,GAC/B,IAAIzR,EACJ,SAAS4a,EAASC,EAAKC,GACnB,MAAQ,eAAgBD,GAAOA,EAAI7L,aAAe8L,EAAM9L,YAChD,aAAc6L,GAAOA,EAAIE,WAAaD,EAAMjG,eACxD,CAEA,IACwBhT,EADlBmZ,EAAc,IAAIha,IAAMe,GAAAC,EAAAA,EAAAA,GACXyP,GAAK,IAAxB,IAAA1P,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAzF,MAA0B,KACmD8F,EADlEoN,EAAI9N,EAAAvM,MAAAsN,GAAAZ,EAAAA,EAAAA,GAC+B,QAAvBhC,EAAK2P,EAAKmF,eAA4B,IAAP9U,EAAgBA,EAAK,IAAE,IAAzE,IAAA4C,EAAAX,MAAAM,EAAAK,EAAAV,KAAAzF,MAA2E,KAC9CqG,EADlB+X,EAAGtY,EAAAjN,MAAA0N,GAAAhB,EAAAA,EAAAA,GACUyP,GAAK,IAAzB,IAAAzO,EAAAf,MAAAa,EAAAE,EAAAd,KAAAzF,MAA2B,KAAhBqe,EAAKhY,EAAAxN,MACZ,GAAIwlB,IAAUnL,GAGViL,EAASC,EAAKC,GAAQ,CACtB,IAAIG,EAAMD,EAAY/c,IAAI0R,GACrBsL,IACDA,EAAM,GACND,EAAYpgB,IAAI+U,EAAMsL,IAE1BA,EAAIhY,KAAK6X,EACb,CACJ,CAAC,OAAAzY,GAAAW,EAAAtM,EAAA2L,EAAA,SAAAW,EAAAV,GAAA,CACL,CAAC,OAAAD,GAAAO,EAAAlM,EAAA2L,EAAA,SAAAO,EAAAN,GAAA,CACL,CAAC,OAAAD,GAAAN,EAAArL,EAAA2L,EAAA,SAAAN,EAAAO,GAAA,CACD,IAAK0Y,EAAYpa,KACb,OAAO1D,MAAMge,KAAKzJ,GAGtB,IAAM0J,EAAU,IAAIC,IACdC,EAAY,GAuBlB,OAtBA,SAASC,EAAMC,GACX,IAAKA,EAAM7hB,OACP,MAAO,GAEX,IAAM8hB,EAAOD,EAAM,GACnB,GAAIF,EAAUI,SAASD,GAEnB,OADA9O,QAAQgP,KAAK,+BAADlb,OAAgCgb,EAAKxM,aAC1CuM,EAEX,GAAIJ,EAAQhK,IAAIqK,GACZ,OAAOF,EAAMC,EAAMI,MAAM,IAE7B,IAAIC,EAAM,GACJf,EAAMG,EAAY/c,IAAIud,GAO5B,OANIX,IACAQ,EAAUpY,KAAKuY,GACfI,EAAMN,EAAMT,GACZQ,EAAUQ,OAEdV,EAAQlU,IAAIuU,GACL,GAAPhb,QAAA0C,EAAAA,EAAAA,GAAW0Y,GAAG,CAAEJ,IAAItY,EAAAA,EAAAA,GAAKoY,EAAMC,EAAMI,MAAM,KAC/C,CACOL,CAAMpe,MAAMge,KAAKzJ,GAC5B,C,4DChDIqK,E,0LAlBA9c,EAA0C,SAAUC,EAAY5F,EAAQhE,EAAK6J,GAC7E,IAA2HC,EAAvHC,EAAIpC,UAAUtD,OAAQ2F,EAAID,EAAI,EAAI/F,EAAkB,OAAT6F,EAAgBA,EAAOI,OAAOC,yBAAyBlG,EAAQhE,GAAO6J,EACrH,GAAuB,kBAAZM,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASR,EAAY5F,EAAQhE,EAAK6J,QACpH,IAAK,IAAIQ,EAAIT,EAAWvF,OAAS,EAAGgG,GAAK,EAAGA,KAASP,EAAIF,EAAWS,MAAIL,GAAKD,EAAI,EAAID,EAAEE,GAAKD,EAAI,EAAID,EAAE9F,EAAQhE,EAAKgK,GAAKF,EAAE9F,EAAQhE,KAASgK,GAChJ,OAAOD,EAAI,GAAKC,GAAKC,OAAOK,eAAetG,EAAQhE,EAAKgK,GAAIA,CAChE,EACIO,EAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUzG,EAAQhE,GAAOyK,EAAUzG,EAAQhE,EAAKwK,EAAa,CACxE,EACIjE,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAU9G,GAAS,IAAM+G,EAAKL,EAAUM,KAAKhH,GAAS,CAAE,MAAOoB,GAAKyF,EAAOzF,EAAI,CAAE,CAC1F,SAAS6F,EAASjH,GAAS,IAAM+G,EAAKL,EAAiB,MAAE1G,GAAS,CAAE,MAAOoB,GAAKyF,EAAOzF,EAAI,CAAE,CAC7F,SAAS2F,EAAKG,GAJlB,IAAelH,EAIakH,EAAOC,KAAOP,EAAQM,EAAOlH,QAJ1CA,EAIyDkH,EAAOlH,MAJhDA,aAAiByG,EAAIzG,EAAQ,IAAIyG,GAAE,SAAUG,GAAWA,EAAQ5G,EAAQ,KAIjBoH,KAAKN,EAAWG,EAAW,CAC7GF,GAAML,EAAYA,EAAUW,MAAMd,EAASC,GAAc,KAAKQ,OAClE,GACJ,EAaIyf,EAAiBD,EAAgB,SAAA/kB,IAAAC,EAAAA,EAAAA,GAAA+kB,EAAAhlB,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAA6kB,GACjC,SAAAA,EAAYC,EAAQ7kB,EAAQ8kB,EAAgBC,EAAarhB,EAAO4W,EAAO0K,EAAiBC,EAAqBC,EAAmBC,GAAoB,IAAAllB,EA0B5I,OA1B4InC,EAAAA,EAAAA,GAAA,KAAA8mB,IAChJ3kB,EAAAH,EAAAI,KAAA,OACK2kB,OAASA,EACd5kB,EAAKD,OAASA,EACdC,EAAK8kB,YAAcA,EACnB9kB,EAAKyD,MAAQA,EACbzD,EAAKqa,MAAQA,EACbra,EAAK+kB,gBAAkBA,EACvB/kB,EAAKglB,oBAAsBA,EAC3BhlB,EAAKklB,mBAAqBA,EAC1BllB,EAAKmlB,qBAAsB,EAC3BnlB,EAAKolB,mBAAoB,EACzBplB,EAAK+N,SACL/N,EAAK6kB,eAAiBA,EAAeQ,OAAOJ,GAC5CjlB,EAAK6kB,eAAerhB,KAAI,GACxBxD,EAAKK,WAAUilB,EAAAA,EAAAA,KAAa,kBAAMtlB,EAAK6kB,eAAeU,OAAO,KAC7DvlB,EAAKD,OAAOylB,kBAAgBC,EAAAA,EAAAA,GAAAzlB,IAC5BA,EAAKD,OAAO2lB,qBAAmBD,EAAAA,EAAAA,GAAAzlB,IAC/BA,EAAKK,WAAUilB,EAAAA,EAAAA,KAAc,kBAAMtlB,EAAKD,OAAO4lB,qBAAmBF,EAAAA,EAAAA,GAAAzlB,GAAM,KACxEA,EAAKK,UAAUL,EAAKD,OAAO6lB,2BAA0B,SAAAtmB,GAC5CmE,EAAM9E,iBAAiBW,EAAE+C,WAC1BrC,EAAKyH,SAEb,KACAzH,EAAKK,UAAUwlB,EAAAA,GAAMC,gBAAgBZ,EAAmBa,wBAAwB,WAC5E/lB,EAAKgmB,oBACT,KAAIhmB,CACR,CA6CC,OA7CAhC,EAAAA,EAAAA,GAAA2mB,EAAA,EAAA1mB,IAAA,qBAAAC,MACD,WACI,IAAI0K,EACEqd,EAAmF,QAAxErd,EAAK9K,KAAKonB,mBAAmBgB,iBAAiBpoB,KAAKgnB,YAAY9b,WAAwB,IAAPJ,OAAgB,EAASA,EAAGud,WAC7HroB,KAAKsoB,OAAO7c,QAAQuP,MAAQhb,KAAKgnB,YAAY9a,OAASic,EAAU,KAAH7c,OAAQ6c,EAAO,KAAM,GACtF,GAAC,CAAAhoB,IAAA,SAAAC,MACD,WAAS,IAAAgM,EAAA,KACLpM,KAAKuoB,QAAUC,EAAIC,EAAE,qBACrBzoB,KAAKsoB,OAAStoB,KAAKuC,UAAU,IAAImmB,EAAAA,EAAO1oB,KAAKuoB,QAAS,CAClDI,cAAc,KAElB3oB,KAAKsoB,OAAOpc,MAAQ,YACpBlM,KAAKuC,UAAUimB,EAAIxU,sBAAsBhU,KAAKuoB,QAASC,EAAII,UAAUC,OAAO,kBAAMzc,EAAK0c,cAAc,IACzG,GAAC,CAAA3oB,IAAA,QAAAC,MACD,WACI,OAAOwmB,EAAiBmC,OAAS,IAAM/oB,KAAK8mB,MAChD,GAAC,CAAA3mB,IAAA,aAAAC,MACD,WACI,OAAOJ,KAAKuoB,OAChB,GAAC,CAAApoB,IAAA,cAAAC,MACD,WACI,MAAO,CACHmE,SAAUvE,KAAK2F,MAAM7E,iBACrBkoB,WAAY,CAAC,GAErB,GAAC,CAAA7oB,IAAA,eAAAC,MACD,WAAe,IAAAqM,EAAA,KACXzM,KAAKknB,oBAAoB+B,gBAAgB,CACrCC,UAAW,WACP,IAAMC,EAAMX,EAAIY,uBAAuB3c,EAAK6b,OAAO7c,SACnD,MAAO,CAAE6K,EAAG6S,EAAIE,KAAOF,EAAIG,MAAOC,EAAGJ,EAAIK,IAAML,EAAIM,OACvD,EACAC,WAAY,WACR,OAAOjd,EAAK8P,MAAMrC,SAAS7U,KAAI,SAACoV,EAAMjQ,GAAC,OAAKmf,EAAAA,EAAAA,IAAS,CACjDze,GAAI,GACJgB,MAAOuO,EAAKvO,MACZ0d,QAASpf,IAAMiC,EAAK8P,MAAMtC,gBAC1B4P,IAAK,WACD,GAAIrf,IAAMiC,EAAK8P,MAAMtC,gBACjB,OAAOxN,EAAKwa,gBAAgBzc,EAEpC,GACF,GACN,GAER,KAACqc,CAAA,CAzEgC,CAAgCzgB,EAAAA,IA2ErEygB,EAAekC,OAAS,+BACxBlC,EAAiBD,EAAmB9c,EAAW,CAC3CY,EAAQ,EAAGof,EAAAA,GACXpf,EAAQ,EAAGqf,EAAAA,IACXrf,EAAQ,EAAGsf,EAAAA,IACZnD,GACH,IAAItS,EAAqB,SAAAuN,IAAAhgB,EAAAA,EAAAA,GAAAyS,EAAAuN,GAAA,IAAA7V,GAAAjK,EAAAA,EAAAA,GAAAuS,GACrB,SAAAA,EAAY0V,EAAK7nB,EAAS8nB,EAAiBC,EAAcC,EAAuBzW,GAAkB,IAAArC,EASW,OATXvR,EAAAA,EAAAA,GAAA,KAAAwU,IAC9FjD,EAAArF,EAAA9J,KAAA,OACK8nB,IAAMA,EACX3Y,EAAKlP,QAAUA,EACfkP,EAAK4Y,gBAAkBA,EACvB5Y,EAAK6Y,aAAeA,EACpB7Y,EAAK8Y,sBAAwBA,EAC7B9Y,EAAKqC,iBAAmBA,EACxBrC,EAAK+Y,eAAiB/Y,EAAK/O,UAAU,IAAI+nB,EAAAA,IACzChZ,EAAK/O,UAAUwlB,EAAAA,GAAMwC,IAAInoB,EAAQooB,iBAAkBpoB,EAAQqoB,wBAA5C1C,EAAqE,kBAAMzW,EAAKvL,OAAO,KAAGuL,CAC7G,CAmEC,OAnEApR,EAAAA,EAAAA,GAAAqU,EAAA,EAAApU,IAAA,2BAAAC,MACD,SAAyBoV,EAAQ+G,EAAOjD,EAAe5K,GACnD,IAAI5D,EAAIiK,EACR,OAAOrO,EAAU1G,UAAM,OAAQ,GAAMkI,EAAAA,EAAAA,KAAAC,MAAE,SAAA8O,IAAA,IAAA5W,EAAAoa,EAAAiQ,EAAAxQ,EAAAK,EAAAoQ,EAAAC,EAAAC,EAAAC,EAAA1Y,EAAA,YAAAlK,EAAAA,EAAAA,KAAAO,MAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAjQ,MAAA,OACE,IAA/B/G,EAAQL,KAAKoC,QAAQiT,aACZG,EAAOhR,OAAM,CAAA6S,EAAAjQ,KAAA,eAAAiQ,EAAA5N,OAAA,iBAGsB,GAA5CgR,EAAO8B,EAAMrC,SAASqC,EAAMtC,iBACvB,CAAF5C,EAAAjQ,KAAA,eAAAiQ,EAAA5N,OAAA,iBA4BQ,OAzBbihB,EAAiB,GAEjBA,GAD2B,kBAApBjQ,EAAKiF,WAA8C,KAApBjF,EAAKiF,WAAgD,KAA5BjF,EAAKiF,WAAW8F,SAC9D,GAGAhQ,EAAOnQ,KAAI,SAAAM,GAAK,OAAI,IAAI2f,EAAAA,GAAiBjlB,EAAMmM,IAAgC,kBAApBiO,EAAKiF,WAC3E,CAAE/Z,MAAAA,EAAOpF,KAAMka,EAAKiF,WAAY6F,iBAAiB,GACjD,CAAE5f,MAAAA,EAAOpF,KAAMka,EAAKiF,WAAW8F,QAASD,iBAAiB,GAAO,IAEpErL,EAAW,GAAH5O,QAAA0C,EAAAA,EAAAA,GACP0c,IAAc1c,EAAAA,EAAAA,GACuE,QAAnF+G,EAAoC,QAA9BjK,EAAK2P,EAAKgL,sBAAmC,IAAP3a,OAAgB,EAASA,EAAGyR,aAA0B,IAAPxH,EAAgBA,EAAK,KAEnHwF,EAAwB,CAC1BgC,MAAOrC,GAGLyQ,EAAenV,EAAO,GACtBoV,EAAyBvqB,EAAM0qB,iBAAiB,GAAI,CAAC,CACnDplB,MAAOglB,EACP/kB,QAAS,CAAEW,YAAa,oBAAqBykB,WAAY,MAC1D3T,EAAA1O,KAAA,GAAA0O,EAAAjQ,KAAA,GAIgBpH,KAAK2T,iBAAiBlM,MAAM8S,EAAuB,CAAEtY,OAAQjC,KAAKoC,QAASsM,MAAAA,IAAQ,QAAtGmc,EAAUxT,EAAAlO,KACV2hB,EAAYzqB,EAAM4qB,mBAAmBL,EAAuB,IAAI,QAGb,OAHavT,EAAA1O,KAAA,GAGhEtI,EAAM0qB,iBAAiBH,EAAwB,IAAIvT,EAAAzN,OAAA,YAEnD0P,GAAiBuR,EAAWK,WAAa3O,EAAMrC,SAAS1V,OAAS,GACjExE,KAAKmrB,KAAmB,OAAdL,QAAoC,IAAdA,EAAuBA,EAAYH,EAAcpO,GAAO,SAAC6O,GAAY,OAAK1kB,EAAU0L,OAAM,OAAQ,GAAMlK,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAA/H,EAAA,OAAA6H,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAtB,MAAA,OACjG,GAA/B/G,EAAQL,KAAKoC,QAAQiT,WACf,CAAF3M,EAAAtB,KAAA,eAAAsB,EAAAe,OAAA,iBAGV,OAHUf,EAAAtB,KAAA,EAGJ/G,EAAMgrB,OAAM,OAClBrrB,KAAKga,yBAAyBxE,EAAQ,CAAEyE,gBAAiBmR,EAAclR,SAAUqC,EAAMrC,UAAYZ,EAAe5K,GAAO,wBAAAhG,EAAAmB,OAAA,GAAAzB,EAAA,SAC3H,IACL,yBAAAiP,EAAAxN,OAAA,GAAAoN,EAAA,uBAET,GAAC,CAAA9W,IAAA,OAAAC,MACD,SAAKuF,EAAO4W,EAAO+O,GACftrB,KAAK+F,QACD/F,KAAKoC,QAAQoX,aACbxZ,KAAKqqB,eAAejqB,MAAQJ,KAAKoqB,sBAAsB9V,eAAeuS,EAAgB7mB,KAAKiqB,IAAKjqB,KAAKoC,QAASpC,KAAKkqB,gBAAiBlqB,KAAKmqB,aAAcxkB,EAAO4W,EAAO+O,GAE7K,GAAC,CAAAnrB,IAAA,QAAAC,MACD,WACIJ,KAAKqqB,eAAetkB,OACxB,GAAC,CAAA5F,IAAA,kBAAAC,MACD,WACI,IAAI0K,EACiC,QAApCA,EAAK9K,KAAKqqB,eAAejqB,aAA0B,IAAP0K,GAAyBA,EAAGge,cAC7E,KAACvU,CAAA,CA9EoB,CAAuCnO,EAAAA,IAgFhEmO,EAAwBzK,EAAW,CAC/BY,EAAQ,EAAGgT,EAAAA,IACXhT,EAAQ,EAAGiT,EAAAA,KACZpJ,E,sSC3LGgX,GAA4Bra,EAAAA,EAAAA,IAAgB,wBAC5Csa,EAA0B,IAAIlY,EAAAA,GAAc,wBAAwB,GAAOC,EAAAA,EAAAA,IAAS,uBAAwB,kFAClHL,EAAAA,EAAAA,GAAkBqY,EAAyB,WACvC,SAAApN,KAAcpe,EAAAA,EAAAA,GAAA,KAAAoe,GACVne,KAAKyrB,QAAU,IAAIC,OACvB,CAkCC,OAlCAxrB,EAAAA,EAAAA,GAAAie,EAAA,EAAAhe,IAAA,MAAAC,MACD,SAAI6B,EAAQ0M,GACR,IASIgd,EATA1Z,EAAOjS,KAAKyrB,QAAQ1iB,IAAI9G,GAY5B,OAXKgQ,IACDA,EAAOhQ,EAAO2pB,qBAAoB,SAAAhkB,GAG9B,MAAO,CAAEzH,IAFGqrB,EAAwBjE,OAAO3f,EAASmB,IAAIghB,EAAAA,KAE1C8B,OADC,IAAIC,EAAAA,EAEvB,IACA9rB,KAAKyrB,QAAQ/lB,IAAIzD,EAAQgQ,IAG7BA,EAAK9R,IAAIuF,KAAI,GACbimB,EAAW1Z,EAAK4Z,OAAO9d,KAAKY,GACrB,WAECgd,IACAA,IACA1Z,EAAK9R,IAAIuF,KAAKuM,EAAK4Z,OAAOnW,WAC1BiW,OAAWngB,EAEnB,CACJ,GAAC,CAAArL,IAAA,SAAAC,MACD,SAAO6B,GACH,IAAMgQ,EAAOjS,KAAKyrB,QAAQ1iB,IAAI9G,GAC9B,GAAKgQ,EAAL,CAIA,IAAMtD,EAAMsD,EAAK4Z,OAAOlF,MACpBhY,IACAA,EAAImB,SACJmC,EAAK9R,IAAIuF,KAAKuM,EAAK4Z,OAAOnW,WAL9B,CAOJ,KAACyI,CAAA,CArCsC,GAsCxC,GACI,IAAM4N,EAAuC,SAAAC,IAAAlqB,EAAAA,EAAAA,GAAAiqB,EAAAC,GAAA,IAAAjqB,GAAAC,EAAAA,EAAAA,GAAA+pB,GAChD,SAAAA,EAAY9pB,EAAQ8I,GAAQ,IAAA7I,EAG6F,OAH7FnC,EAAAA,EAAAA,GAAA,KAAAgsB,IACxB7pB,EAAAH,EAAAI,KAAA,KAAM4I,IACD9I,OAASA,EACdC,EAAK+pB,YAAchqB,EAAO2pB,qBAAoB,SAAAhkB,GAAQ,OAAIA,EAASmB,IAAIwiB,GAA2BxZ,IAAI9P,GAAM0lB,EAAAA,EAAAA,GAAAzlB,GAAO,IAAEA,CACzH,CAIC,OAJAhC,EAAAA,EAAAA,GAAA6rB,EAAA,EAAA5rB,IAAA,UAAAC,MACD,WACIJ,KAAKisB,eACLhmB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAA6lB,EAAA5lB,WAAA,gBAAAhE,KAAA,KACJ,KAAC4pB,CAAA,CAT+C,CAASnd,EAAAA,IAW7DqP,EAAAA,EAAAA,IAAsB,aAAAC,IAAApc,EAAAA,EAAAA,GAAAgd,EAAAZ,GAAA,IAAAjS,GAAAjK,EAAAA,EAAAA,GAAA8c,GAClB,SAAAA,IAAc,OAAA/e,EAAAA,EAAAA,GAAA,KAAA+e,GAAA7S,EAAA9J,KAAA,KACJ,CACF+I,GAAI,yBACJmT,OAAQ,CACJC,OAAQ,IACRC,QAAS,GAEbH,aAAcoN,GAEtB,CAGC,OAHAtrB,EAAAA,EAAAA,GAAA4e,EAAA,EAAA3e,IAAA,mBAAAC,MACD,SAAiBwH,EAAU3F,GACvB2F,EAASmB,IAAIwiB,GAA2Bzb,OAAO7N,EACnD,KAAC6c,CAAA,CAbqB,CAAcH,EAAAA,MCtDjC,IAAMuN,EAAW,WACpB,SAAAA,EAAYjqB,EAAQkqB,GAEhB,IAFuBpsB,EAAAA,EAAAA,GAAA,KAAAmsB,GACvBlsB,KAAKmsB,MAAQA,EAC4C,KAAvC,EAAbnsB,KAAKmsB,OAAkD,CACxD,IAAM9rB,EAAQ4B,EAAOoT,WACrBrV,KAAKosB,eAAiB/rB,EAAQgsB,EAAAA,GAAe,UAAWhsB,EAAMmM,IAAI8f,WAAYjsB,EAAMiS,gBAAkB,IAC1G,MAEItS,KAAKosB,eAAiB,KAEkC,KAA1C,EAAbpsB,KAAKmsB,OACNnsB,KAAKuE,SAAWtC,EAAOsqB,cAGvBvsB,KAAKuE,SAAW,KAEyC,KAA3C,EAAbvE,KAAKmsB,OACNnsB,KAAKJ,UAAYqC,EAAOiD,eAGxBlF,KAAKJ,UAAY,KAEqC,KAAxC,EAAbI,KAAKmsB,QACNnsB,KAAKwsB,WAAavqB,EAAOwqB,gBACzBzsB,KAAK0sB,UAAYzqB,EAAO0qB,iBAGxB3sB,KAAKwsB,YAAc,EACnBxsB,KAAK0sB,WAAa,EAE1B,CAsBC,OAtBAxsB,EAAAA,EAAAA,GAAAgsB,EAAA,EAAA/rB,IAAA,UAAAC,MACD,SAAQwlB,GACJ,KAAMA,aAAiBsG,GACnB,OAAO,EAEX,IAAMU,EAAQhH,EACd,OAAI5lB,KAAKosB,iBAAmBQ,EAAMR,iBAG9BpsB,KAAKwsB,aAAeI,EAAMJ,YAAcxsB,KAAK0sB,YAAcE,EAAMF,eAGhE1sB,KAAKuE,UAAYqoB,EAAMroB,UAAYvE,KAAKuE,WAAaqoB,EAAMroB,UAAYvE,KAAKuE,UAAYqoB,EAAMroB,WAAavE,KAAKuE,SAASxD,OAAO6rB,EAAMroB,eAGtIvE,KAAKJ,WAAagtB,EAAMhtB,WAAaI,KAAKJ,YAAcgtB,EAAMhtB,WAAaI,KAAKJ,WAAagtB,EAAMhtB,YAAcI,KAAKJ,UAAUitB,YAAYD,EAAMhtB,aAI3J,GAAC,CAAAO,IAAA,WAAAC,MACD,SAAS6B,GACL,OAAOjC,KAAK8sB,QAAQ,IAAIZ,EAAYjqB,EAAQjC,KAAKmsB,OACrD,KAACD,CAAA,CApDmB,GA2DXzS,EAAkC,SAAAsT,IAAAjrB,EAAAA,EAAAA,GAAA2X,EAAAsT,GAAA,IAAAhrB,GAAAC,EAAAA,EAAAA,GAAAyX,GAC3C,SAAAA,EAAYxX,EAAQkqB,EAAOxmB,EAAOoF,GAAQ,IAAA7I,EAuBrC,OAvBqCnC,EAAAA,EAAAA,GAAA,KAAA0Z,IACtCvX,EAAAH,EAAAI,KAAA,KAAMF,EAAQ8I,IACTiiB,UAAY,IAAIxb,EAAAA,GACT,EAAR2a,GACAjqB,EAAK8qB,UAAUjb,IAAI9P,EAAO6lB,2BAA0B,SAAAtmB,GAC3CmE,GAAUjF,EAAAA,EAAMG,iBAAiB8E,EAAOnE,EAAE+C,WAC3CrC,EAAK4N,QAEb,KAEQ,EAARqc,GACAjqB,EAAK8qB,UAAUjb,IAAI9P,EAAOgrB,4BAA2B,SAAAzrB,GAC5CmE,GAAUjF,EAAAA,EAAMwsB,cAAcvnB,EAAOnE,EAAE5B,YACxCsC,EAAK4N,QAEb,KAEQ,EAARqc,GACAjqB,EAAK8qB,UAAUjb,IAAI9P,EAAOkrB,mBAAkB,SAAAC,GAAC,OAAIlrB,EAAK4N,QAAQ,KAEtD,EAARqc,IACAjqB,EAAK8qB,UAAUjb,IAAI9P,EAAOuoB,kBAAiB,SAAA4C,GAAC,OAAIlrB,EAAK4N,QAAQ,KAC7D5N,EAAK8qB,UAAUjb,IAAI9P,EAAOwoB,yBAAwB,SAAA2C,GAAC,OAAIlrB,EAAK4N,QAAQ,MACvE5N,CACL,CAIC,OAJAhC,EAAAA,EAAAA,GAAAuZ,EAAA,EAAAtZ,IAAA,UAAAC,MACD,WACIJ,KAAKgtB,UAAUrjB,WACf1D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAuT,EAAAtT,WAAA,gBAAAhE,KAAA,KACJ,KAACsX,CAAA,CA7B0C,CAASsS,GAkC3CsB,EAAgC,SAAArB,IAAAlqB,EAAAA,EAAAA,GAAAurB,EAAArB,GAAA,IAAA/f,GAAAjK,EAAAA,EAAAA,GAAAqrB,GACzC,SAAAA,EAAYhtB,EAAO0K,GAAQ,IAAAqB,EAEwC,OAFxCrM,EAAAA,EAAAA,GAAA,KAAAstB,IACvBjhB,EAAAH,EAAA9J,KAAA,KAAM4I,IACDiiB,UAAY3sB,EAAMitB,oBAAmB,kBAAMlhB,EAAK0D,QAAQ,IAAE1D,CACnE,CAIC,OAJAlM,EAAAA,EAAAA,GAAAmtB,EAAA,EAAAltB,IAAA,UAAAC,MACD,WACIJ,KAAKgtB,UAAUrjB,WACf1D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAmnB,EAAAlnB,WAAA,gBAAAhE,KAAA,KACJ,KAACkrB,CAAA,CARwC,CAASze,EAAAA,E","sources":["../node_modules/monaco-editor/esm/vs/editor/contrib/dnd/browser/dragAndDropCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/dnd/browser/dnd.js","../node_modules/monaco-editor/esm/vs/editor/contrib/documentSymbols/browser/documentSymbols.js","../node_modules/monaco-editor/esm/vs/editor/contrib/documentSymbols/browser/outlineModel.js","../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/copyPasteController.js","../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/copyPasteContribution.js","../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/defaultProviders.js","../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/dropIntoEditorController.js","../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/dropIntoEditorContribution.js","../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/edit.js","../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/postEditWidget.js","../node_modules/monaco-editor/esm/vs/editor/contrib/editorState/browser/keybindingCancellation.js","../node_modules/monaco-editor/esm/vs/editor/contrib/editorState/browser/editorState.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class DragAndDropCommand {\n    constructor(selection, targetPosition, copy) {\n        this.selection = selection;\n        this.targetPosition = targetPosition;\n        this.copy = copy;\n        this.targetSelection = null;\n    }\n    getEditOperations(model, builder) {\n        const text = model.getValueInRange(this.selection);\n        if (!this.copy) {\n            builder.addEditOperation(this.selection, null);\n        }\n        builder.addEditOperation(new Range(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column), text);\n        if (this.selection.containsPosition(this.targetPosition) && !(this.copy && (this.selection.getEndPosition().equals(this.targetPosition) || this.selection.getStartPosition().equals(this.targetPosition)) // we allow users to paste content beside the selection\n        )) {\n            this.targetSelection = this.selection;\n            return;\n        }\n        if (this.copy) {\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.selection.endLineNumber - this.selection.startLineNumber + this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        if (this.targetPosition.lineNumber > this.selection.endLineNumber) {\n            // Drag the selection downwards\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        if (this.targetPosition.lineNumber < this.selection.endLineNumber) {\n            // Drag the selection upwards\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber + this.selection.endLineNumber - this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        // The target position is at the same line as the selection's end position.\n        if (this.selection.endColumn <= this.targetPosition.column) {\n            // The target position is after the selection's end position\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn :\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column :\n                this.selection.endColumn);\n        }\n        else {\n            // The target position is before the selection's end position. Since the selection doesn't contain the target position, the selection is one-line and target position is before this selection.\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column + this.selection.endColumn - this.selection.startColumn);\n        }\n    }\n    computeCursorState(model, helper) {\n        return this.targetSelection;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { isMacintosh } from '../../../../base/common/platform.js';\nimport './dnd.css';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { DragAndDropCommand } from './dragAndDropCommand.js';\nfunction hasTriggerModifier(e) {\n    if (isMacintosh) {\n        return e.altKey;\n    }\n    else {\n        return e.ctrlKey;\n    }\n}\nexport class DragAndDropController extends Disposable {\n    constructor(editor) {\n        super();\n        this._editor = editor;\n        this._dndDecorationIds = this._editor.createDecorationsCollection();\n        this._register(this._editor.onMouseDown((e) => this._onEditorMouseDown(e)));\n        this._register(this._editor.onMouseUp((e) => this._onEditorMouseUp(e)));\n        this._register(this._editor.onMouseDrag((e) => this._onEditorMouseDrag(e)));\n        this._register(this._editor.onMouseDrop((e) => this._onEditorMouseDrop(e)));\n        this._register(this._editor.onMouseDropCanceled(() => this._onEditorMouseDropCanceled()));\n        this._register(this._editor.onKeyDown((e) => this.onEditorKeyDown(e)));\n        this._register(this._editor.onKeyUp((e) => this.onEditorKeyUp(e)));\n        this._register(this._editor.onDidBlurEditorWidget(() => this.onEditorBlur()));\n        this._register(this._editor.onDidBlurEditorText(() => this.onEditorBlur()));\n        this._mouseDown = false;\n        this._modifierPressed = false;\n        this._dragSelection = null;\n    }\n    onEditorBlur() {\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n        this._modifierPressed = false;\n    }\n    onEditorKeyDown(e) {\n        if (!this._editor.getOption(35 /* EditorOption.dragAndDrop */) || this._editor.getOption(22 /* EditorOption.columnSelection */)) {\n            return;\n        }\n        if (hasTriggerModifier(e)) {\n            this._modifierPressed = true;\n        }\n        if (this._mouseDown && hasTriggerModifier(e)) {\n            this._editor.updateOptions({\n                mouseStyle: 'copy'\n            });\n        }\n    }\n    onEditorKeyUp(e) {\n        if (!this._editor.getOption(35 /* EditorOption.dragAndDrop */) || this._editor.getOption(22 /* EditorOption.columnSelection */)) {\n            return;\n        }\n        if (hasTriggerModifier(e)) {\n            this._modifierPressed = false;\n        }\n        if (this._mouseDown && e.keyCode === DragAndDropController.TRIGGER_KEY_VALUE) {\n            this._editor.updateOptions({\n                mouseStyle: 'default'\n            });\n        }\n    }\n    _onEditorMouseDown(mouseEvent) {\n        this._mouseDown = true;\n    }\n    _onEditorMouseUp(mouseEvent) {\n        this._mouseDown = false;\n        // Whenever users release the mouse, the drag and drop operation should finish and the cursor should revert to text.\n        this._editor.updateOptions({\n            mouseStyle: 'text'\n        });\n    }\n    _onEditorMouseDrag(mouseEvent) {\n        const target = mouseEvent.target;\n        if (this._dragSelection === null) {\n            const selections = this._editor.getSelections() || [];\n            const possibleSelections = selections.filter(selection => target.position && selection.containsPosition(target.position));\n            if (possibleSelections.length === 1) {\n                this._dragSelection = possibleSelections[0];\n            }\n            else {\n                return;\n            }\n        }\n        if (hasTriggerModifier(mouseEvent.event)) {\n            this._editor.updateOptions({\n                mouseStyle: 'copy'\n            });\n        }\n        else {\n            this._editor.updateOptions({\n                mouseStyle: 'default'\n            });\n        }\n        if (target.position) {\n            if (this._dragSelection.containsPosition(target.position)) {\n                this._removeDecoration();\n            }\n            else {\n                this.showAt(target.position);\n            }\n        }\n    }\n    _onEditorMouseDropCanceled() {\n        this._editor.updateOptions({\n            mouseStyle: 'text'\n        });\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n    }\n    _onEditorMouseDrop(mouseEvent) {\n        if (mouseEvent.target && (this._hitContent(mouseEvent.target) || this._hitMargin(mouseEvent.target)) && mouseEvent.target.position) {\n            const newCursorPosition = new Position(mouseEvent.target.position.lineNumber, mouseEvent.target.position.column);\n            if (this._dragSelection === null) {\n                let newSelections = null;\n                if (mouseEvent.event.shiftKey) {\n                    const primarySelection = this._editor.getSelection();\n                    if (primarySelection) {\n                        const { selectionStartLineNumber, selectionStartColumn } = primarySelection;\n                        newSelections = [new Selection(selectionStartLineNumber, selectionStartColumn, newCursorPosition.lineNumber, newCursorPosition.column)];\n                    }\n                }\n                else {\n                    newSelections = (this._editor.getSelections() || []).map(selection => {\n                        if (selection.containsPosition(newCursorPosition)) {\n                            return new Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);\n                        }\n                        else {\n                            return selection;\n                        }\n                    });\n                }\n                // Use `mouse` as the source instead of `api` and setting the reason to explicit (to behave like any other mouse operation).\n                this._editor.setSelections(newSelections || [], 'mouse', 3 /* CursorChangeReason.Explicit */);\n            }\n            else if (!this._dragSelection.containsPosition(newCursorPosition) ||\n                ((hasTriggerModifier(mouseEvent.event) ||\n                    this._modifierPressed) && (this._dragSelection.getEndPosition().equals(newCursorPosition) || this._dragSelection.getStartPosition().equals(newCursorPosition)) // we allow users to paste content beside the selection\n                )) {\n                this._editor.pushUndoStop();\n                this._editor.executeCommand(DragAndDropController.ID, new DragAndDropCommand(this._dragSelection, newCursorPosition, hasTriggerModifier(mouseEvent.event) || this._modifierPressed));\n                this._editor.pushUndoStop();\n            }\n        }\n        this._editor.updateOptions({\n            mouseStyle: 'text'\n        });\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n    }\n    showAt(position) {\n        this._dndDecorationIds.set([{\n                range: new Range(position.lineNumber, position.column, position.lineNumber, position.column),\n                options: DragAndDropController._DECORATION_OPTIONS\n            }]);\n        this._editor.revealPosition(position, 1 /* ScrollType.Immediate */);\n    }\n    _removeDecoration() {\n        this._dndDecorationIds.clear();\n    }\n    _hitContent(target) {\n        return target.type === 6 /* MouseTargetType.CONTENT_TEXT */ ||\n            target.type === 7 /* MouseTargetType.CONTENT_EMPTY */;\n    }\n    _hitMargin(target) {\n        return target.type === 2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */ ||\n            target.type === 3 /* MouseTargetType.GUTTER_LINE_NUMBERS */ ||\n            target.type === 4 /* MouseTargetType.GUTTER_LINE_DECORATIONS */;\n    }\n    dispose() {\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n        this._modifierPressed = false;\n        super.dispose();\n    }\n}\nDragAndDropController.ID = 'editor.contrib.dragAndDrop';\nDragAndDropController.TRIGGER_KEY_VALUE = isMacintosh ? 6 /* KeyCode.Alt */ : 5 /* KeyCode.Ctrl */;\nDragAndDropController._DECORATION_OPTIONS = ModelDecorationOptions.register({\n    description: 'dnd-target',\n    className: 'dnd-target'\n});\nregisterEditorContribution(DragAndDropController.ID, DragAndDropController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { IOutlineModelService } from './outlineModel.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nCommandsRegistry.registerCommand('_executeDocumentSymbolProvider', function (accessor, ...args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [resource] = args;\n        assertType(URI.isUri(resource));\n        const outlineService = accessor.get(IOutlineModelService);\n        const modelService = accessor.get(ITextModelService);\n        const reference = yield modelService.createModelReference(resource);\n        try {\n            return (yield outlineService.getOrCreate(reference.object.textEditorModel, CancellationToken.None)).getTopLevelSymbols();\n        }\n        finally {\n            reference.dispose();\n        }\n    });\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { equals } from '../../../../base/common/arrays.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport class TreeElement {\n    remove() {\n        var _a;\n        (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.delete(this.id);\n    }\n    static findId(candidate, container) {\n        // complex id-computation which contains the origin/extension,\n        // the parent path, and some dedupe logic when names collide\n        let candidateId;\n        if (typeof candidate === 'string') {\n            candidateId = `${container.id}/${candidate}`;\n        }\n        else {\n            candidateId = `${container.id}/${candidate.name}`;\n            if (container.children.get(candidateId) !== undefined) {\n                candidateId = `${container.id}/${candidate.name}_${candidate.range.startLineNumber}_${candidate.range.startColumn}`;\n            }\n        }\n        let id = candidateId;\n        for (let i = 0; container.children.get(id) !== undefined; i++) {\n            id = `${candidateId}_${i}`;\n        }\n        return id;\n    }\n    static empty(element) {\n        return element.children.size === 0;\n    }\n}\nexport class OutlineElement extends TreeElement {\n    constructor(id, parent, symbol) {\n        super();\n        this.id = id;\n        this.parent = parent;\n        this.symbol = symbol;\n        this.children = new Map();\n    }\n}\nexport class OutlineGroup extends TreeElement {\n    constructor(id, parent, label, order) {\n        super();\n        this.id = id;\n        this.parent = parent;\n        this.label = label;\n        this.order = order;\n        this.children = new Map();\n    }\n}\nexport class OutlineModel extends TreeElement {\n    static create(registry, textModel, token) {\n        const cts = new CancellationTokenSource(token);\n        const result = new OutlineModel(textModel.uri);\n        const provider = registry.ordered(textModel);\n        const promises = provider.map((provider, index) => {\n            var _a;\n            const id = TreeElement.findId(`provider_${index}`, result);\n            const group = new OutlineGroup(id, result, (_a = provider.displayName) !== null && _a !== void 0 ? _a : 'Unknown Outline Provider', index);\n            return Promise.resolve(provider.provideDocumentSymbols(textModel, cts.token)).then(result => {\n                for (const info of result || []) {\n                    OutlineModel._makeOutlineElement(info, group);\n                }\n                return group;\n            }, err => {\n                onUnexpectedExternalError(err);\n                return group;\n            }).then(group => {\n                if (!TreeElement.empty(group)) {\n                    result._groups.set(id, group);\n                }\n                else {\n                    group.remove();\n                }\n            });\n        });\n        const listener = registry.onDidChange(() => {\n            const newProvider = registry.ordered(textModel);\n            if (!equals(newProvider, provider)) {\n                cts.cancel();\n            }\n        });\n        return Promise.all(promises).then(() => {\n            if (cts.token.isCancellationRequested && !token.isCancellationRequested) {\n                return OutlineModel.create(registry, textModel, token);\n            }\n            else {\n                return result._compact();\n            }\n        }).finally(() => {\n            cts.dispose();\n            listener.dispose();\n            cts.dispose();\n        });\n    }\n    static _makeOutlineElement(info, container) {\n        const id = TreeElement.findId(info, container);\n        const res = new OutlineElement(id, container, info);\n        if (info.children) {\n            for (const childInfo of info.children) {\n                OutlineModel._makeOutlineElement(childInfo, res);\n            }\n        }\n        container.children.set(res.id, res);\n    }\n    constructor(uri) {\n        super();\n        this.uri = uri;\n        this.id = 'root';\n        this.parent = undefined;\n        this._groups = new Map();\n        this.children = new Map();\n        this.id = 'root';\n        this.parent = undefined;\n    }\n    _compact() {\n        let count = 0;\n        for (const [key, group] of this._groups) {\n            if (group.children.size === 0) { // empty\n                this._groups.delete(key);\n            }\n            else {\n                count += 1;\n            }\n        }\n        if (count !== 1) {\n            //\n            this.children = this._groups;\n        }\n        else {\n            // adopt all elements of the first group\n            const group = Iterable.first(this._groups.values());\n            for (const [, child] of group.children) {\n                child.parent = this;\n                this.children.set(child.id, child);\n            }\n        }\n        return this;\n    }\n    getTopLevelSymbols() {\n        const roots = [];\n        for (const child of this.children.values()) {\n            if (child instanceof OutlineElement) {\n                roots.push(child.symbol);\n            }\n            else {\n                roots.push(...Iterable.map(child.children.values(), child => child.symbol));\n            }\n        }\n        return roots.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\n    }\n    asListOfDocumentSymbols() {\n        const roots = this.getTopLevelSymbols();\n        const bucket = [];\n        OutlineModel._flattenDocumentSymbols(bucket, roots, '');\n        return bucket.sort((a, b) => Position.compare(Range.getStartPosition(a.range), Range.getStartPosition(b.range)) || Position.compare(Range.getEndPosition(b.range), Range.getEndPosition(a.range)));\n    }\n    static _flattenDocumentSymbols(bucket, entries, overrideContainerLabel) {\n        for (const entry of entries) {\n            bucket.push({\n                kind: entry.kind,\n                tags: entry.tags,\n                name: entry.name,\n                detail: entry.detail,\n                containerName: entry.containerName || overrideContainerLabel,\n                range: entry.range,\n                selectionRange: entry.selectionRange,\n                children: undefined, // we flatten it...\n            });\n            // Recurse over children\n            if (entry.children) {\n                OutlineModel._flattenDocumentSymbols(bucket, entry.children, entry.name);\n            }\n        }\n    }\n}\nexport const IOutlineModelService = createDecorator('IOutlineModelService');\nlet OutlineModelService = class OutlineModelService {\n    constructor(_languageFeaturesService, debounces, modelService) {\n        this._languageFeaturesService = _languageFeaturesService;\n        this._disposables = new DisposableStore();\n        this._cache = new LRUCache(10, 0.7);\n        this._debounceInformation = debounces.for(_languageFeaturesService.documentSymbolProvider, 'DocumentSymbols', { min: 350 });\n        // don't cache outline models longer than their text model\n        this._disposables.add(modelService.onModelRemoved(textModel => {\n            this._cache.delete(textModel.id);\n        }));\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n    getOrCreate(textModel, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const registry = this._languageFeaturesService.documentSymbolProvider;\n            const provider = registry.ordered(textModel);\n            let data = this._cache.get(textModel.id);\n            if (!data || data.versionId !== textModel.getVersionId() || !equals(data.provider, provider)) {\n                const source = new CancellationTokenSource();\n                data = {\n                    versionId: textModel.getVersionId(),\n                    provider,\n                    promiseCnt: 0,\n                    source,\n                    promise: OutlineModel.create(registry, textModel, source.token),\n                    model: undefined,\n                };\n                this._cache.set(textModel.id, data);\n                const now = Date.now();\n                data.promise.then(outlineModel => {\n                    data.model = outlineModel;\n                    this._debounceInformation.update(textModel, Date.now() - now);\n                }).catch(_err => {\n                    this._cache.delete(textModel.id);\n                });\n            }\n            if (data.model) {\n                // resolved -> return data\n                return data.model;\n            }\n            // increase usage counter\n            data.promiseCnt += 1;\n            const listener = token.onCancellationRequested(() => {\n                // last -> cancel provider request, remove cached promise\n                if (--data.promiseCnt === 0) {\n                    data.source.cancel();\n                    this._cache.delete(textModel.id);\n                }\n            });\n            try {\n                return yield data.promise;\n            }\n            finally {\n                listener.dispose();\n            }\n        });\n    }\n};\nOutlineModelService = __decorate([\n    __param(0, ILanguageFeaturesService),\n    __param(1, ILanguageFeatureDebounceService),\n    __param(2, IModelService)\n], OutlineModelService);\nexport { OutlineModelService };\nregisterSingleton(IOutlineModelService, OutlineModelService, 1 /* InstantiationType.Delayed */);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar CopyPasteController_1;\nimport { addDisposableListener, getActiveDocument } from '../../../../base/browser/dom.js';\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, raceCancellation } from '../../../../base/common/async.js';\nimport { UriList, createStringDataTransferItem, matchesMimeType } from '../../../../base/common/dataTransfer.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Mimes } from '../../../../base/common/mime.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { generateUuid } from '../../../../base/common/uuid.js';\nimport { ClipboardEventUtils } from '../../../browser/controller/textAreaInput.js';\nimport { toExternalVSDataTransfer, toVSDataTransfer } from '../../../browser/dnd.js';\nimport { IBulkEditService } from '../../../browser/services/bulkEditService.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { createCombinedWorkspaceEdit, sortEditsByYieldTo } from './edit.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { InlineProgressManager } from '../../inlineProgress/browser/inlineProgress.js';\nimport { localize } from '../../../../nls.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IProgressService } from '../../../../platform/progress/common/progress.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { PostEditWidgetManager } from './postEditWidget.js';\nexport const changePasteTypeCommandId = 'editor.changePasteType';\nexport const pasteWidgetVisibleCtx = new RawContextKey('pasteWidgetVisible', false, localize('pasteWidgetVisible', \"Whether the paste widget is showing\"));\nconst vscodeClipboardMime = 'application/vnd.code.copyMetadata';\nlet CopyPasteController = CopyPasteController_1 = class CopyPasteController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(CopyPasteController_1.ID);\n    }\n    constructor(editor, instantiationService, _bulkEditService, _clipboardService, _languageFeaturesService, _quickInputService, _progressService) {\n        super();\n        this._bulkEditService = _bulkEditService;\n        this._clipboardService = _clipboardService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._quickInputService = _quickInputService;\n        this._progressService = _progressService;\n        this._editor = editor;\n        const container = editor.getContainerDomNode();\n        this._register(addDisposableListener(container, 'copy', e => this.handleCopy(e)));\n        this._register(addDisposableListener(container, 'cut', e => this.handleCopy(e)));\n        this._register(addDisposableListener(container, 'paste', e => this.handlePaste(e), true));\n        this._pasteProgressManager = this._register(new InlineProgressManager('pasteIntoEditor', editor, instantiationService));\n        this._postPasteWidgetManager = this._register(instantiationService.createInstance(PostEditWidgetManager, 'pasteIntoEditor', editor, pasteWidgetVisibleCtx, { id: changePasteTypeCommandId, label: localize('postPasteWidgetTitle', \"Show paste options...\") }));\n    }\n    changePasteType() {\n        this._postPasteWidgetManager.tryShowSelector();\n    }\n    pasteAs(preferredId) {\n        this._editor.focus();\n        try {\n            this._pasteAsActionContext = { preferredId };\n            getActiveDocument().execCommand('paste');\n        }\n        finally {\n            this._pasteAsActionContext = undefined;\n        }\n    }\n    isPasteAsEnabled() {\n        return this._editor.getOption(84 /* EditorOption.pasteAs */).enabled\n            && !this._editor.getOption(90 /* EditorOption.readOnly */);\n    }\n    handleCopy(e) {\n        var _a, _b;\n        if (!this._editor.hasTextFocus()) {\n            return;\n        }\n        if (platform.isWeb) {\n            // Explicitly clear the web resources clipboard.\n            // This is needed because on web, the browser clipboard is faked out using an in-memory store.\n            // This means the resources clipboard is not properly updated when copying from the editor.\n            this._clipboardService.writeResources([]);\n        }\n        if (!e.clipboardData || !this.isPasteAsEnabled()) {\n            return;\n        }\n        const model = this._editor.getModel();\n        const selections = this._editor.getSelections();\n        if (!model || !(selections === null || selections === void 0 ? void 0 : selections.length)) {\n            return;\n        }\n        const enableEmptySelectionClipboard = this._editor.getOption(37 /* EditorOption.emptySelectionClipboard */);\n        let ranges = selections;\n        const wasFromEmptySelection = selections.length === 1 && selections[0].isEmpty();\n        if (wasFromEmptySelection) {\n            if (!enableEmptySelectionClipboard) {\n                return;\n            }\n            ranges = [new Range(ranges[0].startLineNumber, 1, ranges[0].startLineNumber, 1 + model.getLineLength(ranges[0].startLineNumber))];\n        }\n        const toCopy = (_a = this._editor._getViewModel()) === null || _a === void 0 ? void 0 : _a.getPlainTextToCopy(selections, enableEmptySelectionClipboard, platform.isWindows);\n        const multicursorText = Array.isArray(toCopy) ? toCopy : null;\n        const defaultPastePayload = {\n            multicursorText,\n            pasteOnNewLine: wasFromEmptySelection,\n            mode: null\n        };\n        const providers = this._languageFeaturesService.documentPasteEditProvider\n            .ordered(model)\n            .filter(x => !!x.prepareDocumentPaste);\n        if (!providers.length) {\n            this.setCopyMetadata(e.clipboardData, { defaultPastePayload });\n            return;\n        }\n        const dataTransfer = toVSDataTransfer(e.clipboardData);\n        const providerCopyMimeTypes = providers.flatMap(x => { var _a; return (_a = x.copyMimeTypes) !== null && _a !== void 0 ? _a : []; });\n        // Save off a handle pointing to data that VS Code maintains.\n        const handle = generateUuid();\n        this.setCopyMetadata(e.clipboardData, {\n            id: handle,\n            providerCopyMimeTypes,\n            defaultPastePayload\n        });\n        const promise = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n            const results = coalesce(yield Promise.all(providers.map((provider) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    return yield provider.prepareDocumentPaste(model, ranges, dataTransfer, token);\n                }\n                catch (err) {\n                    console.error(err);\n                    return undefined;\n                }\n            }))));\n            // Values from higher priority providers should overwrite values from lower priority ones.\n            // Reverse the array to so that the calls to `replace` below will do this\n            results.reverse();\n            for (const result of results) {\n                for (const [mime, value] of result) {\n                    dataTransfer.replace(mime, value);\n                }\n            }\n            return dataTransfer;\n        }));\n        (_b = this._currentCopyOperation) === null || _b === void 0 ? void 0 : _b.dataTransferPromise.cancel();\n        this._currentCopyOperation = { handle: handle, dataTransferPromise: promise };\n    }\n    handlePaste(e) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!e.clipboardData || !this._editor.hasTextFocus()) {\n                return;\n            }\n            (_a = this._currentPasteOperation) === null || _a === void 0 ? void 0 : _a.cancel();\n            this._currentPasteOperation = undefined;\n            const model = this._editor.getModel();\n            const selections = this._editor.getSelections();\n            if (!(selections === null || selections === void 0 ? void 0 : selections.length) || !model) {\n                return;\n            }\n            if (!this.isPasteAsEnabled()) {\n                return;\n            }\n            const metadata = this.fetchCopyMetadata(e);\n            const dataTransfer = toExternalVSDataTransfer(e.clipboardData);\n            dataTransfer.delete(vscodeClipboardMime);\n            const allPotentialMimeTypes = [\n                ...e.clipboardData.types,\n                ...(_b = metadata === null || metadata === void 0 ? void 0 : metadata.providerCopyMimeTypes) !== null && _b !== void 0 ? _b : [],\n                // TODO: always adds `uri-list` because this get set if there are resources in the system clipboard.\n                // However we can only check the system clipboard async. For this early check, just add it in.\n                // We filter providers again once we have the final dataTransfer we will use.\n                Mimes.uriList,\n            ];\n            const allProviders = this._languageFeaturesService.documentPasteEditProvider\n                .ordered(model)\n                .filter(provider => { var _a; return (_a = provider.pasteMimeTypes) === null || _a === void 0 ? void 0 : _a.some(type => matchesMimeType(type, allPotentialMimeTypes)); });\n            if (!allProviders.length) {\n                return;\n            }\n            // Prevent the editor's default paste handler from running.\n            // Note that after this point, we are fully responsible for handling paste.\n            // If we can't provider a paste for any reason, we need to explicitly delegate pasting back to the editor.\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            if (this._pasteAsActionContext) {\n                this.showPasteAsPick(this._pasteAsActionContext.preferredId, allProviders, selections, dataTransfer, metadata);\n            }\n            else {\n                this.doPasteInline(allProviders, selections, dataTransfer, metadata);\n            }\n        });\n    }\n    doPasteInline(allProviders, selections, dataTransfer, metadata) {\n        const p = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n            const editor = this._editor;\n            if (!editor.hasModel()) {\n                return;\n            }\n            const model = editor.getModel();\n            const tokenSource = new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */ | 2 /* CodeEditorStateFlag.Selection */, undefined, token);\n            try {\n                yield this.mergeInDataFromCopy(dataTransfer, metadata, tokenSource.token);\n                if (tokenSource.token.isCancellationRequested) {\n                    return;\n                }\n                // Filter out any providers the don't match the full data transfer we will send them.\n                const supportedProviders = allProviders.filter(provider => isSupportedPasteProvider(provider, dataTransfer));\n                if (!supportedProviders.length\n                    || (supportedProviders.length === 1 && supportedProviders[0].id === 'text') // Only our default text provider is active\n                ) {\n                    yield this.applyDefaultPasteHandler(dataTransfer, metadata, tokenSource.token);\n                    return;\n                }\n                const providerEdits = yield this.getPasteEdits(supportedProviders, dataTransfer, model, selections, tokenSource.token);\n                if (tokenSource.token.isCancellationRequested) {\n                    return;\n                }\n                // If the only edit returned is a text edit, use the default paste handler\n                if (providerEdits.length === 1 && providerEdits[0].providerId === 'text') {\n                    yield this.applyDefaultPasteHandler(dataTransfer, metadata, tokenSource.token);\n                    return;\n                }\n                if (providerEdits.length) {\n                    const canShowWidget = editor.getOption(84 /* EditorOption.pasteAs */).showPasteSelector === 'afterPaste';\n                    return this._postPasteWidgetManager.applyEditAndShowIfNeeded(selections, { activeEditIndex: 0, allEdits: providerEdits }, canShowWidget, tokenSource.token);\n                }\n                yield this.applyDefaultPasteHandler(dataTransfer, metadata, tokenSource.token);\n            }\n            finally {\n                tokenSource.dispose();\n                if (this._currentPasteOperation === p) {\n                    this._currentPasteOperation = undefined;\n                }\n            }\n        }));\n        this._pasteProgressManager.showWhile(selections[0].getEndPosition(), localize('pasteIntoEditorProgress', \"Running paste handlers. Click to cancel\"), p);\n        this._currentPasteOperation = p;\n    }\n    showPasteAsPick(preferredId, allProviders, selections, dataTransfer, metadata) {\n        const p = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n            const editor = this._editor;\n            if (!editor.hasModel()) {\n                return;\n            }\n            const model = editor.getModel();\n            const tokenSource = new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */ | 2 /* CodeEditorStateFlag.Selection */, undefined, token);\n            try {\n                yield this.mergeInDataFromCopy(dataTransfer, metadata, tokenSource.token);\n                if (tokenSource.token.isCancellationRequested) {\n                    return;\n                }\n                // Filter out any providers the don't match the full data transfer we will send them.\n                let supportedProviders = allProviders.filter(provider => isSupportedPasteProvider(provider, dataTransfer));\n                if (preferredId) {\n                    // We are looking for a specific edit\n                    supportedProviders = supportedProviders.filter(edit => edit.id === preferredId);\n                }\n                const providerEdits = yield this.getPasteEdits(supportedProviders, dataTransfer, model, selections, tokenSource.token);\n                if (tokenSource.token.isCancellationRequested) {\n                    return;\n                }\n                if (!providerEdits.length) {\n                    return;\n                }\n                let pickedEdit;\n                if (preferredId) {\n                    pickedEdit = providerEdits.at(0);\n                }\n                else {\n                    const selected = yield this._quickInputService.pick(providerEdits.map((edit) => ({\n                        label: edit.label,\n                        description: edit.providerId,\n                        detail: edit.detail,\n                        edit,\n                    })), {\n                        placeHolder: localize('pasteAsPickerPlaceholder', \"Select Paste Action\"),\n                    });\n                    pickedEdit = selected === null || selected === void 0 ? void 0 : selected.edit;\n                }\n                if (!pickedEdit) {\n                    return;\n                }\n                const combinedWorkspaceEdit = createCombinedWorkspaceEdit(model.uri, selections, pickedEdit);\n                yield this._bulkEditService.apply(combinedWorkspaceEdit, { editor: this._editor });\n            }\n            finally {\n                tokenSource.dispose();\n                if (this._currentPasteOperation === p) {\n                    this._currentPasteOperation = undefined;\n                }\n            }\n        }));\n        this._progressService.withProgress({\n            location: 10 /* ProgressLocation.Window */,\n            title: localize('pasteAsProgress', \"Running paste handlers\"),\n        }, () => p);\n    }\n    setCopyMetadata(dataTransfer, metadata) {\n        dataTransfer.setData(vscodeClipboardMime, JSON.stringify(metadata));\n    }\n    fetchCopyMetadata(e) {\n        var _a;\n        if (!e.clipboardData) {\n            return;\n        }\n        // Prefer using the clipboard data we saved off\n        const rawMetadata = e.clipboardData.getData(vscodeClipboardMime);\n        if (rawMetadata) {\n            try {\n                return JSON.parse(rawMetadata);\n            }\n            catch (_b) {\n                return undefined;\n            }\n        }\n        // Otherwise try to extract the generic text editor metadata\n        const [_, metadata] = ClipboardEventUtils.getTextData(e.clipboardData);\n        if (metadata) {\n            return {\n                defaultPastePayload: {\n                    mode: metadata.mode,\n                    multicursorText: (_a = metadata.multicursorText) !== null && _a !== void 0 ? _a : null,\n                    pasteOnNewLine: !!metadata.isFromEmptySelection,\n                },\n            };\n        }\n        return undefined;\n    }\n    mergeInDataFromCopy(dataTransfer, metadata, token) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((metadata === null || metadata === void 0 ? void 0 : metadata.id) && ((_a = this._currentCopyOperation) === null || _a === void 0 ? void 0 : _a.handle) === metadata.id) {\n                const toMergeDataTransfer = yield this._currentCopyOperation.dataTransferPromise;\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                for (const [key, value] of toMergeDataTransfer) {\n                    dataTransfer.replace(key, value);\n                }\n            }\n            if (!dataTransfer.has(Mimes.uriList)) {\n                const resources = yield this._clipboardService.readResources();\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                if (resources.length) {\n                    dataTransfer.append(Mimes.uriList, createStringDataTransferItem(UriList.create(resources)));\n                }\n            }\n        });\n    }\n    getPasteEdits(providers, dataTransfer, model, selections, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const results = yield raceCancellation(Promise.all(providers.map((provider) => __awaiter(this, void 0, void 0, function* () {\n                var _a;\n                try {\n                    const edit = yield ((_a = provider.provideDocumentPasteEdits) === null || _a === void 0 ? void 0 : _a.call(provider, model, selections, dataTransfer, token));\n                    if (edit) {\n                        return Object.assign(Object.assign({}, edit), { providerId: provider.id });\n                    }\n                }\n                catch (err) {\n                    console.error(err);\n                }\n                return undefined;\n            }))), token);\n            const edits = coalesce(results !== null && results !== void 0 ? results : []);\n            return sortEditsByYieldTo(edits);\n        });\n    }\n    applyDefaultPasteHandler(dataTransfer, metadata, token) {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            const textDataTransfer = (_a = dataTransfer.get(Mimes.text)) !== null && _a !== void 0 ? _a : dataTransfer.get('text');\n            if (!textDataTransfer) {\n                return;\n            }\n            const text = yield textDataTransfer.asString();\n            if (token.isCancellationRequested) {\n                return;\n            }\n            const payload = {\n                text,\n                pasteOnNewLine: (_b = metadata === null || metadata === void 0 ? void 0 : metadata.defaultPastePayload.pasteOnNewLine) !== null && _b !== void 0 ? _b : false,\n                multicursorText: (_c = metadata === null || metadata === void 0 ? void 0 : metadata.defaultPastePayload.multicursorText) !== null && _c !== void 0 ? _c : null,\n                mode: null,\n            };\n            this._editor.trigger('keyboard', \"paste\" /* Handler.Paste */, payload);\n        });\n    }\n};\nCopyPasteController.ID = 'editor.contrib.copyPasteActionController';\nCopyPasteController = CopyPasteController_1 = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IBulkEditService),\n    __param(3, IClipboardService),\n    __param(4, ILanguageFeaturesService),\n    __param(5, IQuickInputService),\n    __param(6, IProgressService)\n], CopyPasteController);\nexport { CopyPasteController };\nfunction isSupportedPasteProvider(provider, dataTransfer) {\n    var _a;\n    return Boolean((_a = provider.pasteMimeTypes) === null || _a === void 0 ? void 0 : _a.some(type => dataTransfer.matches(type)));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { registerEditorFeature } from '../../../common/editorFeatures.js';\nimport { CopyPasteController, changePasteTypeCommandId, pasteWidgetVisibleCtx } from './copyPasteController.js';\nimport { DefaultPasteProvidersFeature } from './defaultProviders.js';\nimport * as nls from '../../../../nls.js';\nregisterEditorContribution(CopyPasteController.ID, CopyPasteController, 0 /* EditorContributionInstantiation.Eager */); // eager because it listens to events on the container dom node of the editor\nregisterEditorFeature(DefaultPasteProvidersFeature);\nregisterEditorCommand(new class extends EditorCommand {\n    constructor() {\n        super({\n            id: changePasteTypeCommandId,\n            precondition: pasteWidgetVisibleCtx,\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 89 /* KeyCode.Period */,\n            }\n        });\n    }\n    runEditorCommand(_accessor, editor, _args) {\n        var _a;\n        return (_a = CopyPasteController.get(editor)) === null || _a === void 0 ? void 0 : _a.changePasteType();\n    }\n});\nregisterEditorAction(class extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.pasteAs',\n            label: nls.localize('pasteAs', \"Paste As...\"),\n            alias: 'Paste As...',\n            precondition: undefined,\n            description: {\n                description: 'Paste as',\n                args: [{\n                        name: 'args',\n                        schema: {\n                            type: 'object',\n                            properties: {\n                                'id': {\n                                    type: 'string',\n                                    description: nls.localize('pasteAs.id', \"The id of the paste edit to try applying. If not provided, the editor will show a picker.\"),\n                                }\n                            },\n                        }\n                    }]\n            }\n        });\n    }\n    run(_accessor, editor, args) {\n        var _a;\n        const id = typeof (args === null || args === void 0 ? void 0 : args.id) === 'string' ? args.id : undefined;\n        return (_a = CopyPasteController.get(editor)) === null || _a === void 0 ? void 0 : _a.pasteAs(id);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { UriList } from '../../../../base/common/dataTransfer.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Mimes } from '../../../../base/common/mime.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { relativePath } from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { localize } from '../../../../nls.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nconst builtInLabel = localize('builtIn', 'Built-in');\nclass SimplePasteAndDropProvider {\n    provideDocumentPasteEdits(_model, _ranges, dataTransfer, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const edit = yield this.getEdit(dataTransfer, token);\n            return edit ? { insertText: edit.insertText, label: edit.label, detail: edit.detail, handledMimeType: edit.handledMimeType, yieldTo: edit.yieldTo } : undefined;\n        });\n    }\n    provideDocumentOnDropEdits(_model, _position, dataTransfer, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const edit = yield this.getEdit(dataTransfer, token);\n            return edit ? { insertText: edit.insertText, label: edit.label, handledMimeType: edit.handledMimeType, yieldTo: edit.yieldTo } : undefined;\n        });\n    }\n}\nclass DefaultTextProvider extends SimplePasteAndDropProvider {\n    constructor() {\n        super(...arguments);\n        this.id = 'text';\n        this.dropMimeTypes = [Mimes.text];\n        this.pasteMimeTypes = [Mimes.text];\n    }\n    getEdit(dataTransfer, _token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const textEntry = dataTransfer.get(Mimes.text);\n            if (!textEntry) {\n                return;\n            }\n            // Suppress if there's also a uriList entry.\n            // Typically the uri-list contains the same text as the text entry so showing both is confusing.\n            if (dataTransfer.has(Mimes.uriList)) {\n                return;\n            }\n            const insertText = yield textEntry.asString();\n            return {\n                handledMimeType: Mimes.text,\n                label: localize('text.label', \"Insert Plain Text\"),\n                detail: builtInLabel,\n                insertText\n            };\n        });\n    }\n}\nclass PathProvider extends SimplePasteAndDropProvider {\n    constructor() {\n        super(...arguments);\n        this.id = 'uri';\n        this.dropMimeTypes = [Mimes.uriList];\n        this.pasteMimeTypes = [Mimes.uriList];\n    }\n    getEdit(dataTransfer, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const entries = yield extractUriList(dataTransfer);\n            if (!entries.length || token.isCancellationRequested) {\n                return;\n            }\n            let uriCount = 0;\n            const insertText = entries\n                .map(({ uri, originalText }) => {\n                if (uri.scheme === Schemas.file) {\n                    return uri.fsPath;\n                }\n                else {\n                    uriCount++;\n                    return originalText;\n                }\n            })\n                .join(' ');\n            let label;\n            if (uriCount > 0) {\n                // Dropping at least one generic uri (such as https) so use most generic label\n                label = entries.length > 1\n                    ? localize('defaultDropProvider.uriList.uris', \"Insert Uris\")\n                    : localize('defaultDropProvider.uriList.uri', \"Insert Uri\");\n            }\n            else {\n                // All the paths are file paths\n                label = entries.length > 1\n                    ? localize('defaultDropProvider.uriList.paths', \"Insert Paths\")\n                    : localize('defaultDropProvider.uriList.path', \"Insert Path\");\n            }\n            return {\n                handledMimeType: Mimes.uriList,\n                insertText,\n                label,\n                detail: builtInLabel,\n            };\n        });\n    }\n}\nlet RelativePathProvider = class RelativePathProvider extends SimplePasteAndDropProvider {\n    constructor(_workspaceContextService) {\n        super();\n        this._workspaceContextService = _workspaceContextService;\n        this.id = 'relativePath';\n        this.dropMimeTypes = [Mimes.uriList];\n        this.pasteMimeTypes = [Mimes.uriList];\n    }\n    getEdit(dataTransfer, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const entries = yield extractUriList(dataTransfer);\n            if (!entries.length || token.isCancellationRequested) {\n                return;\n            }\n            const relativeUris = coalesce(entries.map(({ uri }) => {\n                const root = this._workspaceContextService.getWorkspaceFolder(uri);\n                return root ? relativePath(root.uri, uri) : undefined;\n            }));\n            if (!relativeUris.length) {\n                return;\n            }\n            return {\n                handledMimeType: Mimes.uriList,\n                insertText: relativeUris.join(' '),\n                label: entries.length > 1\n                    ? localize('defaultDropProvider.uriList.relativePaths', \"Insert Relative Paths\")\n                    : localize('defaultDropProvider.uriList.relativePath', \"Insert Relative Path\"),\n                detail: builtInLabel,\n            };\n        });\n    }\n};\nRelativePathProvider = __decorate([\n    __param(0, IWorkspaceContextService)\n], RelativePathProvider);\nfunction extractUriList(dataTransfer) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const urlListEntry = dataTransfer.get(Mimes.uriList);\n        if (!urlListEntry) {\n            return [];\n        }\n        const strUriList = yield urlListEntry.asString();\n        const entries = [];\n        for (const entry of UriList.parse(strUriList)) {\n            try {\n                entries.push({ uri: URI.parse(entry), originalText: entry });\n            }\n            catch (_a) {\n                // noop\n            }\n        }\n        return entries;\n    });\n}\nlet DefaultDropProvidersFeature = class DefaultDropProvidersFeature extends Disposable {\n    constructor(languageFeaturesService, workspaceContextService) {\n        super();\n        this._register(languageFeaturesService.documentOnDropEditProvider.register('*', new DefaultTextProvider()));\n        this._register(languageFeaturesService.documentOnDropEditProvider.register('*', new PathProvider()));\n        this._register(languageFeaturesService.documentOnDropEditProvider.register('*', new RelativePathProvider(workspaceContextService)));\n    }\n};\nDefaultDropProvidersFeature = __decorate([\n    __param(0, ILanguageFeaturesService),\n    __param(1, IWorkspaceContextService)\n], DefaultDropProvidersFeature);\nexport { DefaultDropProvidersFeature };\nlet DefaultPasteProvidersFeature = class DefaultPasteProvidersFeature extends Disposable {\n    constructor(languageFeaturesService, workspaceContextService) {\n        super();\n        this._register(languageFeaturesService.documentPasteEditProvider.register('*', new DefaultTextProvider()));\n        this._register(languageFeaturesService.documentPasteEditProvider.register('*', new PathProvider()));\n        this._register(languageFeaturesService.documentPasteEditProvider.register('*', new RelativePathProvider(workspaceContextService)));\n    }\n};\nDefaultPasteProvidersFeature = __decorate([\n    __param(0, ILanguageFeaturesService),\n    __param(1, IWorkspaceContextService)\n], DefaultPasteProvidersFeature);\nexport { DefaultPasteProvidersFeature };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar DropIntoEditorController_1;\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, raceCancellation } from '../../../../base/common/async.js';\nimport { VSDataTransfer, matchesMimeType } from '../../../../base/common/dataTransfer.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { toExternalVSDataTransfer } from '../../../browser/dnd.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { DraggedTreeItemsIdentifier } from '../../../common/services/treeViewsDnd.js';\nimport { ITreeViewsDnDService } from '../../../common/services/treeViewsDndService.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { InlineProgressManager } from '../../inlineProgress/browser/inlineProgress.js';\nimport { localize } from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { LocalSelectionTransfer } from '../../../../platform/dnd/browser/dnd.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { sortEditsByYieldTo } from './edit.js';\nimport { PostEditWidgetManager } from './postEditWidget.js';\nexport const defaultProviderConfig = 'editor.experimental.dropIntoEditor.defaultProvider';\nexport const changeDropTypeCommandId = 'editor.changeDropType';\nexport const dropWidgetVisibleCtx = new RawContextKey('dropWidgetVisible', false, localize('dropWidgetVisible', \"Whether the drop widget is showing\"));\nlet DropIntoEditorController = DropIntoEditorController_1 = class DropIntoEditorController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(DropIntoEditorController_1.ID);\n    }\n    constructor(editor, instantiationService, _configService, _languageFeaturesService, _treeViewsDragAndDropService) {\n        super();\n        this._configService = _configService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._treeViewsDragAndDropService = _treeViewsDragAndDropService;\n        this.treeItemsTransfer = LocalSelectionTransfer.getInstance();\n        this._dropProgressManager = this._register(instantiationService.createInstance(InlineProgressManager, 'dropIntoEditor', editor));\n        this._postDropWidgetManager = this._register(instantiationService.createInstance(PostEditWidgetManager, 'dropIntoEditor', editor, dropWidgetVisibleCtx, { id: changeDropTypeCommandId, label: localize('postDropWidgetTitle', \"Show drop options...\") }));\n        this._register(editor.onDropIntoEditor(e => this.onDropIntoEditor(editor, e.position, e.event)));\n    }\n    changeDropType() {\n        this._postDropWidgetManager.tryShowSelector();\n    }\n    onDropIntoEditor(editor, position, dragEvent) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!dragEvent.dataTransfer || !editor.hasModel()) {\n                return;\n            }\n            (_a = this._currentOperation) === null || _a === void 0 ? void 0 : _a.cancel();\n            editor.focus();\n            editor.setPosition(position);\n            const p = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n                const tokenSource = new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */, undefined, token);\n                try {\n                    const ourDataTransfer = yield this.extractDataTransferData(dragEvent);\n                    if (ourDataTransfer.size === 0 || tokenSource.token.isCancellationRequested) {\n                        return;\n                    }\n                    const model = editor.getModel();\n                    if (!model) {\n                        return;\n                    }\n                    const providers = this._languageFeaturesService.documentOnDropEditProvider\n                        .ordered(model)\n                        .filter(provider => {\n                        if (!provider.dropMimeTypes) {\n                            // Keep all providers that don't specify mime types\n                            return true;\n                        }\n                        return provider.dropMimeTypes.some(mime => ourDataTransfer.matches(mime));\n                    });\n                    const edits = yield this.getDropEdits(providers, model, position, ourDataTransfer, tokenSource);\n                    if (tokenSource.token.isCancellationRequested) {\n                        return;\n                    }\n                    if (edits.length) {\n                        const activeEditIndex = this.getInitialActiveEditIndex(model, edits);\n                        const canShowWidget = editor.getOption(36 /* EditorOption.dropIntoEditor */).showDropSelector === 'afterDrop';\n                        // Pass in the parent token here as it tracks cancelling the entire drop operation\n                        yield this._postDropWidgetManager.applyEditAndShowIfNeeded([Range.fromPositions(position)], { activeEditIndex, allEdits: edits }, canShowWidget, token);\n                    }\n                }\n                finally {\n                    tokenSource.dispose();\n                    if (this._currentOperation === p) {\n                        this._currentOperation = undefined;\n                    }\n                }\n            }));\n            this._dropProgressManager.showWhile(position, localize('dropIntoEditorProgress', \"Running drop handlers. Click to cancel\"), p);\n            this._currentOperation = p;\n        });\n    }\n    getDropEdits(providers, model, position, dataTransfer, tokenSource) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const results = yield raceCancellation(Promise.all(providers.map((provider) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const edit = yield provider.provideDocumentOnDropEdits(model, position, dataTransfer, tokenSource.token);\n                    if (edit) {\n                        return Object.assign(Object.assign({}, edit), { providerId: provider.id });\n                    }\n                }\n                catch (err) {\n                    console.error(err);\n                }\n                return undefined;\n            }))), tokenSource.token);\n            const edits = coalesce(results !== null && results !== void 0 ? results : []);\n            return sortEditsByYieldTo(edits);\n        });\n    }\n    getInitialActiveEditIndex(model, edits) {\n        const preferredProviders = this._configService.getValue(defaultProviderConfig, { resource: model.uri });\n        for (const [configMime, desiredId] of Object.entries(preferredProviders)) {\n            const editIndex = edits.findIndex(edit => desiredId === edit.providerId\n                && edit.handledMimeType && matchesMimeType(configMime, [edit.handledMimeType]));\n            if (editIndex >= 0) {\n                return editIndex;\n            }\n        }\n        return 0;\n    }\n    extractDataTransferData(dragEvent) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!dragEvent.dataTransfer) {\n                return new VSDataTransfer();\n            }\n            const dataTransfer = toExternalVSDataTransfer(dragEvent.dataTransfer);\n            if (this.treeItemsTransfer.hasData(DraggedTreeItemsIdentifier.prototype)) {\n                const data = this.treeItemsTransfer.getData(DraggedTreeItemsIdentifier.prototype);\n                if (Array.isArray(data)) {\n                    for (const id of data) {\n                        const treeDataTransfer = yield this._treeViewsDragAndDropService.removeDragOperationTransfer(id.identifier);\n                        if (treeDataTransfer) {\n                            for (const [type, value] of treeDataTransfer) {\n                                dataTransfer.replace(type, value);\n                            }\n                        }\n                    }\n                }\n            }\n            return dataTransfer;\n        });\n    }\n};\nDropIntoEditorController.ID = 'editor.contrib.dropIntoEditorController';\nDropIntoEditorController = DropIntoEditorController_1 = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IConfigurationService),\n    __param(3, ILanguageFeaturesService),\n    __param(4, ITreeViewsDnDService)\n], DropIntoEditorController);\nexport { DropIntoEditorController };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorCommand, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { editorConfigurationBaseNode } from '../../../common/config/editorConfigurationSchema.js';\nimport { registerEditorFeature } from '../../../common/editorFeatures.js';\nimport { DefaultDropProvidersFeature } from './defaultProviders.js';\nimport * as nls from '../../../../nls.js';\nimport { Extensions as ConfigurationExtensions } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { DropIntoEditorController, changeDropTypeCommandId, defaultProviderConfig, dropWidgetVisibleCtx } from './dropIntoEditorController.js';\nregisterEditorContribution(DropIntoEditorController.ID, DropIntoEditorController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorCommand(new class extends EditorCommand {\n    constructor() {\n        super({\n            id: changeDropTypeCommandId,\n            precondition: dropWidgetVisibleCtx,\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 89 /* KeyCode.Period */,\n            }\n        });\n    }\n    runEditorCommand(_accessor, editor, _args) {\n        var _a;\n        (_a = DropIntoEditorController.get(editor)) === null || _a === void 0 ? void 0 : _a.changeDropType();\n    }\n});\nregisterEditorFeature(DefaultDropProvidersFeature);\nRegistry.as(ConfigurationExtensions.Configuration).registerConfiguration(Object.assign(Object.assign({}, editorConfigurationBaseNode), { properties: {\n        [defaultProviderConfig]: {\n            type: 'object',\n            scope: 5 /* ConfigurationScope.LANGUAGE_OVERRIDABLE */,\n            description: nls.localize('defaultProviderDescription', \"Configures the default drop provider to use for content of a given mime type.\"),\n            default: {},\n            additionalProperties: {\n                type: 'string',\n            },\n        },\n    } }));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ResourceTextEdit } from '../../../browser/services/bulkEditService.js';\nexport function createCombinedWorkspaceEdit(uri, ranges, edit) {\n    var _a, _b;\n    return {\n        edits: [\n            ...ranges.map(range => new ResourceTextEdit(uri, typeof edit.insertText === 'string'\n                ? { range, text: edit.insertText, insertAsSnippet: false }\n                : { range, text: edit.insertText.snippet, insertAsSnippet: true })),\n            ...((_b = (_a = edit.additionalEdit) === null || _a === void 0 ? void 0 : _a.edits) !== null && _b !== void 0 ? _b : [])\n        ]\n    };\n}\nexport function sortEditsByYieldTo(edits) {\n    var _a;\n    function yieldsTo(yTo, other) {\n        return ('providerId' in yTo && yTo.providerId === other.providerId)\n            || ('mimeType' in yTo && yTo.mimeType === other.handledMimeType);\n    }\n    // Build list of nodes each node yields to\n    const yieldsToMap = new Map();\n    for (const edit of edits) {\n        for (const yTo of (_a = edit.yieldTo) !== null && _a !== void 0 ? _a : []) {\n            for (const other of edits) {\n                if (other === edit) {\n                    continue;\n                }\n                if (yieldsTo(yTo, other)) {\n                    let arr = yieldsToMap.get(edit);\n                    if (!arr) {\n                        arr = [];\n                        yieldsToMap.set(edit, arr);\n                    }\n                    arr.push(other);\n                }\n            }\n        }\n    }\n    if (!yieldsToMap.size) {\n        return Array.from(edits);\n    }\n    // Topological sort\n    const visited = new Set();\n    const tempStack = [];\n    function visit(nodes) {\n        if (!nodes.length) {\n            return [];\n        }\n        const node = nodes[0];\n        if (tempStack.includes(node)) {\n            console.warn(`Yield to cycle detected for ${node.providerId}`);\n            return nodes;\n        }\n        if (visited.has(node)) {\n            return visit(nodes.slice(1));\n        }\n        let pre = [];\n        const yTo = yieldsToMap.get(node);\n        if (yTo) {\n            tempStack.push(node);\n            pre = visit(yTo);\n            tempStack.pop();\n        }\n        visited.add(node);\n        return [...pre, node, ...visit(nodes.slice(1))];\n    }\n    return visit(Array.from(edits));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar PostEditWidget_1;\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Button } from '../../../../base/browser/ui/button/button.js';\nimport { toAction } from '../../../../base/common/actions.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport './postEditWidget.css';\nimport { IBulkEditService, ResourceTextEdit } from '../../../browser/services/bulkEditService.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nlet PostEditWidget = PostEditWidget_1 = class PostEditWidget extends Disposable {\n    constructor(typeId, editor, visibleContext, showCommand, range, edits, onSelectNewEdit, _contextMenuService, contextKeyService, _keybindingService) {\n        super();\n        this.typeId = typeId;\n        this.editor = editor;\n        this.showCommand = showCommand;\n        this.range = range;\n        this.edits = edits;\n        this.onSelectNewEdit = onSelectNewEdit;\n        this._contextMenuService = _contextMenuService;\n        this._keybindingService = _keybindingService;\n        this.allowEditorOverflow = true;\n        this.suppressMouseDown = true;\n        this.create();\n        this.visibleContext = visibleContext.bindTo(contextKeyService);\n        this.visibleContext.set(true);\n        this._register(toDisposable(() => this.visibleContext.reset()));\n        this.editor.addContentWidget(this);\n        this.editor.layoutContentWidget(this);\n        this._register(toDisposable((() => this.editor.removeContentWidget(this))));\n        this._register(this.editor.onDidChangeCursorPosition(e => {\n            if (!range.containsPosition(e.position)) {\n                this.dispose();\n            }\n        }));\n        this._register(Event.runAndSubscribe(_keybindingService.onDidUpdateKeybindings, () => {\n            this._updateButtonTitle();\n        }));\n    }\n    _updateButtonTitle() {\n        var _a;\n        const binding = (_a = this._keybindingService.lookupKeybinding(this.showCommand.id)) === null || _a === void 0 ? void 0 : _a.getLabel();\n        this.button.element.title = this.showCommand.label + (binding ? ` (${binding})` : '');\n    }\n    create() {\n        this.domNode = dom.$('.post-edit-widget');\n        this.button = this._register(new Button(this.domNode, {\n            supportIcons: true,\n        }));\n        this.button.label = '$(insert)';\n        this._register(dom.addDisposableListener(this.domNode, dom.EventType.CLICK, () => this.showSelector()));\n    }\n    getId() {\n        return PostEditWidget_1.baseId + '.' + this.typeId;\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    getPosition() {\n        return {\n            position: this.range.getEndPosition(),\n            preference: [2 /* ContentWidgetPositionPreference.BELOW */]\n        };\n    }\n    showSelector() {\n        this._contextMenuService.showContextMenu({\n            getAnchor: () => {\n                const pos = dom.getDomNodePagePosition(this.button.element);\n                return { x: pos.left + pos.width, y: pos.top + pos.height };\n            },\n            getActions: () => {\n                return this.edits.allEdits.map((edit, i) => toAction({\n                    id: '',\n                    label: edit.label,\n                    checked: i === this.edits.activeEditIndex,\n                    run: () => {\n                        if (i !== this.edits.activeEditIndex) {\n                            return this.onSelectNewEdit(i);\n                        }\n                    },\n                }));\n            }\n        });\n    }\n};\nPostEditWidget.baseId = 'editor.widget.postEditWidget';\nPostEditWidget = PostEditWidget_1 = __decorate([\n    __param(7, IContextMenuService),\n    __param(8, IContextKeyService),\n    __param(9, IKeybindingService)\n], PostEditWidget);\nlet PostEditWidgetManager = class PostEditWidgetManager extends Disposable {\n    constructor(_id, _editor, _visibleContext, _showCommand, _instantiationService, _bulkEditService) {\n        super();\n        this._id = _id;\n        this._editor = _editor;\n        this._visibleContext = _visibleContext;\n        this._showCommand = _showCommand;\n        this._instantiationService = _instantiationService;\n        this._bulkEditService = _bulkEditService;\n        this._currentWidget = this._register(new MutableDisposable());\n        this._register(Event.any(_editor.onDidChangeModel, _editor.onDidChangeModelContent)(() => this.clear()));\n    }\n    applyEditAndShowIfNeeded(ranges, edits, canShowWidget, token) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const model = this._editor.getModel();\n            if (!model || !ranges.length) {\n                return;\n            }\n            const edit = edits.allEdits[edits.activeEditIndex];\n            if (!edit) {\n                return;\n            }\n            let insertTextEdit = [];\n            if (typeof edit.insertText === 'string' ? edit.insertText === '' : edit.insertText.snippet === '') {\n                insertTextEdit = [];\n            }\n            else {\n                insertTextEdit = ranges.map(range => new ResourceTextEdit(model.uri, typeof edit.insertText === 'string'\n                    ? { range, text: edit.insertText, insertAsSnippet: false }\n                    : { range, text: edit.insertText.snippet, insertAsSnippet: true }));\n            }\n            const allEdits = [\n                ...insertTextEdit,\n                ...((_b = (_a = edit.additionalEdit) === null || _a === void 0 ? void 0 : _a.edits) !== null && _b !== void 0 ? _b : [])\n            ];\n            const combinedWorkspaceEdit = {\n                edits: allEdits\n            };\n            // Use a decoration to track edits around the trigger range\n            const primaryRange = ranges[0];\n            const editTrackingDecoration = model.deltaDecorations([], [{\n                    range: primaryRange,\n                    options: { description: 'paste-line-suffix', stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */ }\n                }]);\n            let editResult;\n            let editRange;\n            try {\n                editResult = yield this._bulkEditService.apply(combinedWorkspaceEdit, { editor: this._editor, token });\n                editRange = model.getDecorationRange(editTrackingDecoration[0]);\n            }\n            finally {\n                model.deltaDecorations(editTrackingDecoration, []);\n            }\n            if (canShowWidget && editResult.isApplied && edits.allEdits.length > 1) {\n                this.show(editRange !== null && editRange !== void 0 ? editRange : primaryRange, edits, (newEditIndex) => __awaiter(this, void 0, void 0, function* () {\n                    const model = this._editor.getModel();\n                    if (!model) {\n                        return;\n                    }\n                    yield model.undo();\n                    this.applyEditAndShowIfNeeded(ranges, { activeEditIndex: newEditIndex, allEdits: edits.allEdits }, canShowWidget, token);\n                }));\n            }\n        });\n    }\n    show(range, edits, onDidSelectEdit) {\n        this.clear();\n        if (this._editor.hasModel()) {\n            this._currentWidget.value = this._instantiationService.createInstance(PostEditWidget, this._id, this._editor, this._visibleContext, this._showCommand, range, edits, onDidSelectEdit);\n        }\n    }\n    clear() {\n        this._currentWidget.clear();\n    }\n    tryShowSelector() {\n        var _a;\n        (_a = this._currentWidget.value) === null || _a === void 0 ? void 0 : _a.showSelector();\n    }\n};\nPostEditWidgetManager = __decorate([\n    __param(4, IInstantiationService),\n    __param(5, IBulkEditService)\n], PostEditWidgetManager);\nexport { PostEditWidgetManager };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorCommand, registerEditorCommand } from '../../../browser/editorExtensions.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { LinkedList } from '../../../../base/common/linkedList.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { localize } from '../../../../nls.js';\nconst IEditorCancellationTokens = createDecorator('IEditorCancelService');\nconst ctxCancellableOperation = new RawContextKey('cancellableOperation', false, localize('cancellableOperation', 'Whether the editor runs a cancellable operation, e.g. like \\'Peek References\\''));\nregisterSingleton(IEditorCancellationTokens, class {\n    constructor() {\n        this._tokens = new WeakMap();\n    }\n    add(editor, cts) {\n        let data = this._tokens.get(editor);\n        if (!data) {\n            data = editor.invokeWithinContext(accessor => {\n                const key = ctxCancellableOperation.bindTo(accessor.get(IContextKeyService));\n                const tokens = new LinkedList();\n                return { key, tokens };\n            });\n            this._tokens.set(editor, data);\n        }\n        let removeFn;\n        data.key.set(true);\n        removeFn = data.tokens.push(cts);\n        return () => {\n            // remove w/o cancellation\n            if (removeFn) {\n                removeFn();\n                data.key.set(!data.tokens.isEmpty());\n                removeFn = undefined;\n            }\n        };\n    }\n    cancel(editor) {\n        const data = this._tokens.get(editor);\n        if (!data) {\n            return;\n        }\n        // remove with cancellation\n        const cts = data.tokens.pop();\n        if (cts) {\n            cts.cancel();\n            data.key.set(!data.tokens.isEmpty());\n        }\n    }\n}, 1 /* InstantiationType.Delayed */);\nexport class EditorKeybindingCancellationTokenSource extends CancellationTokenSource {\n    constructor(editor, parent) {\n        super(parent);\n        this.editor = editor;\n        this._unregister = editor.invokeWithinContext(accessor => accessor.get(IEditorCancellationTokens).add(editor, this));\n    }\n    dispose() {\n        this._unregister();\n        super.dispose();\n    }\n}\nregisterEditorCommand(new class extends EditorCommand {\n    constructor() {\n        super({\n            id: 'editor.cancelOperation',\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */,\n                primary: 9 /* KeyCode.Escape */\n            },\n            precondition: ctxCancellableOperation\n        });\n    }\n    runEditorCommand(accessor, editor) {\n        accessor.get(IEditorCancellationTokens).cancel(editor);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../../base/common/strings.js';\nimport { Range } from '../../../common/core/range.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { EditorKeybindingCancellationTokenSource } from './keybindingCancellation.js';\nexport class EditorState {\n    constructor(editor, flags) {\n        this.flags = flags;\n        if ((this.flags & 1 /* CodeEditorStateFlag.Value */) !== 0) {\n            const model = editor.getModel();\n            this.modelVersionId = model ? strings.format('{0}#{1}', model.uri.toString(), model.getVersionId()) : null;\n        }\n        else {\n            this.modelVersionId = null;\n        }\n        if ((this.flags & 4 /* CodeEditorStateFlag.Position */) !== 0) {\n            this.position = editor.getPosition();\n        }\n        else {\n            this.position = null;\n        }\n        if ((this.flags & 2 /* CodeEditorStateFlag.Selection */) !== 0) {\n            this.selection = editor.getSelection();\n        }\n        else {\n            this.selection = null;\n        }\n        if ((this.flags & 8 /* CodeEditorStateFlag.Scroll */) !== 0) {\n            this.scrollLeft = editor.getScrollLeft();\n            this.scrollTop = editor.getScrollTop();\n        }\n        else {\n            this.scrollLeft = -1;\n            this.scrollTop = -1;\n        }\n    }\n    _equals(other) {\n        if (!(other instanceof EditorState)) {\n            return false;\n        }\n        const state = other;\n        if (this.modelVersionId !== state.modelVersionId) {\n            return false;\n        }\n        if (this.scrollLeft !== state.scrollLeft || this.scrollTop !== state.scrollTop) {\n            return false;\n        }\n        if (!this.position && state.position || this.position && !state.position || this.position && state.position && !this.position.equals(state.position)) {\n            return false;\n        }\n        if (!this.selection && state.selection || this.selection && !state.selection || this.selection && state.selection && !this.selection.equalsRange(state.selection)) {\n            return false;\n        }\n        return true;\n    }\n    validate(editor) {\n        return this._equals(new EditorState(editor, this.flags));\n    }\n}\n/**\n * A cancellation token source that cancels when the editor changes as expressed\n * by the provided flags\n * @param range If provided, changes in position and selection within this range will not trigger cancellation\n */\nexport class EditorStateCancellationTokenSource extends EditorKeybindingCancellationTokenSource {\n    constructor(editor, flags, range, parent) {\n        super(editor, parent);\n        this._listener = new DisposableStore();\n        if (flags & 4 /* CodeEditorStateFlag.Position */) {\n            this._listener.add(editor.onDidChangeCursorPosition(e => {\n                if (!range || !Range.containsPosition(range, e.position)) {\n                    this.cancel();\n                }\n            }));\n        }\n        if (flags & 2 /* CodeEditorStateFlag.Selection */) {\n            this._listener.add(editor.onDidChangeCursorSelection(e => {\n                if (!range || !Range.containsRange(range, e.selection)) {\n                    this.cancel();\n                }\n            }));\n        }\n        if (flags & 8 /* CodeEditorStateFlag.Scroll */) {\n            this._listener.add(editor.onDidScrollChange(_ => this.cancel()));\n        }\n        if (flags & 1 /* CodeEditorStateFlag.Value */) {\n            this._listener.add(editor.onDidChangeModel(_ => this.cancel()));\n            this._listener.add(editor.onDidChangeModelContent(_ => this.cancel()));\n        }\n    }\n    dispose() {\n        this._listener.dispose();\n        super.dispose();\n    }\n}\n/**\n * A cancellation token source that cancels when the provided model changes\n */\nexport class TextModelCancellationTokenSource extends CancellationTokenSource {\n    constructor(model, parent) {\n        super(parent);\n        this._listener = model.onDidChangeContent(() => this.cancel());\n    }\n    dispose() {\n        this._listener.dispose();\n        super.dispose();\n    }\n}\n"],"names":["DragAndDropCommand","selection","targetPosition","copy","_classCallCheck","this","targetSelection","_createClass","key","value","model","builder","text","getValueInRange","addEditOperation","Range","lineNumber","column","containsPosition","getEndPosition","equals","getStartPosition","Selection","endLineNumber","startLineNumber","endColumn","startColumn","helper","hasTriggerModifier","e","isMacintosh","altKey","ctrlKey","DragAndDropController","_Disposable","_inherits","_super","_createSuper","editor","_this","call","_editor","_dndDecorationIds","createDecorationsCollection","_register","onMouseDown","_onEditorMouseDown","onMouseUp","_onEditorMouseUp","onMouseDrag","_onEditorMouseDrag","onMouseDrop","_onEditorMouseDrop","onMouseDropCanceled","_onEditorMouseDropCanceled","onKeyDown","onEditorKeyDown","onKeyUp","onEditorKeyUp","onDidBlurEditorWidget","onEditorBlur","onDidBlurEditorText","_mouseDown","_modifierPressed","_dragSelection","_removeDecoration","getOption","updateOptions","mouseStyle","keyCode","TRIGGER_KEY_VALUE","mouseEvent","target","possibleSelections","getSelections","filter","position","length","event","showAt","_hitContent","_hitMargin","newCursorPosition","Position","newSelections","shiftKey","primarySelection","getSelection","selectionStartLineNumber","selectionStartColumn","map","setSelections","pushUndoStop","executeCommand","ID","set","range","options","_DECORATION_OPTIONS","revealPosition","clear","type","_get","_getPrototypeOf","prototype","Disposable","ModelDecorationOptions","register","description","className","registerEditorContribution","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","CommandsRegistry","registerCommand","accessor","_len","arguments","args","Array","_key","_regeneratorRuntime","mark","_callee","resource","outlineService","modelService","reference","wrap","_context","prev","assertType","URI","isUri","get","IOutlineModelService","ITextModelService","createModelReference","sent","getOrCreate","object","textEditorModel","CancellationToken","None","abrupt","getTopLevelSymbols","dispose","finish","stop","__decorate","decorators","desc","d","c","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","TreeElement","_a","parent","children","delete","id","candidate","container","candidateId","concat","name","undefined","element","size","OutlineElement","_TreeElement","symbol","Map","OutlineGroup","_TreeElement2","_super2","label","order","_this2","OutlineModel","_TreeElement3","_super3","uri","_this3","_groups","_step","count","_iterator","_createForOfIteratorHelper","s","n","_step$value","_slicedToArray","err","f","_step2","group","Iterable","first","values","_iterator2","child","_step3","roots","_iterator3","push","_toConsumableArray","sort","a","b","compareRangesUsingStarts","bucket","_flattenDocumentSymbols","compare","registry","textModel","token","cts","CancellationTokenSource","provider","ordered","promises","index","findId","displayName","provideDocumentSymbols","_step4","_iterator4","info","_makeOutlineElement","onUnexpectedExternalError","empty","remove","listener","onDidChange","newProvider","cancel","all","isCancellationRequested","create","_compact","finally","res","_step5","_iterator5","childInfo","entries","overrideContainerLabel","_step6","_iterator6","entry","kind","tags","detail","containerName","selectionRange","createDecorator","OutlineModelService","_languageFeaturesService","debounces","_this4","_disposables","DisposableStore","_cache","LRUCache","_debounceInformation","for","documentSymbolProvider","min","add","onModelRemoved","data","source","now","_this5","versionId","getVersionId","promiseCnt","promise","Date","outlineModel","update","catch","_err","onCancellationRequested","ILanguageFeaturesService","ILanguageFeatureDebounceService","IModelService","registerSingleton","CopyPasteController_1","changePasteTypeCommandId","pasteWidgetVisibleCtx","RawContextKey","localize","vscodeClipboardMime","CopyPasteController","instantiationService","_bulkEditService","_clipboardService","_quickInputService","_progressService","getContainerDomNode","addDisposableListener","handleCopy","handlePaste","_pasteProgressManager","InlineProgressManager","_postPasteWidgetManager","createInstance","PostEditWidgetManager","tryShowSelector","preferredId","focus","_pasteAsActionContext","getActiveDocument","execCommand","enabled","_b","hasTextFocus","platform","writeResources","clipboardData","isPasteAsEnabled","getModel","selections","enableEmptySelectionClipboard","ranges","wasFromEmptySelection","isEmpty","getLineLength","toCopy","_getViewModel","getPlainTextToCopy","defaultPastePayload","multicursorText","isArray","pasteOnNewLine","mode","providers","documentPasteEditProvider","x","prepareDocumentPaste","dataTransfer","toVSDataTransfer","providerCopyMimeTypes","flatMap","copyMimeTypes","handle","generateUuid","setCopyMetadata","createCancelablePromise","_callee2","results","_step2$value","mime","_context2","t0","coalesce","console","error","t1","reverse","replace","_currentCopyOperation","dataTransferPromise","_callee3","metadata","allPotentialMimeTypes","allProviders","_context3","_currentPasteOperation","fetchCopyMetadata","toExternalVSDataTransfer","types","Mimes","uriList","pasteMimeTypes","some","matchesMimeType","preventDefault","stopImmediatePropagation","showPasteAsPick","doPasteInline","p","_callee4","tokenSource","supportedProviders","providerEdits","canShowWidget","_context4","hasModel","EditorStateCancellationTokenSource","mergeInDataFromCopy","isSupportedPasteProvider","applyDefaultPasteHandler","getPasteEdits","providerId","showPasteSelector","applyEditAndShowIfNeeded","activeEditIndex","allEdits","showWhile","_callee5","pickedEdit","selected","combinedWorkspaceEdit","_context5","edit","at","pick","placeHolder","createCombinedWorkspaceEdit","withProgress","location","title","setData","JSON","stringify","rawMetadata","getData","parse","_ClipboardEventUtils$","ClipboardEventUtils","getTextData","_ClipboardEventUtils$2","isFromEmptySelection","_callee6","toMergeDataTransfer","_step3$value","resources","_context6","has","readResources","append","createStringDataTransferItem","UriList","_callee8","edits","_this6","_context8","raceCancellation","_callee7","_context7","provideDocumentPasteEdits","assign","sortEditsByYieldTo","_c","_callee9","textDataTransfer","payload","_context9","asString","trigger","getContribution","Boolean","matches","IInstantiationService","IBulkEditService","IClipboardService","IQuickInputService","IProgressService","registerEditorFeature","DefaultPasteProvidersFeature","registerEditorCommand","_EditorCommand","_class","precondition","kbOpts","weight","primary","_accessor","_args","changePasteType","EditorCommand","registerEditorAction","_EditorAction","_class2","nls","alias","schema","properties","pasteAs","EditorAction","builtInLabel","SimplePasteAndDropProvider","_model","_ranges","getEdit","insertText","handledMimeType","yieldTo","_position","DefaultTextProvider","_SimplePasteAndDropPr","dropMimeTypes","_token","textEntry","PathProvider","_SimplePasteAndDropPr2","uriCount","extractUriList","_ref","originalText","scheme","Schemas","file","fsPath","join","RelativePathProvider","_SimplePasteAndDropPr3","_workspaceContextService","relativeUris","_ref2","root","getWorkspaceFolder","relativePath","urlListEntry","strUriList","IWorkspaceContextService","DefaultDropProvidersFeature","_super4","languageFeaturesService","workspaceContextService","documentOnDropEditProvider","_Disposable2","_super5","DropIntoEditorController_1","defaultProviderConfig","changeDropTypeCommandId","dropWidgetVisibleCtx","DropIntoEditorController","_configService","_treeViewsDragAndDropService","treeItemsTransfer","LocalSelectionTransfer","getInstance","_dropProgressManager","_postDropWidgetManager","onDropIntoEditor","dragEvent","_currentOperation","setPosition","ourDataTransfer","extractDataTransferData","getDropEdits","getInitialActiveEditIndex","showDropSelector","fromPositions","provideDocumentOnDropEdits","_ret","preferredProviders","getValue","_loop","_Object$entries$_i","_Object$entries","_i","configMime","desiredId","editIndex","findIndex","v","treeDataTransfer","VSDataTransfer","hasData","DraggedTreeItemsIdentifier","removeDragOperationTransfer","identifier","IConfigurationService","ITreeViewsDnDService","changeDropType","Registry","as","ConfigurationExtensions","Configuration","registerConfiguration","editorConfigurationBaseNode","_defineProperty","scope","default","additionalProperties","ResourceTextEdit","insertAsSnippet","snippet","additionalEdit","yieldsTo","yTo","other","mimeType","yieldsToMap","arr","from","visited","Set","tempStack","visit","nodes","node","includes","warn","slice","pre","pop","PostEditWidget_1","PostEditWidget","typeId","visibleContext","showCommand","onSelectNewEdit","_contextMenuService","contextKeyService","_keybindingService","allowEditorOverflow","suppressMouseDown","bindTo","toDisposable","reset","addContentWidget","_assertThisInitialized","layoutContentWidget","removeContentWidget","onDidChangeCursorPosition","Event","runAndSubscribe","onDidUpdateKeybindings","_updateButtonTitle","binding","lookupKeybinding","getLabel","button","domNode","dom","$","Button","supportIcons","EventType","CLICK","showSelector","baseId","preference","showContextMenu","getAnchor","pos","getDomNodePagePosition","left","width","y","top","height","getActions","toAction","checked","run","IContextMenuService","IContextKeyService","IKeybindingService","_id","_visibleContext","_showCommand","_instantiationService","_currentWidget","MutableDisposable","any","onDidChangeModel","onDidChangeModelContent","insertTextEdit","primaryRange","editTrackingDecoration","editResult","editRange","deltaDecorations","stickiness","getDecorationRange","isApplied","show","newEditIndex","undo","onDidSelectEdit","IEditorCancellationTokens","ctxCancellableOperation","_tokens","WeakMap","removeFn","invokeWithinContext","tokens","LinkedList","EditorKeybindingCancellationTokenSource","_CancellationTokenSou","_unregister","EditorState","flags","modelVersionId","strings","toString","getPosition","scrollLeft","getScrollLeft","scrollTop","getScrollTop","state","equalsRange","_equals","_EditorKeybindingCanc","_listener","onDidChangeCursorSelection","containsRange","onDidScrollChange","_","TextModelCancellationTokenSource","onDidChangeContent"],"sourceRoot":""}