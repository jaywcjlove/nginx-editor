{"version":3,"file":"static/js/monaco-editor-vendor.d4d9fc54.864158b9.js","mappings":"yeAIIA,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EAOaO,GAAeC,EAAAA,EAAAA,IACxB,SAAAD,EAAYE,EAAOC,IAAWC,EAAAA,EAAAA,GAAA,KAAAJ,GAC1BK,KAAKH,MAAQA,EACbG,KAAKF,UAAYA,CACrB,IAESG,EAAa,WACtB,SAAAA,EAAYC,EAAMC,EAAQC,IAAUL,EAAAA,EAAAA,GAAA,KAAAE,GAChCD,KAAKE,KAAOA,EACZF,KAAKG,OAASA,EACdH,KAAKI,SAAWA,EAChBJ,KAAKK,aAAc,CACvB,CA0CC,OA1CAT,EAAAA,EAAAA,GAAAK,EAAA,EAAAK,IAAA,OAAApB,MACD,SAAKqB,GACD,IAAMhB,EAAS,IAAIU,EAAcD,KAAKE,KAAMK,EAAMJ,OAAQH,KAAKI,UAG/D,OAFAb,EAAOc,YAAcL,KAAKK,YAC1Bd,EAAOiB,gBAAkBR,KAAKQ,gBACvBjB,CACX,GAAC,CAAAe,IAAA,UAAApB,MACD,SAAQuB,GACJ,OAAOhC,EAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAAC,EAAA,YAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA3B,MAAA,UACW,oBAAnCY,KAAKI,SAASa,iBAA+B,CAAAF,EAAA3B,KAAA,eAAA2B,EAAAG,OAAA,qBAGpDlB,KAAKQ,gBAAiB,CAAFO,EAAA3B,KAAA,QAGpB,OAHoB2B,EAAA3B,KAAA,EAGdY,KAAKQ,gBAAe,WACtBC,EAAMU,wBAAyB,CAAFJ,EAAA3B,KAAA,eAAA2B,EAAAG,OAAA,wBAAAH,EAAAG,OAAA,SAG1BlB,KAAKjB,QAAQ0B,IAAM,OAM9B,OAJKT,KAAKK,cACNL,KAAKQ,gBAAkBR,KAAKoB,WAAWX,GAClCY,SAAQ,kBAAMR,EAAKL,qBAAkBc,CAAS,KACtDP,EAAA3B,KAAA,GACKY,KAAKQ,gBAAe,yBAAAO,EAAAQ,OAAA,GAAAX,EAAA,SAElC,GAAC,CAAAN,IAAA,aAAApB,MACD,SAAWuB,GACP,IAAIe,EAAIC,EACR,OAAOhD,EAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAe,IAAA,IAAAC,EAAA,OAAAjB,EAAAA,EAAAA,KAAAI,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAxC,MAAA,OAEf,OAFewC,EAAAZ,KAAA,EAAAY,EAAAxC,KAAA,EAETN,QAAQC,QAAQiB,KAAKI,SAASa,iBAAiBjB,KAAKE,KAAMO,IAAO,OAAjFkB,EAAOC,EAAAC,KACb7B,KAAKE,KAAK4B,QAAuF,QAA5EN,EAAiB,OAAZG,QAAgC,IAAZA,OAAqB,EAASA,EAAQG,eAA4B,IAAPN,EAAgBA,EAAKxB,KAAKE,KAAK4B,QACxI9B,KAAKE,KAAK6B,MAAmF,QAA1EN,EAAiB,OAAZE,QAAgC,IAAZA,OAAqB,EAASA,EAAQI,aAA0B,IAAPN,EAAgBA,EAAKzB,KAAKE,KAAK6B,MACpI/B,KAAKK,aAAc,EAAKuB,EAAAxC,KAAA,gBAAAwC,EAAAZ,KAAA,EAAAY,EAAAI,GAAAJ,EAAA,UAGxBK,EAAAA,EAAAA,IAAyBL,EAAAI,IACzBhC,KAAKK,aAAc,EAAM,yBAAAuB,EAAAL,OAAA,GAAAG,EAAA,iBAGrC,KAACzB,CAAA,CAhDqB,GAkDbiC,EAAmB,WAsB5B,SAAAA,EAAYC,EAAQC,EAAMC,IAAOtC,EAAAA,EAAAA,GAAA,KAAAmC,GAC7BlC,KAAKsC,aAAe,IAAIC,EAAAA,GACxBvC,KAAKmC,OAASA,EACdnC,KAAKI,SAAW,IAAIoC,IACpB,IACmCC,EAD7BC,EAAQ,GAAGC,GAAAC,EAAAA,EAAAA,GACcR,GAAI,IAAnC,IAAAO,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAtD,MAAqC,KAAAuD,GAAAC,EAAAA,EAAAA,GAAAP,EAAAvD,MAAA,GAAzB+D,EAAIF,EAAA,GAAE3C,EAAQ2C,EAAA,GACtB/C,KAAKsC,aAAaY,IAAID,GACtBjD,KAAKI,SAAS8C,IAAI9C,GAAU,IACC+C,EADDC,GAAAR,EAAAA,EAAAA,GACTK,EAAKI,OAAK,IAA7B,IAAAD,EAAAP,MAAAM,EAAAC,EAAAN,KAAAtD,MAA+B,KAApBU,EAAIiD,EAAAjE,MAELoE,EAAWjB,EAAMkB,iBAAiBrD,EAAKoD,UACzCxD,EAAY,SACV0D,EAAYtB,EAAoBuB,oBAAoBpB,EAAOiB,GAC7DzD,OAAK,EACL2D,EAAUE,mBAAmBC,SAASL,IACtCzD,EAAQ+D,EAAAA,EAAMC,cAAcL,EAAUE,mBAAoBJ,GAC1DxD,EAAY,UAGZD,EAAQ+D,EAAAA,EAAMC,cAAcP,EAAUE,EAAUM,kBAChDhE,EAAY,UAEhB4C,EAAMqB,KAAK,IAAI9D,EAAcC,EAAM,IAAIP,EAAgBE,EAAOC,GAAYM,GAC9E,CAAC,OAAA4D,GAAAZ,EAAA/D,EAAA2E,EAAA,SAAAZ,EAAAa,GAAA,CACL,CAAC,OAAAD,GAAArB,EAAAtD,EAAA2E,EAAA,SAAArB,EAAAsB,GAAA,CACDjE,KAAK0C,MAAQA,EAAMwB,MAAK,SAACC,EAAGC,GAAC,OAAKC,EAAAA,EAASC,QAAQH,EAAEjE,KAAKoD,SAAUc,EAAElE,KAAKoD,SAAS,GACxF,CA+BC,OA/BA1D,EAAAA,EAAAA,GAAAsC,EAAA,EAAA5B,IAAA,UAAApB,MACD,WACIc,KAAKsC,aAAaiC,SACtB,IAAC,EAAAjE,IAAA,SAAApB,MAlDD,SAAcsF,EAAUnC,EAAOF,EAAQ1B,GACnC,OAAOhC,EAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAA8D,IAAA,IAAArC,EAAAsC,EAAAC,EAAA,YAAAjE,EAAAA,EAAAA,KAAAI,MAAA,SAAA8D,GAAA,cAAAA,EAAA5D,KAAA4D,EAAAxF,MAAA,OAanC,OAZMgD,EAAO,GACPsC,EAAWF,EAASK,QAAQxC,GAAOyC,UAAUC,KAAI,SAAA3E,GAAQ,OAAI+B,EAAO4C,KAAI,SAAClF,GAAK,OAAKpB,EAAUkG,OAAM,OAAQ,GAAMjE,EAAAA,EAAAA,KAAAC,MAAE,SAAAqE,IAAA,IAAAzF,EAAA,OAAAmB,EAAAA,EAAAA,KAAAI,MAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAA7F,MAAA,OAElG,OAFkG6F,EAAAjE,KAAA,EAAAiE,EAAA7F,KAAA,EAE5FgB,EAAS8E,kBAAkB7C,EAAOxC,EAAOY,GAAM,QACrD,QADTlB,EAAM0F,EAAApD,YACsB,IAAXtC,OAAoB,EAASA,EAAO8D,MAAM8B,SAC7D/C,EAAK2B,KAAK,CAACxE,EAAQa,IACtB6E,EAAA7F,KAAA,gBAAA6F,EAAAjE,KAAA,EAAAiE,EAAAjD,GAAAiD,EAAA,UAGDhD,EAAAA,EAAAA,IAAyBgD,EAAAjD,IAAM,yBAAAiD,EAAA1D,OAAA,GAAAyD,EAAA,iBAErC,GAAC,IAACJ,EAAAxF,KAAA,EACEN,QAAQsG,IAAIV,EAASW,QAAO,WAC9B5E,EAAMU,0BAA2BkB,EAAMiD,aAAY,CAAAV,EAAAxF,KAAA,cAC7C,IAAImG,EAAAA,GAAmB,cAAAX,EAAA1D,OAAA,SAE1B,IAAIgB,EAAoBC,EAAQC,EAAMC,IAAM,wBAAAuC,EAAArD,OAAA,GAAAkD,EAAA,IAE3D,GAAC,CAAAnE,IAAA,sBAAApB,MA+BD,SAA2BmD,EAAOiB,GAC9B,IAAMkC,EAAOlC,EAASmC,WAChBC,EAAOrD,EAAMsD,kBAAkBrC,GACrC,GAAIoC,EAEA,OAAO,IAAI9B,EAAAA,EAAM4B,EAAME,EAAKE,YAAaJ,EAAME,EAAKG,WAExDxD,EAAMyD,aAAaC,gBAAgBP,GACnC,IAAMQ,EAAS3D,EAAMyD,aAAaG,cAAcT,GAC1CU,EAAS5C,EAAS6C,OAAS,EAC3BC,EAAMJ,EAAOK,uBAAuBH,GACtCI,EAAQN,EAAOO,eAAeH,GAC9BI,EAAMR,EAAOS,aAAaL,GAc9B,OAbII,EAAMF,IAAU,IAEZA,IAAUJ,GAAUE,EAAM,GAE1BE,EAAQN,EAAOO,eAAeH,EAAM,GACpCI,EAAMR,EAAOS,aAAaL,EAAM,IAE3BI,IAAQN,GAAUE,EAAMJ,EAAOU,WAAa,IAEjDJ,EAAQN,EAAOO,eAAeH,EAAM,GACpCI,EAAMR,EAAOS,aAAaL,EAAM,KAGjC,IAAIxC,EAAAA,EAAM4B,EAAMc,EAAQ,EAAGd,EAAMgB,EAAM,EAClD,KAACtE,CAAA,CA/E2B,G,ICrD5ByE,E,6EAlBAC,EAA0C,SAAUC,EAAYC,EAAQxG,EAAKyG,GAC7E,IAA2HC,EAAvHC,EAAIC,UAAU/B,OAAQgC,EAAIF,EAAI,EAAIH,EAAkB,OAATC,EAAgBA,EAAOK,OAAOC,yBAAyBP,EAAQxG,GAAOyG,EACrH,GAAuB,kBAAZO,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQxG,EAAKyG,QACpH,IAAK,IAAIS,EAAIX,EAAW1B,OAAS,EAAGqC,GAAK,EAAGA,KAASR,EAAIH,EAAWW,MAAIL,GAAKF,EAAI,EAAID,EAAEG,GAAKF,EAAI,EAAID,EAAEF,EAAQxG,EAAK6G,GAAKH,EAAEF,EAAQxG,KAAS6G,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOK,eAAeX,EAAQxG,EAAK6G,GAAIA,CAChE,EACIO,EAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUd,EAAQxG,GAAOsH,EAAUd,EAAQxG,EAAKqH,EAAa,CACxE,EACIlJ,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EAgCMyI,EAAe,WACjB,SAAAA,KAAc9H,EAAAA,EAAAA,GAAA,KAAA8H,GACV7H,KAAK8H,SAAW,IAAIC,EAAAA,GAAS,GACjC,CAWC,OAXAnI,EAAAA,EAAAA,GAAAiI,EAAA,EAAAvH,IAAA,MAAApB,MACD,SAAImD,GACA,IAAM/B,EAAMuH,EAAgBG,KAAK3F,GACjC,OAAOrC,KAAK8H,SAASG,IAAI3H,EAC7B,GAAC,CAAAA,IAAA,MAAApB,MACD,SAAImD,EAAOnD,GACP,IAAMoB,EAAMuH,EAAgBG,KAAK3F,GACjCrC,KAAK8H,SAASI,IAAI5H,EAAKpB,EAC3B,IAAC,EAAAoB,IAAA,OAAApB,MACD,SAAYmD,GACR,MAAO,GAAP8F,OAAU9F,EAAM+F,IAAIC,WAAU,KAAAF,OAAI9F,EAAMiG,eAC5C,KAACT,CAAA,CAdgB,GAgBfU,GAAmBC,EAAAA,EAAAA,IAAgB,qBACzCC,EAAAA,EAAAA,GAAkBF,EAAkBV,EAAiB,GAE9C,IAAMa,EAA0B,WACnC,SAAAA,EAAYC,EAAMC,IAAO7I,EAAAA,EAAAA,GAAA,KAAA2I,GACrB1I,KAAK2I,KAAOA,EACZ3I,KAAK4I,MAAQA,CACjB,CASC,OATAhJ,EAAAA,EAAAA,GAAA8I,EAAA,EAAApI,IAAA,OAAA2H,IACD,WACI,IAAMlG,EAAQ/B,KAAK2I,KAAKzI,KAAK6B,MAC7B,MAAqB,kBAAVA,EACA,CAAEA,MAAAA,GAGFA,EAAM/B,KAAK4I,MAE1B,KAACF,CAAA,CAbkC,GAejCG,GAAmBjJ,EAAAA,EAAAA,IACrB,SAAAiJ,EAAYC,EAAMC,IAAoBhJ,EAAAA,EAAAA,GAAA,KAAA8I,GAClC7I,KAAK8I,KAAOA,EACZ9I,KAAK+I,mBAAqBA,CAC9B,IAGAC,GAAuBrC,EAAsB,WAK7C,SAAAqC,EAAYC,EAASC,EAA0BC,EAAkBC,EAAkBC,EAAiBC,EAAsBC,GAAe,IAAA1I,EAAA,MAAAd,EAAAA,EAAAA,GAAA,KAAAiJ,GACrIhJ,KAAKiJ,QAAUA,EACfjJ,KAAKkJ,yBAA2BA,EAChClJ,KAAKoJ,iBAAmBA,EACxBpJ,KAAKqJ,gBAAkBA,EACvBrJ,KAAKsJ,qBAAuBA,EAC5BtJ,KAAKuJ,cAAgBA,EACrBvJ,KAAKsC,aAAe,IAAIC,EAAAA,GACxBvC,KAAKwJ,oBAAsB,IAAIjH,EAAAA,GAC/BvC,KAAKyJ,qBAAuB,IAAIC,IAChC1J,KAAK2J,aAAe,IAAIC,EAAAA,GAAgB5J,KAAKiJ,SAC7CjJ,KAAK6J,kBAAoB,EACzB7J,KAAK8J,cAAgBX,EAAiBY,IAAIb,EAAyBc,mBAAoB,YAAa,CAAEC,IAAK,KAC3GjK,KAAKsC,aAAaY,IAAIgG,EAAyBc,mBAAmBE,aAAY,kBAAMrJ,EAAKsJ,SAAS,KAClGnK,KAAKsC,aAAaY,IAAI+F,EAAQmB,kBAAiB,kBAAMvJ,EAAKsJ,SAAS,KACnEnK,KAAKsC,aAAaY,IAAI+F,EAAQoB,0BAAyB,kBAAMxJ,EAAKsJ,SAAS,KAC3EnK,KAAKsC,aAAaY,IAAI+F,EAAQqB,0BAAyB,SAAAjL,GAC/CA,EAAEkL,WAAW,MACb1J,EAAKsJ,SAEb,KACAnK,KAAKmK,SACT,CAvBC,OAuBAvK,EAAAA,EAAAA,GAAAoJ,EAAA,EAAA1I,IAAA,UAAApB,MACD,WACIc,KAAKwJ,oBAAoBjF,UACzBvE,KAAKwK,wBACLxK,KAAKsC,aAAaiC,SACtB,GAAC,CAAAjE,IAAA,UAAApB,MACD,WAAU,IAAAyF,EAAA,KACN3E,KAAKwJ,oBAAoBiB,QACzBzK,KAAKwK,wBACL,IAAME,EAAU1K,KAAKiJ,QAAQ0B,UAAU,KACvC,GAAwB,QAApBD,EAAQE,QAAZ,CAGA,IAAMvI,EAAQrC,KAAKiJ,QAAQ4B,WAC3B,GAAKxI,GAAUrC,KAAKkJ,yBAAyBc,mBAAmBc,IAAIzI,GAApE,CAIA,IAUI0I,EAVEC,EAAShL,KAAKoJ,iBAAiBnB,IAAI5F,GACrC2I,GACAhL,KAAKiL,uBAAuB,CAAC5I,EAAM6I,qBAAsBF,GAE7DhL,KAAKwJ,oBAAoBtG,KAAIiI,EAAAA,EAAAA,KAAa,WAEjC9I,EAAMiD,cACPX,EAAKyG,0BAA0B/I,EAEvC,KAEA,IA2DQgJ,EACAC,EA5DFC,EAAmB,IAAI/I,IACvBgJ,EAAY,IAAIC,EAAAA,IAAiB,kBAAMhN,EAAUkG,OAAM,OAAQ,GAAMjE,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAA8K,EAAAC,EAAAC,EAAAC,EAAAlJ,EAAAF,EAAArC,EAAA,OAAAM,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA3B,MAAA,OAOlD,OANjBsM,EAAKI,KAAKC,MACR,OAARhB,QAAwB,IAARA,GAA0BA,EAAIxG,SAAQ,GACtDwG,EAAM,IAAIiB,EAAAA,EACJL,EAAWtJ,EAAM4J,eAAc,kBAAc,OAARlB,QAAwB,IAARA,OAAiB,EAASA,EAAImB,QAAQ,IAACnL,EAAAC,KAAA,EAExF4K,EAAUb,EAAItK,MAAKM,EAAA3B,KAAA,EACA8C,EAAoBiK,OAAOnM,KAAKkJ,yBAAyBc,mBAAoB3H,EAAOrC,KAAKoM,kBAAmBR,GAAQ,OACzE,GAD9DC,EAAU9K,EAAAc,KAChB2J,EAAUa,MAAQrM,KAAK8J,cAAcwC,OAAOjK,EAAOyJ,KAAKC,MAAQL,IAC5DE,EAAQzK,wBAAyB,CAAFJ,EAAA3B,KAAA,SACV,OAArByM,EAAWtH,UAAUxD,EAAAG,OAAA,kBAGzByB,GAAAC,EAAAA,EAAAA,GACuBiJ,EAAWzL,UAAQ,IAA1C,IAAAuC,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAtD,MACkD,oBADvCY,EAAQqC,EAAAvD,OACKqN,uBAAyChB,EAAiBT,IAAI1K,KAC9EmL,EAAiBrI,IAAI9C,GACrBJ,KAAKwJ,oBAAoBtG,IAAI9C,EAASmM,uBAAsB,WACnDf,EAAUgB,eACXhB,EAAUiB,UAElB,KAEP,OAAAzI,GAAArB,EAAAtD,EAAA2E,EAAA,SAAArB,EAAAsB,GAAA,CACDjE,KAAKwJ,oBAAoBtG,IAAI2I,GAC7B7L,KAAKiL,uBAAuBY,EAAW1J,OAAQ0J,EAAWnJ,OAC1D1C,KAAKoL,0BAA0B/I,GAAOtB,EAAA3B,KAAA,iBAAA2B,EAAAC,KAAA,GAAAD,EAAAiB,GAAAjB,EAAA,UAGtC2L,EAAAA,EAAAA,IAAiB3L,EAAAiB,IAAM,QAIJ,OAJIjB,EAAAC,KAAA,GAGvB+J,EAAIxG,UACJoH,EAASpH,UAAUxD,EAAA4L,OAAA,6BAAA5L,EAAAQ,OAAA,GAAAX,EAAA,wBAEzB,GAAEZ,KAAK8J,cAAc7B,IAAI5F,IAiB3B,GAhBArC,KAAKwJ,oBAAoBtG,IAAIsI,GAC7BxL,KAAKwJ,oBAAoBtG,KAAIiI,EAAAA,EAAAA,KAAa,kBAAc,OAARJ,QAAwB,IAARA,OAAiB,EAASA,EAAIxG,SAAQ,EAAK,KAC3GiH,EAAUiB,SAAS,GACnBzM,KAAKwJ,oBAAoBtG,IAAIlD,KAAKiJ,QAAQ2D,mBAAkB,SAACvN,IAIrDA,EAAEwN,kBAAqBrB,EAAUgB,eACjChB,EAAUiB,UAElB,KACAzM,KAAKwJ,oBAAoBtG,IAAIlD,KAAKiJ,QAAQ6D,yBAAwB,SAACzN,GAE/D,IAAMgN,EAAQU,KAAKC,IAAIxB,EAAUa,MAAO,MACxCb,EAAUiB,SAASJ,EACvB,KACwB,OAApB3B,EAAQE,QAER5K,KAAK6J,kBAAoB,MAMD,oBAApBa,EAAQE,SACRS,EAAc,EACdC,EAAU,IAGVD,EAAc,EACdC,EAAU,GAEdtL,KAAK6J,kBAAoBwB,EACzBrL,KAAKwJ,oBAAoBtG,IAAI+J,EAAAA,mBAAmBC,cAAcC,OAAM,SAAA9N,GAChE,GAAKsF,EAAKsE,QAAQmE,WAAlB,CAGA,IAAMC,EAAgBhO,EAAEiO,QAAUjO,EAAEkO,UAAalO,EAAEmO,WAAYnO,EAAEoO,QAAWnC,EAAUD,EACtF,GAAIgC,IAAkB1I,EAAKkF,kBAAmB,CAC1ClF,EAAKkF,kBAAoBwD,EACzB,IAAMhL,EAAQsC,EAAKsE,QAAQ4B,WACrB6C,EAAS/I,EAAKgJ,iCAAiCtL,GACrDsC,EAAKsG,uBAAuB,CAAC5I,EAAM6I,qBAAsBwC,GACzDlC,EAAUiB,SAAS,EACvB,CARA,CASJ,KAGJzM,KAAKwJ,oBAAoBtG,IAAIlD,KAAK4N,yBAAwB,kBAAMpC,EAAUiB,SAAS,EAAE,KACrFzM,KAAKwJ,oBAAoBtG,IAAIlD,KAAK6N,uBAClC7N,KAAKwJ,oBAAoBtG,IAAIlD,KAAK8N,sBApGlC,CAJA,CAyGJ,GAAC,CAAAxN,IAAA,sBAAApB,MACD,WAAsB,IAAA6O,EAAA,KACZC,EAAQ,IAAIzL,EAAAA,GACZ0L,EAAUD,EAAM9K,IAAI,IAAIgL,EAAAA,GAAiBlO,KAAKiJ,UAE9CkF,EAAe,IAAI5L,EAAAA,GA0CzB,OAzCAyL,EAAM9K,IAAIiL,GACVH,EAAM9K,IAAI+K,EAAQG,8BAA6B,SAAA/O,GAC3C,IAAOgP,GAAPrL,EAAAA,EAAAA,GAAqB3D,EAAC,GAAL,GACXiP,EAAYP,EAAKQ,uBAAuBF,GACxChM,EAAQ0L,EAAK9E,QAAQ4B,WAC3B,GAAKyD,GAAcjM,EAAnB,CAKA,IAAM0I,EAAM,IAAIiB,EAAAA,EAChBmC,EAAajL,KAAIiI,EAAAA,EAAAA,KAAa,kBAAMJ,EAAIxG,SAAQ,EAAK,KACrD+J,EAAU3F,KAAK5J,QAAQgM,EAAItK,OAE3BsN,EAAKS,qBAAuBF,EAAUxF,KAAK2F,SAAWH,EAAUxF,KAAK4F,SAC/D,IAAI7F,EAAoByF,EAAWD,EAAWtF,yBAC9CzH,EACN,IAAMmE,EAAapD,EAAMkB,iBAAiB+K,EAAU3F,KAAKzI,KAAKoD,UAAUmC,WAClE5F,EAAQ,IAAI+D,EAAAA,EAAM6B,EAAY,EAAGA,EAAYpD,EAAMsM,iBAAiBlJ,IACpEmJ,EAAYb,EAAKc,wBAAwBhP,GAC/CkO,EAAK9C,uBAAuB,CAACpL,GAAQ+O,GACrCT,EAAajL,KAAIiI,EAAAA,EAAAA,KAAa,WAC1B4C,EAAKS,0BAAuBlN,EAC5ByM,EAAK9C,uBAAuB,CAACpL,GAAQ+O,EACzC,IAhBA,MAFIT,EAAa1D,OAmBrB,KACAuD,EAAM9K,IAAI+K,EAAQa,UAAS,kBAAMX,EAAa1D,OAAO,KACrDuD,EAAM9K,IAAI+K,EAAQc,WAAU,SAAC1P,GAAC,OAAKZ,EAAUsP,OAAM,OAAQ,GAAMrN,EAAAA,EAAAA,KAAAC,MAAE,SAAAe,IAAA,IAAAK,EAAA+G,EAAA,OAAApI,EAAAA,EAAAA,KAAAI,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAxC,MAAA,OACnB,KAAtC2C,EAAQ/B,KAAKuO,uBAAuBlP,IAC/B,CAAFuC,EAAAxC,KAAA,SACkB,KAAjB0J,EAAO/G,EAAM+G,MACV4F,SAAU,CAAF9M,EAAAxC,KAAA,QAEbY,KAAKuJ,cAAcyF,eAAeC,EAAAA,EAA4B5P,EAAGW,KAAKiJ,QAASH,EAAK4F,UAAU9M,EAAAxC,KAAA,oBAEzF8P,EAAAA,GAAkBC,GAAGrG,EAAK2F,SAAU,CAAF7M,EAAAxC,KAAA,SAEvC,OAFuCwC,EAAAxC,KAAA,GAEjCY,KAAKoP,eAAetG,EAAK2F,QAAS1M,EAAM4G,MAAK,yBAAA/G,EAAAL,OAAA,GAAAG,EAAA,SAG7D,KACKsM,CACX,GAAC,CAAA1N,IAAA,0BAAApB,MACD,SAAwBW,GACpB,IACqDsD,EAD/CyL,EAAY,IAAIpM,IAAMY,GAAAR,EAAAA,EAAAA,GACT5C,KAAKyJ,qBAAqB4F,UAAQ,IAArD,IAAAjM,EAAAP,MAAAM,EAAAC,EAAAN,KAAAtD,MAAuD,KAA5C4C,EAAIe,EAAAjE,MACPW,EAAMyP,cAAclN,EAAKuG,KAAKxI,OAAON,QACrC+O,EAAU1L,IAAId,EAAKuG,KAE3B,CAAC,OAAA3E,GAAAZ,EAAA/D,EAAA2E,EAAA,SAAAZ,EAAAa,GAAA,CACD,OAAOsL,MAAMC,KAAKZ,EACtB,GAAC,CAAAtO,IAAA,0BAAApB,MACD,SAAwBuQ,GAAkB,IAAAC,EAAA,KACtC,OAAO1P,KAAKiJ,QAAQ0G,WAAU,SAACtQ,GAAC,OAAKZ,EAAUiR,OAAM,OAAQ,GAAMhP,EAAAA,EAAAA,KAAAC,MAAE,SAAAqE,IAAA,IAAA8D,EAAA8G,EAAA,OAAAlP,EAAAA,EAAAA,KAAAI,MAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAA7F,MAAA,UAC1C,IAAnBC,EAAE8N,MAAM0C,OAAY,CAAA5K,EAAA7F,KAAA,eAAA6F,EAAA/D,OAAA,iBAGmB,GAArC4H,EAAO9I,KAAKuO,uBAAuBlP,GAC9B,CAAF4F,EAAA7F,KAAA,eAAA6F,EAAA/D,OAAA,iBAIT,OADA7B,EAAE8N,MAAM2C,iBAAiB7K,EAAA7F,KAAA,EACnB0J,EAAKH,KAAK5J,QAAQgR,EAAAA,EAAkBC,MAAK,QAC3CC,EAAAA,EAAAA,IAAgBnH,EAAKH,KAAKzI,KAAKgQ,aACzBN,EAAQ9G,EAAKH,KAAKzI,KAAKgQ,UAAUnL,KAAI,SAAAoL,GAAI,OAAIC,EAAAA,EAAcC,QAAQzM,EAAAA,EAAM0M,KAAKH,EAAKtQ,OAAQsQ,EAAKI,KAAK,IAC3GvQ,KAAKiJ,QAAQuH,aAAa,oBAAqBZ,GAC/CH,KACH,wBAAAxK,EAAA1D,OAAA,GAAAyD,EAAA,SACH,GACN,GAAC,CAAA1E,IAAA,sBAAApB,MACD,WAAsB,IAAAuR,EAAA,KAClB,OAAOzQ,KAAKiJ,QAAQyH,eAAc,SAACrR,GAAC,OAAKZ,EAAUgS,OAAM,OAAQ,GAAM/P,EAAAA,EAAAA,KAAAC,MAAE,SAAA8D,IAAA,IAAAqE,EAAA,OAAApI,EAAAA,EAAAA,KAAAI,MAAA,SAAA8D,GAAA,cAAAA,EAAA5D,KAAA4D,EAAAxF,MAAA,UAC/DC,EAAE8N,MAAMrG,kBAAkB6J,YAAW,CAAA/L,EAAAxF,KAAA,eAAAwF,EAAA1D,OAAA,iBAGA,KAArC4H,EAAO9I,KAAKuO,uBAAuBlP,IAC/B,CAAFuF,EAAAxF,KAAA,QACJ,OADIwF,EAAAxF,KAAA,EACEY,KAAKuJ,cAAcyF,eAAe4B,EAAAA,EAAqB5Q,KAAKiJ,QAAS5J,EAAE8N,MAAMrG,OAAQgC,GAAK,wBAAAlE,EAAArD,OAAA,GAAAkD,EAAA,SAEtG,GACN,GAAC,CAAAnE,IAAA,yBAAApB,MACD,SAAuBG,GACnB,IAAImC,EACJ,GAAsB,IAAlBnC,EAAEyH,OAAO+J,KAAb,CAGA,IAAMnG,EAAkD,QAAvClJ,EAAKnC,EAAEyH,OAAO+I,OAAOiB,oBAAiC,IAAPtP,OAAgB,EAASA,EAAGkJ,QAC5F,OAAIA,aAAmBqG,EAAAA,KAAmD,OAAZrG,QAAgC,IAAZA,OAAqB,EAASA,EAAQsG,wBAAyBtI,EACtIgC,EAAQsG,kBADnB,CAFA,CAMJ,GAAC,CAAA1Q,IAAA,iBAAApB,MACD,SAAeuP,EAAS9F,GACpB,IAAInH,EACJ,OAAO/C,EAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAsQ,IAAA,IAAAC,EAAA,OAAAxQ,EAAAA,EAAAA,KAAAI,MAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAA/R,MAAA,OAE/B,OAF+B+R,EAAAnQ,KAAA,EAAAmQ,EAAA/R,KAAA,GAEzB8R,EAAAlR,KAAKqJ,iBAAgB+H,eAAc1R,MAAAwR,EAAA,CAACzC,EAAQ4C,IAAElJ,QAAAmJ,EAAAA,EAAAA,GAAmC,QAA5B9P,EAAKiN,EAAQvH,iBAA8B,IAAP1F,EAAgBA,EAAK,MAAI,OAAA2P,EAAA/R,KAAA,eAAA+R,EAAAnQ,KAAA,EAAAmQ,EAAAnP,GAAAmP,EAAA,SAGxHnR,KAAKsJ,qBAAqBiI,OAAO,CAC7BC,SAAUC,EAAAA,GAASC,MACnBC,OAAQhJ,EAAKvI,SAASwR,YACtBC,QAAOV,EAAAnP,KACR,wBAAAmP,EAAA5P,OAAA,GAAA0P,EAAA,iBAGf,GAAC,CAAA3Q,IAAA,4BAAApB,MACD,SAA0BmD,GACtB,IAAMgB,EAAQrD,KAAK2N,iCAAiCtL,GACpDrC,KAAKoJ,iBAAiBlB,IAAI7F,EAAOgB,EACrC,GAEA,CAAA/C,IAAA,mCAAApB,MACA,SAAiCmD,GAC7B,IACiDyP,EAD3CpP,EAAQ,IAAIgH,IAAMqI,GAAAnP,EAAAA,EAAAA,GACA5C,KAAKyJ,sBAAoB,IAAjD,IAAAsI,EAAAlP,MAAAiP,EAAAC,EAAAjP,KAAAtD,MAAmD,KAAAwS,GAAAhP,EAAAA,EAAAA,GAAA8O,EAAA5S,MAAA,GAAvCmS,EAAEW,EAAA,GAAEC,EAAGD,EAAA,GACf,IAAItP,EAAMoI,IAAImH,EAAItJ,MAAlB,CAKA,IAAM9I,EAAQwC,EAAM6P,mBAAmBb,GACvC,GAAIxR,EAAO,CAEP,IAAMM,EAAS,IAAIR,EAAgBE,EAAOoS,EAAItJ,KAAKxI,OAAOL,WACpDqS,EAAOF,EAAItJ,KAAKyJ,KAAK,CAAEjS,OAAAA,IAC7BuC,EAAMwF,IAAI+J,EAAItJ,KAAMwJ,EACxB,CAPA,CAQJ,CAAC,OAAAnO,GAAA+N,EAAA1S,EAAA2E,EAAA,SAAA+N,EAAA9N,GAAA,CACD,OAAOsL,MAAMC,KAAK9M,EAAM2M,SAC5B,GAAC,CAAA/O,IAAA,kBAAApB,MACD,WACI,IAIsEmT,EAHhEhQ,EAAQrC,KAAKiJ,QAAQ4B,WACrByH,EAAgBtS,KAAKiJ,QAAQsJ,yCAC7BhT,EAAS,GAAGiT,GAAA5P,EAAAA,EAAAA,GACE0P,EAAcpO,KAAKN,EAAAA,EAAM6O,2BAAyB,IAAtE,IAAAD,EAAA3P,MAAAwP,EAAAG,EAAA1P,KAAAtD,MAAwE,KAA7DK,EAAKwS,EAAAnT,MACNwT,EAAgBrQ,EAAMsQ,cAAc,IAAI/O,EAAAA,EAAM/D,EAAM+S,gBALhD,GAKyE/S,EAAM+F,YAAa/F,EAAMgT,cALlG,GAKyHhT,EAAMgG,YACnH,IAAlBtG,EAAO4F,QAAiBvB,EAAAA,EAAMkP,0BAA0BvT,EAAOA,EAAO4F,OAAS,GAAIuN,GAInFnT,EAAOA,EAAO4F,OAAS,GAAKvB,EAAAA,EAAMmP,UAAUxT,EAAOA,EAAO4F,OAAS,GAAIuN,GAHvEnT,EAAOwE,KAAK2O,EAKpB,CAAC,OAAA1O,GAAAwO,EAAAnT,EAAA2E,EAAA,SAAAwO,EAAAvO,GAAA,CACD,OAAO1E,CACX,GAAC,CAAAe,IAAA,yBAAApB,MACD,SAAuBiD,EAAQO,GAAO,IAC9BlB,EAAIC,EAD0BuR,EAAA,KAG5BC,EAAqB,GACrBC,EAAkB,SAACvK,EAAMwK,EAAKC,EAASC,EAAarC,GACtD,IAAMsC,EAAO,CACTF,QAAAA,EACAG,qCAAqC,EACrCC,gBAAiBL,EAAIM,UACrBJ,YAAAA,EACArC,aAAAA,GAEJiC,EAAmBlP,KAAK,CACpB4E,KAAAA,EACA+K,aAAcP,EACdQ,WAAY,CACR9T,MAAO8I,EAAKxI,OAAON,MACnB6K,SAAOkJ,EAAAA,EAAAA,GAAA,CAEHC,YAAa,YACbC,gBAAiBnL,EAAKxI,OAAON,MAAMkU,UACnCC,uBAAwBrL,EAAKxI,OAAON,MAAMkU,UAC1CE,WAAY,GACXtL,EAAKxI,OAAOL,UAAuC,IAA3BkT,EAAKnJ,kBAAkDyJ,OAAOhS,KAIvG,EACM4S,EAAwB,SAACvL,EAAMwL,GACjC,IAAMC,EAAapB,EAAKrJ,aAAa0K,mBAAmB,CACpDC,MAAO,GAAFnM,OAAMoM,EAAW,EAAK,EAAC,MAC5BC,QAAS,iBAEbtB,EAAgBvK,EAAMyL,EAAY,SAAUD,EAASM,EAAAA,GAAwBC,MAAQD,EAAAA,GAAwBzE,KACjH,EAEA2E,EAAqD3U,KAAK4U,iBAAlDL,EAAQI,EAARJ,SAAUM,EAAUF,EAAVE,WAAYC,EAAOH,EAAPG,QAASC,EAASJ,EAATI,UACjCC,EAAgB,oCACtBhV,KAAKiJ,QAAQgM,sBAAsBC,MAAMC,YAAYH,EAAeH,GAAY,IACxDO,EADwDC,GAAAzS,EAAAA,EAAAA,GAC7DF,GAAK,IAAxB,IAAA2S,EAAAxS,MAAAuS,EAAAC,EAAAvS,KAAAtD,MAA0B,KAAfmJ,EAAIyM,EAAAlW,MAEPyJ,EAAKzI,KAAKoV,aACVpB,EAAsBvL,GAAM,GAMhC,IAHA,IAAM4M,EAAmC,kBAApB5M,EAAKzI,KAAK6B,MACzB,CAAC,CAAEA,MAAO4G,EAAKzI,KAAK6B,QACpB4G,EAAKzI,KAAK6B,MACPyF,EAAI,EAAGA,EAAI+N,EAAMpQ,OAAQqC,IAAK,CACnC,IAAMsB,EAAOyM,EAAM/N,GACbgO,EAAgB,IAANhO,EACV2M,EAAS3M,IAAM+N,EAAMpQ,OAAS,EAC9BsQ,EAAgB,CAClBlB,SAAU,GAAFpM,OAAKoM,EAAQ,MACrBM,WAAY,OAAF1M,OAAS6M,EAAa,OAAA7M,OAAMuN,EAAAA,GAAqBb,YAC3Dc,cAAeZ,EAAY,WAAa,SACxCa,YAAa,YAEb3F,EAAAA,EAAAA,IAAgBtH,EAAKzI,KAAKgQ,aAC1BuF,EAAcI,OAAS,WAE3B7V,KAAK8V,cAAcL,EAAe9M,EAAKzI,OAClC4I,EAAK2F,SAAW3F,EAAK4F,YAAmD,QAApClN,EAAKxB,KAAKwO,4BAAyC,IAAPhN,OAAgB,EAASA,EAAGsH,KAAKH,QAAUA,GAAQ3I,KAAKwO,qBAAqB1F,KAAKF,QAAUpB,IAE7KiO,EAAcM,eAAiB,YAC3B/V,KAAKwO,qBAAqBzF,qBAC1B0M,EAAcO,OAAQC,EAAAA,EAAAA,IAAiBC,EAAAA,KACvCT,EAAcI,OAAS,YAG3Bf,IACIU,GAAWrB,GAEXsB,EAAcX,QAAU,OAAH3M,OAAsC,EAA5B4E,KAAKC,IAAI,EAAGuH,EAAW,GAAM,MAC5DkB,EAAcU,aAAe,GAAHhO,OAAOoM,EAAW,EAAK,EAAC,OAE7CiB,GAELC,EAAcX,QAAU,aAAH3M,OAA4C,EAA5B4E,KAAKC,IAAI,EAAGuH,EAAW,GAAM,MAClEkB,EAAcU,aAAe,GAAHhO,OAAOoM,EAAW,EAAK,EAAC,WAAApM,OAAWoM,EAAW,EAAK,EAAC,OAEzEJ,GAELsB,EAAcX,QAAU,OAAH3M,OAAsC,EAA5B4E,KAAKC,IAAI,EAAGuH,EAAW,GAAM,YAC5DkB,EAAcU,aAAe,KAAHhO,OAASoM,EAAW,EAAK,EAAC,OAAApM,OAAOoM,EAAW,EAAK,EAAC,SAG5EkB,EAAcX,QAAU,eAGhC5B,EAAgBvK,EAAM3I,KAAK2J,aAAa0K,mBAAmBoB,GAAgBW,GAAStN,EAAK/G,OAAQoS,IAAWxL,EAAKzI,KAAKmW,aAAe5B,EAAAA,GAAwBC,MAAQD,EAAAA,GAAwBzE,KAAM,IAAItH,EAA2BC,EAAMnB,GAC5O,CAKA,GAHImB,EAAKzI,KAAKmW,cACVnC,EAAsBvL,GAAM,GAE5BsK,EAAmB9N,OAASwB,EAAuB2P,gBACnD,KAER,CAEA,OAAAtS,GAAAqR,EAAAhW,EAAA2E,EAAA,SAAAqR,EAAApR,GAAA,CACA,IAC0BsS,EADpBC,EAAyB,GAAGC,GAAA7T,EAAAA,EAAAA,GACdT,GAAM,IAA1B,IAAAsU,EAAA5T,MAAA0T,EAAAE,EAAA3T,KAAAtD,MAA4B,KACiFkX,EADlG7W,EAAK0W,EAAArX,MAAAyX,GAAA/T,EAAAA,EAAAA,GAC8D,QAApDnB,EAAKzB,KAAKiJ,QAAQ2N,sBAAsB/W,UAA2B,IAAP4B,EAAgBA,EAAK,IAAE,IAAzG,IAAAkV,EAAA9T,MAAA6T,EAAAC,EAAA7T,KAAAtD,MAA2G,KAA9F6R,EAAEqF,EAAAxX,MAAFmS,GACHwF,EAAW7W,KAAKyJ,qBAAqBxB,IAAIoJ,GAC3CwF,IACAL,EAAuBzS,KAAKsN,GAC5BwF,EAASnD,aAAanP,UACtBvE,KAAKyJ,qBAAqBqN,OAAOzF,GAEzC,CAAC,OAAArN,GAAA2S,EAAAtX,EAAA2E,EAAA,SAAA2S,EAAA1S,GAAA,CACL,CAAC,OAAAD,GAAAyS,EAAApX,EAAA2E,EAAA,SAAAyS,EAAAxS,GAAA,CACD,IAAM8S,EAAcC,EAAAA,EAAwBC,QAAQjX,KAAKiJ,SACzDjJ,KAAKiJ,QAAQiO,mBAAkB,SAAAC,GAE3B,IADA,IAAMC,EAAmBD,EAASE,iBAAiBb,EAAwBvD,EAAmBlO,KAAI,SAAAiC,GAAC,OAAIA,EAAE2M,UAAU,KAC1GnM,EAAI,EAAGA,EAAI4P,EAAiBjS,OAAQqC,IAAK,CAC9C,IAAMpF,EAAO6Q,EAAmBzL,GAChCwL,EAAKvJ,qBAAqBvB,IAAIkP,EAAiB5P,GAAIpF,EACvD,CACJ,IACA2U,EAAYO,QAAQtX,KAAKiJ,QAC7B,GAAC,CAAA3I,IAAA,gBAAApB,MACD,SAAcqY,EAAOrX,GACbA,EAAKsX,OAAStI,EAAAA,GAAwBuI,WACtCF,EAAMG,iBAAkBzB,EAAAA,EAAAA,IAAiBC,EAAAA,KACzCqB,EAAMvB,OAAQC,EAAAA,EAAAA,IAAiBC,EAAAA,MAE1BhW,EAAKsX,OAAStI,EAAAA,GAAwByI,MAC3CJ,EAAMG,iBAAkBzB,EAAAA,EAAAA,IAAiBC,EAAAA,KACzCqB,EAAMvB,OAAQC,EAAAA,EAAAA,IAAiBC,EAAAA,OAG/BqB,EAAMG,iBAAkBzB,EAAAA,EAAAA,IAAiBC,EAAAA,KACzCqB,EAAMvB,OAAQC,EAAAA,EAAAA,IAAiBC,EAAAA,KAEvC,GAAC,CAAA5V,IAAA,iBAAApB,MACD,WACI,IAAMwL,EAAU1K,KAAKiJ,QAAQ0B,UAAU,KACjCmK,EAAUpK,EAAQoK,QAClB8C,EAAiB5X,KAAKiJ,QAAQ0B,UAAU,IACxCkN,EAAmB7X,KAAKiJ,QAAQ0B,UAAU,IAC5C4J,EAAW7J,EAAQ6J,WAClBA,GAAYA,EAAW,GAAKA,EAAWqD,KACxCrD,EAAWqD,GAEf,IAAM/C,EAAanK,EAAQmK,YAAcgD,EAIzC,MAAO,CAAEtD,SAAAA,EAAUM,WAAAA,EAAYC,QAAAA,EAASC,WAHrBD,GACZD,IAAegD,GACftD,IAAaqD,EAExB,GAAC,CAAAtX,IAAA,wBAAApB,MACD,WACIc,KAAKiJ,QAAQ6O,kBAAkBvI,MAAMC,KAAKxP,KAAKyJ,qBAAqBsO,SAAS,IACzBC,EADyBC,GAAArV,EAAAA,EAAAA,GAC3D5C,KAAKyJ,qBAAqB4F,UAAQ,IAApD,IAAA4I,EAAApV,MAAAmV,EAAAC,EAAAnV,KAAAtD,MAAsD,CAAxCwY,EAAA9Y,MACNwU,aAAanP,SACrB,CAAC,OAAAP,GAAAiU,EAAA5Y,EAAA2E,EAAA,SAAAiU,EAAAhU,GAAA,CACDjE,KAAKyJ,qBAAqBgB,OAC9B,IAAC,EAAAnK,IAAA,MAAApB,MAtcD,SAAWgZ,GACP,IAAI1W,EACJ,OAAoE,QAA5DA,EAAK0W,EAAOC,gBAAgBxR,EAAuByR,WAAwB,IAAP5W,EAAgBA,OAAKF,CACrG,KAAC0H,CAAA,CAJ4C,GAqdjD,SAASoN,GAASiC,GAEd,OAAOA,EAAIhI,QAAQ,SADO,OAE9B,CAfArH,GAAqBoP,GAAK,4BAC1BpP,GAAqBsN,gBAAkB,KACvCtN,GAAuBrC,EAAyBC,EAAW,CACvDc,EAAQ,EAAG4Q,EAAAA,GACX5Q,EAAQ,EAAG6Q,EAAAA,GACX7Q,EAAQ,EAAGa,GACXb,EAAQ,EAAG8Q,EAAAA,GACX9Q,EAAQ,EAAG+Q,EAAAA,IACX/Q,EAAQ,EAAGgR,EAAAA,KACZ1P,IAOH2P,EAAAA,EAAiBC,gBAAgB,6BAA6B,SAACzB,GAAQ,QAAA0B,EAAA3R,UAAA/B,OAAK2T,EAAI,IAAAvJ,MAAAsJ,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,EAAA,GAAA7R,UAAA6R,GAAA,OAAKta,OAAU,OAAQ,OAAQ,GAAMiC,EAAAA,EAAAA,KAAAC,MAAE,SAAAqY,IAAA,IAAA5Q,EAAAvI,EAAAoZ,EAAAjP,EAAAmJ,EAAA9Q,EAAA9C,EAAA,OAAAmB,EAAAA,EAAAA,KAAAI,MAAA,SAAAoY,GAAA,cAAAA,EAAAlY,KAAAkY,EAAA9Z,MAAA,OAKvG,OAJLgJ,EAAc0Q,EAAI,GAAbjZ,EAASiZ,EAAI,IACzBK,EAAAA,EAAAA,IAAWC,EAAAA,EAAIC,MAAMjR,KACrB+Q,EAAAA,EAAAA,IAAWvV,EAAAA,EAAM0V,SAASzZ,IAAQoZ,EACH9B,EAASlP,IAAIqQ,EAAAA,GAApCtO,EAAkBiP,EAAlBjP,mBAAkBkP,EAAA9Z,KAAA,EACR+X,EAASlP,IAAIsR,EAAAA,GAAmBC,qBAAqBpR,GAAI,OAEzD,OAFZ+K,EAAG+F,EAAArX,KAAAqX,EAAAlY,KAAG,EAAHkY,EAAA9Z,KAAG,GAEY8C,EAAoBiK,OAAOnC,EAAoBmJ,EAAIsG,OAAOC,gBAAiB,CAAC9V,EAAAA,EAAM0M,KAAKzQ,IAASkQ,EAAAA,EAAkBC,MAAK,QAErG,OAFhC3N,EAAK6W,EAAArX,KACLtC,EAAS8C,EAAMK,MAAMqC,KAAI,SAAAyC,GAAC,OAAIA,EAAEtH,IAAI,IAC1CyZ,YAAW,kBAAMtX,EAAMkC,SAAS,GAAE,GAAI2U,EAAAhY,OAAA,SAC/B3B,GAAM,QAGC,OAHD2Z,EAAAlY,KAAA,GAGbmS,EAAI5O,UAAU2U,EAAAvM,OAAA,6BAAAuM,EAAA3X,OAAA,GAAAyX,EAAA,sBAEpB,I,4HClkBEpS,GAA0C,SAAUC,EAAYC,EAAQxG,EAAKyG,GAC7E,IAA2HC,EAAvHC,EAAIC,UAAU/B,OAAQgC,EAAIF,EAAI,EAAIH,EAAkB,OAATC,EAAgBA,EAAOK,OAAOC,yBAAyBP,EAAQxG,GAAOyG,EACrH,GAAuB,kBAAZO,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQxG,EAAKyG,QACpH,IAAK,IAAIS,EAAIX,EAAW1B,OAAS,EAAGqC,GAAK,EAAGA,KAASR,EAAIH,EAAWW,MAAIL,GAAKF,EAAI,EAAID,EAAEG,GAAKF,EAAI,EAAID,EAAEF,EAAQxG,EAAK6G,GAAKH,EAAEF,EAAQxG,KAAS6G,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOK,eAAeX,EAAQxG,EAAK6G,GAAIA,CAChE,EACIO,GAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUd,EAAQxG,GAAOsH,EAAUd,EAAQxG,EAAKqH,EAAa,CACxE,EACIlJ,GAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EACIwa,GAAgD,SAAUC,GAC1D,IAAKC,OAAOC,cAAe,MAAM,IAAIC,UAAU,wCAC/C,IAAiCxS,EAA7ByS,EAAIJ,EAAEC,OAAOC,eACjB,OAAOE,EAAIA,EAAEC,KAAKL,IAAMA,EAAwB,oBAAbM,SAA0BA,SAASN,GAAKA,EAAEC,OAAOM,YAAa5S,EAAI,CAAC,EAAG6S,EAAK,QAASA,EAAK,SAAUA,EAAK,UAAW7S,EAAEsS,OAAOC,eAAiB,WAAc,OAAO/Z,IAAM,EAAGwH,GAC9M,SAAS6S,EAAKvX,GAAK0E,EAAE1E,GAAK+W,EAAE/W,IAAM,SAAUwX,GAAK,OAAO,IAAIxb,SAAQ,SAAUC,EAASC,IACvF,SAAgBD,EAASC,EAAQgI,EAAGsT,GAAKxb,QAAQC,QAAQub,GAAG7a,MAAK,SAAS6a,GAAKvb,EAAQ,CAAEG,MAAOob,EAAG9a,KAAMwH,GAAM,GAAGhI,EAAS,EADbub,CAAOxb,EAASC,GAA7Bsb,EAAIT,EAAE/W,GAAGwX,IAA8B9a,KAAM8a,EAAEpb,MAAQ,GAAI,CAAG,CAEnK,EAkBMsb,GAAqB,SAAAC,IAAAC,EAAAA,GAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAAJ,GACvB,SAAAA,EAAY1R,EAAM+R,EAAOC,EAAkBC,GAAkB,IAAAla,EAExC,OAFwCd,EAAAA,EAAAA,GAAA,KAAAya,IACzD3Z,EAAA8Z,EAAAT,KAAA,KAAM,GAAIW,EAAO/R,EAAKH,KAAKxI,OAAON,MAAOib,EAAkBC,GAAkB,IACxEjS,KAAOA,EAAKjI,CACrB,CAAC,OAAAjB,EAAAA,EAAAA,GAAA4a,EAAA,CAJsB,CAASQ,EAAAA,IAMhCC,GAAe,SAAAC,IAAAR,EAAAA,GAAAA,GAAAO,EAAAC,GAAA,IAAAC,GAAAP,EAAAA,GAAAA,GAAAK,GACf,SAAAA,EAAY/C,EAAQkD,EAAiBC,EAAeC,EAAsBC,EAAkBC,GAAyB,IAAA7W,EAG3F,OAH2F5E,EAAAA,EAAAA,GAAA,KAAAkb,IACjHtW,EAAAwW,EAAAjB,KAAA,KAAMhC,EAAQkD,EAAiBC,EAAeC,EAAsBE,IAC/DD,iBAAmBA,EACxB5W,EAAK8W,aAAe,EAAE9W,CAC1B,CAuHC,OAvHA/E,EAAAA,EAAAA,GAAAqb,EAAA,EAAA3a,IAAA,qBAAApB,MACD,SAAmBmP,GACf,IAAI7M,EAEJ,IADmBwH,GAAqBf,IAAIjI,KAAKiJ,SAE7C,OAAO,KAEX,GAA+B,IAA3BoF,EAAWvH,OAAO+J,KAClB,OAAO,KAEX,IAAMnG,EAA2D,QAAhDlJ,EAAK6M,EAAWvH,OAAO+I,OAAOiB,oBAAiC,IAAPtP,OAAgB,EAASA,EAAGkJ,QACrG,OAAMA,aAAmBqG,EAAAA,IAAsCrG,EAAQsG,wBAAwBtI,EAGxF,IAAI8R,GAAsB9P,EAAQsG,aAAchR,KAAMqO,EAAWlB,MAAMuO,KAAMrN,EAAWlB,MAAMwO,MAF1F,IAGf,GAAC,CAAArb,IAAA,cAAApB,MACD,WACI,MAAO,EACX,GAAC,CAAAoB,IAAA,eAAApB,MACD,SAAaiB,EAAQyb,EAAkBnb,GAAO,IAAAsN,EAAA,KAC1C,OAAM5N,aAAkBqa,GAGjB,IAAIqB,EAAAA,IAAoB,SAACC,GAAQ,OAAKrd,GAAUsP,OAAM,OAAQ,GAAMrN,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAAY,EAAAua,EAAAta,EAAAua,EAAAlT,EAAAmT,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9T,EAAA,OAAAjI,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA3B,MAAA,OAGzE,OADQ0J,EAAS3I,EAAT2I,KAAI/H,EAAA3B,KAAA,EACN0J,EAAKH,KAAK5J,QAAQ0B,GAAM,WAC1BA,EAAMU,wBAAyB,CAAFJ,EAAA3B,KAAA,eAAA2B,EAAAG,OAAA,iBAsDhB,MAjDqB,kBAA3B4H,EAAKH,KAAKzI,KAAK4B,QACtBma,GAAc,IAAIS,GAAAA,IAAiBC,WAAW7T,EAAKH,KAAKzI,KAAK4B,SAExDgH,EAAKH,KAAKzI,KAAK4B,UACpBma,EAAcnT,EAAKH,KAAKzI,KAAK4B,SAE7Bma,GACAH,EAASc,QAAQ,IAAIC,GAAAA,GAAc7c,KAAMG,EAAON,MAAO,CAACoc,IAAc,EAAO,KAG7EhM,EAAAA,EAAAA,IAAgBnH,EAAKH,KAAKzI,KAAKgQ,YAC/B4L,EAASc,QAAQ,IAAIC,GAAAA,GAAc7c,KAAMG,EAAON,MAAO,EAAC,IAAI6c,GAAAA,IAAiBC,YAAWG,EAAAA,GAAAA,IAAS,WAAY,6BAA6B,EAAO,QAIpH,kBAAtBhU,EAAKA,KAAKhH,QACjBoa,GAAc,IAAIQ,GAAAA,IAAiBC,WAAW7T,EAAKA,KAAKhH,SAEnDgH,EAAKA,KAAKhH,UACfoa,EAAcpT,EAAKA,KAAKhH,SAExBoa,GACAJ,EAASc,QAAQ,IAAIC,GAAAA,GAAc7c,KAAMG,EAAON,MAAO,CAACqc,IAAc,EAAO,KAG7EpT,EAAKA,KAAK4F,UAAY5F,EAAKA,KAAK2F,WAE1B2N,EAAmF,WAAtEpc,KAAKiJ,QAAQ0B,UAAU,IACpC0R,EAAKD,EACLW,GAAAA,IACID,EAAAA,GAAAA,IAAS,6BAA8B,gBACvCA,EAAAA,GAAAA,IAAS,yBAA0B,gBACvCC,GAAAA,IACID,EAAAA,GAAAA,IAAS,4BAA6B,mBACtCA,EAAAA,GAAAA,IAAS,wBAAyB,eACxChU,EAAKA,KAAK4F,UAAY5F,EAAKA,KAAK2F,QAChC0N,GAAW,IAAIO,GAAAA,IAAiBC,YAAWG,EAAAA,GAAAA,IAAS,qBAAsB,+CAAgDT,IAErHvT,EAAKA,KAAK4F,SACfyN,GAAW,IAAIO,GAAAA,IAAiBC,YAAWG,EAAAA,GAAAA,IAAS,WAAY,yBAA0BT,IAErFvT,EAAKA,KAAK2F,UACf0N,EAAW,IAAIO,GAAAA,GAAe,IAADvU,QAAK2U,EAAAA,GAAAA,IAAS,WAAY,mBAAkB,MAAA3U,QFyB/DsG,EEzBkF3F,EAAKA,KAAK2F,QF0B/G2K,EAAAA,EAAI5J,KAAK,CACZwN,OAAQC,EAAAA,GAAQxO,QAChByO,KAAMzO,EAAQ4C,GACd8L,MAAO1O,EAAQvH,WAAakW,mBAAmBC,KAAKC,UAAU7O,EAAQvH,cACvEmB,YE9B2H,MAAAF,OAAKW,EAAKA,KAAK2F,QAAQ8O,MAAK,QAAApV,OAAOkU,EAAE,KAAK,CAAEmB,WAAW,KAErKrB,GACAL,EAASc,QAAQ,IAAIC,GAAAA,GAAc7c,KAAMG,EAAON,MAAO,CAACsc,IAAW,EAAO,OAGlFpb,EAAA3B,KAAA,GACuBY,KAAKyd,gCAAgC3U,EAAMrI,GAAM,QAAlE6b,EAAQvb,EAAAc,KAAAd,EAAAC,KAAG,GAEJub,GAAK,EAAMC,EAAa5C,GAAc0C,GAAS,QAA+B,OAA/Bvb,EAAA3B,KAAA,GAAqCod,EAAWpd,OAAM,QAAwB,GAA9Dqd,EAAY1b,EAAAc,KAA4BL,EAAKib,EAAajd,KAAS,CAAAuB,EAAA3B,KAAA,SACvI4c,EAAKS,EAAavd,MAClBqd,GAAK,EACC5T,EAAOqT,EACbF,EAASc,QAAQjU,GAAM,QAJkH4T,GAAK,EAAIxb,EAAA3B,KAAA,iBAAA2B,EAAA3B,KAAA,iBAAA2B,EAAAC,KAAA,GAAAD,EAAAiB,GAAAjB,EAAA,UAO1Igb,EAAM,CAAE2B,MAAK3c,EAAAiB,IAAU,WAAAjB,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAG1Bub,GAAO/a,KAAOC,EAAK+a,EAAWmB,QAAO,CAAA5c,EAAA3B,KAAA,SAAE,OAAF2B,EAAA3B,KAAA,GAAQqC,EAAGyY,KAAKsC,GAAW,WAAAzb,EAAAC,KAAA,IAE3D+a,EAAK,CAAFhb,EAAA3B,KAAA,eAAQ2c,EAAI2B,MAAK,eAAA3c,EAAA4L,OAAA,mBAAA5L,EAAA4L,OAAA,6BAAA5L,EAAAQ,OFI3C,IAAuBkN,CEJoB,GAAA7N,EAAA,qCAExC,IA5ESib,EAAAA,GAAoB+B,KA6EnC,GAAC,CAAAtd,IAAA,kCAAApB,MACD,SAAgC4J,EAAMrI,GAClC,OAAOhC,GAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAe,IAAA,IAAAmc,EAAAzV,EAAAvI,EAAAsT,EAAA9Q,EAAAqN,EAAA,YAAAhP,EAAAA,EAAAA,KAAAI,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAxC,MAAA,UAC9B0J,EAAKA,KAAK4F,SAAU,CAAF9M,EAAAxC,KAAA,eAAAwC,EAAAV,OAAA,SACZ2a,EAAAA,GAAoB+B,OAAK,OAGxB,OAHwBC,EAEb/U,EAAKA,KAAK4F,SAAzBtG,EAAGyV,EAAHzV,IAAKvI,EAAKge,EAALhe,MAAK+B,EAAAxC,KAAA,EACAY,KAAKub,iBAAiB/B,qBAAqBpR,GAAI,OAErB,GAFtC+K,EAAGvR,EAAAC,KAAAD,EAAAZ,KAAG,EAEFqB,EAAQ8Q,EAAIsG,OAAOC,gBACpB1Z,KAAKkJ,yBAAyB4U,cAAchT,IAAIzI,GAAQ,CAAFT,EAAAxC,KAAA,gBAAAwC,EAAAV,OAAA,SAChD2a,EAAAA,GAAoB+B,OAAK,eAAAhc,EAAAV,OAAA,UAE7B6c,EAAAA,GAAAA,IAAS/d,KAAKkJ,yBAAyB4U,cAAezb,EAAO,IAAIgC,EAAAA,EAASxE,EAAM+S,gBAAiB/S,EAAM+F,aAAcnF,GACvHud,QAAO,SAAArV,GAAI,QAAKsV,EAAAA,GAAAA,IAAsBtV,EAAKuV,MAAMC,SAAS,IAC1DpZ,KAAI,SAAA4D,GAAI,OAAI,IAAIkU,GAAAA,GAAcnN,EAAM5G,EAAKH,KAAKxI,OAAON,MAAO8I,EAAKuV,MAAMC,UAAU,EAAO,EAAIxV,EAAKyV,QAAQ,KAAC,QAGjG,OAHiGxc,EAAAZ,KAAA,GAG/GmS,EAAI5O,UAAU3C,EAAA+K,OAAA,6BAAA/K,EAAAL,OAAA,GAAAG,EAAA,sBAG1B,KAACuZ,CAAA,CA5Hc,CAAiCoD,GAAAA,IA8HpDpD,GAAkBrU,GAAW,CACzBc,GAAQ,EAAG4W,GAAAA,GACX5W,GAAQ,EAAG6W,GAAAA,IACX7W,GAAQ,EAAG8W,GAAAA,IACX9W,GAAQ,EAAG6R,EAAAA,GACX7R,GAAQ,EAAG4Q,EAAAA,IACZ2C,KChLHwD,EAAAA,EAAAA,IAA2BzV,GAAqBoP,GAAIpP,GAAsB,GAC1E0V,EAAAA,GAAyBC,SAAS1D,G,2QCL9Bxc,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EAeO,SAASwR,EAAoBuG,EAAUe,EAAQ/X,EAAQ2I,GAC1D,IAAItH,EACJ,OAAO/C,EAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAqE,IAAA,IAAA4Z,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtQ,EAAAuQ,EAAAjB,EAAArb,EAAAF,EAAAyc,EAAAzQ,EAAA0Q,EAAAte,EAAA,YAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAA8D,GAAA,cAAAA,EAAA5D,KAAA4D,EAAAxF,MAAA,OAMnC,OALMwf,EAAkBzH,EAASlP,IAAIsR,EAAAA,GAC/BsF,EAAqB1H,EAASlP,IAAImX,EAAAA,GAClCN,EAAiB3H,EAASlP,IAAIuQ,EAAAA,GAC9BuG,EAAe5H,EAASlP,IAAIyQ,EAAAA,IAC5BsG,EAAsB7H,EAASlP,IAAIwQ,EAAAA,IAAqB7T,EAAAxF,KAAA,EACxD0J,EAAKH,KAAK5J,QAAQgR,EAAAA,EAAkBC,MAAK,UAC1ClH,EAAKA,KAAK4F,SAAU,CAAF9J,EAAAxF,KAAA,eAAAwF,EAAA1D,OAAA,iBAGjBwN,EAAW5F,EAAKA,KAAK4F,SACrBuQ,EAAc,GAGdjB,EAAS,IAAIxb,IAAI6c,EAAAA,GAAaC,aAAaC,EAAAA,GAAOC,eACnDza,KAAI,SAAA4D,GAAI,OAAI8W,EAAAA,EAAAA,IAAY9W,GAAQA,EAAK8F,QAAQ4C,IAAKqO,EAAAA,EAAAA,IAAc,KAAE/c,GAAAC,EAAAA,EAAAA,GAChD+c,EAAAA,uBAAuBva,OAAKR,EAAA5D,KAAA,GAAAke,GAAAxe,EAAAA,EAAAA,KAAAC,MAAA,SAAAue,IAAA,IAAAU,EAAA,OAAAlf,EAAAA,EAAAA,KAAAI,MAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAA7F,MAAA,OAAxCwgB,EAAQnd,EAAAvD,MACX8e,EAAOlT,IAAI8U,EAAS7Y,KAAKsK,KACzB4N,EAAYlb,KAAK,IAAI8b,EAAAA,GAAOD,EAAS7Y,KAAKsK,GAAIyO,EAAAA,GAAe/d,MAAM6d,EAAS7Y,KAAM,CAAEgZ,kBAAkB,SAASze,GAAW,GAAM,kBAAM7C,EAAUoC,OAAM,OAAQ,GAAMH,EAAAA,EAAAA,KAAAC,MAAE,SAAAe,IAAA,IAAAyR,EAAA6M,EAAAngB,EAAA,OAAAa,EAAAA,EAAAA,KAAAI,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAxC,MAAA,OACtJ,OADsJwC,EAAAxC,KAAA,EAChJwf,EAAgBpF,qBAAqB9K,EAAStG,KAAI,OAIhE,OAJE+K,EAAGvR,EAAAC,KAAAD,EAAAZ,KAAG,EAEFgf,EAAe,IAAIC,EAAAA,uBAAuB9M,EAAIsG,OAAOC,gBAAiB9V,EAAAA,EAAMF,iBAAiBgL,EAAS7O,QACtGA,EAAQiJ,EAAKH,KAAKxI,OAAON,MAAK+B,EAAAxC,KAAA,EAC9B2f,EAAa/P,eAAe4Q,EAASM,iBAAiBC,KAAKP,GAAW1H,EAAQ8H,EAAcngB,GAAM,OAG1F,OAH0F+B,EAAAZ,KAAA,EAGxGmS,EAAI5O,UAAU3C,EAAA+K,OAAA,4BAAA/K,EAAAL,OAAA,GAAAG,EAAA,qBAEpB,KACL,wBAAAuD,EAAA1D,OAAA,GAAA2d,EAAA,IAAAvc,EAAAE,IAAA,YAAAJ,EAAAE,EAAAG,KAAAtD,KAAA,CAAAoF,EAAAxF,KAAA,gBAAAwF,EAAAwb,cAAAlB,IAAA,iBAAAta,EAAAxF,KAAA,iBAAAwF,EAAAxF,KAAA,iBAAAwF,EAAA5D,KAAA,GAAA4D,EAAA8G,GAAA9G,EAAA,UAAAjC,EAAAtD,EAAAuF,EAAA8G,IAAA,eAAA9G,EAAA5D,KAAA,GAAA2B,EAAAsB,IAAAW,EAAA+H,OAAA,YAED7D,EAAKA,KAAK2F,UACFA,EAAY3F,EAAKA,KAAjB2F,QACRwQ,EAAYlb,KAAK,IAAIsc,EAAAA,IACrBpB,EAAYlb,KAAK,IAAI8b,EAAAA,GAAOpR,EAAQ4C,GAAI5C,EAAQ8O,WAAOjc,GAAW,GAAM,kBAAM7C,EAAUoC,OAAM,OAAQ,GAAMH,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAAa,EAAA,OAAAf,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA3B,MAAA,OAGtG,OAHsG2B,EAAAC,KAAA,EAAAD,EAAA3B,KAAA,EAGhG0f,EAAe1N,eAAc1R,MAA7Bof,EAAc,CAAgBrQ,EAAQ4C,IAAElJ,QAAAmJ,EAAAA,EAAAA,GAAmC,QAA5B7P,EAAKgN,EAAQvH,iBAA8B,IAAPzF,EAAgBA,EAAK,MAAI,OAAAV,EAAA3B,KAAA,eAAA2B,EAAAC,KAAA,EAAAD,EAAAiB,GAAAjB,EAAA,SAGlHie,EAAoBzN,OAAO,CACvBC,SAAUC,EAAAA,GAASC,MACnBC,OAAQ7I,EAAKH,KAAKvI,SAASwR,YAC3BC,QAAO9Q,EAAAiB,KACR,wBAAAjB,EAAAQ,OAAA,GAAAX,EAAA,iBAET,MAGAue,EAAejH,EAAOvN,UAAU,KACtCkU,EAAmByB,gBAAgB,CAC/BC,iBAAkBpB,GAA8C,QAA9B3d,EAAK0W,EAAOsI,oBAAiC,IAAPhf,EAAgBA,OAAiBF,EACzGmf,UAAW,WACP,IAAMC,EAAMC,EAAAA,uBAA2BxgB,GACvC,MAAO,CAAEygB,EAAGF,EAAIG,KAAMC,EAAGJ,EAAIK,IAAML,EAAIM,OAAS,EACpD,EACAC,WAAY,kBAAMhC,CAAW,EAC7BiC,OAAQ,WACJhJ,EAAOiJ,OACX,EACAC,qBAAqB,IACtB,yBAAAxc,EAAArD,OAAA,GAAAyD,EAAA,yBAEX,CACO,SAASiK,EAA2BkI,EAAUhK,EAAO+K,EAAQxJ,GAChE,OAAOjQ,EAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAsQ,IAAA,IAAA2N,EAAAzL,EAAAxO,EAAA,YAAAjE,EAAAA,EAAAA,KAAAI,MAAA,SAAAoY,GAAA,cAAAA,EAAAlY,KAAAkY,EAAA9Z,MAAA,OAEvB,OADNwf,EAAkBzH,EAASlP,IAAIsR,EAAAA,GAAkBL,EAAA9Z,KAAA,EACrCwf,EAAgBpF,qBAAqB9K,EAAStG,KAAI,OACpE,OADM+K,EAAG+F,EAAArX,KAAAqX,EAAA9Z,KAAG,EACN8Y,EAAOmJ,qBAAoB,SAAClK,GAAQ,OAAK1Y,EAAUkG,OAAM,OAAQ,GAAMjE,EAAAA,EAAAA,KAAAC,MAAE,SAAA8D,IAAA,IAAA6c,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAhhB,EAAAA,EAAAA,KAAAI,MAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAA/R,MAAA,OAKyF,OAJ9JkiB,EAAanU,EAAMwU,sBACnBJ,EAAoBpK,EAASlP,IAAI2Z,EAAAA,IACjCJ,EAAWK,EAAAA,GAAYC,aAAaC,SAASR,GAC7CE,GAAWH,GAAcpJ,EAAOvN,UAAU,MAAqD6W,EAC/FE,EAAS,IAAIM,EAAAA,iBAAiB,CAAEV,WAAAA,EAAYW,WAAYR,EAASS,aAAa,GAAQ,CAAE3E,MAAO,CAAEre,MAAO,GAAIijB,SAAU,IAAM9Q,GAAI,GAAI+Q,kBAAc9gB,IAAY6P,EAAAjQ,OAAA,SAC7JwgB,EAAOW,IAAIlL,EAAU,IAAI8I,EAAAA,uBAAuB9M,EAAIsG,OAAOC,gBAAiB9V,EAAAA,EAAMF,iBAAiBgL,EAAS7O,QAAS+D,EAAAA,EAAM0M,KAAK5B,EAAS7O,SAAO,wBAAAsR,EAAA5P,OAAA,GAAAkD,EAAA,IACzJ,IAAC,OACH0O,EAAI5O,UAAU,wBAAA2U,EAAA3X,OAAA,GAAA0P,EAAA,IAEtB,C,yGCvGO,IAAMqR,EAAwB,qCACxBC,EAAuC,2CACvCC,EAAmC,sC,uKCInCC,EAA2B,SAAAC,IAAAhI,EAAAA,EAAAA,GAAA+H,EAAAC,GAAA,IAAA/H,GAAAC,EAAAA,EAAAA,GAAA6H,GACpC,SAAAA,EAAYlB,EAAmBlf,GAAO,IAAAxB,EA0C9B,OA1C8Bd,EAAAA,EAAAA,GAAA,KAAA0iB,IAClC5hB,EAAA8Z,EAAAT,KAAA,OACKqH,kBAAoBA,EACzB1gB,EAAKwB,MAAQA,EACbxB,EAAK8hB,wBAA0BF,EAA4BG,wBAAwBC,OAAOhiB,EAAK0gB,mBAC/F1gB,EAAKiiB,oCAAsCL,EAA4BM,+BAA+BF,OAAOhiB,EAAK0gB,mBAClH1gB,EAAKmiB,mDAAqDP,EAA4BQ,8CAA8CJ,OAAOhiB,EAAK0gB,mBAChJ1gB,EAAKqiB,oBAAsBT,EAA4BS,oBAAoBL,OAAOhiB,EAAK0gB,mBACvF1gB,EAAKsiB,WAAUC,EAAAA,EAAAA,KAAQ,SAAAC,GAEnB,IAAMhhB,EAAQxB,EAAKwB,MAAMihB,KAAKD,GACxBE,EAAkB,OAAVlhB,QAA4B,IAAVA,OAAmB,EAASA,EAAMkhB,MAAMD,KAAKD,GACvEG,KAAyC,OAAVD,QAA4B,IAAVA,OAAmB,EAASA,EAAME,wBAAyFniB,KAAzD,OAAViiB,QAA4B,IAAVA,OAAmB,EAASA,EAAMG,cAAwC,OAAVH,QAA4B,IAAVA,OAAmB,EAASA,EAAMG,UAAU3P,WAC/PlT,EAAK8hB,wBAAwBza,IAAIsb,IAClB,OAAVD,QAA4B,IAAVA,OAAmB,EAASA,EAAMG,aAAyB,OAAVH,QAA4B,IAAVA,OAAmB,EAASA,EAAME,mBACxH5iB,EAAKqiB,oBAAoBhb,IAAIqb,EAAME,iBAAiBA,iBAAiB9R,OAAOgS,kBAAkBT,oBAEtG,KACAriB,EAAKsiB,WAAUC,EAAAA,EAAAA,KAAQ,SAAAC,GAEnB,IAAMhhB,EAAQxB,EAAKwB,MAAMihB,KAAKD,GAC1BO,GAAwB,EACxBC,GAAuC,EACrCH,EAAsB,OAAVrhB,QAA4B,IAAVA,OAAmB,EAASA,EAAMqhB,UAAUJ,KAAKD,GACrF,IAAiB,OAAVhhB,QAA4B,IAAVA,OAAmB,EAASA,EAAMyhB,sBAAwBJ,GAAaA,EAAUnO,MAAMpQ,OAAS,EAAG,CACxH,IAAA4e,EAA0BL,EAAUnO,MAAM,GAAlCpP,EAAM4d,EAAN5d,OACF6d,EADeD,EAALE,MACQ,GAGxB,GADsB9d,GADO9D,EAAM6hB,UAAUC,oBAAoBT,EAAUje,YAExD,CACf,IAAI2e,GAAgBC,EAAAA,EAAAA,IAAwBL,IACrB,IAAnBI,IACAA,EAAgBJ,EAAU7e,OAAS,GAEvCye,EAAwBQ,EAAgB,EACxC,IAAME,EAAUjiB,EAAM6hB,UAAUK,aAAaD,QAE7CT,EADiCW,EAAAA,EAAcC,wBAAwBT,EAAWI,EAAgB,EAAGE,GACnCA,CACtE,CACJ,CACAzjB,EAAKiiB,oCAAoC5a,IAAI0b,GAC7C/iB,EAAKmiB,mDAAmD9a,IAAI2b,EAChE,KAAIhjB,CACR,CAAC,OAAAjB,EAAAA,EAAAA,GAAA6iB,EAAA,CA5CmC,CAASiC,EAAAA,IA8CjDjC,EAA4BG,wBAA0B,IAAI+B,EAAAA,GAAc,2BAA2B,GAAO7H,EAAAA,EAAAA,IAAS,0BAA2B,4CAC9I2F,EAA4BM,+BAAiC,IAAI4B,EAAAA,GAAc,kCAAkC,GAAO7H,EAAAA,EAAAA,IAAS,iCAAkC,yDACnK2F,EAA4BQ,8CAAgD,IAAI0B,EAAAA,GAAc,iDAAiD,GAAM7H,EAAAA,EAAAA,IAAS,gDAAiD,yGAC/M2F,EAA4BS,oBAAsB,IAAIyB,EAAAA,GAAc,2CAAuCrjB,GAAWwb,EAAAA,EAAAA,IAAS,sBAAuB,uE,uZCnCrJ,IACK8H,EAAyB,WAC3B,SAAAA,EAAYrU,IAAMxQ,EAAAA,EAAAA,GAAA,KAAA6kB,GACd5kB,KAAK6kB,yBAA2B,GAChC7kB,KAAK6kB,yBAAyB9gB,KAAK,GACnC,IAAK,IAAIyD,EAAI,EAAGA,EAAI+I,EAAKpL,OAAQqC,IACN,OAAnB+I,EAAKuU,OAAOtd,IACZxH,KAAK6kB,yBAAyB9gB,KAAKyD,EAAI,EAGnD,CAGC,OAHA5H,EAAAA,EAAAA,GAAAglB,EAAA,EAAAtkB,IAAA,YAAApB,MACD,SAAUoE,GACN,OAAOtD,KAAK6kB,yBAAyBvhB,EAASmC,WAAa,GAAKnC,EAAS6C,OAAS,CACtF,KAACye,CAAA,CAZ0B,GAczBG,EAAQ,GAIP,IAAMC,EAAW,WACpB,SAAAA,EAAYpf,EAAaqf,GAGrB,IAHyCllB,EAAAA,EAAAA,GAAA,KAAAilB,GACzChlB,KAAK4F,YAAcA,EACnB5F,KAAKilB,mBAAqBA,EACtBrf,EAAcqf,EACd,MAAM,IAAIC,EAAAA,GAAmB,eAAD/c,OAAgBvC,EAAW,wCAAAuC,OAAuC8c,GAEtG,CAOC,OAPArlB,EAAAA,EAAAA,GAAAolB,EAAA,EAAA1kB,IAAA,UAAApB,MACD,SAAQuG,GACJ,OAAO,IAAI7B,EAAAA,EAAM6B,EAAYzF,KAAK4F,YAAaH,EAAYzF,KAAKilB,mBACpE,GAAC,CAAA3kB,IAAA,SAAApB,MACD,SAAOimB,GACH,OAAOnlB,KAAK4F,cAAgBuf,EAAMvf,aAC3B5F,KAAKilB,qBAAuBE,EAAMF,kBAC7C,KAACD,CAAA,CAdmB,GA8BjB,SAASI,EAAaC,EAAMC,GAC/B,OAAO,IAAIjhB,EAAAA,EAASghB,EAAK5f,WAAa6f,EAAK7f,WAAa,EAAuB,IAApB6f,EAAK7f,WAAmB4f,EAAKlf,OAASmf,EAAKnf,OAAS,EAAImf,EAAKnf,OAC5H,CACO,SAASof,EAAahV,GACzB,IAEoBpN,EAFhBqC,EAAO,EACPW,EAAS,EAAE/C,GAAAR,EAAAA,EAAAA,GACC2N,GAAI,IAApB,IAAAnN,EAAAP,MAAAM,EAAAC,EAAAN,KAAAtD,MAAsB,CACR,OADF2D,EAAAjE,OAEJsG,IACAW,EAAS,GAGTA,GAER,CAAC,OAAAnC,GAAAZ,EAAA/D,EAAA2E,EAAA,SAAAZ,EAAAa,GAAA,CACD,OAAO,IAAII,EAAAA,EAASmB,EAAMW,EAC9B,CCxFO,IAAMqf,EAAS,WAClB,SAAAA,EAAY/f,EAAY8P,IAAOxV,EAAAA,EAAAA,GAAA,KAAAylB,GAC3BxlB,KAAKyF,WAAaA,EAClBzF,KAAKuV,MAAQA,CACjB,CAuBC,OAvBA3V,EAAAA,EAAAA,GAAA4lB,EAAA,EAAAllB,IAAA,SAAApB,MACD,SAAOimB,GACH,OAAOnlB,KAAKyF,aAAe0f,EAAM1f,YAC7BzF,KAAKuV,MAAMpQ,SAAWggB,EAAM5P,MAAMpQ,QAClCnF,KAAKuV,MAAMkQ,OAAM,SAAC3c,EAAMF,GAAK,OAAKE,EAAK4c,OAAOP,EAAM5P,MAAM3M,GAAO,GACzE,GAAC,CAAAtI,IAAA,wBAAApB,MACD,SAAsBymB,GAClB,GAA0B,IAAtB3lB,KAAKuV,MAAMpQ,OACX,MAAO,GAEX,IAAMygB,EAAW5lB,KAAKuV,MAAMvV,KAAKuV,MAAMpQ,OAAS,GAMhD,ODZD,SAAoBoL,EAAMX,GAC7B,IAAMiW,EAAc,IAAIjB,EAA0BrU,GAC5CuV,EAAclW,EAAM7K,KAAI,SAAA1F,GAC1B,IAAMQ,EAAQ+D,EAAAA,EAAM0M,KAAKjR,EAAEQ,OAC3B,MAAQ,CACJkmB,YAAaF,EAAYG,UAAUnmB,EAAM6D,oBACzCuiB,UAAWJ,EAAYG,UAAUnmB,EAAMiE,kBACvCyM,KAAMlR,EAAEkR,KAEhB,IACAuV,EAAY5hB,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAE2hB,YAAc5hB,EAAE4hB,WAAW,IAAE,IAC5BtjB,EAD4BE,GAAAC,EAAAA,EAAAA,GACvCkjB,GAAW,IAA9B,IAAAnjB,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAtD,MAAgC,KAArB2Q,EAAI1N,EAAAvD,MACXqR,EAAOA,EAAK2V,UAAU,EAAG/V,EAAK4V,aAAe5V,EAAKI,KAAOA,EAAK2V,UAAU/V,EAAK8V,UACjF,CAAC,OAAAjiB,GAAArB,EAAAtD,EAAA2E,EAAA,SAAArB,EAAAsB,GAAA,CACD,OAAOsM,CACX,CCPqB4V,CADUR,EAASS,OAAO,EAAGR,EAASzf,OAAS,GACpBnG,KAAKuV,MAAMxQ,KAAI,SAAAshB,GAAC,MAAK,CACzDxmB,MAAO,CAAE+S,gBAAiB,EAAGC,cAAe,EAAGjN,YAAaygB,EAAElgB,OAAQN,UAAWwgB,EAAElgB,QACnFoK,KAAM8V,EAAEpC,MAAMqC,KAAK,MACtB,KACWJ,UAAUlmB,KAAKuV,MAAM,GAAGpP,OAAS,EACjD,GAAC,CAAA7F,IAAA,UAAApB,MACD,WACI,OAAOc,KAAKuV,MAAMkQ,OAAM,SAAAY,GAAC,OAAuB,IAAnBA,EAAEpC,MAAM9e,MAAY,GACrD,GAAC,CAAA7E,IAAA,YAAA2H,IACD,WACI,OAAO,EAAIjI,KAAKuV,MAAMgR,QAAO,SAACpf,EAAGkf,GAAC,OAAKlf,EAAIkf,EAAEpC,MAAM9e,OAAS,CAAC,GAAE,EACnE,KAACqgB,CAAA,CA3BiB,GA6BTgB,EAAa,WACtB,SAAAA,EAAYrgB,EAAQ8d,EAIpBwC,IAAS1mB,EAAAA,EAAAA,GAAA,KAAAymB,GACLxmB,KAAKmG,OAASA,EACdnG,KAAKikB,MAAQA,EACbjkB,KAAKymB,QAAUA,CACnB,CAKC,OALA7mB,EAAAA,EAAAA,GAAA4mB,EAAA,EAAAlmB,IAAA,SAAApB,MACD,SAAOimB,GACH,OAAOnlB,KAAKmG,SAAWgf,EAAMhf,QACzBnG,KAAKikB,MAAM9e,SAAWggB,EAAMlB,MAAM9e,QAClCnF,KAAKikB,MAAMwB,OAAM,SAACjgB,EAAMoD,GAAK,OAAKpD,IAAS2f,EAAMlB,MAAMrb,EAAM,GACrE,KAAC4d,CAAA,CAdqB,GAgBbE,EAAoB,WAC7B,SAAAA,EAAYjhB,EAAYkhB,EAAaC,GAA2C,IAAjCC,EAA2B3f,UAAA/B,OAAA,QAAA7D,IAAA4F,UAAA,GAAAA,UAAA,GAAG,GAACnH,EAAAA,EAAAA,GAAA,KAAA2mB,GAC1E1mB,KAAKyF,WAAaA,EAClBzF,KAAK2mB,YAAcA,EACnB3mB,KAAK4mB,SAAWA,EAChB5mB,KAAK6mB,4BAA8BA,EACnC7mB,KAAKuV,MAAQ,CACT,IAAIiR,EAAcxmB,KAAK2mB,YAAY1B,mBAAoBjlB,KAAK4mB,UAAU,GAE9E,CAgBC,OAhBAhnB,EAAAA,EAAAA,GAAA8mB,EAAA,EAAApmB,IAAA,wBAAApB,MACD,SAAsB4nB,GAClB,OAAO9mB,KAAK4mB,SAASN,KAAK,KAC9B,GAAC,CAAAhmB,IAAA,YAAA2H,IACD,WACI,OAAOjI,KAAK4mB,SAASzhB,MACzB,GAAC,CAAA7E,IAAA,UAAApB,MACD,WACI,OAAOc,KAAKuV,MAAMkQ,OAAM,SAAAY,GAAC,OAAuB,IAAnBA,EAAEpC,MAAM9e,MAAY,GACrD,GAAC,CAAA7E,IAAA,SAAApB,MACD,SAAOimB,GACH,OAAOnlB,KAAKyF,aAAe0f,EAAM1f,YAC7BzF,KAAK2mB,YAAYjB,OAAOP,EAAMwB,cAC9B3mB,KAAK4mB,SAASzhB,SAAWggB,EAAMyB,SAASzhB,QACxCnF,KAAK4mB,SAASnB,OAAM,SAACjgB,EAAMoD,GAAK,OAAKpD,IAAS2f,EAAMyB,SAAShe,EAAM,KACnE5I,KAAK6mB,8BAAgC1B,EAAM0B,2BACnD,KAACH,CAAA,CAzB4B,GA2B1B,SAASK,EAA6B5iB,EAAGC,GAC5C,OAAID,IAAMC,MAGLD,IAAMC,MAGPD,aAAaqhB,GAAaphB,aAAaohB,GAGvCrhB,aAAauiB,GAAwBtiB,aAAasiB,IAF3CviB,EAAEuhB,OAAOthB,GAMxB,CCnFA,IAAIwC,EAA0C,SAAUC,EAAYC,EAAQxG,EAAKyG,GAC7E,IAA2HC,EAAvHC,EAAIC,UAAU/B,OAAQgC,EAAIF,EAAI,EAAIH,EAAkB,OAATC,EAAgBA,EAAOK,OAAOC,yBAAyBP,EAAQxG,GAAOyG,EACrH,GAAuB,kBAAZO,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQxG,EAAKyG,QACpH,IAAK,IAAIS,EAAIX,EAAW1B,OAAS,EAAGqC,GAAK,EAAGA,KAASR,EAAIH,EAAWW,MAAIL,GAAKF,EAAI,EAAID,EAAEG,GAAKF,EAAI,EAAID,EAAEF,EAAQxG,EAAK6G,GAAKH,EAAEF,EAAQxG,KAAS6G,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOK,eAAeX,EAAQxG,EAAK6G,GAAIA,CAChE,EACIO,EAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUd,EAAQxG,GAAOsH,EAAUd,EAAQxG,EAAKqH,EAAa,CACxE,EAmBaqf,EAAyB,aAClCC,EAAe,SAAAvE,IAAAhI,EAAAA,EAAAA,GAAAuM,EAAAvE,GAAA,IAAA/H,GAAAC,EAAAA,EAAAA,GAAAqM,GACf,SAAAA,EAAY/O,EAAQ7V,EAAO+Y,GAAiB,IAAAva,EAqHkC,OArHlCd,EAAAA,EAAAA,GAAA,KAAAknB,IACxCpmB,EAAA8Z,EAAAT,KAAA,OACKhC,OAASA,EACdrX,EAAKwB,MAAQA,EACbxB,EAAKua,gBAAkBA,EACvBva,EAAKyE,YAAa4hB,EAAAA,EAAAA,KAAeC,EAAAA,EAAAA,GAAAtmB,IAAO,GACxCA,EAAKumB,kBAAmBC,EAAAA,EAAAA,IAAoBxmB,EAAKqX,OAAO9N,kBAAkB,kBAAMvJ,EAAKqX,OAAOrN,UAAU,IACtGhK,EAAKymB,SAAUC,EAAAA,EAAAA,KAAOJ,EAAAA,EAAAA,GAAAtmB,IAAO,SAAAwiB,GACzB,IAAIxiB,EAAKyE,WAAWge,KAAKD,GAAzB,CAGA,IAAMa,EAAYrjB,EAAKumB,iBAAiB9D,KAAKD,GAC7C,GAAIa,IAAcrjB,EAAKwB,MAAMmlB,gBAAgBlE,KAAKD,GAAlD,CAGA,IAAMK,EAAY7iB,EAAKwB,MAAMqhB,UAAUJ,KAAKD,GAC5C,GAAKK,EAAL,CAGA,IAsBkCvgB,EAtB5BskB,EAAgB/D,aAAqBgD,EAAuBhD,EAAUiD,iBAAcrlB,EACpFomB,EAAc,GACdC,EAAkB,GAiBlBC,EAAiB1D,EAAU2D,eAAenE,EAAUje,YACtDqiB,OAAwBxmB,EACxBymB,EAAU,EAAE3kB,GAAAR,EAAAA,EAAAA,GACG8gB,EAAUnO,OAAK,IAAlC,IAAAnS,EAAAP,MAAAM,EAAAC,EAAAN,KAAAtD,MAAoC,KAAzBsJ,EAAI3F,EAAAjE,MACP+kB,EAAQnb,EAAKmb,WACa3iB,IAA1BwmB,GACAJ,EAAY3jB,KAAK,CACboC,OAAQ2C,EAAK3C,OACboK,KAAM0T,EAAM,GACZwC,QAAS3d,EAAK2d,UAElBxC,EAAQA,EAAM+D,MAAM,IAGpBC,EAAqB,CAACL,EAAe1B,UAAU6B,EAASjf,EAAK3C,OAAS,SAAK7E,GAE3E2iB,EAAM9e,OAAS,IACf8iB,EAAqBhE,EAAO+C,QACE1lB,IAA1BwmB,GAAuChf,EAAK3C,QAAUyhB,EAAeziB,SACrE2iB,EAAwBhf,EAAK3C,SAGrC4hB,EAAUjf,EAAK3C,OAAS,CAC5B,CAAC,OAAAnC,GAAAZ,EAAA/D,EAAA2E,EAAA,SAAAZ,EAAAa,GAAA,MAC6B3C,IAA1BwmB,GACAG,EAAqB,CAACL,EAAe1B,UAAU6B,SAAWzmB,GAE9D,IAAM4mB,OAAwC5mB,IAA1BwmB,EAAsC,IAAI9C,EAAY8C,EAAuBF,EAAeziB,OAAS,QAAK7D,EAC9H,MAAO,CACHmmB,cAAAA,EACAC,YAAAA,EACAC,gBAAAA,EACAO,YAAAA,EACAziB,WAAYie,EAAUje,WACtBohB,4BAA6BhmB,EAAKwB,MAAM8lB,qBAAqB7E,KAAKD,GAClEmE,gBAAiBtD,EAvDrB,CAJA,CAJA,CAYA,SAAS+D,EAAqBhE,EAAOxQ,GACjC,GAAIkU,EAAgBxiB,OAAS,EAAG,CAC5B,IAAMijB,EAAWT,EAAgBA,EAAgBxiB,OAAS,GACtDsO,GACA2U,EAASC,YAAYtkB,KAAK,IAAIukB,EAAAA,GAAeF,EAAShV,QAAQjO,OAAS,EAAGijB,EAAShV,QAAQjO,OAAS,EAAI8e,EAAM,GAAG9e,OAAQsO,EAAW,IAExI2U,EAAShV,SAAW6Q,EAAM,GAC1BA,EAAQA,EAAM+D,MAAM,EACxB,CAAC,IACuBvlB,EADvBE,GAAAC,EAAAA,EAAAA,GACkBqhB,GAAK,IAAxB,IAAAthB,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAtD,MAA0B,KAAfgG,EAAI/C,EAAAvD,MACXyoB,EAAgB5jB,KAAK,CACjBqP,QAAS5N,EACT6iB,YAAa5U,EAAY,CAAC,IAAI6U,EAAAA,GAAe,EAAG9iB,EAAKL,OAAS,EAAGsO,EAAW,IAAyC,IAE7H,CAAC,OAAAzP,GAAArB,EAAAtD,EAAA2E,EAAA,SAAArB,EAAAsB,GAAA,CACL,CAsCJ,IACApD,EAAKwnB,aAAcd,EAAAA,EAAAA,KAAOJ,EAAAA,EAAAA,GAAAtmB,IAAO,SAAAwiB,GAC7B,IAAMiE,EAAUzmB,EAAKymB,QAAQhE,KAAKD,GAClC,IAAKiE,EACD,MAAO,GAEX,IAAMe,EAAc,GAChBf,EAAQG,eACRY,EAAYtkB,KAAK,CACblE,MAAOynB,EAAQG,cAAcc,QAAQjB,EAAQ7hB,YAC7CiF,QAAS,CAAE8I,gBAAiB,oCAAqCK,YAAa,0BAGlFyT,EAAQY,aACRG,EAAYtkB,KAAK,CACblE,MAAOynB,EAAQY,YAAYK,QAAQjB,EAAQ7hB,YAC3CiF,QAAS,CAAE8I,gBAAiB,oBAAqBK,YAAa,uBAErE,IACkC/B,EADlCC,GAAAnP,EAAAA,EAAAA,GACe0kB,EAAQI,aAAW,IAAnC,IAAA3V,EAAAlP,MAAAiP,EAAAC,EAAAjP,KAAAtD,MAAqC,KAA1B6mB,EAACvU,EAAA5S,MACRmpB,EAAYtkB,KAAK,CACblE,MAAO+D,EAAAA,EAAMC,cAAc,IAAIQ,EAAAA,EAASijB,EAAQ7hB,WAAY4gB,EAAElgB,SAC9DuE,QAAS,CACLmJ,YAAamT,EACbwB,MAAO,CAAEpV,QAASiT,EAAE9V,KAAMiD,gBAAiB6S,EAAEI,QAAU,gCAAkC,wBAAyBpT,YAAaoB,EAAAA,GAAwBgU,MACvJ3U,iBAAiB,IAG7B,CAAC,OAAA9P,GAAA+N,EAAA1S,EAAA2E,EAAA,SAAA+N,EAAA9N,GAAA,CACD,OAAOokB,CACX,IACAxnB,EAAK6nB,sBAAwB7nB,EAAKsiB,UAAU,IAAIwF,EAAsB9nB,EAAKqX,OAAQrX,EAAKua,gBAAgBwN,iBAAiBrB,EAAAA,EAAAA,KAAQ,SAAAlE,GAE7H,IAAMiE,EAAUzmB,EAAKymB,QAAQhE,KAAKD,GAClC,OAAOiE,EAAU,CACb7hB,WAAY6hB,EAAQ7hB,WACpBkiB,gBAAiBL,EAAQK,gBACzBQ,qBAAsBb,EAAQT,4BAC9BW,gBAAiBF,EAAQE,sBACzBlmB,CACR,MACAT,EAAKsiB,WAAUhY,EAAAA,EAAAA,KAAa,WAAQtK,EAAKyE,WAAW4C,KAAI,OAAM5G,EAAY,KAC1ET,EAAKsiB,UF3FN,SAAoCjL,EAAQmQ,GAC/C,IAAMrhB,EAAI,IAAIzE,EAAAA,GACRsmB,EAAwB3Q,EAAO4Q,8BAUrC,OATA9hB,EAAE9D,KAAI6lB,EAAAA,EAAAA,IAAY,CAAEC,UAAW,2CAAA7gB,OAAgCkgB,EAAYW,UAAS,IAAM,SAAA3F,GACtF,IAAMrc,EAAIqhB,EAAY/E,KAAKD,GAC3BwF,EAAsB3gB,IAAIlB,EAC9B,KACAA,EAAE9D,IAAI,CACFqB,QAAS,WACLskB,EAAsBpe,OAC1B,IAEGzD,CACX,CE8EuBiiB,CAA2BpoB,EAAKqX,OAAQrX,EAAKwnB,cAAcxnB,CAC9E,CAGC,OAHAjB,EAAAA,EAAAA,GAAAqnB,EAAA,EAAA3mB,IAAA,eAAApB,MACD,SAAagqB,GACT,OAAOlpB,KAAK0oB,sBAAsBQ,aAAeA,CACrD,KAACjC,CAAA,CA1Hc,CAAiCvC,EAAAA,IA4HpDuC,EAAkBrgB,EAAW,CACzBc,EAAQ,EAAG4W,EAAAA,IACZ2I,GACwB,IACrB0B,EAAqB,SAAAQ,IAAAzO,EAAAA,EAAAA,GAAAiO,EAAAQ,GAAA,IAAAhO,GAAAP,EAAAA,EAAAA,GAAA+N,GAEvB,SAAAA,EAAYzQ,EAAQ0Q,EAAiB3E,GAAO,IAAAtf,EAuBpC,OAvBoC5E,EAAAA,EAAAA,GAAA,KAAA4oB,IACxChkB,EAAAwW,EAAAjB,KAAA,OACKhC,OAASA,EACdvT,EAAKikB,gBAAkBA,EACvBjkB,EAAKsf,MAAQA,EACbtf,EAAKykB,iBAAc9nB,EACnBqD,EAAK0kB,sBAAuBC,EAAAA,EAAAA,IAA0B,sBAAuBC,EAAAA,GAAMvL,OAAOrZ,EAAKuT,OAAO5N,0BAA0B,SAAAjL,GAAC,OAAIA,EAAEkL,WAAW,KAC3IlL,EAAEkL,WAAW,MACblL,EAAEkL,WAAW,KACblL,EAAEkL,WAAW,KACblL,EAAEkL,WAAW,KACblL,EAAEkL,WAAW,KACblL,EAAEkL,WAAW,GAAiC,KACrD5F,EAAKwe,WAAUC,EAAAA,EAAAA,KAAQ,SAAAC,GAEnB,IAAMY,EAAQtf,EAAKsf,MAAMX,KAAKD,GAC9B1e,EAAK0kB,qBAAqB/F,KAAKD,GAC3BY,EACAtf,EAAK6kB,YAAYvF,EAAMxe,WAAYwe,EAAM0D,gBAAiB1D,EAAMkE,sBAGhExjB,EAAK8F,OAEb,KAAI9F,CACR,CAoCC,OApCA/E,EAAAA,EAAAA,GAAA+oB,EAAA,EAAAroB,IAAA,aAAA2H,IAzBD,WAAmB,OAAOjI,KAAKopB,WAAa,GAAC,CAAA9oB,IAAA,UAAApB,MA0B7C,YACIuqB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAf,EAAAgB,WAAA,gBAAAzP,KAAA,MACAla,KAAKyK,OACT,GAAC,CAAAnK,IAAA,QAAApB,MACD,WAAQ,IAAA6O,EAAA,KACJ/N,KAAKkY,OAAO0R,iBAAgB,SAACC,GACrB9b,EAAKqb,cACLS,EAAeC,WAAW/b,EAAKqb,aAC/Brb,EAAKqb,iBAAc9nB,EAE3B,GACJ,GAAC,CAAAhB,IAAA,cAAApB,MACD,SAAYuG,EAAYkiB,EAAiBQ,GAAsB,IAAAzY,EAAA,KACrDwU,EAAYlkB,KAAKkY,OAAOrN,WAC9B,GAAKqZ,EAAL,CAGA,IAAQI,EAAYJ,EAAUK,aAAtBD,QACRtkB,KAAKkY,OAAO0R,iBAAgB,SAACC,GACrBna,EAAK0Z,cACLS,EAAeC,WAAWpa,EAAK0Z,aAC/B1Z,EAAK0Z,iBAAc9nB,GAEvB,IAAMyoB,EAAgBhd,KAAKC,IAAI2a,EAAgBxiB,OAAQgjB,GACvD,GAAI4B,EAAgB,EAAG,CACnB,IAAMC,EAAUC,SAASC,cAAc,QAYvD,SAAqBF,EAAS1F,EAASL,EAAO3Q,EAAMsV,GAChD,IAAMuB,EAAgC7W,EAAKrL,IAAI,IACzCmiB,EAAyB9W,EAAKrL,IAAI,KAElCoiB,EAAmB,OACnBC,EAA0BhX,EAAKrL,IAAI,IACnCsiB,EAAgBjX,EAAKrL,IAAI,IACzBuiB,EAAWlX,EAAKrL,IAAI,IACpBwiB,EAAanX,EAAKrL,IAAI,IACtByiB,EAAK,IAAIC,EAAAA,GAAc,KAC7BD,EAAGE,aAAa,sCAChB,IAAK,IAAIpjB,EAAI,EAAGqjB,EAAM5G,EAAM9e,OAAQqC,EAAIqjB,EAAKrjB,IAAK,CAC9C,IAAMsjB,EAAW7G,EAAMzc,GACjBhC,EAAOslB,EAAS1X,QACtBsX,EAAGE,aAAa,yBAChBF,EAAGE,aAAa,iBAChBF,EAAGE,aAAaG,OAAOvjB,EAAIijB,IAC3BC,EAAGE,aAAa,yBAChB,IAAMI,EAAeC,EAAAA,GAAqBzlB,GACpC0lB,EAAcD,EAAAA,GAAoBzlB,GAClC2lB,EAAaC,EAAAA,EAAWC,YAAY7lB,EAAMojB,IAChD0C,EAAAA,EAAAA,IAAe,IAAIC,EAAAA,GAAiBf,EAASgB,cAAgBrB,EAAgCK,EAASiB,+BAAgCjmB,GAAM,EAAOwlB,EAAcE,EAAa,EAAGC,EAAYL,EAASzC,YAAa/D,EAAS,EAAGkG,EAASkB,WAAYlB,EAASmB,YAAanB,EAASoB,cAAexB,EAAwBC,EAAkBC,EAAyBC,IAAkBsB,EAAAA,GAAoBC,IAAK,MAAOpB,GACvZA,EAAGE,aAAa,SACpB,CACAF,EAAGE,aAAa,WAChBmB,EAAAA,EAAAA,GAAc/B,EAASQ,GACvB,IAAMwB,EAAOtB,EAAGuB,QACVC,EAAcC,EAAWA,EAASC,WAAWJ,GAAQA,EAC3DhC,EAAQqC,UAAYH,CACxB,CAxCgBI,CAAYtC,EAAS1F,EAASqD,EAAiBjY,EAAKwI,OAAOqM,aAAc7U,EAAKkZ,iBAC9ElZ,EAAK0Z,YAAcS,EAAe0C,QAAQ,CACtCC,gBAAiB/mB,EACjBskB,cAAeA,EACfC,QAAAA,EACAyC,oBAAqB,GAE7B,CACJ,GAlBA,CAmBJ,KAAC9D,CAAA,CA9DsB,CAASjE,EAAAA,IA8FpC,IAAMyH,GAAWO,EAAAA,EAAAA,GAAyB,kBAAmB,CAAEN,WAAY,SAAAltB,GAAK,OAAIA,CAAK,I,qKC1PrFT,GAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EAUO,SAASutB,GAAyBnoB,EAAUlB,EAAUjB,EAAOuqB,GAAuE,IAA9DnsB,EAAKyG,UAAA/B,OAAA,QAAA7D,IAAA4F,UAAA,GAAAA,UAAA,GAAG6I,GAAAA,EAAkBC,KAAM6c,EAA4B3lB,UAAA/B,OAAA,EAAA+B,UAAA,QAAA5F,EACrI,OAAO7C,GAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAqE,IAAA,IAAA8nB,EAAAC,EAAAC,EAAArqB,EAAAF,EAAArC,EAU1B6sB,EAAqBC,EAAAC,EAerBC,EAoBAC,EAAeC,EAAAC,EAAAC,EAAA/W,EAAAF,EAAAhX,EAAAkuB,EAAAxqB,EAAA0T,EAAAD,EAAA/N,EAAA+kB,EA7CW/oB,EAAA,KA6CX,OAAAjE,EAAAA,EAAAA,KAAAI,MAAC,SAADmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAA7F,MAAA,OAAfiuB,EAAe,SAACjtB,GAAU,IAAAS,EAAA,KACzB0iB,EAAQ2J,EAAOjlB,IAAI7H,GACzB,GAAImjB,EACA,OAAOA,EAEX,IAAMoK,EAASP,EAA4BhtB,EAAU,IACjDutB,IACA1rB,EAAAA,EAAAA,IAA0B,IAAIyP,MAAM,kEAADvJ,OAAmEwlB,EAAO5oB,KAAI,SAAAlC,GAAC,OAAIA,EAAEwF,SAAWxF,EAAEwF,WAAc,GAAKxF,CAAE,IAAEyjB,KAAK,WAErK,IAAMsH,EAAkB,IAAIC,GAAAA,GAsB5B,OArBAX,EAAOhlB,IAAI9H,EAAUwtB,EAAgBvH,GAC9B5nB,GAAUoC,OAAM,OAAQ,GAAMH,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAAktB,EAAAzY,EAAAD,EAAAiR,EAAA9mB,EAAAkuB,EAAA,OAAA/sB,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA3B,MAAA,UAC9BuuB,EAAQ,CAAF5sB,EAAA3B,KAAA,SACD0uB,EAAYb,EAAsB7sB,GAASiV,GAAAzS,EAAAA,EAAAA,GACjCkrB,GAAS/sB,EAAAC,KAAA,EAAAqU,EAAAxS,IAAA,WAAAuS,EAAAC,EAAAvS,KAAAtD,KAAE,CAAFuB,EAAA3B,KAAA,SACN,OADRinB,EAACjR,EAAAlW,MAAA6B,EAAA3B,KAAA,EACaiuB,EAAgBhH,GAAE,OAA3B,MAAN9mB,EAAMwB,EAAAc,OACEtC,EAAOmD,MAAMyC,OAAS,GAAC,CAAApE,EAAA3B,KAAA,gBAAA2B,EAAAG,OAAA,cAE1BI,GAAS,QAAAP,EAAA3B,KAAA,gBAAA2B,EAAA3B,KAAA,iBAAA2B,EAAAC,KAAA,GAAAD,EAAAiB,GAAAjB,EAAA,SAAAsU,EAAAhW,EAAA0B,EAAAiB,IAAA,eAAAjB,EAAAC,KAAA,GAAAqU,EAAApR,IAAAlD,EAAA4L,OAAA,YAKJ,OALI5L,EAAAC,KAAA,GAAAD,EAAA3B,KAAA,GAKEgB,EAASusB,yBAAyBtqB,EAAOiB,EAAUspB,EAASnsB,GAAM,QAA3E,OAAXgtB,EAAW1sB,EAAAc,KAAAd,EAAAG,OAAA,SACVusB,GAAW,QAGW,OAHX1sB,EAAAC,KAAA,GAAAD,EAAA2K,GAAA3K,EAAA,WAGlBkB,EAAAA,EAAAA,IAAyBlB,EAAA2K,IAAI3K,EAAAG,OAAA,cACtBI,GAAS,yBAAAP,EAAAQ,OAAA,GAAAX,EAAA,iCAElBnB,MAAK,SAAAwH,GAAC,OAAI2mB,EAAgBG,SAAS9mB,EAAE,IAAE,SAAA5H,GAAC,OAAIuuB,EAAgBlQ,MAAMre,EAAE,IACnEuuB,EAAgBvH,CAC3B,EApDS+G,EAA2B,SAAChtB,EAAU4tB,GAE3C,GADAA,EAAQ,GAAH7lB,QAAAmJ,EAAAA,EAAAA,GAAO0c,GAAK,CAAE5tB,IACf+sB,EAAKriB,IAAI1K,GACT,OAAO4tB,EAEXb,EAAKjqB,IAAI9C,GACT,IACI,IACyBiS,EADnByb,EAAYb,EAAsB7sB,GAAUoS,GAAA5P,EAAAA,EAAAA,GAClCkrB,GAAS,IAAzB,IAAAtb,EAAA3P,MAAAwP,EAAAG,EAAA1P,KAAAtD,MAA2B,KAAhB6mB,EAAChU,EAAAnT,MACF+H,EAAImmB,EAA4B/G,EAAG2H,GACzC,GAAI/mB,EACA,OAAOA,CAEf,CAAC,OAAAjD,GAAAwO,EAAAnT,EAAA2E,EAAA,SAAAwO,EAAAvO,GAAA,CACL,CAAC,QAEGkpB,EAAKrW,OAAO1W,EAChB,CAEJ,EAlCS6sB,EAAqB,SAAC7sB,GAC3B,IAAKA,EAAS6tB,iBACV,MAAO,GAEX,IACqD9qB,EAD/C5D,EAAS,GAAG6D,GAAAR,EAAAA,EAAAA,GACIxC,EAAS6tB,kBAAoB,IAAE,IAArD,IAAA7qB,EAAAP,MAAAM,EAAAC,EAAAN,KAAAtD,MAAuD,KAE1BsS,EAFlBoc,EAAO/qB,EAAAjE,MACR6tB,EAAYC,EAAS/kB,IAAIimB,GAASnc,GAAAnP,EAAAA,EAAAA,GACxBmqB,GAAS,IAAzB,IAAAhb,EAAAlP,MAAAiP,EAAAC,EAAAjP,KAAAtD,MAA2B,KAAhB6mB,EAACvU,EAAA5S,MACRK,EAAOwE,KAAKsiB,EAChB,CAAC,OAAAriB,GAAA+N,EAAA1S,EAAA2E,EAAA,SAAA+N,EAAA9N,GAAA,CACL,CAAC,OAAAD,GAAAZ,EAAA/D,EAAA2E,EAAA,SAAAZ,EAAAa,GAAA,CACD,OAAO1E,CACX,EApBMutB,EAAsBqB,GAAgB7qB,EAAUjB,GAChD0qB,EAAYvoB,EAASY,IAAI/C,GACzB2qB,EAAW,IAAIoB,GAAAA,GAAQzrB,GAAAC,EAAAA,EAAAA,GACNmqB,GAAS,IAAhC,IAAApqB,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAtD,OAAWY,EAAQqC,EAAAvD,OACFgvB,SACTlB,EAAS9pB,IAAI9C,EAAS8tB,QAAS9tB,EAEtC,OAAA4D,GAAArB,EAAAtD,EAAA2E,EAAA,SAAArB,EAAAsB,GAAA,CAqEuB,OAvDlBipB,EAAS,IAAIxjB,IACbyjB,EAAO,IAAI3qB,IAAKyC,EAAA7F,KAAA,GAsDQN,QAAQsG,IAAI2nB,EAAUhoB,KAAI,SAAC3E,GAAQ,OAAK3B,GAAUkG,OAAM,OAAQ,GAAMjE,EAAAA,EAAAA,KAAAC,MAAE,SAAAe,IAAA,OAAAhB,EAAAA,EAAAA,KAAAI,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAxC,MAAA,OAAgD,OAAhDwC,EAAAI,GAAyB5B,EAAQwB,EAAAxC,KAAA,EAAqBiuB,EAAgBjtB,GAAS,cAAAwB,EAAA8J,GAAA9J,EAAAC,KAAAD,EAAAV,OAAA,UAAtDd,SAAQwB,EAAAI,GAAEyrB,YAAW7rB,EAAA8J,KAAA,wBAAA9J,EAAAL,OAAA,GAAAG,EAAA,IAAwC,KAAE,QAAxL4rB,EAAeroB,EAAApD,KACf0rB,EAAc,IAAI7jB,IAClB8jB,EAAQ,GAAE/W,GAAA7T,EAAAA,EAAAA,GACK0qB,GAAeroB,EAAAjE,KAAA,GAAAyV,EAAA5T,IAAA,YAAA0T,EAAAE,EAAA3T,KAAAtD,KAAE,CAAFyF,EAAA7F,KAAA,SACM,GAD/BG,EAAMgX,EAAArX,MACPuuB,EAAcluB,EAAOkuB,YACT,CAAFxoB,EAAA7F,KAAA,gBAAA6F,EAAA/D,OAAA,uBAGV+B,EAAO,IAAIorB,GAAqBZ,EAAaluB,EAAOa,UAC1DotB,EAAMzpB,KAAKd,GAAM0T,GAAA/T,EAAAA,EAAAA,GACE6qB,EAAY/qB,OAAK,IAApC,IAAAiU,EAAA9T,MAAA6T,EAAAC,EAAA7T,KAAAtD,MAAWmJ,EAAI+N,EAAAxX,MACLwuB,EAAuBY,GAAqB9e,KAAK7G,EAAM1F,EAAM6pB,EAAqBzqB,EAAOwqB,GAC/FU,EAAYrlB,IAAIwlB,EAAqBa,OAAQb,EAChD,OAAA1pB,GAAA2S,EAAAtX,EAAA2E,EAAA,SAAA2S,EAAA1S,GAAA,SAAAgB,EAAA7F,KAAA,iBAAA6F,EAAA7F,KAAA,iBAAA6F,EAAAjE,KAAA,GAAAiE,EAAAjD,GAAAiD,EAAA,UAAAwR,EAAApX,EAAA4F,EAAAjD,IAAA,eAAAiD,EAAAjE,KAAA,GAAAyV,EAAAxS,IAAAgB,EAAA0H,OAAA,mBAAA1H,EAAA/D,OAAA,SAEE,IAAIstB,GAA+Bjf,MAAMC,KAAK+d,EAAYle,UAAW,IAAI7M,IAAI+qB,EAAYxV,QAASyV,IAAM,yBAAAvoB,EAAA1D,OAAA,GAAAyD,EAAA,yBAEvH,CACO,IAAMwpB,GAA8B,WACvC,SAAAA,EAIAf,EAAagB,EAAOnB,IAAiBvtB,EAAAA,EAAAA,GAAA,KAAAyuB,GACjCxuB,KAAKytB,YAAcA,EACnBztB,KAAKyuB,MAAQA,EACbzuB,KAAKstB,gBAAkBA,CAC3B,CAQC,OARA1tB,EAAAA,EAAAA,GAAA4uB,EAAA,EAAAluB,IAAA,MAAApB,MACD,SAAIyJ,GACA,OAAO3I,KAAKyuB,MAAM3jB,IAAInC,EAAK4lB,OAC/B,GAAC,CAAAjuB,IAAA,UAAApB,MACD,WAAU,IACmC8Y,EADnCC,GAAArV,EAAAA,EAAAA,GACe5C,KAAKstB,iBAAe,IAAzC,IAAArV,EAAApV,MAAAmV,EAAAC,EAAAnV,KAAAtD,MAA2C,CAA1BwY,EAAA9Y,MACNwvB,WACX,CAAC,OAAA1qB,GAAAiU,EAAA5Y,EAAA2E,EAAA,SAAAiU,EAAAhU,GAAA,CACL,KAACuqB,CAAA,CAjBsC,GAuB9BH,GAAoB,WAC7B,SAAAA,EAAY1K,EAAmBvjB,IAAUL,EAAAA,EAAAA,GAAA,KAAAsuB,GACrCruB,KAAK2jB,kBAAoBA,EACzB3jB,KAAKI,SAAWA,EAChBJ,KAAK2uB,SAAW,CACpB,CASC,OATA/uB,EAAAA,EAAAA,GAAAyuB,EAAA,EAAA/tB,IAAA,SAAApB,MACD,WACIc,KAAK2uB,UACT,GAAC,CAAAruB,IAAA,YAAApB,MACD,WACIc,KAAK2uB,WACiB,IAAlB3uB,KAAK2uB,UACL3uB,KAAKI,SAASwuB,sBAAsB5uB,KAAK2jB,kBAEjD,KAAC0K,CAAA,CAd4B,GAgBpBC,GAAoB,WA6C7B,SAAAA,EAAYO,EAAYpgB,EAAS5O,EAAOivB,EAAYC,EAAaC,EAKjEC,EAKAtd,IAAQ5R,EAAAA,EAAAA,GAAA,KAAAuuB,GACJtuB,KAAK6uB,WAAaA,EAClB7uB,KAAKyO,QAAUA,EACfzO,KAAKH,MAAQA,EACbG,KAAK8uB,WAAaA,EAClB9uB,KAAK+uB,YAAcA,EACnB/uB,KAAKgvB,oBAAsBA,EAC3BhvB,KAAKivB,uBAAyBA,EAC9BjvB,KAAK2R,OAASA,EAEdmd,GADAD,EAAaA,EAAWxe,QAAQ,WAAY,OACpBA,QAAQ,WAAY,KAChD,CAtBC,OAsBAzQ,EAAAA,EAAAA,GAAA0uB,EAAA,EAAAhuB,IAAA,YAAApB,MACD,SAAUgwB,GACN,OAAO,IAAIZ,EAAqBtuB,KAAK6uB,WAAY7uB,KAAKyO,QAASygB,EAAclvB,KAAK8uB,WAAY9uB,KAAK+uB,YAAa/uB,KAAKgvB,oBAAqBhvB,KAAKivB,uBAAwBjvB,KAAK2R,OAChL,GAAC,CAAArR,IAAA,OAAApB,MACD,WACI,OAAOme,KAAKC,UAAU,CAAEwR,WAAY9uB,KAAK8uB,WAAYjvB,MAAOG,KAAKH,MAAMwI,YAC3E,IAAC,EAAA/H,IAAA,OAAApB,MAvED,SAAYukB,EAAkB9R,EAAQmb,EAAqB5I,EAAW2I,GAClE,IAAIiC,EACAC,EACAlvB,EAAQ4jB,EAAiB5jB,MAAQ+D,EAAAA,EAAM0M,KAAKmT,EAAiB5jB,OAASitB,EAC1E,GAA2C,kBAAhCrJ,EAAiBqL,WAAyB,CAEjD,GADAA,EAAarL,EAAiBqL,WAC1BjC,GAAgCpJ,EAAiB0L,qBAAsB,CAGvE,IAAMC,GAFNN,EAAaO,GAAcP,EAAYjvB,EAAM6D,mBAAoBwgB,EAAW2I,IAEpD1nB,OAASse,EAAiBqL,WAAW3pB,OAChD,IAATiqB,IACAvvB,EAAQ,IAAI+D,EAAAA,EAAM/D,EAAM+S,gBAAiB/S,EAAM+F,YAAa/F,EAAMgT,cAAehT,EAAMgG,UAAYupB,GAE3G,CACAL,OAAcztB,CAClB,MACK,GAAI,YAAamiB,EAAiBqL,WAAY,CAC/C,IAAMQ,EAA6B7L,EAAiBqL,WAAWS,QAAQpqB,OACvE,GAAI0nB,GAAgCpJ,EAAiB0L,qBAAsB,CACvE1L,EAAiBqL,WAAWS,QAAUF,GAAc5L,EAAiBqL,WAAWS,QAAS1vB,EAAM6D,mBAAoBwgB,EAAW2I,GAE9H,IAAMuC,EAAO3L,EAAiBqL,WAAWS,QAAQpqB,OAASmqB,EAC7C,IAATF,IACAvvB,EAAQ,IAAI+D,EAAAA,EAAM/D,EAAM+S,gBAAiB/S,EAAM+F,YAAa/F,EAAMgT,cAAehT,EAAMgG,UAAYupB,GAE3G,CACA,IAAMG,GAAU,IAAIC,GAAAA,IAAgBC,MAAMhM,EAAiBqL,WAAWS,SACtC,IAA5BA,EAAQG,SAASvqB,QAAgBoqB,EAAQG,SAAS,aAAcC,GAAAA,IAChEb,EAAaS,EAAQG,SAAS,GAAGxwB,MACjC6vB,OAAcztB,IAGdwtB,EAAaS,EAAQlnB,WACrB0mB,EAAc,CACVQ,QAAS9L,EAAiBqL,WAAWS,QACrC1vB,MAAOA,GAGnB,MAEI+vB,EAAAA,GAAAA,IAAYnM,EAAiBqL,YAEjC,OAAO,IAAIR,EAAqBQ,EAAYrL,EAAiBhV,QAAS5O,EAAOivB,EAAYC,EAAatL,EAAiBuL,qBHhKpHjK,EGgKoKtB,EAAkB9R,EAC7L,KAAC2c,CAAA,CA5C4B,GA0EjC,SAASH,GAAgB7qB,EAAUjB,GAC/B,IAAMqD,EAAOrD,EAAMsD,kBAAkBrC,GAC/BusB,EAAYxtB,EAAMsM,iBAAiBrL,EAASmC,YAGlD,OAAOC,EACD,IAAI9B,EAAAA,EAAMN,EAASmC,WAAYC,EAAKE,YAAatC,EAASmC,WAAYoqB,GACtEjsB,EAAAA,EAAMC,cAAcP,EAAUA,EAAS8O,UAAK9Q,EAAWuuB,GACjE,CACA,SAASR,GAAc9e,EAAMjN,EAAUjB,EAAOwqB,GAC1C,IACMiD,EADYztB,EAAMwlB,eAAevkB,EAASmC,YAAYygB,UAAU,EAAG5iB,EAAS6C,OAAS,GAC/DoK,EACtBwf,EAAY1tB,EAAMyD,aAAakqB,qBAAqB1sB,EAAUwsB,EAAQ3qB,QAAU7B,EAAS6C,OAAS,GAAIoK,GACtG0f,EAA6B,OAAdF,QAAoC,IAAdA,OAAuB,EAASA,EAAUG,gBAAgB5sB,EAAS6C,OAAS,EAAG2pB,EAAQ3qB,OAAQ,GAC1I,OAAK8qB,GAGWE,EAAAA,GAAAA,GAAkBF,EAAcpD,GAFrCtc,CAIf,C,gBClPa6f,GAAc,WACvB,SAAAA,EAAYvwB,EAAO0Q,IAAMxQ,EAAAA,EAAAA,GAAA,KAAAqwB,GACrBpwB,KAAKH,MAAQA,EACbG,KAAKuQ,KAAOA,CAChB,CA+FC,OA/FA3Q,EAAAA,EAAAA,GAAAwwB,EAAA,EAAA9vB,IAAA,qBAAApB,MACD,SAAmBmD,EAAOguB,GACtB,IAAMC,EAAaD,EAAkBrwB,KAAKH,MAAM0wB,gBAAgBF,GAAmBrwB,KAAKH,MACxF,IAAKywB,EACD,OAAOtwB,KAEX,IAAMwwB,EAAiBnuB,EAAMouB,gBAAgBH,EAAY,GACnDI,GAAkBC,EAAAA,EAAAA,IAAmBH,EAAgBxwB,KAAKuQ,MAC1DjK,EAAQ8e,EAAaplB,KAAKH,MAAM6D,mBAAoB6hB,EAAaiL,EAAetK,UAAU,EAAGwK,KAC7FngB,EAAOvQ,KAAKuQ,KAAK2V,UAAUwK,GAEjC,OAAO,IAAIN,EADGxsB,EAAAA,EAAMC,cAAcyC,EAAOtG,KAAKH,MAAMiE,kBACnByM,EACrC,GAAC,CAAAjQ,IAAA,WAAApB,MACD,SAAS0xB,GAEL,OAAO5wB,KAAKuQ,KAAKsgB,WAAWD,EAAKrgB,QAkFnBugB,EAlFyC9wB,KAAKH,OAkF9BkxB,EAlFqCH,EAAK/wB,OAmFvD6D,mBAAmBgiB,OAAOoL,EAAeptB,qBACvDqtB,EAAcjtB,iBAAiBktB,gBAAgBF,EAAehtB,mBAFzE,IAAsBgtB,EAAgBC,CAjFlC,GACA,CAAAzwB,IAAA,mBAAApB,MAIA,SAAiBmD,EAAO4uB,EAAMC,GAAyC,IAAzBC,EAAmBjqB,UAAA/B,OAAA,QAAA7D,IAAA4F,UAAA,GAAAA,UAAA,GAAG,EAC5DiJ,EAAOnQ,KAAKoxB,mBAAmB/uB,GACnC,GAAI8N,EAAKtQ,MAAMgT,gBAAkB1C,EAAKtQ,MAAM+S,gBAA5C,CAIA,IAAMye,EAAahvB,EAAMwlB,eAAe1X,EAAKtQ,MAAM+S,iBAC7C0e,GAA0BC,EAAAA,EAAAA,IAAqBF,GAAYlsB,OAEjE,GADqCgL,EAAKtQ,MAAM+F,YAAc,GAAK0rB,EACjC,CAQ9B,IAAME,GAAmCD,EAAAA,EAAAA,IAAqBphB,EAAKI,MAAMpL,OACnEssB,EAAsBJ,EAAWnL,UAAU/V,EAAKtQ,MAAM+F,YAAc,EAAG0rB,GAC7EI,EAAqC,CAACvhB,EAAKtQ,MAAM6D,mBAAoByM,EAAKtQ,MAAMiE,kBAAzE6tB,EAAaD,EAAA,GAAEE,EAAWF,EAAA,GAC3BG,EAAmBF,EAAcxrB,OAASsrB,EAAoBtsB,QAAUysB,EAAYzrB,OACpFwrB,EAAcpxB,MAAM,EAAGkxB,EAAoBtsB,QAC3CysB,EACAE,EAAqCluB,EAAAA,EAAMC,cAAcguB,EAAkBD,GAC3EG,EAAqC5hB,EAAKI,KAAKsgB,WAAWY,GAE1DthB,EAAKI,KAAK2V,UAAUuL,EAAoBtsB,QAExCgL,EAAKI,KAAK2V,UAAUsL,GAC1BrhB,EAAO,IAAIigB,EAAe0B,EAAoCC,EAClE,CAEA,IAAMC,EAAoB3vB,EAAMouB,gBAAgBtgB,EAAKtQ,OAC/CoyB,EAgDd,SAAqBC,EAAeC,GAChC,IAAqB,OAAhBC,SAAwC,IAAhBA,QAAyB,EAASA,GAAYF,iBAAmBA,IAAkC,OAAhBE,SAAwC,IAAhBA,QAAyB,EAASA,GAAYD,YAAcA,EAChM,OAAuB,OAAhBC,SAAwC,IAAhBA,QAAyB,EAASA,GAAYH,QAG7E,IAAIA,EAAUI,GAAUH,EAAeC,GAAU,GACjD,GAAIF,EAAS,CACT,IAAMK,EAAeC,GAAkBN,GACvC,GAAIK,EAAe,EAAG,CAElB,IAAME,EAAaH,GAAUH,EAAeC,GAAU,GAClDK,GAAcD,GAAkBC,GAAcF,IAE9CL,EAAUO,EAElB,CACJ,CAMA,OALAJ,GAAc,CACVF,cAAAA,EACAC,SAAAA,EACAF,QAAAA,GAEGA,CAEf,CAxEwBQ,CAAYT,EAAmB7hB,EAAKI,MACpD,GAAK0hB,EAAL,CAIA,IAAMxsB,EAAa0K,EAAKtQ,MAAM+S,gBACxB2C,EAAQ,IAAIhG,MAClB,GAAa,WAAT0hB,EAAmB,CACnB,IAAMyB,EAAkBT,EAAQjU,QAAO,SAAA/W,GAAC,OAAyB,IAArBA,EAAE0rB,cAAoB,IAClE,GAAID,EAAgBvtB,OAAS,GAAgC,IAA3ButB,EAAgBvtB,QAAgButB,EAAgB,GAAGE,gBAAkBZ,EAAkB7sB,OAErH,MAER,CACA,IACuB1C,EADjBowB,EAA+B1iB,EAAKI,KAAKpL,OAASgsB,EAAoBxuB,GAAAC,EAAAA,EAAAA,GAC5DqvB,GAAO,IAAvB,IAAAtvB,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAtD,MAAyB,KAAdyH,EAACxE,EAAAvD,MACF4zB,EAAe3iB,EAAKtQ,MAAM+F,YAAcqB,EAAE2rB,cAAgB3rB,EAAE0rB,eAClE,GAAa,iBAAT1B,GAA2BC,GAAkBA,EAAezrB,aAAe0K,EAAKtQ,MAAM+S,iBAAmBkgB,EAAe5B,EAAe/qB,OAEvI,OAEJ,GAAIc,EAAE0rB,eAAiB,EACnB,OAEJ,GAAyB,IAArB1rB,EAAE8rB,eAAN,CAGA,IAAMC,EAAc/rB,EAAEgsB,cAAgBhsB,EAAE8rB,eAClCG,EAAoBnmB,KAAKC,IAAI/F,EAAEgsB,cAAelmB,KAAK9C,IAAI+oB,EAAaH,IACpEM,EAAiBhjB,EAAKI,KAAK2V,UAAUjf,EAAEgsB,cAAeC,GACtDE,EAAajjB,EAAKI,KAAK2V,UAAUgN,EAAmBnmB,KAAKC,IAAI/F,EAAEgsB,cAAeD,IACpF,GAAIG,EAAehuB,OAAS,EAAG,CAC3B,IAAM8e,GAAQoP,EAAAA,EAAAA,IAAWF,GACzB5d,EAAMxR,KAAK,IAAIyiB,EAAcsM,EAAc7O,GAAO,GACtD,CACA,GAAImP,EAAWjuB,OAAS,EAAG,CACvB,IAAM8e,GAAQoP,EAAAA,EAAAA,IAAWD,GACzB7d,EAAMxR,KAAK,IAAIyiB,EAAcsM,EAAc7O,GAAO,GACtD,CAZA,CAaJ,CAAC,OAAAjgB,GAAArB,EAAAtD,EAAA2E,EAAA,SAAArB,EAAAsB,GAAA,CACD,OAAO,IAAIuhB,EAAU/f,EAAY8P,EApCjC,CAhCA,CAqEJ,KAAC6a,CAAA,CAnGsB,GAyG3B,IAAIgC,QAAc9wB,EA0BlB,SAASixB,GAAkBN,GACvB,IACuB9uB,EADnBmwB,EAAM,EAAElwB,GAAAR,EAAAA,EAAAA,GACIqvB,GAAO,IAAvB,IAAA7uB,EAAAP,MAAAM,EAAAC,EAAAN,KAAAtD,MAAyB,CACrB8zB,GADQnwB,EAAAjE,MACCyzB,cACb,CAAC,OAAA3uB,GAAAZ,EAAA/D,EAAA2E,EAAA,SAAAZ,EAAAa,GAAA,CACD,OAAOqvB,CACX,CASA,SAASjB,GAAUH,EAAeC,EAAUoB,GACxC,KAAIrB,EAAc/sB,OAAS,KAAQgtB,EAAShtB,OAAS,KAArD,CAcA,IAAMquB,EAAczmB,KAAKC,IAAIymB,EAAevB,GAAgBuB,EAAetB,IAgCrEuB,EAAYC,EAAYzB,GACxB0B,EAAYD,EAAYxB,GAC9B,OAAO,IAAI0B,GAAAA,GAAQ,CAAEF,YAAa,kBAAMD,CAAS,GAAI,CAAEC,YAAa,kBAAMC,CAAS,IAAIE,aAAY,GAAO7B,OA7C1G,CACA,SAASwB,EAAeM,GAEpB,IADA,IAAIP,EAAc,EACThsB,EAAI,EAAGqjB,EAAMkJ,EAAI5uB,OAAQqC,EAAIqjB,EAAKrjB,IAAK,CAC5C,IAAMwsB,EAAWD,EAAIE,WAAWzsB,GAC5BwsB,EAAWR,IACXA,EAAcQ,EAEtB,CACA,OAAOR,CACX,CAEA,SAASU,EAAkB7iB,GACvB,GAAIA,EAAK,EACL,MAAM,IAAIK,MAAM,cAEpB,OAAO8hB,EAAcniB,EAAK,CAC9B,CACA,SAASsiB,EAAYhiB,GAIjB,IAHA,IAAIwiB,EAAQ,EACRC,EAAQ,EACNC,EAAa,IAAIC,WAAW3iB,EAAOxM,QAChCqC,EAAI,EAAGqjB,EAAMlZ,EAAOxM,OAAQqC,EAAIqjB,EAAKrjB,IAE1C,GAAI+rB,GAAsC,MAAd5hB,EAAOnK,GAAY,CAC3C,IAAM6J,EAAa,IAAR+iB,EAAcD,EACzBE,EAAW7sB,GAAK0sB,EAAkB,EAAI7iB,GACtC8iB,GACJ,MACK,GAAIZ,GAAsC,MAAd5hB,EAAOnK,GAAY,CAEhD,IAAM6J,EAAa,IAAR+iB,GADXD,EAAQpnB,KAAKC,IAAImnB,EAAQ,EAAG,IAE5BE,EAAW7sB,GAAK0sB,EAAkB,EAAI7iB,EAAK,GAC7B,IAAV8iB,GACAC,GAER,MAEIC,EAAW7sB,GAAKmK,EAAOsiB,WAAWzsB,GAG1C,OAAO6sB,CACX,CAIJ,CCzMA,IAAIztB,GAA0C,SAAUC,EAAYC,EAAQxG,EAAKyG,GAC7E,IAA2HC,EAAvHC,EAAIC,UAAU/B,OAAQgC,EAAIF,EAAI,EAAIH,EAAkB,OAATC,EAAgBA,EAAOK,OAAOC,yBAAyBP,EAAQxG,GAAOyG,EACrH,GAAuB,kBAAZO,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQxG,EAAKyG,QACpH,IAAK,IAAIS,EAAIX,EAAW1B,OAAS,EAAGqC,GAAK,EAAGA,KAASR,EAAIH,EAAWW,MAAIL,GAAKF,EAAI,EAAID,EAAEG,GAAKF,EAAI,EAAID,EAAEF,EAAQxG,EAAK6G,GAAKH,EAAEF,EAAQxG,KAAS6G,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOK,eAAeX,EAAQxG,EAAK6G,GAAIA,CAChE,EACIO,GAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUd,EAAQxG,GAAOsH,EAAUd,EAAQxG,EAAKqH,EAAa,CACxE,EACIlJ,GAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EAWIm1B,GAAuB,SAAA7R,IAAAhI,EAAAA,EAAAA,GAAA6Z,EAAA7R,GAAA,IAAA/H,GAAAC,EAAAA,EAAAA,GAAA2Z,GACvB,SAAAA,EAAYrQ,EAAWsQ,EAAWC,EAAgBjZ,EAAyBqR,GAA8B,IAAAhsB,EAYjG,OAZiGd,EAAAA,EAAAA,GAAA,KAAAw0B,IACrG1zB,EAAA8Z,EAAAT,KAAA,OACKgK,UAAYA,EACjBrjB,EAAK2zB,UAAYA,EACjB3zB,EAAK4zB,eAAiBA,EACtB5zB,EAAK2a,wBAA0BA,EAC/B3a,EAAKgsB,6BAA+BA,EACpChsB,EAAK6zB,iBAAmB7zB,EAAKsiB,UAAU,IAAIwR,EAAAA,IAC3C9zB,EAAK8iB,mBAAoBiR,EAAAA,EAAAA,IAA0B,yBAAqBtzB,GACxET,EAAKg0B,gCAAiCD,EAAAA,EAAAA,IAA0B,sCAAkCtzB,GAClGT,EAAKsiB,UAAUtiB,EAAKqjB,UAAU4Q,oBAAmB,WAC7Cj0B,EAAK6zB,iBAAiBjqB,OAC1B,KAAI5J,CACR,CA8DC,OA9DAjB,EAAAA,EAAAA,GAAA20B,EAAA,EAAAj0B,IAAA,QAAApB,MACD,SAAMoE,EAAUspB,EAASmI,GAAwB,IACzCvzB,EAAIC,EADqCkD,EAAA,KAEvCqwB,EAAU,IAAIC,GAAc3xB,EAAUspB,EAAS5sB,KAAKkkB,UAAU5b,gBAC9DxB,EAAS8lB,EAAQsI,uBAAyBl1B,KAAK60B,+BAAiC70B,KAAK2jB,kBAC3F,GAA2C,QAAtCniB,EAAKxB,KAAK00B,iBAAiBx1B,aAA0B,IAAPsC,OAAgB,EAASA,EAAGwzB,QAAQG,UAAUH,GAC7F,OAAOh1B,KAAK00B,iBAAiBx1B,MAAMk2B,QAElC,GAA4B,QAAvB3zB,EAAKqF,EAAOmB,aAA0B,IAAPxG,OAAgB,EAASA,EAAGuzB,QAAQG,UAAUH,GACnF,OAAOl2B,QAAQC,SAAQ,GAE3B,IAAMs2B,IAAkBr1B,KAAK00B,iBAAiBx1B,MAC9Cc,KAAK00B,iBAAiBjqB,QACtB,IAAMkH,EAAS,IAAI3F,GAAAA,EACbopB,EAAiB32B,GAAUkG,OAAM,OAAQ,GAAMjE,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAA00B,EAAAC,EAAAC,EAAA/H,EAAAgI,EAAA,OAAA/0B,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA3B,MAAA,OACkD,IAA9Ei2B,GAAiBzI,EAAQ8I,cAAgBC,GAAAA,GAA4BC,UACxE,CAAF70B,EAAA3B,KAAA,QAEd,OAFc2B,EAAA3B,KAAA,EAERy2B,GAAK71B,KAAKy0B,eAAexsB,IAAIjI,KAAKkkB,YAAW,WAEnDvS,EAAOlR,MAAMU,yBAA2BnB,KAAKkkB,UAAU5b,iBAAmB0sB,EAAQR,UAAS,CAAAzzB,EAAA3B,KAAA,eAAA2B,EAAAG,OAAA,UACpF,GAAK,OAGW,OADrBo0B,EAAY,IAAIxpB,KAAM/K,EAAA3B,KAAA,EACKutB,GAAyB3sB,KAAKwb,wBAAwBsa,0BAA2BxyB,EAAUtD,KAAKkkB,UAAW0I,EAASjb,EAAOlR,MAAOT,KAAK6sB,8BAA6B,OAA7K,GAAlB0I,EAAkBx0B,EAAAc,MACpB8P,EAAOlR,MAAMU,yBAA2BnB,KAAKkkB,UAAU5b,iBAAmB0sB,EAAQR,UAAS,CAAAzzB,EAAA3B,KAAA,gBAAA2B,EAAAG,OAAA,UACpF,GAAK,QAeb,OAbGs0B,EAAU,IAAI1pB,KACpB9L,KAAKy0B,eAAenoB,OAAOtM,KAAKkkB,UAAWsR,EAAQO,UAAYT,EAAUS,WACnEtI,EAAc,IAAIuI,GAA0BT,EAAoBP,EAASh1B,KAAKkkB,UAAWlkB,KAAKw0B,WAChGO,IACMU,EAAqBV,EAAuBkB,wBAAmB30B,GACjEyzB,EAAuBmB,YAAYl2B,KAAKkkB,UAAW5gB,KAAciyB,EAAmBzqB,IAAI2qB,IACxFhI,EAAY0I,QAAQpB,EAAuBtR,iBAAkBgS,EAAmB51B,OAAO,IAG/FG,KAAK00B,iBAAiBjqB,SACtB2rB,EAAAA,EAAAA,KAAY,SAAAC,GAERvvB,EAAOoB,IAAIulB,EAAa4I,EAC5B,IAAGt1B,EAAAG,OAAA,UACI,GAAI,yBAAAH,EAAAQ,OAAA,GAAAX,EAAA,UAET01B,EAAkB,IAAIC,GAAgBvB,EAASrjB,EAAQyjB,GAE7D,OADAp1B,KAAK00B,iBAAiBx1B,MAAQo3B,EACvBlB,CACX,GAAC,CAAA90B,IAAA,QAAApB,MACD,SAAMm3B,GACFr2B,KAAK00B,iBAAiBjqB,QACtBzK,KAAK2jB,kBAAkBzb,SAAI5G,EAAW+0B,GACtCr2B,KAAK60B,+BAA+B3sB,SAAI5G,EAAW+0B,EACvD,GAAC,CAAA/1B,IAAA,sCAAApB,MACD,SAAoCm3B,GAChC,IAAI70B,GACuC,QAAtCA,EAAKxB,KAAK00B,iBAAiBx1B,aAA0B,IAAPsC,OAAgB,EAASA,EAAGwzB,QAAQpI,QAAQsI,yBAC3Fl1B,KAAK00B,iBAAiBjqB,QAE1BzK,KAAK60B,+BAA+B3sB,SAAI5G,EAAW+0B,EACvD,GAAC,CAAA/1B,IAAA,eAAApB,MACD,WACIc,KAAK00B,iBAAiBjqB,OAC1B,KAAC8pB,CAAA,CA5EsB,CAAyC7P,EAAAA,IAmFpE,SAASmR,GAAKW,EAAIC,GACd,OAAO,IAAI33B,SAAQ,SAAAC,GACf,IAAIiI,OAAI1F,EACFo1B,EAAS/c,YAAW,WAClB3S,GACAA,EAAEzC,UAENxF,GACJ,GAAGy3B,GACCC,IACAzvB,EAAIyvB,EAAkBE,yBAAwB,WAC1CC,aAAaF,GACT1vB,GACAA,EAAEzC,UAENxF,GACJ,IAER,GACJ,CAxBAw1B,GAA0B3tB,GAAW,CACjCc,GAAQ,EAAG4Q,EAAAA,GACX5Q,GAAQ,EAAGmvB,GAAAA,KACZtC,IAqBF,IACKU,GAAa,WACf,SAAAA,EAAY3xB,EAAUspB,EAAS4H,IAAWz0B,EAAAA,EAAAA,GAAA,KAAAk1B,GACtCj1B,KAAKsD,SAAWA,EAChBtD,KAAK4sB,QAAUA,EACf5sB,KAAKw0B,UAAYA,CACrB,CAOC,OAPA50B,EAAAA,EAAAA,GAAAq1B,EAAA,EAAA30B,IAAA,YAAApB,MACD,SAAUimB,GACN,OAAOnlB,KAAKsD,SAASoiB,OAAOP,EAAM7hB,WAO1C,SAAgBwzB,EAAIC,EAAIrR,GACpB,IAAKoR,IAAOC,EACR,OAAOD,IAAOC,EAElB,OAAOrR,EAAOoR,EAAIC,EACtB,CAXerR,CAAO1lB,KAAK4sB,QAAQsI,uBAAwB/P,EAAMyH,QAAQsI,wBAAwB,SAAC4B,EAAIC,GAAE,OAAKD,EAAGpR,OAAOqR,EAAG,MAC1G5R,EAAMyH,QAAQ8I,cAAgBC,GAAAA,GAA4BC,WACvD51B,KAAK4sB,QAAQ8I,cAAgBC,GAAAA,GAA4BqB,WAC7Dh3B,KAAKw0B,YAAcrP,EAAMqP,SACpC,KAACS,CAAA,CAZc,GAmBlB,IACKsB,GAAe,WACjB,SAAAA,EAAYvB,EAASiC,EAAyB7B,IAASr1B,EAAAA,EAAAA,GAAA,KAAAw2B,GACnDv2B,KAAKg1B,QAAUA,EACfh1B,KAAKi3B,wBAA0BA,EAC/Bj3B,KAAKo1B,QAAUA,CACnB,CAGC,OAHAx1B,EAAAA,EAAAA,GAAA22B,EAAA,EAAAj2B,IAAA,UAAApB,MACD,WACIc,KAAKi3B,wBAAwB/qB,QACjC,KAACqqB,CAAA,CARgB,GAURP,GAAyB,WAElC,SAAAA,EAAYkB,EAAgClC,EAAS9Q,EAAWsQ,GAAW,IAAAzmB,EAAA,MAAAhO,EAAAA,EAAAA,GAAA,KAAAi2B,GACvEh2B,KAAKk3B,+BAAiCA,EACtCl3B,KAAKg1B,QAAUA,EACfh1B,KAAKkkB,UAAYA,EACjBlkB,KAAKw0B,UAAYA,EACjBx0B,KAAKm3B,UAAY,EACjBn3B,KAAKo3B,gCAAkC,GACvCp3B,KAAKq3B,qBAAuB,EAC5Br3B,KAAKs3B,iBAAkB/P,EAAAA,EAAAA,IAAQvnB,MAAM,SAAAqjB,GACjCtV,EAAKymB,UAAUlR,KAAKD,GACpB,IACuC5gB,EADnC80B,GAAU,EAAM50B,GAAAC,EAAAA,EAAAA,GACJmL,EAAKypB,oBAAkB,IAAvC,IAAA70B,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAtD,MAAyC,KAA9BgI,EAAC/E,EAAAvD,MACRq4B,EAAUA,GAAW/vB,EAAEiwB,aAAa1pB,EAAKmW,UAC7C,CAAC,OAAAlgB,GAAArB,EAAAtD,EAAA2E,EAAA,SAAArB,EAAAsB,GAAA,CAID,OAHIszB,GACAxpB,EAAKspB,uBAEFtpB,EAAKspB,oBAChB,IACA,IAAMK,EAAMxT,EAAU7M,iBAAiB,GAAI6f,EAA+BzJ,YAAY1oB,KAAI,SAAAyC,GAAC,MAAK,CAC5F3H,MAAO2H,EAAE3H,MACT6K,QAAS,CACLmJ,YAAa,oCAEpB,KACD7T,KAAKw3B,mBAAqBN,EAA+BzJ,YAAY1oB,KAAI,SAACyC,EAAGoB,GAAK,OAAK,IAAI+uB,GAAiCnwB,EAAGkwB,EAAI9uB,GAAQmF,EAAKupB,gBAAgB,GACpK,CAiCC,OAjCA13B,EAAAA,EAAAA,GAAAo2B,EAAA,EAAA11B,IAAA,oBAAA2H,IA3BD,WAA0B,OAAOjI,KAAKw3B,kBAAoB,GAAC,CAAAl3B,IAAA,QAAApB,MA4B3D,WAEI,OADAc,KAAKm3B,YACEn3B,IACX,GAAC,CAAAM,IAAA,UAAApB,MACD,WAAU,IAAAwQ,EAAA,KAEN,GADA1P,KAAKm3B,YACkB,IAAnBn3B,KAAKm3B,UAAiB,CACtBxd,YAAW,WAEFjK,EAAKwU,UAAU5e,cAEhBoK,EAAKwU,UAAU7M,iBAAiB3H,EAAK8nB,mBAAmBzyB,KAAI,SAAAyC,GAAC,OAAIA,EAAEowB,YAAY,IAAG,GAE1F,GAAG,GACH53B,KAAKk3B,+BAA+B3yB,UAAU,IACMpB,EADNC,GAAAR,EAAAA,EAAAA,GAC9B5C,KAAKo3B,iCAA+B,IAApD,IAAAh0B,EAAAP,MAAAM,EAAAC,EAAAN,KAAAtD,MAAsD,CAA1C2D,EAAAjE,MACNyS,OAAO+c,WACb,CAAC,OAAA1qB,GAAAZ,EAAA/D,EAAA2E,EAAA,SAAAZ,EAAAa,GAAA,CACL,CACJ,GAAC,CAAA3D,IAAA,UAAApB,MACD,SAAQukB,EAAkB5jB,EAAOg4B,GACzBA,GACApU,EAAiB9R,OAAOmmB,SAE5B,IAAMzmB,EAAKrR,KAAKkkB,UAAU7M,iBAAiB,GAAI,CAAC,CACxCxX,MAAAA,EACA6K,QAAS,CACLmJ,YAAa,uCAEjB,GACR7T,KAAKw3B,mBAAmBO,QAAQ,IAAIJ,GAAiClU,EAAkBpS,EAAIrR,KAAKs3B,gBAAiBz3B,IACjHG,KAAKo3B,gCAAgCrzB,KAAK0f,EAC9C,KAACuS,CAAA,CA7DiC,GA+DzB2B,GAAgC,WAKzC,SAAAA,EAAYlU,EAAkBmU,EAAcI,EAAcC,IAAcl4B,EAAAA,EAAAA,GAAA,KAAA43B,GACpE33B,KAAKyjB,iBAAmBA,EACxBzjB,KAAK43B,aAAeA,EACpB53B,KAAKg4B,aAAeA,EACpBh4B,KAAKk4B,WAAa7a,KAAKC,UAAU,CAC7Btd,KAAKyjB,iBAAiBoL,WACtB7uB,KAAKyjB,iBAAiBqL,WACtB9uB,KAAKyjB,iBAAiB5jB,MAAM6D,mBAAmB2E,aAEnDrI,KAAKm4B,UAAW,EAChBn4B,KAAKo4B,cAAiC,OAAjBH,QAA0C,IAAjBA,EAA0BA,EAAexU,EAAiB5jB,KAC5G,CAiEC,OAjEAD,EAAAA,EAAAA,GAAA+3B,EAAA,EAAAr3B,IAAA,gBAAA2H,IAfD,WACI,IAAIzG,EACJ,OAAwF,QAAhFA,EAAKxB,KAAKyjB,iBAAiB9R,OAAOgS,kBAAkB0U,8BAA2C,IAAP72B,GAAgBA,CACpH,GAAC,CAAAlB,IAAA,qBAAApB,MAaD,SAAmBmkB,GACf,OAAOrjB,KAAKyjB,iBAAiB6U,UAAUt4B,KAAKu4B,iBAAiBlV,GACjE,GAAC,CAAA/iB,IAAA,mBAAApB,MACD,SAAiBmkB,GACb,OAAO,IAAI+M,GAAepwB,KAAKu4B,iBAAiBlV,GAASrjB,KAAKyjB,iBAAiBqL,WACnF,GAAC,CAAAxuB,IAAA,YAAApB,MACD,SAAUmD,EAAO6uB,EAAgB7N,GAC7B,IAAMmV,EAAuBx4B,KAAKy4B,yBAAyBpV,GAAQ+N,mBAAmB/uB,GACtF,IAAKrC,KAAKm4B,WACFn4B,KAAKyjB,iBAAiB5jB,MAAM6D,mBAAmBgiB,OAAO1lB,KAAKu4B,iBAAiBlV,GAAQ3f,qBACrFwtB,EAAezrB,aAAe+yB,EAAqB34B,MAAM+S,gBAC5D,OAAO,EAEX,IAAMsf,EAAgB7vB,EAAMouB,gBAAgB+H,EAAqB34B,MAAO,GAAgC64B,cAClG7J,EAAa2J,EAAqBjoB,KAAKmoB,cACvCC,EAAiB5rB,KAAKC,IAAI,EAAGkkB,EAAe/qB,OAASqyB,EAAqB34B,MAAM+F,aAClFgzB,EAAmB/J,EAAW3I,UAAU,EAAGyS,GAC3CE,EAAkBhK,EAAW3I,UAAUyS,GACvCG,EAAsB5G,EAAchM,UAAU,EAAGyS,GACjDI,EAAqB7G,EAAchM,UAAUyS,GAC3CK,EAAsB32B,EAAM8hB,oBAAoBqU,EAAqB34B,MAAM+S,iBAYjF,OAXI4lB,EAAqB34B,MAAM+F,aAAeozB,IAGP,KADnCF,EAAsBA,EAAoBG,aAClB9zB,SACpB4zB,EAAqBA,EAAmBE,aAGZ,KADhCL,EAAmBA,EAAiBK,aACf9zB,SACjB0zB,EAAkBA,EAAgBI,cAGnCL,EAAiB/H,WAAWiI,OAC1BI,EAAAA,GAAAA,IAAiBH,EAAoBF,EAClD,GAAC,CAAAv4B,IAAA,cAAApB,MACD,SAAYmD,EAAOiB,GAKf,OAJetD,KAAKm4B,UACbn4B,KAAKu4B,sBAAiBj3B,GAAW63B,iBAAiB71B,IAClDtD,KAAKo5B,UAAU/2B,EAAOiB,OAAUhC,KAC/BtB,KAAKq5B,4BAAuB/3B,EAExC,GAAC,CAAAhB,IAAA,2BAAApB,MACD,SAAyBmkB,GACrB,OAAO,IAAI+M,GAAepwB,KAAKu4B,iBAAiBlV,GAASrjB,KAAKyjB,iBAAiBoL,WACnF,GAAC,CAAAvuB,IAAA,yBAAApB,MACD,SAAuBmkB,GACnB,OAAOle,GAAOnF,KAAKu4B,iBAAiBlV,IAAS1f,SAASwB,GAAOnF,KAAKyjB,iBAAiB5jB,OACvF,GAAC,CAAAS,IAAA,mBAAApB,MACD,SAAiBmkB,GAEb,OADArjB,KAAKg4B,aAAa1U,KAAKD,GAChBrjB,KAAKo4B,aAChB,GAAC,CAAA93B,IAAA,eAAApB,MACD,SAAaglB,GACT,IAAMrkB,EAAQqkB,EAAUhS,mBAAmBlS,KAAK43B,cAChD,OAAK/3B,GAKAG,KAAKo4B,cAAckB,YAAYz5B,KAChCG,KAAKo4B,cAAgBv4B,GACd,IALPG,KAAKm4B,UAAW,GACT,EAOf,KAACR,CAAA,CAjFwC,GAmF7C,SAASxyB,GAAOtF,GACZ,OAAIA,EAAM+S,kBAAoB/S,EAAMgT,cACzB,IAAIxO,EAAAA,EAAS,EAAG,EAAIxE,EAAMgG,UAAYhG,EAAM+F,aAG5C,IAAIvB,EAAAA,EAAS,EAAIxE,EAAMgT,cAAgBhT,EAAM+S,gBAAiB/S,EAAMgG,UAEnF,C,ICxRW0zB,G,oCAlCP3yB,GAA0C,SAAUC,EAAYC,EAAQxG,EAAKyG,GAC7E,IAA2HC,EAAvHC,EAAIC,UAAU/B,OAAQgC,EAAIF,EAAI,EAAIH,EAAkB,OAATC,EAAgBA,EAAOK,OAAOC,yBAAyBP,EAAQxG,GAAOyG,EACrH,GAAuB,kBAAZO,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQxG,EAAKyG,QACpH,IAAK,IAAIS,EAAIX,EAAW1B,OAAS,EAAGqC,GAAK,EAAGA,KAASR,EAAIH,EAAWW,MAAIL,GAAKF,EAAI,EAAID,EAAEG,GAAKF,EAAI,EAAID,EAAEF,EAAQxG,EAAK6G,GAAKH,EAAEF,EAAQxG,KAAS6G,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOK,eAAeX,EAAQxG,EAAK6G,GAAIA,CAChE,EACIO,GAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUd,EAAQxG,GAAOsH,EAAUd,EAAQxG,EAAKqH,EAAa,CACxE,EACIlJ,GAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,GAkBA,SAAWm6B,GACPA,EAAsBA,EAA4B,KAAI,GAAK,OAC3DA,EAAsBA,EAA4B,KAAI,GAAK,OAC3DA,EAAsBA,EAAkC,WAAI,GAAK,aACjEA,EAAsBA,EAA6B,MAAI,GAAK,OAC/D,CALD,CAKGA,KAA0BA,GAAwB,CAAC,IACtD,IAAIC,GAAsB,SAAA9W,IAAAhI,EAAAA,EAAAA,GAAA8e,EAAA9W,GAAA,IAAA/H,GAAAC,EAAAA,EAAAA,GAAA4e,GAEtB,SAAAA,EAAYtV,EAAWJ,EAAqBoN,EAAgBuI,EAAoBhF,EAAgBiF,EAAwBC,EAAqBC,EAAoBC,EAAUC,EAAuBzwB,EAAiB0wB,GAA+B,IAAAl5B,GAAAd,EAAAA,EAAAA,GAAA,KAAAy5B,IAC9O34B,EAAA8Z,EAAAT,KAAA,OACKgK,UAAYA,EACjBrjB,EAAKijB,oBAAsBA,EAC3BjjB,EAAKqwB,eAAiBA,EACtBrwB,EAAK44B,mBAAqBA,EAC1B54B,EAAK4zB,eAAiBA,EACtB5zB,EAAK64B,uBAAyBA,EAC9B74B,EAAK84B,oBAAsBA,EAC3B94B,EAAK+4B,mBAAqBA,EAC1B/4B,EAAKg5B,SAAWA,EAChBh5B,EAAKi5B,sBAAwBA,EAC7Bj5B,EAAKwI,gBAAkBA,EACvBxI,EAAKk5B,8BAAgCA,EACrCl5B,EAAKm5B,QAAUn5B,EAAKsiB,UAAUtiB,EAAKi5B,sBAAsBG,eAAe1F,GAAyB1zB,EAAKqjB,UAAWrjB,EAAK44B,mBAAoB54B,EAAK4zB,iBAC/I5zB,EAAKq5B,WAAYhT,EAAAA,EAAAA,KAAeC,EAAAA,EAAAA,GAAAtmB,IAAO,GACvCA,EAAKs5B,cAAeC,EAAAA,EAAAA,IAAiB,eAErCv5B,EAAKw5B,6BAA8BnT,EAAAA,EAAAA,KAAeC,EAAAA,EAAAA,GAAAtmB,QAAOS,GACzDT,EAAKy5B,uBAAwB,EAC7Bz5B,EAAK05B,kCAAoC,IAAI/3B,IAAI,CAC7C+2B,GAAsBiB,KACtBjB,GAAsBkB,KACtBlB,GAAsBmB,aAE1B75B,EAAK85B,yBAA0BC,EAAAA,EAAAA,IAAqB,CAChD/f,OAAKsM,EAAAA,EAAAA,GAAAtmB,GACLg6B,yBAA0B,iBAAO,CAC7BC,2BAA2B,EAC3BC,4BAA6BpF,GAAAA,GAA4BC,UAC5D,EACDoF,aAAc,SAACC,EAAKC,GAQhB,OANID,EAAIE,UAAUt6B,EAAK44B,qBAAuB54B,EAAK05B,kCAAkCzvB,IAAImwB,EAAIG,QACzFF,EAAcJ,2BAA4B,EAErCG,EAAIE,UAAUt6B,EAAKs5B,gBACxBe,EAAcH,4BAA8BE,EAAIG,SAE7C,CACX,IACD,SAAC/X,EAAQ6X,GAGR,GAFAr6B,EAAKs5B,aAAa7W,KAAKD,GACDxiB,EAAKg5B,SAASvW,KAAKD,IAAWxiB,EAAKijB,oBAAoBR,KAAKD,IAAYxiB,EAAKq5B,UAAU5W,KAAKD,GAClH,CAIAxiB,EAAK44B,mBAAmBnW,KAAKD,GAC7B,IAAMgY,EAA0Bx6B,EAAKy6B,yBAAyBrzB,MACxDszB,EAAiBL,EAAcJ,4BAA0D,OAA5BO,QAAgE,IAA5BA,OAAqC,EAASA,EAAwBG,eACvKH,OAA0B/5B,EAC1BuzB,EAAiCh0B,EAAKm5B,QAAQnF,+BAA+B5sB,MAC7EwzB,EAAc56B,EAAKijB,oBAAoBR,KAAKD,GAClD,GAAIwR,IAAmC4G,EAAa,CAChD,IAAM9X,EAAoB9iB,EAAKm5B,QAAQrW,kBAAkB1b,OACzDmuB,EAAAA,EAAAA,KAAY,SAAAC,GAEJ1S,GAAqBkR,EAA+BG,QAAQR,UAAY7Q,EAAkBqR,QAAQR,WAClG3zB,EAAKm5B,QAAQrW,kBAAkBzb,IAAI2sB,EAA+B6G,QAASrF,GAE/Ex1B,EAAKm5B,QAAQ2B,oCAAoCtF,EACrD,GACJ,CACA,IAAMnF,EAAiBrwB,EAAKqwB,eAAe5N,KAAKD,GAC1CuJ,EAAU,CACZ8I,YAAawF,EAAcH,4BAC3B7F,uBAAwC,OAAhBuG,QAAwC,IAAhBA,OAAyB,EAASA,EAAYG,4BAElG,OAAO/6B,EAAKm5B,QAAQ6B,MAAM3K,EAAgBtE,EAAS2O,EAtBnD,CAFI16B,EAAKm5B,QAAQ8B,cAyBrB,IACAj7B,EAAKk7B,gCAAiCxU,EAAAA,EAAAA,KAAOJ,EAAAA,EAAAA,GAAAtmB,IAAO,SAAAwiB,GAChD,IAAMpc,EAAIpG,EAAKm5B,QAAQrW,kBAAkBL,KAAKD,GAC9C,IAAKpc,EACD,MAAO,GAEX,IAAMiqB,EAAiBrwB,EAAKqwB,eAAe5N,KAAKD,GAC1C2Y,EAAsB/0B,EAAE0c,kBAAkB3F,QAAO,SAAA/W,GAAC,OAAIA,EAAEmyB,UAAUv4B,EAAKqjB,UAAWgN,EAAgB7N,EAAO,IAC/G,OAAO2Y,CACX,IACAn7B,EAAKo7B,+BAAgC1U,EAAAA,EAAAA,KAAOJ,EAAAA,EAAAA,GAAAtmB,IAAO,SAACwiB,GAChD,IAAM6Y,EAA6Br7B,EAAKw5B,4BAA4B/W,KAAKD,GACnE2Y,EAAsBn7B,EAAKk7B,+BAA+BzY,KAAKD,GAC/Djd,OAA2C9E,IAArCT,EAAKw5B,6BAA6C,EACxD2B,EAAoBG,WAAU,SAAA7hB,GAAC,OAAIA,EAAE4d,aAAegE,CAA0B,IACpF,OAAa,IAAT91B,GAEAvF,EAAKw5B,4BAA4BnyB,SAAI5G,OAAWA,GACzC,GAEJ8E,CACX,IACAvF,EAAKy6B,0BAA2B/T,EAAAA,EAAAA,KAAOJ,EAAAA,EAAAA,GAAAtmB,IAAO,SAACwiB,GAG3C,OAF4BxiB,EAAKk7B,+BAA+BzY,KAAKD,GACzDxiB,EAAKo7B,8BAA8B3Y,KAAKD,GAExD,IACAxiB,EAAKu7B,gBAAkBv7B,EAAKm5B,QAAQrW,kBAAkB5e,KAAI,SAAAuV,GAAC,OAA8C,OAANA,QAAoB,IAANA,OAAe,EAASA,EAAE0a,QAAQpI,QAAQ8I,WAAW,IACtK70B,EAAKw7B,wBAAyB9U,EAAAA,EAAAA,KAAOJ,EAAAA,EAAAA,GAAAtmB,IAAO,SAAAwiB,GACxC,OAAIxiB,EAAKu7B,gBAAgB9Y,KAAKD,KAAYsS,GAAAA,GAA4BqB,SAC3Dn2B,EAAKk7B,+BAA+BzY,KAAKD,GAAQle,YAGxD,CAER,IACAtE,EAAK0iB,OAAQ+Y,EAAAA,EAAAA,IAAY,CACrBzhB,OAAKsM,EAAAA,EAAAA,GAAAtmB,GACL07B,iBAAkB,SAACp4B,EAAGC,GAClB,OAAKD,GAAMC,EAGJ2iB,EAA6B5iB,EAAEuf,UAAWtf,EAAEsf,YAC5Cvf,EAAEsf,mBAAqBrf,EAAEqf,kBACzBtf,EAAEs3B,cAAgBr3B,EAAEq3B,YAJhBt3B,IAAMC,CAKrB,IACD,SAACif,GACA,IAAI7hB,EACEa,EAAQxB,EAAKqjB,UACbuX,EAAc56B,EAAKijB,oBAAoBR,KAAKD,GAClD,GAAIoY,EAAa,CACb,IAAMe,EAAoBf,EAAYgB,mBAAmBrL,mBAAmB/uB,GACtEq6B,EAAsB77B,EAAK87B,4BAA4BH,EAAmBnZ,GAEhF,IADmCxiB,EAAK64B,uBAAuBpW,KAAKD,KAChCqZ,EAChC,OAEJ,IAAMvsB,EAAqH,QAA7G3O,EAA6B,OAAxBk7B,QAAwD,IAAxBA,OAAiC,EAASA,EAAoBvsB,YAAyB,IAAP3O,EAAgBA,EAAKg7B,EAClJI,EAAoBF,EAAsBA,EAAoBvsB,KAAKI,KAAKpL,OAASq3B,EAAkBjsB,KAAKpL,OAAS,EACjH8rB,EAAOpwB,EAAK84B,oBAAoBrW,KAAKD,GACrCxN,EAAShV,EAAKqwB,eAAe5N,KAAKD,GAClCwZ,EAAe1sB,EAAK2sB,iBAAiBz6B,EAAO4uB,EAAMpb,EAAQ+mB,GAGhE,MAAO,CAAElZ,UAD0B,OAAjBmZ,QAA0C,IAAjBA,EAA0BA,EAAe,IAAIrX,EAAUrV,EAAKtQ,MAAMgT,cAAe,IACxG4Q,iBAA0C,OAAxBiZ,QAAwD,IAAxBA,OAAiC,EAASA,EAAoBK,WAAYtB,YAAAA,EACpJ,CAEI,GAAK56B,EAAKq5B,UAAU5W,KAAKD,GAAzB,CAGA,IAAM1a,EAAO9H,EAAKy6B,yBAAyBhY,KAAKD,GAChD,GAAK1a,EAAL,CAGA,IAAMq0B,EAAcr0B,EAAK8zB,iBAAiBpZ,GACpC4N,EAAOpwB,EAAK+4B,mBAAmBtW,KAAKD,GACpCxN,EAAShV,EAAKqwB,eAAe5N,KAAKD,GAClCK,EAAYsZ,EAAYF,iBAAiBz6B,EAAO4uB,EAAMpb,GAC5D,OAAO6N,EAAY,CAAEA,UAAAA,EAAWD,iBAAkB9a,EAAM8yB,iBAAan6B,QAAcA,CALnF,CAJA,CAWR,IACAT,EAAK6iB,WAAY4Y,EAAAA,EAAAA,IAAY,CACzBzhB,OAAKsM,EAAAA,EAAAA,GAAAtmB,GACL07B,iBAAkBxV,IACnB,SAAA1D,GACC,IAAM/I,EAAIzZ,EAAK0iB,MAAMD,KAAKD,GAC1B,GAAK/I,EAGL,OAAOA,EAAEoJ,SACb,IACA7iB,EAAKsiB,WAAU8Z,EAAAA,EAAAA,IAA8Bp8B,EAAK85B,0BAClD,IAAIuC,OAAW57B,EAcX,OAbJT,EAAKsiB,WAAUC,EAAAA,EAAAA,KAAQ,SAAAC,GACnB,IAAI7hB,EAAIC,EAEFkH,EAAO9H,EAAK0iB,MAAMD,KAAKD,GACvB0Z,EAAsB,OAATp0B,QAA0B,IAATA,OAAkB,EAASA,EAAK8a,iBACpE,IAAoB,OAAfsZ,QAAsC,IAAfA,OAAwB,EAASA,EAAW7E,eAA8B,OAAbgF,QAAkC,IAAbA,OAAsB,EAASA,EAAShF,cAClJgF,EAAWH,EACPA,GAAY,CACZ,IAAMv1B,EAAIu1B,EAAWtZ,iBACf0Z,EAAM31B,EAAEmK,OACmC,QAAhDlQ,GAAMD,EAAK27B,EAAI/8B,UAAUg9B,yBAAsC,IAAP37B,GAAyBA,EAAGyY,KAAK1Y,EAAI27B,EAAIxZ,kBAAmBnc,EAAEynB,uBAAwBznB,EAAEsnB,WACrJ,CAER,KAAIjuB,CACR,CAsMC,OAtMAjB,EAAAA,EAAAA,GAAA45B,EAAA,EAAAl5B,IAAA,uBAAA2H,IAlLD,WAA6B,OAAOjI,KAAKs6B,qBAAuB,GAAC,CAAAh6B,IAAA,UAAApB,MAmLjE,SAAQm3B,GACJ,OAAO53B,GAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA3B,MAAA,OAEnC,OADAY,KAAKk6B,UAAUhyB,KAAI,EAAMmuB,GAAIt1B,EAAA3B,KAAA,EACvBY,KAAK26B,wBAAwB1yB,MAAK,wBAAAlH,EAAAQ,OAAA,GAAAX,EAAA,SAEhD,GAAC,CAAAN,IAAA,oBAAApB,MACD,SAAkBm3B,GACd,OAAO53B,GAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAe,IAAA,IAAAiD,EAAA,YAAAjE,EAAAA,EAAAA,KAAAI,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAxC,MAAA,OAKnC,OAJAi+B,EAAAA,EAAAA,IAAehH,GAAI,SAAAA,GACf1xB,EAAKu1B,UAAUhyB,KAAI,EAAMmuB,GACzB1xB,EAAKw1B,aAAamD,QAAQjH,EAAIV,GAAAA,GAA4BqB,SAC9D,IAAGp1B,EAAAxC,KAAA,EACGY,KAAK26B,wBAAwB1yB,MAAK,wBAAArG,EAAAL,OAAA,GAAAG,EAAA,SAEhD,GAAC,CAAApB,IAAA,OAAApB,MACD,SAAKm3B,GAAI,IAAAtoB,EAAA,MACLsvB,EAAAA,EAAAA,IAAehH,GAAI,SAAAA,GACftoB,EAAKmsB,UAAUhyB,KAAI,EAAOmuB,GAC1BtoB,EAAKisB,QAAQvvB,MAAM4rB,EACvB,GACJ,GAAC,CAAA/1B,IAAA,8BAAApB,MACD,SAA4Bs9B,EAAmBnZ,GAC3C,IAAMhhB,EAAQrC,KAAKkkB,UACb2Q,EAAiC70B,KAAKg6B,QAAQnF,+BAA+BvR,KAAKD,GAClFka,EAA6B1I,EAC7BA,EAA+BlR,kBAC/B,CAAC3jB,KAAKs7B,yBAAyBhY,KAAKD,IAASrF,OAAOwf,GAAAA,IAM1D,OAL4BC,EAAAA,GAAAA,IAAaF,GAA4B,SAAAR,GACjE,IAAI51B,EAAI41B,EAAWN,iBAAiBpZ,GAEpC,OADAlc,EAAIA,EAAEiqB,mBAAmB/uB,EAAOuB,EAAAA,EAAMC,cAAcsD,EAAEtH,MAAM6D,mBAAoB84B,EAAkB38B,MAAMiE,oBAC/F45B,SAASlB,GAAqB,CAAErsB,KAAMhJ,EAAG41B,WAAAA,QAAez7B,CACrE,GAEJ,GAAC,CAAAhB,IAAA,sCAAApB,MACD,SAAoCqB,GAChC,OAAO9B,GAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAqE,IAAA,IAAAyoB,EAAAkQ,EAAA,OAAAj9B,EAAAA,EAAAA,KAAAI,MAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAA7F,MAAA,OACnC,OADmC6F,EAAA7F,KAAA,EAC7BY,KAAK49B,oBAAmB,QACxBnQ,EAAcztB,KAAK+7B,+BAA+B9zB,OAAS,IACjD9C,OAAS,GACfw4B,GAAU39B,KAAKi8B,8BAA8Bh0B,MAAQ1H,EAAQktB,EAAYtoB,QAAUsoB,EAAYtoB,OACrGnF,KAAKq6B,4BAA4BnyB,IAAIulB,EAAYkQ,GAAQzF,gBAAY52B,IAGrEtB,KAAKq6B,4BAA4BnyB,SAAI5G,OAAWA,GACnD,wBAAA2D,EAAA1D,OAAA,GAAAyD,EAAA,SAET,GAAC,CAAA1E,IAAA,OAAApB,MACD,WACI,OAAOT,GAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAA8D,IAAA,OAAA/D,EAAAA,EAAAA,KAAAI,MAAA,SAAA8D,GAAA,cAAAA,EAAA5D,KAAA4D,EAAAxF,MAAA,OACnC,OADmCwF,EAAAxF,KAAA,EAC7BY,KAAK69B,oCAAoC,GAAE,wBAAAj5B,EAAArD,OAAA,GAAAkD,EAAA,SAEzD,GAAC,CAAAnE,IAAA,WAAApB,MACD,WACI,OAAOT,GAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAsQ,IAAA,OAAAvQ,EAAAA,EAAAA,KAAAI,MAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAA/R,MAAA,OACnC,OADmC+R,EAAA/R,KAAA,EAC7BY,KAAK69B,qCAAqC,GAAE,wBAAA1sB,EAAA5P,OAAA,GAAA0P,EAAA,SAE1D,GAAC,CAAA3Q,IAAA,SAAApB,MACD,SAAOgZ,GACH,IAAI1W,EACJ,OAAO/C,GAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAqY,IAAA,IAAAuK,EAAAwZ,EAAA7rB,EAAAxB,EAAA,YAAAhP,EAAAA,EAAAA,KAAAI,MAAA,SAAAoY,GAAA,cAAAA,EAAAlY,KAAAkY,EAAA9Z,MAAA,UAC/B8Y,EAAOrN,aAAe7K,KAAKkkB,UAAS,CAAAhL,EAAA9Z,KAAA,cAC9B,IAAI8lB,EAAAA,GAAoB,OAEJ,IAAxB3B,EAAQvjB,KAAKujB,MAAMtb,SACXsb,EAAMG,UAAU3P,WAAcwP,EAAME,iBAAgB,CAAAvK,EAAA9Z,KAAA,eAAA8Z,EAAAhY,OAAA,iBA6B/D,GA1BG67B,EAAaxZ,EAAME,iBAAiBwS,wBAAmB30B,GAC7D4W,EAAO4lB,eACHf,EAAWhO,aACX7W,EAAO1H,aAAa,0BAA2B,CAC3CJ,GAAAA,EAAc2tB,YAAYhB,EAAWl9B,MAAO,KAAGsI,QAAAmJ,EAAAA,EAAAA,GAC5CyrB,EAAW/N,uBAElB9W,EAAO8lB,YAAYjB,EAAWhO,YAAYlvB,MAAM6D,oBACN,QAAzClC,EAAKy8B,GAAAA,mBAAmBh2B,IAAIiQ,UAA4B,IAAP1W,GAAyBA,EAAG08B,OAAOnB,EAAWhO,YAAYQ,QAAS,CAAE4O,gBAAgB,KAGvIjmB,EAAO1H,aAAa,0BAA2B,CAC3CJ,GAAAA,EAAc2tB,YAAYhB,EAAWl9B,MAAOk9B,EAAWjO,aAAW3mB,QAAAmJ,EAAAA,EAAAA,GAC/DyrB,EAAW/N,uBAGlB+N,EAAWtuB,SAEXsuB,EAAWprB,OAAOmmB,UAGtB1B,EAAAA,EAAAA,KAAY,SAAAC,GACR3mB,EAAKsqB,QAAQvvB,MAAM4rB,GAGnB3mB,EAAKwqB,UAAUhyB,KAAI,EAAOmuB,EAC9B,KACI0G,EAAWtuB,QAAS,CAAFyK,EAAA9Z,KAAA,SAClB,OADkB8Z,EAAA9Z,KAAA,IACZ8R,EAAAlR,KAAKqJ,iBACN+H,eAAc1R,MAAAwR,EAAA,CAAC6rB,EAAWtuB,QAAQ4C,IAAElJ,QAAAmJ,EAAAA,EAAAA,GAAMyrB,EAAWtuB,QAAQvH,WAAa,MAC1EzH,UAAK6B,EAAWW,EAAAA,IAA0B,QAC/C86B,EAAWprB,OAAO+c,YAAY,yBAAAxV,EAAA3X,OAAA,GAAAyX,EAAA,SAG1C,GAAC,CAAA1Y,IAAA,iBAAApB,MACD,SAAegZ,GACX,OAAOzZ,GAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAy9B,IAAA,IAAA3tB,EAAA,YAAA/P,EAAAA,EAAAA,KAAAI,MAAA,SAAAu9B,GAAA,cAAAA,EAAAr9B,KAAAq9B,EAAAj/B,MAAA,OACnC,OADmCi/B,EAAAj/B,KAAA,EAC7BY,KAAKs+B,YAAYpmB,GAAQ,SAACqmB,EAAKhuB,GACjC,IAAMiuB,EAAS/tB,EAAKyT,UAAUua,wBAAwBF,EAAI94B,WAAY84B,EAAIp4B,QACpEu4B,EAASjuB,EAAKspB,8BAA8B4E,yBAAyBH,GACrEI,EAAa,IAAIC,OAAOH,EAAOI,eAAentB,OAAQ+sB,EAAOI,eAAeC,MAAM1uB,QAAQ,IAAK,KAC/F2uB,EAAKzuB,EAAK0uB,MAAML,GAClBM,EAA4B,EAGxBA,EAFJF,QAAmB19B,IAAb09B,EAAGp2B,MACQ,IAAbo2B,EAAGp2B,MACyBo2B,EAAG,GAAG75B,OAGN65B,EAAGp2B,MAIP2H,EAAKpL,OAErC,IACMg6B,EADW,OACGC,KAAK7uB,GAMzB,OALI4uB,QAAmB79B,IAAb69B,EAAGv2B,OACLu2B,EAAGv2B,MAAQu2B,EAAG,GAAGh6B,OAAS+5B,IAC1BA,EAA4BC,EAAGv2B,MAAQu2B,EAAG,GAAGh6B,QAG9C+5B,CACX,IAAE,wBAAAb,EAAA98B,OAAA,GAAA68B,EAAA,SAEV,GAAC,CAAA99B,IAAA,iBAAApB,MACD,SAAegZ,GACX,OAAOzZ,GAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAA0+B,IAAA,OAAA3+B,EAAAA,EAAAA,KAAAI,MAAA,SAAAw+B,GAAA,cAAAA,EAAAt+B,KAAAs+B,EAAAlgC,MAAA,OACnC,OADmCkgC,EAAAlgC,KAAA,EAC7BY,KAAKs+B,YAAYpmB,GAAQ,SAACqmB,EAAKhuB,GACjC,IAAM0J,EAAI1J,EAAK0uB,MAAM,MACrB,OAAIhlB,QAAiB3Y,IAAZ2Y,EAAErR,MACAqR,EAAErR,MAAQ,EAEd2H,EAAKpL,MAChB,IAAE,wBAAAm6B,EAAA/9B,OAAA,GAAA89B,EAAA,SAEV,GAAC,CAAA/+B,IAAA,cAAApB,MACD,SAAYgZ,EAAQqnB,GAChB,OAAO9gC,GAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAA6+B,IAAA,IAAAjc,EAAAG,EAAAqZ,EAAA0C,EAAAn8B,EAAAkC,EAAA05B,EAAAQ,EAAAv6B,EAAAw6B,EAAApvB,EAAA,OAAA7P,EAAAA,EAAAA,KAAAI,MAAA,SAAA8+B,GAAA,cAAAA,EAAA5+B,KAAA4+B,EAAAxgC,MAAA,UAC/B8Y,EAAOrN,aAAe7K,KAAKkkB,UAAS,CAAA0b,EAAAxgC,KAAA,cAC9B,IAAI8lB,EAAAA,GAAoB,OAEJ,IAAxB3B,EAAQvjB,KAAKujB,MAAMtb,SACXsb,EAAMG,UAAU3P,WAAcwP,EAAME,iBAAgB,CAAAmc,EAAAxgC,KAAA,eAAAwgC,EAAA1+B,OAAA,iBAIK,GADjEwiB,EAAYH,EAAMG,YAClBqZ,EAAaxZ,EAAME,iBAAiBwS,wBAAmB30B,IAC9CytB,aAAegO,EAAWlO,aAAekO,EAAWjO,WAAU,CAAA8Q,EAAAxgC,KAAA,SAEzE,OAFyEwgC,EAAAxgC,KAAA,GAEnEY,KAAK6/B,OAAO3nB,GAAO,eAAA0nB,EAAA1+B,OAAA,kBAMwC,GAH/Du+B,EAAY/b,EAAUnO,MAAM,GAC5BjS,EAAW,IAAIe,EAAAA,EAASqf,EAAUje,WAAYg6B,EAAUt5B,QACxDX,EAAOi6B,EAAUxb,MAAMqC,KAAK,OAC5B4Y,EAA4BK,EAAoBj8B,EAAUkC,MAC9BA,EAAKL,QAAqC,IAA3Bue,EAAUnO,MAAMpQ,OAAY,CAAAy6B,EAAAxgC,KAAA,SACrD,OAApBY,KAAK6/B,OAAO3nB,GAAQ0nB,EAAA1+B,OAAA,kBAGlBw+B,EAAcl6B,EAAK0gB,UAAU,EAAGgZ,GACtCl/B,KAAKs6B,uBAAwB,EAC7B,IACIpiB,EAAO4lB,eACP5lB,EAAO1H,aAAa,0BAA2B,CAC3CJ,GAAAA,EAAcC,QAAQzM,EAAAA,EAAMC,cAAcP,GAAWo8B,KAEnDv6B,EAASogB,EAAama,GAC5BxnB,EAAO8lB,YAAY5Y,EAAa9hB,EAAU6B,GAC9C,CAAC,QAEGnF,KAAKs6B,uBAAwB,CACjC,CACIyC,EAAWprB,OAAOvR,SAAS0/B,sBACrBH,EAAgB/7B,EAAAA,EAAMC,cAAck5B,EAAWl9B,MAAM6D,mBAAoB0hB,EAAa9hB,EAAUiiB,EAAama,KAE7GnvB,EAAO2H,EAAOrN,WAAW4lB,gBAAgBkP,EAAe,GAC9D5C,EAAWprB,OAAOvR,SAAS0/B,oBAAoB/C,EAAWprB,OAAOgS,kBAAmBoZ,EAAW9N,uBAAwB1e,EAAKpL,SAC/H,yBAAAy6B,EAAAr+B,OAAA,GAAAi+B,EAAA,SAET,GAAC,CAAAl/B,IAAA,wBAAApB,MACD,SAAsByJ,GAClB,IAAInH,EAAIC,EACFs+B,EAAWp3B,EAAK8zB,mBAAmBrL,mBAAmBpxB,KAAKkkB,WAC3DwY,EAAsB18B,KAAK28B,4BAA4BoD,OAAUz+B,GACvE,GAAKo7B,EAAL,CAGA,IAAMjZ,EAAmBiZ,EAAoBK,WAAWtZ,iBACe,QAAtEhiB,GAAMD,EAAKiiB,EAAiB9R,OAAOvR,UAAU0/B,2BAAwC,IAAPr+B,GAAyBA,EAAGyY,KAAK1Y,EAAIiiB,EAAiB9R,OAAOgS,kBAAmBF,EAAiBwL,uBAAwB8Q,EAASxvB,KAAKpL,OAFtN,CAGJ,KAACq0B,CAAA,CAzXqB,CAAwC9U,EAAAA,IA2XlE8U,GAAyB5yB,GAAW,CAChCc,GAAQ,EAAGgR,GAAAA,IACXhR,GAAQ,GAAI8Q,GAAAA,GACZ9Q,GAAQ,GAAImvB,GAAAA,KACb2C,I,wCC5ZUwG,GAAoB,SAAAtd,IAAAhI,EAAAA,EAAAA,GAAAslB,EAAAtd,GAAA,IAAA/H,GAAAC,EAAAA,EAAAA,GAAAolB,GAI7B,SAAAA,EAAY9nB,EAAQ+nB,EAA8BC,EAAmBC,GAAc,IAAAt/B,GAAAd,EAAAA,EAAAA,GAAA,KAAAigC,IAC/En/B,EAAA8Z,EAAAT,KAAA,OACKhC,OAASA,EACdrX,EAAKo/B,6BAA+BA,EACpCp/B,EAAKq/B,kBAAoBA,EACzBr/B,EAAKs/B,aAAeA,EACpBt/B,EAAKu/B,wBAAyB,EAC9Bv/B,EAAKw/B,mBAAoB,EACzBx/B,EAAKq5B,WAAY,EACjBr5B,EAAKy/B,6BAA0Bh/B,EAC/BT,EAAK0/B,eAAgBrZ,EAAAA,EAAAA,KAAeC,EAAAA,EAAAA,GAAAtmB,QAAOS,GAE3CT,EAAKsiB,UAAUjL,EAAOsoB,WAAU,SAAAnhC,GACxBA,EAAEmO,WAAa3M,EAAKw/B,oBACpBx/B,EAAKw/B,mBAAoB,EACzBx/B,EAAKyL,OAAOzL,EAAKq5B,WAEzB,KACAr5B,EAAKsiB,UAAUjL,EAAOuoB,SAAQ,SAAAphC,GACtBA,EAAEmO,UAAY3M,EAAKw/B,oBACnBx/B,EAAKw/B,mBAAoB,EACzBx/B,EAAKyL,OAAOzL,EAAKq5B,WAEzB,KACA,IAAMwG,EAAoBC,GAAAA,kBAAkB14B,IAAIpH,EAAKqX,QACrD,GAAIwoB,EAAmB,CACnB7/B,EAAKsiB,UAAUud,EAAkBE,iBAAiB,CAC9CC,SAAU,IACVC,OAAQ,SAACz+B,EAAOk8B,EAAKwC,GACjB,IAAIv/B,GACJ40B,EAAAA,EAAAA,KAAY,SAAAC,GAAE,OAAIx1B,EAAKq/B,kBAAkB7J,EAAG,IAC5C,IAAMnS,EAAYrjB,EAAKqX,OAAOrN,WAC9B,IAAKqZ,EAED,OAAQ,EAEZ,IAAM8c,EAAiE,QAA9Cx/B,EAAKX,EAAKo/B,sCAAmD,IAAPz+B,OAAgB,EAASA,EAAG4vB,mBAAmBlN,GAC9H,IAAK8c,EACD,OAAQ,EAEZ,IAAM19B,EAAWe,EAAAA,EAASiM,KAAKiuB,GACzB0C,EAAaF,EACdh8B,KAAI,SAAC02B,EAAa7yB,GACnB,IACMs4B,EADkBC,GAAgBC,eAAeV,EAAmBxc,EAAW5gB,EAAUm4B,EAAa56B,EAAKw/B,mBACrE5D,mBAAmBrL,mBAAmBlN,GAElF,MAAO,CAAEtb,MAAAA,EAAOy4B,MADFL,EAAgBtD,SAASwD,GAChBI,aAAcJ,EAAoB3wB,KAAKpL,OAAQs2B,YAAAA,EAC1E,IACKzd,QAAO,SAAArV,GAAI,OAAIA,GAAQA,EAAK04B,OAAS14B,EAAK24B,aAAe,CAAC,IACzD/hC,GAASgiC,EAAAA,GAAAA,IAAeN,GAAYO,EAAAA,GAAAA,KAAU,SAAA3+B,GAAC,OAAIA,EAAEy+B,YAAY,GAAEG,GAAAA,KACzE,OAAOliC,EAASA,EAAOqJ,OAAS,CACpC,KAEJ,IAAI84B,GAAyB,EAmB7B7gC,EAAKsiB,UAAUoG,EAAAA,GAAMoY,KAAKjB,EAAkBr+B,MAAMu/B,aAAnCrY,EAAiD,SAAAlqB,GAjBxDqiC,IAGJA,GAAyB,EACzB7gC,EAAKsiB,UAAUud,EAAkBmB,OAAO3iC,MAAM4iC,WAAU,WACpDjhC,EAAKu/B,wBAAyB,EAC9Bv/B,EAAKyL,QAAO,EAChB,KACAzL,EAAKsiB,UAAUud,EAAkBmB,OAAO3iC,MAAM6iC,WAAU,WACpDlhC,EAAKu/B,wBAAyB,EAC9Bv/B,EAAKyL,QAAO,EAChB,KACAzL,EAAKsiB,UAAUud,EAAkBmB,OAAO3iC,MAAM8iC,YAAW,WACrDnhC,EAAKu/B,wBAAyB,EAC9Bv/B,EAAKyL,QAAO,EAChB,KAIJ,KACAzL,EAAKsiB,UAAUud,EAAkBuB,yBAAwB,SAAA5iC,GACrD,IAAMiE,EAAWzC,EAAKqX,OAAOgqB,cACvB7/B,EAAQxB,EAAKqX,OAAOrN,WAC1B,GAAKvH,GAAajB,EAAlB,CAGA,IAAM8/B,EAAkBhB,GAAgBC,eAAeV,EAAmBr+B,EAAOiB,EAAUjE,EAAEsJ,KAAM9H,EAAKw/B,mBACxGx/B,EAAKs/B,aAAagC,EAFlB,CAGJ,IACJ,CAC4B,OAA5BthC,EAAKyL,OAAOzL,EAAKq5B,WAAWr5B,CAChC,CAiCC,OAjCAjB,EAAAA,EAAAA,GAAAogC,EAAA,EAAA1/B,IAAA,eAAA2H,IAzFD,WACI,OAAOjI,KAAKugC,aAChB,GAAC,CAAAjgC,IAAA,SAAApB,MAwFD,SAAOkjC,GAAW,IAAAz9B,EAAA,KACR09B,EAAsBriC,KAAKsiC,qBAC7BtiC,KAAKk6B,YAAckI,GAmE/B,SAA+Bj+B,EAAGC,GAC9B,GAAID,IAAMC,EACN,OAAO,EAEX,IAAKD,IAAMC,EACP,OAAO,EAEX,OAAOD,EAAEuhB,OAAOthB,EACpB,CA3E6Cm+B,CAAsBviC,KAAKsgC,wBAAyB+B,KACrFriC,KAAKk6B,UAAYkI,EACjBpiC,KAAKsgC,wBAA0B+B,GAC/BjM,EAAAA,EAAAA,KAAY,SAAAC,GAER1xB,EAAKu7B,kBAAkB7J,GACvB1xB,EAAK47B,cAAcr4B,IAAIvD,EAAKu1B,UAAYv1B,EAAK27B,6BAA0Bh/B,EAAW+0B,EACtF,IAER,GAAC,CAAA/1B,IAAA,qBAAApB,MACD,WACI,IAAMwhC,EAAoBC,GAAAA,kBAAkB14B,IAAIjI,KAAKkY,QACrD,GAAKwoB,GAAsB1gC,KAAKogC,uBAAhC,CAGA,IAAMoC,EAAc9B,EAAkBmB,OAAO3iC,MAAMujC,iBAC7Cn/B,EAAWtD,KAAKkY,OAAOgqB,cACvB7/B,EAAQrC,KAAKkY,OAAOrN,WAC1B,GAAK23B,GAAgBl/B,GAAajB,EAGlC,OAAO8+B,GAAgBC,eAAeV,EAAmBr+B,EAAOiB,EAAUk/B,EAAY75B,KAAM3I,KAAKqgC,kBAPjG,CAQJ,GAAC,CAAA//B,IAAA,0BAAApB,MACD,WACI,IAAMwhC,EAAoBC,GAAAA,kBAAkB14B,IAAIjI,KAAKkY,QAC/B,OAAtBwoB,QAAoD,IAAtBA,GAAwCA,EAAkBgC,yBAC5F,GAAC,CAAApiC,IAAA,sBAAApB,MACD,WACI,IAAMwhC,EAAoBC,GAAAA,kBAAkB14B,IAAIjI,KAAKkY,QAC/B,OAAtBwoB,QAAoD,IAAtBA,GAAwCA,EAAkBiC,qBAC5F,KAAC3C,CAAA,CA3H4B,CAAStb,EAAAA,IA6H7Byc,GAAe,WAgBxB,SAAAA,EAAYthC,EAAOivB,EAAY8T,EAAoBC,IAAe9iC,EAAAA,EAAAA,GAAA,KAAAohC,GAC9DnhC,KAAKH,MAAQA,EACbG,KAAK8uB,WAAaA,EAClB9uB,KAAK4iC,mBAAqBA,EAC1B5iC,KAAK6iC,cAAgBA,CACzB,CANC,OAMAjjC,EAAAA,EAAAA,GAAAuhC,EAAA,EAAA7gC,IAAA,SAAApB,MACD,SAAOimB,GACH,OAAOnlB,KAAKH,MAAMy5B,YAAYnU,EAAMtlB,QAC7BG,KAAK8uB,aAAe3J,EAAM2J,YAC1B9uB,KAAK4iC,qBAAuBzd,EAAMyd,oBAClC5iC,KAAK6iC,gBAAkB1d,EAAM0d,aACxC,GAAC,CAAAviC,IAAA,2BAAApB,MACD,WACI,OAAO,IAAI4jC,GAAAA,GAAuB9iC,KAAKH,MAAOG,KAAK8uB,WAAY9uB,KAAK4iC,mBAAoB5iC,KAAK6iC,cACjG,GAAC,CAAAviC,IAAA,mBAAApB,MACD,WACI,OAAO,IAAIkxB,GAAepwB,KAAKH,MAAOG,KAAK8uB,WAC/C,IAAC,EAAAxuB,IAAA,iBAAApB,MAhCD,SAAsBwhC,EAAmBr+B,EAAOiB,EAAUqF,EAAMo6B,GAC5D,IAAMjU,EAAenmB,EAAKo0B,WAApBjO,WACF+T,GAAgB,EACpB,GAAsC,EAAlCl6B,EAAKo0B,WAAWiG,gBAAwE,CACxF,IAAMzT,GAAU,IAAIC,GAAAA,IAAgBC,MAAMX,GACtCS,EAAQG,SAASvqB,OAAS,KAE1B89B,GAAAA,EAAeC,iBAAiB7gC,EAAOiB,GAAU,EAAMisB,GAE3DT,EAAaS,EAAQlnB,WACrBw6B,GAAgB,CACpB,CACA,IAAMM,EAAOzC,EAAkB0C,iBAAiBz6B,EAAMo6B,GACtD,OAAO,IAAI5B,EAAgBv9B,EAAAA,EAAMC,cAAcP,EAAS/C,MAAM,GAAI4iC,EAAKE,iBAAkB//B,EAAS/C,MAAM,EAAGwM,KAAKC,IAAIm2B,EAAKG,eAAgB,KAAMxU,EAAYnmB,EAAKo0B,WAAWvlB,KAAMqrB,EACrL,KAAC1B,CAAA,CAfuB,G,IChIxBoC,G,2DATA38B,GAA0C,SAAUC,EAAYC,EAAQxG,EAAKyG,GAC7E,IAA2HC,EAAvHC,EAAIC,UAAU/B,OAAQgC,EAAIF,EAAI,EAAIH,EAAkB,OAATC,EAAgBA,EAAOK,OAAOC,yBAAyBP,EAAQxG,GAAOyG,EACrH,GAAuB,kBAAZO,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQxG,EAAKyG,QACpH,IAAK,IAAIS,EAAIX,EAAW1B,OAAS,EAAGqC,GAAK,EAAGA,KAASR,EAAIH,EAAWW,MAAIL,GAAKF,EAAI,EAAID,EAAEG,GAAKF,EAAI,EAAID,EAAEF,EAAQxG,EAAK6G,GAAKH,EAAEF,EAAQxG,KAAS6G,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOK,eAAeX,EAAQxG,EAAK6G,GAAIA,CAChE,EACIO,GAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUd,EAAQxG,GAAOsH,EAAUd,EAAQxG,EAAKqH,EAAa,CACxE,EAuBI67B,GAA8BD,GAA6B,SAAA7gB,IAAAhI,EAAAA,EAAAA,GAAA8oB,EAAA9gB,GAAA,IAAA/H,GAAAC,EAAAA,EAAAA,GAAA4oB,GAI3D,SAAAA,EAAYtrB,EAAQurB,EAAsBliB,EAAmBjG,EAAsBwD,EAAgB4kB,EAAiBloB,EAAyBmoB,EAAiBC,GAAoB,IAAA/iC,GAAAd,EAAAA,EAAAA,GAAA,KAAAyjC,IAC9K3iC,EAAA8Z,EAAAT,KAAA,OACKhC,OAASA,EACdrX,EAAK4iC,qBAAuBA,EAC5B5iC,EAAK0gB,kBAAoBA,EACzB1gB,EAAKya,qBAAuBA,EAC5Bza,EAAKie,eAAiBA,EACtBje,EAAK6iC,gBAAkBA,EACvB7iC,EAAK2a,wBAA0BA,EAC/B3a,EAAK8iC,gBAAkBA,EACvB9iC,EAAK+iC,mBAAqBA,EAC1B/iC,EAAKwB,OAAQuyB,EAAAA,EAAAA,IAA0B,6BAAyBtzB,GAChET,EAAK44B,oBAAqBvS,EAAAA,EAAAA,KAAeC,EAAAA,EAAAA,GAAAtmB,IAAQ,GACjDA,EAAKqwB,gBAAiBhK,EAAAA,EAAAA,KAAeC,EAAAA,EAAAA,GAAAtmB,GAAO,IAAIwD,EAAAA,EAAS,EAAG,IAC5DxD,EAAKgjC,qBAAuBhjC,EAAKsiB,UAAU,IAAI6c,GAAqBn/B,EAAKqX,QAAQ,WAAQ,IAAI1W,EAAIC,EAAI,OAAiH,QAAzGA,EAAiC,QAA3BD,EAAKX,EAAKwB,MAAM4F,aAA0B,IAAPzG,OAAgB,EAASA,EAAG85B,yBAAyBrzB,aAA0B,IAAPxG,OAAgB,EAASA,EAAGg7B,sBAAiBn7B,EAAY,IAAG,SAAC+0B,GAAE,OAAKx1B,EAAKijC,kBAAkBzN,EAAIkD,GAAsBwK,MAAM,IAAE,SAACp7B,IACxVytB,EAAAA,EAAAA,KAAY,SAAAC,GACR,IAAI70B,EAEJX,EAAKijC,kBAAkBzN,EAAIkD,GAAsBwK,OACrB,QAA3BviC,EAAKX,EAAKwB,MAAM4F,aAA0B,IAAPzG,GAAyBA,EAAGwiC,sBAAsBr7B,EAC1F,GACJ,KACA9H,EAAKg5B,UAAWxS,EAAAA,EAAAA,IAAoBxmB,EAAKqX,OAAO5N,0BAA0B,kBAAMzJ,EAAKqX,OAAOvN,UAAU,IAAqCC,OAAO,IAClJ/J,EAAKojC,gBAAkBpjC,EAAKsiB,UAAUtiB,EAAK4iC,qBAAqBxJ,eAAehT,EAAiBpmB,EAAKqX,OAAQ,CACzGwL,UAAW7iB,EAAKwB,MAAM0C,KAAI,SAACuV,EAAG+I,GAAM,OAAW,OAAN/I,QAAoB,IAANA,OAAe,EAASA,EAAEoJ,UAAUJ,KAAKD,EAAO,IACvG8E,sBAAsB+b,EAAAA,EAAAA,IAAgB,GACtC1c,gBAAiB3mB,EAAKwB,MAAM0C,KAAI,SAAAuV,GAAC,OAAU,OAANA,QAAoB,IAANA,OAAe,EAASA,EAAE4J,SAAS,OAE1FrjB,EAAK4zB,eAAiB5zB,EAAK6iC,gBAAgB35B,IAAIlJ,EAAK2a,wBAAwBsa,0BAA2B,4BAA6B,CAAE7rB,IAAK,GAAI+C,IAAK,KACpJnM,EAAKsiB,UAAU,IAAIV,EAAAA,EAA4B5hB,EAAK0gB,kBAAmB1gB,EAAKwB,QAC5ExB,EAAKsiB,UAAUoG,EAAAA,GAAM4a,gBAAgBjsB,EAAO9N,kBAAkB,kBAAMgsB,EAAAA,EAAAA,KAAY,SAAAC,GAE5Ex1B,EAAKwB,MAAM6F,SAAI5G,EAAW+0B,GAC1Bx1B,EAAKijC,kBAAkBzN,EAAIkD,GAAsBwK,OACjD,IAAM7f,EAAYhM,EAAOrN,WACzB,GAAIqZ,EAAW,CACX,IAAM7hB,EAAQohC,EAAqBxJ,eAAeT,GAAwBtV,EAAWrjB,EAAKgjC,qBAAqBO,aAAcvjC,EAAKqwB,eAAgBrwB,EAAK44B,mBAAoB54B,EAAK4zB,gBAAgBpN,EAAAA,EAAAA,IAAoBnP,EAAO5N,0BAA0B,kBAAM4N,EAAOvN,UAAU,KAAgC8b,OAAO,KAAGY,EAAAA,EAAAA,IAAoBnP,EAAO5N,0BAA0B,kBAAM4N,EAAOvN,UAAU,KAAgC05B,WAAW,KAAGhd,EAAAA,EAAAA,IAAoBnP,EAAO5N,0BAA0B,kBAAM4N,EAAOvN,UAAU,IAAqCsmB,IAAI,IAAGpwB,EAAKg5B,UAC7iBh5B,EAAKwB,MAAM6F,IAAI7F,EAAOg0B,EAC1B,CACJ,GAAE,KAcFx1B,EAAKsiB,UAAUjL,EAAOpL,yBAAwB,SAACzN,GAAC,OAAK+2B,EAAAA,EAAAA,KAAY,SAAAC,GAAE,OAEnEx1B,EAAKijC,kBAAkBzN,EAfL,SAACh3B,GACf,IAAImC,EACJ,OAAInC,EAAEilC,UACK/K,GAAsBkB,KAE7Bp7B,EAAEklC,UACKhL,GAAsBiB,MAED,QAA3Bh5B,EAAKX,EAAKwB,MAAM4F,aAA0B,IAAPzG,OAAgB,EAASA,EAAGgjC,sBACzDjL,GAAsBmB,WAE1BnB,GAAsBwK,KACjC,CAG2BU,CAAUplC,GAAG,GAAC,KACzCwB,EAAKsiB,UAAUjL,EAAOwsB,2BAA0B,SAAArlC,GAAC,OAAI+2B,EAAAA,EAAAA,KAAY,SAAAC,GAC7D,IAAI70B,EAEJX,EAAKijC,kBAAkBzN,EAAIkD,GAAsBwK,OAChC,IAAb1kC,EAAEslC,QAA+D,QAAbtlC,EAAEsS,QAC1B,QAA3BnQ,EAAKX,EAAKwB,MAAM4F,aAA0B,IAAPzG,GAAyBA,EAAGD,KAAK80B,EAE7E,GAAE,KACFx1B,EAAKsiB,UAAUjL,EAAO0sB,WAAU,kBAAMxO,EAAAA,EAAAA,KAAY,SAAAC,GAC9C,IAAI70B,EAEJX,EAAKijC,kBAAkBzN,EAAIkD,GAAsBwK,OAC7CljC,EAAKg5B,SAAS5xB,QACc,QAA3BzG,EAAKX,EAAKwB,MAAM4F,aAA0B,IAAPzG,GAAyBA,EAAG87B,QAAQjH,GAEhF,GAAE,KACFx1B,EAAKsiB,UAAUtiB,EAAKie,eAAe+lB,qBAAoB,SAACxlC,GAEnC,IAAImD,IAAI,CACrBsiC,EAAAA,oBAAoBC,IAAI1zB,GACxByzB,EAAAA,oBAAoBE,WAAW3zB,GAC/ByzB,EAAAA,oBAAoBG,YAAY5zB,GAChCiR,EAAAA,GACA,6BAESxX,IAAIzL,EAAE6lC,YAAchtB,EAAOitB,gBAAkBtkC,EAAKg5B,SAAS5xB,QACpEmuB,EAAAA,EAAAA,KAAY,SAAAC,GACR,IAAI70B,EAEwB,QAA3BA,EAAKX,EAAKwB,MAAM4F,aAA0B,IAAPzG,GAAyBA,EAAG87B,QAAQjH,EAC5E,GAER,KACAx1B,EAAKsiB,UAAUtiB,EAAKqX,OAAOktB,uBAAsB,WAEzCvkC,EAAK0gB,kBAAkB8jB,mBAAmB,0BAA4BxkC,EAAKya,qBAAqByG,SAAS,oCACzG7J,EAAOvN,UAAU,IAAqC26B,YAGtDC,EAAAA,GAAmCC,kBAGvCpP,EAAAA,EAAAA,KAAY,SAAAC,GACR,IAAI70B,EAEwB,QAA3BA,EAAKX,EAAKwB,MAAM4F,aAA0B,IAAPzG,GAAyBA,EAAGD,KAAK80B,EACzE,GACJ,KACAx1B,EAAKsiB,WAAUC,EAAAA,EAAAA,KAAQ,SAAAC,GACnB,IAAI7hB,EAEE+hB,EAA2C,QAAlC/hB,EAAKX,EAAKwB,MAAMihB,KAAKD,UAA4B,IAAP7hB,OAAgB,EAASA,EAAG+hB,MAAMD,KAAKD,IAClF,OAAVE,QAA4B,IAAVA,OAAmB,EAASA,EAAMkY,aAChDlY,EAAMG,UAAU+hB,WAAa,GAC7B5kC,EAAKgjC,qBAAqBlB,sBAI9B9hC,EAAKgjC,qBAAqBnB,yBAElC,KACA7hC,EAAKsiB,WAAUhY,EAAAA,EAAAA,KAAa,WACxBtK,EAAKgjC,qBAAqBnB,yBAC9B,KACA,IAAIgD,OAAyBpkC,EAyByH,OAxBtJT,EAAKsiB,WAAUC,EAAAA,EAAAA,KAAQ,SAAAC,GAEnB,IAAMhhB,EAAQxB,EAAKwB,MAAMihB,KAAKD,GACxBE,EAAkB,OAAVlhB,QAA4B,IAAVA,OAAmB,EAASA,EAAMkhB,MAAMD,KAAKD,GAC7E,GAAKhhB,GAAUkhB,GAAUA,EAAME,kBAI/B,GAAIF,EAAME,iBAAiByU,aAAewN,EAAwB,CAC9DA,EAAyBniB,EAAME,iBAAiByU,WAChD,IAAMvS,EAAWtjB,EAAM6hB,UAAU2D,eAAetE,EAAMG,UAAUje,YAChE5E,EAAK8iC,gBAAgBgC,aAAaC,GAAAA,GAASC,kBAAkBpmC,MAAK,WAC1DoB,EAAKqX,OAAOvN,UAAU,IACtB9J,EAAKilC,0BAA0BviB,EAAMG,UAAUqiB,sBAAsBpgB,GAE7E,GACJ,OAXI+f,OAAyBpkC,CAYjC,KACAT,EAAKsiB,UAAU,IAAI6iB,EAAAA,GAA6BnlC,EAAKqX,OAAQrX,EAAKwB,MAAOxB,EAAK4iC,uBAC9E5iC,EAAKsiB,UAAUtiB,EAAKya,qBAAqBhR,0BAAyB,SAAAjL,GAC1DA,EAAE4mC,qBAAqB,8CACvBplC,EAAKqX,OAAOguB,cAAc,CAAEC,sCAAuCtlC,EAAKya,qBAAqByG,SAAS,8CAE9G,KACAlhB,EAAKqX,OAAOguB,cAAc,CAAEC,sCAAuCtlC,EAAKya,qBAAqByG,SAAS,+CAAgDlhB,CAC1J,CAnJC,OAmJAjB,EAAAA,EAAAA,GAAA4jC,EAAA,EAAAljC,IAAA,4BAAApB,MACD,SAA0BkU,GACtB,IAEIlT,EAFEkmC,EAAwBpmC,KAAKuhB,kBAAkB8jB,mBAAmB,yBAClEgB,EAA2BrmC,KAAK4jC,mBAAmB0C,iBAAiB,iCAErEF,GAAyBC,GAA4BrmC,KAAKkY,OAAOvN,UAAU,OAC5EzK,GAAO4c,EAAAA,GAAAA,IAAS,yBAA0B,4CAA6CupB,EAAyBE,iBAEpHrmC,GAAOsmC,EAAAA,EAAAA,IAAMpzB,EAAU,KAAOlT,IAAQsmC,EAAAA,EAAAA,IAAMpzB,EAChD,GACA,CAAA9S,IAAA,oBAAApB,MAKA,SAAkBm3B,EAAIoQ,GAClB,IAAIjlC,EAAIC,EACFilC,EAAW1mC,KAAKkY,OAAOrN,WAC7B7K,KAAKy5B,mBAAmBvxB,IAA2F,QAAtF1G,EAAkB,OAAbklC,QAAkC,IAAbA,OAAsB,EAASA,EAASp+B,sBAAmC,IAAP9G,EAAgBA,GAAM,EAAG60B,EAAIoQ,GACxJzmC,KAAKkxB,eAAehpB,IAAyC,QAApCzG,EAAKzB,KAAKkY,OAAOgqB,qBAAkC,IAAPzgC,EAAgBA,EAAK,IAAI4C,EAAAA,EAAS,EAAG,GAAIgyB,EAClH,GAAC,CAAA/1B,IAAA,oBAAApB,MACD,SAAkBW,GACd,IAAI2B,EACEkiB,EAAwC,QAA3BliB,EAAKxB,KAAKqC,MAAM4F,aAA0B,IAAPzG,OAAgB,EAASA,EAAGkiB,UAAUzb,MAC5F,QAAIyb,GACOA,EAAUnO,MAAMoxB,MAAK,SAAAtgB,GAAC,OAAIxmB,EAAMs5B,iBAAiB,IAAI90B,EAAAA,EAASqf,EAAUje,WAAY4gB,EAAElgB,QAAQ,GAG7G,GAAC,CAAA7F,IAAA,4BAAApB,MACD,SAA0BgqB,GACtB,OAAOlpB,KAAKikC,gBAAgB2C,aAAa1d,EAC7C,IAAC,EAAA5oB,IAAA,MAAApB,MApLD,SAAWgZ,GACP,OAAOA,EAAOC,gBAAgBorB,GAA8BnrB,GAChE,KAACorB,CAAA,CAH0D,CAA6C9e,EAAAA,IAuL5G8e,GAA4BprB,GAAK,6CACjCorB,GAA8BD,GAAgC38B,GAAW,CACrEc,GAAQ,EAAGgR,GAAAA,IACXhR,GAAQ,EAAGka,GAAAA,IACXla,GAAQ,EAAG8W,GAAAA,IACX9W,GAAQ,EAAG8Q,GAAAA,GACX9Q,GAAQ,EAAG6Q,EAAAA,GACX7Q,GAAQ,EAAG4Q,EAAAA,GACX5Q,GAAQ,EAAGm/B,GAAAA,IACXn/B,GAAQ,EAAGo/B,GAAAA,IACZtD,I,4BChOC/kC,GAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EAYa2nC,GAA8B,SAAAC,IAAAtsB,EAAAA,EAAAA,GAAAqsB,EAAAC,GAAA,IAAArsB,GAAAC,EAAAA,EAAAA,GAAAmsB,GACvC,SAAAA,IAAc,OAAAhnC,EAAAA,EAAAA,GAAA,KAAAgnC,GAAApsB,EAAAT,KAAA,KACJ,CACF7I,GAAI01B,EAA+B3uB,GACnCrW,MAAOklC,GAAAA,GAAa,gCAAiC,+BACrDC,MAAO,8BACP9kB,aAAc+kB,GAAAA,GAAeC,IAAIC,EAAAA,EAAkBC,SAAU7kB,EAAAA,EAA4BG,yBACzF2kB,OAAQ,CACJC,OAAQ,IACRC,QAAS,MAGrB,CAOC,OAPA7nC,EAAAA,EAAAA,GAAAmnC,EAAA,EAAAzmC,IAAA,MAAApB,MACD,SAAIiY,EAAUe,GACV,IAAI1W,EACJ,OAAO/C,GAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAA8mC,EAAA,OAAAhnC,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA3B,MAAA,OAC7BsoC,EAAalE,GAA4Bv7B,IAAIiQ,GACuC,QAAzF1W,EAAoB,OAAfkmC,QAAsC,IAAfA,OAAwB,EAASA,EAAWrlC,MAAM4F,aAA0B,IAAPzG,GAAyBA,EAAGpC,OAAO,wBAAA2B,EAAAQ,OAAA,GAAAX,EAAA,IAE7I,KAACmmC,CAAA,CAnBsC,CAASY,EAAAA,IAqBpDZ,GAA+B3uB,GAAKoK,EAAAA,GAC7B,IAAMolB,GAAkC,SAAAC,IAAAntB,EAAAA,EAAAA,GAAAktB,EAAAC,GAAA,IAAA1sB,GAAAP,EAAAA,EAAAA,GAAAgtB,GAC3C,SAAAA,IAAc,OAAA7nC,EAAAA,EAAAA,GAAA,KAAA6nC,GAAAzsB,EAAAjB,KAAA,KACJ,CACF7I,GAAIu2B,EAAmCxvB,GACvCrW,MAAOklC,GAAAA,GAAa,oCAAqC,mCACzDC,MAAO,kCACP9kB,aAAc+kB,GAAAA,GAAeC,IAAIC,EAAAA,EAAkBC,SAAU7kB,EAAAA,EAA4BG,yBACzF2kB,OAAQ,CACJC,OAAQ,IACRC,QAAS,MAGrB,CAOC,OAPA7nC,EAAAA,EAAAA,GAAAgoC,EAAA,EAAAtnC,IAAA,MAAApB,MACD,SAAIiY,EAAUe,GACV,IAAI1W,EACJ,OAAO/C,GAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAe,IAAA,IAAAgmC,EAAA,OAAAhnC,EAAAA,EAAAA,KAAAI,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAxC,MAAA,OAC7BsoC,EAAalE,GAA4Bv7B,IAAIiQ,GACuC,QAAzF1W,EAAoB,OAAfkmC,QAAsC,IAAfA,OAAwB,EAASA,EAAWrlC,MAAM4F,aAA0B,IAAPzG,GAAyBA,EAAGsmC,WAAW,wBAAAlmC,EAAAL,OAAA,GAAAG,EAAA,IAEjJ,KAACkmC,CAAA,CAnB0C,CAASD,EAAAA,IAqBxDC,GAAmCxvB,GAAKmK,EAAAA,GACjC,IAAMwlB,GAA6B,SAAAC,IAAAttB,EAAAA,EAAAA,GAAAqtB,EAAAC,GAAA,IAAAC,GAAArtB,EAAAA,EAAAA,GAAAmtB,GACtC,SAAAA,IAAc,OAAAhoC,EAAAA,EAAAA,GAAA,KAAAgoC,GAAAE,EAAA/tB,KAAA,KACJ,CACF7I,GAAI,sCACJtP,MAAOklC,GAAAA,GAAa,+BAAgC,6BACpDC,MAAO,4BACP9kB,aAAcilB,EAAAA,EAAkBC,UAExC,CAOC,OAPA1nC,EAAAA,EAAAA,GAAAmoC,EAAA,EAAAznC,IAAA,MAAApB,MACD,SAAIiY,EAAUe,GACV,IAAI1W,EACJ,OAAO/C,GAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAqE,IAAA,IAAA0iC,EAAA,OAAAhnC,EAAAA,EAAAA,KAAAI,MAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAA7F,MAAA,OAC7BsoC,EAAalE,GAA4Bv7B,IAAIiQ,GACuC,QAAzF1W,EAAoB,OAAfkmC,QAAsC,IAAfA,OAAwB,EAASA,EAAWrlC,MAAM4F,aAA0B,IAAPzG,GAAyBA,EAAGo8B,oBAAoB,wBAAA34B,EAAA1D,OAAA,GAAAyD,EAAA,IAE1J,KAAC+iC,CAAA,CAfqC,CAASJ,EAAAA,IAiBtCO,GAAgC,SAAAC,IAAAztB,EAAAA,EAAAA,GAAAwtB,EAAAC,GAAA,IAAAC,GAAAxtB,EAAAA,EAAAA,GAAAstB,GACzC,SAAAA,IAAc,OAAAnoC,EAAAA,EAAAA,GAAA,KAAAmoC,GAAAE,EAAAluB,KAAA,KACJ,CACF7I,GAAI,6CACJtP,MAAOklC,GAAAA,GAAa,sCAAuC,yCAC3DC,MAAO,wCACP9kB,aAAc+kB,GAAAA,GAAeC,IAAIC,EAAAA,EAAkBC,SAAU7kB,EAAAA,EAA4BG,yBACzF2kB,OAAQ,CACJC,OAAQ,IACRC,QAAS,KACTY,OAAQlB,GAAAA,GAAeC,IAAIC,EAAAA,EAAkBC,SAAU7kB,EAAAA,EAA4BG,0BAEvF0lB,SAAU,CAAC,CACHC,OAAQhpB,GAAAA,GAAOipB,wBACfjrB,MAAO0pB,GAAAA,GAAa,aAAc,eAClC7S,MAAO,UACPqU,MAAO,KAGvB,CAOC,OAPA7oC,EAAAA,EAAAA,GAAAsoC,EAAA,EAAA5nC,IAAA,MAAApB,MACD,SAAIiY,EAAUe,GACV,IAAI1W,EACJ,OAAO/C,GAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAA8D,IAAA,IAAAijC,EAAA,OAAAhnC,EAAAA,EAAAA,KAAAI,MAAA,SAAA8D,GAAA,cAAAA,EAAA5D,KAAA4D,EAAAxF,MAAA,OAEnC,OADMsoC,EAAalE,GAA4Bv7B,IAAIiQ,GAAOtT,EAAAxF,KAAA,EACuC,QAAzFoC,EAAoB,OAAfkmC,QAAsC,IAAfA,OAAwB,EAASA,EAAWrlC,MAAM4F,aAA0B,IAAPzG,OAAgB,EAASA,EAAGknC,eAAehB,EAAWxvB,QAAQ,wBAAAtT,EAAArD,OAAA,GAAAkD,EAAA,IAE/K,KAACyjC,CAAA,CA1BwC,CAASP,EAAAA,IA4BzCgB,GAAgC,SAAAC,IAAAluB,EAAAA,EAAAA,GAAAiuB,EAAAC,GAAA,IAAAC,GAAAjuB,EAAAA,EAAAA,GAAA+tB,GACzC,SAAAA,IAAc,OAAA5oC,EAAAA,EAAAA,GAAA,KAAA4oC,GAAAE,EAAA3uB,KAAA,KACJ,CACF7I,GAAI,6CACJtP,MAAOklC,GAAAA,GAAa,sCAAuC,yCAC3DC,MAAO,wCACP9kB,aAAc+kB,GAAAA,GAAeC,IAAIC,EAAAA,EAAkBC,SAAU7kB,EAAAA,EAA4BG,yBACzF2kB,OAAQ,CACJC,OAAQ,KAEZc,SAAU,CAAC,CACHC,OAAQhpB,GAAAA,GAAOipB,wBACfjrB,MAAO0pB,GAAAA,GAAa,aAAc,eAClC7S,MAAO,YACPqU,MAAO,KAGvB,CAOC,OAPA7oC,EAAAA,EAAAA,GAAA+oC,EAAA,EAAAroC,IAAA,MAAApB,MACD,SAAIiY,EAAUe,GACV,IAAI1W,EACJ,OAAO/C,GAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAsQ,IAAA,IAAAy2B,EAAA,OAAAhnC,EAAAA,EAAAA,KAAAI,MAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAA/R,MAAA,OAEnC,OADMsoC,EAAalE,GAA4Bv7B,IAAIiQ,GAAO/G,EAAA/R,KAAA,EACuC,QAAzFoC,EAAoB,OAAfkmC,QAAsC,IAAfA,OAAwB,EAASA,EAAWrlC,MAAM4F,aAA0B,IAAPzG,OAAgB,EAASA,EAAGsnC,eAAepB,EAAWxvB,QAAQ,wBAAA/G,EAAA5P,OAAA,GAAA0P,EAAA,IAE/K,KAAC03B,CAAA,CAxBwC,CAAShB,EAAAA,IA0BzCoB,GAAsB,SAAAC,IAAAtuB,EAAAA,EAAAA,GAAAquB,EAAAC,GAAA,IAAAC,GAAAruB,EAAAA,EAAAA,GAAAmuB,GAC/B,SAAAA,IAAc,OAAAhpC,EAAAA,EAAAA,GAAA,KAAAgpC,GAAAE,EAAA/uB,KAAA,KACJ,CACF7I,GAAIiR,EAAAA,GACJvgB,MAAOklC,GAAAA,GAAa,8BAA+B,4BACnDC,MAAO,2BACP9kB,aAAcK,EAAAA,EAA4BG,wBAC1C0lB,SAAU,CAAC,CACHC,OAAQhpB,GAAAA,GAAOipB,wBACfjrB,MAAO0pB,GAAAA,GAAa,SAAU,UAC9B7S,MAAO,UACPqU,MAAO,IAEflB,OAAQ,CACJE,QAAS,EACTD,OAAQ,IACRa,OAAQlB,GAAAA,GAAeC,IAAI3kB,EAAAA,EAA4BG,wBAAyBykB,EAAAA,EAAkB6B,cAAcC,YAAa1mB,EAAAA,EAA4BQ,8CAA+CmmB,GAAAA,GAAeC,QAAQF,YAAa9B,EAAAA,EAAkBiC,aAAaH,eAGvR,CAUC,OAVAvpC,EAAAA,EAAAA,GAAAmpC,EAAA,EAAAzoC,IAAA,MAAApB,MACD,SAAIiY,EAAUe,GACV,IAAI1W,EACJ,OAAO/C,GAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAqY,IAAA,IAAA0uB,EAAA,OAAAhnC,EAAAA,EAAAA,KAAAI,MAAA,SAAAoY,GAAA,cAAAA,EAAAlY,KAAAkY,EAAA9Z,MAAA,QAC7BsoC,EAAalE,GAA4Bv7B,IAAIiQ,MAEb,QAAjC1W,EAAKkmC,EAAWrlC,MAAM4F,aAA0B,IAAPzG,GAAyBA,EAAGq+B,OAAO6H,EAAWxvB,QACxFwvB,EAAWxvB,OAAOiJ,SACrB,wBAAAjI,EAAA3X,OAAA,GAAAyX,EAAA,IAET,KAAC+vB,CAAA,CA7B8B,CAASpB,EAAAA,IA+B/B4B,GAAoB,SAAAC,IAAA9uB,EAAAA,EAAAA,GAAA6uB,EAAAC,GAAA,IAAAC,GAAA7uB,EAAAA,EAAAA,GAAA2uB,GAC7B,SAAAA,IAAc,OAAAxpC,EAAAA,EAAAA,GAAA,KAAAwpC,GAAAE,EAAAvvB,KAAA,KACJ,CACF7I,GAAIk4B,EAAqBnxB,GACzBrW,MAAOklC,GAAAA,GAAa,4BAA6B,0BACjDC,MAAO,yBACP9kB,aAAcK,EAAAA,EAA4BG,wBAC1C2kB,OAAQ,CACJC,OAAQ,IACRC,QAAS,IAGrB,CASC,OATA7nC,EAAAA,EAAAA,GAAA2pC,EAAA,EAAAjpC,IAAA,MAAApB,MACD,SAAIiY,EAAUe,GACV,OAAOzZ,GAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAy9B,IAAA,IAAAsJ,EAAA,OAAAhnC,EAAAA,EAAAA,KAAAI,MAAA,SAAAu9B,GAAA,cAAAA,EAAAr9B,KAAAq9B,EAAAj/B,MAAA,OAC7BsoC,EAAalE,GAA4Bv7B,IAAIiQ,IACnDke,EAAAA,EAAAA,KAAY,SAAAC,GACR,IAAI70B,EACsF,QAAzFA,EAAoB,OAAfkmC,QAAsC,IAAfA,OAAwB,EAASA,EAAWrlC,MAAM4F,aAA0B,IAAPzG,GAAyBA,EAAGD,KAAK80B,EACvI,IAAG,wBAAAgI,EAAA98B,OAAA,GAAA68B,EAAA,IAEX,KAACmL,CAAA,CArB4B,CAAS5B,EAAAA,IAuB1C4B,GAAqBnxB,GAAK,mCACnB,IAAMsxB,GAAuC,SAAAC,IAAAjvB,EAAAA,EAAAA,GAAAgvB,EAAAC,GAAA,IAAAC,GAAAhvB,EAAAA,EAAAA,GAAA8uB,GAChD,SAAAA,IAAc,OAAA3pC,EAAAA,EAAAA,GAAA,KAAA2pC,GAAAE,EAAA1vB,KAAA,KACJ,CACF7I,GAAIq4B,EAAwCtxB,GAC5CmF,MAAO0pB,GAAAA,GAAa,yCAA0C,uBAC9D4C,IAAI,EACJznB,kBAAc9gB,EACdwoC,KAAM,CAAC,CACCz4B,GAAIkO,GAAAA,GAAOipB,wBACXpU,MAAO,YACPqU,MAAO,KAEfsB,QAAS5C,GAAAA,GAAezhB,OAAO,0CAA2C,WAElF,CAQC,OARA9lB,EAAAA,EAAAA,GAAA8pC,EAAA,EAAAppC,IAAA,MAAApB,MACD,SAAIiY,EAAUe,GACV,OAAOzZ,GAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAA0+B,IAAA,IAAA2K,EAAAC,EAAA9X,EAAA,OAAAzxB,EAAAA,EAAAA,KAAAI,MAAA,SAAAw+B,GAAA,cAAAA,EAAAt+B,KAAAs+B,EAAAlgC,MAAA,OAC7B4qC,EAAgB7yB,EAASlP,IAAIuW,GAAAA,IAC7ByrB,EAAeD,EAAcjoB,SAAS,oCACtCoQ,EAA4B,WAAjB8X,EAA4B,UAAY,SACzDD,EAAcE,YAAY,mCAAoC/X,GAAU,wBAAAmN,EAAA/9B,OAAA,GAAA89B,EAAA,IAEhF,KAACqK,CAAA,CAtB+C,CAASS,GAAAA,IAwB7DT,GAAwCtxB,GAAK,sD,uFCtNzCxR,GAA0C,SAAUC,EAAYC,EAAQxG,EAAKyG,GAC7E,IAA2HC,EAAvHC,EAAIC,UAAU/B,OAAQgC,EAAIF,EAAI,EAAIH,EAAkB,OAATC,EAAgBA,EAAOK,OAAOC,yBAAyBP,EAAQxG,GAAOyG,EACrH,GAAuB,kBAAZO,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQxG,EAAKyG,QACpH,IAAK,IAAIS,EAAIX,EAAW1B,OAAS,EAAGqC,GAAK,EAAGA,KAASR,EAAIH,EAAWW,MAAIL,GAAKF,EAAI,EAAID,EAAEG,GAAKF,EAAI,EAAID,EAAEF,EAAQxG,EAAK6G,GAAKH,EAAEF,EAAQxG,KAAS6G,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOK,eAAeX,EAAQxG,EAAK6G,GAAIA,CAChE,EACIO,GAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUd,EAAQxG,GAAOsH,EAAUd,EAAQxG,EAAKqH,EAAa,CACxE,EAgBayiC,GAAsB,WAC/B,SAAAA,EAAYvvB,EAAOhb,EAAO6nC,IAAY3nC,EAAAA,EAAAA,GAAA,KAAAqqC,GAClCpqC,KAAK6a,MAAQA,EACb7a,KAAKH,MAAQA,EACbG,KAAK0nC,WAAaA,CACtB,CAKC,OALA9nC,EAAAA,EAAAA,GAAAwqC,EAAA,EAAA9pC,IAAA,wBAAApB,MACD,SAAsBiB,GAClB,OAAwB,IAAhBA,EAAO0Q,MACR7Q,KAAKH,MAAM+F,aAAezF,EAAON,MAAM+F,aACvC5F,KAAKH,MAAMgG,WAAa1F,EAAON,MAAMgG,SAChD,KAACukC,CAAA,CAV8B,GAY/BC,GAAiC,WACjC,SAAAA,EAAYphC,EAASqhC,EAAkBC,EAAgBC,EAAsB1Q,EAAuB2Q,IAAmB1qC,EAAAA,EAAAA,GAAA,KAAAsqC,GACnHrqC,KAAKiJ,QAAUA,EACfjJ,KAAKsqC,iBAAmBA,EACxBtqC,KAAKuqC,eAAiBA,EACtBvqC,KAAKwqC,qBAAuBA,EAC5BxqC,KAAK85B,sBAAwBA,EAC7B95B,KAAKyqC,kBAAoBA,EACzBzqC,KAAKyb,aAAe,CACxB,CAgFC,OAhFA7b,EAAAA,EAAAA,GAAAyqC,EAAA,EAAA/pC,IAAA,qBAAApB,MACD,SAAmBmP,GACf,IAAMq5B,EAAalE,GAA4Bv7B,IAAIjI,KAAKiJ,SACxD,IAAKy+B,EACD,OAAO,KAEX,IAAM5gC,EAASuH,EAAWvH,OAC1B,GAAoB,IAAhBA,EAAO+J,KAAoD,CAE3D,IAAM65B,EAAe5jC,EAAO+I,OAC5B,GAAI63B,EAAWiD,0BAA0BD,EAAaxhB,YAClD,OAAO,IAAIlO,EAAAA,GAA0B,IAAMhb,KAAM4D,EAAAA,EAAMC,cAAc7D,KAAKiJ,QAAQ4B,WAAWtH,iBAAiBmnC,EAAaE,gBAAkBF,EAAapnC,WAAY+K,EAAWlB,MAAMuO,KAAMrN,EAAWlB,MAAMwO,MAAM,EAE5N,CACA,GAAoB,IAAhB7U,EAAO+J,MAEH62B,EAAWmD,kBAAkB/jC,EAAOjH,OACpC,OAAO,IAAImb,EAAAA,GAA0B,IAAMhb,KAAM8G,EAAOjH,MAAOwO,EAAWlB,MAAMuO,KAAMrN,EAAWlB,MAAMwO,MAAM,GAGrH,GAAoB,IAAhB7U,EAAO+J,OAEuB/J,EAAO+I,OAAOi7B,uBACfpD,EAAWmD,kBAAkB/jC,EAAOjH,QAC7D,OAAO,IAAImb,EAAAA,GAA0B,IAAMhb,KAAM8G,EAAOjH,MAAOwO,EAAWlB,MAAMuO,KAAMrN,EAAWlB,MAAMwO,MAAM,GAGrH,OAAO,IACX,GAAC,CAAArb,IAAA,cAAApB,MACD,SAAYiB,EAAQ4qC,GAChB,GAAgF,WAA5E/qC,KAAKiJ,QAAQ0B,UAAU,IAAqCqgC,YAC5D,MAAO,GAEX,IAAMtD,EAAalE,GAA4Bv7B,IAAIjI,KAAKiJ,SACxD,OAAIy+B,GAAcA,EAAWmD,kBAAkB1qC,EAAON,OAC3C,CAAC,IAAIuqC,GAAuBpqC,KAAMG,EAAON,MAAO6nC,IAEpD,EACX,GAAC,CAAApnC,IAAA,mBAAApB,MACD,SAAiB0tB,EAASqe,GACtB,IAAMC,EAAkB,IAAI3oC,EAAAA,GACtBuG,EAAOmiC,EAAW,GACxBjrC,KAAKyqC,kBAAkBU,WAAW,+BAC9BnrC,KAAKwqC,qBAAqBY,4BAA8BprC,KAAKiJ,QAAQ0B,UAAU,IAC/E3K,KAAKqrC,uBAAuBze,EAAS9jB,EAAMoiC,GAE/C,IAAM7oC,EAAQyG,EAAK4+B,WAAWrlC,MAAM4F,MAC9BqjC,EAAItrC,KAAK85B,sBAAsBG,eAAesL,EAAAA,GAAoCvlC,KAAKiJ,SAAS,GAAOi7B,EAAAA,EAAAA,IAAgB,MAAO7hC,EAAM45B,8BAA+B55B,EAAMg6B,uBAAwBh6B,EAAMi5B,yBAAyBv2B,KAAI,SAAAuV,GAAO,IAAI9Y,EAAI,OAA6G,QAArGA,EAAW,OAAN8Y,QAAoB,IAANA,OAAe,EAASA,EAAEmJ,iBAAiB9R,OAAOgS,kBAAkB4nB,gBAA6B,IAAP/pC,EAAgBA,EAAK,EAAI,KAIvY,OAHAorB,EAAQ4e,SAASC,YAAYH,EAAE9qB,cAC/Bne,EAAMu7B,oBACNsN,EAAgBhoC,IAAIooC,GACbJ,CACX,GAAC,CAAA5qC,IAAA,yBAAApB,MACD,SAAuB0tB,EAAS9jB,EAAMoiC,GAAiB,IAAArqC,EAAA,KAC7C6qC,EAAI/qB,GAAI+qB,EACRC,EAAuBD,EAAE,gCACzBE,EAAuBjrB,GAAIkrB,OAAOF,EAAsBD,EAAE,sBAAoB93B,EAAAA,GAAAA,GAAA,GAAK,YAAc,eACjGk4B,EAAWZ,EAAgBhoC,IAAI,IAAI6oC,GAAAA,EAAiB,CAAE7zB,OAAQlY,KAAKiJ,SAAWjJ,KAAKsqC,iBAAkBtqC,KAAKuqC,iBAUhHW,EAAgBhoC,KAAIkgB,EAAAA,EAAAA,KAAQ,SAAAC,GACxB,IAAI7hB,EAEEkiB,EAA0D,QAA7CliB,EAAKsH,EAAK4+B,WAAWrlC,MAAMihB,KAAKD,UAA4B,IAAP7hB,OAAgB,EAASA,EAAGkiB,UAAUJ,KAAKD,GACnH,GAAIK,EAAW,CACX,IAAMiC,EAAW9kB,EAAKoI,QAAQ4B,WAAWgd,eAAenE,EAAUje,aAd3D,SAACumC,GACZd,EAAgBhoC,IAAI4oC,EAASG,kBAAiB,WAC1CL,EAAqBn4B,UAAY,qCACjCmZ,EAAQsf,mBACZ,KACA,IAAMC,EAA4BlF,GAAAA,GAAa,0BAA2B,eACpEmF,EAAmBlB,EAAgBhoC,IAAI4oC,EAASO,QAAO,IAAI3vB,GAAAA,IAAiBC,WAAWwvB,GAA2BG,gBAAgB,OAAQN,KAChJJ,EAAqBW,gBAAgBH,EAAiBI,QAC1D,CAOQH,CAAO3oB,EAAUqiB,sBAAsBpgB,GAC3C,MAEIhF,GAAI8rB,MAAMb,EAElB,KACAhf,EAAQ4e,SAASC,YAAYE,EACjC,KAACtB,CAAA,CAzFgC,GA2FrCA,GAAoCzjC,GAAW,CAC3Cc,GAAQ,EAAG4W,EAAAA,GACX5W,GAAQ,EAAG6W,GAAAA,IACX7W,GAAQ,EAAGglC,GAAAA,GACXhlC,GAAQ,EAAGgR,GAAAA,IACXhR,GAAQ,EAAGilC,GAAAA,IACZtC,KC/HH5rB,EAAAA,EAAAA,IAA2B+kB,GAA4BprB,GAAIorB,GAA6B,IACxFoJ,EAAAA,EAAAA,IAAqB7E,KACrB6E,EAAAA,EAAAA,IAAqB7F,KACrB6F,EAAAA,EAAAA,IAAqBhF,KACrBgF,EAAAA,EAAAA,IAAqB1E,KACrB0E,EAAAA,EAAAA,IAAqBjE,KACrBiE,EAAAA,EAAAA,IAAqB7D,KACrB6D,EAAAA,EAAAA,IAAqBrD,KACrBsD,EAAAA,GAAAA,IAAgBnD,IAChBhrB,EAAAA,GAAyBC,SAAS0rB,G,qFCN9ByC,E,8XATAlmC,EAA0C,SAAUC,EAAYC,EAAQxG,EAAKyG,GAC7E,IAA2HC,EAAvHC,EAAIC,UAAU/B,OAAQgC,EAAIF,EAAI,EAAIH,EAAkB,OAATC,EAAgBA,EAAOK,OAAOC,yBAAyBP,EAAQxG,GAAOyG,EACrH,GAAuB,kBAAZO,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQxG,EAAKyG,QACpH,IAAK,IAAIS,EAAIX,EAAW1B,OAAS,EAAGqC,GAAK,EAAGA,KAASR,EAAIH,EAAWW,MAAIL,GAAKF,EAAI,EAAID,EAAEG,GAAKF,EAAI,EAAID,EAAEF,EAAQxG,EAAK6G,GAAKH,EAAEF,EAAQxG,KAAS6G,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOK,eAAeX,EAAQxG,EAAK6G,GAAIA,CAChE,EACIO,EAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUd,EAAQxG,GAAOsH,EAAUd,EAAQxG,EAAKqH,EAAa,CACxE,EA4BIq+B,EAA4B,SAAAtjB,IAAAhI,EAAAA,EAAAA,GAAAsrB,EAAAtjB,GAAA,IAAA/H,GAAAC,EAAAA,EAAAA,GAAAorB,GAC5B,SAAAA,EAAY9tB,EAAQ7V,EAAOohC,GAAsB,IAAA5iC,EAyCzC,OAzCyCd,EAAAA,EAAAA,GAAA,KAAAimC,IAC7CnlC,EAAA8Z,EAAAT,KAAA,OACKhC,OAASA,EACdrX,EAAKwB,MAAQA,EACbxB,EAAK4iC,qBAAuBA,EAC5B5iC,EAAKksC,mBAAoB1lB,EAAAA,EAAAA,IAAoBxmB,EAAKqX,OAAO5N,0BAA0B,iBAAiF,WAA3EzJ,EAAKqX,OAAOvN,UAAU,IAAqCqgC,WAAwB,IAC5KnqC,EAAKmsC,qBAAkB1rC,EACvBT,EAAKyC,UAAWikB,EAAAA,EAAAA,KAAOJ,EAAAA,EAAAA,GAAAtmB,IAAO,SAAAwiB,GAC1B,IAAI7hB,EAAIC,EAAIua,EACN0H,EAA+C,QAAlCliB,EAAKX,EAAKwB,MAAMihB,KAAKD,UAA4B,IAAP7hB,OAAgB,EAASA,EAAGkiB,UAAUJ,KAAKD,GACxG,IAAKxiB,EAAKksC,kBAAkBzpB,KAAKD,KAAYK,GAAwC,IAA3BA,EAAUnO,MAAMpQ,OAEtE,OADAtE,EAAKmsC,qBAAkB1rC,EAChB,KAEX,IAAM2rC,EAAcvpB,EAAUnO,MAAM,GAAGpP,OACnCtF,EAAKmsC,iBAAmBnsC,EAAKmsC,gBAAgBvnC,aAAeie,EAAUje,aACtE5E,EAAKmsC,qBAAkB1rC,GAE3B,IAAMgC,EAAW,IAAIe,EAAAA,EAASqf,EAAUje,WAAYsH,KAAK9C,IAAIgjC,EAAmG,QAArFjxB,EAAqC,QAA/Bva,EAAKZ,EAAKmsC,uBAAoC,IAAPvrC,OAAgB,EAASA,EAAG0E,cAA2B,IAAP6V,EAAgBA,EAAKkxB,OAAOC,mBAEpM,OADAtsC,EAAKmsC,gBAAkB1pC,EAChBA,CACX,IACAzC,EAAKsiB,WAAUiqB,EAAAA,EAAAA,KAAiB,SAAC/pB,EAAQrV,GAErC,IAAM3L,EAAQxB,EAAKwB,MAAMihB,KAAKD,GAC9B,GAAKhhB,GAAUxB,EAAKksC,kBAAkBzpB,KAAKD,GAA3C,CAGA,IAAMgqB,EAAgBr/B,EAAM9K,IAAIrC,EAAK4iC,qBAAqBxJ,eAAesL,EAAoC1kC,EAAKqX,QAAQ,EAAMrX,EAAKyC,SAAUjB,EAAM45B,8BAA+B55B,EAAMg6B,uBAAwBh6B,EAAMi5B,yBAAyBv2B,KAAI,SAAAuV,GAAO,IAAI9Y,EAAI,OAA6G,QAArGA,EAAW,OAAN8Y,QAAoB,IAANA,OAAe,EAASA,EAAEmJ,iBAAiB9R,OAAOgS,kBAAkB4nB,gBAA6B,IAAP/pC,EAAgBA,EAAK,EAAI,MAClZ0W,EAAOo1B,iBAAiBD,GACxBr/B,EAAM9K,KAAIiI,EAAAA,EAAAA,KAAa,kBAAM+M,EAAOq1B,oBAAoBF,EAAc,KACtEr/B,EAAM9K,KAAIkgB,EAAAA,EAAAA,KAAQ,SAAAC,GAEGxiB,EAAKyC,SAASggB,KAAKD,IAIhChhB,EAAM+5B,gBAAgB9Y,KAAKD,KAAYsS,EAAAA,GAA4BqB,UACnE30B,EAAMu7B,mBAEd,IAbA,CAcJ,KAAI/8B,CACR,CAAC,OAAAjB,EAAAA,EAAAA,GAAAomC,EAAA,CA3C2B,CAA8CthB,EAAAA,IA6C9EshB,EAA+Bp/B,EAAW,CACtCc,EAAQ,EAAGgR,EAAAA,KACZstB,GAEH,IAAMwH,GAAgCC,EAAAA,EAAAA,IAAa,+BAAgCC,EAAAA,EAAQC,cAAc7wB,EAAAA,EAAAA,IAAS,yBAA0B,uCACtI8wB,GAAoCH,EAAAA,EAAAA,IAAa,mCAAoCC,EAAAA,EAAQG,aAAa/wB,EAAAA,EAAAA,IAAS,6BAA8B,2CACnJyoB,EAAqCuH,EAAoC,SAAA3jB,IAAAzO,EAAAA,EAAAA,GAAA6qB,EAAApc,GAAA,IAAAhO,GAAAP,EAAAA,EAAAA,GAAA2qB,GAYzE,SAAAA,EAAYrtB,EAAQ41B,EAAYC,EAAWC,EAAuBC,EAAkBC,EAAgB7kC,EAAiBo6B,EAAsB0K,EAAmBC,EAAoBC,GAAc,IAAA1pC,EA2GxL,OA3GwL5E,EAAAA,EAAAA,GAAA,KAAAwlC,IAC5L5gC,EAAAwW,EAAAjB,KAAA,OACKhC,OAASA,EACdvT,EAAKmpC,WAAaA,EAClBnpC,EAAKopC,UAAYA,EACjBppC,EAAKqpC,sBAAwBA,EAC7BrpC,EAAKspC,iBAAmBA,EACxBtpC,EAAKupC,eAAiBA,EACtBvpC,EAAK0E,gBAAkBA,EACvB1E,EAAKwpC,kBAAoBA,EACzBxpC,EAAKypC,mBAAqBA,EAC1BzpC,EAAK0pC,aAAeA,EACpB1pC,EAAK0M,GAAK,qCAAHlJ,OAAwC2kC,EAAqCz7B,MACpF1M,EAAK2pC,qBAAsB,EAC3B3pC,EAAK4pC,mBAAoB,EACzB5pC,EAAK6pC,OAAQC,EAAAA,EAAAA,GAAE,6BAA8B,CAAEh7B,UAAW9O,EAAKmpC,WAAa,cAAgB,IAAM,EAC9FW,EAAAA,EAAAA,GAAE,iBAEN9pC,EAAK+pC,eAAiB/pC,EAAKgqC,oBAAoBpsB,EAAAA,IAAsCzF,EAAAA,EAAAA,IAAS,WAAY,YAAa8xB,EAAAA,EAAUC,YAAYjB,IAC7IjpC,EAAKmqC,+BAAiC,IAAIjvB,EAAAA,GAAO,iDAAkD,QAAIve,GAAW,GAClHqD,EAAKoqC,WAAapqC,EAAKgqC,oBAAoBnsB,EAAAA,IAAkC1F,EAAAA,EAAAA,IAAS,OAAQ,QAAS8xB,EAAAA,EAAUC,YAAYrB,IAE7H7oC,EAAKqqC,8BAAgCrqC,EAAKwe,UAAUxe,EAAK0pC,aAAaY,WAAW1vB,EAAAA,GAAO2vB,yBAA0BvqC,EAAKypC,qBACvHzpC,EAAKwqC,4CAA8CxqC,EAAKwe,UAAU,IAAI1X,EAAAA,IAAiB,WACnF9G,EAAKmqC,+BAA+B/sC,MAAQ,EAChD,GAAG,MACH4C,EAAKyqC,wBAA0BzqC,EAAKwe,UAAU,IAAI1X,EAAAA,IAAiB,WAC/D9G,EAAK+pC,eAAe9jC,QAAUjG,EAAKoqC,WAAWnkC,SAAU,CAC5D,GAAG,MACHjG,EAAK0qC,aAAe,GACpB1qC,EAAK2qC,QAAU3qC,EAAKwe,UAAUsgB,EAAqBxJ,eAAesV,EAAgC5qC,EAAK6pC,MAAMc,QAAS/vB,EAAAA,GAAOipB,wBAAyB,CAClJgH,YAAa,CAAEzvB,kBAAkB,GACjC0vB,eAAgB,CAAEC,aAAc,SAAAC,GAAC,OAAIA,EAAE9e,WAAW,UAAU,GAC5D+e,uBAAwB,SAACluB,EAAQhX,GAC7B,GAAIgX,aAAkB5B,EAAAA,GAClB,OAAO2jB,EAAqBxJ,eAAe4V,EAAmBnuB,OAAQpgB,GAE1E,GAAIogB,IAAW/c,EAAKmqC,+BAAgC,CAChD,IAAM3qC,EAAI,IAAI2rC,OAA4BxuC,EAAWogB,EAAQ,CAAE3f,OAAO,EAAMguC,MAAM,IAElF,OADA5rC,EAAE6rC,SAAS,4BACJ7rC,CACX,CAEJ,EACA8rC,gBAAiB,6BAErBtrC,EAAK2qC,QAAQY,2BAA2B,CACpCvrC,EAAK+pC,eACL/pC,EAAKmqC,+BACLnqC,EAAKoqC,aAETpqC,EAAKwe,UAAUxe,EAAK2qC,QAAQa,+BAA8B,SAAA9wC,GACtDytC,EAAqCsD,iBAAmB/wC,CAC5D,KACAsF,EAAKwe,WAAUC,EAAAA,EAAAA,KAAQ,SAAAC,GAEnB1e,EAAKopC,UAAUzqB,KAAKD,GACpB1e,EAAKuT,OAAOm4B,qBAAmBlpB,EAAAA,EAAAA,GAAAxiB,GACnC,KACAA,EAAKwe,WAAUC,EAAAA,EAAAA,KAAQ,SAAAC,GAEnB,IAAMitB,EAAkB3rC,EAAKspC,iBAAiB3qB,KAAKD,GAC7CktB,EAAuB5rC,EAAKqpC,sBAAsB1qB,KAAKD,QACrC/hB,IAApBgvC,GACA3rC,EAAKwqC,4CAA4CjjC,SACjDvH,EAAKmqC,+BAA+B/sC,MAAQ,GAAHoG,OAAMooC,EAAuB,EAAC,KAAApoC,OAAImoC,IAG3E3rC,EAAKwqC,4CAA4C1iC,gBAE7BnL,IAApBgvC,GAAiCA,EAAkB,GACnD3rC,EAAKyqC,wBAAwBljC,SAC7BvH,EAAK+pC,eAAe9jC,QAAUjG,EAAKoqC,WAAWnkC,SAAU,GAGxDjG,EAAKyqC,wBAAwB3iC,UAErC,KACA9H,EAAKwe,WAAUC,EAAAA,EAAAA,KAAQ,SAAAC,GAEnB,IAAMmtB,EAAgB7rC,EAAKupC,eAAe5qB,KAAKD,GAC/C,KAAIqC,EAAAA,EAAAA,IAAO/gB,EAAK0qC,aAAcmB,GAA9B,CAIA7rC,EAAK0qC,aAAemB,EACpB,IAUwE/tC,EAVlEguC,EAAeD,EAAczrC,KAAI,SAAAkC,GAAC,MAAK,CACzCypC,WAAOpvC,EACP+P,GAAIpK,EAAEoK,GACNzG,SAAS,EACT9I,QAASmF,EAAEnF,SAAW,GACtBC,MAAOkF,EAAEsW,MACT8E,IAAK,SAAClV,GACF,OAAOxI,EAAK0E,gBAAgB+H,eAAenK,EAAEoK,GACjD,EACH,IAAG1O,GAAAC,EAAAA,EAAAA,GACqB+B,EAAKqqC,8BAA8B/tB,cAAY,IAAxE,IAAAte,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAtD,MAA0E,KAC5C2D,EAD4CJ,GAAAC,EAAAA,EAAAA,GAAAP,EAAAvD,MAAA,GAA3Dk1B,GAAFrxB,EAAA,GAAOA,EAAA,IAAAK,GAAAR,EAAAA,EAAAA,GACKwxB,GAAK,IAA1B,IAAAhxB,EAAAP,MAAAM,EAAAC,EAAAN,KAAAtD,MAA4B,KAAjBkiB,EAAMve,EAAAjE,MACTwiB,aAAkB5B,EAAAA,IAClB2wB,EAAa1sC,KAAK2d,EAE1B,CAAC,OAAA1d,GAAAZ,EAAA/D,EAAA2E,EAAA,SAAAZ,EAAAa,GAAA,CACL,CAAC,OAAAD,GAAArB,EAAAtD,EAAA2E,EAAA,SAAArB,EAAAsB,GAAA,CACGwsC,EAAatrC,OAAS,GACtBsrC,EAAa1Y,QAAQ,IAAI1X,EAAAA,IAE7B1b,EAAK2qC,QAAQqB,8BAA8BF,EAtB3C,CAuBJ,KAAI9rC,CACR,CAvH8D,OAuH7D/E,EAAAA,EAAAA,GAAA2lC,EAAA,EAAAjlC,IAAA,sBAAApB,MAtHD,SAAoBgmC,EAAWnjC,EAAO6uC,GAAe,IAAA7iC,EAAA,KAC3C2T,EAAS,IAAI7B,EAAAA,GAAOqlB,EAAWnjC,EAAO6uC,GAAe,GAAM,kBAAM7iC,EAAK1E,gBAAgB+H,eAAe8zB,EAAU,IAC/G7oB,EAAKrc,KAAKmuC,kBAAkB7H,iBAAiBpB,EAAWllC,KAAKouC,oBAC/DtsC,EAAUC,EAKd,OAJIsa,IACAva,GAAUgb,EAAAA,EAAAA,IAAS,CAAExc,IAAK,UAAWuwC,QAAS,CAAC,UAAW,iBAAmB,YAAa9uC,EAAOsa,EAAGy0B,aAExGpvB,EAAO5f,QAAUA,EACV4f,CACX,GAAC,CAAAphB,IAAA,QAAApB,MA8GD,WAAU,OAAOc,KAAKqR,EAAI,GAAC,CAAA/Q,IAAA,aAAApB,MAC3B,WACI,OAAOc,KAAKwuC,MAAMuC,IACtB,GAAC,CAAAzwC,IAAA,cAAApB,MACD,WACI,MAAO,CACHoE,SAAUtD,KAAK+tC,UAAU9lC,MACzB+oC,WAAY,CAAC,EAA+C,GAC5DC,iBAAkB,EAE1B,IAAC,EAAA3wC,IAAA,kBAAA2H,IAlID,WAA+B,OAAOjI,KAAKowC,gBAAkB,KAAC7K,CAAA,CADW,CAAoD7gB,EAAAA,IAqIjI6gB,EAAmC6K,kBAAmB,EACtD7K,EAAmCl0B,GAAK,EACxCk0B,EAAqCuH,EAAuClmC,EAAW,CACnFc,EAAQ,EAAG8Q,EAAAA,GACX9Q,EAAQ,EAAGgR,EAAAA,IACXhR,EAAQ,EAAGo/B,EAAAA,GACXp/B,EAAQ,EAAGka,EAAAA,IACXla,EAAQ,GAAIwpC,EAAAA,KACb3L,GAC2C,IACxCuK,EAA2B,SAAAqB,IAAAz2B,EAAAA,EAAAA,GAAAo1B,EAAAqB,GAAA,IAAAlJ,GAAArtB,EAAAA,EAAAA,GAAAk1B,GAC7B,SAAAA,IAAc,IAAApgC,EAEkB,OAFlB3P,EAAAA,EAAAA,GAAA,KAAA+vC,IACVpgC,EAAAu4B,EAAAvoC,MAAA,KAASwH,YACJkqC,gBAAa9vC,EAAUoO,CAChC,CASC,OATA9P,EAAAA,EAAAA,GAAAkwC,EAAA,EAAAxvC,IAAA,WAAApB,MACD,SAASuU,GACLzT,KAAKoxC,WAAa39B,CACtB,GAAC,CAAAnT,IAAA,SAAApB,MACD,SAAOmyC,IACH5nB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAomB,EAAAnmB,WAAA,eAAAzP,KAAA,KAAam3B,GACTrxC,KAAKoxC,YACLC,EAAUC,UAAUpuC,IAAIlD,KAAKoxC,WAErC,KAACtB,CAAA,CAb4B,CAASyB,EAAAA,IAepC1B,EAAiB,SAAA2B,IAAA92B,EAAAA,EAAAA,GAAAm1B,EAAA2B,GAAA,IAAApJ,GAAAxtB,EAAAA,EAAAA,GAAAi1B,GAAA,SAAAA,IAAA,OAAA9vC,EAAAA,EAAAA,GAAA,KAAA8vC,GAAAzH,EAAA1oC,MAAA,KAAAwH,UAAA,CAclB,OAdkBtH,EAAAA,EAAAA,GAAAiwC,EAAA,EAAAvvC,IAAA,cAAApB,MACnB,WACI,IAAMmd,EAAKrc,KAAK4jC,mBAAmB0C,iBAAiBtmC,KAAKyxC,QAAQpgC,GAAIrR,KAAKouC,oBAC1E,IAAK/xB,EACD,OAAAoN,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAmmB,EAAAlmB,WAAA,oBAAAzP,KAAA,MAEJ,GAAIla,KAAK+B,MAAO,CACZ,IAAM2vC,GAAMjD,EAAAA,EAAAA,GAAE,kBAAkBsC,KACtB,IAAIY,EAAAA,EAAgBD,EAAKE,EAAAA,GAAIxqC,OAAOyqC,OAAO,CAAEC,cAAc,GAAQC,EAAAA,IAC3E7pC,IAAImU,GACNrc,KAAK+B,MAAMiwC,YAAchyC,KAAKyxC,QAAQ1vC,MACtC/B,KAAK+B,MAAM0pC,YAAYiG,GACvB1xC,KAAK+B,MAAMuvC,UAAUpuC,IAAI,qCAC7B,CACJ,KAAC2sC,CAAA,CAdkB,CAASoC,EAAAA,IAgB5B1C,EAA8B,SAAA2C,IAAAx3B,EAAAA,EAAAA,GAAA60B,EAAA2C,GAAA,IAAArJ,GAAAjuB,EAAAA,EAAAA,GAAA20B,GAC9B,SAAAA,EAAY8B,EAAW9I,EAAQ4J,EAAUC,EAAa7wB,EAAmB1C,EAAoBsvB,EAAmBkE,GAAkB,IAAA5hC,EAUzG,OAVyG1Q,EAAAA,EAAAA,GAAA,KAAAwvC,IAC9H9+B,EAAAo4B,EAAA3uB,KAAA,KAAMm3B,EAAWjqC,OAAOyqC,OAAO,CAAES,UAAW/J,GAAU4J,GAAWC,EAAa7wB,EAAmB1C,EAAoBsvB,EAAmBkE,IACnI9J,OAASA,EACd93B,EAAK0hC,SAAWA,EAChB1hC,EAAK2hC,YAAcA,EACnB3hC,EAAK8Q,kBAAoBA,EACzB9Q,EAAKq5B,KAAOr5B,EAAK8hC,OAAOrvC,IAAIuN,EAAK2hC,YAAYnD,WAAWx+B,EAAK83B,OAAQ93B,EAAK8Q,kBAAmB,CAAEixB,6BAA6B,KAC5H/hC,EAAKgiC,kBAAoB,GACzBhiC,EAAKiiC,wBAA0B,GAC/BjiC,EAAK8hC,OAAOrvC,IAAIuN,EAAKq5B,KAAK5/B,aAAY,kBAAMuG,EAAKkiC,eAAe,KAChEliC,EAAKkiC,gBAAgBliC,CACzB,CAuBC,OAvBA7Q,EAAAA,EAAAA,GAAA2vC,EAAA,EAAAjvC,IAAA,gBAAApB,MACD,WACI,IAAIsC,EAAIC,EAAIua,EAAIO,EAAIq2B,EAAIC,EAAIC,EACtBrL,EAAU,GACVsL,EAAY,IAClBC,EAAAA,EAAAA,IAAgChzC,KAAK8pC,KAA+B,QAAxBtoC,EAAKxB,KAAKmyC,gBAA6B,IAAP3wC,OAAgB,EAASA,EAAGguC,YAAa,CAAE/H,QAAAA,EAASsL,UAAAA,GAAoG,QAAtF/2B,EAA8B,QAAxBva,EAAKzB,KAAKmyC,gBAA6B,IAAP1wC,OAAgB,EAASA,EAAGguC,sBAAmC,IAAPzzB,OAAgB,EAASA,EAAG0zB,aAAqG,QAAtFkD,EAA8B,QAAxBr2B,EAAKvc,KAAKmyC,gBAA6B,IAAP51B,OAAgB,EAASA,EAAGkzB,sBAAmC,IAAPmD,OAAgB,EAASA,EAAGK,oBAA4G,QAAtFH,EAA8B,QAAxBD,EAAK7yC,KAAKmyC,gBAA6B,IAAPU,OAAgB,EAASA,EAAGpD,sBAAmC,IAAPqD,OAAgB,EAASA,EAAGI,+BACjiBH,EAAUhvC,KAAIrE,MAAdqzC,GAASzhC,EAAAA,EAAAA,GAAStR,KAAKyyC,oBACvBhL,EAAQ1P,QAAOr4B,MAAf+nC,GAAOn2B,EAAAA,EAAAA,GAAYtR,KAAK0yC,0BACxB1yC,KAAKmzC,WAAW1L,EAASsL,EAC7B,GAAC,CAAAzyC,IAAA,6BAAApB,MACD,SAA2Bk0C,IACnB1tB,EAAAA,EAAAA,IAAO1lB,KAAK0yC,wBAAyBU,GAAS,SAACjvC,EAAGC,GAAC,OAAKD,IAAMC,CAAC,MAGnEpE,KAAK0yC,wBAA0BU,EAC/BpzC,KAAK2yC,gBACT,GAAC,CAAAryC,IAAA,gCAAApB,MACD,SAA8Bk0C,IACtB1tB,EAAAA,EAAAA,IAAO1lB,KAAKyyC,kBAAmBW,GAAS,SAACjvC,EAAGC,GAAC,OAAKD,IAAMC,CAAC,MAG7DpE,KAAKyyC,kBAAoBW,EACzBpzC,KAAK2yC,gBACT,KAACpD,CAAA,CAnC6B,CAAgD8D,EAAAA,GAqClF9D,EAAiC3oC,EAAW,CACxCc,EAAQ,EAAGwpC,EAAAA,IACXxpC,EAAQ,EAAGka,EAAAA,IACXla,EAAQ,EAAG0X,EAAAA,GACX1X,EAAQ,EAAGo/B,EAAAA,GACXp/B,EAAQ,EAAGilC,EAAAA,IACZ4C,E,6RChTC3oC,EAA0C,SAAUC,EAAYC,EAAQxG,EAAKyG,GAC7E,IAA2HC,EAAvHC,EAAIC,UAAU/B,OAAQgC,EAAIF,EAAI,EAAIH,EAAkB,OAATC,EAAgBA,EAAOK,OAAOC,yBAAyBP,EAAQxG,GAAOyG,EACrH,GAAuB,kBAAZO,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQxG,EAAKyG,QACpH,IAAK,IAAIS,EAAIX,EAAW1B,OAAS,EAAGqC,GAAK,EAAGA,KAASR,EAAIH,EAAWW,MAAIL,GAAKF,EAAI,EAAID,EAAEG,GAAKF,EAAI,EAAID,EAAEF,EAAQxG,EAAK6G,GAAKH,EAAEF,EAAQxG,KAAS6G,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOK,eAAeX,EAAQxG,EAAK6G,GAAIA,CAChE,EACIO,EAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUd,EAAQxG,GAAOsH,EAAUd,EAAQxG,EAAKqH,EAAa,CACxE,EACIlJ,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EAWMk0C,EAA2BC,EAAAA,GAAuB50B,SAAS,CAC7D9K,YAAa,yBACbI,WAAY,EACZH,iBAAiB,EACjB0U,MAAO,CACHpV,QAASogC,EAAAA,GACThgC,gBAAiB,oCACjBD,qCAAqC,KAGvCkgC,EAAoB,SAAA/wB,IAAAhI,EAAAA,EAAAA,GAAA+4B,EAAA/wB,GAAA,IAAA/H,GAAAC,EAAAA,EAAAA,GAAA64B,GACtB,SAAAA,EAAYC,EAAQx7B,EAAQrY,EAAO0d,EAAOqC,GAAU,IAAA/e,EAUV,OAVUd,EAAAA,EAAAA,GAAA,KAAA0zC,IAChD5yC,EAAA8Z,EAAAT,KAAA,OACKw5B,OAASA,EACd7yC,EAAKqX,OAASA,EACdrX,EAAKhB,MAAQA,EACbgB,EAAK+e,SAAWA,EAChB/e,EAAKytC,qBAAsB,EAC3BztC,EAAK0tC,mBAAoB,EACzB1tC,EAAKsL,OAAOoR,GACZ1c,EAAKqX,OAAOo1B,kBAAgBnmB,EAAAA,EAAAA,GAAAtmB,IAC5BA,EAAKqX,OAAOm4B,qBAAmBlpB,EAAAA,EAAAA,GAAAtmB,IAAOA,CAC1C,CAsCC,OAtCAjB,EAAAA,EAAAA,GAAA6zC,EAAA,EAAAnzC,IAAA,SAAApB,MACD,SAAOqe,GAAO,IAAAo2B,EAAAhvC,EAAA,KACV3E,KAAKgqB,QAAUrJ,EAAI+qB,EAAE,2BACrB1rC,KAAKgqB,QAAQ4pB,KAAO,SACpB5zC,KAAKgqB,QAAQzM,MAAQA,EACrB,IAAMs2B,EAAclzB,EAAI+qB,EAAE,aAC1B1rC,KAAKgqB,QAAQ6hB,OAAOgI,IACpBF,EAAAE,EAAYvC,WAAUpuC,IAAGxD,MAAAi0C,GAAAriC,EAAAA,EAAAA,GAAIs9B,EAAAA,EAAUkF,iBAAiBpG,EAAAA,EAAQqG,UAAQ5rC,OAAA,CAAE,2BAC1E,IAAM6rC,EAAa,WACf,IAAMvpB,EAAa9lB,EAAKuT,OAAOvN,UAAU,IACzChG,EAAKqlB,QAAQ9U,MAAM8L,OAAS,GAAH7Y,OAAMsiB,EAAU,MACzC9lB,EAAKqlB,QAAQ9U,MAAMZ,MAAQ,GAAHnM,OAAM4E,KAAKknC,KAAK,GAAMxpB,GAAW,KAC7D,EACAupB,IACAh0C,KAAKmjB,UAAUnjB,KAAKkY,OAAO5N,0BAAyB,SAAArD,IAC5CA,EAAEsD,WAAW,KAAmCtD,EAAEsD,WAAW,MAC7DypC,GAER,KACAh0C,KAAKmjB,UAAUxC,EAAIuzB,sBAAsBl0C,KAAKgqB,QAASrJ,EAAIwzB,UAAUC,OAAO,SAAA/0C,GACxEsF,EAAKib,SAAS1T,QAClB,IACJ,GAAC,CAAA5L,IAAA,QAAApB,MACD,WACI,OAAOu0C,EAAqBY,OAAS,IAAMr0C,KAAK0zC,MACpD,GAAC,CAAApzC,IAAA,aAAApB,MACD,WACI,OAAOc,KAAKgqB,OAChB,GAAC,CAAA1pB,IAAA,cAAApB,MACD,WACI,MAAO,CACHoE,SAAU,CAAEmC,WAAYzF,KAAKH,MAAM+S,gBAAiBzM,OAAQnG,KAAKH,MAAM+F,aACvEorC,WAAY,CAAC,GAErB,GAAC,CAAA1wC,IAAA,UAAApB,MACD,YACIuqB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAA+pB,EAAA9pB,WAAA,gBAAAzP,KAAA,MACAla,KAAKkY,OAAOq1B,oBAAoBvtC,KACpC,KAACyzC,CAAA,CAlDqB,CAAS/uB,EAAAA,IAoDnC+uB,EAAqBY,OAAS,qCAC9B,IAAIC,EAAqB,SAAAnrB,IAAAzO,EAAAA,EAAAA,GAAA45B,EAAAnrB,GAAA,IAAAhO,GAAAP,EAAAA,EAAAA,GAAA05B,GACrB,SAAAA,EAAYjjC,EAAIpI,EAAS6wB,GAAuB,IAAA/rB,EAUqB,OAVrBhO,EAAAA,EAAAA,GAAA,KAAAu0C,IAC5CvmC,EAAAoN,EAAAjB,KAAA,OACK7I,GAAKA,EACVtD,EAAK9E,QAAUA,EACf8E,EAAK+rB,sBAAwBA,EAE7B/rB,EAAKwmC,WAAa,IAClBxmC,EAAKymC,aAAezmC,EAAKoV,UAAU,IAAIwR,EAAAA,IACvC5mB,EAAK0mC,eAAiB,IAAI9f,EAAAA,GAC1B5mB,EAAK2mC,iBAAmB,EACxB3mC,EAAK4mC,oBAAsB1rC,EAAQ6f,8BAA8B/a,CACrE,CA+BC,OA/BAnO,EAAAA,EAAAA,GAAA00C,EAAA,EAAAh0C,IAAA,YAAApB,MACD,SAAUoE,EAAUia,EAAO6X,GACvB,OAAO32B,EAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAAg0C,EAAAllC,EAAA,YAAAhP,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA3B,MAAA,OAexB,OAdLw1C,EAAc50C,KAAK00C,mBACzB10C,KAAK60C,kBAAoBD,EACzB50C,KAAKyK,QACLzK,KAAKw0C,aAAat1C,OAAQ41C,EAAAA,EAAAA,KAAkB,WACxC,IAAMj1C,EAAQ+D,EAAAA,EAAMC,cAAcP,GACZoM,EAAKilC,oBAAoBzsC,IAAI,CAAC,CAC5CrI,MAAOA,EACP6K,QAAS4oC,KAECnuC,OAAS,IACvBuK,EAAK+kC,eAAev1C,MAAQwQ,EAAKoqB,sBAAsBG,eAAewZ,EAAsB/jC,EAAK2B,GAAI3B,EAAKzG,QAASpJ,EAAO0d,EAAO6X,GAEzI,GAAGp1B,KAAKu0C,YAAYxzC,EAAAC,KAAA,EAAAD,EAAA3B,KAAA,EAEHg2B,EAAO,cAAAr0B,EAAAG,OAAA,SAAAH,EAAAc,MAAA,OAMnB,OANmBd,EAAAC,KAAA,EAGhBhB,KAAK60C,oBAAsBD,IAC3B50C,KAAKyK,QACLzK,KAAK60C,uBAAoBvzC,GAC5BP,EAAA4L,OAAA,4BAAA5L,EAAAQ,OAAA,GAAAX,EAAA,qBAGb,GAAC,CAAAN,IAAA,QAAApB,MACD,WACIc,KAAKw0C,aAAa/pC,QAClBzK,KAAK20C,oBAAoBlqC,QACzBzK,KAAKy0C,eAAehqC,OACxB,KAAC6pC,CAAA,CA3CoB,CAAuC5vB,EAAAA,IA6ChE4vB,EAAwB1tC,EAAW,CAC/Bc,EAAQ,EAAGgR,EAAAA,KACZ47B,E,mLCtIUS,EAAyB,SAAA/N,IAAAtsB,EAAAA,EAAAA,GAAAq6B,EAAA/N,GAAA,IAAArsB,GAAAC,EAAAA,EAAAA,GAAAm6B,GAClC,SAAAA,IAAc,OAAAh1C,EAAAA,EAAAA,GAAA,KAAAg1C,GAAAp6B,EAAAT,KAAA,KACJ,CACF7I,GAAI,sBACJtP,MAAOklC,EAAAA,GAAa,sBAAuB,yBAC3CC,MAAO,wBACP9kB,kBAAc9gB,EACdimC,OAAQ,CACJC,OAAQ,EACRa,OAAQhB,EAAAA,EAAkB2N,eAC1BvN,QAAS,OAGrB,CAUC,OAVA7nC,EAAAA,EAAAA,GAAAm1C,EAAA,EAAAz0C,IAAA,MAAApB,MACD,SAAI+1C,EAAW/8B,EAAQY,GAEnB,GADAA,EAAOA,GAAQ,CAAC,EACXZ,EAAO9K,WAAZ,CAGA,IAAM8nC,EAAYh9B,EAAOi9B,gBACzBD,EAAU7yC,MAAM+yC,mBAChBF,EAAUG,gBAAgBv8B,EAAKnH,OAAQ,EAAqC2jC,EAAAA,EAAmBC,oBAAoBL,EAAWA,EAAUM,oBACxIN,EAAUO,oBAAoB38B,EAAKnH,QAAQ,EAJ3C,CAKJ,KAACojC,CAAA,CAvBiC,CAASpN,EAAAA,KAyB/CiF,EAAAA,EAAAA,IAAqBmI,E,8nCC3BRW,EAAgB,WACzB,SAAAA,EAAYC,EAAWC,EAAeC,IAAM91C,EAAAA,EAAAA,GAAA,KAAA21C,GACxC11C,KAAK81C,WAAaH,EAClB31C,KAAK+1C,eAAiBH,EACtB51C,KAAKg2C,MAAQH,IAAQ,EACrB71C,KAAKi2C,oBAAsB,EAC3Bj2C,KAAKk2C,aAAe,KACpBl2C,KAAKm2C,sBAAwB,EAC7Bn2C,KAAKo2C,oBAAsB,CAC/B,CAqDC,OArDAx2C,EAAAA,EAAAA,GAAA81C,EAAA,EAAAp1C,IAAA,oBAAApB,MACD,SAAkBmD,EAAOg0C,GACrB,IAAIxzC,EAAI7C,KAAK81C,WACb91C,KAAKm2C,sBAAwB,EAC7Bn2C,KAAKo2C,oBAAsB,EACvBvzC,EAAE+P,gBAAkB/P,EAAEgQ,eAAiC,IAAhBhQ,EAAEgD,YACzC7F,KAAKo2C,oBAAsB,EAC3BvzC,EAAIA,EAAEyzC,eAAezzC,EAAEgQ,cAAgB,EAAGxQ,EAAMsM,iBAAiB9L,EAAEgQ,cAAgB,KAGvF,IADA,IAAM0jC,EAAc,GACX/uC,EAAI3E,EAAE+P,gBAAiBpL,GAAK3E,EAAEgQ,cAAerL,IAClD+uC,EAAYxyC,KAAK1B,EAAMwlB,eAAergB,IAE1C,IAAMgvC,EAAaD,EAAYjwB,KAAK,MACjB,KAAfkwB,GAEIx2C,KAAK+1C,iBACL/1C,KAAKm2C,wBACLn2C,KAAKo2C,uBAGTp2C,KAAKg2C,MACLK,EAAQI,iBAAiB,IAAI7yC,EAAAA,EAAMf,EAAEgQ,cAAexQ,EAAMsM,iBAAiB9L,EAAEgQ,eAAgBhQ,EAAEgQ,cAAgB,EAAG,GAAIhQ,EAAEgQ,gBAAkBxQ,EAAMq0C,eAAiB,GAAK,MAGjK12C,KAAK+1C,eAINM,EAAQI,iBAAiB,IAAI7yC,EAAAA,EAAMf,EAAE+P,gBAAiB,EAAG/P,EAAE+P,gBAAiB,GAAI4jC,EAAa,MAH7FH,EAAQI,iBAAiB,IAAI7yC,EAAAA,EAAMf,EAAEgQ,cAAexQ,EAAMsM,iBAAiB9L,EAAEgQ,eAAgBhQ,EAAEgQ,cAAexQ,EAAMsM,iBAAiB9L,EAAEgQ,gBAAiB,KAAO2jC,GAMvKx2C,KAAKk2C,aAAeG,EAAQM,eAAe9zC,GAC3C7C,KAAKi2C,oBAAsBj2C,KAAK81C,WAAWc,cAC/C,GAAC,CAAAt2C,IAAA,qBAAApB,MACD,SAAmBmD,EAAOw0C,GACtB,IAAIt3C,EAASs3C,EAAOC,oBAAoB92C,KAAKk2C,cAC7C,GAAmC,IAA/Bl2C,KAAKm2C,uBAA4D,IAA7Bn2C,KAAKo2C,oBAA2B,CACpE,IAAIxjC,EAAkBrT,EAAOqT,gBACzBhN,EAAcrG,EAAOqG,YACrBiN,EAAgBtT,EAAOsT,cACvBhN,EAAYtG,EAAOsG,UACY,IAA/B7F,KAAKm2C,wBACLvjC,GAAoC5S,KAAKm2C,sBACzCvwC,EAAc,GAEe,IAA7B5F,KAAKo2C,sBACLvjC,GAAgC7S,KAAKo2C,oBACrCvwC,EAAY,GAEhBtG,EAASw3C,EAAAA,EAAUC,oBAAoBpkC,EAAiBhN,EAAaiN,EAAehN,EAAW7F,KAAKi2C,oBACxG,CACA,OAAO12C,CACX,KAACm2C,CAAA,CA9DwB,G,4ECFzB9uC,EAA0C,SAAUC,EAAYC,EAAQxG,EAAKyG,GAC7E,IAA2HC,EAAvHC,EAAIC,UAAU/B,OAAQgC,EAAIF,EAAI,EAAIH,EAAkB,OAATC,EAAgBA,EAAOK,OAAOC,yBAAyBP,EAAQxG,GAAOyG,EACrH,GAAuB,kBAAZO,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQxG,EAAKyG,QACpH,IAAK,IAAIS,EAAIX,EAAW1B,OAAS,EAAGqC,GAAK,EAAGA,KAASR,EAAIH,EAAWW,MAAIL,GAAKF,EAAI,EAAID,EAAEG,GAAKF,EAAI,EAAID,EAAEF,EAAQxG,EAAK6G,GAAKH,EAAEF,EAAQxG,KAAS6G,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOK,eAAeX,EAAQxG,EAAK6G,GAAIA,CAChE,EACIO,EAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUd,EAAQxG,GAAOsH,EAAUd,EAAQxG,EAAKqH,EAAa,CACxE,EAUIsvC,EAAgB,WAChB,SAAAA,EAAYtB,EAAWuB,EAAcC,EAAYpd,IAA+Bh6B,EAAAA,EAAAA,GAAA,KAAAk3C,GAC5Ej3C,KAAK+5B,8BAAgCA,EACrC/5B,KAAK81C,WAAaH,EAClB31C,KAAKo3C,cAAgBF,EACrBl3C,KAAKq3C,YAAcF,EACnBn3C,KAAKk2C,aAAe,KACpBl2C,KAAKs3C,6BAA8B,CACvC,CA8TC,OA9TA13C,EAAAA,EAAAA,GAAAq3C,EAAA,EAAA32C,IAAA,oBAAApB,MACD,SAAkBmD,EAAOg0C,GACrB,IAAMkB,EAAiBl1C,EAAMq0C,eAC7B,GAAI12C,KAAKo3C,eAAiBp3C,KAAK81C,WAAWjjC,gBAAkB0kC,EACxDv3C,KAAKk2C,aAAeG,EAAQM,eAAe32C,KAAK81C,iBAGpD,GAAK91C,KAAKo3C,eAAqD,IAApCp3C,KAAK81C,WAAWljC,gBAA3C,CAIA5S,KAAKw3C,sBAAuB,EAC5B,IAAI30C,EAAI7C,KAAK81C,WACTjzC,EAAE+P,gBAAkB/P,EAAEgQ,eAAiC,IAAhBhQ,EAAEgD,YACzC7F,KAAKw3C,sBAAuB,EAC5B30C,EAAIA,EAAEyzC,eAAezzC,EAAEgQ,cAAgB,EAAGxQ,EAAMsM,iBAAiB9L,EAAEgQ,cAAgB,KAEvF,IAAA4kC,EAA8Cp1C,EAAMkiB,aAA5CD,EAAOmzB,EAAPnzB,QAASozB,EAAUD,EAAVC,WAAYC,EAAYF,EAAZE,aACvBC,EAAkB53C,KAAK63C,qBAAqBvzB,EAASozB,EAAYC,GACjEG,EAAe,CACjBhyC,aAAc,CACVG,cAAe,SAACR,GACZ,OAAOpD,EAAMyD,aAAaG,cAAcR,EAC5C,EACAsyC,cAAe,WACX,OAAO11C,EAAM01C,eACjB,EACAtZ,wBAAyB,SAACh5B,EAAYU,GAClC,OAAO9D,EAAMo8B,wBAAwBh5B,EAAYU,EACrD,GAEJ0hB,eAAgB,MAEpB,GAAIhlB,EAAE+P,kBAAoB/P,EAAEgQ,eAA+D,IAA9CxQ,EAAMsM,iBAAiB9L,EAAE+P,iBAAwB,CAE1F,IAAMnN,EAAa5C,EAAE+P,gBACfolC,EAAmBh4C,KAAKo3C,cAAgB3xC,EAAa,EAAIA,EAAa,EAC5B,IAA5CpD,EAAMsM,iBAAiBqpC,GAGvB3B,EAAQI,iBAAiB,IAAI7yC,EAAAA,EAAM,EAAG,EAAG,EAAG,GAAI,OAIhDyyC,EAAQI,iBAAiB,IAAI7yC,EAAAA,EAAM6B,EAAY,EAAGA,EAAY,GAAIpD,EAAMwlB,eAAemwB,IAEvF3B,EAAQI,iBAAiB,IAAI7yC,EAAAA,EAAMo0C,EAAiB,EAAGA,EAAiB31C,EAAMsM,iBAAiBqpC,IAAmB,OAGtHn1C,EAAI,IAAIk0C,EAAAA,EAAUiB,EAAiB,EAAGA,EAAiB,EAC3D,KACK,CACD,IAAIC,EACAC,EACJ,GAAIl4C,KAAKo3C,cAAe,CACpBa,EAAmBp1C,EAAEgQ,cAAgB,EACrCqlC,EAAiB71C,EAAMwlB,eAAeowB,GAEtC5B,EAAQI,iBAAiB,IAAI7yC,EAAAA,EAAMq0C,EAAmB,EAAG51C,EAAMsM,iBAAiBspC,EAAmB,GAAIA,EAAkB51C,EAAMsM,iBAAiBspC,IAAoB,MACpK,IAAIE,EAAgBD,EACpB,GAAIl4C,KAAKo4C,iBAAiB/1C,EAAOQ,GAAI,CACjC,IAAMw1C,EAAwBr4C,KAAKs4C,eAAej2C,EAAOu1C,EAAiBtzB,EAAS2zB,EAAkBp1C,EAAE+P,gBAAkB,GAEzH,GAA8B,OAA1BylC,EAAgC,CAChC,IAAME,EAAiBttB,EAAAA,GAA6B5oB,EAAMwlB,eAAeowB,IACnEO,EAAcH,EAAwBI,EAAAA,EAAwBF,EAAgBj0B,GAC9Eo0B,EAAiBD,EAAAA,EAA2BD,EAAal0B,EAASqzB,GACxEQ,EAAgBO,EAAiB14C,KAAKi5B,UAAUif,EACpD,KACK,CAEDJ,EAAajwB,eAAiB,SAACpiB,GAC3B,OAAIA,IAAe5C,EAAE+P,gBACVvQ,EAAMwlB,eAAeowB,GAGrB51C,EAAMwlB,eAAepiB,EAEpC,EACA,IAAMkzC,GAAqBC,EAAAA,EAAAA,IAAqB54C,KAAKq3C,YAAaS,EAAcz1C,EAAMo8B,wBAAwBwZ,EAAkB,GAAIp1C,EAAE+P,gBAAiBglC,EAAiB53C,KAAK+5B,+BAC7K,GAA2B,OAAvB4e,EAA6B,CAC7B,IAAMJ,EAAiBttB,EAAAA,GAA6B5oB,EAAMwlB,eAAeowB,IACnEO,EAAcC,EAAAA,EAAwBE,EAAoBr0B,GAEhE,GAAIk0B,IADgBC,EAAAA,EAAwBF,EAAgBj0B,GAC3B,CAC7B,IAAMo0B,EAAiBD,EAAAA,EAA2BD,EAAal0B,EAASqzB,GACxEQ,EAAgBO,EAAiB14C,KAAKi5B,UAAUif,EACpD,CACJ,CACJ,CAGA7B,EAAQI,iBAAiB,IAAI7yC,EAAAA,EAAMf,EAAE+P,gBAAiB,EAAG/P,EAAE+P,gBAAiB,GAAIulC,EAAgB,MAChG,IAAMU,EAAM74C,KAAK84C,yBAAyBz2C,EAAOu1C,EAAiBtzB,EAASzhB,EAAE+P,gBAAiBqlC,EAAkBE,GAEhH,GAAY,OAARU,EACY,IAARA,GACA74C,KAAK+4C,4BAA4B12C,EAAOg0C,EAASxzC,EAAGyhB,EAASqzB,EAAckB,OAG9E,CAEDf,EAAajwB,eAAiB,SAACpiB,GAC3B,OAAIA,IAAe5C,EAAE+P,gBACVulC,EAEF1yC,GAAc5C,EAAE+P,gBAAkB,GAAKnN,GAAc5C,EAAEgQ,cAAgB,EACrExQ,EAAMwlB,eAAepiB,EAAa,GAGlCpD,EAAMwlB,eAAepiB,EAEpC,EACA,IAAMuzC,GAA2BJ,EAAAA,EAAAA,IAAqB54C,KAAKq3C,YAAaS,EAAcz1C,EAAMo8B,wBAAwBwZ,EAAkB,GAAIp1C,EAAE+P,gBAAkB,EAAGglC,EAAiB53C,KAAK+5B,+BACvL,GAAiC,OAA7Bif,EAAmC,CACnC,IAAMT,EAAiBttB,EAAAA,GAA6B5oB,EAAMwlB,eAAehlB,EAAE+P,kBACrE4lC,EAAcC,EAAAA,EAAwBO,EAA0B10B,GAChE20B,EAAcR,EAAAA,EAAwBF,EAAgBj0B,GAC5D,GAAIk0B,IAAgBS,EAAa,CAC7B,IAAMC,EAAiBV,EAAcS,EACrCj5C,KAAK+4C,4BAA4B12C,EAAOg0C,EAASxzC,EAAGyhB,EAASqzB,EAAcuB,EAC/E,CACJ,CACJ,CACJ,MAGI7C,EAAQI,iBAAiB,IAAI7yC,EAAAA,EAAMf,EAAE+P,gBAAiB,EAAG/P,EAAE+P,gBAAiB,GAAIulC,EAAgB,KAExG,MAQI,GANAF,EAAmBp1C,EAAE+P,gBAAkB,EACvCslC,EAAiB71C,EAAMwlB,eAAeowB,GAEtC5B,EAAQI,iBAAiB,IAAI7yC,EAAAA,EAAMq0C,EAAkB,EAAGA,EAAmB,EAAG,GAAI,MAElF5B,EAAQI,iBAAiB,IAAI7yC,EAAAA,EAAMf,EAAEgQ,cAAexQ,EAAMsM,iBAAiB9L,EAAEgQ,eAAgBhQ,EAAEgQ,cAAexQ,EAAMsM,iBAAiB9L,EAAEgQ,gBAAiB,KAAOqlC,GAC3Jl4C,KAAKo4C,iBAAiB/1C,EAAOQ,GAAI,CACjCi1C,EAAajwB,eAAiB,SAACpiB,GAC3B,OAAIA,IAAewyC,EACR51C,EAAMwlB,eAAehlB,EAAE+P,iBAGvBvQ,EAAMwlB,eAAepiB,EAEpC,EACA,IAAMozC,EAAM74C,KAAKs4C,eAAej2C,EAAOu1C,EAAiBtzB,EAASzhB,EAAE+P,gBAAiB/P,EAAE+P,gBAAkB,GAExG,GAAY,OAARimC,EACY,IAARA,GACA74C,KAAK+4C,4BAA4B12C,EAAOg0C,EAASxzC,EAAGyhB,EAASqzB,EAAckB,OAG9E,CAED,IAAMM,GAAoBP,EAAAA,EAAAA,IAAqB54C,KAAKq3C,YAAaS,EAAcz1C,EAAMo8B,wBAAwB57B,EAAE+P,gBAAiB,GAAIqlC,EAAkBL,EAAiB53C,KAAK+5B,+BAC5K,GAA0B,OAAtBof,EAA4B,CAE5B,IAAMC,EAAYnuB,EAAAA,GAA6B5oB,EAAMwlB,eAAehlB,EAAE+P,kBAChE4lC,EAAcC,EAAAA,EAAwBU,EAAmB70B,GACzD20B,EAAcR,EAAAA,EAAwBW,EAAW90B,GACvD,GAAIk0B,IAAgBS,EAAa,CAC7B,IAAMC,EAAiBV,EAAcS,EACrCj5C,KAAK+4C,4BAA4B12C,EAAOg0C,EAASxzC,EAAGyhB,EAASqzB,EAAcuB,EAC/E,CACJ,CACJ,CACJ,CAER,CACAl5C,KAAKk2C,aAAeG,EAAQM,eAAe9zC,EAhK3C,MAFI7C,KAAKk2C,aAAeG,EAAQM,eAAe32C,KAAK81C,WAmKxD,GAAC,CAAAx1C,IAAA,uBAAApB,MACD,SAAqBolB,EAASozB,EAAYC,GACtC,MAAO,CACH0B,YAAa,SAACC,GACV,OAAOC,EAAAA,EAAaF,YAAYC,EAAaA,EAAYn0C,OAAS,EAAGmf,EAASozB,EAAYC,EAC9F,EACA6B,cAAe,SAACF,GACZ,OAAOC,EAAAA,EAAaC,cAAcF,EAAaA,EAAYn0C,OAAS,EAAGmf,EAASozB,EAAYC,EAChG,EAER,GAAC,CAAAr3C,IAAA,mBAAApB,MACD,SAAiBmD,EAAOu1C,EAAiBtzB,EAAS9e,EAAMi0C,GACpD,GAAIA,EAAO,CACP,IAAIC,EAAcD,EAAMH,YACpBG,EAAME,eAAiBC,EAAAA,GAAa5pC,MAG/BypC,EAAME,eAAiBC,EAAAA,GAAaC,OAFzCH,EAAcD,EAAMH,YAAcG,EAAM98B,WAKnC88B,EAAME,eAAiBC,EAAAA,GAAaE,cACzCJ,EAAcD,EAAMH,YAEfG,EAAME,eAAiBC,EAAAA,GAAaG,UACzCL,EAAc9B,EAAgB4B,cAAcC,EAAMH,aAAeG,EAAM98B,YAE3E,IAAMu7B,EAAiB71C,EAAMwlB,eAAeriB,GAC5C,GAAIxF,KAAKi5B,UAAUif,GAAgB8B,QAAQh6C,KAAKi5B,UAAUygB,KAAiB,EAAG,CAC1E,IAAMnB,EAAiBttB,EAAAA,GAA6B5oB,EAAMwlB,eAAeriB,IACrEkzC,EAAiBztB,EAAAA,GAA6ByuB,GAC5CO,GAA+BC,EAAAA,EAAAA,IAAkB73C,EAAOmD,EAAMxF,KAAK+5B,+BAMzE,OALqC,OAAjCkgB,GAAwE,EAA/BA,IACzCvB,EAAiBd,EAAgB4B,cAAcd,IAE/BD,EAAAA,EAAwBC,EAAgBp0B,GACxCm0B,EAAAA,EAAwBF,EAAgBj0B,EAEhE,CACJ,CACA,OAAO,IACX,GACA,CAAAhkB,IAAA,2BAAApB,MASA,SAAyBmD,EAAOu1C,EAAiBtzB,EAAS9e,EAAM20C,EAAuBC,GACnF,GAAInvB,EAAAA,GAA+BmvB,IAAwB,EAAG,CAE1D,IAAMvqB,EAAYxtB,EAAMsM,iBAAiBwrC,GACnCV,GAAQY,EAAAA,EAAAA,GAAer6C,KAAKq3C,YAAah1C,EAAO,IAAIuB,EAAAA,EAAMu2C,EAAuBtqB,EAAWsqB,EAAuBtqB,GAAY7vB,KAAK+5B,+BAC1I,OAAO/5B,KAAKs6C,iBAAiBj4C,EAAOu1C,EAAiBtzB,EAAS9e,EAAMi0C,EACxE,CAII,IADA,IAAIc,EAAqB/0C,EAAO,EACzB+0C,GAAsB,GAAG,CAC5B,IAAMC,EAAcn4C,EAAMwlB,eAAe0yB,GAEzC,GADyBtvB,EAAAA,GAA+BuvB,IAChC,EACpB,MAEJD,GACJ,CACA,GAAIA,EAAqB,GAAK/0C,EAAOnD,EAAMq0C,eACvC,OAAO,KAEX,IAAM7mB,EAAYxtB,EAAMsM,iBAAiB4rC,GACnCd,GAAQY,EAAAA,EAAAA,GAAer6C,KAAKq3C,YAAah1C,EAAO,IAAIuB,EAAAA,EAAM22C,EAAoB1qB,EAAW0qB,EAAoB1qB,GAAY7vB,KAAK+5B,+BACpI,OAAO/5B,KAAKs6C,iBAAiBj4C,EAAOu1C,EAAiBtzB,EAAS9e,EAAMi0C,EAE5E,GAAC,CAAAn5C,IAAA,iBAAApB,MACD,SAAemD,EAAOu1C,EAAiBtzB,EAAS9e,EAAMi1C,EAAcC,GAEhE,IADA,IAAIH,EAAqBE,EAClBF,GAAsB,GAAG,CAE5B,IAAIC,OAAW,EAQf,GANIA,EADAD,IAAuBE,QAAqCn5C,IAArBo5C,EACzBA,EAGAr4C,EAAMwlB,eAAe0yB,GAEdtvB,EAAAA,GAA+BuvB,IAChC,EACpB,MAEJD,GACJ,CACA,GAAIA,EAAqB,GAAK/0C,EAAOnD,EAAMq0C,eACvC,OAAO,KAEX,IAAM7mB,EAAYxtB,EAAMsM,iBAAiB4rC,GACnCd,GAAQY,EAAAA,EAAAA,GAAer6C,KAAKq3C,YAAah1C,EAAO,IAAIuB,EAAAA,EAAM22C,EAAoB1qB,EAAW0qB,EAAoB1qB,GAAY7vB,KAAK+5B,+BACpI,OAAO/5B,KAAKs6C,iBAAiBj4C,EAAOu1C,EAAiBtzB,EAAS9e,EAAMi0C,EACxE,GAAC,CAAAn5C,IAAA,YAAApB,MACD,SAAUmZ,GACN,OAAOA,EAAIhI,QAAQ,OAAQ,GAC/B,GAAC,CAAA/P,IAAA,mBAAApB,MACD,SAAiBmD,EAAOszC,GACpB,GAAI31C,KAAKq3C,YAAc,EACnB,OAAO,EAGX,IAAKh1C,EAAMyD,aAAa60C,kBAAkBhF,EAAU/iC,iBAChD,OAAO,EAEX,IAAMgoC,EAA2Bv4C,EAAMo8B,wBAAwBkX,EAAU/iC,gBAAiB,GAE1F,OAAIgoC,IAD2Bv4C,EAAMo8B,wBAAwBkX,EAAU9iC,cAAe,IAI2B,OAA7G7S,KAAK+5B,8BAA8B4E,yBAAyBic,GAA0BC,kBAI9F,GAAC,CAAAv6C,IAAA,8BAAApB,MACD,SAA4BmD,EAAOg0C,EAASxzC,EAAGyhB,EAASqzB,EAAczxC,GAClE,IAAK,IAAIsB,EAAI3E,EAAE+P,gBAAiBpL,GAAK3E,EAAEgQ,cAAerL,IAAK,CACvD,IAAMgzC,EAAcn4C,EAAMwlB,eAAergB,GACnCszC,EAAiB7vB,EAAAA,GAA6BuvB,GAE9CO,EADoBtC,EAAAA,EAAwBqC,EAAgBx2B,GACzBpe,EACnC80C,EAAYvC,EAAAA,EAA2BsC,EAAcz2B,EAASqzB,GAChEqD,IAAcF,IACdzE,EAAQI,iBAAiB,IAAI7yC,EAAAA,EAAM4D,EAAG,EAAGA,EAAGszC,EAAe31C,OAAS,GAAI61C,GACpExzC,IAAM3E,EAAEgQ,eAAiBhQ,EAAEgD,WAAai1C,EAAe31C,OAAS,GAAmB,KAAd61C,IAGrEh7C,KAAKs3C,6BAA8B,GAG/C,CACJ,GAAC,CAAAh3C,IAAA,qBAAApB,MACD,SAAmBmD,EAAOw0C,GACtB,IAAIt3C,EAASs3C,EAAOC,oBAAoB92C,KAAKk2C,cAO7C,OANIl2C,KAAKw3C,uBACLj4C,EAASA,EAAO+2C,eAAe/2C,EAAOsT,cAAgB,EAAG,IAEzD7S,KAAKs3C,6BAA+B/3C,EAAOqT,gBAAkBrT,EAAOsT,gBACpEtT,EAASA,EAAO+2C,eAAe/2C,EAAOsT,cAAe,IAElDtT,CACX,KAAC03C,CAAA,CAtUe,GAwUpBA,EAAmBrwC,EAAW,CAC1Bc,EAAQ,EAAGmvB,EAAAA,KACZogB,GC1VI,IAAMgE,EAAgB,WAOzB,SAAAA,EAAYtF,EAAWuF,IAAYn7C,EAAAA,EAAAA,GAAA,KAAAk7C,GAC/Bj7C,KAAK21C,UAAYA,EACjB31C,KAAKk7C,WAAaA,EAClBl7C,KAAKm7C,YAAc,IACvB,CAyBC,OAzBAv7C,EAAAA,EAAAA,GAAAq7C,EAAA,EAAA36C,IAAA,oBAAApB,MACD,SAAkBmD,EAAOg0C,GACrB,IAAM+E,EAyDd,SAAmB/4C,EAAOszC,EAAWuF,GACjC,IAAM94C,EAAOi5C,EAAYh5C,EAAOszC,EAAWuF,GAC3C,IAAK94C,EACD,OAAO,KAEX,OAAOgO,EAAAA,EAAcC,QAAQ,IAAIzM,EAAAA,EAAMxB,EAAKwQ,gBAAiB,EAAGxQ,EAAKyQ,cAAexQ,EAAMsM,iBAAiBvM,EAAKyQ,gBAAiBzQ,EAAKomB,MAAMlC,KAAK,MACrJ,CA/DmBg1B,CAAUj5C,EAAOrC,KAAK21C,UAAW31C,KAAKk7C,YAC7CE,GACA/E,EAAQI,iBAAiB2E,EAAGv7C,MAAOu7C,EAAG7qC,MAE1CvQ,KAAKm7C,YAAc9E,EAAQM,eAAe32C,KAAK21C,UACnD,GAAC,CAAAr1C,IAAA,qBAAApB,MACD,SAAmBmD,EAAOw0C,GACtB,OAAOA,EAAOC,oBAAoB92C,KAAKm7C,YAC3C,IAAC,EAAA76C,IAAA,cAAApB,MApBD,WAII,OAHK+7C,EAAiBM,YAClBN,EAAiBM,UAAY,IAAIC,KAAKC,UAEnCR,EAAiBM,SAC5B,GAAC,CAAAj7C,IAAA,SAAApB,MAgBD,SAAcmD,EAAOszC,EAAWuF,GAC5B,GAAc,OAAV74C,EACA,OAAO,EAEX,IAAMD,EAAOi5C,EAAYh5C,EAAOszC,EAAWuF,GAC3C,IAAK94C,EACD,OAAO,EAEX,IAAK,IAAIoF,EAAI,EAAGqjB,EAAMzoB,EAAKs5C,OAAOv2C,OAAQqC,EAAIqjB,EAAKrjB,IAC/C,GAAIpF,EAAKs5C,OAAOl0C,KAAOpF,EAAKomB,MAAMhhB,GAC9B,OAAO,EAGf,OAAO,CACX,KAACyzC,CAAA,CApCwB,GAuC7B,SAASI,EAAYh5C,EAAOszC,EAAWuF,GACnC,IAAMtoC,EAAkB+iC,EAAU/iC,gBAC9BC,EAAgB8iC,EAAU9iC,cAK9B,GAJ4B,IAAxB8iC,EAAU9vC,WACVgN,IAGAD,GAAmBC,EACnB,OAAO,KAIX,IAFA,IAAM8oC,EAAc,GAEXl2C,EAAamN,EAAiBnN,GAAcoN,EAAepN,IAChEk2C,EAAY53C,KAAK1B,EAAMwlB,eAAepiB,IAE1C,IAAIm2C,EAASD,EAAY3zB,MAAM,GAM/B,OALA4zB,EAAO13C,KAAK+2C,EAAiBY,cAAcv3C,UAExB,IAAf42C,IACAU,EAASA,EAAO92C,WAEb,CACH8N,gBAAiBA,EACjBC,cAAeA,EACf6oC,OAAQC,EACRnzB,MAAOozB,EAEf,CA5BAX,EAAiBM,UAAY,K,0BCtBvBO,EAAuB,SAAA9U,IAAAtsB,EAAAA,EAAAA,GAAAohC,EAAA9U,GAAA,IAAArsB,GAAAC,EAAAA,EAAAA,GAAAkhC,GACzB,SAAAA,EAAYC,EAAMzoC,GAAM,IAAAzS,EAEH,OAFGd,EAAAA,EAAAA,GAAA,KAAA+7C,IACpBj7C,EAAA8Z,EAAAT,KAAA,KAAM5G,IACDyoC,KAAOA,EAAKl7C,CACrB,CA+BC,OA/BAjB,EAAAA,EAAAA,GAAAk8C,EAAA,EAAAx7C,IAAA,MAAApB,MACD,SAAI+1C,EAAW/8B,GACX,GAAKA,EAAO9K,WAAZ,CAGA,IAAM4uC,EAAa9jC,EAAO+jC,gBAAgBl3C,KAAI,SAAC4wC,EAAW/sC,GAAK,MAAM,CAAE+sC,UAAAA,EAAW/sC,MAAAA,EAAOszC,QAAQ,EAAO,IACxGF,EAAW93C,MAAK,SAACC,EAAGC,GAAC,OAAKR,EAAAA,EAAM6O,yBAAyBtO,EAAEwxC,UAAWvxC,EAAEuxC,UAAU,IAGlF,IADA,IAAI30C,EAAOg7C,EAAW,GACbx0C,EAAI,EAAGA,EAAIw0C,EAAW72C,OAAQqC,IAAK,CACxC,IAAM20C,EAAOH,EAAWx0C,GACpBxG,EAAK20C,UAAU9iC,gBAAkBspC,EAAKxG,UAAU/iC,kBAE5C5R,EAAK4H,MAAQuzC,EAAKvzC,MAElBuzC,EAAKD,QAAS,GAIdl7C,EAAKk7C,QAAS,EACdl7C,EAAOm7C,GAGnB,CACA,IACkC15C,EAD5B8oC,EAAW,GAAG5oC,GAAAC,EAAAA,EAAAA,GACIo5C,GAAU,IAAlC,IAAAr5C,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAtD,MAAoC,KAAzBm2C,EAASlzC,EAAAvD,MAChBqsC,EAASxnC,KAAK,IAAI2xC,EAAiBC,EAAUA,UAAW31C,KAAK+7C,KAAMpG,EAAUuG,QACjF,CAAC,OAAAl4C,GAAArB,EAAAtD,EAAA2E,EAAA,SAAArB,EAAAsB,GAAA,CACDiU,EAAO4lB,eACP5lB,EAAOkkC,gBAAgBp8C,KAAKqR,GAAIk6B,GAChCrzB,EAAO4lB,cA1BP,CA2BJ,KAACge,CAAA,CAnCwB,CAASnU,EAAAA,IAqChC0U,EAAiB,SAAAC,IAAA5hC,EAAAA,EAAAA,GAAA2hC,EAAAC,GAAA,IAAAnhC,GAAAP,EAAAA,EAAAA,GAAAyhC,GACnB,SAAAA,IAAc,OAAAt8C,EAAAA,EAAAA,GAAA,KAAAs8C,GAAAlhC,EAAAjB,KAAA,MACJ,EAAO,CACT7I,GAAI,kCACJtP,MAAOklC,EAAAA,GAAa,eAAgB,gBACpCC,MAAO,eACP9kB,aAAcilB,EAAAA,EAAkBC,SAChCC,OAAQ,CACJc,OAAQhB,EAAAA,EAAkBkV,gBAC1B9U,QAAS,KACT+U,MAAO,CAAE/U,QAAS,MAClBD,OAAQ,KAEZc,SAAU,CACNC,OAAQhpB,EAAAA,GAAOk9B,qBACfroB,MAAO,SACP7W,MAAO0pB,EAAAA,GAAa,CAAE3mC,IAAK,gBAAiBuwC,QAAS,CAAC,0BAA4B,kBAClFpI,MAAO,IAGnB,CAAC,OAAA7oC,EAAAA,EAAAA,GAAAy8C,EAAA,CApBkB,CAASP,GAsB1BY,EAAmB,SAAAC,IAAAjiC,EAAAA,EAAAA,GAAAgiC,EAAAC,GAAA,IAAA1U,GAAArtB,EAAAA,EAAAA,GAAA8hC,GACrB,SAAAA,IAAc,OAAA38C,EAAAA,EAAAA,GAAA,KAAA28C,GAAAzU,EAAA/tB,KAAA,MACJ,EAAM,CACR7I,GAAI,oCACJtP,MAAOklC,EAAAA,GAAa,iBAAkB,kBACtCC,MAAO,iBACP9kB,aAAcilB,EAAAA,EAAkBC,SAChCC,OAAQ,CACJc,OAAQhB,EAAAA,EAAkBkV,gBAC1B9U,QAAS,KACT+U,MAAO,CAAE/U,QAAS,MAClBD,OAAQ,KAEZc,SAAU,CACNC,OAAQhpB,EAAAA,GAAOk9B,qBACfroB,MAAO,SACP7W,MAAO0pB,EAAAA,GAAa,CAAE3mC,IAAK,kBAAmBuwC,QAAS,CAAC,0BAA4B,oBACpFpI,MAAO,IAGnB,CAAC,OAAA7oC,EAAAA,EAAAA,GAAA88C,EAAA,CApBoB,CAASZ,GAsBrBc,EAAwB,SAAA/U,IAAAntB,EAAAA,EAAAA,GAAAkiC,EAAA/U,GAAA,IAAAO,GAAAxtB,EAAAA,EAAAA,GAAAgiC,GACjC,SAAAA,IAAc,OAAA78C,EAAAA,EAAAA,GAAA,KAAA68C,GAAAxU,EAAAluB,KAAA,KACJ,CACF7I,GAAI,mCACJtP,MAAOklC,EAAAA,GAAa,qBAAsB,uBAC1CC,MAAO,sBACP9kB,aAAcilB,EAAAA,EAAkBC,SAChCgB,SAAU,CACNC,OAAQhpB,EAAAA,GAAOk9B,qBACfroB,MAAO,SACP7W,MAAO0pB,EAAAA,GAAa,CAAE3mC,IAAK,uBAAwBuwC,QAAS,CAAC,0BAA4B,yBACzFpI,MAAO,IAGnB,CAoBC,OApBA7oC,EAAAA,EAAAA,GAAAg9C,EAAA,EAAAt8C,IAAA,MAAApB,MACD,SAAIiY,EAAUe,EAAQY,GAClB,GAAKZ,EAAO9K,WAAZ,CAGA,IAGkCjK,EAH5BooC,EAAW,GACXyQ,EAAa9jC,EAAO+jC,gBACpB55C,EAAQ6V,EAAOrN,WAAWzH,GAAAR,EAAAA,EAAAA,GACRo5C,GAAU,IAAlC,IAAA54C,EAAAP,MAAAM,EAAAC,EAAAN,KAAAtD,MAAoC,KAAzBm2C,EAASxyC,EAAAjE,MAChB,GAAIy2C,EAAU5hC,UACVw3B,EAASxnC,KAAK,IAAI2xC,EAAiBC,GAAW,QAE7C,CACD,IAAMkH,EAAkB,IAAI9F,EAAAA,EAAUpB,EAAU9iC,cAAe8iC,EAAU9vC,UAAW8vC,EAAU9iC,cAAe8iC,EAAU9vC,WACvH0lC,EAASxnC,KAAK,IAAI+4C,EAAAA,GAA8BD,EAAiBx6C,EAAMouB,gBAAgBklB,IAC3F,CACJ,CAAC,OAAA3xC,GAAAZ,EAAA/D,EAAA2E,EAAA,SAAAZ,EAAAa,GAAA,CACDiU,EAAO4lB,eACP5lB,EAAOkkC,gBAAgBp8C,KAAKqR,GAAIk6B,GAChCrzB,EAAO4lB,cAfP,CAgBJ,KAAC8e,CAAA,CAlCgC,CAASjV,EAAAA,IAqCxCoV,EAAuB,SAAA/U,IAAAttB,EAAAA,EAAAA,GAAAqiC,EAAA/U,GAAA,IAAAa,GAAAjuB,EAAAA,EAAAA,GAAAmiC,GACzB,SAAAA,EAAYhB,EAAMzoC,GAAM,IAAA3O,EAEH,OAFG5E,EAAAA,EAAAA,GAAA,KAAAg9C,IACpBp4C,EAAAkkC,EAAA3uB,KAAA,KAAM5G,IACDyoC,KAAOA,EAAKp3C,CACrB,CAYC,OAZA/E,EAAAA,EAAAA,GAAAm9C,EAAA,EAAAz8C,IAAA,MAAApB,MACD,SAAIiY,EAAUe,GACV,IAIkCpG,EAJ5B+a,EAA+B1V,EAASlP,IAAI4uB,EAAAA,IAC5C0U,EAAW,GACXyQ,EAAa9jC,EAAO+jC,iBAAmB,GACvC9E,EAAaj/B,EAAOvN,UAAU,IAAkCoH,GAAAnP,EAAAA,EAAAA,GAC9Co5C,GAAU,IAAlC,IAAAjqC,EAAAlP,MAAAiP,EAAAC,EAAAjP,KAAAtD,MAAoC,KAAzBm2C,EAAS7jC,EAAA5S,MAChBqsC,EAASxnC,KAAK,IAAIkzC,EAAiBtB,EAAW31C,KAAK+7C,KAAM5E,EAAYtqB,GACzE,CAAC,OAAA7oB,GAAA+N,EAAA1S,EAAA2E,EAAA,SAAA+N,EAAA9N,GAAA,CACDiU,EAAO4lB,eACP5lB,EAAOkkC,gBAAgBp8C,KAAKqR,GAAIk6B,GAChCrzB,EAAO4lB,cACX,KAACif,CAAA,CAhBwB,CAASpV,EAAAA,IAkBhCqV,EAAiB,SAAAC,IAAAviC,EAAAA,EAAAA,GAAAsiC,EAAAC,GAAA,IAAAhU,GAAAruB,EAAAA,EAAAA,GAAAoiC,GACnB,SAAAA,IAAc,OAAAj9C,EAAAA,EAAAA,GAAA,KAAAi9C,GAAA/T,EAAA/uB,KAAA,MACJ,EAAO,CACT7I,GAAI,kCACJtP,MAAOklC,EAAAA,GAAa,eAAgB,gBACpCC,MAAO,eACP9kB,aAAcilB,EAAAA,EAAkBC,SAChCC,OAAQ,CACJc,OAAQhB,EAAAA,EAAkBkV,gBAC1B9U,QAAS,IACT+U,MAAO,CAAE/U,QAAS,KAClBD,OAAQ,KAEZc,SAAU,CACNC,OAAQhpB,EAAAA,GAAOk9B,qBACfroB,MAAO,SACP7W,MAAO0pB,EAAAA,GAAa,CAAE3mC,IAAK,gBAAiBuwC,QAAS,CAAC,0BAA4B,kBAClFpI,MAAO,IAGnB,CAAC,OAAA7oC,EAAAA,EAAAA,GAAAo9C,EAAA,CApBkB,CAASD,GAsB1BG,EAAmB,SAAAC,IAAAziC,EAAAA,EAAAA,GAAAwiC,EAAAC,GAAA,IAAA1T,GAAA7uB,EAAAA,EAAAA,GAAAsiC,GACrB,SAAAA,IAAc,OAAAn9C,EAAAA,EAAAA,GAAA,KAAAm9C,GAAAzT,EAAAvvB,KAAA,MACJ,EAAM,CACR7I,GAAI,oCACJtP,MAAOklC,EAAAA,GAAa,iBAAkB,kBACtCC,MAAO,iBACP9kB,aAAcilB,EAAAA,EAAkBC,SAChCC,OAAQ,CACJc,OAAQhB,EAAAA,EAAkBkV,gBAC1B9U,QAAS,IACT+U,MAAO,CAAE/U,QAAS,KAClBD,OAAQ,KAEZc,SAAU,CACNC,OAAQhpB,EAAAA,GAAOk9B,qBACfroB,MAAO,SACP7W,MAAO0pB,EAAAA,GAAa,CAAE3mC,IAAK,kBAAmBuwC,QAAS,CAAC,0BAA4B,oBACpFpI,MAAO,IAGnB,CAAC,OAAA7oC,EAAAA,EAAAA,GAAAs9C,EAAA,CApBoB,CAASH,GAsBrBK,EAAuB,SAAAjV,IAAAztB,EAAAA,EAAAA,GAAA0iC,EAAAjV,GAAA,IAAAyB,GAAAhvB,EAAAA,EAAAA,GAAAwiC,GAChC,SAAAA,EAAYlC,EAAY5nC,GAAM,IAAAvF,EAEG,OAFHhO,EAAAA,EAAAA,GAAA,KAAAq9C,IAC1BrvC,EAAA67B,EAAA1vB,KAAA,KAAM5G,IACD4nC,WAAaA,EAAWntC,CACjC,CAeC,OAfAnO,EAAAA,EAAAA,GAAAw9C,EAAA,EAAA98C,IAAA,MAAApB,MACD,SAAI+1C,EAAW/8B,GACX,IACkC7F,EAD5B2pC,EAAa9jC,EAAO+jC,iBAAmB,GAAGzpC,GAAA5P,EAAAA,EAAAA,GACxBo5C,GAAU,IAAlC,IAAAxpC,EAAA3P,MAAAwP,EAAAG,EAAA1P,KAAAtD,MAAoC,KAAzBm2C,EAAStjC,EAAAnT,MAChB,IAAK+7C,EAAiBoC,OAAOnlC,EAAOrN,WAAY8qC,EAAW31C,KAAKk7C,YAC5D,MAER,CAAC,OAAAl3C,GAAAwO,EAAAnT,EAAA2E,EAAA,SAAAwO,EAAAvO,GAAA,CAED,IADA,IAAMsnC,EAAW,GACR/jC,EAAI,EAAGqjB,EAAMmxB,EAAW72C,OAAQqC,EAAIqjB,EAAKrjB,IAC9C+jC,EAAS/jC,GAAK,IAAIyzC,EAAiBe,EAAWx0C,GAAIxH,KAAKk7C,YAE3DhjC,EAAO4lB,eACP5lB,EAAOkkC,gBAAgBp8C,KAAKqR,GAAIk6B,GAChCrzB,EAAO4lB,cACX,KAACsf,CAAA,CAnB+B,CAASzV,EAAAA,IAqBhC2V,EAAwB,SAAAC,IAAA7iC,EAAAA,EAAAA,GAAA4iC,EAAAC,GAAA,IAAAC,GAAA5iC,EAAAA,EAAAA,GAAA0iC,GACjC,SAAAA,IAAc,OAAAv9C,EAAAA,EAAAA,GAAA,KAAAu9C,GAAAE,EAAAtjC,KAAA,MACJ,EAAO,CACT7I,GAAI,mCACJtP,MAAOklC,EAAAA,GAAa,sBAAuB,wBAC3CC,MAAO,uBACP9kB,aAAcilB,EAAAA,EAAkBC,UAExC,CAAC,OAAA1nC,EAAAA,EAAAA,GAAA09C,EAAA,CARgC,CAASF,GAUjCK,EAAyB,SAAAC,IAAAhjC,EAAAA,EAAAA,GAAA+iC,EAAAC,GAAA,IAAAC,GAAA/iC,EAAAA,EAAAA,GAAA6iC,GAClC,SAAAA,IAAc,OAAA19C,EAAAA,EAAAA,GAAA,KAAA09C,GAAAE,EAAAzjC,KAAA,MACJ,EAAM,CACR7I,GAAI,oCACJtP,MAAOklC,EAAAA,GAAa,uBAAwB,yBAC5CC,MAAO,wBACP9kB,aAAcilB,EAAAA,EAAkBC,UAExC,CAAC,OAAA1nC,EAAAA,EAAAA,GAAA69C,EAAA,CARiC,CAASL,GAUlCQ,EAA0B,SAAAhV,IAAAluB,EAAAA,EAAAA,GAAAkjC,EAAAhV,GAAA,IAAAiV,GAAAjjC,EAAAA,EAAAA,GAAAgjC,GACnC,SAAAA,IAAc,OAAA79C,EAAAA,EAAAA,GAAA,KAAA69C,GAAAC,EAAA3jC,KAAA,KACJ,CACF7I,GAAI,qCACJtP,MAAOklC,EAAAA,GAAa,yBAA0B,0BAC9CC,MAAO,yBACP9kB,aAAcilB,EAAAA,EAAkBC,UAExC,CAiCC,OAjCA1nC,EAAAA,EAAAA,GAAAg+C,EAAA,EAAAt9C,IAAA,MAAApB,MACD,SAAI+1C,EAAW/8B,GACX,GAAKA,EAAO9K,WAAZ,CAGA,IAAM/K,EAAQ6V,EAAOrN,WACrB,GAA6B,IAAzBxI,EAAMq0C,gBAAsD,IAA9Br0C,EAAMsM,iBAAiB,GAAzD,CAGA,IAG8CyG,EAHxCxF,EAAQ,GACRkuC,EAAiB,GACnBC,EAAe,EAAE1oC,GAAAzS,EAAAA,EAAAA,GACGsV,EAAO+jC,iBAAe,IAA9C,IAAA5mC,EAAAxS,MAAAuS,EAAAC,EAAAvS,KAAAtD,MAAgD,CAG5C,IAH4C,IAArCm2C,EAASvgC,EAAAlW,MACV8+C,EAAc,IAAIx7C,IAClByhB,EAAQ,GACLzc,EAAImuC,EAAU/iC,gBAAiBpL,GAAKmuC,EAAU9iC,cAAerL,IAAK,CACvE,IAAMhC,EAAOnD,EAAMwlB,eAAergB,GAC9Bw2C,EAAYlzC,IAAItF,KAGpBye,EAAMlgB,KAAKyB,GACXw4C,EAAY96C,IAAIsC,GACpB,CACA,IAAMy4C,EAAqB,IAAIlH,EAAAA,EAAUpB,EAAU/iC,gBAAiB,EAAG+iC,EAAU9iC,cAAexQ,EAAMsM,iBAAiBgnC,EAAU9iC,gBAC3HqrC,EAAyBvI,EAAU/iC,gBAAkBmrC,EACrDI,EAAiB,IAAIpH,EAAAA,EAAUmH,EAAwB,EAAGA,EAAyBj6B,EAAM9e,OAAS,EAAG8e,EAAMA,EAAM9e,OAAS,GAAGA,QACnIyK,EAAM7L,KAAKqM,EAAAA,EAAcC,QAAQ4tC,EAAoBh6B,EAAMqC,KAAK,QAChEw3B,EAAe/5C,KAAKo6C,GACpBJ,GAAiBpI,EAAU9iC,cAAgB8iC,EAAU/iC,gBAAkB,EAAKqR,EAAM9e,MACtF,CAAC,OAAAnB,GAAAqR,EAAAhW,EAAA2E,EAAA,SAAAqR,EAAApR,GAAA,CACDiU,EAAO4lB,eACP5lB,EAAO1H,aAAaxQ,KAAKqR,GAAIzB,EAAOkuC,GACpC5lC,EAAO4lB,cAxBP,CAJA,CA6BJ,KAAC8f,CAAA,CAzCkC,CAASjW,EAAAA,IA2CnCyW,EAA4B,SAAApV,IAAAtuB,EAAAA,EAAAA,GAAA0jC,EAAApV,GAAA,IAAAqV,GAAAzjC,EAAAA,EAAAA,GAAAwjC,GACrC,SAAAA,IAAc,OAAAr+C,EAAAA,EAAAA,GAAA,KAAAq+C,GAAAC,EAAAnkC,KAAA,KACJ,CACF7I,GAAI+sC,EAA6BhmC,GACjCrW,MAAOklC,EAAAA,GAAa,+BAAgC,4BACpDC,MAAO,2BACP9kB,aAAcilB,EAAAA,EAAkBC,SAChCC,OAAQ,CACJc,OAAQhB,EAAAA,EAAkBkV,gBAC1B9U,SAAS6W,EAAAA,EAAAA,IAAS,KAAmD,MACrE9W,OAAQ,MAGpB,CAiBC,OAjBA5nC,EAAAA,EAAAA,GAAAw+C,EAAA,EAAA99C,IAAA,MAAApB,MACD,SAAI+1C,EAAW/8B,EAAQY,GACnB,IAAIylC,EAAU,GACM,cAAhBzlC,EAAK6rB,SAIL4Z,GAAWrmC,EAAO+jC,iBAAmB,IAAIl3C,KAAI,SAAAlC,GAAC,OAAI,IAAIwB,EAAAA,EAASxB,EAAE27C,mBAAoB37C,EAAE47C,eAAe,KAE1G,IAAM9I,EAAYz9B,EAAOwmC,eACzB,GAAkB,OAAd/I,EAAJ,CAGA,IAAMlnC,EAAU,IAAIkwC,EAAAA,EAA8BhJ,EAAW4I,GAC7DrmC,EAAO4lB,eACP5lB,EAAOkkC,gBAAgBp8C,KAAKqR,GAAI,CAAC5C,IACjCyJ,EAAO4lB,cAJP,CAKJ,KAACsgB,CAAA,CA9BoC,CAASzW,EAAAA,IAgClDyW,EAA6BhmC,GAAK,uCAC3B,IAAMwmC,EAAiB,SAAApV,IAAA9uB,EAAAA,EAAAA,GAAAkkC,EAAApV,GAAA,IAAAqV,GAAAjkC,EAAAA,EAAAA,GAAAgkC,GAC1B,SAAAA,IAAc,OAAA7+C,EAAAA,EAAAA,GAAA,KAAA6+C,GAAAC,EAAA3kC,KAAA,KACJ,CACF7I,GAAI,4BACJtP,MAAOklC,EAAAA,GAAa,eAAgB,eACpCC,MAAO,cACP9kB,aAAcilB,EAAAA,EAAkBC,SAChCC,OAAQ,CACJc,OAAQhB,EAAAA,EAAkB2N,eAC1BvN,QAAS,KACTD,OAAQ,MAGpB,CA0EC,OA1EA5nC,EAAAA,EAAAA,GAAAg/C,EAAA,EAAAt+C,IAAA,MAAApB,MACD,SAAI+1C,EAAW/8B,GACX,GAAKA,EAAO9K,WAAZ,CAGA,IAAM0xC,EAAM9+C,KAAK++C,kBAAkB7mC,GAC7B7V,EAAQ6V,EAAOrN,WACrB,GAA6B,IAAzBxI,EAAMq0C,gBAAsD,IAA9Br0C,EAAMsM,iBAAiB,GAAzD,CAOA,IAHA,IAAIovC,EAAe,EACbnuC,EAAQ,GACRovC,EAAc,GACXx3C,EAAI,EAAGqjB,EAAMi0B,EAAI35C,OAAQqC,EAAIqjB,EAAKrjB,IAAK,CAC5C,IAAM4zC,EAAK0D,EAAIt3C,GACXoL,EAAkBwoC,EAAGxoC,gBACrBC,EAAgBuoC,EAAGvoC,cACnBjN,EAAc,EACdC,EAAYxD,EAAMsM,iBAAiBkE,GACnCA,EAAgBxQ,EAAMq0C,gBACtB7jC,GAAiB,EACjBhN,EAAY,GAEP+M,EAAkB,IACvBA,GAAmB,EACnBhN,EAAcvD,EAAMsM,iBAAiBiE,IAEzChD,EAAM7L,KAAKqM,EAAAA,EAAcC,QAAQ,IAAI0mC,EAAAA,EAAUnkC,EAAiBhN,EAAaiN,EAAehN,GAAY,KACxGm5C,EAAYj7C,KAAK,IAAIgzC,EAAAA,EAAUnkC,EAAkBmrC,EAAc3C,EAAGqD,eAAgB7rC,EAAkBmrC,EAAc3C,EAAGqD,iBACrHV,GAAiB3C,EAAGvoC,cAAgBuoC,EAAGxoC,gBAAkB,CAC7D,CACAsF,EAAO4lB,eACP5lB,EAAO1H,aAAaxQ,KAAKqR,GAAIzB,EAAOovC,GACpC9mC,EAAO4lB,cAxBP,CANA,CA+BJ,GAAC,CAAAx9B,IAAA,oBAAApB,MACD,SAAkBgZ,GAEd,IAAM+mC,EAAa/mC,EAAO+jC,gBAAgBl3C,KAAI,SAAClC,GAC3C,IAAIgQ,EAAgBhQ,EAAEgQ,cAItB,OAHIhQ,EAAE+P,gBAAkB/P,EAAEgQ,eAAiC,IAAhBhQ,EAAEgD,YACzCgN,GAAiB,GAEd,CACHD,gBAAiB/P,EAAE+P,gBACnBssC,qBAAsBr8C,EAAEq8C,qBACxBrsC,cAAeA,EACf4rC,eAAgB57C,EAAE47C,eAE1B,IAEAQ,EAAW/6C,MAAK,SAACC,EAAGC,GAChB,OAAID,EAAEyO,kBAAoBxO,EAAEwO,gBACjBzO,EAAE0O,cAAgBzO,EAAEyO,cAExB1O,EAAEyO,gBAAkBxO,EAAEwO,eACjC,IAIA,IAFA,IAAMusC,EAAmB,GACrBC,EAAoBH,EAAW,GAC1Bz3C,EAAI,EAAGA,EAAIy3C,EAAW95C,OAAQqC,IAC/B43C,EAAkBvsC,cAAgB,GAAKosC,EAAWz3C,GAAGoL,gBAErDwsC,EAAkBvsC,cAAgBosC,EAAWz3C,GAAGqL,eAIhDssC,EAAiBp7C,KAAKq7C,GACtBA,EAAoBH,EAAWz3C,IAKvC,OADA23C,EAAiBp7C,KAAKq7C,GACfD,CACX,KAACP,CAAA,CAvFyB,CAASjX,EAAAA,IAyF1B0X,EAAiB,SAAAC,IAAA5kC,EAAAA,EAAAA,GAAA2kC,EAAAC,GAAA,IAAAC,GAAA3kC,EAAAA,EAAAA,GAAAykC,GAC1B,SAAAA,IAAc,OAAAt/C,EAAAA,EAAAA,GAAA,KAAAs/C,GAAAE,EAAArlC,KAAA,KACJ,CACF7I,GAAI,4BACJtP,MAAOklC,EAAAA,GAAa,eAAgB,eACpCC,MAAO,cACP9kB,aAAcilB,EAAAA,EAAkBC,SAChCC,OAAQ,CACJc,OAAQhB,EAAAA,EAAkBkV,gBAC1B9U,QAAS,KACTD,OAAQ,MAGpB,CASC,OATA5nC,EAAAA,EAAAA,GAAAy/C,EAAA,EAAA/+C,IAAA,MAAApB,MACD,SAAI+1C,EAAW/8B,GACX,IAAMg9B,EAAYh9B,EAAOi9B,gBACpBD,IAGLh9B,EAAO4lB,eACP5lB,EAAOkkC,gBAAgBp8C,KAAKqR,GAAImuC,EAAAA,GAAeC,OAAOvK,EAAUwK,aAAcxnC,EAAOrN,WAAYqN,EAAO+jC,kBACxG/jC,EAAO4lB,eACX,KAACuhB,CAAA,CAtByB,CAAS1X,EAAAA,IAwBjCgY,EAAkB,SAAAC,IAAAllC,EAAAA,EAAAA,GAAAilC,EAAAC,GAAA,IAAAC,GAAAjlC,EAAAA,EAAAA,GAAA+kC,GACpB,SAAAA,IAAc,OAAA5/C,EAAAA,EAAAA,GAAA,KAAA4/C,GAAAE,EAAA3lC,KAAA,KACJ,CACF7I,GAAI,6BACJtP,MAAOklC,EAAAA,GAAa,gBAAiB,gBACrCC,MAAO,eACP9kB,aAAcilB,EAAAA,EAAkBC,SAChCC,OAAQ,CACJc,OAAQhB,EAAAA,EAAkBkV,gBAC1B9U,QAAS,KACTD,OAAQ,MAGpB,CAGC,OAHA5nC,EAAAA,EAAAA,GAAA+/C,EAAA,EAAAr/C,IAAA,MAAApB,MACD,SAAI+1C,EAAW/8B,GACX4sB,EAAAA,oBAAoBiV,QAAQ75B,iBAAiB+0B,EAAW/8B,EAAQ,KACpE,KAACynC,CAAA,CAhBmB,CAAShY,EAAAA,IAkBpBmY,EAAsB,SAAAC,IAAArlC,EAAAA,EAAAA,GAAAolC,EAAAC,GAAA,IAAAC,GAAAplC,EAAAA,EAAAA,GAAAklC,GAC/B,SAAAA,IAAc,OAAA//C,EAAAA,EAAAA,GAAA,KAAA+/C,GAAAE,EAAA9lC,KAAA,KACJ,CACF7I,GAAI,iCACJtP,MAAOklC,EAAAA,GAAa,qBAAsB,qBAC1CC,MAAO,oBACP9kB,aAAcilB,EAAAA,EAAkBC,SAChCC,OAAQ,CACJc,OAAQhB,EAAAA,EAAkBkV,gBAC1B9U,QAAS,KACTD,OAAQ,MAGpB,CAQC,OARA5nC,EAAAA,EAAAA,GAAAkgD,EAAA,EAAAx/C,IAAA,MAAApB,MACD,SAAI+1C,EAAW/8B,GACX,IAAMg9B,EAAYh9B,EAAOi9B,gBACpBD,IAGLh9B,EAAO4lB,eACP5lB,EAAOkkC,gBAAgBp8C,KAAKqR,GAAImuC,EAAAA,GAAeS,iBAAiB/K,EAAUwK,aAAcxnC,EAAOrN,WAAYqN,EAAO+jC,kBACtH,KAAC6D,CAAA,CArB8B,CAASnY,EAAAA,IAuB/BuY,EAAqB,SAAAC,IAAAzlC,EAAAA,EAAAA,GAAAwlC,EAAAC,GAAA,IAAAC,GAAAxlC,EAAAA,EAAAA,GAAAslC,GAC9B,SAAAA,IAAc,OAAAngD,EAAAA,EAAAA,GAAA,KAAAmgD,GAAAE,EAAAlmC,KAAA,KACJ,CACF7I,GAAI,gCACJtP,MAAOklC,EAAAA,GAAa,oBAAqB,qBACzCC,MAAO,oBACP9kB,aAAcilB,EAAAA,EAAkBC,SAChCC,OAAQ,CACJc,OAAQhB,EAAAA,EAAkBkV,gBAC1B9U,QAAS,KACTD,OAAQ,MAGpB,CAQC,OARA5nC,EAAAA,EAAAA,GAAAsgD,EAAA,EAAA5/C,IAAA,MAAApB,MACD,SAAI+1C,EAAW/8B,GACX,IAAMg9B,EAAYh9B,EAAOi9B,gBACpBD,IAGLh9B,EAAO4lB,eACP5lB,EAAOkkC,gBAAgBp8C,KAAKqR,GAAImuC,EAAAA,GAAea,gBAAgBnL,EAAUwK,aAAcxnC,EAAOrN,WAAYqN,EAAO+jC,kBACrH,KAACiE,CAAA,CArB6B,CAASvY,EAAAA,IAuB9B2Y,EAAiC,SAAAC,IAAA7lC,EAAAA,EAAAA,GAAA4lC,EAAAC,GAAA,IAAAC,GAAA5lC,EAAAA,EAAAA,GAAA0lC,GAAA,SAAAA,IAAA,OAAAvgD,EAAAA,EAAAA,GAAA,KAAAugD,GAAAE,EAAA9gD,MAAA,KAAAwH,UAAA,CA2BzC,OA3ByCtH,EAAAA,EAAAA,GAAA0gD,EAAA,EAAAhgD,IAAA,MAAApB,MAC1C,SAAI+1C,EAAW/8B,GACX,GAAKA,EAAO9K,WAAZ,CAOA,IAJA,IAAMqzC,EAAgBvoC,EAAOwmC,eACvBgC,EAAiB1gD,KAAK2gD,mBAAmBzoC,GAEzC0oC,EAAkB,GACfp5C,EAAI,EAAGq5C,EAAQH,EAAev7C,OAAS,EAAGqC,EAAIq5C,EAAOr5C,IAAK,CAC/D,IAAM3H,EAAQ6gD,EAAel5C,GACvBs5C,EAAYJ,EAAel5C,EAAI,GACW,OAA5C5D,EAAAA,EAAM2sB,gBAAgB1wB,EAAOihD,GAC7BF,EAAgB78C,KAAKlE,GAGrB6gD,EAAel5C,EAAI,GAAK5D,EAAAA,EAAMmP,UAAUlT,EAAOihD,EAEvD,CACAF,EAAgB78C,KAAK28C,EAAeA,EAAev7C,OAAS,IAC5D,IAAM24C,EAAiB99C,KAAK+gD,mBAAmBN,EAAeG,GACxDhxC,EAAQgxC,EAAgB77C,KAAI,SAAAlF,GAC9B,OAAOuQ,EAAAA,EAAcC,QAAQxQ,EAAO,GACxC,IACAqY,EAAO4lB,eACP5lB,EAAO1H,aAAaxQ,KAAKqR,GAAIzB,EAAOkuC,GACpC5lC,EAAO4lB,cAtBP,CAuBJ,KAACwiB,CAAA,CA3ByC,CAAS3Y,EAAAA,IA6B1CqZ,EAAmB,SAAAC,IAAAvmC,EAAAA,EAAAA,GAAAsmC,EAAAC,GAAA,IAAAC,GAAAtmC,EAAAA,EAAAA,GAAAomC,GAC5B,SAAAA,IAAc,OAAAjhD,EAAAA,EAAAA,GAAA,KAAAihD,GAAAE,EAAAhnC,KAAA,KACJ,CACF7I,GAAI,gBACJtP,MAAOklC,EAAAA,GAAa,sBAAuB,mBAC3CC,MAAO,kBACP9kB,aAAcilB,EAAAA,EAAkBC,SAChCC,OAAQ,CACJc,OAAQhB,EAAAA,EAAkB2N,eAC1BvN,QAAS,EACT0Z,IAAK,CAAE1Z,QAAS,MAChBD,OAAQ,MAGpB,CAsDC,OAtDA5nC,EAAAA,EAAAA,GAAAohD,EAAA,EAAA1gD,IAAA,qBAAApB,MACD,SAAmBuhD,EAAeC,GAC9B,IAAIU,EAAmB,KACjBtD,EAAiB,GACnBuD,EAAe,EAqBnB,OApBAX,EAAeY,SAAQ,SAAAzhD,GACnB,IAAI0hD,EACJ,GAAwB,IAApB1hD,EAAMgG,WAAmBw7C,EAAe,EAAG,CAC3C,IAAMG,EAAe3hD,EAAM+S,gBAAkByuC,EAC7CE,EAAY,IAAIxK,EAAAA,EAAUyK,EAAc3hD,EAAM+F,YAAa47C,EAAc3hD,EAAM+F,YACnF,MAEI27C,EAAY,IAAIxK,EAAAA,EAAUl3C,EAAM+S,gBAAiB/S,EAAM+F,YAAa/F,EAAM+S,gBAAiB/S,EAAM+F,aAErGy7C,GAAgBxhD,EAAMgT,cAAgBhT,EAAM+S,gBACxC/S,EAAM0wB,gBAAgBkwB,GACtBW,EAAmBG,EAGnBzD,EAAe/5C,KAAKw9C,EAE5B,IACIH,GACAtD,EAAe/lB,QAAQqpB,GAEpBtD,CACX,GAAC,CAAAx9C,IAAA,qBAAApB,MACD,SAAmBgZ,GACf,IAAM8jC,EAAa9jC,EAAO+jC,gBAC1B,GAAmB,OAAfD,EACA,MAAO,GAEX,IAAI0E,EAAiB1E,EACf35C,EAAQ6V,EAAOrN,WACrB,OAAc,OAAVxI,EACO,IAEXq+C,EAAex8C,KAAKN,EAAAA,EAAM6O,0BAC1BiuC,EAAiBA,EAAe37C,KAAI,SAAA4wC,GAChC,GAAIA,EAAU5hC,UAAW,CACrB,GAA8B,IAA1B4hC,EAAU/vC,YAAmB,CAC7B,IAAM67C,EAAiB10C,KAAKC,IAAI,EAAG2oC,EAAU/iC,gBAAkB,GACzD8uC,EAAiD,IAA9B/L,EAAU/iC,gBAAwB,EAAIvQ,EAAMs/C,cAAcF,GAAkB,EACrG,OAAO,IAAI79C,EAAAA,EAAM69C,EAAgBC,EAAkB/L,EAAU/iC,gBAAiB,EAClF,CAEI,OAAO,IAAIhP,EAAAA,EAAM+xC,EAAU/iC,gBAAiB,EAAG+iC,EAAU/iC,gBAAiB+iC,EAAU/vC,YAE5F,CAEI,OAAO,IAAIhC,EAAAA,EAAM+xC,EAAU/iC,gBAAiB,EAAG+iC,EAAU9iC,cAAe8iC,EAAU9vC,UAE1F,IAEJ,KAACm7C,CAAA,CApE2B,CAASV,GAsE5BsB,EAAoB,SAAAC,IAAAnnC,EAAAA,EAAAA,GAAAknC,EAAAC,GAAA,IAAAC,GAAAlnC,EAAAA,EAAAA,GAAAgnC,GAC7B,SAAAA,IAAc,OAAA7hD,EAAAA,EAAAA,GAAA,KAAA6hD,GAAAE,EAAA5nC,KAAA,KACJ,CACF7I,GAAI,iBACJtP,MAAOklC,EAAAA,GAAa,uBAAwB,oBAC5CC,MAAO,mBACP9kB,aAAcilB,EAAAA,EAAkBC,SAChCC,OAAQ,CACJc,OAAQhB,EAAAA,EAAkB2N,eAC1BvN,QAAS,EACT0Z,IAAK,CAAE1Z,QAAS,IAAkDsL,UAAW,CAAC,OAC9EvL,OAAQ,MAGpB,CA0CC,OA1CA5nC,EAAAA,EAAAA,GAAAgiD,EAAA,EAAAthD,IAAA,qBAAApB,MACD,SAAmBuhD,EAAeC,GAG9B,IAFA,IAAIU,EAAmB,KACjBtD,EAAiB,GACdt2C,EAAI,EAAGqjB,EAAM61B,EAAev7C,OAAoBqC,EAAIqjB,EAAKrjB,IAAK,CACnE,IAAM3H,EAAQ6gD,EAAel5C,GACvB+5C,EAAY,IAAIxK,EAAAA,EAAUl3C,EAAM+S,gBAFY,EAEc/S,EAAM+F,YAAa/F,EAAM+S,gBAFvC,EAEiE/S,EAAM+F,aACrH/F,EAAM0wB,gBAAgBkwB,GACtBW,EAAmBG,EAGnBzD,EAAe/5C,KAAKw9C,EAE5B,CAIA,OAHIH,GACAtD,EAAe/lB,QAAQqpB,GAEpBtD,CACX,GAAC,CAAAx9C,IAAA,qBAAApB,MACD,SAAmBgZ,GACf,IAAM7V,EAAQ6V,EAAOrN,WACrB,GAAc,OAAVxI,EACA,MAAO,GAEX,IAAM25C,EAAa9jC,EAAO+jC,gBAC1B,GAAmB,OAAfD,EACA,MAAO,GAEX,IAAM0E,EAAiB1E,EAAWj3C,KAAI,SAACg9C,GACnC,GAAIA,EAAIhuC,UAAW,CACf,IAAM8b,EAAYxtB,EAAMsM,iBAAiBozC,EAAInvC,iBAC7C,OAAImvC,EAAIn8C,cAAgBiqB,EACb,IAAIjsB,EAAAA,EAAMm+C,EAAInvC,gBAAiBmvC,EAAIn8C,YAAam8C,EAAInvC,gBAAkB,EAAG,GAGzE,IAAIhP,EAAAA,EAAMm+C,EAAInvC,gBAAiBmvC,EAAIn8C,YAAam8C,EAAInvC,gBAAiBid,EAEpF,CACA,OAAOkyB,CACX,IAEA,OADArB,EAAex8C,KAAKN,EAAAA,EAAM6O,0BACnBiuC,CACX,KAACkB,CAAA,CAxD4B,CAAStB,GA0D7B0B,GAAe,SAAAC,IAAAvnC,EAAAA,EAAAA,GAAAsnC,EAAAC,GAAA,IAAAC,GAAAtnC,EAAAA,EAAAA,GAAAonC,GACxB,SAAAA,IAAc,OAAAjiD,EAAAA,EAAAA,GAAA,KAAAiiD,GAAAE,EAAAhoC,KAAA,KACJ,CACF7I,GAAI,0BACJtP,MAAOklC,EAAAA,GAAa,kBAAmB,cACvCC,MAAO,aACP9kB,aAAcilB,EAAAA,EAAkBC,SAChCC,OAAQ,CACJc,OAAQhB,EAAAA,EAAkBkV,gBAC1B9U,QAAS,EACT0Z,IAAK,CAAE1Z,QAAS,KAChBD,OAAQ,MAGpB,CA8HC,OA9HA5nC,EAAAA,EAAAA,GAAAoiD,EAAA,EAAA1hD,IAAA,MAAApB,MACD,SAAI+1C,EAAW/8B,GACX,IAAM8jC,EAAa9jC,EAAO+jC,gBAC1B,GAAmB,OAAfD,EAAJ,CAGA,IAAIyE,EAAgBvoC,EAAOwmC,eAC3B,GAAsB,OAAlB+B,EAAJ,CAGAzE,EAAW93C,KAAKN,EAAAA,EAAM6O,0BACtB,IAAM0vC,EAAoB,GACpBC,EAAgBpG,EAAWz1B,QAAO,SAAC87B,EAAepY,GACpD,OAAIoY,EAActuC,UACVsuC,EAAcxvC,gBAAkBo3B,EAAar3B,iBACzC6tC,EAAc6B,gBAAgBD,KAC9B5B,EAAgBxW,GAEbA,GAEPA,EAAar3B,gBAAkByvC,EAAcxvC,cAAgB,GAC7DsvC,EAAkBp+C,KAAKs+C,GAChBpY,GAGA,IAAI8M,EAAAA,EAAUsL,EAAczvC,gBAAiByvC,EAAcz8C,YAAaqkC,EAAap3B,cAAeo3B,EAAapkC,WAIxHokC,EAAar3B,gBAAkByvC,EAAcxvC,eAC7CsvC,EAAkBp+C,KAAKs+C,GAChBpY,GAGA,IAAI8M,EAAAA,EAAUsL,EAAczvC,gBAAiByvC,EAAcz8C,YAAaqkC,EAAap3B,cAAeo3B,EAAapkC,UAGpI,IACAs8C,EAAkBp+C,KAAKq+C,GACvB,IAAM//C,EAAQ6V,EAAOrN,WACrB,GAAc,OAAVxI,EAAJ,CAOA,IAJA,IAAMuN,EAAQ,GACRkuC,EAAiB,GACnBsD,EAAmBX,EACnB8B,EAAa,EACR/6C,EAAI,EAAGqjB,EAAMs3B,EAAkBh9C,OAAQqC,EAAIqjB,EAAKrjB,IAAK,CAC1D,IAAMmuC,EAAYwM,EAAkB36C,GAC9BoL,EAAkB+iC,EAAU/iC,gBAE9B4vC,EAAoB,EACpB3vC,OAAa,EAAEhN,OAAS,EACtB48C,EAA6BpgD,EAAMs/C,cAAchM,EAAU9iC,eAAiB8iC,EAAU9vC,UAC5F,GAAI8vC,EAAU5hC,WAAa4hC,EAAU/iC,kBAAoB+iC,EAAU9iC,cAAe,CAC9E,IAAMvP,EAAWqyC,EAAUjyC,mBACvBJ,EAASmC,WAAapD,EAAMq0C,gBAC5B7jC,EAAgBD,EAAkB,EAClC/M,EAAYxD,EAAMsM,iBAAiBkE,KAGnCA,EAAgBvP,EAASmC,WACzBI,EAAYxD,EAAMsM,iBAAiBrL,EAASmC,YAEpD,MAEIoN,EAAgB8iC,EAAU9iC,cAC1BhN,EAAYxD,EAAMsM,iBAAiBkE,GAGvC,IADA,IAAI6vC,EAAsBrgD,EAAMwlB,eAAejV,GACtCpL,EAAIoL,EAAkB,EAAGpL,GAAKqL,EAAerL,IAAK,CACvD,IAAMme,EAAWtjB,EAAMwlB,eAAergB,GAChCm7C,EAAwBtgD,EAAMugD,gCAAgCp7C,GACpE,GAAIm7C,GAAyB,EAAG,CAC5B,IAAIE,GAAc,EACU,KAAxBH,IACAG,GAAc,IAEdA,GAA+E,MAA/DH,EAAoB59B,OAAO49B,EAAoBv9C,OAAS,IACT,OAA/Du9C,EAAoB59B,OAAO49B,EAAoBv9C,OAAS,KACxD09C,GAAc,EACdH,EAAsBA,EAAoBryC,QAAQ,oBAAqB,MAE3E,IAAMyyC,EAAwBn9B,EAASS,OAAOu8B,EAAwB,GACtED,IAAwBG,EAAc,IAAM,IAAMC,EAE9CN,EADAK,EACoBC,EAAsB39C,OAAS,EAG/B29C,EAAsB39C,MAElD,MAEIq9C,EAAoB,CAE5B,CACA,IAAMO,EAAkB,IAAIn/C,EAAAA,EAAMgP,EA9Cd,EA8C4CC,EAAehN,GAC/E,IAAKk9C,EAAgBhvC,UAAW,CAC5B,IAAIivC,OAAe,EACfrN,EAAU5hC,WACVnE,EAAM7L,KAAKqM,EAAAA,EAAcC,QAAQ0yC,EAAiBL,IAClDM,EAAkB,IAAIjM,EAAAA,EAAUgM,EAAgBnwC,gBAAkB2vC,EAAYG,EAAoBv9C,OAASq9C,EAAoB,EAAG5vC,EAAkB2vC,EAAYG,EAAoBv9C,OAASq9C,EAAoB,IAG7M7M,EAAU/iC,kBAAoB+iC,EAAU9iC,eACxCjD,EAAM7L,KAAKqM,EAAAA,EAAcC,QAAQ0yC,EAAiBL,IAClDM,EAAkB,IAAIjM,EAAAA,EAAUpB,EAAU/iC,gBAAkB2vC,EAAY5M,EAAU/vC,YAAa+vC,EAAU9iC,cAAgB0vC,EAAY5M,EAAU9vC,aAG/I+J,EAAM7L,KAAKqM,EAAAA,EAAcC,QAAQ0yC,EAAiBL,IAClDM,EAAkB,IAAIjM,EAAAA,EAAUpB,EAAU/iC,gBAAkB2vC,EAAY5M,EAAU/vC,YAAa+vC,EAAU/iC,gBAAkB2vC,EAAYG,EAAoBv9C,OAASs9C,IAG9G,OAA1D7+C,EAAAA,EAAM2sB,gBAAgBwyB,EAAiBtC,GACvCW,EAAmB4B,EAGnBlF,EAAe/5C,KAAKi/C,EAE5B,CACAT,GAAcQ,EAAgBlwC,cAAgBkwC,EAAgBnwC,eAClE,CACAkrC,EAAe/lB,QAAQqpB,GACvBlpC,EAAO4lB,eACP5lB,EAAO1H,aAAaxQ,KAAKqR,GAAIzB,EAAOkuC,GACpC5lC,EAAO4lB,cAnFP,CAjCA,CAJA,CAyHJ,KAACkkB,CAAA,CA5IuB,CAASra,EAAAA,IA8IxBsb,GAAe,SAAAC,IAAAxoC,EAAAA,EAAAA,GAAAuoC,EAAAC,GAAA,IAAAC,GAAAvoC,EAAAA,EAAAA,GAAAqoC,GACxB,SAAAA,IAAc,OAAAljD,EAAAA,EAAAA,GAAA,KAAAkjD,GAAAE,EAAAjpC,KAAA,KACJ,CACF7I,GAAI,0BACJtP,MAAOklC,EAAAA,GAAa,mBAAoB,0CACxCC,MAAO,yCACP9kB,aAAcilB,EAAAA,EAAkBC,UAExC,CAqCC,OArCA1nC,EAAAA,EAAAA,GAAAqjD,EAAA,EAAA3iD,IAAA,MAAApB,MACD,SAAI+1C,EAAW/8B,GACX,IAAM8jC,EAAa9jC,EAAO+jC,gBAC1B,GAAmB,OAAfD,EAAJ,CAGA,IAAM35C,EAAQ6V,EAAOrN,WACrB,GAAc,OAAVxI,EAAJ,CAIA,IADA,IAAMkpC,EAAW,GACR/jC,EAAI,EAAGqjB,EAAMmxB,EAAW72C,OAAQqC,EAAIqjB,EAAKrjB,IAAK,CACnD,IAAMmuC,EAAYqG,EAAWx0C,GAC7B,GAAKmuC,EAAU5hC,UAAf,CAGA,IAAM8B,EAAS8/B,EAAUjyC,mBACnBmsB,EAAYxtB,EAAMsM,iBAAiBkH,EAAOpQ,YAChD,GAAIoQ,EAAO1P,QAAU0pB,EAAW,CAC5B,GAAIha,EAAOpQ,aAAepD,EAAMq0C,eAC5B,SAIJ,IAAMqM,EAAkB,IAAIn/C,EAAAA,EAAMiS,EAAOpQ,WAAYsH,KAAKC,IAAI,EAAG6I,EAAO1P,OAAS,GAAI0P,EAAOpQ,WAAa,EAAG,GACtG29C,EAAQ/gD,EAAMouB,gBAAgBsyB,GAAiBM,MAAM,IAAIv+C,UAAUwhB,KAAK,IAC9EilB,EAASxnC,KAAK,IAAIu/C,EAAAA,GAAe,IAAIvM,EAAAA,EAAUlhC,EAAOpQ,WAAYsH,KAAKC,IAAI,EAAG6I,EAAO1P,OAAS,GAAI0P,EAAOpQ,WAAa,EAAG,GAAI29C,GACjI,KACK,CACD,IAAML,EAAkB,IAAIn/C,EAAAA,EAAMiS,EAAOpQ,WAAYsH,KAAKC,IAAI,EAAG6I,EAAO1P,OAAS,GAAI0P,EAAOpQ,WAAYoQ,EAAO1P,OAAS,GAClHi9C,EAAQ/gD,EAAMouB,gBAAgBsyB,GAAiBM,MAAM,IAAIv+C,UAAUwhB,KAAK,IAC9EilB,EAASxnC,KAAK,IAAIw/C,EAAAA,GAAqCR,EAAiBK,EAAO,IAAIrM,EAAAA,EAAUlhC,EAAOpQ,WAAYoQ,EAAO1P,OAAS,EAAG0P,EAAOpQ,WAAYoQ,EAAO1P,OAAS,IAC1K,CAjBA,CAkBJ,CACA+R,EAAO4lB,eACP5lB,EAAOkkC,gBAAgBp8C,KAAKqR,GAAIk6B,GAChCrzB,EAAO4lB,cA3BP,CAJA,CAgCJ,KAACmlB,CAAA,CA7CuB,CAAStb,EAAAA,IA+CxB6b,GAAkB,SAAAC,IAAA/oC,EAAAA,EAAAA,GAAA8oC,EAAAC,GAAA,IAAAC,GAAA9oC,EAAAA,EAAAA,GAAA4oC,GAAA,SAAAA,IAAA,OAAAzjD,EAAAA,EAAAA,GAAA,KAAAyjD,GAAAE,EAAAhkD,MAAA,KAAAwH,UAAA,CA+B1B,OA/B0BtH,EAAAA,EAAAA,GAAA4jD,EAAA,EAAAljD,IAAA,MAAApB,MAC3B,SAAI+1C,EAAW/8B,GACX,IAAM8jC,EAAa9jC,EAAO+jC,gBAC1B,GAAmB,OAAfD,EAAJ,CAGA,IAAM35C,EAAQ6V,EAAOrN,WACrB,GAAc,OAAVxI,EAAJ,CAGA,IAEkCkU,EAF5BotC,EAAiBzrC,EAAOvN,UAAU,KAClCuF,EAAY,GAAGuG,GAAA7T,EAAAA,EAAAA,GACGo5C,GAAU,IAAlC,IAAAvlC,EAAA5T,MAAA0T,EAAAE,EAAA3T,KAAAtD,MAAoC,KAAzBm2C,EAASp/B,EAAArX,MAChB,GAAIy2C,EAAU5hC,UAAW,CACrB,IAAM8B,EAAS8/B,EAAUjyC,mBACnBgC,EAAOwS,EAAO0rC,4BAA4B/tC,GAChD,IAAKnQ,EACD,SAEJ,IAAMlC,EAAY,IAAII,EAAAA,EAAMiS,EAAOpQ,WAAYC,EAAKE,YAAaiQ,EAAOpQ,WAAYC,EAAKG,WACnF0K,EAAOlO,EAAMouB,gBAAgBjtB,GACnC0M,EAAUnM,KAAKqM,EAAAA,EAAcC,QAAQ7M,EAAWxD,KAAK6jD,YAAYtzC,EAAMozC,IAC3E,KACK,CACD,IAAMpzC,EAAOlO,EAAMouB,gBAAgBklB,GACnCzlC,EAAUnM,KAAKqM,EAAAA,EAAcC,QAAQslC,EAAW31C,KAAK6jD,YAAYtzC,EAAMozC,IAC3E,CACJ,CAAC,OAAA3/C,GAAAyS,EAAApX,EAAA2E,EAAA,SAAAyS,EAAAxS,GAAA,CACDiU,EAAO4lB,eACP5lB,EAAO1H,aAAaxQ,KAAKqR,GAAInB,GAC7BgI,EAAO4lB,cArBP,CAJA,CA0BJ,KAAC0lB,CAAA,CA/B0B,CAAS7b,EAAAA,IAiC3Bmc,GAAe,SAAAC,IAAArpC,EAAAA,EAAAA,GAAAopC,EAAAC,GAAA,IAAAC,GAAAppC,EAAAA,EAAAA,GAAAkpC,GACxB,SAAAA,IAAc,OAAA/jD,EAAAA,EAAAA,GAAA,KAAA+jD,GAAAE,EAAA9pC,KAAA,KACJ,CACF7I,GAAI,qCACJtP,MAAOklC,EAAAA,GAAa,8BAA+B,0BACnDC,MAAO,yBACP9kB,aAAcilB,EAAAA,EAAkBC,UAExC,CAGC,OAHA1nC,EAAAA,EAAAA,GAAAkkD,EAAA,EAAAxjD,IAAA,cAAApB,MACD,SAAYqR,EAAMozC,GACd,OAAOpzC,EAAK0zC,mBAChB,KAACH,CAAA,CAXuB,CAASN,IAaxBU,GAAe,SAAAC,IAAAzpC,EAAAA,EAAAA,GAAAwpC,EAAAC,GAAA,IAAAC,GAAAxpC,EAAAA,EAAAA,GAAAspC,GACxB,SAAAA,IAAc,OAAAnkD,EAAAA,EAAAA,GAAA,KAAAmkD,GAAAE,EAAAlqC,KAAA,KACJ,CACF7I,GAAI,qCACJtP,MAAOklC,EAAAA,GAAa,8BAA+B,0BACnDC,MAAO,yBACP9kB,aAAcilB,EAAAA,EAAkBC,UAExC,CAGC,OAHA1nC,EAAAA,EAAAA,GAAAskD,EAAA,EAAA5jD,IAAA,cAAApB,MACD,SAAYqR,EAAMozC,GACd,OAAOpzC,EAAK8zC,mBAChB,KAACH,CAAA,CAXuB,CAASV,IAa/Bc,GAAyB,WAC3B,SAAAA,EAAYC,EAAUC,IAAQzkD,EAAAA,EAAAA,GAAA,KAAAukD,GAC1BtkD,KAAKukD,SAAWA,EAChBvkD,KAAKwkD,OAASA,EACdxkD,KAAKykD,QAAU,KACfzkD,KAAK0kD,YAAa,CACtB,CAeC,OAfA9kD,EAAAA,EAAAA,GAAA0kD,EAAA,EAAAhkD,IAAA,MAAApB,MACD,WACI,IAAKc,KAAK0kD,WAAY,CAClB1kD,KAAK0kD,YAAa,EAClB,IACI1kD,KAAKykD,QAAU,IAAI5lB,OAAO7+B,KAAKukD,SAAUvkD,KAAKwkD,OAClD,CACA,MAAOxgD,GACH,CAER,CACA,OAAOhE,KAAKykD,OAChB,GAAC,CAAAnkD,IAAA,cAAApB,MACD,WACI,OAAuB,OAAfc,KAAKiI,KACjB,KAACq8C,CAAA,CArB0B,GAuBlBK,GAAe,SAAAC,IAAAlqC,EAAAA,EAAAA,GAAAiqC,EAAAC,GAAA,IAAAC,GAAAjqC,EAAAA,EAAAA,GAAA+pC,GACxB,SAAAA,IAAc,OAAA5kD,EAAAA,EAAAA,GAAA,KAAA4kD,GAAAE,EAAA3qC,KAAA,KACJ,CACF7I,GAAI,qCACJtP,MAAOklC,EAAAA,GAAa,8BAA+B,2BACnDC,MAAO,0BACP9kB,aAAcilB,EAAAA,EAAkBC,UAExC,CAUC,OAVA1nC,EAAAA,EAAAA,GAAA+kD,EAAA,EAAArkD,IAAA,cAAApB,MACD,SAAYqR,EAAMozC,GACd,IAAMmB,EAAgBH,EAAgBG,cAAc78C,MACpD,OAAK68C,EAIEv0C,EACF8zC,oBACAh0C,QAAQy0C,GAAe,SAAC1gD,GAAC,OAAKA,EAAE6/C,mBAAmB,IAJ7C1zC,CAKf,KAACo0C,CAAA,CAlBuB,CAASnB,IAoBrCmB,GAAgBG,cAAgB,IAAIR,GAA0B,2CAA8C,OACrG,IAAMS,GAAe,SAAAC,IAAAtqC,EAAAA,EAAAA,GAAAqqC,EAAAC,GAAA,IAAAC,GAAArqC,EAAAA,EAAAA,GAAAmqC,GACxB,SAAAA,IAAc,OAAAhlD,EAAAA,EAAAA,GAAA,KAAAglD,GAAAE,EAAA/qC,KAAA,KACJ,CACF7I,GAAI,qCACJtP,MAAOklC,EAAAA,GAAa,8BAA+B,2BACnDC,MAAO,0BACP9kB,aAAcilB,EAAAA,EAAkBC,UAExC,CAYC,OAZA1nC,EAAAA,EAAAA,GAAAmlD,EAAA,EAAAzkD,IAAA,cAAApB,MACD,SAAYqR,EAAMozC,GACd,IAAMuB,EAAeH,EAAgBG,aAAaj9C,MAC5Ck9C,EAAgBJ,EAAgBI,cAAcl9C,MACpD,OAAKi9C,GAAiBC,EAId50C,EACHF,QAAQ60C,EAAc,SACtB70C,QAAQ80C,EAAe,WACvBd,oBALM9zC,CAMf,KAACw0C,CAAA,CApBuB,CAASvB,IAsBrCuB,GAAgBG,aAAe,IAAIZ,GAA0B,qBAAsB,OACnFS,GAAgBI,cAAgB,IAAIb,GAA0B,qCAAsC,OAC7F,IAAMc,GAAe,SAAAC,IAAA3qC,EAAAA,EAAAA,GAAA0qC,EAAAC,GAAA,IAAAC,GAAA1qC,EAAAA,EAAAA,GAAAwqC,GACxB,SAAAA,IAAc,OAAArlD,EAAAA,EAAAA,GAAA,KAAAqlD,GAAAE,EAAAprC,KAAA,KACJ,CACF7I,GAAI,qCACJtP,MAAOklC,EAAAA,GAAa,8BAA+B,2BACnDC,MAAO,0BACP9kB,aAAcilB,EAAAA,EAAkBC,UAExC,CAWC,OAXA1nC,EAAAA,EAAAA,GAAAwlD,EAAA,EAAA9kD,IAAA,cAAApB,MACD,SAAYqR,EAAMozC,GACd,IAAM4B,EAAeH,EAAgBG,aAAat9C,MAClD,IAAKs9C,EAED,OAAOh1C,EAEX,IAAMi1C,EAAQj1C,EAAK8yC,MAAMkC,GAEzB,OADkBC,EAAMC,QACLD,EAAMzgD,KAAI,SAACW,GAAI,OAAKA,EAAKwgB,UAAU,EAAG,GAAG+9B,oBAAsBv+C,EAAKwgB,UAAU,EAAE,IAC9FI,KAAK,GACd,KAAC8+B,CAAA,CAnBuB,CAAS5B,IAqBrC4B,GAAgBG,aAAe,IAAIjB,GAA0B,UAAW,MACjE,IAAMoB,GAAe,SAAAC,IAAAjrC,EAAAA,EAAAA,GAAAgrC,EAAAC,GAAA,IAAAC,GAAAhrC,EAAAA,EAAAA,GAAA8qC,GASxB,SAAAA,IAAc,OAAA3lD,EAAAA,EAAAA,GAAA,KAAA2lD,GAAAE,EAAA1rC,KAAA,KACJ,CACF7I,GAAI,qCACJtP,MAAOklC,EAAAA,GAAa,8BAA+B,2BACnDC,MAAO,0BACP9kB,aAAcilB,EAAAA,EAAkBC,UAExC,CARC,OAQA1nC,EAAAA,EAAAA,GAAA8lD,EAAA,EAAAplD,IAAA,cAAApB,MACD,SAAYqR,EAAMs1C,GACd,IAAMX,EAAeQ,EAAgBR,aAAaj9C,MAC5Ck9C,EAAgBO,EAAgBP,cAAcl9C,MAC9C69C,EAAqBJ,EAAgBI,mBAAmB79C,MAC9D,OAAKi9C,GAAiBC,GAAkBW,EAIjCv1C,EACFF,QAAQy1C,EAAoB,SAC5Bz1C,QAAQ60C,EAAc,SACtB70C,QAAQ80C,EAAe,SACvBd,oBANM9zC,CAOf,IAAC,EAAAjQ,IAAA,cAAApB,MA7BD,WAMI,MAL+B,CAC3Bc,KAAKklD,aACLllD,KAAKmlD,cACLnlD,KAAK8lD,oBACPrgC,OAAM,SAACsgC,GAAM,OAAKA,EAAOC,aAAa,GAE5C,KAACN,CAAA,CARuB,CAASlC,IAgCrCkC,GAAgBR,aAAe,IAAIZ,GAA0B,qBAAsB,OACnFoB,GAAgBP,cAAgB,IAAIb,GAA0B,mCAAoC,OAClGoB,GAAgBI,mBAAqB,IAAIxB,GAA0B,gBAAiB,OACpF1X,EAAAA,EAAAA,IAAqByP,IACrBzP,EAAAA,EAAAA,IAAqB8P,IACrB9P,EAAAA,EAAAA,IAAqBgQ,IACrBhQ,EAAAA,EAAAA,IAAqBoQ,IACrBpQ,EAAAA,EAAAA,IAAqBsQ,IACrBtQ,EAAAA,EAAAA,IAAqB0Q,IACrB1Q,EAAAA,EAAAA,IAAqB6Q,IACrB7Q,EAAAA,EAAAA,IAAqBgR,IACrBhR,EAAAA,EAAAA,IAAqBwR,IACrBxR,EAAAA,EAAAA,IAAqBgS,IACrBhS,EAAAA,EAAAA,IAAqByS,IACrBzS,EAAAA,EAAAA,IAAqB+S,IACrB/S,EAAAA,EAAAA,IAAqBkT,IACrBlT,EAAAA,EAAAA,IAAqBsT,IACrBtT,EAAAA,EAAAA,IAAqBoU,IACrBpU,EAAAA,EAAAA,IAAqBgV,IACrBhV,EAAAA,EAAAA,IAAqBoV,KACrBpV,EAAAA,EAAAA,IAAqBqW,KACrBrW,EAAAA,EAAAA,IAAqBkX,KACrBlX,EAAAA,EAAAA,IAAqBsX,IACjBa,GAAgBG,aAAac,eAAiBjB,GAAgBI,cAAca,gBAC5EpZ,EAAAA,EAAAA,IAAqBmY,IAErBK,GAAgBG,aAAaS,gBAC7BpZ,EAAAA,EAAAA,IAAqBwY,IAErBT,GAAgBG,cAAckB,gBAC9BpZ,EAAAA,EAAAA,IAAqB+X,IAErBe,GAAgBM,gBAChBpZ,EAAAA,EAAAA,IAAqB8Y,G,gPC1gCrBO,E,wUAlBAr/C,EAA0C,SAAUC,EAAYC,EAAQxG,EAAKyG,GAC7E,IAA2HC,EAAvHC,EAAIC,UAAU/B,OAAQgC,EAAIF,EAAI,EAAIH,EAAkB,OAATC,EAAgBA,EAAOK,OAAOC,yBAAyBP,EAAQxG,GAAOyG,EACrH,GAAuB,kBAAZO,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQxG,EAAKyG,QACpH,IAAK,IAAIS,EAAIX,EAAW1B,OAAS,EAAGqC,GAAK,EAAGA,KAASR,EAAIH,EAAWW,MAAIL,GAAKF,EAAI,EAAID,EAAEG,GAAKF,EAAI,EAAID,EAAEF,EAAQxG,EAAK6G,GAAKH,EAAEF,EAAQxG,KAAS6G,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOK,eAAeX,EAAQxG,EAAK6G,GAAIA,CAChE,EACIO,EAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUd,EAAQxG,GAAOsH,EAAUd,EAAQxG,EAAKqH,EAAa,CACxE,EACIlJ,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EAyBa8mD,EAAsC,IAAIvhC,EAAAA,GAAc,6BAA6B,GAE9FwhC,EAA4BF,EAA2B,SAAAvjC,IAAAhI,EAAAA,EAAAA,GAAAyrC,EAAAzjC,GAAA,IAAA/H,GAAAC,EAAAA,EAAAA,GAAAurC,GAIvD,SAAAA,EAAYjuC,EAAQqJ,EAAmB/F,EAAyBqR,EAA8Bu5B,GAAgC,IAAAvlD,EA4BlG,OA5BkGd,EAAAA,EAAAA,GAAA,KAAAomD,IAC1HtlD,EAAA8Z,EAAAT,KAAA,OACK2S,6BAA+BA,EACpChsB,EAAKwlD,iBAAmB,EACxBxlD,EAAKylD,gBAAkBzlD,EAAKsiB,UAAU,IAAI5gB,EAAAA,IAC1C1B,EAAKoI,QAAUiP,EACfrX,EAAK0lD,WAAa/qC,EAAwBgrC,2BAC1C3lD,EAAKg5B,UAAW,EAChBh5B,EAAK4lD,mBAAqBP,EAAoCrjC,OAAOtB,GACrE1gB,EAAK6lD,qBAAuBN,EAA+Br8C,IAAIlJ,EAAK0lD,WAAY,iBAAkB,CAAEv5C,IAAK,MACzGnM,EAAK8zC,oBAAsB9zC,EAAKoI,QAAQ6f,8BACxCjoB,EAAK8lD,qBAAuB,KAC5B9lD,EAAK+lD,oBAAsB,KAC3B/lD,EAAKgmD,oBAAqB,EAC1BhmD,EAAKylD,gBAAkBzlD,EAAKsiB,UAAU,IAAI5gB,EAAAA,IAC1C1B,EAAKimD,2BAA6B,KAClCjmD,EAAKkmD,yBAA2B,KAChClmD,EAAKmmD,gBAAkB,KACvBnmD,EAAKomD,wBAA0B,KAC/BpmD,EAAKqmD,4BAA8B,KACnCrmD,EAAKsiB,UAAUtiB,EAAKoI,QAAQmB,kBAAiB,kBAAMvJ,EAAKsmD,cAAa,EAAK,KAC1EtmD,EAAKsiB,UAAUtiB,EAAKoI,QAAQqB,0BAAyB,SAAAjL,IAC7CA,EAAEkL,WAAW,KAAwClL,EAAEkL,WAAW,MAClE1J,EAAKsmD,cAAa,EAE1B,KACAtmD,EAAKsiB,UAAUtiB,EAAK0lD,WAAWr8C,aAAY,kBAAMrJ,EAAKsmD,cAAa,EAAM,KACzEtmD,EAAKsiB,UAAUtiB,EAAKoI,QAAQoB,0BAAyB,kBAAMxJ,EAAKsmD,cAAa,EAAK,KAClFtmD,EAAKsmD,cAAa,GAAMtmD,CAC5B,CA9BC,OA8BAjB,EAAAA,EAAAA,GAAAumD,EAAA,EAAA7lD,IAAA,eAAApB,MACD,SAAakoD,GAAc,IAAAziD,EAAA,KACjBtC,EAAQrC,KAAKiJ,QAAQ4B,WACrBw8C,EAAsB,OAAVhlD,IAAmBrC,KAAKiJ,QAAQ0B,UAAU,KAAwC3K,KAAKiJ,QAAQ0B,UAAU,MAAwC3K,KAAKumD,WAAWz7C,IAAIzI,GACvL,IAAIglD,IAAcrnD,KAAK65B,UAAautB,KAGpCpnD,KAAK65B,SAAWwtB,EAChBrnD,KAAKsnD,cACLtnD,KAAKsmD,gBAAgB77C,QAChB48C,GAAuB,OAAVhlD,GAAlB,CAGArC,KAAKsmD,gBAAgBpjD,IAAIqmB,EAAAA,GAAM4a,gBAAgB9hC,EAAMklD,kCAAkC,WACnF5iD,EAAKgiD,qBAAuBhiD,EAAKkoB,6BAA6B8R,yBAAyBt8B,EAAM01C,iBAAiByP,mBAClH,KACA,IAAMC,EAAuB,IAAIC,EAAAA,GAAQ1nD,KAAK0mD,qBAAqBz+C,IAAI5F,IACjEslD,EAAqB,WACvB,IAAInmD,EACJmD,EAAKmiD,2BAA6BW,EAAqBnqB,SAAQ,kBAAM34B,EAAKijD,cAAc,GAAoC,QAAjCpmD,EAAKmD,EAAKkjD,yBAAsC,IAAPrmD,EAAgBA,EAAKmD,EAAK+hD,qBAAqBz+C,IAAI5F,GAC3L,EACMylD,EAAqB,IAAIJ,EAAAA,GAAQ,GAIvC1nD,KAAKsmD,gBAAgBpjD,IAAIlD,KAAKiJ,QAAQy7B,2BAA0B,WAC5DijB,GACJ,KACA3nD,KAAKsmD,gBAAgBpjD,IAAIlD,KAAKiJ,QAAQ6D,yBAAwB,SAACzN,GAC3D,IAAKsF,EAAKkiD,oBACFliD,EAAKgwC,oBAAoBxvC,OAAS,EAAG,CACrC,IAAM4iD,EAAiBpjD,EAAKgwC,oBAAoBqT,SAAS,GACzD,GAAID,GAAkB1oD,EAAE4yB,QAAQxM,OAAM,SAAAxe,GAAC,OAAI8gD,EAAex3B,gBAAgBtpB,EAAEpH,MAAM,IAE9E,OAZUY,EAWOkE,EAAK0hD,sBAVlC1hD,EAAKoiD,yBAA2Be,EAAmBxqB,SAAQ,kBAAM34B,EAAKsjD,YAAYxnD,EAAM,IAapF,CAdiB,IAACA,EAgBtBknD,GACJ,KACA3nD,KAAKsmD,gBAAgBpjD,IAAI,CACrBqB,QAAS,WACLkjD,EAAqBljD,UACrBujD,EAAmBvjD,SACvB,IAEJvE,KAAK4nD,cAlCL,CAmCJ,GAAC,CAAAtnD,IAAA,cAAApB,MACD,SAAYuB,GAER,GAAKT,KAAKiJ,QAAQmE,YAAc3M,IAAUT,KAAKqmD,kBAAwD,IAApCrmD,KAAK20C,oBAAoBxvC,OAA5F,CAIA,IAAM9C,EAAQrC,KAAKiJ,QAAQ4B,WACrBk9C,EAAiB/nD,KAAK20C,oBAAoBqT,SAAS,GACzD,IAAKD,GAAkBA,EAAen1C,kBAAoBm1C,EAAel1C,cACrE,OAAO7S,KAAKsnD,cAEhB,IAAMY,EAAiB7lD,EAAMouB,gBAAgBs3B,GAC7C,GAAI/nD,KAAK4mD,oBAAqB,CAC1B,IAAM3nB,EAAQipB,EAAejpB,MAAMj/B,KAAK4mD,qBAExC,IADoB3nB,EAAQA,EAAM,GAAG95B,OAAS,KAC1B+iD,EAAe/iD,OAC/B,OAAOnF,KAAKsnD,aAEpB,CAEA,IADA,IAAM13C,EAAQ,GACLpI,EAAI,EAAGqjB,EAAM7qB,KAAK20C,oBAAoBxvC,OAAQqC,EAAIqjB,EAAKrjB,IAAK,CACjE,IAAM2gD,EAAcnoD,KAAK20C,oBAAoBqT,SAASxgD,GACtD,GAAK2gD,EAGL,GAAIA,EAAYv1C,kBAAoBu1C,EAAYt1C,cAC5CjD,EAAM7L,KAAK,CACPlE,MAAOsoD,EACP53C,KAAM23C,QAGT,CACD,IAAIE,EAAW/lD,EAAMouB,gBAAgB03B,GACjCh2B,EAAW+1B,EACXG,EAAmBF,EAAYviD,YAC/B0iD,EAAiBH,EAAYtiD,UAC3B8qB,EAAqB1F,EAAAA,GAA2Bm9B,EAAUj2B,GAChEk2B,GAAoB13B,EACpBy3B,EAAWA,EAAShiC,OAAOuK,GAC3BwB,EAAWA,EAAS/L,OAAOuK,GAC3B,IAAM43B,EAAqBt9B,EAAAA,GAA2Bm9B,EAAUj2B,GAChEm2B,GAAkBC,EAClBH,EAAWA,EAAShiC,OAAO,EAAGgiC,EAASjjD,OAASojD,GAChDp2B,EAAWA,EAAS/L,OAAO,EAAG+L,EAAShtB,OAASojD,GAC5CF,IAAqBC,GAAsC,IAApBn2B,EAAShtB,QAChDyK,EAAM7L,KAAK,CACPlE,MAAO,IAAI+D,EAAAA,EAAMukD,EAAYv1C,gBAAiBy1C,EAAkBF,EAAYt1C,cAAey1C,GAC3F/3C,KAAM4hB,GAGlB,CACJ,CACA,GAAqB,IAAjBviB,EAAMzK,OAGV,IACInF,KAAKiJ,QAAQu/C,cACbxoD,KAAK6mD,oBAAqB,EAC1B,IAAM4B,EAAwBzoD,KAAKiJ,QAAQksC,gBAAgBuT,2BAC3D1oD,KAAKiJ,QAAQuH,aAAa,gBAAiBZ,GAC3C5P,KAAKiJ,QAAQksC,gBAAgBwT,yBAAyBF,EAC1D,CAAC,QAEGzoD,KAAK6mD,oBAAqB,CAC9B,CA3DA,CA4DJ,GAAC,CAAAvmD,IAAA,UAAApB,MACD,WACIc,KAAKsnD,eACL79B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAy8B,EAAAx8B,WAAA,gBAAAzP,KAAA,KACJ,GAAC,CAAA5Z,IAAA,cAAApB,MACD,WACIc,KAAKymD,mBAAmBv+C,KAAI,GAC5BlI,KAAK20C,oBAAoBlqC,QACrBzK,KAAKgnD,kBACLhnD,KAAKgnD,gBAAgB96C,SACrBlM,KAAKgnD,gBAAkB,KACvBhnD,KAAKinD,wBAA0B,KAEvC,GAAC,CAAA3mD,IAAA,eAAApB,MACD,WAA4B,IAAf0pD,EAAK1hD,UAAA/B,OAAA,QAAA7D,IAAA4F,UAAA,IAAAA,UAAA,GACd,OAAOzI,EAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAe,IAAA,IAAA4B,EAAAjB,EAAAwmD,EAAAhpD,EAAAm1B,EAAAjnB,EAAA,YAAArN,EAAAA,EAAAA,KAAAI,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAxC,MAAA,UAC9BY,KAAKiJ,QAAQmE,WAAY,CAAFxL,EAAAxC,KAAA,QACL,OAAnBY,KAAKsnD,cAAc1lD,EAAAV,OAAA,iBAGoB,GAArCoC,EAAWtD,KAAKiJ,QAAQi5B,iBACzBliC,KAAK65B,WAAa+uB,GAAS5oD,KAAKiJ,QAAQgzC,gBAAgB92C,OAAS,GAAC,CAAAvD,EAAAxC,KAAA,QAEhD,OAAnBY,KAAKsnD,cAAc1lD,EAAAV,OAAA,iBAIoB,GADrCmB,EAAQrC,KAAKiJ,QAAQ4B,WACrBg+C,EAAiBxmD,EAAMiG,gBACzBtI,KAAKinD,yBAA2BjnD,KAAKknD,8BAAgC2B,EAAc,CAAAjnD,EAAAxC,KAAA,aAC/EkE,EAASoiB,OAAO1lB,KAAKinD,yBAA0B,CAAFrlD,EAAAxC,KAAA,gBAAAwC,EAAAV,OAAA,uBAG7ClB,KAAK20C,oBAAoBxvC,OAAS,GAAC,CAAAvD,EAAAxC,KAAA,SACe,KAA5CS,EAAQG,KAAK20C,oBAAoBqT,SAAS,MACnCnoD,EAAMs5B,iBAAiB71B,GAAS,CAAA1B,EAAAxC,KAAA,gBAAAwC,EAAAV,OAAA,kBA0DtB,OApD/BlB,KAAKsnD,cACLtnD,KAAKinD,wBAA0B3jD,EAC/BtD,KAAKknD,4BAA8B2B,EAC7B7zB,GAAU8zB,EAAAA,EAAAA,KAAwB,SAACroD,GAAK,OAAKhC,EAAUsP,OAAM,OAAQ,GAAMrN,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAAmoD,EAAAC,EAAA7mD,EAAA8mD,EAAAzhD,EAAAqjB,EAAAk9B,EAAA1/B,EAAA,OAAA3nB,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA3B,MAAA,OAG1D,OAH0D2B,EAAAC,KAAA,EAErE+nD,EAAK,IAAIG,EAAAA,GAAU,GAAMnoD,EAAA3B,KAAA,EACR+pD,EAAuBnpD,KAAKumD,WAAYlkD,EAAOiB,EAAU7C,GAAM,OAChC,GADhDuoD,EAAQjoD,EAAAc,KACd7B,KAAK0mD,qBAAqBp6C,OAAOjK,EAAO0mD,EAAGK,WACvCp0B,IAAYh1B,KAAKgnD,gBAAe,CAAAjmD,EAAA3B,KAAA,eAAA2B,EAAAG,OAAA,iBAGR,GAA5BlB,KAAKgnD,gBAAkB,KACnB6B,IAAmBxmD,EAAMiG,eAAc,CAAAvH,EAAA3B,KAAA,gBAAA2B,EAAAG,OAAA,kBAGvCiB,EAAS,IACI,OAAb6mD,QAAkC,IAAbA,OAAsB,EAASA,EAAS7mD,UAC7DA,EAAS6mD,EAAS7mD,QAEtBnC,KAAK4mD,qBAAoC,OAAboC,QAAkC,IAAbA,OAAsB,EAASA,EAASK,cAAgBrpD,KAAK2mD,qBAC1GsC,GAAsB,EACjBzhD,EAAI,EAAGqjB,EAAM1oB,EAAOgD,OAAM,aAAEqC,EAAIqjB,GAAG,CAAA9pB,EAAA3B,KAAA,aACpCwE,EAAAA,EAAMu1B,iBAAiBh3B,EAAOqF,GAAIlE,GAAW,CAAFvC,EAAA3B,KAAA,SAM1C,OALD6pD,GAAsB,EACZ,IAANzhD,IACMugD,EAAiB5lD,EAAOqF,GAC9BrF,EAAOmnD,OAAO9hD,EAAG,GACjBrF,EAAO41B,QAAQgwB,IAClBhnD,EAAAG,OAAA,oBAPqCsG,IAAGzG,EAAA3B,KAAA,oBAW5C6pD,EAAqB,CAAFloD,EAAA3B,KAAA,SAED,OAAnBY,KAAKsnD,cAAcvmD,EAAAG,OAAA,kBAGjBmnB,EAAclmB,EAAO4C,KAAI,SAAAlF,GAAK,MAAK,CAAEA,MAAOA,EAAO6K,QAASu7C,EAA4BsD,WAAY,IAC1GvpD,KAAKymD,mBAAmBv+C,KAAI,GAC5BlI,KAAK20C,oBAAoBzsC,IAAImgB,GAC7BroB,KAAKqmD,mBAAoBtlD,EAAA3B,KAAA,iBAAA2B,EAAAC,KAAA,GAAAD,EAAAiB,GAAAjB,EAAA,UAGpByoD,EAAAA,EAAAA,IAAmBzoD,EAAAiB,MACpB0K,EAAAA,EAAAA,IAAiB3L,EAAAiB,IAEjBhC,KAAKgnD,kBAAoBhyB,GAAYh1B,KAAKgnD,iBAE1ChnD,KAAKsnD,cACR,yBAAAvmD,EAAAQ,OAAA,GAAAX,EAAA,kBAEP,IACFZ,KAAKgnD,gBAAkBhyB,EAAQpzB,EAAAV,OAAA,SACxB8zB,GAAO,yBAAApzB,EAAAL,OAAA,GAAAG,EAAA,SAEtB,IAAC,EAAApB,IAAA,MAAApB,MAhPD,SAAWgZ,GACP,OAAOA,EAAOC,gBAAgB8tC,EAA4B7tC,GAC9D,KAAC+tC,CAAA,CAHsD,CAA2CzhC,EAAAA,IAmPtGyhC,EAA0B/tC,GAAK,+BAC/B+tC,EAA0BoD,WAAahW,EAAAA,GAAuB50B,SAAS,CACnE9K,YAAa,iBACbI,WAAY,EACZR,UAxP0B,8BA0P9B0yC,EAA4BF,EAA8Br/C,EAAW,CACjEc,EAAQ,EAAGka,EAAAA,IACXla,EAAQ,EAAG4Q,EAAAA,GACX5Q,EAAQ,EAAGmvB,EAAAA,IACXnvB,EAAQ,EAAG6Q,EAAAA,IACZ4tC,GAEI,IAAMsD,EAAmB,SAAAziB,IAAAtsB,EAAAA,EAAAA,GAAA+uC,EAAAziB,GAAA,IAAA7rB,GAAAP,EAAAA,EAAAA,GAAA6uC,GAC5B,SAAAA,IAAc,OAAA1pD,EAAAA,EAAAA,GAAA,KAAA0pD,GAAAtuC,EAAAjB,KAAA,KACJ,CACF7I,GAAI,8BACJtP,MAAOklC,EAAAA,GAAa,sBAAuB,wBAC3CC,MAAO,uBACP9kB,aAAc+kB,EAAAA,GAAeC,IAAIC,EAAAA,EAAkBC,SAAUD,EAAAA,EAAkBqiB,mBAC/EniB,OAAQ,CACJc,OAAQhB,EAAAA,EAAkBkV,gBAC1B9U,QAAS,KACTD,OAAQ,MAGpB,CAwBC,OAxBA5nC,EAAAA,EAAAA,GAAA6pD,EAAA,EAAAnpD,IAAA,aAAApB,MACD,SAAWiY,EAAU2B,GAAM,IAAApJ,EAAA,KACjBi6C,EAAgBxyC,EAASlP,IAAI2hD,EAAAA,GACnCl4B,EAAmBniB,MAAMs6C,QAAQ/wC,IAASA,GAAQ,MAACxX,OAAWA,GAAUwoD,GAAA9mD,EAAAA,EAAAA,GAAA0uB,EAAA,GAAjEtpB,EAAG0hD,EAAA,GAAEvrB,EAAGurB,EAAA,GACf,OAAI1wC,EAAAA,EAAIC,MAAMjR,IAAQ/D,EAAAA,EAAS0lD,YAAYxrB,GAChCorB,EAAcK,eAAe,CAAEC,SAAU7hD,GAAOuhD,EAAcO,uBAAuBzqD,MAAK,SAAAyY,GACxFA,IAGLA,EAAO8lB,YAAYO,GACnBrmB,EAAOmJ,qBAAoB,SAAAlK,GAEvB,OADAzH,EAAKy6C,gBAAgBhzC,EAAUe,GACxBxI,EAAK2S,IAAIlL,EAAUe,EAC9B,IACJ,GAAGxL,EAAAA,KAEP+c,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAA+/B,EAAA9/B,WAAA,mBAAAzP,KAAA,KAAwB/C,EAAU2B,EACtC,GAAC,CAAAxY,IAAA,MAAApB,MACD,SAAI+1C,EAAW/8B,GACX,IAAMwvB,EAAaye,EAA0Bl+C,IAAIiQ,GACjD,OAAIwvB,EACO5oC,QAAQC,QAAQ2oC,EAAWkgB,cAAa,IAE5C9oD,QAAQC,SACnB,KAAC0qD,CAAA,CArC2B,CAAS9hB,EAAAA,IAuCnCyiB,EAAuBC,EAAAA,GAAcC,mBAAmBnE,EAA0Bl+C,KAYxF,SAASkhD,EAAuBp8B,EAAW1qB,EAAOiB,EAAU7C,GAAO,IAAAgQ,EAAA,KACzD85C,EAAiBx9B,EAAUloB,QAAQxC,GAIzC,OAAOmoD,EAAAA,EAAAA,IAAMD,EAAexlD,KAAI,SAAA3E,GAAQ,OAAI,kBAAM3B,EAAUgS,OAAM,OAAQ,GAAM/P,EAAAA,EAAAA,KAAAC,MAAE,SAAAqE,IAAA,OAAAtE,EAAAA,EAAAA,KAAAI,MAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAA7F,MAAA,OAEnE,OAFmE6F,EAAAjE,KAAA,EAAAiE,EAAA7F,KAAA,EAE7DgB,EAASqqD,2BAA2BpoD,EAAOiB,EAAU7C,GAAM,cAAAwE,EAAA/D,OAAA,SAAA+D,EAAApD,MAAA,OAG3C,OAH2CoD,EAAAjE,KAAA,EAAAiE,EAAAjD,GAAAiD,EAAA,UAGxEhD,EAAAA,EAAAA,IAAyBgD,EAAAjD,IAAIiD,EAAA/D,OAAA,cACtBI,GAAS,yBAAA2D,EAAA1D,OAAA,GAAAyD,EAAA,iBAEtB,MAAG,SAAAzF,GAAM,QAAMA,GAAUmrD,EAAAA,GAAkC,OAAXnrD,QAA8B,IAAXA,OAAoB,EAASA,EAAO4C,OAAO,GACpH,EAzBAwoD,EAAAA,EAAAA,IAAsB,IAAIP,EAAqB,CAC3C/4C,GAAI,2BACJ+Q,aAAc8jC,EACd0E,QAAS,SAAAhqC,GAAC,OAAIA,EAAE0mC,aAAa,EAC7B/f,OAAQ,CACJc,OAAQhB,EAAAA,EAAkBkV,gBAC1B/U,OAAQ,IACRC,QAAS,EACTsL,UAAW,CAAC,UAkBb,IAAM8X,GAAgCC,EAAAA,EAAAA,KAAc,iCAAkC,CAAEC,KAAMC,EAAAA,GAAMC,QAAQ,QAAQC,YAAY,IAAMC,MAAOH,EAAAA,GAAMC,QAAQ,QAAQC,YAAY,IAAME,OAAQJ,EAAAA,GAAMC,QAAQ,QAAQC,YAAY,IAAMG,QAASL,EAAAA,GAAMM,OAASrkB,EAAAA,GAAa,gCAAiC,4DAClTskB,EAAAA,EAAAA,IAAgC,iCAAiC,SAACtW,EAAW5yC,EAAOiB,GAEhF,OAAO6lD,EADgClU,EAAUhtC,IAAIqQ,EAAAA,GAA7CkuC,2BACkDnkD,EAAOiB,EAAUyM,EAAAA,EAAkBC,KACjG,KACAyO,EAAAA,EAAAA,IAA2B0nC,EAA0B/tC,GAAI+tC,EAA2B,IACpFvZ,EAAAA,EAAAA,IAAqB6c,E,4YCpXjBhrD,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EAWaosD,EAAI,WACb,SAAAA,EAAYC,EAAMrrD,IAAUL,EAAAA,EAAAA,GAAA,KAAAyrD,GACxBxrD,KAAK0rD,MAAQD,EACbzrD,KAAK2rD,UAAYvrD,CACrB,CAkCC,OAlCAR,EAAAA,EAAAA,GAAA4rD,EAAA,EAAAlrD,IAAA,SAAApB,MACD,WACI,MAAO,CACHW,MAAOG,KAAKH,MACZ+rD,IAAK5rD,KAAK4rD,IACV9pD,QAAS9B,KAAK8B,QAEtB,GAAC,CAAAxB,IAAA,QAAA2H,IACD,WACI,OAAOjI,KAAK0rD,MAAM7rD,KACtB,GAAC,CAAAS,IAAA,MAAA2H,IACD,WACI,OAAOjI,KAAK0rD,MAAME,GACtB,GAAC,CAAAtrD,IAAA,UAAA2H,IACD,WACI,OAAOjI,KAAK0rD,MAAM5pD,OACtB,GAAC,CAAAxB,IAAA,UAAApB,MACD,SAAQuB,GACJ,OAAOhC,EAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAAC,EAAA,YAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA3B,MAAA,WAC/BY,KAAK0rD,MAAME,IAAK,CAAF7qD,EAAA3B,KAAA,eAAA2B,EAAAG,OAAA,SACPlB,KAAK0rD,MAAME,KAAG,UAEiB,oBAA/B5rD,KAAK2rD,UAAUE,YAA0B,CAAA9qD,EAAA3B,KAAA,eAAA2B,EAAAG,OAAA,SACzCpC,QAAQC,QAAQiB,KAAK2rD,UAAUE,YAAY7rD,KAAK0rD,MAAOjrD,IAAQhB,MAAK,SAAAP,GAEvE,OADA2B,EAAK6qD,MAAQxsD,GAAS2B,EAAK6qD,MACvB7qD,EAAK6qD,MAAME,IAEJ/qD,EAAK9B,QAAQ0B,GAEjB3B,QAAQE,OAAO,IAAI0S,MAAM,WACpC,KAAE,cAAA3Q,EAAAG,OAAA,SAECpC,QAAQE,OAAO,IAAI0S,MAAM,aAAW,wBAAA3Q,EAAAQ,OAAA,GAAAX,EAAA,SAEnD,KAAC4qD,CAAA,CAtCY,GAwCJM,EAAS,WAClB,SAAAA,EAAYC,GAAQ,IAAApnD,EAAA,MAAA5E,EAAAA,EAAAA,GAAA,KAAA+rD,GAChB9rD,KAAKsC,aAAe,IAAIC,EAAAA,GACxB,IACqCE,EADjCupD,EAAQ,GAAGrpD,GAAAC,EAAAA,EAAAA,GACgBmpD,GAAM,QAAA7sC,EAAA,WAAE,IAAAnc,GAAAC,EAAAA,EAAAA,GAAAP,EAAAvD,MAAA,GAA3B+D,EAAIF,EAAA,GAAE3C,EAAQ2C,EAAA,GAEhBkpD,EAAWhpD,EAAK+oD,MAAMjnD,KAAI,SAAA0mD,GAAI,OAAI,IAAID,EAAKC,EAAMrrD,EAAS,IAChE4rD,EAAQF,EAAUI,OAAOF,EAAOC,IAE5BE,EAAAA,EAAAA,IAAalpD,IACb0B,EAAKrC,aAAaY,IAAID,EAE9B,EARA,IAAAN,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAtD,MAAA0f,GAQC,OAAAlb,GAAArB,EAAAtD,EAAA2E,EAAA,SAAArB,EAAAsB,GAAA,CACDjE,KAAKgsD,MAAQA,CACjB,CAuCC,OAvCApsD,EAAAA,EAAAA,GAAAksD,EAAA,EAAAxrD,IAAA,UAAApB,MACD,WACIc,KAAKsC,aAAaiC,UAClBvE,KAAKgsD,MAAM7mD,OAAS,CACxB,IAAC,EAAA7E,IAAA,SAAApB,MACD,SAAcktD,EAAUH,GAEpB,IACII,EACAC,EACAC,EACAC,EAJEjtD,EAAS,GAKf,IAAK8sD,EAAW,EAAGE,EAAW,EAAGD,EAASF,EAASjnD,OAAQqnD,EAASP,EAAS9mD,OAAQknD,EAAWC,GAAUC,EAAWC,GAAS,CAC1H,IAAMC,EAAUL,EAASC,GACnBK,EAAUT,EAASM,GACzB,GAAI3oD,EAAAA,EAAMkP,0BAA0B25C,EAAQ5sD,MAAO6sD,EAAQ7sD,OAEvDwsD,SAGqBzoD,EAAAA,EAAM6O,yBAAyBg6C,EAAQ5sD,MAAO6sD,EAAQ7sD,OACxD,GAEnBN,EAAOwE,KAAK0oD,GACZJ,MAIA9sD,EAAOwE,KAAK2oD,GACZH,IAER,CACA,KAAOF,EAAWC,EAAQD,IACtB9sD,EAAOwE,KAAKqoD,EAASC,IAEzB,KAAOE,EAAWC,EAAQD,IACtBhtD,EAAOwE,KAAKkoD,EAASM,IAEzB,OAAOhtD,CACX,KAACusD,CAAA,CArDiB,GAuDf,SAASa,EAAS5/B,EAAW1qB,EAAO5B,GACvC,IAAM+sB,EAAQ,GAER9oB,EAAWqoB,EAAUloB,QAAQxC,GAAOyC,UAAUC,KAAI,SAAC3E,EAAUoH,GAC/D,OAAO1I,QAAQC,QAAQqB,EAASwsD,aAAavqD,EAAO5B,IAAQhB,MAAK,SAAAF,GACzDA,IACAiuB,EAAMhmB,GAAK,CAACjI,EAAQa,GAE5B,GAAG6B,EAAAA,GACP,IACA,OAAOnD,QAAQsG,IAAIV,GAAUjF,MAAK,WAC9B,IAAMF,EAAS,IAAIusD,GAAUe,EAAAA,EAAAA,IAASr/B,IACtC,OAAK/sB,EAAMU,yBAGX5B,EAAOgF,UACA,IAAIunD,EAAU,KAHVvsD,CAIf,GACJ,CACAoZ,EAAAA,EAAiBC,gBAAgB,wBAAwB,SAACzB,GAAQ,QAAA0B,EAAA3R,UAAA/B,OAAK2T,EAAI,IAAAvJ,MAAAsJ,EAAA,EAAAA,EAAA,KAAA7Q,EAAA,EAAAA,EAAA6Q,EAAA7Q,IAAJ8Q,EAAI9Q,EAAA,GAAAd,UAAAc,GAAA,OAAKvJ,OAAU,OAAQ,OAAQ,GAAMiC,EAAAA,EAAAA,KAAAC,MAAE,SAAAe,IAAA,IAAA0G,EAAA0kD,EAAA7zC,EAAA8zC,EAAA1qD,EAAAY,EAAAuE,EAAAjI,EAAA,OAAAmB,EAAAA,EAAAA,KAAAI,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAxC,MAAA,OAOvD,GANlDgJ,EAAqB0Q,EAAI,GAApBg0C,EAAgBh0C,EAAI,IAC9BK,EAAAA,EAAAA,IAAW/Q,aAAegR,EAAAA,GACE,kBAAjB0zC,IACPA,EAAe,GAClB7zC,EACwB9B,EAASlP,IAAIqQ,EAAAA,GAA9By0C,EAAY9zC,EAAZ8zC,aACF1qD,EAAQ8U,EAASlP,IAAI+kD,EAAAA,GAAeniD,SAASzC,GACvC,CAAFxG,EAAAxC,KAAA,eAAAwC,EAAAV,OAAA,SACC,IAAE,OAEA,OAFAU,EAAAxC,KAAA,EAEMutD,EAASI,EAAc1qD,EAAO0N,EAAAA,EAAkBC,MAAK,OAA9D,GAAJ/M,EAAIrB,EAAAC,KACC,CAAFD,EAAAxC,KAAA,gBAAAwC,EAAAV,OAAA,SACE,IAAE,QAGJsG,EAAI,EAAC,aAAEA,EAAIuF,KAAK9C,IAAI6iD,EAAc7pD,EAAK+oD,MAAM7mD,SAAO,CAAAvD,EAAAxC,KAAA,SACzD,OADyDwC,EAAAxC,KAAA,GACnD6D,EAAK+oD,MAAMxkD,GAAGzI,QAAQgR,EAAAA,EAAkBC,MAAK,QADQxI,IAAG5F,EAAAxC,KAAA,iBAInD,OADTG,EAAS0D,EAAK+oD,MAAMhkC,MAAM,GAChC/kB,EAAKsB,UAAU3C,EAAAV,OAAA,SACR3B,GAAM,yBAAAqC,EAAAL,OAAA,GAAAG,EAAA,IACf,I,ICzIEurD,E,iCAlBArmD,EAA0C,SAAUC,EAAYC,EAAQxG,EAAKyG,GAC7E,IAA2HC,EAAvHC,EAAIC,UAAU/B,OAAQgC,EAAIF,EAAI,EAAIH,EAAkB,OAATC,EAAgBA,EAAOK,OAAOC,yBAAyBP,EAAQxG,GAAOyG,EACrH,GAAuB,kBAAZO,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQxG,EAAKyG,QACpH,IAAK,IAAIS,EAAIX,EAAW1B,OAAS,EAAGqC,GAAK,EAAGA,KAASR,EAAIH,EAAWW,MAAIL,GAAKF,EAAI,EAAID,EAAEG,GAAKF,EAAI,EAAID,EAAEF,EAAQxG,EAAK6G,GAAKH,EAAEF,EAAQxG,KAAS6G,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOK,eAAeX,EAAQxG,EAAK6G,GAAIA,CAChE,EACIO,EAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUd,EAAQxG,GAAOsH,EAAUd,EAAQxG,EAAKqH,EAAa,CACxE,EACIlJ,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EAsBI8tD,EAAeD,EAAc,SAAAvqC,IAAAhI,EAAAA,EAAAA,GAAAwyC,EAAAxqC,GAAA,IAAA/H,GAAAC,EAAAA,EAAAA,GAAAsyC,GAI7B,SAAAA,EAAYh1C,EAAQmD,EAAe2D,EAAqBxD,EAAyB4qC,GAAgC,IAAAvlD,GAAAd,EAAAA,EAAAA,GAAA,KAAAmtD,IAC7GrsD,EAAA8Z,EAAAT,KAAA,OACKhC,OAASA,EACdrX,EAAKwa,cAAgBA,EACrBxa,EAAKme,oBAAsBA,EAC3Bne,EAAK2a,wBAA0BA,EAC/B3a,EAAKksB,UAAYlsB,EAAK2a,wBAAwBuxC,aAC9ClsD,EAAKssD,oBAAsB/G,EAA+Br8C,IAAIlJ,EAAKksB,UAAW,QAAS,CAAE9iB,IAAK,IAAM+C,IAAK,MACzGnM,EAAKusD,aAAevsD,EAAKsiB,UAAU,IAAI1X,EAAAA,IAAiB,kBAAM5K,EAAKwsD,iBAAiB,GAAE,MACtFxsD,EAAKysD,eAAiB,KACtBzsD,EAAK0sD,gBAAkB,KACvB1sD,EAAK2sD,mBAAqB,CAAC,EAC3B3sD,EAAK4sD,uBAAyB,KAC9B,IAAMC,EAAmB7sD,EAAKsiB,UAAU,IAAIjV,EAAAA,GAAiBgK,IAyC/B,OAxC9BrX,EAAKsiB,UAAUuqC,EAAiBt/C,8BAA6B,SAAAsjB,GAAiC,IAAAo4B,GAAA9mD,EAAAA,EAAAA,GAAA0uB,EAAA,GAA/BrjB,EAAUy7C,EAAA,GAAE6D,EAAa7D,EAAA,GACpFjpD,EAAK+sD,mBAAmBv/C,EAAYs/C,EACxC,KACA9sD,EAAKsiB,UAAUuqC,EAAiB3+C,WAAU,SAAC1P,GACvCwB,EAAKgtD,gBAAgBxuD,EACzB,KACAwB,EAAKsiB,UAAUuqC,EAAiB5+C,UAAS,SAACzP,GACtCwB,EAAKitD,6BACT,KACAjtD,EAAKsiB,UAAUjL,EAAO5N,0BAAyB,SAACjL,GACvCA,EAAEkL,WAAW,MAIlB1J,EAAKktD,kBAAkB,IAEvBltD,EAAKU,OAELV,EAAKusD,aAAa3gD,SAAS,GAC/B,KACA5L,EAAKsiB,UAAUjL,EAAOpL,yBAAwB,SAACzN,GACtCwB,EAAKqX,OAAO9K,YAGjBvM,EAAKusD,aAAa3gD,SAAS5L,EAAKssD,oBAAoBllD,IAAIpH,EAAKqX,OAAOrN,YACxE,KACAhK,EAAKsiB,UAAUjL,EAAO9N,kBAAiB,SAAC/K,GACpCwB,EAAK2sD,mBAAqB,CAAC,EAC3B3sD,EAAK4sD,uBAAyB,KAC9B5sD,EAAKU,OACLV,EAAKusD,aAAa3gD,SAAS,EAC/B,KACA5L,EAAKsiB,UAAUjL,EAAO7N,0BAAyB,SAAChL,GAC5CwB,EAAKU,OACLV,EAAKusD,aAAa3gD,SAAS,EAC/B,KACA5L,EAAKsiB,UAAUtiB,EAAKksB,UAAU7iB,aAAY,SAAC7K,GACvCwB,EAAKU,OACLV,EAAKusD,aAAa3gD,SAAS,EAC/B,KACA5L,EAAKusD,aAAa3gD,SAAS,GAAG5L,CAClC,CAxDC,OAwDAjB,EAAAA,EAAAA,GAAAstD,EAAA,EAAA5sD,IAAA,kBAAApB,MACD,WACI,OAAOT,EAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAAyB,EAAA0mD,EAAApkD,EAAA,YAAAjE,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA3B,MAAA,UAC9BY,KAAKkY,OAAO9K,YAAepN,KAAKkY,OAAOvN,UAAU,IAA4B,CAAA5J,EAAA3B,KAAA,eAAA2B,EAAAG,OAAA,iBAG9C,KAA9BmB,EAAQrC,KAAKkY,OAAOrN,YAChBmjD,uBAAwB,CAAFjtD,EAAA3B,KAAA,eAAA2B,EAAAG,OAAA,oBAG3BlB,KAAK+sB,UAAUjiB,IAAIzI,GAAQ,CAAFtB,EAAA3B,KAAA,eAAA2B,EAAAG,OAAA,iBAUH,OAPvBlB,KAAKutD,kBACLvtD,KAAKutD,gBAAgBhpD,UACrBvE,KAAKutD,gBAAkB,MAE3BvtD,KAAKstD,gBAAiBxE,EAAAA,EAAAA,KAAwB,SAAAroD,GAAK,OAAIksD,EAAShoD,EAAKooB,UAAW1qB,EAAO5B,EAAM,IAAEM,EAAAC,KAAA,EAErF+nD,EAAK,IAAIG,EAAAA,GAAU,GAAMnoD,EAAA3B,KAAA,GACFY,KAAKstD,eAAc,QACK,GADrDttD,KAAKutD,gBAAexsD,EAAAc,KACpB7B,KAAKmtD,oBAAoB7gD,OAAOjK,EAAO0mD,EAAGK,YACtC/mD,EAAMiD,aAAc,CAAFvE,EAAA3B,KAAA,gBAAA2B,EAAAG,OAAA,kBAGtBlB,KAAK+tD,kBAAkB/tD,KAAKutD,gBAAgBvB,OAAOjrD,EAAA3B,KAAA,iBAAA2B,EAAAC,KAAA,GAAAD,EAAAiB,GAAAjB,EAAA,UAGnD2L,EAAAA,EAAAA,IAAiB3L,EAAAiB,IAAM,QAGI,OAHJjB,EAAAC,KAAA,GAGvBhB,KAAKstD,eAAiB,KAAKvsD,EAAA4L,OAAA,6BAAA5L,EAAAQ,OAAA,GAAAX,EAAA,wBAGvC,GAAC,CAAAN,IAAA,oBAAApB,MACD,SAAkB8sD,GAId,IAJqB,IAAAj+C,EAAA,KACfqO,EAAmF,WAArEpc,KAAKkY,OAAOvN,UAAU,IACpCsjD,EAAiB,GAEvBC,EAAA,EAAAC,EADa/mD,OAAO2Q,KAAK/X,KAAKwtD,oBACCU,EAAAC,EAAAhpD,OAAA+oD,IAAE,CAA5B,IAAMt2B,EAAYu2B,EAAAD,GACbE,EAAYpuD,KAAKwtD,mBAAmB51B,GAC1Cq2B,EAAelqD,KAAKqqD,EAAUx2B,aAClC,CACA,IAAMy2B,EAAiB,GACvB,GAAIrC,EAAO,CACP,IACwBvpD,EADxBE,GAAAC,EAAAA,EAAAA,GACmBopD,GAAK,IAAxB,IAAArpD,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAtD,MAA0B,KAAfisD,EAAIhpD,EAAAvD,MACXmvD,EAAetqD,KAAKuqD,EAAe36C,WAAW83C,EAAMrvC,GACxD,CAAC,OAAApY,GAAArB,EAAAtD,EAAA2E,EAAA,SAAArB,EAAAsB,GAAA,CACL,CACAjE,KAAKkY,OAAOhB,mBAAkB,SAAC2S,GAC3B,IAAMxB,EAAcwB,EAAexS,iBAAiB42C,EAAgBI,GACpEtgD,EAAKy/C,mBAAqB,CAAC,EAC3Bz/C,EAAK0/C,uBAAyB,KAC9B,IAAK,IAAIjmD,EAAI,EAAGqjB,EAAMxC,EAAYljB,OAAQqC,EAAIqjB,EAAKrjB,IAAK,CACpD,IAAM4mD,EAAY,IAAIE,EAAetC,EAAMxkD,GAAI6gB,EAAY7gB,IAC3DuG,EAAKy/C,mBAAmBY,EAAUx2B,cAAgBw2B,CACtD,CACJ,GACJ,GAAC,CAAA9tD,IAAA,qBAAApB,MACD,SAAmBmP,EAAYkgD,GAAS,IAAA7+C,EAAA,KAC9B0M,EAAmF,WAArEpc,KAAKkY,OAAOvN,UAAU,IAC1C,GAAI3K,KAAKqnD,UAAUh5C,EAAYkgD,GAAU,CACrCvuD,KAAK8tD,8BACL,IAAMU,EAAaxuD,KAAKyuD,kBAAkBpgD,EAAWvH,OAAOxD,UACxDkrD,GACAxuD,KAAKkY,OAAOhB,mBAAkB,SAAC2S,GAC3B2kC,EAAWE,SAAS7kC,EAAgBzN,GACpC1M,EAAK+9C,uBAAyBe,EAAW52B,YAC7C,GAER,MAEI53B,KAAK8tD,6BAEb,GAAC,CAAAxtD,IAAA,8BAAApB,MACD,WACI,IAAMkd,EAAmF,WAArEpc,KAAKkY,OAAOvN,UAAU,IAC1C,GAAI3K,KAAKytD,uBAAwB,CAC7B,IAAMe,EAAaxuD,KAAKwtD,mBAAmBxtD,KAAKytD,wBAC5Ce,GACAxuD,KAAKkY,OAAOhB,mBAAkB,SAAC2S,GAC3B2kC,EAAWG,WAAW9kC,EAAgBzN,EAC1C,IAEJpc,KAAKytD,uBAAyB,IAClC,CACJ,GAAC,CAAAntD,IAAA,kBAAApB,MACD,SAAgBmP,GACZ,GAAKrO,KAAKqnD,UAAUh5C,GAApB,CAGA,IAAMmgD,EAAaxuD,KAAKyuD,kBAAkBpgD,EAAWvH,OAAOxD,UACvDkrD,GAGLxuD,KAAK4uD,mBAAmBJ,EAAYngD,EAAWsT,uBAAuB,EALtE,CAMJ,GAAC,CAAArhB,IAAA,qBAAApB,MACD,SAAmBsvD,EAAYltC,GAAqC,IAAA7Q,EAAA,KAAzBo+C,EAAe3nD,UAAA/B,OAAA,QAAA7D,IAAA4F,UAAA,IAAAA,UAAA,GACtD,GAAKlH,KAAKqb,cAAV,CAGA,IAAQowC,EAAS+C,EAAT/C,KACRA,EAAK1sD,QAAQgR,EAAAA,EAAkBC,MAAMvQ,MAAK,SAAA2I,GAEtC,GAAmB,kBAARA,GAAoBqI,EAAKyH,OAAO9K,WAAY,CACnD,IAAM0hD,EAAWr+C,EAAKyH,OAAOrN,WAAWzC,IACxC,GAAI0mD,EAAS9xC,SAAWC,EAAAA,GAAQ8xC,MAAQ3mD,EAAIyoB,WAAW,GAAD1oB,OAAI8U,EAAAA,GAAQ8xC,KAAI,MAAM,CACxE,IAAMC,EAAY51C,EAAAA,EAAIqW,MAAMrnB,GAC5B,GAAI4mD,EAAUhyC,SAAWC,EAAAA,GAAQ8xC,KAAM,CACnC,IAAME,EAASC,EAAAA,GAAyBF,GACpCG,EAAe,KACfF,EAAOp+B,WAAW,OAClBs+B,EAAe,IAAHhnD,OAAO8mD,EAAO7oC,OAAO,IAE5B6oC,EAAOp+B,WAAW,UACvBs+B,EAAe,IAAHhnD,OAAO8mD,EAAO7oC,OAAO,KAEjC+oC,IACA/mD,EAAM8mD,EAAAA,GAAmBJ,EAAUK,GAE3C,CACJ,CACJ,CACA,OAAO1+C,EAAK4K,cAAc+zC,KAAKhnD,EAAK,CAAEkZ,WAAAA,EAAYutC,gBAAAA,EAAiBQ,yBAAyB,EAAMC,eAAe,EAAMC,eAAe,GAC1I,IAAG,SAAAvrD,GACC,IAAMwrD,EAAiBxrD,aAAe0N,MAAQ1N,EAAI6N,QAAU7N,EAErC,YAAnBwrD,EACA/+C,EAAKuO,oBAAoBywC,KAAKxoB,EAAAA,GAAa,cAAe,8DAA+DwkB,EAAKG,IAAIvjD,aAE1G,YAAnBmnD,EACL/+C,EAAKuO,oBAAoBywC,KAAKxoB,EAAAA,GAAa,cAAe,6DAG1Dv6B,EAAAA,EAAAA,IAAkB1I,EAE1B,GApCA,CAqCJ,GAAC,CAAA1D,IAAA,oBAAApB,MACD,SAAkBoE,GACd,IAAKtD,KAAKkY,OAAO9K,aAAe9J,EAC5B,OAAO,KAEX,IAMoCH,EAN9BklB,EAAcroB,KAAKkY,OAAOrN,WAAW+L,sBAAsB,CAC7DhE,gBAAiBtP,EAASmC,WAC1BG,YAAatC,EAAS6C,OACtB0M,cAAevP,EAASmC,WACxBI,UAAWvC,EAAS6C,QACrB,GAAG,GAAM/C,GAAAR,EAAAA,EAAAA,GACaylB,GAAW,IAApC,IAAAjlB,EAAAP,MAAAM,EAAAC,EAAAN,KAAAtD,MAAsC,KAA3BmU,EAAUxQ,EAAAjE,MACXwwD,EAAoB1vD,KAAKwtD,mBAAmB75C,EAAWtC,IAC7D,GAAIq+C,EACA,OAAOA,CAEf,CAAC,OAAA1rD,GAAAZ,EAAA/D,EAAA2E,EAAA,SAAAZ,EAAAa,GAAA,CACD,OAAO,IACX,GAAC,CAAA3D,IAAA,YAAApB,MACD,SAAUmP,EAAYkgD,GAClB,OAAOoB,QAAoC,IAA3BthD,EAAWvH,OAAO+J,OAC1BxC,EAAWtF,oBAAuBwlD,GAAWA,EAAQqB,qBACjE,GAAC,CAAAtvD,IAAA,OAAApB,MACD,WACI,IAAIsC,EACJxB,KAAKotD,aAAalhD,SACdlM,KAAKutD,kBAC2B,QAA/B/rD,EAAKxB,KAAKutD,uBAAoC,IAAP/rD,GAAyBA,EAAG+C,UACpEvE,KAAKutD,gBAAkB,MAEvBvtD,KAAKstD,iBACLttD,KAAKstD,eAAephD,SACpBlM,KAAKstD,eAAiB,KAE9B,GAAC,CAAAhtD,IAAA,UAAApB,MACD,YACIuqB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAwjC,EAAAvjC,WAAA,gBAAAzP,KAAA,MACAla,KAAKuB,MACT,IAAC,EAAAjB,IAAA,MAAApB,MA1OD,SAAWgZ,GACP,OAAOA,EAAOC,gBAAgB80C,EAAe70C,GACjD,KAAC80C,CAAA,CAH4B,CAA8BxoC,EAAAA,IA6O/DwoC,EAAa90C,GAAK,sBAClB80C,EAAeD,EAAiBrmD,EAAW,CACvCc,EAAQ,EAAG6W,EAAAA,IACX7W,EAAQ,EAAG+Q,EAAAA,IACX/Q,EAAQ,EAAG4Q,EAAAA,GACX5Q,EAAQ,EAAG6Q,EAAAA,IACZ20C,GAEH,IAAMv5C,EAAa,CACfk8C,QAAStc,EAAAA,GAAuB50B,SAAS,CACrC9K,YAAa,gBACbI,WAAY,EACZD,uBAAuB,EACvBR,gBAAiB,kBAErBs8C,OAAQvc,EAAAA,GAAuB50B,SAAS,CACpC9K,YAAa,uBACbI,WAAY,EACZD,uBAAuB,EACvBR,gBAAiB,0BAGnB86C,EAAc,WAYhB,SAAAA,EAAY7C,EAAM7zB,IAAc73B,EAAAA,EAAAA,GAAA,KAAAuuD,GAC5BtuD,KAAKyrD,KAAOA,EACZzrD,KAAK43B,aAAeA,CACxB,CAJC,OAIAh4B,EAAAA,EAAAA,GAAA0uD,EAAA,EAAAhuD,IAAA,WAAApB,MACD,SAAS2qB,EAAgBzN,GACrByN,EAAekmC,wBAAwB/vD,KAAK43B,aAAc02B,EAAe0B,YAAYhwD,KAAKyrD,KAAMrvC,GAAY,GAChH,GAAC,CAAA9b,IAAA,aAAApB,MACD,SAAW2qB,EAAgBzN,GACvByN,EAAekmC,wBAAwB/vD,KAAK43B,aAAc02B,EAAe0B,YAAYhwD,KAAKyrD,KAAMrvC,GAAY,GAChH,IAAC,EAAA9b,IAAA,aAAApB,MApBD,SAAkBusD,EAAMrvC,GACpB,MAAO,CACHvc,MAAO4rD,EAAK5rD,MACZ6K,QAAS4jD,EAAe0B,YAAYvE,EAAMrvC,GAAY,GAE9D,GAAC,CAAA9b,IAAA,cAAApB,MACD,SAAmBusD,EAAMrvC,EAAY6zC,GACjC,IAAMvlD,EAAUtD,OAAOyqC,OAAO,CAAC,EAAIoe,EAAWt8C,EAAWm8C,OAASn8C,EAAWk8C,SAE7E,OADAnlD,EAAQwlD,aAchB,SAAyBzE,EAAMrvC,GAC3B,IAAM+zC,EAAa1E,EAAKG,KAAO,aAAawE,KAAK3E,EAAKG,IAAIvjD,YACpDtG,EAAQ0pD,EAAK3pD,QACb2pD,EAAK3pD,QACLquD,EACIlpB,EAAAA,GAAa,4BAA6B,mBAC1CA,EAAAA,GAAa,wBAAyB,eAC1C5qB,EAAKD,EACLW,EAAAA,GACIkqB,EAAAA,GAAa,6BAA8B,eAC3CA,EAAAA,GAAa,yBAA0B,gBAC3ClqB,EAAAA,GACIkqB,EAAAA,GAAa,4BAA6B,kBAC1CA,EAAAA,GAAa,wBAAyB,eAChD,GAAIwkB,EAAKG,IAAK,CACV,IAAIyE,EAAc,GAClB,GAAI,aAAaD,KAAK3E,EAAKG,IAAIvjD,YAAa,CAExC,IAAM42B,EAAQwsB,EAAKG,IAAIvjD,WAAW42B,MAAM,qBACxC,GAAIA,EAAO,CACP,IAAMiG,EAAYjG,EAAM,GACxBoxB,EAAcppB,EAAAA,GAAa,sBAAuB,sBAAuB/B,EAC7E,CACJ,CAIA,OAHqB,IAAIxoB,EAAAA,GAAe,IAAI,GACvC4zC,WAAW7E,EAAKG,IAAIvjD,UAAS,GAAMgI,QAAQ,KAAM,OAAQtO,EAAOsuD,GAChEE,eAAe,KAADpoD,OAAMkU,EAAE,KAE/B,CAEI,OAAO,IAAIK,EAAAA,IAAiBC,WAAW,GAADxU,OAAIpG,EAAK,MAAAoG,OAAKkU,EAAE,KAE9D,CA9C+Bm0C,CAAgB/E,EAAMrvC,GACtC1R,CACX,KAAC4jD,CAAA,CAXe,GAuDnB,IACKmC,EAAc,SAAAzpB,IAAAtsB,EAAAA,EAAAA,GAAA+1C,EAAAzpB,GAAA,IAAA7rB,GAAAP,EAAAA,EAAAA,GAAA61C,GAChB,SAAAA,IAAc,OAAA1wD,EAAAA,EAAAA,GAAA,KAAA0wD,GAAAt1C,EAAAjB,KAAA,KACJ,CACF7I,GAAI,yBACJtP,MAAOklC,EAAAA,GAAa,QAAS,aAC7BC,MAAO,YACP9kB,kBAAc9gB,GAEtB,CAgBC,OAhBA1B,EAAAA,EAAAA,GAAA6wD,EAAA,EAAAnwD,IAAA,MAAApB,MACD,SAAIiY,EAAUe,GACV,IAAMw4C,EAAexD,EAAajlD,IAAIiQ,GACtC,GAAKw4C,GAGAx4C,EAAO9K,WAAZ,CAGA,IAC4B0E,EADtBkqC,EAAa9jC,EAAO+jC,gBAAgBlqC,GAAAnP,EAAAA,EAAAA,GACxBo5C,GAAU,IAA5B,IAAAjqC,EAAAlP,MAAAiP,EAAAC,EAAAjP,KAAAtD,MAA8B,KAAnBuiD,EAAGjwC,EAAA5S,MACJusD,EAAOiF,EAAajC,kBAAkB1M,EAAIj+C,kBAC5C2nD,GACAiF,EAAa9B,mBAAmBnD,GAAM,EAE9C,CAAC,OAAAznD,GAAA+N,EAAA1S,EAAA2E,EAAA,SAAA+N,EAAA9N,GAAA,CAPD,CAQJ,KAACwsD,CAAA,CAxBe,CAAS9oB,EAAAA,KA0B7BlpB,EAAAA,EAAAA,IAA2ByuC,EAAa90C,GAAI80C,EAAc,IAC1DtgB,EAAAA,EAAAA,IAAqB6jB,E","sources":["../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHints.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsController.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsHover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsContribution.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsLocations.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/commandIds.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionContextKeys.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/utils.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostText.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextWidget.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/provideInlineCompletions.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/singleTextEdit.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsSource.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsModel.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/suggestWidgetInlineCompletionProvider.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsController.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/commands.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/hoverParticipant.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletions.contribution.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsHintsWidget.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineProgress/browser/inlineProgress.js","../node_modules/monaco-editor/esm/vs/editor/contrib/lineSelection/browser/lineSelection.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/copyLinesCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/moveLinesCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/sortLinesCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/linesOperations.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linkedEditing/browser/linkedEditing.js","../node_modules/monaco-editor/esm/vs/editor/contrib/links/browser/getLinks.js","../node_modules/monaco-editor/esm/vs/editor/contrib/links/browser/links.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CancellationError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { URI } from '../../../../base/common/uri.js';\nexport class InlayHintAnchor {\n    constructor(range, direction) {\n        this.range = range;\n        this.direction = direction;\n    }\n}\nexport class InlayHintItem {\n    constructor(hint, anchor, provider) {\n        this.hint = hint;\n        this.anchor = anchor;\n        this.provider = provider;\n        this._isResolved = false;\n    }\n    with(delta) {\n        const result = new InlayHintItem(this.hint, delta.anchor, this.provider);\n        result._isResolved = this._isResolved;\n        result._currentResolve = this._currentResolve;\n        return result;\n    }\n    resolve(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.provider.resolveInlayHint !== 'function') {\n                return;\n            }\n            if (this._currentResolve) {\n                // wait for an active resolve operation and try again\n                // when that's done.\n                yield this._currentResolve;\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                return this.resolve(token);\n            }\n            if (!this._isResolved) {\n                this._currentResolve = this._doResolve(token)\n                    .finally(() => this._currentResolve = undefined);\n            }\n            yield this._currentResolve;\n        });\n    }\n    _doResolve(token) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const newHint = yield Promise.resolve(this.provider.resolveInlayHint(this.hint, token));\n                this.hint.tooltip = (_a = newHint === null || newHint === void 0 ? void 0 : newHint.tooltip) !== null && _a !== void 0 ? _a : this.hint.tooltip;\n                this.hint.label = (_b = newHint === null || newHint === void 0 ? void 0 : newHint.label) !== null && _b !== void 0 ? _b : this.hint.label;\n                this._isResolved = true;\n            }\n            catch (err) {\n                onUnexpectedExternalError(err);\n                this._isResolved = false;\n            }\n        });\n    }\n}\nexport class InlayHintsFragments {\n    static create(registry, model, ranges, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = [];\n            const promises = registry.ordered(model).reverse().map(provider => ranges.map((range) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const result = yield provider.provideInlayHints(model, range, token);\n                    if (result === null || result === void 0 ? void 0 : result.hints.length) {\n                        data.push([result, provider]);\n                    }\n                }\n                catch (err) {\n                    onUnexpectedExternalError(err);\n                }\n            })));\n            yield Promise.all(promises.flat());\n            if (token.isCancellationRequested || model.isDisposed()) {\n                throw new CancellationError();\n            }\n            return new InlayHintsFragments(ranges, data, model);\n        });\n    }\n    constructor(ranges, data, model) {\n        this._disposables = new DisposableStore();\n        this.ranges = ranges;\n        this.provider = new Set();\n        const items = [];\n        for (const [list, provider] of data) {\n            this._disposables.add(list);\n            this.provider.add(provider);\n            for (const hint of list.hints) {\n                // compute the range to which the item should be attached to\n                const position = model.validatePosition(hint.position);\n                let direction = 'before';\n                const wordRange = InlayHintsFragments._getRangeAtPosition(model, position);\n                let range;\n                if (wordRange.getStartPosition().isBefore(position)) {\n                    range = Range.fromPositions(wordRange.getStartPosition(), position);\n                    direction = 'after';\n                }\n                else {\n                    range = Range.fromPositions(position, wordRange.getEndPosition());\n                    direction = 'before';\n                }\n                items.push(new InlayHintItem(hint, new InlayHintAnchor(range, direction), provider));\n            }\n        }\n        this.items = items.sort((a, b) => Position.compare(a.hint.position, b.hint.position));\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n    static _getRangeAtPosition(model, position) {\n        const line = position.lineNumber;\n        const word = model.getWordAtPosition(position);\n        if (word) {\n            // always prefer the word range\n            return new Range(line, word.startColumn, line, word.endColumn);\n        }\n        model.tokenization.tokenizeIfCheap(line);\n        const tokens = model.tokenization.getLineTokens(line);\n        const offset = position.column - 1;\n        const idx = tokens.findTokenIndexAtOffset(offset);\n        let start = tokens.getStartOffset(idx);\n        let end = tokens.getEndOffset(idx);\n        if (end - start === 1) {\n            // single character token, when at its end try leading/trailing token instead\n            if (start === offset && idx > 1) {\n                // leading token\n                start = tokens.getStartOffset(idx - 1);\n                end = tokens.getEndOffset(idx - 1);\n            }\n            else if (end === offset && idx < tokens.getCount() - 1) {\n                // trailing token\n                start = tokens.getStartOffset(idx + 1);\n                end = tokens.getEndOffset(idx + 1);\n            }\n        }\n        return new Range(line, start + 1, line, end + 1);\n    }\n}\nexport function asCommandLink(command) {\n    return URI.from({\n        scheme: Schemas.command,\n        path: command.id,\n        query: command.arguments && encodeURIComponent(JSON.stringify(command.arguments))\n    }).toString();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar InlayHintsController_1;\nimport { ModifierKeyEmitter } from '../../../../base/browser/dom.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { DynamicCssRules } from '../../../browser/editorDom.js';\nimport { StableEditorScrollState } from '../../../browser/stableEditorScroll.js';\nimport { EDITOR_FONT_DEFAULTS } from '../../../common/config/editorOptions.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport * as languages from '../../../common/languages.js';\nimport { InjectedTextCursorStops } from '../../../common/model.js';\nimport { ModelDecorationInjectedTextOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { ClickLinkGesture } from '../../gotoSymbol/browser/link/clickLinkGesture.js';\nimport { InlayHintAnchor, InlayHintsFragments } from './inlayHints.js';\nimport { goToDefinitionWithLocation, showGoToContextMenu } from './inlayHintsLocations.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator, IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport * as colors from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\n// --- hint caching service (per session)\nclass InlayHintsCache {\n    constructor() {\n        this._entries = new LRUCache(50);\n    }\n    get(model) {\n        const key = InlayHintsCache._key(model);\n        return this._entries.get(key);\n    }\n    set(model, value) {\n        const key = InlayHintsCache._key(model);\n        this._entries.set(key, value);\n    }\n    static _key(model) {\n        return `${model.uri.toString()}/${model.getVersionId()}`;\n    }\n}\nconst IInlayHintsCache = createDecorator('IInlayHintsCache');\nregisterSingleton(IInlayHintsCache, InlayHintsCache, 1 /* InstantiationType.Delayed */);\n// --- rendered label\nexport class RenderedInlayHintLabelPart {\n    constructor(item, index) {\n        this.item = item;\n        this.index = index;\n    }\n    get part() {\n        const label = this.item.hint.label;\n        if (typeof label === 'string') {\n            return { label };\n        }\n        else {\n            return label[this.index];\n        }\n    }\n}\nclass ActiveInlayHintInfo {\n    constructor(part, hasTriggerModifier) {\n        this.part = part;\n        this.hasTriggerModifier = hasTriggerModifier;\n    }\n}\n// --- controller\nlet InlayHintsController = InlayHintsController_1 = class InlayHintsController {\n    static get(editor) {\n        var _a;\n        return (_a = editor.getContribution(InlayHintsController_1.ID)) !== null && _a !== void 0 ? _a : undefined;\n    }\n    constructor(_editor, _languageFeaturesService, _featureDebounce, _inlayHintsCache, _commandService, _notificationService, _instaService) {\n        this._editor = _editor;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._inlayHintsCache = _inlayHintsCache;\n        this._commandService = _commandService;\n        this._notificationService = _notificationService;\n        this._instaService = _instaService;\n        this._disposables = new DisposableStore();\n        this._sessionDisposables = new DisposableStore();\n        this._decorationsMetadata = new Map();\n        this._ruleFactory = new DynamicCssRules(this._editor);\n        this._activeRenderMode = 0 /* RenderMode.Normal */;\n        this._debounceInfo = _featureDebounce.for(_languageFeaturesService.inlayHintsProvider, 'InlayHint', { min: 25 });\n        this._disposables.add(_languageFeaturesService.inlayHintsProvider.onDidChange(() => this._update()));\n        this._disposables.add(_editor.onDidChangeModel(() => this._update()));\n        this._disposables.add(_editor.onDidChangeModelLanguage(() => this._update()));\n        this._disposables.add(_editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(139 /* EditorOption.inlayHints */)) {\n                this._update();\n            }\n        }));\n        this._update();\n    }\n    dispose() {\n        this._sessionDisposables.dispose();\n        this._removeAllDecorations();\n        this._disposables.dispose();\n    }\n    _update() {\n        this._sessionDisposables.clear();\n        this._removeAllDecorations();\n        const options = this._editor.getOption(139 /* EditorOption.inlayHints */);\n        if (options.enabled === 'off') {\n            return;\n        }\n        const model = this._editor.getModel();\n        if (!model || !this._languageFeaturesService.inlayHintsProvider.has(model)) {\n            return;\n        }\n        // iff possible, quickly update from cache\n        const cached = this._inlayHintsCache.get(model);\n        if (cached) {\n            this._updateHintsDecorators([model.getFullModelRange()], cached);\n        }\n        this._sessionDisposables.add(toDisposable(() => {\n            // cache items when switching files etc\n            if (!model.isDisposed()) {\n                this._cacheHintsForFastRestore(model);\n            }\n        }));\n        let cts;\n        const watchedProviders = new Set();\n        const scheduler = new RunOnceScheduler(() => __awaiter(this, void 0, void 0, function* () {\n            const t1 = Date.now();\n            cts === null || cts === void 0 ? void 0 : cts.dispose(true);\n            cts = new CancellationTokenSource();\n            const listener = model.onWillDispose(() => cts === null || cts === void 0 ? void 0 : cts.cancel());\n            try {\n                const myToken = cts.token;\n                const inlayHints = yield InlayHintsFragments.create(this._languageFeaturesService.inlayHintsProvider, model, this._getHintsRanges(), myToken);\n                scheduler.delay = this._debounceInfo.update(model, Date.now() - t1);\n                if (myToken.isCancellationRequested) {\n                    inlayHints.dispose();\n                    return;\n                }\n                // listen to provider changes\n                for (const provider of inlayHints.provider) {\n                    if (typeof provider.onDidChangeInlayHints === 'function' && !watchedProviders.has(provider)) {\n                        watchedProviders.add(provider);\n                        this._sessionDisposables.add(provider.onDidChangeInlayHints(() => {\n                            if (!scheduler.isScheduled()) { // ignore event when request is already scheduled\n                                scheduler.schedule();\n                            }\n                        }));\n                    }\n                }\n                this._sessionDisposables.add(inlayHints);\n                this._updateHintsDecorators(inlayHints.ranges, inlayHints.items);\n                this._cacheHintsForFastRestore(model);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n            finally {\n                cts.dispose();\n                listener.dispose();\n            }\n        }), this._debounceInfo.get(model));\n        this._sessionDisposables.add(scheduler);\n        this._sessionDisposables.add(toDisposable(() => cts === null || cts === void 0 ? void 0 : cts.dispose(true)));\n        scheduler.schedule(0);\n        this._sessionDisposables.add(this._editor.onDidScrollChange((e) => {\n            // update when scroll position changes\n            // uses scrollTopChanged has weak heuristic to differenatiate between scrolling due to\n            // typing or due to \"actual\" scrolling\n            if (e.scrollTopChanged || !scheduler.isScheduled()) {\n                scheduler.schedule();\n            }\n        }));\n        this._sessionDisposables.add(this._editor.onDidChangeModelContent((e) => {\n            // update less aggressive when typing\n            const delay = Math.max(scheduler.delay, 1250);\n            scheduler.schedule(delay);\n        }));\n        if (options.enabled === 'on') {\n            // different \"on\" modes: always\n            this._activeRenderMode = 0 /* RenderMode.Normal */;\n        }\n        else {\n            // different \"on\" modes: offUnlessPressed, or onUnlessPressed\n            let defaultMode;\n            let altMode;\n            if (options.enabled === 'onUnlessPressed') {\n                defaultMode = 0 /* RenderMode.Normal */;\n                altMode = 1 /* RenderMode.Invisible */;\n            }\n            else {\n                defaultMode = 1 /* RenderMode.Invisible */;\n                altMode = 0 /* RenderMode.Normal */;\n            }\n            this._activeRenderMode = defaultMode;\n            this._sessionDisposables.add(ModifierKeyEmitter.getInstance().event(e => {\n                if (!this._editor.hasModel()) {\n                    return;\n                }\n                const newRenderMode = e.altKey && e.ctrlKey && !(e.shiftKey || e.metaKey) ? altMode : defaultMode;\n                if (newRenderMode !== this._activeRenderMode) {\n                    this._activeRenderMode = newRenderMode;\n                    const model = this._editor.getModel();\n                    const copies = this._copyInlayHintsWithCurrentAnchor(model);\n                    this._updateHintsDecorators([model.getFullModelRange()], copies);\n                    scheduler.schedule(0);\n                }\n            }));\n        }\n        // mouse gestures\n        this._sessionDisposables.add(this._installDblClickGesture(() => scheduler.schedule(0)));\n        this._sessionDisposables.add(this._installLinkGesture());\n        this._sessionDisposables.add(this._installContextMenu());\n    }\n    _installLinkGesture() {\n        const store = new DisposableStore();\n        const gesture = store.add(new ClickLinkGesture(this._editor));\n        // let removeHighlight = () => { };\n        const sessionStore = new DisposableStore();\n        store.add(sessionStore);\n        store.add(gesture.onMouseMoveOrRelevantKeyDown(e => {\n            const [mouseEvent] = e;\n            const labelPart = this._getInlayHintLabelPart(mouseEvent);\n            const model = this._editor.getModel();\n            if (!labelPart || !model) {\n                sessionStore.clear();\n                return;\n            }\n            // resolve the item\n            const cts = new CancellationTokenSource();\n            sessionStore.add(toDisposable(() => cts.dispose(true)));\n            labelPart.item.resolve(cts.token);\n            // render link => when the modifier is pressed and when there is a command or location\n            this._activeInlayHintPart = labelPart.part.command || labelPart.part.location\n                ? new ActiveInlayHintInfo(labelPart, mouseEvent.hasTriggerModifier)\n                : undefined;\n            const lineNumber = model.validatePosition(labelPart.item.hint.position).lineNumber;\n            const range = new Range(lineNumber, 1, lineNumber, model.getLineMaxColumn(lineNumber));\n            const lineHints = this._getInlineHintsForRange(range);\n            this._updateHintsDecorators([range], lineHints);\n            sessionStore.add(toDisposable(() => {\n                this._activeInlayHintPart = undefined;\n                this._updateHintsDecorators([range], lineHints);\n            }));\n        }));\n        store.add(gesture.onCancel(() => sessionStore.clear()));\n        store.add(gesture.onExecute((e) => __awaiter(this, void 0, void 0, function* () {\n            const label = this._getInlayHintLabelPart(e);\n            if (label) {\n                const part = label.part;\n                if (part.location) {\n                    // location -> execute go to def\n                    this._instaService.invokeFunction(goToDefinitionWithLocation, e, this._editor, part.location);\n                }\n                else if (languages.Command.is(part.command)) {\n                    // command -> execute it\n                    yield this._invokeCommand(part.command, label.item);\n                }\n            }\n        })));\n        return store;\n    }\n    _getInlineHintsForRange(range) {\n        const lineHints = new Set();\n        for (const data of this._decorationsMetadata.values()) {\n            if (range.containsRange(data.item.anchor.range)) {\n                lineHints.add(data.item);\n            }\n        }\n        return Array.from(lineHints);\n    }\n    _installDblClickGesture(updateInlayHints) {\n        return this._editor.onMouseUp((e) => __awaiter(this, void 0, void 0, function* () {\n            if (e.event.detail !== 2) {\n                return;\n            }\n            const part = this._getInlayHintLabelPart(e);\n            if (!part) {\n                return;\n            }\n            e.event.preventDefault();\n            yield part.item.resolve(CancellationToken.None);\n            if (isNonEmptyArray(part.item.hint.textEdits)) {\n                const edits = part.item.hint.textEdits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text));\n                this._editor.executeEdits('inlayHint.default', edits);\n                updateInlayHints();\n            }\n        }));\n    }\n    _installContextMenu() {\n        return this._editor.onContextMenu((e) => __awaiter(this, void 0, void 0, function* () {\n            if (!(e.event.target instanceof HTMLElement)) {\n                return;\n            }\n            const part = this._getInlayHintLabelPart(e);\n            if (part) {\n                yield this._instaService.invokeFunction(showGoToContextMenu, this._editor, e.event.target, part);\n            }\n        }));\n    }\n    _getInlayHintLabelPart(e) {\n        var _a;\n        if (e.target.type !== 6 /* MouseTargetType.CONTENT_TEXT */) {\n            return undefined;\n        }\n        const options = (_a = e.target.detail.injectedText) === null || _a === void 0 ? void 0 : _a.options;\n        if (options instanceof ModelDecorationInjectedTextOptions && (options === null || options === void 0 ? void 0 : options.attachedData) instanceof RenderedInlayHintLabelPart) {\n            return options.attachedData;\n        }\n        return undefined;\n    }\n    _invokeCommand(command, item) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._commandService.executeCommand(command.id, ...((_a = command.arguments) !== null && _a !== void 0 ? _a : []));\n            }\n            catch (err) {\n                this._notificationService.notify({\n                    severity: Severity.Error,\n                    source: item.provider.displayName,\n                    message: err\n                });\n            }\n        });\n    }\n    _cacheHintsForFastRestore(model) {\n        const hints = this._copyInlayHintsWithCurrentAnchor(model);\n        this._inlayHintsCache.set(model, hints);\n    }\n    // return inlay hints but with an anchor that reflects \"updates\"\n    // that happened after receiving them, e.g adding new lines before a hint\n    _copyInlayHintsWithCurrentAnchor(model) {\n        const items = new Map();\n        for (const [id, obj] of this._decorationsMetadata) {\n            if (items.has(obj.item)) {\n                // an inlay item can be rendered as multiple decorations\n                // but they will all uses the same range\n                continue;\n            }\n            const range = model.getDecorationRange(id);\n            if (range) {\n                // update range with whatever the editor has tweaked it to\n                const anchor = new InlayHintAnchor(range, obj.item.anchor.direction);\n                const copy = obj.item.with({ anchor });\n                items.set(obj.item, copy);\n            }\n        }\n        return Array.from(items.values());\n    }\n    _getHintsRanges() {\n        const extra = 30;\n        const model = this._editor.getModel();\n        const visibleRanges = this._editor.getVisibleRangesPlusViewportAboveBelow();\n        const result = [];\n        for (const range of visibleRanges.sort(Range.compareRangesUsingStarts)) {\n            const extendedRange = model.validateRange(new Range(range.startLineNumber - extra, range.startColumn, range.endLineNumber + extra, range.endColumn));\n            if (result.length === 0 || !Range.areIntersectingOrTouching(result[result.length - 1], extendedRange)) {\n                result.push(extendedRange);\n            }\n            else {\n                result[result.length - 1] = Range.plusRange(result[result.length - 1], extendedRange);\n            }\n        }\n        return result;\n    }\n    _updateHintsDecorators(ranges, items) {\n        var _a, _b;\n        // utils to collect/create injected text decorations\n        const newDecorationsData = [];\n        const addInjectedText = (item, ref, content, cursorStops, attachedData) => {\n            const opts = {\n                content,\n                inlineClassNameAffectsLetterSpacing: true,\n                inlineClassName: ref.className,\n                cursorStops,\n                attachedData\n            };\n            newDecorationsData.push({\n                item,\n                classNameRef: ref,\n                decoration: {\n                    range: item.anchor.range,\n                    options: {\n                        // className: \"rangeHighlight\", // DEBUG highlight to see to what range a hint is attached\n                        description: 'InlayHint',\n                        showIfCollapsed: item.anchor.range.isEmpty(), // \"original\" range is empty\n                        collapseOnReplaceEdit: !item.anchor.range.isEmpty(),\n                        stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */,\n                        [item.anchor.direction]: this._activeRenderMode === 0 /* RenderMode.Normal */ ? opts : undefined\n                    }\n                }\n            });\n        };\n        const addInjectedWhitespace = (item, isLast) => {\n            const marginRule = this._ruleFactory.createClassNameRef({\n                width: `${(fontSize / 3) | 0}px`,\n                display: 'inline-block'\n            });\n            addInjectedText(item, marginRule, '\\u200a', isLast ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None);\n        };\n        //\n        const { fontSize, fontFamily, padding, isUniform } = this._getLayoutInfo();\n        const fontFamilyVar = '--code-editorInlayHintsFontFamily';\n        this._editor.getContainerDomNode().style.setProperty(fontFamilyVar, fontFamily);\n        for (const item of items) {\n            // whitespace leading the actual label\n            if (item.hint.paddingLeft) {\n                addInjectedWhitespace(item, false);\n            }\n            // the label with its parts\n            const parts = typeof item.hint.label === 'string'\n                ? [{ label: item.hint.label }]\n                : item.hint.label;\n            for (let i = 0; i < parts.length; i++) {\n                const part = parts[i];\n                const isFirst = i === 0;\n                const isLast = i === parts.length - 1;\n                const cssProperties = {\n                    fontSize: `${fontSize}px`,\n                    fontFamily: `var(${fontFamilyVar}), ${EDITOR_FONT_DEFAULTS.fontFamily}`,\n                    verticalAlign: isUniform ? 'baseline' : 'middle',\n                    unicodeBidi: 'isolate'\n                };\n                if (isNonEmptyArray(item.hint.textEdits)) {\n                    cssProperties.cursor = 'default';\n                }\n                this._fillInColors(cssProperties, item.hint);\n                if ((part.command || part.location) && ((_a = this._activeInlayHintPart) === null || _a === void 0 ? void 0 : _a.part.item) === item && this._activeInlayHintPart.part.index === i) {\n                    // active link!\n                    cssProperties.textDecoration = 'underline';\n                    if (this._activeInlayHintPart.hasTriggerModifier) {\n                        cssProperties.color = themeColorFromId(colors.editorActiveLinkForeground);\n                        cssProperties.cursor = 'pointer';\n                    }\n                }\n                if (padding) {\n                    if (isFirst && isLast) {\n                        // only element\n                        cssProperties.padding = `1px ${Math.max(1, fontSize / 4) | 0}px`;\n                        cssProperties.borderRadius = `${(fontSize / 4) | 0}px`;\n                    }\n                    else if (isFirst) {\n                        // first element\n                        cssProperties.padding = `1px 0 1px ${Math.max(1, fontSize / 4) | 0}px`;\n                        cssProperties.borderRadius = `${(fontSize / 4) | 0}px 0 0 ${(fontSize / 4) | 0}px`;\n                    }\n                    else if (isLast) {\n                        // last element\n                        cssProperties.padding = `1px ${Math.max(1, fontSize / 4) | 0}px 1px 0`;\n                        cssProperties.borderRadius = `0 ${(fontSize / 4) | 0}px ${(fontSize / 4) | 0}px 0`;\n                    }\n                    else {\n                        cssProperties.padding = `1px 0 1px 0`;\n                    }\n                }\n                addInjectedText(item, this._ruleFactory.createClassNameRef(cssProperties), fixSpace(part.label), isLast && !item.hint.paddingRight ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None, new RenderedInlayHintLabelPart(item, i));\n            }\n            // whitespace trailing the actual label\n            if (item.hint.paddingRight) {\n                addInjectedWhitespace(item, true);\n            }\n            if (newDecorationsData.length > InlayHintsController_1._MAX_DECORATORS) {\n                break;\n            }\n        }\n        // collect all decoration ids that are affected by the ranges\n        // and only update those decorations\n        const decorationIdsToReplace = [];\n        for (const range of ranges) {\n            for (const { id } of (_b = this._editor.getDecorationsInRange(range)) !== null && _b !== void 0 ? _b : []) {\n                const metadata = this._decorationsMetadata.get(id);\n                if (metadata) {\n                    decorationIdsToReplace.push(id);\n                    metadata.classNameRef.dispose();\n                    this._decorationsMetadata.delete(id);\n                }\n            }\n        }\n        const scrollState = StableEditorScrollState.capture(this._editor);\n        this._editor.changeDecorations(accessor => {\n            const newDecorationIds = accessor.deltaDecorations(decorationIdsToReplace, newDecorationsData.map(d => d.decoration));\n            for (let i = 0; i < newDecorationIds.length; i++) {\n                const data = newDecorationsData[i];\n                this._decorationsMetadata.set(newDecorationIds[i], data);\n            }\n        });\n        scrollState.restore(this._editor);\n    }\n    _fillInColors(props, hint) {\n        if (hint.kind === languages.InlayHintKind.Parameter) {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintParameterBackground);\n            props.color = themeColorFromId(colors.editorInlayHintParameterForeground);\n        }\n        else if (hint.kind === languages.InlayHintKind.Type) {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintTypeBackground);\n            props.color = themeColorFromId(colors.editorInlayHintTypeForeground);\n        }\n        else {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintBackground);\n            props.color = themeColorFromId(colors.editorInlayHintForeground);\n        }\n    }\n    _getLayoutInfo() {\n        const options = this._editor.getOption(139 /* EditorOption.inlayHints */);\n        const padding = options.padding;\n        const editorFontSize = this._editor.getOption(52 /* EditorOption.fontSize */);\n        const editorFontFamily = this._editor.getOption(49 /* EditorOption.fontFamily */);\n        let fontSize = options.fontSize;\n        if (!fontSize || fontSize < 5 || fontSize > editorFontSize) {\n            fontSize = editorFontSize;\n        }\n        const fontFamily = options.fontFamily || editorFontFamily;\n        const isUniform = !padding\n            && fontFamily === editorFontFamily\n            && fontSize === editorFontSize;\n        return { fontSize, fontFamily, padding, isUniform };\n    }\n    _removeAllDecorations() {\n        this._editor.removeDecorations(Array.from(this._decorationsMetadata.keys()));\n        for (const obj of this._decorationsMetadata.values()) {\n            obj.classNameRef.dispose();\n        }\n        this._decorationsMetadata.clear();\n    }\n};\nInlayHintsController.ID = 'editor.contrib.InlayHints';\nInlayHintsController._MAX_DECORATORS = 1500;\nInlayHintsController = InlayHintsController_1 = __decorate([\n    __param(1, ILanguageFeaturesService),\n    __param(2, ILanguageFeatureDebounceService),\n    __param(3, IInlayHintsCache),\n    __param(4, ICommandService),\n    __param(5, INotificationService),\n    __param(6, IInstantiationService)\n], InlayHintsController);\nexport { InlayHintsController };\n// Prevents the view from potentially visible whitespace\nfunction fixSpace(str) {\n    const noBreakWhitespace = '\\xa0';\n    return str.replace(/[ \\t]/g, noBreakWhitespace);\n}\nCommandsRegistry.registerCommand('_executeInlayHintProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\n    const [uri, range] = args;\n    assertType(URI.isUri(uri));\n    assertType(Range.isIRange(range));\n    const { inlayHintsProvider } = accessor.get(ILanguageFeaturesService);\n    const ref = yield accessor.get(ITextModelService).createModelReference(uri);\n    try {\n        const model = yield InlayHintsFragments.create(inlayHintsProvider, ref.object.textEditorModel, [Range.lift(range)], CancellationToken.None);\n        const result = model.items.map(i => i.hint);\n        setTimeout(() => model.dispose(), 0); // dispose after sending to ext host\n        return result;\n    }\n    finally {\n        ref.dispose();\n    }\n}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { isEmptyMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ModelDecorationInjectedTextOptions } from '../../../common/model/textModel.js';\nimport { HoverForeignElementAnchor } from '../../hover/browser/hoverTypes.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { getHover } from '../../hover/browser/getHover.js';\nimport { MarkdownHover, MarkdownHoverParticipant } from '../../hover/browser/markdownHoverParticipant.js';\nimport { RenderedInlayHintLabelPart, InlayHintsController } from './inlayHintsController.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { localize } from '../../../../nls.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { asCommandLink } from './inlayHints.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nclass InlayHintsHoverAnchor extends HoverForeignElementAnchor {\n    constructor(part, owner, initialMousePosX, initialMousePosY) {\n        super(10, owner, part.item.anchor.range, initialMousePosX, initialMousePosY, true);\n        this.part = part;\n    }\n}\nlet InlayHintsHover = class InlayHintsHover extends MarkdownHoverParticipant {\n    constructor(editor, languageService, openerService, configurationService, _resolverService, languageFeaturesService) {\n        super(editor, languageService, openerService, configurationService, languageFeaturesService);\n        this._resolverService = _resolverService;\n        this.hoverOrdinal = 6;\n    }\n    suggestHoverAnchor(mouseEvent) {\n        var _a;\n        const controller = InlayHintsController.get(this._editor);\n        if (!controller) {\n            return null;\n        }\n        if (mouseEvent.target.type !== 6 /* MouseTargetType.CONTENT_TEXT */) {\n            return null;\n        }\n        const options = (_a = mouseEvent.target.detail.injectedText) === null || _a === void 0 ? void 0 : _a.options;\n        if (!(options instanceof ModelDecorationInjectedTextOptions && options.attachedData instanceof RenderedInlayHintLabelPart)) {\n            return null;\n        }\n        return new InlayHintsHoverAnchor(options.attachedData, this, mouseEvent.event.posx, mouseEvent.event.posy);\n    }\n    computeSync() {\n        return [];\n    }\n    computeAsync(anchor, _lineDecorations, token) {\n        if (!(anchor instanceof InlayHintsHoverAnchor)) {\n            return AsyncIterableObject.EMPTY;\n        }\n        return new AsyncIterableObject((executor) => __awaiter(this, void 0, void 0, function* () {\n            var _a, e_1, _b, _c;\n            const { part } = anchor;\n            yield part.item.resolve(token);\n            if (token.isCancellationRequested) {\n                return;\n            }\n            // (1) Inlay Tooltip\n            let itemTooltip;\n            if (typeof part.item.hint.tooltip === 'string') {\n                itemTooltip = new MarkdownString().appendText(part.item.hint.tooltip);\n            }\n            else if (part.item.hint.tooltip) {\n                itemTooltip = part.item.hint.tooltip;\n            }\n            if (itemTooltip) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [itemTooltip], false, 0));\n            }\n            // (1.2) Inlay dbl-click gesture\n            if (isNonEmptyArray(part.item.hint.textEdits)) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [new MarkdownString().appendText(localize('hint.dbl', \"Double-click to insert\"))], false, 10001));\n            }\n            // (2) Inlay Label Part Tooltip\n            let partTooltip;\n            if (typeof part.part.tooltip === 'string') {\n                partTooltip = new MarkdownString().appendText(part.part.tooltip);\n            }\n            else if (part.part.tooltip) {\n                partTooltip = part.part.tooltip;\n            }\n            if (partTooltip) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [partTooltip], false, 1));\n            }\n            // (2.2) Inlay Label Part Help Hover\n            if (part.part.location || part.part.command) {\n                let linkHint;\n                const useMetaKey = this._editor.getOption(77 /* EditorOption.multiCursorModifier */) === 'altKey';\n                const kb = useMetaKey\n                    ? platform.isMacintosh\n                        ? localize('links.navigate.kb.meta.mac', \"cmd + click\")\n                        : localize('links.navigate.kb.meta', \"ctrl + click\")\n                    : platform.isMacintosh\n                        ? localize('links.navigate.kb.alt.mac', \"option + click\")\n                        : localize('links.navigate.kb.alt', \"alt + click\");\n                if (part.part.location && part.part.command) {\n                    linkHint = new MarkdownString().appendText(localize('hint.defAndCommand', 'Go to Definition ({0}), right click for more', kb));\n                }\n                else if (part.part.location) {\n                    linkHint = new MarkdownString().appendText(localize('hint.def', 'Go to Definition ({0})', kb));\n                }\n                else if (part.part.command) {\n                    linkHint = new MarkdownString(`[${localize('hint.cmd', \"Execute Command\")}](${asCommandLink(part.part.command)} \"${part.part.command.title}\") (${kb})`, { isTrusted: true });\n                }\n                if (linkHint) {\n                    executor.emitOne(new MarkdownHover(this, anchor.range, [linkHint], false, 10000));\n                }\n            }\n            // (3) Inlay Label Part Location tooltip\n            const iterable = yield this._resolveInlayHintLabelPartHover(part, token);\n            try {\n                for (var _d = true, iterable_1 = __asyncValues(iterable), iterable_1_1; iterable_1_1 = yield iterable_1.next(), _a = iterable_1_1.done, !_a; _d = true) {\n                    _c = iterable_1_1.value;\n                    _d = false;\n                    const item = _c;\n                    executor.emitOne(item);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_1.return)) yield _b.call(iterable_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }));\n    }\n    _resolveInlayHintLabelPartHover(part, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!part.part.location) {\n                return AsyncIterableObject.EMPTY;\n            }\n            const { uri, range } = part.part.location;\n            const ref = yield this._resolverService.createModelReference(uri);\n            try {\n                const model = ref.object.textEditorModel;\n                if (!this._languageFeaturesService.hoverProvider.has(model)) {\n                    return AsyncIterableObject.EMPTY;\n                }\n                return getHover(this._languageFeaturesService.hoverProvider, model, new Position(range.startLineNumber, range.startColumn), token)\n                    .filter(item => !isEmptyMarkdownString(item.hover.contents))\n                    .map(item => new MarkdownHover(this, part.item.anchor.range, item.hover.contents, false, 2 + item.ordinal));\n            }\n            finally {\n                ref.dispose();\n            }\n        });\n    }\n};\nInlayHintsHover = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IConfigurationService),\n    __param(4, ITextModelService),\n    __param(5, ILanguageFeaturesService)\n], InlayHintsHover);\nexport { InlayHintsHover };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { HoverParticipantRegistry } from '../../hover/browser/hoverTypes.js';\nimport { InlayHintsController } from './inlayHintsController.js';\nimport { InlayHintsHover } from './inlayHintsHover.js';\nregisterEditorContribution(InlayHintsController.ID, InlayHintsController, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nHoverParticipantRegistry.register(InlayHintsHover);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Action, Separator } from '../../../../base/common/actions.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { generateUuid } from '../../../../base/common/uuid.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { DefinitionAction, SymbolNavigationAction, SymbolNavigationAnchor } from '../../gotoSymbol/browser/goToCommands.js';\nimport { PeekContext } from '../../peekView/browser/peekView.js';\nimport { isIMenuItem, MenuId, MenuItemAction, MenuRegistry } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nexport function showGoToContextMenu(accessor, editor, anchor, part) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const resolverService = accessor.get(ITextModelService);\n        const contextMenuService = accessor.get(IContextMenuService);\n        const commandService = accessor.get(ICommandService);\n        const instaService = accessor.get(IInstantiationService);\n        const notificationService = accessor.get(INotificationService);\n        yield part.item.resolve(CancellationToken.None);\n        if (!part.part.location) {\n            return;\n        }\n        const location = part.part.location;\n        const menuActions = [];\n        // from all registered (not active) context menu actions select those\n        // that are a symbol navigation actions\n        const filter = new Set(MenuRegistry.getMenuItems(MenuId.EditorContext)\n            .map(item => isIMenuItem(item) ? item.command.id : generateUuid()));\n        for (const delegate of SymbolNavigationAction.all()) {\n            if (filter.has(delegate.desc.id)) {\n                menuActions.push(new Action(delegate.desc.id, MenuItemAction.label(delegate.desc, { renderShortTitle: true }), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                    const ref = yield resolverService.createModelReference(location.uri);\n                    try {\n                        const symbolAnchor = new SymbolNavigationAnchor(ref.object.textEditorModel, Range.getStartPosition(location.range));\n                        const range = part.item.anchor.range;\n                        yield instaService.invokeFunction(delegate.runEditorCommand.bind(delegate), editor, symbolAnchor, range);\n                    }\n                    finally {\n                        ref.dispose();\n                    }\n                })));\n            }\n        }\n        if (part.part.command) {\n            const { command } = part.part;\n            menuActions.push(new Separator());\n            menuActions.push(new Action(command.id, command.title, undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                var _b;\n                try {\n                    yield commandService.executeCommand(command.id, ...((_b = command.arguments) !== null && _b !== void 0 ? _b : []));\n                }\n                catch (err) {\n                    notificationService.notify({\n                        severity: Severity.Error,\n                        source: part.item.provider.displayName,\n                        message: err\n                    });\n                }\n            })));\n        }\n        // show context menu\n        const useShadowDOM = editor.getOption(126 /* EditorOption.useShadowDOM */);\n        contextMenuService.showContextMenu({\n            domForShadowRoot: useShadowDOM ? (_a = editor.getDomNode()) !== null && _a !== void 0 ? _a : undefined : undefined,\n            getAnchor: () => {\n                const box = dom.getDomNodePagePosition(anchor);\n                return { x: box.left, y: box.top + box.height + 8 };\n            },\n            getActions: () => menuActions,\n            onHide: () => {\n                editor.focus();\n            },\n            autoSelectFirstItem: true,\n        });\n    });\n}\nexport function goToDefinitionWithLocation(accessor, event, editor, location) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const resolverService = accessor.get(ITextModelService);\n        const ref = yield resolverService.createModelReference(location.uri);\n        yield editor.invokeWithinContext((accessor) => __awaiter(this, void 0, void 0, function* () {\n            const openToSide = event.hasSideBySideModifier;\n            const contextKeyService = accessor.get(IContextKeyService);\n            const isInPeek = PeekContext.inPeekEditor.getValue(contextKeyService);\n            const canPeek = !openToSide && editor.getOption(87 /* EditorOption.definitionLinkOpensInPeek */) && !isInPeek;\n            const action = new DefinitionAction({ openToSide, openInPeek: canPeek, muteMessage: true }, { title: { value: '', original: '' }, id: '', precondition: undefined });\n            return action.run(accessor, new SymbolNavigationAnchor(ref.object.textEditorModel, Range.getStartPosition(location.range)), Range.lift(location.range));\n        }));\n        ref.dispose();\n    });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const inlineSuggestCommitId = 'editor.action.inlineSuggest.commit';\nexport const showPreviousInlineSuggestionActionId = 'editor.action.inlineSuggest.showPrevious';\nexport const showNextInlineSuggestionActionId = 'editor.action.inlineSuggest.showNext';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { autorun } from '../../../../base/common/observable.js';\nimport { firstNonWhitespaceIndex } from '../../../../base/common/strings.js';\nimport { CursorColumns } from '../../../common/core/cursorColumns.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { localize } from '../../../../nls.js';\nexport class InlineCompletionContextKeys extends Disposable {\n    constructor(contextKeyService, model) {\n        super();\n        this.contextKeyService = contextKeyService;\n        this.model = model;\n        this.inlineCompletionVisible = InlineCompletionContextKeys.inlineSuggestionVisible.bindTo(this.contextKeyService);\n        this.inlineCompletionSuggestsIndentation = InlineCompletionContextKeys.inlineSuggestionHasIndentation.bindTo(this.contextKeyService);\n        this.inlineCompletionSuggestsIndentationLessThanTabSize = InlineCompletionContextKeys.inlineSuggestionHasIndentationLessThanTabSize.bindTo(this.contextKeyService);\n        this.suppressSuggestions = InlineCompletionContextKeys.suppressSuggestions.bindTo(this.contextKeyService);\n        this._register(autorun(reader => {\n            /** @description update context key: inlineCompletionVisible, suppressSuggestions */\n            const model = this.model.read(reader);\n            const state = model === null || model === void 0 ? void 0 : model.state.read(reader);\n            const isInlineCompletionVisible = !!(state === null || state === void 0 ? void 0 : state.inlineCompletion) && (state === null || state === void 0 ? void 0 : state.ghostText) !== undefined && !(state === null || state === void 0 ? void 0 : state.ghostText.isEmpty());\n            this.inlineCompletionVisible.set(isInlineCompletionVisible);\n            if ((state === null || state === void 0 ? void 0 : state.ghostText) && (state === null || state === void 0 ? void 0 : state.inlineCompletion)) {\n                this.suppressSuggestions.set(state.inlineCompletion.inlineCompletion.source.inlineCompletions.suppressSuggestions);\n            }\n        }));\n        this._register(autorun(reader => {\n            /** @description update context key: inlineCompletionSuggestsIndentation, inlineCompletionSuggestsIndentationLessThanTabSize */\n            const model = this.model.read(reader);\n            let startsWithIndentation = false;\n            let startsWithIndentationLessThanTabSize = true;\n            const ghostText = model === null || model === void 0 ? void 0 : model.ghostText.read(reader);\n            if (!!(model === null || model === void 0 ? void 0 : model.selectedSuggestItem) && ghostText && ghostText.parts.length > 0) {\n                const { column, lines } = ghostText.parts[0];\n                const firstLine = lines[0];\n                const indentationEndColumn = model.textModel.getLineIndentColumn(ghostText.lineNumber);\n                const inIndentation = column <= indentationEndColumn;\n                if (inIndentation) {\n                    let firstNonWsIdx = firstNonWhitespaceIndex(firstLine);\n                    if (firstNonWsIdx === -1) {\n                        firstNonWsIdx = firstLine.length - 1;\n                    }\n                    startsWithIndentation = firstNonWsIdx > 0;\n                    const tabSize = model.textModel.getOptions().tabSize;\n                    const visibleColumnIndentation = CursorColumns.visibleColumnFromColumn(firstLine, firstNonWsIdx + 1, tabSize);\n                    startsWithIndentationLessThanTabSize = visibleColumnIndentation < tabSize;\n                }\n            }\n            this.inlineCompletionSuggestsIndentation.set(startsWithIndentation);\n            this.inlineCompletionSuggestsIndentationLessThanTabSize.set(startsWithIndentationLessThanTabSize);\n        }));\n    }\n}\nInlineCompletionContextKeys.inlineSuggestionVisible = new RawContextKey('inlineSuggestionVisible', false, localize('inlineSuggestionVisible', \"Whether an inline suggestion is visible\"));\nInlineCompletionContextKeys.inlineSuggestionHasIndentation = new RawContextKey('inlineSuggestionHasIndentation', false, localize('inlineSuggestionHasIndentation', \"Whether the inline suggestion starts with whitespace\"));\nInlineCompletionContextKeys.inlineSuggestionHasIndentationLessThanTabSize = new RawContextKey('inlineSuggestionHasIndentationLessThanTabSize', true, localize('inlineSuggestionHasIndentationLessThanTabSize', \"Whether the inline suggestion starts with whitespace that is less than what would be inserted by tab\"));\nInlineCompletionContextKeys.suppressSuggestions = new RawContextKey('inlineSuggestionSuppressSuggestions', undefined, localize('suppressSuggestions', \"Whether suggestions should be suppressed for the current suggestion\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BugIndicatingError } from '../../../../base/common/errors.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { autorunOpts } from '../../../../base/common/observable.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nexport function applyEdits(text, edits) {\n    const transformer = new PositionOffsetTransformer(text);\n    const offsetEdits = edits.map(e => {\n        const range = Range.lift(e.range);\n        return ({\n            startOffset: transformer.getOffset(range.getStartPosition()),\n            endOffset: transformer.getOffset(range.getEndPosition()),\n            text: e.text\n        });\n    });\n    offsetEdits.sort((a, b) => b.startOffset - a.startOffset);\n    for (const edit of offsetEdits) {\n        text = text.substring(0, edit.startOffset) + edit.text + text.substring(edit.endOffset);\n    }\n    return text;\n}\nclass PositionOffsetTransformer {\n    constructor(text) {\n        this.lineStartOffsetByLineIdx = [];\n        this.lineStartOffsetByLineIdx.push(0);\n        for (let i = 0; i < text.length; i++) {\n            if (text.charAt(i) === '\\n') {\n                this.lineStartOffsetByLineIdx.push(i + 1);\n            }\n        }\n    }\n    getOffset(position) {\n        return this.lineStartOffsetByLineIdx[position.lineNumber - 1] + position.column - 1;\n    }\n}\nconst array = [];\nexport function getReadonlyEmptyArray() {\n    return array;\n}\nexport class ColumnRange {\n    constructor(startColumn, endColumnExclusive) {\n        this.startColumn = startColumn;\n        this.endColumnExclusive = endColumnExclusive;\n        if (startColumn > endColumnExclusive) {\n            throw new BugIndicatingError(`startColumn ${startColumn} cannot be after endColumnExclusive ${endColumnExclusive}`);\n        }\n    }\n    toRange(lineNumber) {\n        return new Range(lineNumber, this.startColumn, lineNumber, this.endColumnExclusive);\n    }\n    equals(other) {\n        return this.startColumn === other.startColumn\n            && this.endColumnExclusive === other.endColumnExclusive;\n    }\n}\nexport function applyObservableDecorations(editor, decorations) {\n    const d = new DisposableStore();\n    const decorationsCollection = editor.createDecorationsCollection();\n    d.add(autorunOpts({ debugName: () => `Apply decorations from ${decorations.debugName}` }, reader => {\n        const d = decorations.read(reader);\n        decorationsCollection.set(d);\n    }));\n    d.add({\n        dispose: () => {\n            decorationsCollection.clear();\n        }\n    });\n    return d;\n}\nexport function addPositions(pos1, pos2) {\n    return new Position(pos1.lineNumber + pos2.lineNumber - 1, pos2.lineNumber === 1 ? pos1.column + pos2.column - 1 : pos2.column);\n}\nexport function lengthOfText(text) {\n    let line = 1;\n    let column = 1;\n    for (const c of text) {\n        if (c === '\\n') {\n            line++;\n            column = 1;\n        }\n        else {\n            column++;\n        }\n    }\n    return new Position(line, column);\n}\n","import { applyEdits } from './utils.js';\nexport class GhostText {\n    constructor(lineNumber, parts) {\n        this.lineNumber = lineNumber;\n        this.parts = parts;\n    }\n    equals(other) {\n        return this.lineNumber === other.lineNumber &&\n            this.parts.length === other.parts.length &&\n            this.parts.every((part, index) => part.equals(other.parts[index]));\n    }\n    renderForScreenReader(lineText) {\n        if (this.parts.length === 0) {\n            return '';\n        }\n        const lastPart = this.parts[this.parts.length - 1];\n        const cappedLineText = lineText.substr(0, lastPart.column - 1);\n        const text = applyEdits(cappedLineText, this.parts.map(p => ({\n            range: { startLineNumber: 1, endLineNumber: 1, startColumn: p.column, endColumn: p.column },\n            text: p.lines.join('\\n')\n        })));\n        return text.substring(this.parts[0].column - 1);\n    }\n    isEmpty() {\n        return this.parts.every(p => p.lines.length === 0);\n    }\n    get lineCount() {\n        return 1 + this.parts.reduce((r, p) => r + p.lines.length - 1, 0);\n    }\n}\nexport class GhostTextPart {\n    constructor(column, lines, \n    /**\n     * Indicates if this part is a preview of an inline suggestion when a suggestion is previewed.\n    */\n    preview) {\n        this.column = column;\n        this.lines = lines;\n        this.preview = preview;\n    }\n    equals(other) {\n        return this.column === other.column &&\n            this.lines.length === other.lines.length &&\n            this.lines.every((line, index) => line === other.lines[index]);\n    }\n}\nexport class GhostTextReplacement {\n    constructor(lineNumber, columnRange, newLines, additionalReservedLineCount = 0) {\n        this.lineNumber = lineNumber;\n        this.columnRange = columnRange;\n        this.newLines = newLines;\n        this.additionalReservedLineCount = additionalReservedLineCount;\n        this.parts = [\n            new GhostTextPart(this.columnRange.endColumnExclusive, this.newLines, false),\n        ];\n    }\n    renderForScreenReader(_lineText) {\n        return this.newLines.join('\\n');\n    }\n    get lineCount() {\n        return this.newLines.length;\n    }\n    isEmpty() {\n        return this.parts.every(p => p.lines.length === 0);\n    }\n    equals(other) {\n        return this.lineNumber === other.lineNumber &&\n            this.columnRange.equals(other.columnRange) &&\n            this.newLines.length === other.newLines.length &&\n            this.newLines.every((line, index) => line === other.newLines[index]) &&\n            this.additionalReservedLineCount === other.additionalReservedLineCount;\n    }\n}\nexport function ghostTextOrReplacementEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (!a || !b) {\n        return false;\n    }\n    if (a instanceof GhostText && b instanceof GhostText) {\n        return a.equals(b);\n    }\n    if (a instanceof GhostTextReplacement && b instanceof GhostTextReplacement) {\n        return a.equals(b);\n    }\n    return false;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { createTrustedTypesPolicy } from '../../../../base/browser/trustedTypes.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, derived, observableFromEvent, observableSignalFromEvent, observableValue } from '../../../../base/common/observable.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './ghostText.css';\nimport { applyFontInfo } from '../../../browser/config/domFontInfo.js';\nimport { EditorFontLigatures } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { StringBuilder } from '../../../common/core/stringBuilder.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { InjectedTextCursorStops } from '../../../common/model.js';\nimport { LineTokens } from '../../../common/tokens/lineTokens.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { GhostTextReplacement } from './ghostText.js';\nimport { ColumnRange, applyObservableDecorations } from './utils.js';\nexport const GHOST_TEXT_DESCRIPTION = 'ghost-text';\nlet GhostTextWidget = class GhostTextWidget extends Disposable {\n    constructor(editor, model, languageService) {\n        super();\n        this.editor = editor;\n        this.model = model;\n        this.languageService = languageService;\n        this.isDisposed = observableValue(this, false);\n        this.currentTextModel = observableFromEvent(this.editor.onDidChangeModel, () => this.editor.getModel());\n        this.uiState = derived(this, reader => {\n            if (this.isDisposed.read(reader)) {\n                return undefined;\n            }\n            const textModel = this.currentTextModel.read(reader);\n            if (textModel !== this.model.targetTextModel.read(reader)) {\n                return undefined;\n            }\n            const ghostText = this.model.ghostText.read(reader);\n            if (!ghostText) {\n                return undefined;\n            }\n            const replacedRange = ghostText instanceof GhostTextReplacement ? ghostText.columnRange : undefined;\n            const inlineTexts = [];\n            const additionalLines = [];\n            function addToAdditionalLines(lines, className) {\n                if (additionalLines.length > 0) {\n                    const lastLine = additionalLines[additionalLines.length - 1];\n                    if (className) {\n                        lastLine.decorations.push(new LineDecoration(lastLine.content.length + 1, lastLine.content.length + 1 + lines[0].length, className, 0 /* InlineDecorationType.Regular */));\n                    }\n                    lastLine.content += lines[0];\n                    lines = lines.slice(1);\n                }\n                for (const line of lines) {\n                    additionalLines.push({\n                        content: line,\n                        decorations: className ? [new LineDecoration(1, line.length + 1, className, 0 /* InlineDecorationType.Regular */)] : []\n                    });\n                }\n            }\n            const textBufferLine = textModel.getLineContent(ghostText.lineNumber);\n            let hiddenTextStartColumn = undefined;\n            let lastIdx = 0;\n            for (const part of ghostText.parts) {\n                let lines = part.lines;\n                if (hiddenTextStartColumn === undefined) {\n                    inlineTexts.push({\n                        column: part.column,\n                        text: lines[0],\n                        preview: part.preview,\n                    });\n                    lines = lines.slice(1);\n                }\n                else {\n                    addToAdditionalLines([textBufferLine.substring(lastIdx, part.column - 1)], undefined);\n                }\n                if (lines.length > 0) {\n                    addToAdditionalLines(lines, GHOST_TEXT_DESCRIPTION);\n                    if (hiddenTextStartColumn === undefined && part.column <= textBufferLine.length) {\n                        hiddenTextStartColumn = part.column;\n                    }\n                }\n                lastIdx = part.column - 1;\n            }\n            if (hiddenTextStartColumn !== undefined) {\n                addToAdditionalLines([textBufferLine.substring(lastIdx)], undefined);\n            }\n            const hiddenRange = hiddenTextStartColumn !== undefined ? new ColumnRange(hiddenTextStartColumn, textBufferLine.length + 1) : undefined;\n            return {\n                replacedRange,\n                inlineTexts,\n                additionalLines,\n                hiddenRange,\n                lineNumber: ghostText.lineNumber,\n                additionalReservedLineCount: this.model.minReservedLineCount.read(reader),\n                targetTextModel: textModel,\n            };\n        });\n        this.decorations = derived(this, reader => {\n            const uiState = this.uiState.read(reader);\n            if (!uiState) {\n                return [];\n            }\n            const decorations = [];\n            if (uiState.replacedRange) {\n                decorations.push({\n                    range: uiState.replacedRange.toRange(uiState.lineNumber),\n                    options: { inlineClassName: 'inline-completion-text-to-replace', description: 'GhostTextReplacement' }\n                });\n            }\n            if (uiState.hiddenRange) {\n                decorations.push({\n                    range: uiState.hiddenRange.toRange(uiState.lineNumber),\n                    options: { inlineClassName: 'ghost-text-hidden', description: 'ghost-text-hidden', }\n                });\n            }\n            for (const p of uiState.inlineTexts) {\n                decorations.push({\n                    range: Range.fromPositions(new Position(uiState.lineNumber, p.column)),\n                    options: {\n                        description: GHOST_TEXT_DESCRIPTION,\n                        after: { content: p.text, inlineClassName: p.preview ? 'ghost-text-decoration-preview' : 'ghost-text-decoration', cursorStops: InjectedTextCursorStops.Left },\n                        showIfCollapsed: true,\n                    }\n                });\n            }\n            return decorations;\n        });\n        this.additionalLinesWidget = this._register(new AdditionalLinesWidget(this.editor, this.languageService.languageIdCodec, derived(reader => {\n            /** @description lines */\n            const uiState = this.uiState.read(reader);\n            return uiState ? {\n                lineNumber: uiState.lineNumber,\n                additionalLines: uiState.additionalLines,\n                minReservedLineCount: uiState.additionalReservedLineCount,\n                targetTextModel: uiState.targetTextModel,\n            } : undefined;\n        })));\n        this._register(toDisposable(() => { this.isDisposed.set(true, undefined); }));\n        this._register(applyObservableDecorations(this.editor, this.decorations));\n    }\n    ownsViewZone(viewZoneId) {\n        return this.additionalLinesWidget.viewZoneId === viewZoneId;\n    }\n};\nGhostTextWidget = __decorate([\n    __param(2, ILanguageService)\n], GhostTextWidget);\nexport { GhostTextWidget };\nclass AdditionalLinesWidget extends Disposable {\n    get viewZoneId() { return this._viewZoneId; }\n    constructor(editor, languageIdCodec, lines) {\n        super();\n        this.editor = editor;\n        this.languageIdCodec = languageIdCodec;\n        this.lines = lines;\n        this._viewZoneId = undefined;\n        this.editorOptionsChanged = observableSignalFromEvent('editorOptionChanged', Event.filter(this.editor.onDidChangeConfiguration, e => e.hasChanged(33 /* EditorOption.disableMonospaceOptimizations */)\n            || e.hasChanged(116 /* EditorOption.stopRenderingLineAfter */)\n            || e.hasChanged(98 /* EditorOption.renderWhitespace */)\n            || e.hasChanged(93 /* EditorOption.renderControlCharacters */)\n            || e.hasChanged(51 /* EditorOption.fontLigatures */)\n            || e.hasChanged(50 /* EditorOption.fontInfo */)\n            || e.hasChanged(66 /* EditorOption.lineHeight */)));\n        this._register(autorun(reader => {\n            /** @description update view zone */\n            const lines = this.lines.read(reader);\n            this.editorOptionsChanged.read(reader);\n            if (lines) {\n                this.updateLines(lines.lineNumber, lines.additionalLines, lines.minReservedLineCount);\n            }\n            else {\n                this.clear();\n            }\n        }));\n    }\n    dispose() {\n        super.dispose();\n        this.clear();\n    }\n    clear() {\n        this.editor.changeViewZones((changeAccessor) => {\n            if (this._viewZoneId) {\n                changeAccessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n            }\n        });\n    }\n    updateLines(lineNumber, additionalLines, minReservedLineCount) {\n        const textModel = this.editor.getModel();\n        if (!textModel) {\n            return;\n        }\n        const { tabSize } = textModel.getOptions();\n        this.editor.changeViewZones((changeAccessor) => {\n            if (this._viewZoneId) {\n                changeAccessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n            }\n            const heightInLines = Math.max(additionalLines.length, minReservedLineCount);\n            if (heightInLines > 0) {\n                const domNode = document.createElement('div');\n                renderLines(domNode, tabSize, additionalLines, this.editor.getOptions(), this.languageIdCodec);\n                this._viewZoneId = changeAccessor.addZone({\n                    afterLineNumber: lineNumber,\n                    heightInLines: heightInLines,\n                    domNode,\n                    afterColumnAffinity: 1 /* PositionAffinity.Right */\n                });\n            }\n        });\n    }\n}\nfunction renderLines(domNode, tabSize, lines, opts, languageIdCodec) {\n    const disableMonospaceOptimizations = opts.get(33 /* EditorOption.disableMonospaceOptimizations */);\n    const stopRenderingLineAfter = opts.get(116 /* EditorOption.stopRenderingLineAfter */);\n    // To avoid visual confusion, we don't want to render visible whitespace\n    const renderWhitespace = 'none';\n    const renderControlCharacters = opts.get(93 /* EditorOption.renderControlCharacters */);\n    const fontLigatures = opts.get(51 /* EditorOption.fontLigatures */);\n    const fontInfo = opts.get(50 /* EditorOption.fontInfo */);\n    const lineHeight = opts.get(66 /* EditorOption.lineHeight */);\n    const sb = new StringBuilder(10000);\n    sb.appendString('<div class=\"suggest-preview-text\">');\n    for (let i = 0, len = lines.length; i < len; i++) {\n        const lineData = lines[i];\n        const line = lineData.content;\n        sb.appendString('<div class=\"view-line');\n        sb.appendString('\" style=\"top:');\n        sb.appendString(String(i * lineHeight));\n        sb.appendString('px;width:1000000px;\">');\n        const isBasicASCII = strings.isBasicASCII(line);\n        const containsRTL = strings.containsRTL(line);\n        const lineTokens = LineTokens.createEmpty(line, languageIdCodec);\n        renderViewLine(new RenderLineInput((fontInfo.isMonospace && !disableMonospaceOptimizations), fontInfo.canUseHalfwidthRightwardsArrow, line, false, isBasicASCII, containsRTL, 0, lineTokens, lineData.decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null), sb);\n        sb.appendString('</div>');\n    }\n    sb.appendString('</div>');\n    applyFontInfo(domNode, fontInfo);\n    const html = sb.build();\n    const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n    domNode.innerHTML = trustedhtml;\n}\nconst ttPolicy = createTrustedTypesPolicy('editorGhostText', { createHTML: value => value });\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { assertNever } from '../../../../base/common/assert.js';\nimport { DeferredPromise } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { SetMap } from '../../../../base/common/map.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Range } from '../../../common/core/range.js';\nimport { fixBracketsInLine } from '../../../common/model/bracketPairsTextModelPart/fixBrackets.js';\nimport { getReadonlyEmptyArray } from './utils.js';\nimport { SnippetParser, Text } from '../../snippet/browser/snippetParser.js';\nexport function provideInlineCompletions(registry, position, model, context, token = CancellationToken.None, languageConfigurationService) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // Important: Don't use position after the await calls, as the model could have been changed in the meantime!\n        const defaultReplaceRange = getDefaultRange(position, model);\n        const providers = registry.all(model);\n        const multiMap = new SetMap();\n        for (const provider of providers) {\n            if (provider.groupId) {\n                multiMap.add(provider.groupId, provider);\n            }\n        }\n        function getPreferredProviders(provider) {\n            if (!provider.yieldsToGroupIds) {\n                return [];\n            }\n            const result = [];\n            for (const groupId of provider.yieldsToGroupIds || []) {\n                const providers = multiMap.get(groupId);\n                for (const p of providers) {\n                    result.push(p);\n                }\n            }\n            return result;\n        }\n        const states = new Map();\n        const seen = new Set();\n        function findPreferredProviderCircle(provider, stack) {\n            stack = [...stack, provider];\n            if (seen.has(provider)) {\n                return stack;\n            }\n            seen.add(provider);\n            try {\n                const preferred = getPreferredProviders(provider);\n                for (const p of preferred) {\n                    const c = findPreferredProviderCircle(p, stack);\n                    if (c) {\n                        return c;\n                    }\n                }\n            }\n            finally {\n                seen.delete(provider);\n            }\n            return undefined;\n        }\n        function processProvider(provider) {\n            const state = states.get(provider);\n            if (state) {\n                return state;\n            }\n            const circle = findPreferredProviderCircle(provider, []);\n            if (circle) {\n                onUnexpectedExternalError(new Error(`Inline completions: cyclic yield-to dependency detected. Path: ${circle.map(s => s.toString ? s.toString() : ('' + s)).join(' -> ')}`));\n            }\n            const deferredPromise = new DeferredPromise();\n            states.set(provider, deferredPromise.p);\n            (() => __awaiter(this, void 0, void 0, function* () {\n                if (!circle) {\n                    const preferred = getPreferredProviders(provider);\n                    for (const p of preferred) {\n                        const result = yield processProvider(p);\n                        if (result && result.items.length > 0) {\n                            // Skip provider\n                            return undefined;\n                        }\n                    }\n                }\n                try {\n                    const completions = yield provider.provideInlineCompletions(model, position, context, token);\n                    return completions;\n                }\n                catch (e) {\n                    onUnexpectedExternalError(e);\n                    return undefined;\n                }\n            }))().then(c => deferredPromise.complete(c), e => deferredPromise.error(e));\n            return deferredPromise.p;\n        }\n        const providerResults = yield Promise.all(providers.map((provider) => __awaiter(this, void 0, void 0, function* () { return ({ provider, completions: yield processProvider(provider) }); })));\n        const itemsByHash = new Map();\n        const lists = [];\n        for (const result of providerResults) {\n            const completions = result.completions;\n            if (!completions) {\n                continue;\n            }\n            const list = new InlineCompletionList(completions, result.provider);\n            lists.push(list);\n            for (const item of completions.items) {\n                const inlineCompletionItem = InlineCompletionItem.from(item, list, defaultReplaceRange, model, languageConfigurationService);\n                itemsByHash.set(inlineCompletionItem.hash(), inlineCompletionItem);\n            }\n        }\n        return new InlineCompletionProviderResult(Array.from(itemsByHash.values()), new Set(itemsByHash.keys()), lists);\n    });\n}\nexport class InlineCompletionProviderResult {\n    constructor(\n    /**\n     * Free of duplicates.\n     */\n    completions, hashs, providerResults) {\n        this.completions = completions;\n        this.hashs = hashs;\n        this.providerResults = providerResults;\n    }\n    has(item) {\n        return this.hashs.has(item.hash());\n    }\n    dispose() {\n        for (const result of this.providerResults) {\n            result.removeRef();\n        }\n    }\n}\n/**\n * A ref counted pointer to the computed `InlineCompletions` and the `InlineCompletionsProvider` that\n * computed them.\n */\nexport class InlineCompletionList {\n    constructor(inlineCompletions, provider) {\n        this.inlineCompletions = inlineCompletions;\n        this.provider = provider;\n        this.refCount = 1;\n    }\n    addRef() {\n        this.refCount++;\n    }\n    removeRef() {\n        this.refCount--;\n        if (this.refCount === 0) {\n            this.provider.freeInlineCompletions(this.inlineCompletions);\n        }\n    }\n}\nexport class InlineCompletionItem {\n    static from(inlineCompletion, source, defaultReplaceRange, textModel, languageConfigurationService) {\n        let insertText;\n        let snippetInfo;\n        let range = inlineCompletion.range ? Range.lift(inlineCompletion.range) : defaultReplaceRange;\n        if (typeof inlineCompletion.insertText === 'string') {\n            insertText = inlineCompletion.insertText;\n            if (languageConfigurationService && inlineCompletion.completeBracketPairs) {\n                insertText = closeBrackets(insertText, range.getStartPosition(), textModel, languageConfigurationService);\n                // Modify range depending on if brackets are added or removed\n                const diff = insertText.length - inlineCompletion.insertText.length;\n                if (diff !== 0) {\n                    range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn + diff);\n                }\n            }\n            snippetInfo = undefined;\n        }\n        else if ('snippet' in inlineCompletion.insertText) {\n            const preBracketCompletionLength = inlineCompletion.insertText.snippet.length;\n            if (languageConfigurationService && inlineCompletion.completeBracketPairs) {\n                inlineCompletion.insertText.snippet = closeBrackets(inlineCompletion.insertText.snippet, range.getStartPosition(), textModel, languageConfigurationService);\n                // Modify range depending on if brackets are added or removed\n                const diff = inlineCompletion.insertText.snippet.length - preBracketCompletionLength;\n                if (diff !== 0) {\n                    range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn + diff);\n                }\n            }\n            const snippet = new SnippetParser().parse(inlineCompletion.insertText.snippet);\n            if (snippet.children.length === 1 && snippet.children[0] instanceof Text) {\n                insertText = snippet.children[0].value;\n                snippetInfo = undefined;\n            }\n            else {\n                insertText = snippet.toString();\n                snippetInfo = {\n                    snippet: inlineCompletion.insertText.snippet,\n                    range: range\n                };\n            }\n        }\n        else {\n            assertNever(inlineCompletion.insertText);\n        }\n        return new InlineCompletionItem(insertText, inlineCompletion.command, range, insertText, snippetInfo, inlineCompletion.additionalTextEdits || getReadonlyEmptyArray(), inlineCompletion, source);\n    }\n    constructor(filterText, command, range, insertText, snippetInfo, additionalTextEdits, \n    /**\n     * A reference to the original inline completion this inline completion has been constructed from.\n     * Used for event data to ensure referential equality.\n    */\n    sourceInlineCompletion, \n    /**\n     * A reference to the original inline completion list this inline completion has been constructed from.\n     * Used for event data to ensure referential equality.\n    */\n    source) {\n        this.filterText = filterText;\n        this.command = command;\n        this.range = range;\n        this.insertText = insertText;\n        this.snippetInfo = snippetInfo;\n        this.additionalTextEdits = additionalTextEdits;\n        this.sourceInlineCompletion = sourceInlineCompletion;\n        this.source = source;\n        filterText = filterText.replace(/\\r\\n|\\r/g, '\\n');\n        insertText = filterText.replace(/\\r\\n|\\r/g, '\\n');\n    }\n    withRange(updatedRange) {\n        return new InlineCompletionItem(this.filterText, this.command, updatedRange, this.insertText, this.snippetInfo, this.additionalTextEdits, this.sourceInlineCompletion, this.source);\n    }\n    hash() {\n        return JSON.stringify({ insertText: this.insertText, range: this.range.toString() });\n    }\n}\nfunction getDefaultRange(position, model) {\n    const word = model.getWordAtPosition(position);\n    const maxColumn = model.getLineMaxColumn(position.lineNumber);\n    // By default, always replace up until the end of the current line.\n    // This default might be subject to change!\n    return word\n        ? new Range(position.lineNumber, word.startColumn, position.lineNumber, maxColumn)\n        : Range.fromPositions(position, position.with(undefined, maxColumn));\n}\nfunction closeBrackets(text, position, model, languageConfigurationService) {\n    const lineStart = model.getLineContent(position.lineNumber).substring(0, position.column - 1);\n    const newLine = lineStart + text;\n    const newTokens = model.tokenization.tokenizeLineWithEdit(position, newLine.length - (position.column - 1), text);\n    const slicedTokens = newTokens === null || newTokens === void 0 ? void 0 : newTokens.sliceAndInflate(position.column - 1, newLine.length, 0);\n    if (!slicedTokens) {\n        return text;\n    }\n    const newText = fixBracketsInLine(slicedTokens, languageConfigurationService);\n    return newText;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../../base/common/diff/diff.js';\nimport { commonPrefixLength, getLeadingWhitespace, splitLines } from '../../../../base/common/strings.js';\nimport { Range } from '../../../common/core/range.js';\nimport { GhostText, GhostTextPart } from './ghostText.js';\nimport { addPositions, lengthOfText } from './utils.js';\nexport class SingleTextEdit {\n    constructor(range, text) {\n        this.range = range;\n        this.text = text;\n    }\n    removeCommonPrefix(model, validModelRange) {\n        const modelRange = validModelRange ? this.range.intersectRanges(validModelRange) : this.range;\n        if (!modelRange) {\n            return this;\n        }\n        const valueToReplace = model.getValueInRange(modelRange, 1 /* EndOfLinePreference.LF */);\n        const commonPrefixLen = commonPrefixLength(valueToReplace, this.text);\n        const start = addPositions(this.range.getStartPosition(), lengthOfText(valueToReplace.substring(0, commonPrefixLen)));\n        const text = this.text.substring(commonPrefixLen);\n        const range = Range.fromPositions(start, this.range.getEndPosition());\n        return new SingleTextEdit(range, text);\n    }\n    augments(base) {\n        // The augmented completion must replace the base range, but can replace even more\n        return this.text.startsWith(base.text) && rangeExtends(this.range, base.range);\n    }\n    /**\n     * @param previewSuffixLength Sets where to split `inlineCompletion.text`.\n     * \tIf the text is `hello` and the suffix length is 2, the non-preview part is `hel` and the preview-part is `lo`.\n    */\n    computeGhostText(model, mode, cursorPosition, previewSuffixLength = 0) {\n        let edit = this.removeCommonPrefix(model);\n        if (edit.range.endLineNumber !== edit.range.startLineNumber) {\n            // This edit might span multiple lines, but the first lines must be a common prefix.\n            return undefined;\n        }\n        const sourceLine = model.getLineContent(edit.range.startLineNumber);\n        const sourceIndentationLength = getLeadingWhitespace(sourceLine).length;\n        const suggestionTouchesIndentation = edit.range.startColumn - 1 <= sourceIndentationLength;\n        if (suggestionTouchesIndentation) {\n            // source:      ··········[······abc]\n            //                         ^^^^^^^^^ inlineCompletion.range\n            //              ^^^^^^^^^^ ^^^^^^ sourceIndentationLength\n            //                         ^^^^^^ replacedIndentation.length\n            //                               ^^^ rangeThatDoesNotReplaceIndentation\n            // inlineCompletion.text: '··foo'\n            //                         ^^ suggestionAddedIndentationLength\n            const suggestionAddedIndentationLength = getLeadingWhitespace(edit.text).length;\n            const replacedIndentation = sourceLine.substring(edit.range.startColumn - 1, sourceIndentationLength);\n            const [startPosition, endPosition] = [edit.range.getStartPosition(), edit.range.getEndPosition()];\n            const newStartPosition = startPosition.column + replacedIndentation.length <= endPosition.column\n                ? startPosition.delta(0, replacedIndentation.length)\n                : endPosition;\n            const rangeThatDoesNotReplaceIndentation = Range.fromPositions(newStartPosition, endPosition);\n            const suggestionWithoutIndentationChange = edit.text.startsWith(replacedIndentation)\n                // Adds more indentation without changing existing indentation: We can add ghost text for this\n                ? edit.text.substring(replacedIndentation.length)\n                // Changes or removes existing indentation. Only add ghost text for the non-indentation part.\n                : edit.text.substring(suggestionAddedIndentationLength);\n            edit = new SingleTextEdit(rangeThatDoesNotReplaceIndentation, suggestionWithoutIndentationChange);\n        }\n        // This is a single line string\n        const valueToBeReplaced = model.getValueInRange(edit.range);\n        const changes = cachingDiff(valueToBeReplaced, edit.text);\n        if (!changes) {\n            // No ghost text in case the diff would be too slow to compute\n            return undefined;\n        }\n        const lineNumber = edit.range.startLineNumber;\n        const parts = new Array();\n        if (mode === 'prefix') {\n            const filteredChanges = changes.filter(c => c.originalLength === 0);\n            if (filteredChanges.length > 1 || filteredChanges.length === 1 && filteredChanges[0].originalStart !== valueToBeReplaced.length) {\n                // Prefixes only have a single change.\n                return undefined;\n            }\n        }\n        const previewStartInCompletionText = edit.text.length - previewSuffixLength;\n        for (const c of changes) {\n            const insertColumn = edit.range.startColumn + c.originalStart + c.originalLength;\n            if (mode === 'subwordSmart' && cursorPosition && cursorPosition.lineNumber === edit.range.startLineNumber && insertColumn < cursorPosition.column) {\n                // No ghost text before cursor\n                return undefined;\n            }\n            if (c.originalLength > 0) {\n                return undefined;\n            }\n            if (c.modifiedLength === 0) {\n                continue;\n            }\n            const modifiedEnd = c.modifiedStart + c.modifiedLength;\n            const nonPreviewTextEnd = Math.max(c.modifiedStart, Math.min(modifiedEnd, previewStartInCompletionText));\n            const nonPreviewText = edit.text.substring(c.modifiedStart, nonPreviewTextEnd);\n            const italicText = edit.text.substring(nonPreviewTextEnd, Math.max(c.modifiedStart, modifiedEnd));\n            if (nonPreviewText.length > 0) {\n                const lines = splitLines(nonPreviewText);\n                parts.push(new GhostTextPart(insertColumn, lines, false));\n            }\n            if (italicText.length > 0) {\n                const lines = splitLines(italicText);\n                parts.push(new GhostTextPart(insertColumn, lines, true));\n            }\n        }\n        return new GhostText(lineNumber, parts);\n    }\n}\nfunction rangeExtends(extendingRange, rangeToExtend) {\n    return rangeToExtend.getStartPosition().equals(extendingRange.getStartPosition())\n        && rangeToExtend.getEndPosition().isBeforeOrEqual(extendingRange.getEndPosition());\n}\nlet lastRequest = undefined;\nfunction cachingDiff(originalValue, newValue) {\n    if ((lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.originalValue) === originalValue && (lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.newValue) === newValue) {\n        return lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.changes;\n    }\n    else {\n        let changes = smartDiff(originalValue, newValue, true);\n        if (changes) {\n            const deletedChars = deletedCharacters(changes);\n            if (deletedChars > 0) {\n                // For performance reasons, don't compute diff if there is nothing to improve\n                const newChanges = smartDiff(originalValue, newValue, false);\n                if (newChanges && deletedCharacters(newChanges) < deletedChars) {\n                    // Disabling smartness seems to be better here\n                    changes = newChanges;\n                }\n            }\n        }\n        lastRequest = {\n            originalValue,\n            newValue,\n            changes\n        };\n        return changes;\n    }\n}\nfunction deletedCharacters(changes) {\n    let sum = 0;\n    for (const c of changes) {\n        sum += c.originalLength;\n    }\n    return sum;\n}\n/**\n * When matching `if ()` with `if (f() = 1) { g(); }`,\n * align it like this:        `if (       )`\n * Not like this:\t\t\t  `if (  )`\n * Also not like this:\t\t  `if (             )`.\n *\n * The parenthesis are preprocessed to ensure that they match correctly.\n */\nfunction smartDiff(originalValue, newValue, smartBracketMatching) {\n    if (originalValue.length > 5000 || newValue.length > 5000) {\n        // We don't want to work on strings that are too big\n        return undefined;\n    }\n    function getMaxCharCode(val) {\n        let maxCharCode = 0;\n        for (let i = 0, len = val.length; i < len; i++) {\n            const charCode = val.charCodeAt(i);\n            if (charCode > maxCharCode) {\n                maxCharCode = charCode;\n            }\n        }\n        return maxCharCode;\n    }\n    const maxCharCode = Math.max(getMaxCharCode(originalValue), getMaxCharCode(newValue));\n    function getUniqueCharCode(id) {\n        if (id < 0) {\n            throw new Error('unexpected');\n        }\n        return maxCharCode + id + 1;\n    }\n    function getElements(source) {\n        let level = 0;\n        let group = 0;\n        const characters = new Int32Array(source.length);\n        for (let i = 0, len = source.length; i < len; i++) {\n            // TODO support more brackets\n            if (smartBracketMatching && source[i] === '(') {\n                const id = group * 100 + level;\n                characters[i] = getUniqueCharCode(2 * id);\n                level++;\n            }\n            else if (smartBracketMatching && source[i] === ')') {\n                level = Math.max(level - 1, 0);\n                const id = group * 100 + level;\n                characters[i] = getUniqueCharCode(2 * id + 1);\n                if (level === 0) {\n                    group++;\n                }\n            }\n            else {\n                characters[i] = source.charCodeAt(i);\n            }\n        }\n        return characters;\n    }\n    const elements1 = getElements(originalValue);\n    const elements2 = getElements(newValue);\n    return new LcsDiff({ getElements: () => elements1 }, { getElements: () => elements2 }).ComputeDiff(false).changes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { matchesSubString } from '../../../../base/common/filters.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { derived, disposableObservableValue, transaction } from '../../../../base/common/observable.js';\nimport { Position } from '../../../common/core/position.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { provideInlineCompletions } from './provideInlineCompletions.js';\nimport { SingleTextEdit } from './singleTextEdit.js';\nlet InlineCompletionsSource = class InlineCompletionsSource extends Disposable {\n    constructor(textModel, versionId, _debounceValue, languageFeaturesService, languageConfigurationService) {\n        super();\n        this.textModel = textModel;\n        this.versionId = versionId;\n        this._debounceValue = _debounceValue;\n        this.languageFeaturesService = languageFeaturesService;\n        this.languageConfigurationService = languageConfigurationService;\n        this._updateOperation = this._register(new MutableDisposable());\n        this.inlineCompletions = disposableObservableValue('inlineCompletions', undefined);\n        this.suggestWidgetInlineCompletions = disposableObservableValue('suggestWidgetInlineCompletions', undefined);\n        this._register(this.textModel.onDidChangeContent(() => {\n            this._updateOperation.clear();\n        }));\n    }\n    fetch(position, context, activeInlineCompletion) {\n        var _a, _b;\n        const request = new UpdateRequest(position, context, this.textModel.getVersionId());\n        const target = context.selectedSuggestionInfo ? this.suggestWidgetInlineCompletions : this.inlineCompletions;\n        if ((_a = this._updateOperation.value) === null || _a === void 0 ? void 0 : _a.request.satisfies(request)) {\n            return this._updateOperation.value.promise;\n        }\n        else if ((_b = target.get()) === null || _b === void 0 ? void 0 : _b.request.satisfies(request)) {\n            return Promise.resolve(true);\n        }\n        const updateOngoing = !!this._updateOperation.value;\n        this._updateOperation.clear();\n        const source = new CancellationTokenSource();\n        const promise = (() => __awaiter(this, void 0, void 0, function* () {\n            const shouldDebounce = updateOngoing || context.triggerKind === InlineCompletionTriggerKind.Automatic;\n            if (shouldDebounce) {\n                // This debounces the operation\n                yield wait(this._debounceValue.get(this.textModel));\n            }\n            if (source.token.isCancellationRequested || this.textModel.getVersionId() !== request.versionId) {\n                return false;\n            }\n            const startTime = new Date();\n            const updatedCompletions = yield provideInlineCompletions(this.languageFeaturesService.inlineCompletionsProvider, position, this.textModel, context, source.token, this.languageConfigurationService);\n            if (source.token.isCancellationRequested || this.textModel.getVersionId() !== request.versionId) {\n                return false;\n            }\n            const endTime = new Date();\n            this._debounceValue.update(this.textModel, endTime.getTime() - startTime.getTime());\n            const completions = new UpToDateInlineCompletions(updatedCompletions, request, this.textModel, this.versionId);\n            if (activeInlineCompletion) {\n                const asInlineCompletion = activeInlineCompletion.toInlineCompletion(undefined);\n                if (activeInlineCompletion.canBeReused(this.textModel, position) && !updatedCompletions.has(asInlineCompletion)) {\n                    completions.prepend(activeInlineCompletion.inlineCompletion, asInlineCompletion.range, true);\n                }\n            }\n            this._updateOperation.clear();\n            transaction(tx => {\n                /** @description Update completions with provider result */\n                target.set(completions, tx);\n            });\n            return true;\n        }))();\n        const updateOperation = new UpdateOperation(request, source, promise);\n        this._updateOperation.value = updateOperation;\n        return promise;\n    }\n    clear(tx) {\n        this._updateOperation.clear();\n        this.inlineCompletions.set(undefined, tx);\n        this.suggestWidgetInlineCompletions.set(undefined, tx);\n    }\n    clearSuggestWidgetInlineCompletions(tx) {\n        var _a;\n        if ((_a = this._updateOperation.value) === null || _a === void 0 ? void 0 : _a.request.context.selectedSuggestionInfo) {\n            this._updateOperation.clear();\n        }\n        this.suggestWidgetInlineCompletions.set(undefined, tx);\n    }\n    cancelUpdate() {\n        this._updateOperation.clear();\n    }\n};\nInlineCompletionsSource = __decorate([\n    __param(3, ILanguageFeaturesService),\n    __param(4, ILanguageConfigurationService)\n], InlineCompletionsSource);\nexport { InlineCompletionsSource };\nfunction wait(ms, cancellationToken) {\n    return new Promise(resolve => {\n        let d = undefined;\n        const handle = setTimeout(() => {\n            if (d) {\n                d.dispose();\n            }\n            resolve();\n        }, ms);\n        if (cancellationToken) {\n            d = cancellationToken.onCancellationRequested(() => {\n                clearTimeout(handle);\n                if (d) {\n                    d.dispose();\n                }\n                resolve();\n            });\n        }\n    });\n}\nclass UpdateRequest {\n    constructor(position, context, versionId) {\n        this.position = position;\n        this.context = context;\n        this.versionId = versionId;\n    }\n    satisfies(other) {\n        return this.position.equals(other.position)\n            && equals(this.context.selectedSuggestionInfo, other.context.selectedSuggestionInfo, (v1, v2) => v1.equals(v2))\n            && (other.context.triggerKind === InlineCompletionTriggerKind.Automatic\n                || this.context.triggerKind === InlineCompletionTriggerKind.Explicit)\n            && this.versionId === other.versionId;\n    }\n}\nfunction equals(v1, v2, equals) {\n    if (!v1 || !v2) {\n        return v1 === v2;\n    }\n    return equals(v1, v2);\n}\nclass UpdateOperation {\n    constructor(request, cancellationTokenSource, promise) {\n        this.request = request;\n        this.cancellationTokenSource = cancellationTokenSource;\n        this.promise = promise;\n    }\n    dispose() {\n        this.cancellationTokenSource.cancel();\n    }\n}\nexport class UpToDateInlineCompletions {\n    get inlineCompletions() { return this._inlineCompletions; }\n    constructor(inlineCompletionProviderResult, request, textModel, versionId) {\n        this.inlineCompletionProviderResult = inlineCompletionProviderResult;\n        this.request = request;\n        this.textModel = textModel;\n        this.versionId = versionId;\n        this._refCount = 1;\n        this._prependedInlineCompletionItems = [];\n        this._rangeVersionIdValue = 0;\n        this._rangeVersionId = derived(this, reader => {\n            this.versionId.read(reader);\n            let changed = false;\n            for (const i of this._inlineCompletions) {\n                changed = changed || i._updateRange(this.textModel);\n            }\n            if (changed) {\n                this._rangeVersionIdValue++;\n            }\n            return this._rangeVersionIdValue;\n        });\n        const ids = textModel.deltaDecorations([], inlineCompletionProviderResult.completions.map(i => ({\n            range: i.range,\n            options: {\n                description: 'inline-completion-tracking-range'\n            },\n        })));\n        this._inlineCompletions = inlineCompletionProviderResult.completions.map((i, index) => new InlineCompletionWithUpdatedRange(i, ids[index], this._rangeVersionId));\n    }\n    clone() {\n        this._refCount++;\n        return this;\n    }\n    dispose() {\n        this._refCount--;\n        if (this._refCount === 0) {\n            setTimeout(() => {\n                // To fix https://github.com/microsoft/vscode/issues/188348\n                if (!this.textModel.isDisposed()) {\n                    // This is just cleanup. It's ok if it happens with a delay.\n                    this.textModel.deltaDecorations(this._inlineCompletions.map(i => i.decorationId), []);\n                }\n            }, 0);\n            this.inlineCompletionProviderResult.dispose();\n            for (const i of this._prependedInlineCompletionItems) {\n                i.source.removeRef();\n            }\n        }\n    }\n    prepend(inlineCompletion, range, addRefToSource) {\n        if (addRefToSource) {\n            inlineCompletion.source.addRef();\n        }\n        const id = this.textModel.deltaDecorations([], [{\n                range,\n                options: {\n                    description: 'inline-completion-tracking-range'\n                },\n            }])[0];\n        this._inlineCompletions.unshift(new InlineCompletionWithUpdatedRange(inlineCompletion, id, this._rangeVersionId, range));\n        this._prependedInlineCompletionItems.push(inlineCompletion);\n    }\n}\nexport class InlineCompletionWithUpdatedRange {\n    get forwardStable() {\n        var _a;\n        return (_a = this.inlineCompletion.source.inlineCompletions.enableForwardStability) !== null && _a !== void 0 ? _a : false;\n    }\n    constructor(inlineCompletion, decorationId, rangeVersion, initialRange) {\n        this.inlineCompletion = inlineCompletion;\n        this.decorationId = decorationId;\n        this.rangeVersion = rangeVersion;\n        this.semanticId = JSON.stringify([\n            this.inlineCompletion.filterText,\n            this.inlineCompletion.insertText,\n            this.inlineCompletion.range.getStartPosition().toString()\n        ]);\n        this._isValid = true;\n        this._updatedRange = initialRange !== null && initialRange !== void 0 ? initialRange : inlineCompletion.range;\n    }\n    toInlineCompletion(reader) {\n        return this.inlineCompletion.withRange(this._getUpdatedRange(reader));\n    }\n    toSingleTextEdit(reader) {\n        return new SingleTextEdit(this._getUpdatedRange(reader), this.inlineCompletion.insertText);\n    }\n    isVisible(model, cursorPosition, reader) {\n        const minimizedReplacement = this._toFilterTextReplacement(reader).removeCommonPrefix(model);\n        if (!this._isValid\n            || !this.inlineCompletion.range.getStartPosition().equals(this._getUpdatedRange(reader).getStartPosition())\n            || cursorPosition.lineNumber !== minimizedReplacement.range.startLineNumber) {\n            return false;\n        }\n        const originalValue = model.getValueInRange(minimizedReplacement.range, 1 /* EndOfLinePreference.LF */).toLowerCase();\n        const filterText = minimizedReplacement.text.toLowerCase();\n        const cursorPosIndex = Math.max(0, cursorPosition.column - minimizedReplacement.range.startColumn);\n        let filterTextBefore = filterText.substring(0, cursorPosIndex);\n        let filterTextAfter = filterText.substring(cursorPosIndex);\n        let originalValueBefore = originalValue.substring(0, cursorPosIndex);\n        let originalValueAfter = originalValue.substring(cursorPosIndex);\n        const originalValueIndent = model.getLineIndentColumn(minimizedReplacement.range.startLineNumber);\n        if (minimizedReplacement.range.startColumn <= originalValueIndent) {\n            // Remove indentation\n            originalValueBefore = originalValueBefore.trimStart();\n            if (originalValueBefore.length === 0) {\n                originalValueAfter = originalValueAfter.trimStart();\n            }\n            filterTextBefore = filterTextBefore.trimStart();\n            if (filterTextBefore.length === 0) {\n                filterTextAfter = filterTextAfter.trimStart();\n            }\n        }\n        return filterTextBefore.startsWith(originalValueBefore)\n            && !!matchesSubString(originalValueAfter, filterTextAfter);\n    }\n    canBeReused(model, position) {\n        const result = this._isValid\n            && this._getUpdatedRange(undefined).containsPosition(position)\n            && this.isVisible(model, position, undefined)\n            && !this._isSmallerThanOriginal(undefined);\n        return result;\n    }\n    _toFilterTextReplacement(reader) {\n        return new SingleTextEdit(this._getUpdatedRange(reader), this.inlineCompletion.filterText);\n    }\n    _isSmallerThanOriginal(reader) {\n        return length(this._getUpdatedRange(reader)).isBefore(length(this.inlineCompletion.range));\n    }\n    _getUpdatedRange(reader) {\n        this.rangeVersion.read(reader); // This makes sure all the ranges are updated.\n        return this._updatedRange;\n    }\n    _updateRange(textModel) {\n        const range = textModel.getDecorationRange(this.decorationId);\n        if (!range) {\n            // A setValue call might flush all decorations.\n            this._isValid = false;\n            return true;\n        }\n        if (!this._updatedRange.equalsRange(range)) {\n            this._updatedRange = range;\n            return true;\n        }\n        return false;\n    }\n}\nfunction length(range) {\n    if (range.startLineNumber === range.endLineNumber) {\n        return new Position(1, 1 + range.endColumn - range.startColumn);\n    }\n    else {\n        return new Position(1 + range.endLineNumber - range.startLineNumber, range.endColumn);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { mapFindFirst } from '../../../../base/common/arraysFind.js';\nimport { BugIndicatingError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, derived, derivedHandleChanges, derivedOpts, recomputeInitiallyAndOnChange, observableSignal, observableValue, subtransaction, transaction } from '../../../../base/common/observable.js';\nimport { isDefined } from '../../../../base/common/types.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { GhostText, ghostTextOrReplacementEquals } from './ghostText.js';\nimport { InlineCompletionsSource } from './inlineCompletionsSource.js';\nimport { addPositions, lengthOfText } from './utils.js';\nimport { SnippetController2 } from '../../snippet/browser/snippetController2.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nexport var VersionIdChangeReason;\n(function (VersionIdChangeReason) {\n    VersionIdChangeReason[VersionIdChangeReason[\"Undo\"] = 0] = \"Undo\";\n    VersionIdChangeReason[VersionIdChangeReason[\"Redo\"] = 1] = \"Redo\";\n    VersionIdChangeReason[VersionIdChangeReason[\"AcceptWord\"] = 2] = \"AcceptWord\";\n    VersionIdChangeReason[VersionIdChangeReason[\"Other\"] = 3] = \"Other\";\n})(VersionIdChangeReason || (VersionIdChangeReason = {}));\nlet InlineCompletionsModel = class InlineCompletionsModel extends Disposable {\n    get isAcceptingPartially() { return this._isAcceptingPartially; }\n    constructor(textModel, selectedSuggestItem, cursorPosition, textModelVersionId, _debounceValue, _suggestPreviewEnabled, _suggestPreviewMode, _inlineSuggestMode, _enabled, _instantiationService, _commandService, _languageConfigurationService) {\n        super();\n        this.textModel = textModel;\n        this.selectedSuggestItem = selectedSuggestItem;\n        this.cursorPosition = cursorPosition;\n        this.textModelVersionId = textModelVersionId;\n        this._debounceValue = _debounceValue;\n        this._suggestPreviewEnabled = _suggestPreviewEnabled;\n        this._suggestPreviewMode = _suggestPreviewMode;\n        this._inlineSuggestMode = _inlineSuggestMode;\n        this._enabled = _enabled;\n        this._instantiationService = _instantiationService;\n        this._commandService = _commandService;\n        this._languageConfigurationService = _languageConfigurationService;\n        this._source = this._register(this._instantiationService.createInstance(InlineCompletionsSource, this.textModel, this.textModelVersionId, this._debounceValue));\n        this._isActive = observableValue(this, false);\n        this._forceUpdate = observableSignal('forceUpdate');\n        // We use a semantic id to keep the same inline completion selected even if the provider reorders the completions.\n        this._selectedInlineCompletionId = observableValue(this, undefined);\n        this._isAcceptingPartially = false;\n        this._preserveCurrentCompletionReasons = new Set([\n            VersionIdChangeReason.Redo,\n            VersionIdChangeReason.Undo,\n            VersionIdChangeReason.AcceptWord,\n        ]);\n        this._fetchInlineCompletions = derivedHandleChanges({\n            owner: this,\n            createEmptyChangeSummary: () => ({\n                preserveCurrentCompletion: false,\n                inlineCompletionTriggerKind: InlineCompletionTriggerKind.Automatic\n            }),\n            handleChange: (ctx, changeSummary) => {\n                /** @description fetch inline completions */\n                if (ctx.didChange(this.textModelVersionId) && this._preserveCurrentCompletionReasons.has(ctx.change)) {\n                    changeSummary.preserveCurrentCompletion = true;\n                }\n                else if (ctx.didChange(this._forceUpdate)) {\n                    changeSummary.inlineCompletionTriggerKind = ctx.change;\n                }\n                return true;\n            },\n        }, (reader, changeSummary) => {\n            this._forceUpdate.read(reader);\n            const shouldUpdate = (this._enabled.read(reader) && this.selectedSuggestItem.read(reader)) || this._isActive.read(reader);\n            if (!shouldUpdate) {\n                this._source.cancelUpdate();\n                return undefined;\n            }\n            this.textModelVersionId.read(reader); // Refetch on text change\n            const itemToPreserveCandidate = this.selectedInlineCompletion.get();\n            const itemToPreserve = changeSummary.preserveCurrentCompletion || (itemToPreserveCandidate === null || itemToPreserveCandidate === void 0 ? void 0 : itemToPreserveCandidate.forwardStable)\n                ? itemToPreserveCandidate : undefined;\n            const suggestWidgetInlineCompletions = this._source.suggestWidgetInlineCompletions.get();\n            const suggestItem = this.selectedSuggestItem.read(reader);\n            if (suggestWidgetInlineCompletions && !suggestItem) {\n                const inlineCompletions = this._source.inlineCompletions.get();\n                transaction(tx => {\n                    /** @description Seed inline completions with (newer) suggest widget inline completions */\n                    if (inlineCompletions && suggestWidgetInlineCompletions.request.versionId > inlineCompletions.request.versionId) {\n                        this._source.inlineCompletions.set(suggestWidgetInlineCompletions.clone(), tx);\n                    }\n                    this._source.clearSuggestWidgetInlineCompletions(tx);\n                });\n            }\n            const cursorPosition = this.cursorPosition.read(reader);\n            const context = {\n                triggerKind: changeSummary.inlineCompletionTriggerKind,\n                selectedSuggestionInfo: suggestItem === null || suggestItem === void 0 ? void 0 : suggestItem.toSelectedSuggestionInfo(),\n            };\n            return this._source.fetch(cursorPosition, context, itemToPreserve);\n        });\n        this._filteredInlineCompletionItems = derived(this, reader => {\n            const c = this._source.inlineCompletions.read(reader);\n            if (!c) {\n                return [];\n            }\n            const cursorPosition = this.cursorPosition.read(reader);\n            const filteredCompletions = c.inlineCompletions.filter(c => c.isVisible(this.textModel, cursorPosition, reader));\n            return filteredCompletions;\n        });\n        this.selectedInlineCompletionIndex = derived(this, (reader) => {\n            const selectedInlineCompletionId = this._selectedInlineCompletionId.read(reader);\n            const filteredCompletions = this._filteredInlineCompletionItems.read(reader);\n            const idx = this._selectedInlineCompletionId === undefined ? -1\n                : filteredCompletions.findIndex(v => v.semanticId === selectedInlineCompletionId);\n            if (idx === -1) {\n                // Reset the selection so that the selection does not jump back when it appears again\n                this._selectedInlineCompletionId.set(undefined, undefined);\n                return 0;\n            }\n            return idx;\n        });\n        this.selectedInlineCompletion = derived(this, (reader) => {\n            const filteredCompletions = this._filteredInlineCompletionItems.read(reader);\n            const idx = this.selectedInlineCompletionIndex.read(reader);\n            return filteredCompletions[idx];\n        });\n        this.lastTriggerKind = this._source.inlineCompletions.map(v => /** @description lastTriggerKind */ v === null || v === void 0 ? void 0 : v.request.context.triggerKind);\n        this.inlineCompletionsCount = derived(this, reader => {\n            if (this.lastTriggerKind.read(reader) === InlineCompletionTriggerKind.Explicit) {\n                return this._filteredInlineCompletionItems.read(reader).length;\n            }\n            else {\n                return undefined;\n            }\n        });\n        this.state = derivedOpts({\n            owner: this,\n            equalityComparer: (a, b) => {\n                if (!a || !b) {\n                    return a === b;\n                }\n                return ghostTextOrReplacementEquals(a.ghostText, b.ghostText)\n                    && a.inlineCompletion === b.inlineCompletion\n                    && a.suggestItem === b.suggestItem;\n            }\n        }, (reader) => {\n            var _a;\n            const model = this.textModel;\n            const suggestItem = this.selectedSuggestItem.read(reader);\n            if (suggestItem) {\n                const suggestCompletion = suggestItem.toSingleTextEdit().removeCommonPrefix(model);\n                const augmentedCompletion = this._computeAugmentedCompletion(suggestCompletion, reader);\n                const isSuggestionPreviewEnabled = this._suggestPreviewEnabled.read(reader);\n                if (!isSuggestionPreviewEnabled && !augmentedCompletion) {\n                    return undefined;\n                }\n                const edit = (_a = augmentedCompletion === null || augmentedCompletion === void 0 ? void 0 : augmentedCompletion.edit) !== null && _a !== void 0 ? _a : suggestCompletion;\n                const editPreviewLength = augmentedCompletion ? augmentedCompletion.edit.text.length - suggestCompletion.text.length : 0;\n                const mode = this._suggestPreviewMode.read(reader);\n                const cursor = this.cursorPosition.read(reader);\n                const newGhostText = edit.computeGhostText(model, mode, cursor, editPreviewLength);\n                // Show an invisible ghost text to reserve space\n                const ghostText = newGhostText !== null && newGhostText !== void 0 ? newGhostText : new GhostText(edit.range.endLineNumber, []);\n                return { ghostText, inlineCompletion: augmentedCompletion === null || augmentedCompletion === void 0 ? void 0 : augmentedCompletion.completion, suggestItem };\n            }\n            else {\n                if (!this._isActive.read(reader)) {\n                    return undefined;\n                }\n                const item = this.selectedInlineCompletion.read(reader);\n                if (!item) {\n                    return undefined;\n                }\n                const replacement = item.toSingleTextEdit(reader);\n                const mode = this._inlineSuggestMode.read(reader);\n                const cursor = this.cursorPosition.read(reader);\n                const ghostText = replacement.computeGhostText(model, mode, cursor);\n                return ghostText ? { ghostText, inlineCompletion: item, suggestItem: undefined } : undefined;\n            }\n        });\n        this.ghostText = derivedOpts({\n            owner: this,\n            equalityComparer: ghostTextOrReplacementEquals\n        }, reader => {\n            const v = this.state.read(reader);\n            if (!v) {\n                return undefined;\n            }\n            return v.ghostText;\n        });\n        this._register(recomputeInitiallyAndOnChange(this._fetchInlineCompletions));\n        let lastItem = undefined;\n        this._register(autorun(reader => {\n            var _a, _b;\n            /** @description call handleItemDidShow */\n            const item = this.state.read(reader);\n            const completion = item === null || item === void 0 ? void 0 : item.inlineCompletion;\n            if ((completion === null || completion === void 0 ? void 0 : completion.semanticId) !== (lastItem === null || lastItem === void 0 ? void 0 : lastItem.semanticId)) {\n                lastItem = completion;\n                if (completion) {\n                    const i = completion.inlineCompletion;\n                    const src = i.source;\n                    (_b = (_a = src.provider).handleItemDidShow) === null || _b === void 0 ? void 0 : _b.call(_a, src.inlineCompletions, i.sourceInlineCompletion, i.insertText);\n                }\n            }\n        }));\n    }\n    trigger(tx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._isActive.set(true, tx);\n            yield this._fetchInlineCompletions.get();\n        });\n    }\n    triggerExplicitly(tx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            subtransaction(tx, tx => {\n                this._isActive.set(true, tx);\n                this._forceUpdate.trigger(tx, InlineCompletionTriggerKind.Explicit);\n            });\n            yield this._fetchInlineCompletions.get();\n        });\n    }\n    stop(tx) {\n        subtransaction(tx, tx => {\n            this._isActive.set(false, tx);\n            this._source.clear(tx);\n        });\n    }\n    _computeAugmentedCompletion(suggestCompletion, reader) {\n        const model = this.textModel;\n        const suggestWidgetInlineCompletions = this._source.suggestWidgetInlineCompletions.read(reader);\n        const candidateInlineCompletions = suggestWidgetInlineCompletions\n            ? suggestWidgetInlineCompletions.inlineCompletions\n            : [this.selectedInlineCompletion.read(reader)].filter(isDefined);\n        const augmentedCompletion = mapFindFirst(candidateInlineCompletions, completion => {\n            let r = completion.toSingleTextEdit(reader);\n            r = r.removeCommonPrefix(model, Range.fromPositions(r.range.getStartPosition(), suggestCompletion.range.getEndPosition()));\n            return r.augments(suggestCompletion) ? { edit: r, completion } : undefined;\n        });\n        return augmentedCompletion;\n    }\n    _deltaSelectedInlineCompletionIndex(delta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.triggerExplicitly();\n            const completions = this._filteredInlineCompletionItems.get() || [];\n            if (completions.length > 0) {\n                const newIdx = (this.selectedInlineCompletionIndex.get() + delta + completions.length) % completions.length;\n                this._selectedInlineCompletionId.set(completions[newIdx].semanticId, undefined);\n            }\n            else {\n                this._selectedInlineCompletionId.set(undefined, undefined);\n            }\n        });\n    }\n    next() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._deltaSelectedInlineCompletionIndex(1);\n        });\n    }\n    previous() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._deltaSelectedInlineCompletionIndex(-1);\n        });\n    }\n    accept(editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (editor.getModel() !== this.textModel) {\n                throw new BugIndicatingError();\n            }\n            const state = this.state.get();\n            if (!state || state.ghostText.isEmpty() || !state.inlineCompletion) {\n                return;\n            }\n            const completion = state.inlineCompletion.toInlineCompletion(undefined);\n            editor.pushUndoStop();\n            if (completion.snippetInfo) {\n                editor.executeEdits('inlineSuggestion.accept', [\n                    EditOperation.replaceMove(completion.range, ''),\n                    ...completion.additionalTextEdits\n                ]);\n                editor.setPosition(completion.snippetInfo.range.getStartPosition());\n                (_a = SnippetController2.get(editor)) === null || _a === void 0 ? void 0 : _a.insert(completion.snippetInfo.snippet, { undoStopBefore: false });\n            }\n            else {\n                editor.executeEdits('inlineSuggestion.accept', [\n                    EditOperation.replaceMove(completion.range, completion.insertText),\n                    ...completion.additionalTextEdits\n                ]);\n            }\n            if (completion.command) {\n                // Make sure the completion list will not be disposed.\n                completion.source.addRef();\n            }\n            // Reset before invoking the command, since the command might cause a follow up trigger.\n            transaction(tx => {\n                this._source.clear(tx);\n                // Potentially, isActive will get set back to true by the typing or accept inline suggest event\n                // if automatic inline suggestions are enabled.\n                this._isActive.set(false, tx);\n            });\n            if (completion.command) {\n                yield this._commandService\n                    .executeCommand(completion.command.id, ...(completion.command.arguments || []))\n                    .then(undefined, onUnexpectedExternalError);\n                completion.source.removeRef();\n            }\n        });\n    }\n    acceptNextWord(editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._acceptNext(editor, (pos, text) => {\n                const langId = this.textModel.getLanguageIdAtPosition(pos.lineNumber, pos.column);\n                const config = this._languageConfigurationService.getLanguageConfiguration(langId);\n                const wordRegExp = new RegExp(config.wordDefinition.source, config.wordDefinition.flags.replace('g', ''));\n                const m1 = text.match(wordRegExp);\n                let acceptUntilIndexExclusive = 0;\n                if (m1 && m1.index !== undefined) {\n                    if (m1.index === 0) {\n                        acceptUntilIndexExclusive = m1[0].length;\n                    }\n                    else {\n                        acceptUntilIndexExclusive = m1.index;\n                    }\n                }\n                else {\n                    acceptUntilIndexExclusive = text.length;\n                }\n                const wsRegExp = /\\s+/g;\n                const m2 = wsRegExp.exec(text);\n                if (m2 && m2.index !== undefined) {\n                    if (m2.index + m2[0].length < acceptUntilIndexExclusive) {\n                        acceptUntilIndexExclusive = m2.index + m2[0].length;\n                    }\n                }\n                return acceptUntilIndexExclusive;\n            });\n        });\n    }\n    acceptNextLine(editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._acceptNext(editor, (pos, text) => {\n                const m = text.match(/\\n/);\n                if (m && m.index !== undefined) {\n                    return m.index + 1;\n                }\n                return text.length;\n            });\n        });\n    }\n    _acceptNext(editor, getAcceptUntilIndex) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (editor.getModel() !== this.textModel) {\n                throw new BugIndicatingError();\n            }\n            const state = this.state.get();\n            if (!state || state.ghostText.isEmpty() || !state.inlineCompletion) {\n                return;\n            }\n            const ghostText = state.ghostText;\n            const completion = state.inlineCompletion.toInlineCompletion(undefined);\n            if (completion.snippetInfo || completion.filterText !== completion.insertText) {\n                // not in WYSIWYG mode, partial commit might change completion, thus it is not supported\n                yield this.accept(editor);\n                return;\n            }\n            const firstPart = ghostText.parts[0];\n            const position = new Position(ghostText.lineNumber, firstPart.column);\n            const line = firstPart.lines.join('\\n');\n            const acceptUntilIndexExclusive = getAcceptUntilIndex(position, line);\n            if (acceptUntilIndexExclusive === line.length && ghostText.parts.length === 1) {\n                this.accept(editor);\n                return;\n            }\n            const partialText = line.substring(0, acceptUntilIndexExclusive);\n            this._isAcceptingPartially = true;\n            try {\n                editor.pushUndoStop();\n                editor.executeEdits('inlineSuggestion.accept', [\n                    EditOperation.replace(Range.fromPositions(position), partialText),\n                ]);\n                const length = lengthOfText(partialText);\n                editor.setPosition(addPositions(position, length));\n            }\n            finally {\n                this._isAcceptingPartially = false;\n            }\n            if (completion.source.provider.handlePartialAccept) {\n                const acceptedRange = Range.fromPositions(completion.range.getStartPosition(), addPositions(position, lengthOfText(partialText)));\n                // This assumes that the inline completion and the model use the same EOL style.\n                const text = editor.getModel().getValueInRange(acceptedRange, 1 /* EndOfLinePreference.LF */);\n                completion.source.provider.handlePartialAccept(completion.source.inlineCompletions, completion.sourceInlineCompletion, text.length);\n            }\n        });\n    }\n    handleSuggestAccepted(item) {\n        var _a, _b;\n        const itemEdit = item.toSingleTextEdit().removeCommonPrefix(this.textModel);\n        const augmentedCompletion = this._computeAugmentedCompletion(itemEdit, undefined);\n        if (!augmentedCompletion) {\n            return;\n        }\n        const inlineCompletion = augmentedCompletion.completion.inlineCompletion;\n        (_b = (_a = inlineCompletion.source.provider).handlePartialAccept) === null || _b === void 0 ? void 0 : _b.call(_a, inlineCompletion.source.inlineCompletions, inlineCompletion.sourceInlineCompletion, itemEdit.text.length);\n    }\n};\nInlineCompletionsModel = __decorate([\n    __param(9, IInstantiationService),\n    __param(10, ICommandService),\n    __param(11, ILanguageConfigurationService)\n], InlineCompletionsModel);\nexport { InlineCompletionsModel };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { SelectedSuggestionInfo } from '../../../common/languages.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { SnippetSession } from '../../snippet/browser/snippetSession.js';\nimport { SuggestController } from '../../suggest/browser/suggestController.js';\nimport { observableValue, transaction } from '../../../../base/common/observable.js';\nimport { SingleTextEdit } from './singleTextEdit.js';\nimport { compareBy, numberComparator } from '../../../../base/common/arrays.js';\nimport { findFirstMaxBy } from '../../../../base/common/arraysFind.js';\nexport class SuggestWidgetAdaptor extends Disposable {\n    get selectedItem() {\n        return this._selectedItem;\n    }\n    constructor(editor, suggestControllerPreselector, checkModelVersion, onWillAccept) {\n        super();\n        this.editor = editor;\n        this.suggestControllerPreselector = suggestControllerPreselector;\n        this.checkModelVersion = checkModelVersion;\n        this.onWillAccept = onWillAccept;\n        this.isSuggestWidgetVisible = false;\n        this.isShiftKeyPressed = false;\n        this._isActive = false;\n        this._currentSuggestItemInfo = undefined;\n        this._selectedItem = observableValue(this, undefined);\n        // See the command acceptAlternativeSelectedSuggestion that is bound to shift+tab\n        this._register(editor.onKeyDown(e => {\n            if (e.shiftKey && !this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = true;\n                this.update(this._isActive);\n            }\n        }));\n        this._register(editor.onKeyUp(e => {\n            if (e.shiftKey && this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = false;\n                this.update(this._isActive);\n            }\n        }));\n        const suggestController = SuggestController.get(this.editor);\n        if (suggestController) {\n            this._register(suggestController.registerSelector({\n                priority: 100,\n                select: (model, pos, suggestItems) => {\n                    var _a;\n                    transaction(tx => this.checkModelVersion(tx));\n                    const textModel = this.editor.getModel();\n                    if (!textModel) {\n                        // Should not happen\n                        return -1;\n                    }\n                    const itemToPreselect = (_a = this.suggestControllerPreselector()) === null || _a === void 0 ? void 0 : _a.removeCommonPrefix(textModel);\n                    if (!itemToPreselect) {\n                        return -1;\n                    }\n                    const position = Position.lift(pos);\n                    const candidates = suggestItems\n                        .map((suggestItem, index) => {\n                        const suggestItemInfo = SuggestItemInfo.fromSuggestion(suggestController, textModel, position, suggestItem, this.isShiftKeyPressed);\n                        const suggestItemTextEdit = suggestItemInfo.toSingleTextEdit().removeCommonPrefix(textModel);\n                        const valid = itemToPreselect.augments(suggestItemTextEdit);\n                        return { index, valid, prefixLength: suggestItemTextEdit.text.length, suggestItem };\n                    })\n                        .filter(item => item && item.valid && item.prefixLength > 0);\n                    const result = findFirstMaxBy(candidates, compareBy(s => s.prefixLength, numberComparator));\n                    return result ? result.index : -1;\n                }\n            }));\n            let isBoundToSuggestWidget = false;\n            const bindToSuggestWidget = () => {\n                if (isBoundToSuggestWidget) {\n                    return;\n                }\n                isBoundToSuggestWidget = true;\n                this._register(suggestController.widget.value.onDidShow(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n                this._register(suggestController.widget.value.onDidHide(() => {\n                    this.isSuggestWidgetVisible = false;\n                    this.update(false);\n                }));\n                this._register(suggestController.widget.value.onDidFocus(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n            };\n            this._register(Event.once(suggestController.model.onDidTrigger)(e => {\n                bindToSuggestWidget();\n            }));\n            this._register(suggestController.onWillInsertSuggestItem(e => {\n                const position = this.editor.getPosition();\n                const model = this.editor.getModel();\n                if (!position || !model) {\n                    return undefined;\n                }\n                const suggestItemInfo = SuggestItemInfo.fromSuggestion(suggestController, model, position, e.item, this.isShiftKeyPressed);\n                this.onWillAccept(suggestItemInfo);\n            }));\n        }\n        this.update(this._isActive);\n    }\n    update(newActive) {\n        const newInlineCompletion = this.getSuggestItemInfo();\n        if (this._isActive !== newActive || !suggestItemInfoEquals(this._currentSuggestItemInfo, newInlineCompletion)) {\n            this._isActive = newActive;\n            this._currentSuggestItemInfo = newInlineCompletion;\n            transaction(tx => {\n                /** @description Update state from suggest widget */\n                this.checkModelVersion(tx);\n                this._selectedItem.set(this._isActive ? this._currentSuggestItemInfo : undefined, tx);\n            });\n        }\n    }\n    getSuggestItemInfo() {\n        const suggestController = SuggestController.get(this.editor);\n        if (!suggestController || !this.isSuggestWidgetVisible) {\n            return undefined;\n        }\n        const focusedItem = suggestController.widget.value.getFocusedItem();\n        const position = this.editor.getPosition();\n        const model = this.editor.getModel();\n        if (!focusedItem || !position || !model) {\n            return undefined;\n        }\n        return SuggestItemInfo.fromSuggestion(suggestController, model, position, focusedItem.item, this.isShiftKeyPressed);\n    }\n    stopForceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        suggestController === null || suggestController === void 0 ? void 0 : suggestController.stopForceRenderingAbove();\n    }\n    forceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        suggestController === null || suggestController === void 0 ? void 0 : suggestController.forceRenderingAbove();\n    }\n}\nexport class SuggestItemInfo {\n    static fromSuggestion(suggestController, model, position, item, toggleMode) {\n        let { insertText } = item.completion;\n        let isSnippetText = false;\n        if (item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */) {\n            const snippet = new SnippetParser().parse(insertText);\n            if (snippet.children.length < 100) {\n                // Adjust whitespace is expensive.\n                SnippetSession.adjustWhitespace(model, position, true, snippet);\n            }\n            insertText = snippet.toString();\n            isSnippetText = true;\n        }\n        const info = suggestController.getOverwriteInfo(item, toggleMode);\n        return new SuggestItemInfo(Range.fromPositions(position.delta(0, -info.overwriteBefore), position.delta(0, Math.max(info.overwriteAfter, 0))), insertText, item.completion.kind, isSnippetText);\n    }\n    constructor(range, insertText, completionItemKind, isSnippetText) {\n        this.range = range;\n        this.insertText = insertText;\n        this.completionItemKind = completionItemKind;\n        this.isSnippetText = isSnippetText;\n    }\n    equals(other) {\n        return this.range.equalsRange(other.range)\n            && this.insertText === other.insertText\n            && this.completionItemKind === other.completionItemKind\n            && this.isSnippetText === other.isSnippetText;\n    }\n    toSelectedSuggestionInfo() {\n        return new SelectedSuggestionInfo(this.range, this.insertText, this.completionItemKind, this.isSnippetText);\n    }\n    toSingleTextEdit() {\n        return new SingleTextEdit(this.range, this.insertText);\n    }\n}\nfunction suggestItemInfoEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (!a || !b) {\n        return false;\n    }\n    return a.equals(b);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar InlineCompletionsController_1;\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, constObservable, disposableObservableValue, observableFromEvent, observableValue, transaction } from '../../../../base/common/observable.js';\nimport { CoreEditingCommands } from '../../../browser/coreCommands.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { inlineSuggestCommitId } from './commandIds.js';\nimport { GhostTextWidget } from './ghostTextWidget.js';\nimport { InlineCompletionContextKeys } from './inlineCompletionContextKeys.js';\nimport { InlineCompletionsHintsWidget, InlineSuggestionHintsContentWidget } from './inlineCompletionsHintsWidget.js';\nimport { InlineCompletionsModel, VersionIdChangeReason } from './inlineCompletionsModel.js';\nimport { SuggestWidgetAdaptor } from './suggestWidgetInlineCompletionProvider.js';\nimport { localize } from '../../../../nls.js';\nimport { AudioCue, IAudioCueService } from '../../../../platform/audioCues/browser/audioCueService.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nlet InlineCompletionsController = InlineCompletionsController_1 = class InlineCompletionsController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(InlineCompletionsController_1.ID);\n    }\n    constructor(editor, instantiationService, contextKeyService, configurationService, commandService, debounceService, languageFeaturesService, audioCueService, _keybindingService) {\n        super();\n        this.editor = editor;\n        this.instantiationService = instantiationService;\n        this.contextKeyService = contextKeyService;\n        this.configurationService = configurationService;\n        this.commandService = commandService;\n        this.debounceService = debounceService;\n        this.languageFeaturesService = languageFeaturesService;\n        this.audioCueService = audioCueService;\n        this._keybindingService = _keybindingService;\n        this.model = disposableObservableValue('inlineCompletionModel', undefined);\n        this.textModelVersionId = observableValue(this, -1);\n        this.cursorPosition = observableValue(this, new Position(1, 1));\n        this.suggestWidgetAdaptor = this._register(new SuggestWidgetAdaptor(this.editor, () => { var _a, _b; return (_b = (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.selectedInlineCompletion.get()) === null || _b === void 0 ? void 0 : _b.toSingleTextEdit(undefined); }, (tx) => this.updateObservables(tx, VersionIdChangeReason.Other), (item) => {\n            transaction(tx => {\n                var _a;\n                /** @description handleSuggestAccepted */\n                this.updateObservables(tx, VersionIdChangeReason.Other);\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.handleSuggestAccepted(item);\n            });\n        }));\n        this._enabled = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(62 /* EditorOption.inlineSuggest */).enabled);\n        this.ghostTextWidget = this._register(this.instantiationService.createInstance(GhostTextWidget, this.editor, {\n            ghostText: this.model.map((v, reader) => v === null || v === void 0 ? void 0 : v.ghostText.read(reader)),\n            minReservedLineCount: constObservable(0),\n            targetTextModel: this.model.map(v => v === null || v === void 0 ? void 0 : v.textModel),\n        }));\n        this._debounceValue = this.debounceService.for(this.languageFeaturesService.inlineCompletionsProvider, 'InlineCompletionsDebounce', { min: 50, max: 50 });\n        this._register(new InlineCompletionContextKeys(this.contextKeyService, this.model));\n        this._register(Event.runAndSubscribe(editor.onDidChangeModel, () => transaction(tx => {\n            /** @description onDidChangeModel */\n            this.model.set(undefined, tx);\n            this.updateObservables(tx, VersionIdChangeReason.Other);\n            const textModel = editor.getModel();\n            if (textModel) {\n                const model = instantiationService.createInstance(InlineCompletionsModel, textModel, this.suggestWidgetAdaptor.selectedItem, this.cursorPosition, this.textModelVersionId, this._debounceValue, observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(117 /* EditorOption.suggest */).preview), observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(117 /* EditorOption.suggest */).previewMode), observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(62 /* EditorOption.inlineSuggest */).mode), this._enabled);\n                this.model.set(model, tx);\n            }\n        })));\n        const getReason = (e) => {\n            var _a;\n            if (e.isUndoing) {\n                return VersionIdChangeReason.Undo;\n            }\n            if (e.isRedoing) {\n                return VersionIdChangeReason.Redo;\n            }\n            if ((_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.isAcceptingPartially) {\n                return VersionIdChangeReason.AcceptWord;\n            }\n            return VersionIdChangeReason.Other;\n        };\n        this._register(editor.onDidChangeModelContent((e) => transaction(tx => \n        /** @description onDidChangeModelContent */\n        this.updateObservables(tx, getReason(e)))));\n        this._register(editor.onDidChangeCursorPosition(e => transaction(tx => {\n            var _a;\n            /** @description onDidChangeCursorPosition */\n            this.updateObservables(tx, VersionIdChangeReason.Other);\n            if (e.reason === 3 /* CursorChangeReason.Explicit */ || e.source === 'api') {\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\n            }\n        })));\n        this._register(editor.onDidType(() => transaction(tx => {\n            var _a;\n            /** @description onDidType */\n            this.updateObservables(tx, VersionIdChangeReason.Other);\n            if (this._enabled.get()) {\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.trigger(tx);\n            }\n        })));\n        this._register(this.commandService.onDidExecuteCommand((e) => {\n            // These commands don't trigger onDidType.\n            const commands = new Set([\n                CoreEditingCommands.Tab.id,\n                CoreEditingCommands.DeleteLeft.id,\n                CoreEditingCommands.DeleteRight.id,\n                inlineSuggestCommitId,\n                'acceptSelectedSuggestion',\n            ]);\n            if (commands.has(e.commandId) && editor.hasTextFocus() && this._enabled.get()) {\n                transaction(tx => {\n                    var _a;\n                    /** @description onDidExecuteCommand */\n                    (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.trigger(tx);\n                });\n            }\n        }));\n        this._register(this.editor.onDidBlurEditorWidget(() => {\n            // This is a hidden setting very useful for debugging\n            if (this.contextKeyService.getContextKeyValue('accessibleViewIsShown') || this.configurationService.getValue('editor.inlineSuggest.keepOnBlur') ||\n                editor.getOption(62 /* EditorOption.inlineSuggest */).keepOnBlur) {\n                return;\n            }\n            if (InlineSuggestionHintsContentWidget.dropDownVisible) {\n                return;\n            }\n            transaction(tx => {\n                var _a;\n                /** @description onDidBlurEditorWidget */\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\n            });\n        }));\n        this._register(autorun(reader => {\n            var _a;\n            /** @description forceRenderingAbove */\n            const state = (_a = this.model.read(reader)) === null || _a === void 0 ? void 0 : _a.state.read(reader);\n            if (state === null || state === void 0 ? void 0 : state.suggestItem) {\n                if (state.ghostText.lineCount >= 2) {\n                    this.suggestWidgetAdaptor.forceRenderingAbove();\n                }\n            }\n            else {\n                this.suggestWidgetAdaptor.stopForceRenderingAbove();\n            }\n        }));\n        this._register(toDisposable(() => {\n            this.suggestWidgetAdaptor.stopForceRenderingAbove();\n        }));\n        let lastInlineCompletionId = undefined;\n        this._register(autorun(reader => {\n            /** @description play audio cue & read suggestion */\n            const model = this.model.read(reader);\n            const state = model === null || model === void 0 ? void 0 : model.state.read(reader);\n            if (!model || !state || !state.inlineCompletion) {\n                lastInlineCompletionId = undefined;\n                return;\n            }\n            if (state.inlineCompletion.semanticId !== lastInlineCompletionId) {\n                lastInlineCompletionId = state.inlineCompletion.semanticId;\n                const lineText = model.textModel.getLineContent(state.ghostText.lineNumber);\n                this.audioCueService.playAudioCue(AudioCue.inlineSuggestion).then(() => {\n                    if (this.editor.getOption(8 /* EditorOption.screenReaderAnnounceInlineSuggestion */)) {\n                        this.provideScreenReaderUpdate(state.ghostText.renderForScreenReader(lineText));\n                    }\n                });\n            }\n        }));\n        this._register(new InlineCompletionsHintsWidget(this.editor, this.model, this.instantiationService));\n        this._register(this.configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('accessibility.verbosity.inlineCompletions')) {\n                this.editor.updateOptions({ inlineCompletionsAccessibilityVerbose: this.configurationService.getValue('accessibility.verbosity.inlineCompletions') });\n            }\n        }));\n        this.editor.updateOptions({ inlineCompletionsAccessibilityVerbose: this.configurationService.getValue('accessibility.verbosity.inlineCompletions') });\n    }\n    provideScreenReaderUpdate(content) {\n        const accessibleViewShowing = this.contextKeyService.getContextKeyValue('accessibleViewIsShown');\n        const accessibleViewKeybinding = this._keybindingService.lookupKeybinding('editor.action.accessibleView');\n        let hint;\n        if (!accessibleViewShowing && accessibleViewKeybinding && this.editor.getOption(147 /* EditorOption.inlineCompletionsAccessibilityVerbose */)) {\n            hint = localize('showAccessibleViewHint', \"Inspect this in the accessible view ({0})\", accessibleViewKeybinding.getAriaLabel());\n        }\n        hint ? alert(content + ', ' + hint) : alert(content);\n    }\n    /**\n     * Copies over the relevant state from the text model to observables.\n     * This solves all kind of eventing issues, as we make sure we always operate on the latest state,\n     * regardless of who calls into us.\n     */\n    updateObservables(tx, changeReason) {\n        var _a, _b;\n        const newModel = this.editor.getModel();\n        this.textModelVersionId.set((_a = newModel === null || newModel === void 0 ? void 0 : newModel.getVersionId()) !== null && _a !== void 0 ? _a : -1, tx, changeReason);\n        this.cursorPosition.set((_b = this.editor.getPosition()) !== null && _b !== void 0 ? _b : new Position(1, 1), tx);\n    }\n    shouldShowHoverAt(range) {\n        var _a;\n        const ghostText = (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.ghostText.get();\n        if (ghostText) {\n            return ghostText.parts.some(p => range.containsPosition(new Position(ghostText.lineNumber, p.column)));\n        }\n        return false;\n    }\n    shouldShowHoverAtViewZone(viewZoneId) {\n        return this.ghostTextWidget.ownsViewZone(viewZoneId);\n    }\n};\nInlineCompletionsController.ID = 'editor.contrib.inlineCompletionsController';\nInlineCompletionsController = InlineCompletionsController_1 = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IContextKeyService),\n    __param(3, IConfigurationService),\n    __param(4, ICommandService),\n    __param(5, ILanguageFeatureDebounceService),\n    __param(6, ILanguageFeaturesService),\n    __param(7, IAudioCueService),\n    __param(8, IKeybindingService)\n], InlineCompletionsController);\nexport { InlineCompletionsController };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { transaction } from '../../../../base/common/observable.js';\nimport { EditorAction } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { showNextInlineSuggestionActionId, showPreviousInlineSuggestionActionId, inlineSuggestCommitId } from './commandIds.js';\nimport { InlineCompletionContextKeys } from './inlineCompletionContextKeys.js';\nimport { InlineCompletionsController } from './inlineCompletionsController.js';\nimport { Context as SuggestContext } from '../../suggest/browser/suggest.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId, Action2 } from '../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nexport class ShowNextInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: ShowNextInlineSuggestionAction.ID,\n            label: nls.localize('action.inlineSuggest.showNext', \"Show Next Inline Suggestion\"),\n            alias: 'Show Next Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100,\n                primary: 512 /* KeyMod.Alt */ | 94 /* KeyCode.BracketRight */,\n            },\n        });\n    }\n    run(accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = InlineCompletionsController.get(editor);\n            (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.next();\n        });\n    }\n}\nShowNextInlineSuggestionAction.ID = showNextInlineSuggestionActionId;\nexport class ShowPreviousInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: ShowPreviousInlineSuggestionAction.ID,\n            label: nls.localize('action.inlineSuggest.showPrevious', \"Show Previous Inline Suggestion\"),\n            alias: 'Show Previous Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100,\n                primary: 512 /* KeyMod.Alt */ | 92 /* KeyCode.BracketLeft */,\n            },\n        });\n    }\n    run(accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = InlineCompletionsController.get(editor);\n            (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.previous();\n        });\n    }\n}\nShowPreviousInlineSuggestionAction.ID = showPreviousInlineSuggestionActionId;\nexport class TriggerInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inlineSuggest.trigger',\n            label: nls.localize('action.inlineSuggest.trigger', \"Trigger Inline Suggestion\"),\n            alias: 'Trigger Inline Suggestion',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = InlineCompletionsController.get(editor);\n            (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.triggerExplicitly();\n        });\n    }\n}\nexport class AcceptNextWordOfInlineCompletion extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inlineSuggest.acceptNextWord',\n            label: nls.localize('action.inlineSuggest.acceptNextWord', \"Accept Next Word Of Inline Suggestion\"),\n            alias: 'Accept Next Word Of Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */ + 1,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 17 /* KeyCode.RightArrow */,\n                kbExpr: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n            },\n            menuOpts: [{\n                    menuId: MenuId.InlineSuggestionToolbar,\n                    title: nls.localize('acceptWord', 'Accept Word'),\n                    group: 'primary',\n                    order: 2,\n                }],\n        });\n    }\n    run(accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = InlineCompletionsController.get(editor);\n            yield ((_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.acceptNextWord(controller.editor));\n        });\n    }\n}\nexport class AcceptNextLineOfInlineCompletion extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inlineSuggest.acceptNextLine',\n            label: nls.localize('action.inlineSuggest.acceptNextLine', \"Accept Next Line Of Inline Suggestion\"),\n            alias: 'Accept Next Line Of Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */ + 1,\n            },\n            menuOpts: [{\n                    menuId: MenuId.InlineSuggestionToolbar,\n                    title: nls.localize('acceptLine', 'Accept Line'),\n                    group: 'secondary',\n                    order: 2,\n                }],\n        });\n    }\n    run(accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = InlineCompletionsController.get(editor);\n            yield ((_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.acceptNextLine(controller.editor));\n        });\n    }\n}\nexport class AcceptInlineCompletion extends EditorAction {\n    constructor() {\n        super({\n            id: inlineSuggestCommitId,\n            label: nls.localize('action.inlineSuggest.accept', \"Accept Inline Suggestion\"),\n            alias: 'Accept Inline Suggestion',\n            precondition: InlineCompletionContextKeys.inlineSuggestionVisible,\n            menuOpts: [{\n                    menuId: MenuId.InlineSuggestionToolbar,\n                    title: nls.localize('accept', \"Accept\"),\n                    group: 'primary',\n                    order: 1,\n                }],\n            kbOpts: {\n                primary: 2 /* KeyCode.Tab */,\n                weight: 200,\n                kbExpr: ContextKeyExpr.and(InlineCompletionContextKeys.inlineSuggestionVisible, EditorContextKeys.tabMovesFocus.toNegated(), InlineCompletionContextKeys.inlineSuggestionHasIndentationLessThanTabSize, SuggestContext.Visible.toNegated(), EditorContextKeys.hoverFocused.toNegated()),\n            }\n        });\n    }\n    run(accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = InlineCompletionsController.get(editor);\n            if (controller) {\n                (_a = controller.model.get()) === null || _a === void 0 ? void 0 : _a.accept(controller.editor);\n                controller.editor.focus();\n            }\n        });\n    }\n}\nexport class HideInlineCompletion extends EditorAction {\n    constructor() {\n        super({\n            id: HideInlineCompletion.ID,\n            label: nls.localize('action.inlineSuggest.hide', \"Hide Inline Suggestion\"),\n            alias: 'Hide Inline Suggestion',\n            precondition: InlineCompletionContextKeys.inlineSuggestionVisible,\n            kbOpts: {\n                weight: 100,\n                primary: 9 /* KeyCode.Escape */,\n            }\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = InlineCompletionsController.get(editor);\n            transaction(tx => {\n                var _a;\n                (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\n            });\n        });\n    }\n}\nHideInlineCompletion.ID = 'editor.action.inlineSuggest.hide';\nexport class ToggleAlwaysShowInlineSuggestionToolbar extends Action2 {\n    constructor() {\n        super({\n            id: ToggleAlwaysShowInlineSuggestionToolbar.ID,\n            title: nls.localize('action.inlineSuggest.alwaysShowToolbar', \"Always Show Toolbar\"),\n            f1: false,\n            precondition: undefined,\n            menu: [{\n                    id: MenuId.InlineSuggestionToolbar,\n                    group: 'secondary',\n                    order: 10,\n                }],\n            toggled: ContextKeyExpr.equals('config.editor.inlineSuggest.showToolbar', 'always')\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const configService = accessor.get(IConfigurationService);\n            const currentValue = configService.getValue('editor.inlineSuggest.showToolbar');\n            const newValue = currentValue === 'always' ? 'onHover' : 'always';\n            configService.updateValue('editor.inlineSuggest.showToolbar', newValue);\n        });\n    }\n}\nToggleAlwaysShowInlineSuggestionToolbar.ID = 'editor.action.inlineSuggest.toggleAlwaysShowToolbar';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { autorun, constObservable } from '../../../../base/common/observable.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { HoverForeignElementAnchor } from '../../hover/browser/hoverTypes.js';\nimport { InlineCompletionsController } from './inlineCompletionsController.js';\nimport { InlineSuggestionHintsContentWidget } from './inlineCompletionsHintsWidget.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport * as nls from '../../../../nls.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nexport class InlineCompletionsHover {\n    constructor(owner, range, controller) {\n        this.owner = owner;\n        this.range = range;\n        this.controller = controller;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n}\nlet InlineCompletionsHoverParticipant = class InlineCompletionsHoverParticipant {\n    constructor(_editor, _languageService, _openerService, accessibilityService, _instantiationService, _telemetryService) {\n        this._editor = _editor;\n        this._languageService = _languageService;\n        this._openerService = _openerService;\n        this.accessibilityService = accessibilityService;\n        this._instantiationService = _instantiationService;\n        this._telemetryService = _telemetryService;\n        this.hoverOrdinal = 4;\n    }\n    suggestHoverAnchor(mouseEvent) {\n        const controller = InlineCompletionsController.get(this._editor);\n        if (!controller) {\n            return null;\n        }\n        const target = mouseEvent.target;\n        if (target.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */) {\n            // handle the case where the mouse is over the view zone\n            const viewZoneData = target.detail;\n            if (controller.shouldShowHoverAtViewZone(viewZoneData.viewZoneId)) {\n                return new HoverForeignElementAnchor(1000, this, Range.fromPositions(this._editor.getModel().validatePosition(viewZoneData.positionBefore || viewZoneData.position)), mouseEvent.event.posx, mouseEvent.event.posy, false);\n            }\n        }\n        if (target.type === 7 /* MouseTargetType.CONTENT_EMPTY */) {\n            // handle the case where the mouse is over the empty portion of a line following ghost text\n            if (controller.shouldShowHoverAt(target.range)) {\n                return new HoverForeignElementAnchor(1000, this, target.range, mouseEvent.event.posx, mouseEvent.event.posy, false);\n            }\n        }\n        if (target.type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n            // handle the case where the mouse is directly over ghost text\n            const mightBeForeignElement = target.detail.mightBeForeignElement;\n            if (mightBeForeignElement && controller.shouldShowHoverAt(target.range)) {\n                return new HoverForeignElementAnchor(1000, this, target.range, mouseEvent.event.posx, mouseEvent.event.posy, false);\n            }\n        }\n        return null;\n    }\n    computeSync(anchor, lineDecorations) {\n        if (this._editor.getOption(62 /* EditorOption.inlineSuggest */).showToolbar === 'always') {\n            return [];\n        }\n        const controller = InlineCompletionsController.get(this._editor);\n        if (controller && controller.shouldShowHoverAt(anchor.range)) {\n            return [new InlineCompletionsHover(this, anchor.range, controller)];\n        }\n        return [];\n    }\n    renderHoverParts(context, hoverParts) {\n        const disposableStore = new DisposableStore();\n        const part = hoverParts[0];\n        this._telemetryService.publicLog2('inlineCompletionHover.shown');\n        if (this.accessibilityService.isScreenReaderOptimized() && !this._editor.getOption(8 /* EditorOption.screenReaderAnnounceInlineSuggestion */)) {\n            this.renderScreenReaderText(context, part, disposableStore);\n        }\n        const model = part.controller.model.get();\n        const w = this._instantiationService.createInstance(InlineSuggestionHintsContentWidget, this._editor, false, constObservable(null), model.selectedInlineCompletionIndex, model.inlineCompletionsCount, model.selectedInlineCompletion.map(v => { var _a; return (_a = v === null || v === void 0 ? void 0 : v.inlineCompletion.source.inlineCompletions.commands) !== null && _a !== void 0 ? _a : []; }));\n        context.fragment.appendChild(w.getDomNode());\n        model.triggerExplicitly();\n        disposableStore.add(w);\n        return disposableStore;\n    }\n    renderScreenReaderText(context, part, disposableStore) {\n        const $ = dom.$;\n        const markdownHoverElement = $('div.hover-row.markdown-hover');\n        const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents', { ['aria-live']: 'assertive' }));\n        const renderer = disposableStore.add(new MarkdownRenderer({ editor: this._editor }, this._languageService, this._openerService));\n        const render = (code) => {\n            disposableStore.add(renderer.onDidRenderAsync(() => {\n                hoverContentsElement.className = 'hover-contents code-hover-contents';\n                context.onContentsChanged();\n            }));\n            const inlineSuggestionAvailable = nls.localize('inlineSuggestionFollows', \"Suggestion:\");\n            const renderedContents = disposableStore.add(renderer.render(new MarkdownString().appendText(inlineSuggestionAvailable).appendCodeblock('text', code)));\n            hoverContentsElement.replaceChildren(renderedContents.element);\n        };\n        disposableStore.add(autorun(reader => {\n            var _a;\n            /** @description update hover */\n            const ghostText = (_a = part.controller.model.read(reader)) === null || _a === void 0 ? void 0 : _a.ghostText.read(reader);\n            if (ghostText) {\n                const lineText = this._editor.getModel().getLineContent(ghostText.lineNumber);\n                render(ghostText.renderForScreenReader(lineText));\n            }\n            else {\n                dom.reset(hoverContentsElement);\n            }\n        }));\n        context.fragment.appendChild(markdownHoverElement);\n    }\n};\nInlineCompletionsHoverParticipant = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IAccessibilityService),\n    __param(4, IInstantiationService),\n    __param(5, ITelemetryService)\n], InlineCompletionsHoverParticipant);\nexport { InlineCompletionsHoverParticipant };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { HoverParticipantRegistry } from '../../hover/browser/hoverTypes.js';\nimport { TriggerInlineSuggestionAction, ShowNextInlineSuggestionAction, ShowPreviousInlineSuggestionAction, AcceptNextWordOfInlineCompletion, AcceptInlineCompletion, HideInlineCompletion, ToggleAlwaysShowInlineSuggestionToolbar, AcceptNextLineOfInlineCompletion } from './commands.js';\nimport { InlineCompletionsHoverParticipant } from './hoverParticipant.js';\nimport { InlineCompletionsController } from './inlineCompletionsController.js';\nimport { registerAction2 } from '../../../../platform/actions/common/actions.js';\nregisterEditorContribution(InlineCompletionsController.ID, InlineCompletionsController, 3 /* EditorContributionInstantiation.Eventually */);\nregisterEditorAction(TriggerInlineSuggestionAction);\nregisterEditorAction(ShowNextInlineSuggestionAction);\nregisterEditorAction(ShowPreviousInlineSuggestionAction);\nregisterEditorAction(AcceptNextWordOfInlineCompletion);\nregisterEditorAction(AcceptNextLineOfInlineCompletion);\nregisterEditorAction(AcceptInlineCompletion);\nregisterEditorAction(HideInlineCompletion);\nregisterAction2(ToggleAlwaysShowInlineSuggestionToolbar);\nHoverParticipantRegistry.register(InlineCompletionsHoverParticipant);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar InlineSuggestionHintsContentWidget_1;\nimport { h } from '../../../../base/browser/dom.js';\nimport { ActionViewItem } from '../../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { KeybindingLabel, unthemedKeybindingLabelOptions } from '../../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { Action, Separator } from '../../../../base/common/actions.js';\nimport { equals } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, autorunWithStore, derived, observableFromEvent } from '../../../../base/common/observable.js';\nimport { OS } from '../../../../base/common/platform.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport './inlineCompletionsHintsWidget.css';\nimport { Position } from '../../../common/core/position.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { showNextInlineSuggestionActionId, showPreviousInlineSuggestionActionId } from './commandIds.js';\nimport { localize } from '../../../../nls.js';\nimport { MenuEntryActionViewItem, createAndFillInActionBarActions } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { WorkbenchToolBar } from '../../../../platform/actions/browser/toolbar.js';\nimport { IMenuService, MenuId, MenuItemAction } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nlet InlineCompletionsHintsWidget = class InlineCompletionsHintsWidget extends Disposable {\n    constructor(editor, model, instantiationService) {\n        super();\n        this.editor = editor;\n        this.model = model;\n        this.instantiationService = instantiationService;\n        this.alwaysShowToolbar = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(62 /* EditorOption.inlineSuggest */).showToolbar === 'always');\n        this.sessionPosition = undefined;\n        this.position = derived(this, reader => {\n            var _a, _b, _c;\n            const ghostText = (_a = this.model.read(reader)) === null || _a === void 0 ? void 0 : _a.ghostText.read(reader);\n            if (!this.alwaysShowToolbar.read(reader) || !ghostText || ghostText.parts.length === 0) {\n                this.sessionPosition = undefined;\n                return null;\n            }\n            const firstColumn = ghostText.parts[0].column;\n            if (this.sessionPosition && this.sessionPosition.lineNumber !== ghostText.lineNumber) {\n                this.sessionPosition = undefined;\n            }\n            const position = new Position(ghostText.lineNumber, Math.min(firstColumn, (_c = (_b = this.sessionPosition) === null || _b === void 0 ? void 0 : _b.column) !== null && _c !== void 0 ? _c : Number.MAX_SAFE_INTEGER));\n            this.sessionPosition = position;\n            return position;\n        });\n        this._register(autorunWithStore((reader, store) => {\n            /** @description setup content widget */\n            const model = this.model.read(reader);\n            if (!model || !this.alwaysShowToolbar.read(reader)) {\n                return;\n            }\n            const contentWidget = store.add(this.instantiationService.createInstance(InlineSuggestionHintsContentWidget, this.editor, true, this.position, model.selectedInlineCompletionIndex, model.inlineCompletionsCount, model.selectedInlineCompletion.map(v => { var _a; return (_a = v === null || v === void 0 ? void 0 : v.inlineCompletion.source.inlineCompletions.commands) !== null && _a !== void 0 ? _a : []; })));\n            editor.addContentWidget(contentWidget);\n            store.add(toDisposable(() => editor.removeContentWidget(contentWidget)));\n            store.add(autorun(reader => {\n                /** @description request explicit */\n                const position = this.position.read(reader);\n                if (!position) {\n                    return;\n                }\n                if (model.lastTriggerKind.read(reader) !== InlineCompletionTriggerKind.Explicit) {\n                    model.triggerExplicitly();\n                }\n            }));\n        }));\n    }\n};\nInlineCompletionsHintsWidget = __decorate([\n    __param(2, IInstantiationService)\n], InlineCompletionsHintsWidget);\nexport { InlineCompletionsHintsWidget };\nconst inlineSuggestionHintsNextIcon = registerIcon('inline-suggestion-hints-next', Codicon.chevronRight, localize('parameterHintsNextIcon', 'Icon for show next parameter hint.'));\nconst inlineSuggestionHintsPreviousIcon = registerIcon('inline-suggestion-hints-previous', Codicon.chevronLeft, localize('parameterHintsPreviousIcon', 'Icon for show previous parameter hint.'));\nlet InlineSuggestionHintsContentWidget = InlineSuggestionHintsContentWidget_1 = class InlineSuggestionHintsContentWidget extends Disposable {\n    static get dropDownVisible() { return this._dropDownVisible; }\n    createCommandAction(commandId, label, iconClassName) {\n        const action = new Action(commandId, label, iconClassName, true, () => this._commandService.executeCommand(commandId));\n        const kb = this.keybindingService.lookupKeybinding(commandId, this._contextKeyService);\n        let tooltip = label;\n        if (kb) {\n            tooltip = localize({ key: 'content', comment: ['A label', 'A keybinding'] }, '{0} ({1})', label, kb.getLabel());\n        }\n        action.tooltip = tooltip;\n        return action;\n    }\n    constructor(editor, withBorder, _position, _currentSuggestionIdx, _suggestionCount, _extraCommands, _commandService, instantiationService, keybindingService, _contextKeyService, _menuService) {\n        super();\n        this.editor = editor;\n        this.withBorder = withBorder;\n        this._position = _position;\n        this._currentSuggestionIdx = _currentSuggestionIdx;\n        this._suggestionCount = _suggestionCount;\n        this._extraCommands = _extraCommands;\n        this._commandService = _commandService;\n        this.keybindingService = keybindingService;\n        this._contextKeyService = _contextKeyService;\n        this._menuService = _menuService;\n        this.id = `InlineSuggestionHintsContentWidget${InlineSuggestionHintsContentWidget_1.id++}`;\n        this.allowEditorOverflow = true;\n        this.suppressMouseDown = false;\n        this.nodes = h('div.inlineSuggestionsHints', { className: this.withBorder ? '.withBorder' : '' }, [\n            h('div@toolBar'),\n        ]);\n        this.previousAction = this.createCommandAction(showPreviousInlineSuggestionActionId, localize('previous', 'Previous'), ThemeIcon.asClassName(inlineSuggestionHintsPreviousIcon));\n        this.availableSuggestionCountAction = new Action('inlineSuggestionHints.availableSuggestionCount', '', undefined, false);\n        this.nextAction = this.createCommandAction(showNextInlineSuggestionActionId, localize('next', 'Next'), ThemeIcon.asClassName(inlineSuggestionHintsNextIcon));\n        // TODO@hediet: deprecate MenuId.InlineCompletionsActions\n        this.inlineCompletionsActionsMenus = this._register(this._menuService.createMenu(MenuId.InlineCompletionsActions, this._contextKeyService));\n        this.clearAvailableSuggestionCountLabelDebounced = this._register(new RunOnceScheduler(() => {\n            this.availableSuggestionCountAction.label = '';\n        }, 100));\n        this.disableButtonsDebounced = this._register(new RunOnceScheduler(() => {\n            this.previousAction.enabled = this.nextAction.enabled = false;\n        }, 100));\n        this.lastCommands = [];\n        this.toolBar = this._register(instantiationService.createInstance(CustomizedMenuWorkbenchToolBar, this.nodes.toolBar, MenuId.InlineSuggestionToolbar, {\n            menuOptions: { renderShortTitle: true },\n            toolbarOptions: { primaryGroup: g => g.startsWith('primary') },\n            actionViewItemProvider: (action, options) => {\n                if (action instanceof MenuItemAction) {\n                    return instantiationService.createInstance(StatusBarViewItem, action, undefined);\n                }\n                if (action === this.availableSuggestionCountAction) {\n                    const a = new ActionViewItemWithClassName(undefined, action, { label: true, icon: false });\n                    a.setClass('availableSuggestionCount');\n                    return a;\n                }\n                return undefined;\n            },\n            telemetrySource: 'InlineSuggestionToolbar',\n        }));\n        this.toolBar.setPrependedPrimaryActions([\n            this.previousAction,\n            this.availableSuggestionCountAction,\n            this.nextAction,\n        ]);\n        this._register(this.toolBar.onDidChangeDropdownVisibility(e => {\n            InlineSuggestionHintsContentWidget_1._dropDownVisible = e;\n        }));\n        this._register(autorun(reader => {\n            /** @description update position */\n            this._position.read(reader);\n            this.editor.layoutContentWidget(this);\n        }));\n        this._register(autorun(reader => {\n            /** @description counts */\n            const suggestionCount = this._suggestionCount.read(reader);\n            const currentSuggestionIdx = this._currentSuggestionIdx.read(reader);\n            if (suggestionCount !== undefined) {\n                this.clearAvailableSuggestionCountLabelDebounced.cancel();\n                this.availableSuggestionCountAction.label = `${currentSuggestionIdx + 1}/${suggestionCount}`;\n            }\n            else {\n                this.clearAvailableSuggestionCountLabelDebounced.schedule();\n            }\n            if (suggestionCount !== undefined && suggestionCount > 1) {\n                this.disableButtonsDebounced.cancel();\n                this.previousAction.enabled = this.nextAction.enabled = true;\n            }\n            else {\n                this.disableButtonsDebounced.schedule();\n            }\n        }));\n        this._register(autorun(reader => {\n            /** @description extra commands */\n            const extraCommands = this._extraCommands.read(reader);\n            if (equals(this.lastCommands, extraCommands)) {\n                // nothing to update\n                return;\n            }\n            this.lastCommands = extraCommands;\n            const extraActions = extraCommands.map(c => ({\n                class: undefined,\n                id: c.id,\n                enabled: true,\n                tooltip: c.tooltip || '',\n                label: c.title,\n                run: (event) => {\n                    return this._commandService.executeCommand(c.id);\n                },\n            }));\n            for (const [_, group] of this.inlineCompletionsActionsMenus.getActions()) {\n                for (const action of group) {\n                    if (action instanceof MenuItemAction) {\n                        extraActions.push(action);\n                    }\n                }\n            }\n            if (extraActions.length > 0) {\n                extraActions.unshift(new Separator());\n            }\n            this.toolBar.setAdditionalSecondaryActions(extraActions);\n        }));\n    }\n    getId() { return this.id; }\n    getDomNode() {\n        return this.nodes.root;\n    }\n    getPosition() {\n        return {\n            position: this._position.get(),\n            preference: [1 /* ContentWidgetPositionPreference.ABOVE */, 2 /* ContentWidgetPositionPreference.BELOW */],\n            positionAffinity: 3 /* PositionAffinity.LeftOfInjectedText */,\n        };\n    }\n};\nInlineSuggestionHintsContentWidget._dropDownVisible = false;\nInlineSuggestionHintsContentWidget.id = 0;\nInlineSuggestionHintsContentWidget = InlineSuggestionHintsContentWidget_1 = __decorate([\n    __param(6, ICommandService),\n    __param(7, IInstantiationService),\n    __param(8, IKeybindingService),\n    __param(9, IContextKeyService),\n    __param(10, IMenuService)\n], InlineSuggestionHintsContentWidget);\nexport { InlineSuggestionHintsContentWidget };\nclass ActionViewItemWithClassName extends ActionViewItem {\n    constructor() {\n        super(...arguments);\n        this._className = undefined;\n    }\n    setClass(className) {\n        this._className = className;\n    }\n    render(container) {\n        super.render(container);\n        if (this._className) {\n            container.classList.add(this._className);\n        }\n    }\n}\nclass StatusBarViewItem extends MenuEntryActionViewItem {\n    updateLabel() {\n        const kb = this._keybindingService.lookupKeybinding(this._action.id, this._contextKeyService);\n        if (!kb) {\n            return super.updateLabel();\n        }\n        if (this.label) {\n            const div = h('div.keybinding').root;\n            const k = new KeybindingLabel(div, OS, Object.assign({ disableTitle: true }, unthemedKeybindingLabelOptions));\n            k.set(kb);\n            this.label.textContent = this._action.label;\n            this.label.appendChild(div);\n            this.label.classList.add('inlineSuggestionStatusBarItemLabel');\n        }\n    }\n}\nlet CustomizedMenuWorkbenchToolBar = class CustomizedMenuWorkbenchToolBar extends WorkbenchToolBar {\n    constructor(container, menuId, options2, menuService, contextKeyService, contextMenuService, keybindingService, telemetryService) {\n        super(container, Object.assign({ resetMenu: menuId }, options2), menuService, contextKeyService, contextMenuService, keybindingService, telemetryService);\n        this.menuId = menuId;\n        this.options2 = options2;\n        this.menuService = menuService;\n        this.contextKeyService = contextKeyService;\n        this.menu = this._store.add(this.menuService.createMenu(this.menuId, this.contextKeyService, { emitEventsForSubmenuChanges: true }));\n        this.additionalActions = [];\n        this.prependedPrimaryActions = [];\n        this._store.add(this.menu.onDidChange(() => this.updateToolbar()));\n        this.updateToolbar();\n    }\n    updateToolbar() {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const primary = [];\n        const secondary = [];\n        createAndFillInActionBarActions(this.menu, (_a = this.options2) === null || _a === void 0 ? void 0 : _a.menuOptions, { primary, secondary }, (_c = (_b = this.options2) === null || _b === void 0 ? void 0 : _b.toolbarOptions) === null || _c === void 0 ? void 0 : _c.primaryGroup, (_e = (_d = this.options2) === null || _d === void 0 ? void 0 : _d.toolbarOptions) === null || _e === void 0 ? void 0 : _e.shouldInlineSubmenu, (_g = (_f = this.options2) === null || _f === void 0 ? void 0 : _f.toolbarOptions) === null || _g === void 0 ? void 0 : _g.useSeparatorsInPrimaryActions);\n        secondary.push(...this.additionalActions);\n        primary.unshift(...this.prependedPrimaryActions);\n        this.setActions(primary, secondary);\n    }\n    setPrependedPrimaryActions(actions) {\n        if (equals(this.prependedPrimaryActions, actions, (a, b) => a === b)) {\n            return;\n        }\n        this.prependedPrimaryActions = actions;\n        this.updateToolbar();\n    }\n    setAdditionalSecondaryActions(actions) {\n        if (equals(this.additionalActions, actions, (a, b) => a === b)) {\n            return;\n        }\n        this.additionalActions = actions;\n        this.updateToolbar();\n    }\n};\nCustomizedMenuWorkbenchToolBar = __decorate([\n    __param(3, IMenuService),\n    __param(4, IContextKeyService),\n    __param(5, IContextMenuService),\n    __param(6, IKeybindingService),\n    __param(7, ITelemetryService)\n], CustomizedMenuWorkbenchToolBar);\nexport { CustomizedMenuWorkbenchToolBar };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { disposableTimeout } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { noBreakWhitespace } from '../../../../base/common/strings.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport './inlineProgressWidget.css';\nimport { Range } from '../../../common/core/range.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nconst inlineProgressDecoration = ModelDecorationOptions.register({\n    description: 'inline-progress-widget',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    showIfCollapsed: true,\n    after: {\n        content: noBreakWhitespace,\n        inlineClassName: 'inline-editor-progress-decoration',\n        inlineClassNameAffectsLetterSpacing: true,\n    }\n});\nclass InlineProgressWidget extends Disposable {\n    constructor(typeId, editor, range, title, delegate) {\n        super();\n        this.typeId = typeId;\n        this.editor = editor;\n        this.range = range;\n        this.delegate = delegate;\n        this.allowEditorOverflow = false;\n        this.suppressMouseDown = true;\n        this.create(title);\n        this.editor.addContentWidget(this);\n        this.editor.layoutContentWidget(this);\n    }\n    create(title) {\n        this.domNode = dom.$('.inline-progress-widget');\n        this.domNode.role = 'button';\n        this.domNode.title = title;\n        const iconElement = dom.$('span.icon');\n        this.domNode.append(iconElement);\n        iconElement.classList.add(...ThemeIcon.asClassNameArray(Codicon.loading), 'codicon-modifier-spin');\n        const updateSize = () => {\n            const lineHeight = this.editor.getOption(66 /* EditorOption.lineHeight */);\n            this.domNode.style.height = `${lineHeight}px`;\n            this.domNode.style.width = `${Math.ceil(0.8 * lineHeight)}px`;\n        };\n        updateSize();\n        this._register(this.editor.onDidChangeConfiguration(c => {\n            if (c.hasChanged(52 /* EditorOption.fontSize */) || c.hasChanged(66 /* EditorOption.lineHeight */)) {\n                updateSize();\n            }\n        }));\n        this._register(dom.addDisposableListener(this.domNode, dom.EventType.CLICK, e => {\n            this.delegate.cancel();\n        }));\n    }\n    getId() {\n        return InlineProgressWidget.baseId + '.' + this.typeId;\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    getPosition() {\n        return {\n            position: { lineNumber: this.range.startLineNumber, column: this.range.startColumn },\n            preference: [0 /* ContentWidgetPositionPreference.EXACT */]\n        };\n    }\n    dispose() {\n        super.dispose();\n        this.editor.removeContentWidget(this);\n    }\n}\nInlineProgressWidget.baseId = 'editor.widget.inlineProgressWidget';\nlet InlineProgressManager = class InlineProgressManager extends Disposable {\n    constructor(id, _editor, _instantiationService) {\n        super();\n        this.id = id;\n        this._editor = _editor;\n        this._instantiationService = _instantiationService;\n        /** Delay before showing the progress widget */\n        this._showDelay = 500; // ms\n        this._showPromise = this._register(new MutableDisposable());\n        this._currentWidget = new MutableDisposable();\n        this._operationIdPool = 0;\n        this._currentDecorations = _editor.createDecorationsCollection();\n    }\n    showWhile(position, title, promise) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const operationId = this._operationIdPool++;\n            this._currentOperation = operationId;\n            this.clear();\n            this._showPromise.value = disposableTimeout(() => {\n                const range = Range.fromPositions(position);\n                const decorationIds = this._currentDecorations.set([{\n                        range: range,\n                        options: inlineProgressDecoration,\n                    }]);\n                if (decorationIds.length > 0) {\n                    this._currentWidget.value = this._instantiationService.createInstance(InlineProgressWidget, this.id, this._editor, range, title, promise);\n                }\n            }, this._showDelay);\n            try {\n                return yield promise;\n            }\n            finally {\n                if (this._currentOperation === operationId) {\n                    this.clear();\n                    this._currentOperation = undefined;\n                }\n            }\n        });\n    }\n    clear() {\n        this._showPromise.clear();\n        this._currentDecorations.clear();\n        this._currentWidget.clear();\n    }\n};\nInlineProgressManager = __decorate([\n    __param(2, IInstantiationService)\n], InlineProgressManager);\nexport { InlineProgressManager };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { CursorMoveCommands } from '../../../common/cursor/cursorMoveCommands.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport * as nls from '../../../../nls.js';\nexport class ExpandLineSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'expandLineSelection',\n            label: nls.localize('expandLineSelection', \"Expand Line Selection\"),\n            alias: 'Expand Line Selection',\n            precondition: undefined,\n            kbOpts: {\n                weight: 0 /* KeybindingWeight.EditorCore */,\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 42 /* KeyCode.KeyL */\n            },\n        });\n    }\n    run(_accessor, editor, args) {\n        args = args || {};\n        if (!editor.hasModel()) {\n            return;\n        }\n        const viewModel = editor._getViewModel();\n        viewModel.model.pushStackElement();\n        viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.expandLineSelection(viewModel, viewModel.getCursorStates()));\n        viewModel.revealPrimaryCursor(args.source, true);\n    }\n}\nregisterEditorAction(ExpandLineSelectionAction);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class CopyLinesCommand {\n    constructor(selection, isCopyingDown, noop) {\n        this._selection = selection;\n        this._isCopyingDown = isCopyingDown;\n        this._noop = noop || false;\n        this._selectionDirection = 0 /* SelectionDirection.LTR */;\n        this._selectionId = null;\n        this._startLineNumberDelta = 0;\n        this._endLineNumberDelta = 0;\n    }\n    getEditOperations(model, builder) {\n        let s = this._selection;\n        this._startLineNumberDelta = 0;\n        this._endLineNumberDelta = 0;\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n            this._endLineNumberDelta = 1;\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\n        }\n        const sourceLines = [];\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\n            sourceLines.push(model.getLineContent(i));\n        }\n        const sourceText = sourceLines.join('\\n');\n        if (sourceText === '') {\n            // Duplicating empty line\n            if (this._isCopyingDown) {\n                this._startLineNumberDelta++;\n                this._endLineNumberDelta++;\n            }\n        }\n        if (this._noop) {\n            builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber + 1, 1), s.endLineNumber === model.getLineCount() ? '' : '\\n');\n        }\n        else {\n            if (!this._isCopyingDown) {\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + sourceText);\n            }\n            else {\n                builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), sourceText + '\\n');\n            }\n        }\n        this._selectionId = builder.trackSelection(s);\n        this._selectionDirection = this._selection.getDirection();\n    }\n    computeCursorState(model, helper) {\n        let result = helper.getTrackedSelection(this._selectionId);\n        if (this._startLineNumberDelta !== 0 || this._endLineNumberDelta !== 0) {\n            let startLineNumber = result.startLineNumber;\n            let startColumn = result.startColumn;\n            let endLineNumber = result.endLineNumber;\n            let endColumn = result.endColumn;\n            if (this._startLineNumberDelta !== 0) {\n                startLineNumber = startLineNumber + this._startLineNumberDelta;\n                startColumn = 1;\n            }\n            if (this._endLineNumberDelta !== 0) {\n                endLineNumber = endLineNumber + this._endLineNumberDelta;\n                endColumn = 1;\n            }\n            result = Selection.createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, this._selectionDirection);\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as strings from '../../../../base/common/strings.js';\nimport { ShiftCommand } from '../../../common/commands/shiftCommand.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { IndentAction } from '../../../common/languages/languageConfiguration.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport * as indentUtils from '../../indentation/browser/indentUtils.js';\nimport { getGoodIndentForLine, getIndentMetadata } from '../../../common/languages/autoIndent.js';\nimport { getEnterAction } from '../../../common/languages/enterAction.js';\nlet MoveLinesCommand = class MoveLinesCommand {\n    constructor(selection, isMovingDown, autoIndent, _languageConfigurationService) {\n        this._languageConfigurationService = _languageConfigurationService;\n        this._selection = selection;\n        this._isMovingDown = isMovingDown;\n        this._autoIndent = autoIndent;\n        this._selectionId = null;\n        this._moveEndLineSelectionShrink = false;\n    }\n    getEditOperations(model, builder) {\n        const modelLineCount = model.getLineCount();\n        if (this._isMovingDown && this._selection.endLineNumber === modelLineCount) {\n            this._selectionId = builder.trackSelection(this._selection);\n            return;\n        }\n        if (!this._isMovingDown && this._selection.startLineNumber === 1) {\n            this._selectionId = builder.trackSelection(this._selection);\n            return;\n        }\n        this._moveEndPositionDown = false;\n        let s = this._selection;\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n            this._moveEndPositionDown = true;\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\n        }\n        const { tabSize, indentSize, insertSpaces } = model.getOptions();\n        const indentConverter = this.buildIndentConverter(tabSize, indentSize, insertSpaces);\n        const virtualModel = {\n            tokenization: {\n                getLineTokens: (lineNumber) => {\n                    return model.tokenization.getLineTokens(lineNumber);\n                },\n                getLanguageId: () => {\n                    return model.getLanguageId();\n                },\n                getLanguageIdAtPosition: (lineNumber, column) => {\n                    return model.getLanguageIdAtPosition(lineNumber, column);\n                },\n            },\n            getLineContent: null,\n        };\n        if (s.startLineNumber === s.endLineNumber && model.getLineMaxColumn(s.startLineNumber) === 1) {\n            // Current line is empty\n            const lineNumber = s.startLineNumber;\n            const otherLineNumber = (this._isMovingDown ? lineNumber + 1 : lineNumber - 1);\n            if (model.getLineMaxColumn(otherLineNumber) === 1) {\n                // Other line number is empty too, so no editing is needed\n                // Add a no-op to force running by the model\n                builder.addEditOperation(new Range(1, 1, 1, 1), null);\n            }\n            else {\n                // Type content from other line number on line number\n                builder.addEditOperation(new Range(lineNumber, 1, lineNumber, 1), model.getLineContent(otherLineNumber));\n                // Remove content from other line number\n                builder.addEditOperation(new Range(otherLineNumber, 1, otherLineNumber, model.getLineMaxColumn(otherLineNumber)), null);\n            }\n            // Track selection at the other line number\n            s = new Selection(otherLineNumber, 1, otherLineNumber, 1);\n        }\n        else {\n            let movingLineNumber;\n            let movingLineText;\n            if (this._isMovingDown) {\n                movingLineNumber = s.endLineNumber + 1;\n                movingLineText = model.getLineContent(movingLineNumber);\n                // Delete line that needs to be moved\n                builder.addEditOperation(new Range(movingLineNumber - 1, model.getLineMaxColumn(movingLineNumber - 1), movingLineNumber, model.getLineMaxColumn(movingLineNumber)), null);\n                let insertingText = movingLineText;\n                if (this.shouldAutoIndent(model, s)) {\n                    const movingLineMatchResult = this.matchEnterRule(model, indentConverter, tabSize, movingLineNumber, s.startLineNumber - 1);\n                    // if s.startLineNumber - 1 matches onEnter rule, we still honor that.\n                    if (movingLineMatchResult !== null) {\n                        const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(movingLineNumber));\n                        const newSpaceCnt = movingLineMatchResult + indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                        const newIndentation = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                        insertingText = newIndentation + this.trimStart(movingLineText);\n                    }\n                    else {\n                        // no enter rule matches, let's check indentatin rules then.\n                        virtualModel.getLineContent = (lineNumber) => {\n                            if (lineNumber === s.startLineNumber) {\n                                return model.getLineContent(movingLineNumber);\n                            }\n                            else {\n                                return model.getLineContent(lineNumber);\n                            }\n                        };\n                        const indentOfMovingLine = getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber, indentConverter, this._languageConfigurationService);\n                        if (indentOfMovingLine !== null) {\n                            const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(movingLineNumber));\n                            const newSpaceCnt = indentUtils.getSpaceCnt(indentOfMovingLine, tabSize);\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                const newIndentation = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                                insertingText = newIndentation + this.trimStart(movingLineText);\n                            }\n                        }\n                    }\n                    // add edit operations for moving line first to make sure it's executed after we make indentation change\n                    // to s.startLineNumber\n                    builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\\n');\n                    const ret = this.matchEnterRuleMovingDown(model, indentConverter, tabSize, s.startLineNumber, movingLineNumber, insertingText);\n                    // check if the line being moved before matches onEnter rules, if so let's adjust the indentation by onEnter rules.\n                    if (ret !== null) {\n                        if (ret !== 0) {\n                            this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);\n                        }\n                    }\n                    else {\n                        // it doesn't match onEnter rules, let's check indentation rules then.\n                        virtualModel.getLineContent = (lineNumber) => {\n                            if (lineNumber === s.startLineNumber) {\n                                return insertingText;\n                            }\n                            else if (lineNumber >= s.startLineNumber + 1 && lineNumber <= s.endLineNumber + 1) {\n                                return model.getLineContent(lineNumber - 1);\n                            }\n                            else {\n                                return model.getLineContent(lineNumber);\n                            }\n                        };\n                        const newIndentatOfMovingBlock = getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber + 1, indentConverter, this._languageConfigurationService);\n                        if (newIndentatOfMovingBlock !== null) {\n                            const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(s.startLineNumber));\n                            const newSpaceCnt = indentUtils.getSpaceCnt(newIndentatOfMovingBlock, tabSize);\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                const spaceCntOffset = newSpaceCnt - oldSpaceCnt;\n                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);\n                            }\n                        }\n                    }\n                }\n                else {\n                    // Insert line that needs to be moved before\n                    builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\\n');\n                }\n            }\n            else {\n                movingLineNumber = s.startLineNumber - 1;\n                movingLineText = model.getLineContent(movingLineNumber);\n                // Delete line that needs to be moved\n                builder.addEditOperation(new Range(movingLineNumber, 1, movingLineNumber + 1, 1), null);\n                // Insert line that needs to be moved after\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + movingLineText);\n                if (this.shouldAutoIndent(model, s)) {\n                    virtualModel.getLineContent = (lineNumber) => {\n                        if (lineNumber === movingLineNumber) {\n                            return model.getLineContent(s.startLineNumber);\n                        }\n                        else {\n                            return model.getLineContent(lineNumber);\n                        }\n                    };\n                    const ret = this.matchEnterRule(model, indentConverter, tabSize, s.startLineNumber, s.startLineNumber - 2);\n                    // check if s.startLineNumber - 2 matches onEnter rules, if so adjust the moving block by onEnter rules.\n                    if (ret !== null) {\n                        if (ret !== 0) {\n                            this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);\n                        }\n                    }\n                    else {\n                        // it doesn't match any onEnter rule, let's check indentation rules then.\n                        const indentOfFirstLine = getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(s.startLineNumber, 1), movingLineNumber, indentConverter, this._languageConfigurationService);\n                        if (indentOfFirstLine !== null) {\n                            // adjust the indentation of the moving block\n                            const oldIndent = strings.getLeadingWhitespace(model.getLineContent(s.startLineNumber));\n                            const newSpaceCnt = indentUtils.getSpaceCnt(indentOfFirstLine, tabSize);\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndent, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                const spaceCntOffset = newSpaceCnt - oldSpaceCnt;\n                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this._selectionId = builder.trackSelection(s);\n    }\n    buildIndentConverter(tabSize, indentSize, insertSpaces) {\n        return {\n            shiftIndent: (indentation) => {\n                return ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            },\n            unshiftIndent: (indentation) => {\n                return ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            }\n        };\n    }\n    parseEnterResult(model, indentConverter, tabSize, line, enter) {\n        if (enter) {\n            let enterPrefix = enter.indentation;\n            if (enter.indentAction === IndentAction.None) {\n                enterPrefix = enter.indentation + enter.appendText;\n            }\n            else if (enter.indentAction === IndentAction.Indent) {\n                enterPrefix = enter.indentation + enter.appendText;\n            }\n            else if (enter.indentAction === IndentAction.IndentOutdent) {\n                enterPrefix = enter.indentation;\n            }\n            else if (enter.indentAction === IndentAction.Outdent) {\n                enterPrefix = indentConverter.unshiftIndent(enter.indentation) + enter.appendText;\n            }\n            const movingLineText = model.getLineContent(line);\n            if (this.trimStart(movingLineText).indexOf(this.trimStart(enterPrefix)) >= 0) {\n                const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(line));\n                let newIndentation = strings.getLeadingWhitespace(enterPrefix);\n                const indentMetadataOfMovelingLine = getIndentMetadata(model, line, this._languageConfigurationService);\n                if (indentMetadataOfMovelingLine !== null && indentMetadataOfMovelingLine & 2 /* IndentConsts.DECREASE_MASK */) {\n                    newIndentation = indentConverter.unshiftIndent(newIndentation);\n                }\n                const newSpaceCnt = indentUtils.getSpaceCnt(newIndentation, tabSize);\n                const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                return newSpaceCnt - oldSpaceCnt;\n            }\n        }\n        return null;\n    }\n    /**\n     *\n     * @param model\n     * @param indentConverter\n     * @param tabSize\n     * @param line the line moving down\n     * @param futureAboveLineNumber the line which will be at the `line` position\n     * @param futureAboveLineText\n     */\n    matchEnterRuleMovingDown(model, indentConverter, tabSize, line, futureAboveLineNumber, futureAboveLineText) {\n        if (strings.lastNonWhitespaceIndex(futureAboveLineText) >= 0) {\n            // break\n            const maxColumn = model.getLineMaxColumn(futureAboveLineNumber);\n            const enter = getEnterAction(this._autoIndent, model, new Range(futureAboveLineNumber, maxColumn, futureAboveLineNumber, maxColumn), this._languageConfigurationService);\n            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n        }\n        else {\n            // go upwards, starting from `line - 1`\n            let validPrecedingLine = line - 1;\n            while (validPrecedingLine >= 1) {\n                const lineContent = model.getLineContent(validPrecedingLine);\n                const nonWhitespaceIdx = strings.lastNonWhitespaceIndex(lineContent);\n                if (nonWhitespaceIdx >= 0) {\n                    break;\n                }\n                validPrecedingLine--;\n            }\n            if (validPrecedingLine < 1 || line > model.getLineCount()) {\n                return null;\n            }\n            const maxColumn = model.getLineMaxColumn(validPrecedingLine);\n            const enter = getEnterAction(this._autoIndent, model, new Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn), this._languageConfigurationService);\n            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n        }\n    }\n    matchEnterRule(model, indentConverter, tabSize, line, oneLineAbove, previousLineText) {\n        let validPrecedingLine = oneLineAbove;\n        while (validPrecedingLine >= 1) {\n            // ship empty lines as empty lines just inherit indentation\n            let lineContent;\n            if (validPrecedingLine === oneLineAbove && previousLineText !== undefined) {\n                lineContent = previousLineText;\n            }\n            else {\n                lineContent = model.getLineContent(validPrecedingLine);\n            }\n            const nonWhitespaceIdx = strings.lastNonWhitespaceIndex(lineContent);\n            if (nonWhitespaceIdx >= 0) {\n                break;\n            }\n            validPrecedingLine--;\n        }\n        if (validPrecedingLine < 1 || line > model.getLineCount()) {\n            return null;\n        }\n        const maxColumn = model.getLineMaxColumn(validPrecedingLine);\n        const enter = getEnterAction(this._autoIndent, model, new Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn), this._languageConfigurationService);\n        return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n    }\n    trimStart(str) {\n        return str.replace(/^\\s+/, '');\n    }\n    shouldAutoIndent(model, selection) {\n        if (this._autoIndent < 4 /* EditorAutoIndentStrategy.Full */) {\n            return false;\n        }\n        // if it's not easy to tokenize, we stop auto indent.\n        if (!model.tokenization.isCheapToTokenize(selection.startLineNumber)) {\n            return false;\n        }\n        const languageAtSelectionStart = model.getLanguageIdAtPosition(selection.startLineNumber, 1);\n        const languageAtSelectionEnd = model.getLanguageIdAtPosition(selection.endLineNumber, 1);\n        if (languageAtSelectionStart !== languageAtSelectionEnd) {\n            return false;\n        }\n        if (this._languageConfigurationService.getLanguageConfiguration(languageAtSelectionStart).indentRulesSupport === null) {\n            return false;\n        }\n        return true;\n    }\n    getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, offset) {\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\n            const lineContent = model.getLineContent(i);\n            const originalIndent = strings.getLeadingWhitespace(lineContent);\n            const originalSpacesCnt = indentUtils.getSpaceCnt(originalIndent, tabSize);\n            const newSpacesCnt = originalSpacesCnt + offset;\n            const newIndent = indentUtils.generateIndent(newSpacesCnt, tabSize, insertSpaces);\n            if (newIndent !== originalIndent) {\n                builder.addEditOperation(new Range(i, 1, i, originalIndent.length + 1), newIndent);\n                if (i === s.endLineNumber && s.endColumn <= originalIndent.length + 1 && newIndent === '') {\n                    // as users select part of the original indent white spaces\n                    // when we adjust the indentation of endLine, we should adjust the cursor position as well.\n                    this._moveEndLineSelectionShrink = true;\n                }\n            }\n        }\n    }\n    computeCursorState(model, helper) {\n        let result = helper.getTrackedSelection(this._selectionId);\n        if (this._moveEndPositionDown) {\n            result = result.setEndPosition(result.endLineNumber + 1, 1);\n        }\n        if (this._moveEndLineSelectionShrink && result.startLineNumber < result.endLineNumber) {\n            result = result.setEndPosition(result.endLineNumber, 2);\n        }\n        return result;\n    }\n};\nMoveLinesCommand = __decorate([\n    __param(3, ILanguageConfigurationService)\n], MoveLinesCommand);\nexport { MoveLinesCommand };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nexport class SortLinesCommand {\n    static getCollator() {\n        if (!SortLinesCommand._COLLATOR) {\n            SortLinesCommand._COLLATOR = new Intl.Collator();\n        }\n        return SortLinesCommand._COLLATOR;\n    }\n    constructor(selection, descending) {\n        this.selection = selection;\n        this.descending = descending;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        const op = sortLines(model, this.selection, this.descending);\n        if (op) {\n            builder.addEditOperation(op.range, op.text);\n        }\n        this.selectionId = builder.trackSelection(this.selection);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n    static canRun(model, selection, descending) {\n        if (model === null) {\n            return false;\n        }\n        const data = getSortData(model, selection, descending);\n        if (!data) {\n            return false;\n        }\n        for (let i = 0, len = data.before.length; i < len; i++) {\n            if (data.before[i] !== data.after[i]) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nSortLinesCommand._COLLATOR = null;\nfunction getSortData(model, selection, descending) {\n    const startLineNumber = selection.startLineNumber;\n    let endLineNumber = selection.endLineNumber;\n    if (selection.endColumn === 1) {\n        endLineNumber--;\n    }\n    // Nothing to sort if user didn't select anything.\n    if (startLineNumber >= endLineNumber) {\n        return null;\n    }\n    const linesToSort = [];\n    // Get the contents of the selection to be sorted.\n    for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n        linesToSort.push(model.getLineContent(lineNumber));\n    }\n    let sorted = linesToSort.slice(0);\n    sorted.sort(SortLinesCommand.getCollator().compare);\n    // If descending, reverse the order.\n    if (descending === true) {\n        sorted = sorted.reverse();\n    }\n    return {\n        startLineNumber: startLineNumber,\n        endLineNumber: endLineNumber,\n        before: linesToSort,\n        after: sorted\n    };\n}\n/**\n * Generate commands for sorting lines on a model.\n */\nfunction sortLines(model, selection, descending) {\n    const data = getSortData(model, selection, descending);\n    if (!data) {\n        return null;\n    }\n    return EditOperation.replace(new Range(data.startLineNumber, 1, data.endLineNumber, model.getLineMaxColumn(data.endLineNumber)), data.after.join('\\n'));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { CoreEditingCommands } from '../../../browser/coreCommands.js';\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection, ReplaceCommandThatSelectsText } from '../../../common/commands/replaceCommand.js';\nimport { TrimTrailingWhitespaceCommand } from '../../../common/commands/trimTrailingWhitespaceCommand.js';\nimport { TypeOperations } from '../../../common/cursor/cursorTypeOperations.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { CopyLinesCommand } from './copyLinesCommand.js';\nimport { MoveLinesCommand } from './moveLinesCommand.js';\nimport { SortLinesCommand } from './sortLinesCommand.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\n// copy lines\nclass AbstractCopyLinesAction extends EditorAction {\n    constructor(down, opts) {\n        super(opts);\n        this.down = down;\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const selections = editor.getSelections().map((selection, index) => ({ selection, index, ignore: false }));\n        selections.sort((a, b) => Range.compareRangesUsingStarts(a.selection, b.selection));\n        // Remove selections that would result in copying the same line\n        let prev = selections[0];\n        for (let i = 1; i < selections.length; i++) {\n            const curr = selections[i];\n            if (prev.selection.endLineNumber === curr.selection.startLineNumber) {\n                // these two selections would copy the same line\n                if (prev.index < curr.index) {\n                    // prev wins\n                    curr.ignore = true;\n                }\n                else {\n                    // curr wins\n                    prev.ignore = true;\n                    prev = curr;\n                }\n            }\n        }\n        const commands = [];\n        for (const selection of selections) {\n            commands.push(new CopyLinesCommand(selection.selection, this.down, selection.ignore));\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nclass CopyLinesUpAction extends AbstractCopyLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.copyLinesUpAction',\n            label: nls.localize('lines.copyUp', \"Copy Line Up\"),\n            alias: 'Copy Line Up',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */,\n                linux: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miCopyLinesUp', comment: ['&& denotes a mnemonic'] }, \"&&Copy Line Up\"),\n                order: 1\n            }\n        });\n    }\n}\nclass CopyLinesDownAction extends AbstractCopyLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.copyLinesDownAction',\n            label: nls.localize('lines.copyDown', \"Copy Line Down\"),\n            alias: 'Copy Line Down',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */,\n                linux: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miCopyLinesDown', comment: ['&& denotes a mnemonic'] }, \"Co&&py Line Down\"),\n                order: 2\n            }\n        });\n    }\n}\nexport class DuplicateSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.duplicateSelection',\n            label: nls.localize('duplicateSelection', \"Duplicate Selection\"),\n            alias: 'Duplicate Selection',\n            precondition: EditorContextKeys.writable,\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miDuplicateSelection', comment: ['&& denotes a mnemonic'] }, \"&&Duplicate Selection\"),\n                order: 5\n            }\n        });\n    }\n    run(accessor, editor, args) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const commands = [];\n        const selections = editor.getSelections();\n        const model = editor.getModel();\n        for (const selection of selections) {\n            if (selection.isEmpty()) {\n                commands.push(new CopyLinesCommand(selection, true));\n            }\n            else {\n                const insertSelection = new Selection(selection.endLineNumber, selection.endColumn, selection.endLineNumber, selection.endColumn);\n                commands.push(new ReplaceCommandThatSelectsText(insertSelection, model.getValueInRange(selection)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\n// move lines\nclass AbstractMoveLinesAction extends EditorAction {\n    constructor(down, opts) {\n        super(opts);\n        this.down = down;\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const commands = [];\n        const selections = editor.getSelections() || [];\n        const autoIndent = editor.getOption(12 /* EditorOption.autoIndent */);\n        for (const selection of selections) {\n            commands.push(new MoveLinesCommand(selection, this.down, autoIndent, languageConfigurationService));\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nclass MoveLinesUpAction extends AbstractMoveLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.moveLinesUpAction',\n            label: nls.localize('lines.moveUp', \"Move Line Up\"),\n            alias: 'Move Line Up',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */,\n                linux: { primary: 512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miMoveLinesUp', comment: ['&& denotes a mnemonic'] }, \"Mo&&ve Line Up\"),\n                order: 3\n            }\n        });\n    }\n}\nclass MoveLinesDownAction extends AbstractMoveLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.moveLinesDownAction',\n            label: nls.localize('lines.moveDown', \"Move Line Down\"),\n            alias: 'Move Line Down',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */,\n                linux: { primary: 512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miMoveLinesDown', comment: ['&& denotes a mnemonic'] }, \"Move &&Line Down\"),\n                order: 4\n            }\n        });\n    }\n}\nexport class AbstractSortLinesAction extends EditorAction {\n    constructor(descending, opts) {\n        super(opts);\n        this.descending = descending;\n    }\n    run(_accessor, editor) {\n        const selections = editor.getSelections() || [];\n        for (const selection of selections) {\n            if (!SortLinesCommand.canRun(editor.getModel(), selection, this.descending)) {\n                return;\n            }\n        }\n        const commands = [];\n        for (let i = 0, len = selections.length; i < len; i++) {\n            commands[i] = new SortLinesCommand(selections[i], this.descending);\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nexport class SortLinesAscendingAction extends AbstractSortLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.sortLinesAscending',\n            label: nls.localize('lines.sortAscending', \"Sort Lines Ascending\"),\n            alias: 'Sort Lines Ascending',\n            precondition: EditorContextKeys.writable\n        });\n    }\n}\nexport class SortLinesDescendingAction extends AbstractSortLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.sortLinesDescending',\n            label: nls.localize('lines.sortDescending', \"Sort Lines Descending\"),\n            alias: 'Sort Lines Descending',\n            precondition: EditorContextKeys.writable\n        });\n    }\n}\nexport class DeleteDuplicateLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.removeDuplicateLines',\n            label: nls.localize('lines.deleteDuplicates', \"Delete Duplicate Lines\"),\n            alias: 'Delete Duplicate Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const model = editor.getModel();\n        if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n            return;\n        }\n        const edits = [];\n        const endCursorState = [];\n        let linesDeleted = 0;\n        for (const selection of editor.getSelections()) {\n            const uniqueLines = new Set();\n            const lines = [];\n            for (let i = selection.startLineNumber; i <= selection.endLineNumber; i++) {\n                const line = model.getLineContent(i);\n                if (uniqueLines.has(line)) {\n                    continue;\n                }\n                lines.push(line);\n                uniqueLines.add(line);\n            }\n            const selectionToReplace = new Selection(selection.startLineNumber, 1, selection.endLineNumber, model.getLineMaxColumn(selection.endLineNumber));\n            const adjustedSelectionStart = selection.startLineNumber - linesDeleted;\n            const finalSelection = new Selection(adjustedSelectionStart, 1, adjustedSelectionStart + lines.length - 1, lines[lines.length - 1].length);\n            edits.push(EditOperation.replace(selectionToReplace, lines.join('\\n')));\n            endCursorState.push(finalSelection);\n            linesDeleted += (selection.endLineNumber - selection.startLineNumber + 1) - lines.length;\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class TrimTrailingWhitespaceAction extends EditorAction {\n    constructor() {\n        super({\n            id: TrimTrailingWhitespaceAction.ID,\n            label: nls.localize('lines.trimTrailingWhitespace', \"Trim Trailing Whitespace\"),\n            alias: 'Trim Trailing Whitespace',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 54 /* KeyCode.KeyX */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor, args) {\n        let cursors = [];\n        if (args.reason === 'auto-save') {\n            // See https://github.com/editorconfig/editorconfig-vscode/issues/47\n            // It is very convenient for the editor config extension to invoke this action.\n            // So, if we get a reason:'auto-save' passed in, let's preserve cursor positions.\n            cursors = (editor.getSelections() || []).map(s => new Position(s.positionLineNumber, s.positionColumn));\n        }\n        const selection = editor.getSelection();\n        if (selection === null) {\n            return;\n        }\n        const command = new TrimTrailingWhitespaceCommand(selection, cursors);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n    }\n}\nTrimTrailingWhitespaceAction.ID = 'editor.action.trimTrailingWhitespace';\nexport class DeleteLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.deleteLines',\n            label: nls.localize('lines.delete', \"Delete Line\"),\n            alias: 'Delete Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 41 /* KeyCode.KeyK */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const ops = this._getLinesToRemove(editor);\n        const model = editor.getModel();\n        if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n            // Model is empty\n            return;\n        }\n        let linesDeleted = 0;\n        const edits = [];\n        const cursorState = [];\n        for (let i = 0, len = ops.length; i < len; i++) {\n            const op = ops[i];\n            let startLineNumber = op.startLineNumber;\n            let endLineNumber = op.endLineNumber;\n            let startColumn = 1;\n            let endColumn = model.getLineMaxColumn(endLineNumber);\n            if (endLineNumber < model.getLineCount()) {\n                endLineNumber += 1;\n                endColumn = 1;\n            }\n            else if (startLineNumber > 1) {\n                startLineNumber -= 1;\n                startColumn = model.getLineMaxColumn(startLineNumber);\n            }\n            edits.push(EditOperation.replace(new Selection(startLineNumber, startColumn, endLineNumber, endColumn), ''));\n            cursorState.push(new Selection(startLineNumber - linesDeleted, op.positionColumn, startLineNumber - linesDeleted, op.positionColumn));\n            linesDeleted += (op.endLineNumber - op.startLineNumber + 1);\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, cursorState);\n        editor.pushUndoStop();\n    }\n    _getLinesToRemove(editor) {\n        // Construct delete operations\n        const operations = editor.getSelections().map((s) => {\n            let endLineNumber = s.endLineNumber;\n            if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n                endLineNumber -= 1;\n            }\n            return {\n                startLineNumber: s.startLineNumber,\n                selectionStartColumn: s.selectionStartColumn,\n                endLineNumber: endLineNumber,\n                positionColumn: s.positionColumn\n            };\n        });\n        // Sort delete operations\n        operations.sort((a, b) => {\n            if (a.startLineNumber === b.startLineNumber) {\n                return a.endLineNumber - b.endLineNumber;\n            }\n            return a.startLineNumber - b.startLineNumber;\n        });\n        // Merge delete operations which are adjacent or overlapping\n        const mergedOperations = [];\n        let previousOperation = operations[0];\n        for (let i = 1; i < operations.length; i++) {\n            if (previousOperation.endLineNumber + 1 >= operations[i].startLineNumber) {\n                // Merge current operations into the previous one\n                previousOperation.endLineNumber = operations[i].endLineNumber;\n            }\n            else {\n                // Push previous operation\n                mergedOperations.push(previousOperation);\n                previousOperation = operations[i];\n            }\n        }\n        // Push the last operation\n        mergedOperations.push(previousOperation);\n        return mergedOperations;\n    }\n}\nexport class IndentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.indentLines',\n            label: nls.localize('lines.indent', \"Indent Line\"),\n            alias: 'Indent Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 94 /* KeyCode.BracketRight */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.indent(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n        editor.pushUndoStop();\n    }\n}\nclass OutdentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.outdentLines',\n            label: nls.localize('lines.outdent', \"Outdent Line\"),\n            alias: 'Outdent Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 92 /* KeyCode.BracketLeft */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        CoreEditingCommands.Outdent.runEditorCommand(_accessor, editor, null);\n    }\n}\nexport class InsertLineBeforeAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.insertLineBefore',\n            label: nls.localize('lines.insertBefore', \"Insert Line Above\"),\n            alias: 'Insert Line Above',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 3 /* KeyCode.Enter */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.lineInsertBefore(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n    }\n}\nexport class InsertLineAfterAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.insertLineAfter',\n            label: nls.localize('lines.insertAfter', \"Insert Line Below\"),\n            alias: 'Insert Line Below',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.lineInsertAfter(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n    }\n}\nexport class AbstractDeleteAllToBoundaryAction extends EditorAction {\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const primaryCursor = editor.getSelection();\n        const rangesToDelete = this._getRangesToDelete(editor);\n        // merge overlapping selections\n        const effectiveRanges = [];\n        for (let i = 0, count = rangesToDelete.length - 1; i < count; i++) {\n            const range = rangesToDelete[i];\n            const nextRange = rangesToDelete[i + 1];\n            if (Range.intersectRanges(range, nextRange) === null) {\n                effectiveRanges.push(range);\n            }\n            else {\n                rangesToDelete[i + 1] = Range.plusRange(range, nextRange);\n            }\n        }\n        effectiveRanges.push(rangesToDelete[rangesToDelete.length - 1]);\n        const endCursorState = this._getEndCursorState(primaryCursor, effectiveRanges);\n        const edits = effectiveRanges.map(range => {\n            return EditOperation.replace(range, '');\n        });\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class DeleteAllLeftAction extends AbstractDeleteAllToBoundaryAction {\n    constructor() {\n        super({\n            id: 'deleteAllLeft',\n            label: nls.localize('lines.deleteAllLeft', \"Delete All Left\"),\n            alias: 'Delete All Left',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1 /* KeyCode.Backspace */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _getEndCursorState(primaryCursor, rangesToDelete) {\n        let endPrimaryCursor = null;\n        const endCursorState = [];\n        let deletedLines = 0;\n        rangesToDelete.forEach(range => {\n            let endCursor;\n            if (range.endColumn === 1 && deletedLines > 0) {\n                const newStartLine = range.startLineNumber - deletedLines;\n                endCursor = new Selection(newStartLine, range.startColumn, newStartLine, range.startColumn);\n            }\n            else {\n                endCursor = new Selection(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n            }\n            deletedLines += range.endLineNumber - range.startLineNumber;\n            if (range.intersectRanges(primaryCursor)) {\n                endPrimaryCursor = endCursor;\n            }\n            else {\n                endCursorState.push(endCursor);\n            }\n        });\n        if (endPrimaryCursor) {\n            endCursorState.unshift(endPrimaryCursor);\n        }\n        return endCursorState;\n    }\n    _getRangesToDelete(editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return [];\n        }\n        let rangesToDelete = selections;\n        const model = editor.getModel();\n        if (model === null) {\n            return [];\n        }\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\n        rangesToDelete = rangesToDelete.map(selection => {\n            if (selection.isEmpty()) {\n                if (selection.startColumn === 1) {\n                    const deleteFromLine = Math.max(1, selection.startLineNumber - 1);\n                    const deleteFromColumn = selection.startLineNumber === 1 ? 1 : model.getLineLength(deleteFromLine) + 1;\n                    return new Range(deleteFromLine, deleteFromColumn, selection.startLineNumber, 1);\n                }\n                else {\n                    return new Range(selection.startLineNumber, 1, selection.startLineNumber, selection.startColumn);\n                }\n            }\n            else {\n                return new Range(selection.startLineNumber, 1, selection.endLineNumber, selection.endColumn);\n            }\n        });\n        return rangesToDelete;\n    }\n}\nexport class DeleteAllRightAction extends AbstractDeleteAllToBoundaryAction {\n    constructor() {\n        super({\n            id: 'deleteAllRight',\n            label: nls.localize('lines.deleteAllRight', \"Delete All Right\"),\n            alias: 'Delete All Right',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 41 /* KeyCode.KeyK */, secondary: [2048 /* KeyMod.CtrlCmd */ | 20 /* KeyCode.Delete */] },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _getEndCursorState(primaryCursor, rangesToDelete) {\n        let endPrimaryCursor = null;\n        const endCursorState = [];\n        for (let i = 0, len = rangesToDelete.length, offset = 0; i < len; i++) {\n            const range = rangesToDelete[i];\n            const endCursor = new Selection(range.startLineNumber - offset, range.startColumn, range.startLineNumber - offset, range.startColumn);\n            if (range.intersectRanges(primaryCursor)) {\n                endPrimaryCursor = endCursor;\n            }\n            else {\n                endCursorState.push(endCursor);\n            }\n        }\n        if (endPrimaryCursor) {\n            endCursorState.unshift(endPrimaryCursor);\n        }\n        return endCursorState;\n    }\n    _getRangesToDelete(editor) {\n        const model = editor.getModel();\n        if (model === null) {\n            return [];\n        }\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return [];\n        }\n        const rangesToDelete = selections.map((sel) => {\n            if (sel.isEmpty()) {\n                const maxColumn = model.getLineMaxColumn(sel.startLineNumber);\n                if (sel.startColumn === maxColumn) {\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber + 1, 1);\n                }\n                else {\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber, maxColumn);\n                }\n            }\n            return sel;\n        });\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\n        return rangesToDelete;\n    }\n}\nexport class JoinLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.joinLines',\n            label: nls.localize('lines.joinLines', \"Join Lines\"),\n            alias: 'Join Lines',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 0,\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 40 /* KeyCode.KeyJ */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        let primaryCursor = editor.getSelection();\n        if (primaryCursor === null) {\n            return;\n        }\n        selections.sort(Range.compareRangesUsingStarts);\n        const reducedSelections = [];\n        const lastSelection = selections.reduce((previousValue, currentValue) => {\n            if (previousValue.isEmpty()) {\n                if (previousValue.endLineNumber === currentValue.startLineNumber) {\n                    if (primaryCursor.equalsSelection(previousValue)) {\n                        primaryCursor = currentValue;\n                    }\n                    return currentValue;\n                }\n                if (currentValue.startLineNumber > previousValue.endLineNumber + 1) {\n                    reducedSelections.push(previousValue);\n                    return currentValue;\n                }\n                else {\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\n                }\n            }\n            else {\n                if (currentValue.startLineNumber > previousValue.endLineNumber) {\n                    reducedSelections.push(previousValue);\n                    return currentValue;\n                }\n                else {\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\n                }\n            }\n        });\n        reducedSelections.push(lastSelection);\n        const model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        const edits = [];\n        const endCursorState = [];\n        let endPrimaryCursor = primaryCursor;\n        let lineOffset = 0;\n        for (let i = 0, len = reducedSelections.length; i < len; i++) {\n            const selection = reducedSelections[i];\n            const startLineNumber = selection.startLineNumber;\n            const startColumn = 1;\n            let columnDeltaOffset = 0;\n            let endLineNumber, endColumn;\n            const selectionEndPositionOffset = model.getLineLength(selection.endLineNumber) - selection.endColumn;\n            if (selection.isEmpty() || selection.startLineNumber === selection.endLineNumber) {\n                const position = selection.getStartPosition();\n                if (position.lineNumber < model.getLineCount()) {\n                    endLineNumber = startLineNumber + 1;\n                    endColumn = model.getLineMaxColumn(endLineNumber);\n                }\n                else {\n                    endLineNumber = position.lineNumber;\n                    endColumn = model.getLineMaxColumn(position.lineNumber);\n                }\n            }\n            else {\n                endLineNumber = selection.endLineNumber;\n                endColumn = model.getLineMaxColumn(endLineNumber);\n            }\n            let trimmedLinesContent = model.getLineContent(startLineNumber);\n            for (let i = startLineNumber + 1; i <= endLineNumber; i++) {\n                const lineText = model.getLineContent(i);\n                const firstNonWhitespaceIdx = model.getLineFirstNonWhitespaceColumn(i);\n                if (firstNonWhitespaceIdx >= 1) {\n                    let insertSpace = true;\n                    if (trimmedLinesContent === '') {\n                        insertSpace = false;\n                    }\n                    if (insertSpace && (trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === ' ' ||\n                        trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === '\\t')) {\n                        insertSpace = false;\n                        trimmedLinesContent = trimmedLinesContent.replace(/[\\s\\uFEFF\\xA0]+$/g, ' ');\n                    }\n                    const lineTextWithoutIndent = lineText.substr(firstNonWhitespaceIdx - 1);\n                    trimmedLinesContent += (insertSpace ? ' ' : '') + lineTextWithoutIndent;\n                    if (insertSpace) {\n                        columnDeltaOffset = lineTextWithoutIndent.length + 1;\n                    }\n                    else {\n                        columnDeltaOffset = lineTextWithoutIndent.length;\n                    }\n                }\n                else {\n                    columnDeltaOffset = 0;\n                }\n            }\n            const deleteSelection = new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n            if (!deleteSelection.isEmpty()) {\n                let resultSelection;\n                if (selection.isEmpty()) {\n                    edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                    resultSelection = new Selection(deleteSelection.startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1, startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1);\n                }\n                else {\n                    if (selection.startLineNumber === selection.endLineNumber) {\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.endLineNumber - lineOffset, selection.endColumn);\n                    }\n                    else {\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.startLineNumber - lineOffset, trimmedLinesContent.length - selectionEndPositionOffset);\n                    }\n                }\n                if (Range.intersectRanges(deleteSelection, primaryCursor) !== null) {\n                    endPrimaryCursor = resultSelection;\n                }\n                else {\n                    endCursorState.push(resultSelection);\n                }\n            }\n            lineOffset += deleteSelection.endLineNumber - deleteSelection.startLineNumber;\n        }\n        endCursorState.unshift(endPrimaryCursor);\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class TransposeAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.transpose',\n            label: nls.localize('editor.transpose', \"Transpose Characters around the Cursor\"),\n            alias: 'Transpose Characters around the Cursor',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(_accessor, editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        const commands = [];\n        for (let i = 0, len = selections.length; i < len; i++) {\n            const selection = selections[i];\n            if (!selection.isEmpty()) {\n                continue;\n            }\n            const cursor = selection.getStartPosition();\n            const maxColumn = model.getLineMaxColumn(cursor.lineNumber);\n            if (cursor.column >= maxColumn) {\n                if (cursor.lineNumber === model.getLineCount()) {\n                    continue;\n                }\n                // The cursor is at the end of current line and current line is not empty\n                // then we transpose the character before the cursor and the line break if there is any following line.\n                const deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1);\n                const chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\n                commands.push(new ReplaceCommand(new Selection(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1), chars));\n            }\n            else {\n                const deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber, cursor.column + 1);\n                const chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\n                commands.push(new ReplaceCommandThatPreservesSelection(deleteSelection, chars, new Selection(cursor.lineNumber, cursor.column + 1, cursor.lineNumber, cursor.column + 1)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nexport class AbstractCaseAction extends EditorAction {\n    run(_accessor, editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        const wordSeparators = editor.getOption(129 /* EditorOption.wordSeparators */);\n        const textEdits = [];\n        for (const selection of selections) {\n            if (selection.isEmpty()) {\n                const cursor = selection.getStartPosition();\n                const word = editor.getConfiguredWordAtPosition(cursor);\n                if (!word) {\n                    continue;\n                }\n                const wordRange = new Range(cursor.lineNumber, word.startColumn, cursor.lineNumber, word.endColumn);\n                const text = model.getValueInRange(wordRange);\n                textEdits.push(EditOperation.replace(wordRange, this._modifyText(text, wordSeparators)));\n            }\n            else {\n                const text = model.getValueInRange(selection);\n                textEdits.push(EditOperation.replace(selection, this._modifyText(text, wordSeparators)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, textEdits);\n        editor.pushUndoStop();\n    }\n}\nexport class UpperCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToUppercase',\n            label: nls.localize('editor.transformToUppercase', \"Transform to Uppercase\"),\n            alias: 'Transform to Uppercase',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        return text.toLocaleUpperCase();\n    }\n}\nexport class LowerCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToLowercase',\n            label: nls.localize('editor.transformToLowercase', \"Transform to Lowercase\"),\n            alias: 'Transform to Lowercase',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        return text.toLocaleLowerCase();\n    }\n}\nclass BackwardsCompatibleRegExp {\n    constructor(_pattern, _flags) {\n        this._pattern = _pattern;\n        this._flags = _flags;\n        this._actual = null;\n        this._evaluated = false;\n    }\n    get() {\n        if (!this._evaluated) {\n            this._evaluated = true;\n            try {\n                this._actual = new RegExp(this._pattern, this._flags);\n            }\n            catch (err) {\n                // this browser does not support this regular expression\n            }\n        }\n        return this._actual;\n    }\n    isSupported() {\n        return (this.get() !== null);\n    }\n}\nexport class TitleCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToTitlecase',\n            label: nls.localize('editor.transformToTitlecase', \"Transform to Title Case\"),\n            alias: 'Transform to Title Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        const titleBoundary = TitleCaseAction.titleBoundary.get();\n        if (!titleBoundary) {\n            // cannot support this\n            return text;\n        }\n        return text\n            .toLocaleLowerCase()\n            .replace(titleBoundary, (b) => b.toLocaleUpperCase());\n    }\n}\nTitleCaseAction.titleBoundary = new BackwardsCompatibleRegExp('(^|[^\\\\p{L}\\\\p{N}\\']|((^|\\\\P{L})\\'))\\\\p{L}', 'gmu');\nexport class SnakeCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToSnakecase',\n            label: nls.localize('editor.transformToSnakecase', \"Transform to Snake Case\"),\n            alias: 'Transform to Snake Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        const caseBoundary = SnakeCaseAction.caseBoundary.get();\n        const singleLetters = SnakeCaseAction.singleLetters.get();\n        if (!caseBoundary || !singleLetters) {\n            // cannot support this\n            return text;\n        }\n        return (text\n            .replace(caseBoundary, '$1_$2')\n            .replace(singleLetters, '$1_$2$3')\n            .toLocaleLowerCase());\n    }\n}\nSnakeCaseAction.caseBoundary = new BackwardsCompatibleRegExp('(\\\\p{Ll})(\\\\p{Lu})', 'gmu');\nSnakeCaseAction.singleLetters = new BackwardsCompatibleRegExp('(\\\\p{Lu}|\\\\p{N})(\\\\p{Lu})(\\\\p{Ll})', 'gmu');\nexport class CamelCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToCamelcase',\n            label: nls.localize('editor.transformToCamelcase', \"Transform to Camel Case\"),\n            alias: 'Transform to Camel Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        const wordBoundary = CamelCaseAction.wordBoundary.get();\n        if (!wordBoundary) {\n            // cannot support this\n            return text;\n        }\n        const words = text.split(wordBoundary);\n        const firstWord = words.shift();\n        return firstWord + words.map((word) => word.substring(0, 1).toLocaleUpperCase() + word.substring(1))\n            .join('');\n    }\n}\nCamelCaseAction.wordBoundary = new BackwardsCompatibleRegExp('[_\\\\s-]', 'gm');\nexport class KebabCaseAction extends AbstractCaseAction {\n    static isSupported() {\n        const areAllRegexpsSupported = [\n            this.caseBoundary,\n            this.singleLetters,\n            this.underscoreBoundary,\n        ].every((regexp) => regexp.isSupported());\n        return areAllRegexpsSupported;\n    }\n    constructor() {\n        super({\n            id: 'editor.action.transformToKebabcase',\n            label: nls.localize('editor.transformToKebabcase', 'Transform to Kebab Case'),\n            alias: 'Transform to Kebab Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, _) {\n        const caseBoundary = KebabCaseAction.caseBoundary.get();\n        const singleLetters = KebabCaseAction.singleLetters.get();\n        const underscoreBoundary = KebabCaseAction.underscoreBoundary.get();\n        if (!caseBoundary || !singleLetters || !underscoreBoundary) {\n            // one or more regexps aren't supported\n            return text;\n        }\n        return text\n            .replace(underscoreBoundary, '$1-$3')\n            .replace(caseBoundary, '$1-$2')\n            .replace(singleLetters, '$1-$2')\n            .toLocaleLowerCase();\n    }\n}\nKebabCaseAction.caseBoundary = new BackwardsCompatibleRegExp('(\\\\p{Ll})(\\\\p{Lu})', 'gmu');\nKebabCaseAction.singleLetters = new BackwardsCompatibleRegExp('(\\\\p{Lu}|\\\\p{N})(\\\\p{Lu}\\\\p{Ll})', 'gmu');\nKebabCaseAction.underscoreBoundary = new BackwardsCompatibleRegExp('(\\\\S)(_)(\\\\S)', 'gm');\nregisterEditorAction(CopyLinesUpAction);\nregisterEditorAction(CopyLinesDownAction);\nregisterEditorAction(DuplicateSelectionAction);\nregisterEditorAction(MoveLinesUpAction);\nregisterEditorAction(MoveLinesDownAction);\nregisterEditorAction(SortLinesAscendingAction);\nregisterEditorAction(SortLinesDescendingAction);\nregisterEditorAction(DeleteDuplicateLinesAction);\nregisterEditorAction(TrimTrailingWhitespaceAction);\nregisterEditorAction(DeleteLinesAction);\nregisterEditorAction(IndentLinesAction);\nregisterEditorAction(OutdentLinesAction);\nregisterEditorAction(InsertLineBeforeAction);\nregisterEditorAction(InsertLineAfterAction);\nregisterEditorAction(DeleteAllLeftAction);\nregisterEditorAction(DeleteAllRightAction);\nregisterEditorAction(JoinLinesAction);\nregisterEditorAction(TransposeAction);\nregisterEditorAction(UpperCaseAction);\nregisterEditorAction(LowerCaseAction);\nif (SnakeCaseAction.caseBoundary.isSupported() && SnakeCaseAction.singleLetters.isSupported()) {\n    registerEditorAction(SnakeCaseAction);\n}\nif (CamelCaseAction.wordBoundary.isSupported()) {\n    registerEditorAction(CamelCaseAction);\n}\nif (TitleCaseAction.titleBoundary.isSupported()) {\n    registerEditorAction(TitleCaseAction);\n}\nif (KebabCaseAction.isSupported()) {\n    registerEditorAction(KebabCaseAction);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar LinkedEditingContribution_1;\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, Delayer, first } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { isCancellationError, onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution, registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { registerColor } from '../../../../platform/theme/common/colorRegistry.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport './linkedEditing.css';\nexport const CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE = new RawContextKey('LinkedEditingInputVisible', false);\nconst DECORATION_CLASS_NAME = 'linked-editing-decoration';\nlet LinkedEditingContribution = LinkedEditingContribution_1 = class LinkedEditingContribution extends Disposable {\n    static get(editor) {\n        return editor.getContribution(LinkedEditingContribution_1.ID);\n    }\n    constructor(editor, contextKeyService, languageFeaturesService, languageConfigurationService, languageFeatureDebounceService) {\n        super();\n        this.languageConfigurationService = languageConfigurationService;\n        this._syncRangesToken = 0;\n        this._localToDispose = this._register(new DisposableStore());\n        this._editor = editor;\n        this._providers = languageFeaturesService.linkedEditingRangeProvider;\n        this._enabled = false;\n        this._visibleContextKey = CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE.bindTo(contextKeyService);\n        this._debounceInformation = languageFeatureDebounceService.for(this._providers, 'Linked Editing', { max: 200 });\n        this._currentDecorations = this._editor.createDecorationsCollection();\n        this._languageWordPattern = null;\n        this._currentWordPattern = null;\n        this._ignoreChangeEvent = false;\n        this._localToDispose = this._register(new DisposableStore());\n        this._rangeUpdateTriggerPromise = null;\n        this._rangeSyncTriggerPromise = null;\n        this._currentRequest = null;\n        this._currentRequestPosition = null;\n        this._currentRequestModelVersion = null;\n        this._register(this._editor.onDidChangeModel(() => this.reinitialize(true)));\n        this._register(this._editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(69 /* EditorOption.linkedEditing */) || e.hasChanged(92 /* EditorOption.renameOnType */)) {\n                this.reinitialize(false);\n            }\n        }));\n        this._register(this._providers.onDidChange(() => this.reinitialize(false)));\n        this._register(this._editor.onDidChangeModelLanguage(() => this.reinitialize(true)));\n        this.reinitialize(true);\n    }\n    reinitialize(forceRefresh) {\n        const model = this._editor.getModel();\n        const isEnabled = model !== null && (this._editor.getOption(69 /* EditorOption.linkedEditing */) || this._editor.getOption(92 /* EditorOption.renameOnType */)) && this._providers.has(model);\n        if (isEnabled === this._enabled && !forceRefresh) {\n            return;\n        }\n        this._enabled = isEnabled;\n        this.clearRanges();\n        this._localToDispose.clear();\n        if (!isEnabled || model === null) {\n            return;\n        }\n        this._localToDispose.add(Event.runAndSubscribe(model.onDidChangeLanguageConfiguration, () => {\n            this._languageWordPattern = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n        }));\n        const rangeUpdateScheduler = new Delayer(this._debounceInformation.get(model));\n        const triggerRangeUpdate = () => {\n            var _a;\n            this._rangeUpdateTriggerPromise = rangeUpdateScheduler.trigger(() => this.updateRanges(), (_a = this._debounceDuration) !== null && _a !== void 0 ? _a : this._debounceInformation.get(model));\n        };\n        const rangeSyncScheduler = new Delayer(0);\n        const triggerRangeSync = (token) => {\n            this._rangeSyncTriggerPromise = rangeSyncScheduler.trigger(() => this._syncRanges(token));\n        };\n        this._localToDispose.add(this._editor.onDidChangeCursorPosition(() => {\n            triggerRangeUpdate();\n        }));\n        this._localToDispose.add(this._editor.onDidChangeModelContent((e) => {\n            if (!this._ignoreChangeEvent) {\n                if (this._currentDecorations.length > 0) {\n                    const referenceRange = this._currentDecorations.getRange(0);\n                    if (referenceRange && e.changes.every(c => referenceRange.intersectRanges(c.range))) {\n                        triggerRangeSync(this._syncRangesToken);\n                        return;\n                    }\n                }\n            }\n            triggerRangeUpdate();\n        }));\n        this._localToDispose.add({\n            dispose: () => {\n                rangeUpdateScheduler.dispose();\n                rangeSyncScheduler.dispose();\n            }\n        });\n        this.updateRanges();\n    }\n    _syncRanges(token) {\n        // delayed invocation, make sure we're still on\n        if (!this._editor.hasModel() || token !== this._syncRangesToken || this._currentDecorations.length === 0) {\n            // nothing to do\n            return;\n        }\n        const model = this._editor.getModel();\n        const referenceRange = this._currentDecorations.getRange(0);\n        if (!referenceRange || referenceRange.startLineNumber !== referenceRange.endLineNumber) {\n            return this.clearRanges();\n        }\n        const referenceValue = model.getValueInRange(referenceRange);\n        if (this._currentWordPattern) {\n            const match = referenceValue.match(this._currentWordPattern);\n            const matchLength = match ? match[0].length : 0;\n            if (matchLength !== referenceValue.length) {\n                return this.clearRanges();\n            }\n        }\n        const edits = [];\n        for (let i = 1, len = this._currentDecorations.length; i < len; i++) {\n            const mirrorRange = this._currentDecorations.getRange(i);\n            if (!mirrorRange) {\n                continue;\n            }\n            if (mirrorRange.startLineNumber !== mirrorRange.endLineNumber) {\n                edits.push({\n                    range: mirrorRange,\n                    text: referenceValue\n                });\n            }\n            else {\n                let oldValue = model.getValueInRange(mirrorRange);\n                let newValue = referenceValue;\n                let rangeStartColumn = mirrorRange.startColumn;\n                let rangeEndColumn = mirrorRange.endColumn;\n                const commonPrefixLength = strings.commonPrefixLength(oldValue, newValue);\n                rangeStartColumn += commonPrefixLength;\n                oldValue = oldValue.substr(commonPrefixLength);\n                newValue = newValue.substr(commonPrefixLength);\n                const commonSuffixLength = strings.commonSuffixLength(oldValue, newValue);\n                rangeEndColumn -= commonSuffixLength;\n                oldValue = oldValue.substr(0, oldValue.length - commonSuffixLength);\n                newValue = newValue.substr(0, newValue.length - commonSuffixLength);\n                if (rangeStartColumn !== rangeEndColumn || newValue.length !== 0) {\n                    edits.push({\n                        range: new Range(mirrorRange.startLineNumber, rangeStartColumn, mirrorRange.endLineNumber, rangeEndColumn),\n                        text: newValue\n                    });\n                }\n            }\n        }\n        if (edits.length === 0) {\n            return;\n        }\n        try {\n            this._editor.popUndoStop();\n            this._ignoreChangeEvent = true;\n            const prevEditOperationType = this._editor._getViewModel().getPrevEditOperationType();\n            this._editor.executeEdits('linkedEditing', edits);\n            this._editor._getViewModel().setPrevEditOperationType(prevEditOperationType);\n        }\n        finally {\n            this._ignoreChangeEvent = false;\n        }\n    }\n    dispose() {\n        this.clearRanges();\n        super.dispose();\n    }\n    clearRanges() {\n        this._visibleContextKey.set(false);\n        this._currentDecorations.clear();\n        if (this._currentRequest) {\n            this._currentRequest.cancel();\n            this._currentRequest = null;\n            this._currentRequestPosition = null;\n        }\n    }\n    updateRanges(force = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._editor.hasModel()) {\n                this.clearRanges();\n                return;\n            }\n            const position = this._editor.getPosition();\n            if (!this._enabled && !force || this._editor.getSelections().length > 1) {\n                // disabled or multicursor\n                this.clearRanges();\n                return;\n            }\n            const model = this._editor.getModel();\n            const modelVersionId = model.getVersionId();\n            if (this._currentRequestPosition && this._currentRequestModelVersion === modelVersionId) {\n                if (position.equals(this._currentRequestPosition)) {\n                    return; // same position\n                }\n                if (this._currentDecorations.length > 0) {\n                    const range = this._currentDecorations.getRange(0);\n                    if (range && range.containsPosition(position)) {\n                        return; // just moving inside the existing primary range\n                    }\n                }\n            }\n            // Clear existing decorations while we compute new ones\n            this.clearRanges();\n            this._currentRequestPosition = position;\n            this._currentRequestModelVersion = modelVersionId;\n            const request = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const sw = new StopWatch(false);\n                    const response = yield getLinkedEditingRanges(this._providers, model, position, token);\n                    this._debounceInformation.update(model, sw.elapsed());\n                    if (request !== this._currentRequest) {\n                        return;\n                    }\n                    this._currentRequest = null;\n                    if (modelVersionId !== model.getVersionId()) {\n                        return;\n                    }\n                    let ranges = [];\n                    if (response === null || response === void 0 ? void 0 : response.ranges) {\n                        ranges = response.ranges;\n                    }\n                    this._currentWordPattern = (response === null || response === void 0 ? void 0 : response.wordPattern) || this._languageWordPattern;\n                    let foundReferenceRange = false;\n                    for (let i = 0, len = ranges.length; i < len; i++) {\n                        if (Range.containsPosition(ranges[i], position)) {\n                            foundReferenceRange = true;\n                            if (i !== 0) {\n                                const referenceRange = ranges[i];\n                                ranges.splice(i, 1);\n                                ranges.unshift(referenceRange);\n                            }\n                            break;\n                        }\n                    }\n                    if (!foundReferenceRange) {\n                        // Cannot do linked editing if the ranges are not where the cursor is...\n                        this.clearRanges();\n                        return;\n                    }\n                    const decorations = ranges.map(range => ({ range: range, options: LinkedEditingContribution_1.DECORATION }));\n                    this._visibleContextKey.set(true);\n                    this._currentDecorations.set(decorations);\n                    this._syncRangesToken++; // cancel any pending syncRanges call\n                }\n                catch (err) {\n                    if (!isCancellationError(err)) {\n                        onUnexpectedError(err);\n                    }\n                    if (this._currentRequest === request || !this._currentRequest) {\n                        // stop if we are still the latest request\n                        this.clearRanges();\n                    }\n                }\n            }));\n            this._currentRequest = request;\n            return request;\n        });\n    }\n};\nLinkedEditingContribution.ID = 'editor.contrib.linkedEditing';\nLinkedEditingContribution.DECORATION = ModelDecorationOptions.register({\n    description: 'linked-editing',\n    stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */,\n    className: DECORATION_CLASS_NAME\n});\nLinkedEditingContribution = LinkedEditingContribution_1 = __decorate([\n    __param(1, IContextKeyService),\n    __param(2, ILanguageFeaturesService),\n    __param(3, ILanguageConfigurationService),\n    __param(4, ILanguageFeatureDebounceService)\n], LinkedEditingContribution);\nexport { LinkedEditingContribution };\nexport class LinkedEditingAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.linkedEditing',\n            label: nls.localize('linkedEditing.label', \"Start Linked Editing\"),\n            alias: 'Start Linked Editing',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasRenameProvider),\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 60 /* KeyCode.F2 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    runCommand(accessor, args) {\n        const editorService = accessor.get(ICodeEditorService);\n        const [uri, pos] = Array.isArray(args) && args || [undefined, undefined];\n        if (URI.isUri(uri) && Position.isIPosition(pos)) {\n            return editorService.openCodeEditor({ resource: uri }, editorService.getActiveCodeEditor()).then(editor => {\n                if (!editor) {\n                    return;\n                }\n                editor.setPosition(pos);\n                editor.invokeWithinContext(accessor => {\n                    this.reportTelemetry(accessor, editor);\n                    return this.run(accessor, editor);\n                });\n            }, onUnexpectedError);\n        }\n        return super.runCommand(accessor, args);\n    }\n    run(_accessor, editor) {\n        const controller = LinkedEditingContribution.get(editor);\n        if (controller) {\n            return Promise.resolve(controller.updateRanges(true));\n        }\n        return Promise.resolve();\n    }\n}\nconst LinkedEditingCommand = EditorCommand.bindToContribution(LinkedEditingContribution.get);\nregisterEditorCommand(new LinkedEditingCommand({\n    id: 'cancelLinkedEditingInput',\n    precondition: CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE,\n    handler: x => x.clearRanges(),\n    kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 99,\n        primary: 9 /* KeyCode.Escape */,\n        secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n    }\n}));\nfunction getLinkedEditingRanges(providers, model, position, token) {\n    const orderedByScore = providers.ordered(model);\n    // in order of score ask the linked editing range provider\n    // until someone response with a good result\n    // (good = not null)\n    return first(orderedByScore.map(provider => () => __awaiter(this, void 0, void 0, function* () {\n        try {\n            return yield provider.provideLinkedEditingRanges(model, position, token);\n        }\n        catch (e) {\n            onUnexpectedExternalError(e);\n            return undefined;\n        }\n    })), result => !!result && arrays.isNonEmptyArray(result === null || result === void 0 ? void 0 : result.ranges));\n}\nexport const editorLinkedEditingBackground = registerColor('editor.linkedEditingBackground', { dark: Color.fromHex('#f00').transparent(0.3), light: Color.fromHex('#f00').transparent(0.3), hcDark: Color.fromHex('#f00').transparent(0.3), hcLight: Color.white }, nls.localize('editorLinkedEditingBackground', 'Background color when the editor auto renames on type.'));\nregisterModelAndPositionCommand('_executeLinkedEditingProvider', (_accessor, model, position) => {\n    const { linkedEditingRangeProvider } = _accessor.get(ILanguageFeaturesService);\n    return getLinkedEditingRanges(linkedEditingRangeProvider, model, position, CancellationToken.None);\n});\nregisterEditorContribution(LinkedEditingContribution.ID, LinkedEditingContribution, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nregisterEditorAction(LinkedEditingAction);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore, isDisposable } from '../../../../base/common/lifecycle.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Range } from '../../../common/core/range.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport class Link {\n    constructor(link, provider) {\n        this._link = link;\n        this._provider = provider;\n    }\n    toJSON() {\n        return {\n            range: this.range,\n            url: this.url,\n            tooltip: this.tooltip\n        };\n    }\n    get range() {\n        return this._link.range;\n    }\n    get url() {\n        return this._link.url;\n    }\n    get tooltip() {\n        return this._link.tooltip;\n    }\n    resolve(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._link.url) {\n                return this._link.url;\n            }\n            if (typeof this._provider.resolveLink === 'function') {\n                return Promise.resolve(this._provider.resolveLink(this._link, token)).then(value => {\n                    this._link = value || this._link;\n                    if (this._link.url) {\n                        // recurse\n                        return this.resolve(token);\n                    }\n                    return Promise.reject(new Error('missing'));\n                });\n            }\n            return Promise.reject(new Error('missing'));\n        });\n    }\n}\nexport class LinksList {\n    constructor(tuples) {\n        this._disposables = new DisposableStore();\n        let links = [];\n        for (const [list, provider] of tuples) {\n            // merge all links\n            const newLinks = list.links.map(link => new Link(link, provider));\n            links = LinksList._union(links, newLinks);\n            // register disposables\n            if (isDisposable(list)) {\n                this._disposables.add(list);\n            }\n        }\n        this.links = links;\n    }\n    dispose() {\n        this._disposables.dispose();\n        this.links.length = 0;\n    }\n    static _union(oldLinks, newLinks) {\n        // reunite oldLinks with newLinks and remove duplicates\n        const result = [];\n        let oldIndex;\n        let oldLen;\n        let newIndex;\n        let newLen;\n        for (oldIndex = 0, newIndex = 0, oldLen = oldLinks.length, newLen = newLinks.length; oldIndex < oldLen && newIndex < newLen;) {\n            const oldLink = oldLinks[oldIndex];\n            const newLink = newLinks[newIndex];\n            if (Range.areIntersectingOrTouching(oldLink.range, newLink.range)) {\n                // Remove the oldLink\n                oldIndex++;\n                continue;\n            }\n            const comparisonResult = Range.compareRangesUsingStarts(oldLink.range, newLink.range);\n            if (comparisonResult < 0) {\n                // oldLink is before\n                result.push(oldLink);\n                oldIndex++;\n            }\n            else {\n                // newLink is before\n                result.push(newLink);\n                newIndex++;\n            }\n        }\n        for (; oldIndex < oldLen; oldIndex++) {\n            result.push(oldLinks[oldIndex]);\n        }\n        for (; newIndex < newLen; newIndex++) {\n            result.push(newLinks[newIndex]);\n        }\n        return result;\n    }\n}\nexport function getLinks(providers, model, token) {\n    const lists = [];\n    // ask all providers for links in parallel\n    const promises = providers.ordered(model).reverse().map((provider, i) => {\n        return Promise.resolve(provider.provideLinks(model, token)).then(result => {\n            if (result) {\n                lists[i] = [result, provider];\n            }\n        }, onUnexpectedExternalError);\n    });\n    return Promise.all(promises).then(() => {\n        const result = new LinksList(coalesce(lists));\n        if (!token.isCancellationRequested) {\n            return result;\n        }\n        result.dispose();\n        return new LinksList([]);\n    });\n}\nCommandsRegistry.registerCommand('_executeLinkProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\n    let [uri, resolveCount] = args;\n    assertType(uri instanceof URI);\n    if (typeof resolveCount !== 'number') {\n        resolveCount = 0;\n    }\n    const { linkProvider } = accessor.get(ILanguageFeaturesService);\n    const model = accessor.get(IModelService).getModel(uri);\n    if (!model) {\n        return [];\n    }\n    const list = yield getLinks(linkProvider, model, CancellationToken.None);\n    if (!list) {\n        return [];\n    }\n    // resolve links\n    for (let i = 0; i < Math.min(resolveCount, list.links.length); i++) {\n        yield list.links[i].resolve(CancellationToken.None);\n    }\n    const result = list.links.slice(0);\n    list.dispose();\n    return result;\n}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar LinkDetector_1;\nimport { createCancelablePromise, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as resources from '../../../../base/common/resources.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport './links.css';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ClickLinkGesture } from '../../gotoSymbol/browser/link/clickLinkGesture.js';\nimport { getLinks } from './getLinks.js';\nimport * as nls from '../../../../nls.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nlet LinkDetector = LinkDetector_1 = class LinkDetector extends Disposable {\n    static get(editor) {\n        return editor.getContribution(LinkDetector_1.ID);\n    }\n    constructor(editor, openerService, notificationService, languageFeaturesService, languageFeatureDebounceService) {\n        super();\n        this.editor = editor;\n        this.openerService = openerService;\n        this.notificationService = notificationService;\n        this.languageFeaturesService = languageFeaturesService;\n        this.providers = this.languageFeaturesService.linkProvider;\n        this.debounceInformation = languageFeatureDebounceService.for(this.providers, 'Links', { min: 1000, max: 4000 });\n        this.computeLinks = this._register(new RunOnceScheduler(() => this.computeLinksNow(), 1000));\n        this.computePromise = null;\n        this.activeLinksList = null;\n        this.currentOccurrences = {};\n        this.activeLinkDecorationId = null;\n        const clickLinkGesture = this._register(new ClickLinkGesture(editor));\n        this._register(clickLinkGesture.onMouseMoveOrRelevantKeyDown(([mouseEvent, keyboardEvent]) => {\n            this._onEditorMouseMove(mouseEvent, keyboardEvent);\n        }));\n        this._register(clickLinkGesture.onExecute((e) => {\n            this.onEditorMouseUp(e);\n        }));\n        this._register(clickLinkGesture.onCancel((e) => {\n            this.cleanUpActiveLinkDecoration();\n        }));\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (!e.hasChanged(70 /* EditorOption.links */)) {\n                return;\n            }\n            // Remove any links (for the getting disabled case)\n            this.updateDecorations([]);\n            // Stop any computation (for the getting disabled case)\n            this.stop();\n            // Start computing (for the getting enabled case)\n            this.computeLinks.schedule(0);\n        }));\n        this._register(editor.onDidChangeModelContent((e) => {\n            if (!this.editor.hasModel()) {\n                return;\n            }\n            this.computeLinks.schedule(this.debounceInformation.get(this.editor.getModel()));\n        }));\n        this._register(editor.onDidChangeModel((e) => {\n            this.currentOccurrences = {};\n            this.activeLinkDecorationId = null;\n            this.stop();\n            this.computeLinks.schedule(0);\n        }));\n        this._register(editor.onDidChangeModelLanguage((e) => {\n            this.stop();\n            this.computeLinks.schedule(0);\n        }));\n        this._register(this.providers.onDidChange((e) => {\n            this.stop();\n            this.computeLinks.schedule(0);\n        }));\n        this.computeLinks.schedule(0);\n    }\n    computeLinksNow() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.editor.hasModel() || !this.editor.getOption(70 /* EditorOption.links */)) {\n                return;\n            }\n            const model = this.editor.getModel();\n            if (model.isTooLargeForSyncing()) {\n                return;\n            }\n            if (!this.providers.has(model)) {\n                return;\n            }\n            if (this.activeLinksList) {\n                this.activeLinksList.dispose();\n                this.activeLinksList = null;\n            }\n            this.computePromise = createCancelablePromise(token => getLinks(this.providers, model, token));\n            try {\n                const sw = new StopWatch(false);\n                this.activeLinksList = yield this.computePromise;\n                this.debounceInformation.update(model, sw.elapsed());\n                if (model.isDisposed()) {\n                    return;\n                }\n                this.updateDecorations(this.activeLinksList.links);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n            finally {\n                this.computePromise = null;\n            }\n        });\n    }\n    updateDecorations(links) {\n        const useMetaKey = (this.editor.getOption(77 /* EditorOption.multiCursorModifier */) === 'altKey');\n        const oldDecorations = [];\n        const keys = Object.keys(this.currentOccurrences);\n        for (const decorationId of keys) {\n            const occurence = this.currentOccurrences[decorationId];\n            oldDecorations.push(occurence.decorationId);\n        }\n        const newDecorations = [];\n        if (links) {\n            // Not sure why this is sometimes null\n            for (const link of links) {\n                newDecorations.push(LinkOccurrence.decoration(link, useMetaKey));\n            }\n        }\n        this.editor.changeDecorations((changeAccessor) => {\n            const decorations = changeAccessor.deltaDecorations(oldDecorations, newDecorations);\n            this.currentOccurrences = {};\n            this.activeLinkDecorationId = null;\n            for (let i = 0, len = decorations.length; i < len; i++) {\n                const occurence = new LinkOccurrence(links[i], decorations[i]);\n                this.currentOccurrences[occurence.decorationId] = occurence;\n            }\n        });\n    }\n    _onEditorMouseMove(mouseEvent, withKey) {\n        const useMetaKey = (this.editor.getOption(77 /* EditorOption.multiCursorModifier */) === 'altKey');\n        if (this.isEnabled(mouseEvent, withKey)) {\n            this.cleanUpActiveLinkDecoration(); // always remove previous link decoration as their can only be one\n            const occurrence = this.getLinkOccurrence(mouseEvent.target.position);\n            if (occurrence) {\n                this.editor.changeDecorations((changeAccessor) => {\n                    occurrence.activate(changeAccessor, useMetaKey);\n                    this.activeLinkDecorationId = occurrence.decorationId;\n                });\n            }\n        }\n        else {\n            this.cleanUpActiveLinkDecoration();\n        }\n    }\n    cleanUpActiveLinkDecoration() {\n        const useMetaKey = (this.editor.getOption(77 /* EditorOption.multiCursorModifier */) === 'altKey');\n        if (this.activeLinkDecorationId) {\n            const occurrence = this.currentOccurrences[this.activeLinkDecorationId];\n            if (occurrence) {\n                this.editor.changeDecorations((changeAccessor) => {\n                    occurrence.deactivate(changeAccessor, useMetaKey);\n                });\n            }\n            this.activeLinkDecorationId = null;\n        }\n    }\n    onEditorMouseUp(mouseEvent) {\n        if (!this.isEnabled(mouseEvent)) {\n            return;\n        }\n        const occurrence = this.getLinkOccurrence(mouseEvent.target.position);\n        if (!occurrence) {\n            return;\n        }\n        this.openLinkOccurrence(occurrence, mouseEvent.hasSideBySideModifier, true /* from user gesture */);\n    }\n    openLinkOccurrence(occurrence, openToSide, fromUserGesture = false) {\n        if (!this.openerService) {\n            return;\n        }\n        const { link } = occurrence;\n        link.resolve(CancellationToken.None).then(uri => {\n            // Support for relative file URIs of the shape file://./relativeFile.txt or file:///./relativeFile.txt\n            if (typeof uri === 'string' && this.editor.hasModel()) {\n                const modelUri = this.editor.getModel().uri;\n                if (modelUri.scheme === Schemas.file && uri.startsWith(`${Schemas.file}:`)) {\n                    const parsedUri = URI.parse(uri);\n                    if (parsedUri.scheme === Schemas.file) {\n                        const fsPath = resources.originalFSPath(parsedUri);\n                        let relativePath = null;\n                        if (fsPath.startsWith('/./')) {\n                            relativePath = `.${fsPath.substr(1)}`;\n                        }\n                        else if (fsPath.startsWith('//./')) {\n                            relativePath = `.${fsPath.substr(2)}`;\n                        }\n                        if (relativePath) {\n                            uri = resources.joinPath(modelUri, relativePath);\n                        }\n                    }\n                }\n            }\n            return this.openerService.open(uri, { openToSide, fromUserGesture, allowContributedOpeners: true, allowCommands: true, fromWorkspace: true });\n        }, err => {\n            const messageOrError = err instanceof Error ? err.message : err;\n            // different error cases\n            if (messageOrError === 'invalid') {\n                this.notificationService.warn(nls.localize('invalid.url', 'Failed to open this link because it is not well-formed: {0}', link.url.toString()));\n            }\n            else if (messageOrError === 'missing') {\n                this.notificationService.warn(nls.localize('missing.url', 'Failed to open this link because its target is missing.'));\n            }\n            else {\n                onUnexpectedError(err);\n            }\n        });\n    }\n    getLinkOccurrence(position) {\n        if (!this.editor.hasModel() || !position) {\n            return null;\n        }\n        const decorations = this.editor.getModel().getDecorationsInRange({\n            startLineNumber: position.lineNumber,\n            startColumn: position.column,\n            endLineNumber: position.lineNumber,\n            endColumn: position.column\n        }, 0, true);\n        for (const decoration of decorations) {\n            const currentOccurrence = this.currentOccurrences[decoration.id];\n            if (currentOccurrence) {\n                return currentOccurrence;\n            }\n        }\n        return null;\n    }\n    isEnabled(mouseEvent, withKey) {\n        return Boolean((mouseEvent.target.type === 6 /* MouseTargetType.CONTENT_TEXT */)\n            && (mouseEvent.hasTriggerModifier || (withKey && withKey.keyCodeIsTriggerKey)));\n    }\n    stop() {\n        var _a;\n        this.computeLinks.cancel();\n        if (this.activeLinksList) {\n            (_a = this.activeLinksList) === null || _a === void 0 ? void 0 : _a.dispose();\n            this.activeLinksList = null;\n        }\n        if (this.computePromise) {\n            this.computePromise.cancel();\n            this.computePromise = null;\n        }\n    }\n    dispose() {\n        super.dispose();\n        this.stop();\n    }\n};\nLinkDetector.ID = 'editor.linkDetector';\nLinkDetector = LinkDetector_1 = __decorate([\n    __param(1, IOpenerService),\n    __param(2, INotificationService),\n    __param(3, ILanguageFeaturesService),\n    __param(4, ILanguageFeatureDebounceService)\n], LinkDetector);\nexport { LinkDetector };\nconst decoration = {\n    general: ModelDecorationOptions.register({\n        description: 'detected-link',\n        stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n        collapseOnReplaceEdit: true,\n        inlineClassName: 'detected-link'\n    }),\n    active: ModelDecorationOptions.register({\n        description: 'detected-link-active',\n        stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n        collapseOnReplaceEdit: true,\n        inlineClassName: 'detected-link-active'\n    })\n};\nclass LinkOccurrence {\n    static decoration(link, useMetaKey) {\n        return {\n            range: link.range,\n            options: LinkOccurrence._getOptions(link, useMetaKey, false)\n        };\n    }\n    static _getOptions(link, useMetaKey, isActive) {\n        const options = Object.assign({}, (isActive ? decoration.active : decoration.general));\n        options.hoverMessage = getHoverMessage(link, useMetaKey);\n        return options;\n    }\n    constructor(link, decorationId) {\n        this.link = link;\n        this.decorationId = decorationId;\n    }\n    activate(changeAccessor, useMetaKey) {\n        changeAccessor.changeDecorationOptions(this.decorationId, LinkOccurrence._getOptions(this.link, useMetaKey, true));\n    }\n    deactivate(changeAccessor, useMetaKey) {\n        changeAccessor.changeDecorationOptions(this.decorationId, LinkOccurrence._getOptions(this.link, useMetaKey, false));\n    }\n}\nfunction getHoverMessage(link, useMetaKey) {\n    const executeCmd = link.url && /^command:/i.test(link.url.toString());\n    const label = link.tooltip\n        ? link.tooltip\n        : executeCmd\n            ? nls.localize('links.navigate.executeCmd', 'Execute command')\n            : nls.localize('links.navigate.follow', 'Follow link');\n    const kb = useMetaKey\n        ? platform.isMacintosh\n            ? nls.localize('links.navigate.kb.meta.mac', \"cmd + click\")\n            : nls.localize('links.navigate.kb.meta', \"ctrl + click\")\n        : platform.isMacintosh\n            ? nls.localize('links.navigate.kb.alt.mac', \"option + click\")\n            : nls.localize('links.navigate.kb.alt', \"alt + click\");\n    if (link.url) {\n        let nativeLabel = '';\n        if (/^command:/i.test(link.url.toString())) {\n            // Don't show complete command arguments in the native tooltip\n            const match = link.url.toString().match(/^command:([^?#]+)/);\n            if (match) {\n                const commandId = match[1];\n                nativeLabel = nls.localize('tooltip.explanation', \"Execute command {0}\", commandId);\n            }\n        }\n        const hoverMessage = new MarkdownString('', true)\n            .appendLink(link.url.toString(true).replace(/ /g, '%20'), label, nativeLabel)\n            .appendMarkdown(` (${kb})`);\n        return hoverMessage;\n    }\n    else {\n        return new MarkdownString().appendText(`${label} (${kb})`);\n    }\n}\nclass OpenLinkAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.openLink',\n            label: nls.localize('label', \"Open Link\"),\n            alias: 'Open Link',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const linkDetector = LinkDetector.get(editor);\n        if (!linkDetector) {\n            return;\n        }\n        if (!editor.hasModel()) {\n            return;\n        }\n        const selections = editor.getSelections();\n        for (const sel of selections) {\n            const link = linkDetector.getLinkOccurrence(sel.getEndPosition());\n            if (link) {\n                linkDetector.openLinkOccurrence(link, false);\n            }\n        }\n    }\n}\nregisterEditorContribution(LinkDetector.ID, LinkDetector, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nregisterEditorAction(OpenLinkAction);\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","InlayHintAnchor","_createClass","range","direction","_classCallCheck","this","InlayHintItem","hint","anchor","provider","_isResolved","key","delta","_currentResolve","token","_regeneratorRuntime","mark","_callee","_this","wrap","_context","prev","resolveInlayHint","abrupt","isCancellationRequested","_doResolve","finally","undefined","stop","_a","_b","_callee2","newHint","_context2","sent","tooltip","label","t0","onUnexpectedExternalError","InlayHintsFragments","ranges","data","model","_disposables","DisposableStore","Set","_step","items","_iterator","_createForOfIteratorHelper","s","n","_step$value","_slicedToArray","list","add","_step2","_iterator2","hints","position","validatePosition","wordRange","_getRangeAtPosition","getStartPosition","isBefore","Range","fromPositions","getEndPosition","push","err","f","sort","a","b","Position","compare","dispose","registry","_callee4","promises","_this2","_context4","ordered","reverse","map","_callee3","_context3","provideInlayHints","length","all","flat","isDisposed","CancellationError","line","lineNumber","word","getWordAtPosition","startColumn","endColumn","tokenization","tokenizeIfCheap","tokens","getLineTokens","offset","column","idx","findTokenIndexAtOffset","start","getStartOffset","end","getEndOffset","getCount","InlayHintsController_1","__decorate","decorators","target","desc","d","c","arguments","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","InlayHintsCache","_entries","LRUCache","_key","get","set","concat","uri","toString","getVersionId","IInlayHintsCache","createDecorator","registerSingleton","RenderedInlayHintLabelPart","item","index","ActiveInlayHintInfo","part","hasTriggerModifier","InlayHintsController","_editor","_languageFeaturesService","_featureDebounce","_inlayHintsCache","_commandService","_notificationService","_instaService","_sessionDisposables","_decorationsMetadata","Map","_ruleFactory","DynamicCssRules","_activeRenderMode","_debounceInfo","for","inlayHintsProvider","min","onDidChange","_update","onDidChangeModel","onDidChangeModelLanguage","onDidChangeConfiguration","hasChanged","_removeAllDecorations","clear","options","getOption","enabled","getModel","has","cts","cached","_updateHintsDecorators","getFullModelRange","toDisposable","_cacheHintsForFastRestore","defaultMode","altMode","watchedProviders","scheduler","RunOnceScheduler","t1","listener","myToken","inlayHints","Date","now","CancellationTokenSource","onWillDispose","cancel","create","_getHintsRanges","delay","update","onDidChangeInlayHints","isScheduled","schedule","onUnexpectedError","finish","onDidScrollChange","scrollTopChanged","onDidChangeModelContent","Math","max","ModifierKeyEmitter","getInstance","event","hasModel","newRenderMode","altKey","ctrlKey","shiftKey","metaKey","copies","_copyInlayHintsWithCurrentAnchor","_installDblClickGesture","_installLinkGesture","_installContextMenu","_this3","store","gesture","ClickLinkGesture","sessionStore","onMouseMoveOrRelevantKeyDown","mouseEvent","labelPart","_getInlayHintLabelPart","_activeInlayHintPart","command","location","getLineMaxColumn","lineHints","_getInlineHintsForRange","onCancel","onExecute","invokeFunction","goToDefinitionWithLocation","languages","is","_invokeCommand","values","containsRange","Array","from","updateInlayHints","_this4","onMouseUp","edits","detail","preventDefault","CancellationToken","None","isNonEmptyArray","textEdits","edit","EditOperation","replace","lift","text","executeEdits","_this5","onContextMenu","HTMLElement","showGoToContextMenu","type","injectedText","ModelDecorationInjectedTextOptions","attachedData","_callee5","_this$_commandService","_context5","executeCommand","id","_toConsumableArray","notify","severity","Severity","Error","source","displayName","message","_step3","_iterator3","_step3$value","obj","getDecorationRange","copy","with","_step4","visibleRanges","getVisibleRangesPlusViewportAboveBelow","_iterator4","compareRangesUsingStarts","extendedRange","validateRange","startLineNumber","endLineNumber","areIntersectingOrTouching","plusRange","_this6","newDecorationsData","addInjectedText","ref","content","cursorStops","opts","inlineClassNameAffectsLetterSpacing","inlineClassName","className","classNameRef","decoration","_defineProperty","description","showIfCollapsed","isEmpty","collapseOnReplaceEdit","stickiness","addInjectedWhitespace","isLast","marginRule","createClassNameRef","width","fontSize","display","InjectedTextCursorStops","Right","_this$_getLayoutInfo","_getLayoutInfo","fontFamily","padding","isUniform","fontFamilyVar","getContainerDomNode","style","setProperty","_step5","_iterator5","paddingLeft","parts","isFirst","cssProperties","EDITOR_FONT_DEFAULTS","verticalAlign","unicodeBidi","cursor","_fillInColors","textDecoration","color","themeColorFromId","colors","borderRadius","fixSpace","paddingRight","_MAX_DECORATORS","_step6","decorationIdsToReplace","_iterator6","_step7","_iterator7","getDecorationsInRange","metadata","delete","scrollState","StableEditorScrollState","capture","changeDecorations","accessor","newDecorationIds","deltaDecorations","restore","props","kind","Parameter","backgroundColor","Type","editorFontSize","editorFontFamily","removeDecorations","keys","_step8","_iterator8","editor","getContribution","ID","str","ILanguageFeaturesService","ILanguageFeatureDebounceService","ICommandService","INotificationService","IInstantiationService","CommandsRegistry","registerCommand","_len","args","_key2","_callee6","_accessor$get","_context6","assertType","URI","isUri","isIRange","ITextModelService","createModelReference","object","textEditorModel","setTimeout","__asyncValues","o","Symbol","asyncIterator","TypeError","m","call","__values","iterator","verb","v","settle","InlayHintsHoverAnchor","_HoverForeignElementA","_inherits","_super","_createSuper","owner","initialMousePosX","initialMousePosY","HoverForeignElementAnchor","InlayHintsHover","_MarkdownHoverPartici","_super2","languageService","openerService","configurationService","_resolverService","languageFeaturesService","hoverOrdinal","posx","posy","_lineDecorations","AsyncIterableObject","executor","e_1","_c","itemTooltip","partTooltip","linkHint","useMetaKey","kb","iterable","_d","iterable_1","iterable_1_1","MarkdownString","appendText","emitOne","MarkdownHover","localize","platform","scheme","Schemas","path","query","encodeURIComponent","JSON","stringify","title","isTrusted","_resolveInlayHintLabelPartHover","error","return","EMPTY","_part$part$location","hoverProvider","getHover","filter","isEmptyMarkdownString","hover","contents","ordinal","MarkdownHoverParticipant","ILanguageService","IOpenerService","IConfigurationService","registerEditorContribution","HoverParticipantRegistry","register","resolverService","contextMenuService","commandService","instaService","notificationService","menuActions","_loop","useShadowDOM","IContextMenuService","MenuRegistry","getMenuItems","MenuId","EditorContext","isIMenuItem","generateUuid","SymbolNavigationAction","delegate","Action","MenuItemAction","renderShortTitle","symbolAnchor","SymbolNavigationAnchor","runEditorCommand","bind","delegateYield","Separator","showContextMenu","domForShadowRoot","getDomNode","getAnchor","box","dom","x","left","y","top","height","getActions","onHide","focus","autoSelectFirstItem","invokeWithinContext","openToSide","contextKeyService","isInPeek","canPeek","action","hasSideBySideModifier","IContextKeyService","PeekContext","inPeekEditor","getValue","DefinitionAction","openInPeek","muteMessage","original","precondition","run","inlineSuggestCommitId","showPreviousInlineSuggestionActionId","showNextInlineSuggestionActionId","InlineCompletionContextKeys","_Disposable","inlineCompletionVisible","inlineSuggestionVisible","bindTo","inlineCompletionSuggestsIndentation","inlineSuggestionHasIndentation","inlineCompletionSuggestsIndentationLessThanTabSize","inlineSuggestionHasIndentationLessThanTabSize","suppressSuggestions","_register","autorun","reader","read","state","isInlineCompletionVisible","inlineCompletion","ghostText","inlineCompletions","startsWithIndentation","startsWithIndentationLessThanTabSize","selectedSuggestItem","_ghostText$parts$","firstLine","lines","textModel","getLineIndentColumn","firstNonWsIdx","firstNonWhitespaceIndex","tabSize","getOptions","CursorColumns","visibleColumnFromColumn","Disposable","RawContextKey","PositionOffsetTransformer","lineStartOffsetByLineIdx","charAt","array","ColumnRange","endColumnExclusive","BugIndicatingError","other","addPositions","pos1","pos2","lengthOfText","GhostText","every","equals","lineText","lastPart","transformer","offsetEdits","startOffset","getOffset","endOffset","substring","applyEdits","substr","p","join","reduce","GhostTextPart","preview","GhostTextReplacement","columnRange","newLines","additionalReservedLineCount","_lineText","ghostTextOrReplacementEquals","GHOST_TEXT_DESCRIPTION","GhostTextWidget","observableValue","_assertThisInitialized","currentTextModel","observableFromEvent","uiState","derived","targetTextModel","replacedRange","inlineTexts","additionalLines","textBufferLine","getLineContent","hiddenTextStartColumn","lastIdx","slice","addToAdditionalLines","hiddenRange","minReservedLineCount","lastLine","decorations","LineDecoration","toRange","after","Left","additionalLinesWidget","AdditionalLinesWidget","languageIdCodec","decorationsCollection","createDecorationsCollection","autorunOpts","debugName","applyObservableDecorations","viewZoneId","_Disposable2","_viewZoneId","editorOptionsChanged","observableSignalFromEvent","Event","updateLines","_get","_getPrototypeOf","prototype","changeViewZones","changeAccessor","removeZone","heightInLines","domNode","document","createElement","disableMonospaceOptimizations","stopRenderingLineAfter","renderWhitespace","renderControlCharacters","fontLigatures","fontInfo","lineHeight","sb","StringBuilder","appendString","len","lineData","String","isBasicASCII","strings","containsRTL","lineTokens","LineTokens","createEmpty","renderViewLine","RenderLineInput","isMonospace","canUseHalfwidthRightwardsArrow","spaceWidth","middotWidth","wsmiddotWidth","EditorFontLigatures","OFF","applyFontInfo","html","build","trustedhtml","ttPolicy","createHTML","innerHTML","renderLines","addZone","afterLineNumber","afterColumnAffinity","createTrustedTypesPolicy","provideInlineCompletions","context","languageConfigurationService","defaultReplaceRange","providers","multiMap","getPreferredProviders","states","seen","findPreferredProviderCircle","processProvider","providerResults","itemsByHash","lists","completions","inlineCompletionItem","circle","deferredPromise","DeferredPromise","preferred","complete","stack","yieldsToGroupIds","groupId","getDefaultRange","SetMap","InlineCompletionList","InlineCompletionItem","hash","InlineCompletionProviderResult","hashs","removeRef","refCount","freeInlineCompletions","filterText","insertText","snippetInfo","additionalTextEdits","sourceInlineCompletion","updatedRange","completeBracketPairs","diff","closeBrackets","preBracketCompletionLength","snippet","SnippetParser","parse","children","Text","assertNever","maxColumn","newLine","newTokens","tokenizeLineWithEdit","slicedTokens","sliceAndInflate","fixBracketsInLine","SingleTextEdit","validModelRange","modelRange","intersectRanges","valueToReplace","getValueInRange","commonPrefixLen","commonPrefixLength","base","startsWith","extendingRange","rangeToExtend","isBeforeOrEqual","mode","cursorPosition","previewSuffixLength","removeCommonPrefix","sourceLine","sourceIndentationLength","getLeadingWhitespace","suggestionAddedIndentationLength","replacedIndentation","_ref","startPosition","endPosition","newStartPosition","rangeThatDoesNotReplaceIndentation","suggestionWithoutIndentationChange","valueToBeReplaced","changes","originalValue","newValue","lastRequest","smartDiff","deletedChars","deletedCharacters","newChanges","cachingDiff","filteredChanges","originalLength","originalStart","previewStartInCompletionText","insertColumn","modifiedLength","modifiedEnd","modifiedStart","nonPreviewTextEnd","nonPreviewText","italicText","splitLines","sum","smartBracketMatching","maxCharCode","getMaxCharCode","elements1","getElements","elements2","LcsDiff","ComputeDiff","val","charCode","charCodeAt","getUniqueCharCode","level","group","characters","Int32Array","InlineCompletionsSource","versionId","_debounceValue","_updateOperation","MutableDisposable","disposableObservableValue","suggestWidgetInlineCompletions","onDidChangeContent","activeInlineCompletion","request","UpdateRequest","selectedSuggestionInfo","satisfies","promise","updateOngoing","startTime","updatedCompletions","endTime","asInlineCompletion","triggerKind","InlineCompletionTriggerKind","Automatic","wait","inlineCompletionsProvider","getTime","UpToDateInlineCompletions","toInlineCompletion","canBeReused","prepend","transaction","tx","updateOperation","UpdateOperation","ms","cancellationToken","handle","onCancellationRequested","clearTimeout","ILanguageConfigurationService","v1","v2","Explicit","cancellationTokenSource","inlineCompletionProviderResult","_refCount","_prependedInlineCompletionItems","_rangeVersionIdValue","_rangeVersionId","changed","_inlineCompletions","_updateRange","ids","InlineCompletionWithUpdatedRange","decorationId","addRefToSource","addRef","unshift","rangeVersion","initialRange","semanticId","_isValid","_updatedRange","enableForwardStability","withRange","_getUpdatedRange","minimizedReplacement","_toFilterTextReplacement","toLowerCase","cursorPosIndex","filterTextBefore","filterTextAfter","originalValueBefore","originalValueAfter","originalValueIndent","trimStart","matchesSubString","containsPosition","isVisible","_isSmallerThanOriginal","equalsRange","VersionIdChangeReason","InlineCompletionsModel","textModelVersionId","_suggestPreviewEnabled","_suggestPreviewMode","_inlineSuggestMode","_enabled","_instantiationService","_languageConfigurationService","_source","createInstance","_isActive","_forceUpdate","observableSignal","_selectedInlineCompletionId","_isAcceptingPartially","_preserveCurrentCompletionReasons","Redo","Undo","AcceptWord","_fetchInlineCompletions","derivedHandleChanges","createEmptyChangeSummary","preserveCurrentCompletion","inlineCompletionTriggerKind","handleChange","ctx","changeSummary","didChange","change","itemToPreserveCandidate","selectedInlineCompletion","itemToPreserve","forwardStable","suggestItem","clone","clearSuggestWidgetInlineCompletions","toSelectedSuggestionInfo","fetch","cancelUpdate","_filteredInlineCompletionItems","filteredCompletions","selectedInlineCompletionIndex","selectedInlineCompletionId","findIndex","lastTriggerKind","inlineCompletionsCount","derivedOpts","equalityComparer","suggestCompletion","toSingleTextEdit","augmentedCompletion","_computeAugmentedCompletion","editPreviewLength","newGhostText","computeGhostText","completion","replacement","recomputeInitiallyAndOnChange","lastItem","src","handleItemDidShow","subtransaction","trigger","candidateInlineCompletions","isDefined","mapFindFirst","augments","newIdx","triggerExplicitly","_deltaSelectedInlineCompletionIndex","pushUndoStop","replaceMove","setPosition","SnippetController2","insert","undoStopBefore","_callee7","_context7","_acceptNext","pos","langId","getLanguageIdAtPosition","config","getLanguageConfiguration","wordRegExp","RegExp","wordDefinition","flags","m1","match","acceptUntilIndexExclusive","m2","exec","_callee8","_context8","getAcceptUntilIndex","_callee9","firstPart","partialText","acceptedRange","_context9","accept","handlePartialAccept","itemEdit","SuggestWidgetAdaptor","suggestControllerPreselector","checkModelVersion","onWillAccept","isSuggestWidgetVisible","isShiftKeyPressed","_currentSuggestItemInfo","_selectedItem","onKeyDown","onKeyUp","suggestController","SuggestController","registerSelector","priority","select","suggestItems","itemToPreselect","candidates","suggestItemTextEdit","SuggestItemInfo","fromSuggestion","valid","prefixLength","findFirstMaxBy","compareBy","numberComparator","isBoundToSuggestWidget","once","onDidTrigger","widget","onDidShow","onDidHide","onDidFocus","onWillInsertSuggestItem","getPosition","suggestItemInfo","newActive","newInlineCompletion","getSuggestItemInfo","suggestItemInfoEquals","focusedItem","getFocusedItem","stopForceRenderingAbove","forceRenderingAbove","completionItemKind","isSnippetText","SelectedSuggestionInfo","toggleMode","insertTextRules","SnippetSession","adjustWhitespace","info","getOverwriteInfo","overwriteBefore","overwriteAfter","InlineCompletionsController_1","InlineCompletionsController","instantiationService","debounceService","audioCueService","_keybindingService","suggestWidgetAdaptor","updateObservables","Other","handleSuggestAccepted","ghostTextWidget","constObservable","runAndSubscribe","selectedItem","previewMode","isUndoing","isRedoing","isAcceptingPartially","getReason","onDidChangeCursorPosition","reason","onDidType","onDidExecuteCommand","CoreEditingCommands","Tab","DeleteLeft","DeleteRight","commandId","hasTextFocus","onDidBlurEditorWidget","getContextKeyValue","keepOnBlur","InlineSuggestionHintsContentWidget","dropDownVisible","lineCount","lastInlineCompletionId","playAudioCue","AudioCue","inlineSuggestion","provideScreenReaderUpdate","renderForScreenReader","InlineCompletionsHintsWidget","affectsConfiguration","updateOptions","inlineCompletionsAccessibilityVerbose","accessibleViewShowing","accessibleViewKeybinding","lookupKeybinding","getAriaLabel","alert","changeReason","newModel","some","ownsViewZone","IAudioCueService","IKeybindingService","ShowNextInlineSuggestionAction","_EditorAction","nls","alias","ContextKeyExpr","and","EditorContextKeys","writable","kbOpts","weight","primary","controller","EditorAction","ShowPreviousInlineSuggestionAction","_EditorAction2","previous","TriggerInlineSuggestionAction","_EditorAction3","_super3","AcceptNextWordOfInlineCompletion","_EditorAction4","_super4","kbExpr","menuOpts","menuId","InlineSuggestionToolbar","order","acceptNextWord","AcceptNextLineOfInlineCompletion","_EditorAction5","_super5","acceptNextLine","AcceptInlineCompletion","_EditorAction6","_super6","tabMovesFocus","toNegated","SuggestContext","Visible","hoverFocused","HideInlineCompletion","_EditorAction7","_super7","ToggleAlwaysShowInlineSuggestionToolbar","_Action","_super8","f1","menu","toggled","configService","currentValue","updateValue","Action2","InlineCompletionsHover","InlineCompletionsHoverParticipant","_languageService","_openerService","accessibilityService","_telemetryService","viewZoneData","shouldShowHoverAtViewZone","positionBefore","shouldShowHoverAt","mightBeForeignElement","lineDecorations","showToolbar","hoverParts","disposableStore","publicLog2","isScreenReaderOptimized","renderScreenReaderText","w","commands","fragment","appendChild","$","markdownHoverElement","hoverContentsElement","append","renderer","MarkdownRenderer","code","onDidRenderAsync","onContentsChanged","inlineSuggestionAvailable","renderedContents","render","appendCodeblock","replaceChildren","element","reset","IAccessibilityService","ITelemetryService","registerEditorAction","registerAction2","InlineSuggestionHintsContentWidget_1","alwaysShowToolbar","sessionPosition","firstColumn","Number","MAX_SAFE_INTEGER","autorunWithStore","contentWidget","addContentWidget","removeContentWidget","inlineSuggestionHintsNextIcon","registerIcon","Codicon","chevronRight","inlineSuggestionHintsPreviousIcon","chevronLeft","withBorder","_position","_currentSuggestionIdx","_suggestionCount","_extraCommands","keybindingService","_contextKeyService","_menuService","allowEditorOverflow","suppressMouseDown","nodes","h","previousAction","createCommandAction","ThemeIcon","asClassName","availableSuggestionCountAction","nextAction","inlineCompletionsActionsMenus","createMenu","InlineCompletionsActions","clearAvailableSuggestionCountLabelDebounced","disableButtonsDebounced","lastCommands","toolBar","CustomizedMenuWorkbenchToolBar","menuOptions","toolbarOptions","primaryGroup","g","actionViewItemProvider","StatusBarViewItem","ActionViewItemWithClassName","icon","setClass","telemetrySource","setPrependedPrimaryActions","onDidChangeDropdownVisibility","_dropDownVisible","layoutContentWidget","suggestionCount","currentSuggestionIdx","extraCommands","extraActions","class","setAdditionalSecondaryActions","iconClassName","comment","getLabel","root","preference","positionAffinity","IMenuService","_ActionViewItem","_className","container","classList","ActionViewItem","_MenuEntryActionViewI","_action","div","KeybindingLabel","OS","assign","disableTitle","unthemedKeybindingLabelOptions","textContent","MenuEntryActionViewItem","_WorkbenchToolBar","options2","menuService","telemetryService","resetMenu","_store","emitEventsForSubmenuChanges","additionalActions","prependedPrimaryActions","updateToolbar","_e","_f","_g","secondary","createAndFillInActionBarActions","shouldInlineSubmenu","useSeparatorsInPrimaryActions","setActions","actions","WorkbenchToolBar","inlineProgressDecoration","ModelDecorationOptions","noBreakWhitespace","InlineProgressWidget","typeId","_iconElement$classLis","role","iconElement","asClassNameArray","loading","updateSize","ceil","addDisposableListener","EventType","CLICK","baseId","InlineProgressManager","_showDelay","_showPromise","_currentWidget","_operationIdPool","_currentDecorations","operationId","_currentOperation","disposableTimeout","ExpandLineSelectionAction","textInputFocus","_accessor","viewModel","_getViewModel","pushStackElement","setCursorStates","CursorMoveCommands","expandLineSelection","getCursorStates","revealPrimaryCursor","CopyLinesCommand","selection","isCopyingDown","noop","_selection","_isCopyingDown","_noop","_selectionDirection","_selectionId","_startLineNumberDelta","_endLineNumberDelta","builder","setEndPosition","sourceLines","sourceText","addEditOperation","getLineCount","trackSelection","getDirection","helper","getTrackedSelection","Selection","createWithDirection","MoveLinesCommand","isMovingDown","autoIndent","_isMovingDown","_autoIndent","_moveEndLineSelectionShrink","modelLineCount","_moveEndPositionDown","_model$getOptions","indentSize","insertSpaces","indentConverter","buildIndentConverter","virtualModel","getLanguageId","otherLineNumber","movingLineNumber","movingLineText","insertingText","shouldAutoIndent","movingLineMatchResult","matchEnterRule","oldIndentation","newSpaceCnt","indentUtils","newIndentation","indentOfMovingLine","getGoodIndentForLine","ret","matchEnterRuleMovingDown","getIndentEditsOfMovingBlock","newIndentatOfMovingBlock","oldSpaceCnt","spaceCntOffset","indentOfFirstLine","oldIndent","shiftIndent","indentation","ShiftCommand","unshiftIndent","enter","enterPrefix","indentAction","IndentAction","Indent","IndentOutdent","Outdent","indexOf","indentMetadataOfMovelingLine","getIndentMetadata","futureAboveLineNumber","futureAboveLineText","getEnterAction","parseEnterResult","validPrecedingLine","lineContent","oneLineAbove","previousLineText","isCheapToTokenize","languageAtSelectionStart","indentRulesSupport","originalIndent","newSpacesCnt","newIndent","SortLinesCommand","descending","selectionId","op","getSortData","sortLines","_COLLATOR","Intl","Collator","before","linesToSort","sorted","getCollator","AbstractCopyLinesAction","down","selections","getSelections","ignore","curr","executeCommands","CopyLinesUpAction","_AbstractCopyLinesAct","editorTextFocus","linux","MenubarSelectionMenu","CopyLinesDownAction","_AbstractCopyLinesAct2","DuplicateSelectionAction","insertSelection","ReplaceCommandThatSelectsText","AbstractMoveLinesAction","MoveLinesUpAction","_AbstractMoveLinesAct","MoveLinesDownAction","_AbstractMoveLinesAct2","AbstractSortLinesAction","canRun","SortLinesAscendingAction","_AbstractSortLinesAct","_super9","SortLinesDescendingAction","_AbstractSortLinesAct2","_super10","DeleteDuplicateLinesAction","_super11","endCursorState","linesDeleted","uniqueLines","selectionToReplace","adjustedSelectionStart","finalSelection","TrimTrailingWhitespaceAction","_super12","KeyChord","cursors","positionLineNumber","positionColumn","getSelection","TrimTrailingWhitespaceCommand","DeleteLinesAction","_super13","ops","_getLinesToRemove","cursorState","operations","selectionStartColumn","mergedOperations","previousOperation","IndentLinesAction","_EditorAction8","_super14","TypeOperations","indent","cursorConfig","OutdentLinesAction","_EditorAction9","_super15","InsertLineBeforeAction","_EditorAction10","_super16","lineInsertBefore","InsertLineAfterAction","_EditorAction11","_super17","lineInsertAfter","AbstractDeleteAllToBoundaryAction","_EditorAction12","_super18","primaryCursor","rangesToDelete","_getRangesToDelete","effectiveRanges","count","nextRange","_getEndCursorState","DeleteAllLeftAction","_AbstractDeleteAllToB","_super19","mac","endPrimaryCursor","deletedLines","forEach","endCursor","newStartLine","deleteFromLine","deleteFromColumn","getLineLength","DeleteAllRightAction","_AbstractDeleteAllToB2","_super20","sel","JoinLinesAction","_EditorAction13","_super21","reducedSelections","lastSelection","previousValue","equalsSelection","lineOffset","columnDeltaOffset","selectionEndPositionOffset","trimmedLinesContent","firstNonWhitespaceIdx","getLineFirstNonWhitespaceColumn","insertSpace","lineTextWithoutIndent","deleteSelection","resultSelection","TransposeAction","_EditorAction14","_super22","chars","split","ReplaceCommand","ReplaceCommandThatPreservesSelection","AbstractCaseAction","_EditorAction15","_super23","wordSeparators","getConfiguredWordAtPosition","_modifyText","UpperCaseAction","_AbstractCaseAction","_super24","toLocaleUpperCase","LowerCaseAction","_AbstractCaseAction2","_super25","toLocaleLowerCase","BackwardsCompatibleRegExp","_pattern","_flags","_actual","_evaluated","TitleCaseAction","_AbstractCaseAction3","_super26","titleBoundary","SnakeCaseAction","_AbstractCaseAction4","_super27","caseBoundary","singleLetters","CamelCaseAction","_AbstractCaseAction5","_super28","wordBoundary","words","shift","KebabCaseAction","_AbstractCaseAction6","_super29","_","underscoreBoundary","regexp","isSupported","LinkedEditingContribution_1","CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE","LinkedEditingContribution","languageFeatureDebounceService","_syncRangesToken","_localToDispose","_providers","linkedEditingRangeProvider","_visibleContextKey","_debounceInformation","_languageWordPattern","_currentWordPattern","_ignoreChangeEvent","_rangeUpdateTriggerPromise","_rangeSyncTriggerPromise","_currentRequest","_currentRequestPosition","_currentRequestModelVersion","reinitialize","forceRefresh","isEnabled","clearRanges","onDidChangeLanguageConfiguration","getWordDefinition","rangeUpdateScheduler","Delayer","triggerRangeUpdate","updateRanges","_debounceDuration","rangeSyncScheduler","referenceRange","getRange","_syncRanges","referenceValue","mirrorRange","oldValue","rangeStartColumn","rangeEndColumn","commonSuffixLength","popUndoStop","prevEditOperationType","getPrevEditOperationType","setPrevEditOperationType","force","modelVersionId","createCancelablePromise","sw","response","foundReferenceRange","StopWatch","getLinkedEditingRanges","elapsed","wordPattern","splice","DECORATION","isCancellationError","LinkedEditingAction","hasRenameProvider","editorService","ICodeEditorService","isArray","_ref2","isIPosition","openCodeEditor","resource","getActiveCodeEditor","reportTelemetry","LinkedEditingCommand","EditorCommand","bindToContribution","orderedByScore","first","provideLinkedEditingRanges","arrays","registerEditorCommand","handler","editorLinkedEditingBackground","registerColor","dark","Color","fromHex","transparent","light","hcDark","hcLight","white","registerModelAndPositionCommand","Link","link","_link","_provider","url","resolveLink","LinksList","tuples","links","newLinks","_union","isDisposable","oldLinks","oldIndex","oldLen","newIndex","newLen","oldLink","newLink","getLinks","provideLinks","coalesce","resolveCount","linkProvider","IModelService","LinkDetector_1","LinkDetector","debounceInformation","computeLinks","computeLinksNow","computePromise","activeLinksList","currentOccurrences","activeLinkDecorationId","clickLinkGesture","keyboardEvent","_onEditorMouseMove","onEditorMouseUp","cleanUpActiveLinkDecoration","updateDecorations","isTooLargeForSyncing","oldDecorations","_i","_keys","occurence","newDecorations","LinkOccurrence","withKey","occurrence","getLinkOccurrence","activate","deactivate","openLinkOccurrence","fromUserGesture","modelUri","file","parsedUri","fsPath","resources","relativePath","open","allowContributedOpeners","allowCommands","fromWorkspace","messageOrError","warn","currentOccurrence","Boolean","keyCodeIsTriggerKey","general","active","changeDecorationOptions","_getOptions","isActive","hoverMessage","executeCmd","test","nativeLabel","appendLink","appendMarkdown","getHoverMessage","OpenLinkAction","linkDetector"],"sourceRoot":""}