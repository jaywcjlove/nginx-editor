{"version":3,"file":"static/js/monaco-editor-vendor.b74e11c3.bab0c0ab.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/editor/contrib/dnd/browser/dragAndDropCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/dnd/browser/dnd.js","../node_modules/monaco-editor/esm/vs/editor/contrib/documentSymbols/browser/documentSymbols.js","../node_modules/monaco-editor/esm/vs/editor/contrib/documentSymbols/browser/outlineModel.js","../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/edit.js","../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/copyPasteController.js","../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/copyPasteContribution.js","../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/defaultProviders.js","../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/dropIntoEditorController.js","../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/dropIntoEditorContribution.js","../node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/postEditWidget.js","../node_modules/monaco-editor/esm/vs/editor/contrib/editorState/browser/keybindingCancellation.js","../node_modules/monaco-editor/esm/vs/editor/contrib/editorState/browser/editorState.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class DragAndDropCommand {\n    constructor(selection, targetPosition, copy) {\n        this.selection = selection;\n        this.targetPosition = targetPosition;\n        this.copy = copy;\n        this.targetSelection = null;\n    }\n    getEditOperations(model, builder) {\n        const text = model.getValueInRange(this.selection);\n        if (!this.copy) {\n            builder.addEditOperation(this.selection, null);\n        }\n        builder.addEditOperation(new Range(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column), text);\n        if (this.selection.containsPosition(this.targetPosition) && !(this.copy && (this.selection.getEndPosition().equals(this.targetPosition) || this.selection.getStartPosition().equals(this.targetPosition)) // we allow users to paste content beside the selection\n        )) {\n            this.targetSelection = this.selection;\n            return;\n        }\n        if (this.copy) {\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.selection.endLineNumber - this.selection.startLineNumber + this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        if (this.targetPosition.lineNumber > this.selection.endLineNumber) {\n            // Drag the selection downwards\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        if (this.targetPosition.lineNumber < this.selection.endLineNumber) {\n            // Drag the selection upwards\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber + this.selection.endLineNumber - this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        // The target position is at the same line as the selection's end position.\n        if (this.selection.endColumn <= this.targetPosition.column) {\n            // The target position is after the selection's end position\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn :\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column :\n                this.selection.endColumn);\n        }\n        else {\n            // The target position is before the selection's end position. Since the selection doesn't contain the target position, the selection is one-line and target position is before this selection.\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column + this.selection.endColumn - this.selection.startColumn);\n        }\n    }\n    computeCursorState(model, helper) {\n        return this.targetSelection;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { isMacintosh } from '../../../../base/common/platform.js';\nimport './dnd.css';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { DragAndDropCommand } from './dragAndDropCommand.js';\nfunction hasTriggerModifier(e) {\n    if (isMacintosh) {\n        return e.altKey;\n    }\n    else {\n        return e.ctrlKey;\n    }\n}\nexport class DragAndDropController extends Disposable {\n    constructor(editor) {\n        super();\n        this._editor = editor;\n        this._dndDecorationIds = this._editor.createDecorationsCollection();\n        this._register(this._editor.onMouseDown((e) => this._onEditorMouseDown(e)));\n        this._register(this._editor.onMouseUp((e) => this._onEditorMouseUp(e)));\n        this._register(this._editor.onMouseDrag((e) => this._onEditorMouseDrag(e)));\n        this._register(this._editor.onMouseDrop((e) => this._onEditorMouseDrop(e)));\n        this._register(this._editor.onMouseDropCanceled(() => this._onEditorMouseDropCanceled()));\n        this._register(this._editor.onKeyDown((e) => this.onEditorKeyDown(e)));\n        this._register(this._editor.onKeyUp((e) => this.onEditorKeyUp(e)));\n        this._register(this._editor.onDidBlurEditorWidget(() => this.onEditorBlur()));\n        this._register(this._editor.onDidBlurEditorText(() => this.onEditorBlur()));\n        this._mouseDown = false;\n        this._modifierPressed = false;\n        this._dragSelection = null;\n    }\n    onEditorBlur() {\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n        this._modifierPressed = false;\n    }\n    onEditorKeyDown(e) {\n        if (!this._editor.getOption(34 /* EditorOption.dragAndDrop */) || this._editor.getOption(21 /* EditorOption.columnSelection */)) {\n            return;\n        }\n        if (hasTriggerModifier(e)) {\n            this._modifierPressed = true;\n        }\n        if (this._mouseDown && hasTriggerModifier(e)) {\n            this._editor.updateOptions({\n                mouseStyle: 'copy'\n            });\n        }\n    }\n    onEditorKeyUp(e) {\n        if (!this._editor.getOption(34 /* EditorOption.dragAndDrop */) || this._editor.getOption(21 /* EditorOption.columnSelection */)) {\n            return;\n        }\n        if (hasTriggerModifier(e)) {\n            this._modifierPressed = false;\n        }\n        if (this._mouseDown && e.keyCode === DragAndDropController.TRIGGER_KEY_VALUE) {\n            this._editor.updateOptions({\n                mouseStyle: 'default'\n            });\n        }\n    }\n    _onEditorMouseDown(mouseEvent) {\n        this._mouseDown = true;\n    }\n    _onEditorMouseUp(mouseEvent) {\n        this._mouseDown = false;\n        // Whenever users release the mouse, the drag and drop operation should finish and the cursor should revert to text.\n        this._editor.updateOptions({\n            mouseStyle: 'text'\n        });\n    }\n    _onEditorMouseDrag(mouseEvent) {\n        const target = mouseEvent.target;\n        if (this._dragSelection === null) {\n            const selections = this._editor.getSelections() || [];\n            const possibleSelections = selections.filter(selection => target.position && selection.containsPosition(target.position));\n            if (possibleSelections.length === 1) {\n                this._dragSelection = possibleSelections[0];\n            }\n            else {\n                return;\n            }\n        }\n        if (hasTriggerModifier(mouseEvent.event)) {\n            this._editor.updateOptions({\n                mouseStyle: 'copy'\n            });\n        }\n        else {\n            this._editor.updateOptions({\n                mouseStyle: 'default'\n            });\n        }\n        if (target.position) {\n            if (this._dragSelection.containsPosition(target.position)) {\n                this._removeDecoration();\n            }\n            else {\n                this.showAt(target.position);\n            }\n        }\n    }\n    _onEditorMouseDropCanceled() {\n        this._editor.updateOptions({\n            mouseStyle: 'text'\n        });\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n    }\n    _onEditorMouseDrop(mouseEvent) {\n        if (mouseEvent.target && (this._hitContent(mouseEvent.target) || this._hitMargin(mouseEvent.target)) && mouseEvent.target.position) {\n            const newCursorPosition = new Position(mouseEvent.target.position.lineNumber, mouseEvent.target.position.column);\n            if (this._dragSelection === null) {\n                let newSelections = null;\n                if (mouseEvent.event.shiftKey) {\n                    const primarySelection = this._editor.getSelection();\n                    if (primarySelection) {\n                        const { selectionStartLineNumber, selectionStartColumn } = primarySelection;\n                        newSelections = [new Selection(selectionStartLineNumber, selectionStartColumn, newCursorPosition.lineNumber, newCursorPosition.column)];\n                    }\n                }\n                else {\n                    newSelections = (this._editor.getSelections() || []).map(selection => {\n                        if (selection.containsPosition(newCursorPosition)) {\n                            return new Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);\n                        }\n                        else {\n                            return selection;\n                        }\n                    });\n                }\n                // Use `mouse` as the source instead of `api` and setting the reason to explicit (to behave like any other mouse operation).\n                this._editor.setSelections(newSelections || [], 'mouse', 3 /* CursorChangeReason.Explicit */);\n            }\n            else if (!this._dragSelection.containsPosition(newCursorPosition) ||\n                ((hasTriggerModifier(mouseEvent.event) ||\n                    this._modifierPressed) && (this._dragSelection.getEndPosition().equals(newCursorPosition) || this._dragSelection.getStartPosition().equals(newCursorPosition)) // we allow users to paste content beside the selection\n                )) {\n                this._editor.pushUndoStop();\n                this._editor.executeCommand(DragAndDropController.ID, new DragAndDropCommand(this._dragSelection, newCursorPosition, hasTriggerModifier(mouseEvent.event) || this._modifierPressed));\n                this._editor.pushUndoStop();\n            }\n        }\n        this._editor.updateOptions({\n            mouseStyle: 'text'\n        });\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n    }\n    showAt(position) {\n        this._dndDecorationIds.set([{\n                range: new Range(position.lineNumber, position.column, position.lineNumber, position.column),\n                options: DragAndDropController._DECORATION_OPTIONS\n            }]);\n        this._editor.revealPosition(position, 1 /* ScrollType.Immediate */);\n    }\n    _removeDecoration() {\n        this._dndDecorationIds.clear();\n    }\n    _hitContent(target) {\n        return target.type === 6 /* MouseTargetType.CONTENT_TEXT */ ||\n            target.type === 7 /* MouseTargetType.CONTENT_EMPTY */;\n    }\n    _hitMargin(target) {\n        return target.type === 2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */ ||\n            target.type === 3 /* MouseTargetType.GUTTER_LINE_NUMBERS */ ||\n            target.type === 4 /* MouseTargetType.GUTTER_LINE_DECORATIONS */;\n    }\n    dispose() {\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n        this._modifierPressed = false;\n        super.dispose();\n    }\n}\nDragAndDropController.ID = 'editor.contrib.dragAndDrop';\nDragAndDropController.TRIGGER_KEY_VALUE = isMacintosh ? 6 /* KeyCode.Alt */ : 5 /* KeyCode.Ctrl */;\nDragAndDropController._DECORATION_OPTIONS = ModelDecorationOptions.register({\n    description: 'dnd-target',\n    className: 'dnd-target'\n});\nregisterEditorContribution(DragAndDropController.ID, DragAndDropController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { IOutlineModelService } from './outlineModel.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nCommandsRegistry.registerCommand('_executeDocumentSymbolProvider', function (accessor, ...args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [resource] = args;\n        assertType(URI.isUri(resource));\n        const outlineService = accessor.get(IOutlineModelService);\n        const modelService = accessor.get(ITextModelService);\n        const reference = yield modelService.createModelReference(resource);\n        try {\n            return (yield outlineService.getOrCreate(reference.object.textEditorModel, CancellationToken.None)).getTopLevelSymbols();\n        }\n        finally {\n            reference.dispose();\n        }\n    });\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { equals } from '../../../../base/common/arrays.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport class TreeElement {\n    remove() {\n        var _a;\n        (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.delete(this.id);\n    }\n    static findId(candidate, container) {\n        // complex id-computation which contains the origin/extension,\n        // the parent path, and some dedupe logic when names collide\n        let candidateId;\n        if (typeof candidate === 'string') {\n            candidateId = `${container.id}/${candidate}`;\n        }\n        else {\n            candidateId = `${container.id}/${candidate.name}`;\n            if (container.children.get(candidateId) !== undefined) {\n                candidateId = `${container.id}/${candidate.name}_${candidate.range.startLineNumber}_${candidate.range.startColumn}`;\n            }\n        }\n        let id = candidateId;\n        for (let i = 0; container.children.get(id) !== undefined; i++) {\n            id = `${candidateId}_${i}`;\n        }\n        return id;\n    }\n    static empty(element) {\n        return element.children.size === 0;\n    }\n}\nexport class OutlineElement extends TreeElement {\n    constructor(id, parent, symbol) {\n        super();\n        this.id = id;\n        this.parent = parent;\n        this.symbol = symbol;\n        this.children = new Map();\n    }\n}\nexport class OutlineGroup extends TreeElement {\n    constructor(id, parent, label, order) {\n        super();\n        this.id = id;\n        this.parent = parent;\n        this.label = label;\n        this.order = order;\n        this.children = new Map();\n    }\n}\nexport class OutlineModel extends TreeElement {\n    static create(registry, textModel, token) {\n        const cts = new CancellationTokenSource(token);\n        const result = new OutlineModel(textModel.uri);\n        const provider = registry.ordered(textModel);\n        const promises = provider.map((provider, index) => {\n            var _a;\n            const id = TreeElement.findId(`provider_${index}`, result);\n            const group = new OutlineGroup(id, result, (_a = provider.displayName) !== null && _a !== void 0 ? _a : 'Unknown Outline Provider', index);\n            return Promise.resolve(provider.provideDocumentSymbols(textModel, cts.token)).then(result => {\n                for (const info of result || []) {\n                    OutlineModel._makeOutlineElement(info, group);\n                }\n                return group;\n            }, err => {\n                onUnexpectedExternalError(err);\n                return group;\n            }).then(group => {\n                if (!TreeElement.empty(group)) {\n                    result._groups.set(id, group);\n                }\n                else {\n                    group.remove();\n                }\n            });\n        });\n        const listener = registry.onDidChange(() => {\n            const newProvider = registry.ordered(textModel);\n            if (!equals(newProvider, provider)) {\n                cts.cancel();\n            }\n        });\n        return Promise.all(promises).then(() => {\n            if (cts.token.isCancellationRequested && !token.isCancellationRequested) {\n                return OutlineModel.create(registry, textModel, token);\n            }\n            else {\n                return result._compact();\n            }\n        }).finally(() => {\n            listener.dispose();\n        });\n    }\n    static _makeOutlineElement(info, container) {\n        const id = TreeElement.findId(info, container);\n        const res = new OutlineElement(id, container, info);\n        if (info.children) {\n            for (const childInfo of info.children) {\n                OutlineModel._makeOutlineElement(childInfo, res);\n            }\n        }\n        container.children.set(res.id, res);\n    }\n    constructor(uri) {\n        super();\n        this.uri = uri;\n        this.id = 'root';\n        this.parent = undefined;\n        this._groups = new Map();\n        this.children = new Map();\n        this.id = 'root';\n        this.parent = undefined;\n    }\n    _compact() {\n        let count = 0;\n        for (const [key, group] of this._groups) {\n            if (group.children.size === 0) { // empty\n                this._groups.delete(key);\n            }\n            else {\n                count += 1;\n            }\n        }\n        if (count !== 1) {\n            //\n            this.children = this._groups;\n        }\n        else {\n            // adopt all elements of the first group\n            const group = Iterable.first(this._groups.values());\n            for (const [, child] of group.children) {\n                child.parent = this;\n                this.children.set(child.id, child);\n            }\n        }\n        return this;\n    }\n    getTopLevelSymbols() {\n        const roots = [];\n        for (const child of this.children.values()) {\n            if (child instanceof OutlineElement) {\n                roots.push(child.symbol);\n            }\n            else {\n                roots.push(...Iterable.map(child.children.values(), child => child.symbol));\n            }\n        }\n        return roots.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\n    }\n    asListOfDocumentSymbols() {\n        const roots = this.getTopLevelSymbols();\n        const bucket = [];\n        OutlineModel._flattenDocumentSymbols(bucket, roots, '');\n        return bucket.sort((a, b) => Position.compare(Range.getStartPosition(a.range), Range.getStartPosition(b.range)) || Position.compare(Range.getEndPosition(b.range), Range.getEndPosition(a.range)));\n    }\n    static _flattenDocumentSymbols(bucket, entries, overrideContainerLabel) {\n        for (const entry of entries) {\n            bucket.push({\n                kind: entry.kind,\n                tags: entry.tags,\n                name: entry.name,\n                detail: entry.detail,\n                containerName: entry.containerName || overrideContainerLabel,\n                range: entry.range,\n                selectionRange: entry.selectionRange,\n                children: undefined, // we flatten it...\n            });\n            // Recurse over children\n            if (entry.children) {\n                OutlineModel._flattenDocumentSymbols(bucket, entry.children, entry.name);\n            }\n        }\n    }\n}\nexport const IOutlineModelService = createDecorator('IOutlineModelService');\nlet OutlineModelService = class OutlineModelService {\n    constructor(_languageFeaturesService, debounces, modelService) {\n        this._languageFeaturesService = _languageFeaturesService;\n        this._disposables = new DisposableStore();\n        this._cache = new LRUCache(10, 0.7);\n        this._debounceInformation = debounces.for(_languageFeaturesService.documentSymbolProvider, 'DocumentSymbols', { min: 350 });\n        // don't cache outline models longer than their text model\n        this._disposables.add(modelService.onModelRemoved(textModel => {\n            this._cache.delete(textModel.id);\n        }));\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n    getOrCreate(textModel, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const registry = this._languageFeaturesService.documentSymbolProvider;\n            const provider = registry.ordered(textModel);\n            let data = this._cache.get(textModel.id);\n            if (!data || data.versionId !== textModel.getVersionId() || !equals(data.provider, provider)) {\n                const source = new CancellationTokenSource();\n                data = {\n                    versionId: textModel.getVersionId(),\n                    provider,\n                    promiseCnt: 0,\n                    source,\n                    promise: OutlineModel.create(registry, textModel, source.token),\n                    model: undefined,\n                };\n                this._cache.set(textModel.id, data);\n                const now = Date.now();\n                data.promise.then(outlineModel => {\n                    data.model = outlineModel;\n                    this._debounceInformation.update(textModel, Date.now() - now);\n                }).catch(_err => {\n                    this._cache.delete(textModel.id);\n                });\n            }\n            if (data.model) {\n                // resolved -> return data\n                return data.model;\n            }\n            // increase usage counter\n            data.promiseCnt += 1;\n            const listener = token.onCancellationRequested(() => {\n                // last -> cancel provider request, remove cached promise\n                if (--data.promiseCnt === 0) {\n                    data.source.cancel();\n                    this._cache.delete(textModel.id);\n                }\n            });\n            try {\n                return yield data.promise;\n            }\n            finally {\n                listener.dispose();\n            }\n        });\n    }\n};\nOutlineModelService = __decorate([\n    __param(0, ILanguageFeaturesService),\n    __param(1, ILanguageFeatureDebounceService),\n    __param(2, IModelService)\n], OutlineModelService);\nexport { OutlineModelService };\nregisterSingleton(IOutlineModelService, OutlineModelService, 1 /* InstantiationType.Delayed */);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ResourceTextEdit } from '../../../browser/services/bulkEditService.js';\nexport function createCombinedWorkspaceEdit(uri, ranges, edit) {\n    var _a, _b;\n    return {\n        edits: [\n            ...ranges.map(range => new ResourceTextEdit(uri, typeof edit.insertText === 'string'\n                ? { range, text: edit.insertText, insertAsSnippet: false }\n                : { range, text: edit.insertText.snippet, insertAsSnippet: true })),\n            ...((_b = (_a = edit.additionalEdit) === null || _a === void 0 ? void 0 : _a.edits) !== null && _b !== void 0 ? _b : [])\n        ]\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addDisposableListener } from '../../../../base/browser/dom.js';\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, raceCancellation } from '../../../../base/common/async.js';\nimport { UriList, createStringDataTransferItem, matchesMimeType } from '../../../../base/common/dataTransfer.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Mimes } from '../../../../base/common/mime.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { withUndefinedAsNull } from '../../../../base/common/types.js';\nimport { generateUuid } from '../../../../base/common/uuid.js';\nimport { ClipboardEventUtils } from '../../../browser/controller/textAreaInput.js';\nimport { toExternalVSDataTransfer, toVSDataTransfer } from '../../../browser/dnd.js';\nimport { IBulkEditService } from '../../../browser/services/bulkEditService.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { createCombinedWorkspaceEdit } from './edit.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { InlineProgressManager } from '../../inlineProgress/browser/inlineProgress.js';\nimport { localize } from '../../../../nls.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IProgressService } from '../../../../platform/progress/common/progress.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { PostEditWidgetManager } from './postEditWidget.js';\nexport const changePasteTypeCommandId = 'editor.changePasteType';\nexport const pasteWidgetVisibleCtx = new RawContextKey('pasteWidgetVisible', false, localize('pasteWidgetVisible', \"Whether the paste widget is showing\"));\nconst vscodeClipboardMime = 'application/vnd.code.copyMetadata';\nlet CopyPasteController = class CopyPasteController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(CopyPasteController.ID);\n    }\n    constructor(editor, instantiationService, _bulkEditService, _clipboardService, _languageFeaturesService, _quickInputService, _progressService) {\n        super();\n        this._bulkEditService = _bulkEditService;\n        this._clipboardService = _clipboardService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._quickInputService = _quickInputService;\n        this._progressService = _progressService;\n        this._editor = editor;\n        const container = editor.getContainerDomNode();\n        this._register(addDisposableListener(container, 'copy', e => this.handleCopy(e)));\n        this._register(addDisposableListener(container, 'cut', e => this.handleCopy(e)));\n        this._register(addDisposableListener(container, 'paste', e => this.handlePaste(e), true));\n        this._pasteProgressManager = this._register(new InlineProgressManager('pasteIntoEditor', editor, instantiationService));\n        this._postPasteWidgetManager = this._register(instantiationService.createInstance(PostEditWidgetManager, 'pasteIntoEditor', editor, pasteWidgetVisibleCtx, { id: changePasteTypeCommandId, label: localize('postPasteWidgetTitle', \"Show paste options...\") }));\n    }\n    changePasteType() {\n        this._postPasteWidgetManager.tryShowSelector();\n    }\n    pasteAs(preferredId) {\n        this._editor.focus();\n        try {\n            this._pasteAsActionContext = { preferredId };\n            document.execCommand('paste');\n        }\n        finally {\n            this._pasteAsActionContext = undefined;\n        }\n    }\n    isPasteAsEnabled() {\n        return this._editor.getOption(83 /* EditorOption.pasteAs */).enabled\n            && !this._editor.getOption(89 /* EditorOption.readOnly */);\n    }\n    handleCopy(e) {\n        var _a, _b;\n        if (!this._editor.hasTextFocus()) {\n            return;\n        }\n        if (platform.isWeb) {\n            // Explicitly clear the web resources clipboard.\n            // This is needed because on web, the browser clipboard is faked out using an in-memory store.\n            // This means the resources clipboard is not properly updated when copying from the editor.\n            this._clipboardService.writeResources([]);\n        }\n        if (!e.clipboardData || !this.isPasteAsEnabled()) {\n            return;\n        }\n        const model = this._editor.getModel();\n        const selections = this._editor.getSelections();\n        if (!model || !(selections === null || selections === void 0 ? void 0 : selections.length)) {\n            return;\n        }\n        const enableEmptySelectionClipboard = this._editor.getOption(36 /* EditorOption.emptySelectionClipboard */);\n        let ranges = selections;\n        const wasFromEmptySelection = selections.length === 1 && selections[0].isEmpty();\n        if (wasFromEmptySelection) {\n            if (!enableEmptySelectionClipboard) {\n                return;\n            }\n            ranges = [new Range(ranges[0].startLineNumber, 1, ranges[0].startLineNumber, 1 + model.getLineLength(ranges[0].startLineNumber))];\n        }\n        const toCopy = (_a = this._editor._getViewModel()) === null || _a === void 0 ? void 0 : _a.getPlainTextToCopy(selections, enableEmptySelectionClipboard, platform.isWindows);\n        const multicursorText = Array.isArray(toCopy) ? toCopy : null;\n        const defaultPastePayload = {\n            multicursorText,\n            pasteOnNewLine: wasFromEmptySelection,\n            mode: null\n        };\n        const providers = this._languageFeaturesService.documentPasteEditProvider\n            .ordered(model)\n            .filter(x => !!x.prepareDocumentPaste);\n        if (!providers.length) {\n            this.setCopyMetadata(e.clipboardData, { defaultPastePayload });\n            return;\n        }\n        const dataTransfer = toVSDataTransfer(e.clipboardData);\n        const providerCopyMimeTypes = providers.flatMap(x => { var _a; return (_a = x.copyMimeTypes) !== null && _a !== void 0 ? _a : []; });\n        // Save off a handle pointing to data that VS Code maintains.\n        const handle = generateUuid();\n        this.setCopyMetadata(e.clipboardData, {\n            id: handle,\n            providerCopyMimeTypes,\n            defaultPastePayload\n        });\n        const promise = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n            const results = coalesce(yield Promise.all(providers.map((provider) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    return yield provider.prepareDocumentPaste(model, ranges, dataTransfer, token);\n                }\n                catch (err) {\n                    console.error(err);\n                    return undefined;\n                }\n            }))));\n            // Values from higher priority providers should overwrite values from lower priority ones.\n            // Reverse the array to so that the calls to `replace` below will do this\n            results.reverse();\n            for (const result of results) {\n                for (const [mime, value] of result) {\n                    dataTransfer.replace(mime, value);\n                }\n            }\n            return dataTransfer;\n        }));\n        (_b = this._currentCopyOperation) === null || _b === void 0 ? void 0 : _b.dataTransferPromise.cancel();\n        this._currentCopyOperation = { handle: handle, dataTransferPromise: promise };\n    }\n    handlePaste(e) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!e.clipboardData || !this._editor.hasTextFocus()) {\n                return;\n            }\n            (_a = this._currentPasteOperation) === null || _a === void 0 ? void 0 : _a.cancel();\n            this._currentPasteOperation = undefined;\n            const model = this._editor.getModel();\n            const selections = this._editor.getSelections();\n            if (!(selections === null || selections === void 0 ? void 0 : selections.length) || !model) {\n                return;\n            }\n            if (!this.isPasteAsEnabled()) {\n                return;\n            }\n            const metadata = this.fetchCopyMetadata(e);\n            const dataTransfer = toExternalVSDataTransfer(e.clipboardData);\n            dataTransfer.delete(vscodeClipboardMime);\n            const allPotentialMimeTypes = [\n                ...e.clipboardData.types,\n                ...(_b = metadata === null || metadata === void 0 ? void 0 : metadata.providerCopyMimeTypes) !== null && _b !== void 0 ? _b : [],\n                // TODO: always adds `uri-list` because this get set if there are resources in the system clipboard.\n                // However we can only check the system clipboard async. For this early check, just add it in.\n                // We filter providers again once we have the final dataTransfer we will use.\n                Mimes.uriList,\n            ];\n            const allProviders = this._languageFeaturesService.documentPasteEditProvider\n                .ordered(model)\n                .filter(provider => { var _a; return (_a = provider.pasteMimeTypes) === null || _a === void 0 ? void 0 : _a.some(type => matchesMimeType(type, allPotentialMimeTypes)); });\n            if (!allProviders.length) {\n                return;\n            }\n            // Prevent the editor's default paste handler from running.\n            // Note that after this point, we are fully responsible for handling paste.\n            // If we can't provider a paste for any reason, we need to explicitly delegate pasting back to the editor.\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            if (this._pasteAsActionContext) {\n                this.showPasteAsPick(this._pasteAsActionContext.preferredId, allProviders, selections, dataTransfer, metadata);\n            }\n            else {\n                this.doPasteInline(allProviders, selections, dataTransfer, metadata);\n            }\n        });\n    }\n    doPasteInline(allProviders, selections, dataTransfer, metadata) {\n        const p = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n            const editor = this._editor;\n            if (!editor.hasModel()) {\n                return;\n            }\n            const model = editor.getModel();\n            const tokenSource = new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */ | 2 /* CodeEditorStateFlag.Selection */, undefined, token);\n            try {\n                yield this.mergeInDataFromCopy(dataTransfer, metadata, tokenSource.token);\n                if (tokenSource.token.isCancellationRequested) {\n                    return;\n                }\n                // Filter out any providers the don't match the full data transfer we will send them.\n                const supportedProviders = allProviders.filter(provider => isSupportedPasteProvider(provider, dataTransfer));\n                if (!supportedProviders.length\n                    || (supportedProviders.length === 1 && supportedProviders[0].id === 'text') // Only our default text provider is active\n                ) {\n                    yield this.applyDefaultPasteHandler(dataTransfer, metadata, tokenSource.token);\n                    return;\n                }\n                const providerEdits = yield this.getPasteEdits(supportedProviders, dataTransfer, model, selections, tokenSource.token);\n                if (tokenSource.token.isCancellationRequested) {\n                    return;\n                }\n                // If the only edit returned is a text edit, use the default paste handler\n                if (providerEdits.length === 1 && providerEdits[0].id === 'text') {\n                    yield this.applyDefaultPasteHandler(dataTransfer, metadata, tokenSource.token);\n                    return;\n                }\n                if (providerEdits.length) {\n                    const canShowWidget = editor.getOption(83 /* EditorOption.pasteAs */).showPasteSelector === 'afterPaste';\n                    return this._postPasteWidgetManager.applyEditAndShowIfNeeded(selections, { activeEditIndex: 0, allEdits: providerEdits }, canShowWidget, tokenSource.token);\n                }\n                yield this.applyDefaultPasteHandler(dataTransfer, metadata, tokenSource.token);\n            }\n            finally {\n                tokenSource.dispose();\n                if (this._currentPasteOperation === p) {\n                    this._currentPasteOperation = undefined;\n                }\n            }\n        }));\n        this._pasteProgressManager.showWhile(selections[0].getEndPosition(), localize('pasteIntoEditorProgress', \"Running paste handlers. Click to cancel\"), p);\n        this._currentPasteOperation = p;\n    }\n    showPasteAsPick(preferredId, allProviders, selections, dataTransfer, metadata) {\n        const p = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n            const editor = this._editor;\n            if (!editor.hasModel()) {\n                return;\n            }\n            const model = editor.getModel();\n            const tokenSource = new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */ | 2 /* CodeEditorStateFlag.Selection */, undefined, token);\n            try {\n                yield this.mergeInDataFromCopy(dataTransfer, metadata, tokenSource.token);\n                if (tokenSource.token.isCancellationRequested) {\n                    return;\n                }\n                // Filter out any providers the don't match the full data transfer we will send them.\n                const supportedProviders = allProviders.filter(provider => isSupportedPasteProvider(provider, dataTransfer));\n                const providerEdits = yield this.getPasteEdits(supportedProviders, dataTransfer, model, selections, tokenSource.token);\n                if (tokenSource.token.isCancellationRequested) {\n                    return;\n                }\n                if (!providerEdits.length) {\n                    return;\n                }\n                let pickedEdit;\n                if (typeof preferredId === 'string') {\n                    // We are looking for a specific edit\n                    pickedEdit = providerEdits.find(edit => edit.id === preferredId);\n                }\n                else {\n                    const selected = yield this._quickInputService.pick(providerEdits.map((edit) => ({\n                        label: edit.label,\n                        description: edit.id,\n                        detail: edit.detail,\n                        edit,\n                    })), {\n                        placeHolder: localize('pasteAsPickerPlaceholder', \"Select Paste Action\"),\n                    });\n                    pickedEdit = selected === null || selected === void 0 ? void 0 : selected.edit;\n                }\n                if (!pickedEdit) {\n                    return;\n                }\n                const combinedWorkspaceEdit = createCombinedWorkspaceEdit(model.uri, selections, pickedEdit);\n                yield this._bulkEditService.apply(combinedWorkspaceEdit, { editor: this._editor });\n            }\n            finally {\n                tokenSource.dispose();\n                if (this._currentPasteOperation === p) {\n                    this._currentPasteOperation = undefined;\n                }\n            }\n        }));\n        this._progressService.withProgress({\n            location: 10 /* ProgressLocation.Window */,\n            title: localize('pasteAsProgress', \"Running paste handlers\"),\n        }, () => p);\n    }\n    setCopyMetadata(dataTransfer, metadata) {\n        dataTransfer.setData(vscodeClipboardMime, JSON.stringify(metadata));\n    }\n    fetchCopyMetadata(e) {\n        if (!e.clipboardData) {\n            return;\n        }\n        // Prefer using the clipboard data we saved off\n        const rawMetadata = e.clipboardData.getData(vscodeClipboardMime);\n        if (rawMetadata) {\n            try {\n                return JSON.parse(rawMetadata);\n            }\n            catch (_a) {\n                return undefined;\n            }\n        }\n        // Otherwise try to extract the generic text editor metadata\n        const [_, metadata] = ClipboardEventUtils.getTextData(e.clipboardData);\n        if (metadata) {\n            return {\n                defaultPastePayload: {\n                    mode: metadata.mode,\n                    multicursorText: withUndefinedAsNull(metadata.multicursorText),\n                    pasteOnNewLine: !!metadata.isFromEmptySelection,\n                },\n            };\n        }\n        return undefined;\n    }\n    mergeInDataFromCopy(dataTransfer, metadata, token) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((metadata === null || metadata === void 0 ? void 0 : metadata.id) && ((_a = this._currentCopyOperation) === null || _a === void 0 ? void 0 : _a.handle) === metadata.id) {\n                const toMergeDataTransfer = yield this._currentCopyOperation.dataTransferPromise;\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                for (const [key, value] of toMergeDataTransfer) {\n                    dataTransfer.replace(key, value);\n                }\n            }\n            if (!dataTransfer.has(Mimes.uriList)) {\n                const resources = yield this._clipboardService.readResources();\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                if (resources.length) {\n                    dataTransfer.append(Mimes.uriList, createStringDataTransferItem(UriList.create(resources)));\n                }\n            }\n        });\n    }\n    getPasteEdits(providers, dataTransfer, model, selections, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield raceCancellation(Promise.all(providers.map(provider => {\n                var _a;\n                try {\n                    return (_a = provider.provideDocumentPasteEdits) === null || _a === void 0 ? void 0 : _a.call(provider, model, selections, dataTransfer, token);\n                }\n                catch (err) {\n                    console.error(err);\n                    return undefined;\n                }\n            })).then(coalesce), token);\n            result === null || result === void 0 ? void 0 : result.sort((a, b) => b.priority - a.priority);\n            return result !== null && result !== void 0 ? result : [];\n        });\n    }\n    applyDefaultPasteHandler(dataTransfer, metadata, token) {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            const textDataTransfer = (_a = dataTransfer.get(Mimes.text)) !== null && _a !== void 0 ? _a : dataTransfer.get('text');\n            if (!textDataTransfer) {\n                return;\n            }\n            const text = yield textDataTransfer.asString();\n            if (token.isCancellationRequested) {\n                return;\n            }\n            const payload = {\n                text,\n                pasteOnNewLine: (_b = metadata === null || metadata === void 0 ? void 0 : metadata.defaultPastePayload.pasteOnNewLine) !== null && _b !== void 0 ? _b : false,\n                multicursorText: (_c = metadata === null || metadata === void 0 ? void 0 : metadata.defaultPastePayload.multicursorText) !== null && _c !== void 0 ? _c : null,\n                mode: null,\n            };\n            this._editor.trigger('keyboard', \"paste\" /* Handler.Paste */, payload);\n        });\n    }\n};\nCopyPasteController.ID = 'editor.contrib.copyPasteActionController';\nCopyPasteController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IBulkEditService),\n    __param(3, IClipboardService),\n    __param(4, ILanguageFeaturesService),\n    __param(5, IQuickInputService),\n    __param(6, IProgressService)\n], CopyPasteController);\nexport { CopyPasteController };\nfunction isSupportedPasteProvider(provider, dataTransfer) {\n    var _a;\n    return Boolean((_a = provider.pasteMimeTypes) === null || _a === void 0 ? void 0 : _a.some(type => dataTransfer.matches(type)));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { registerEditorFeature } from '../../../common/editorFeatures.js';\nimport { CopyPasteController, changePasteTypeCommandId, pasteWidgetVisibleCtx } from './copyPasteController.js';\nimport { DefaultPasteProvidersFeature } from './defaultProviders.js';\nimport * as nls from '../../../../nls.js';\nregisterEditorContribution(CopyPasteController.ID, CopyPasteController, 0 /* EditorContributionInstantiation.Eager */); // eager because it listens to events on the container dom node of the editor\nregisterEditorFeature(DefaultPasteProvidersFeature);\nregisterEditorCommand(new class extends EditorCommand {\n    constructor() {\n        super({\n            id: changePasteTypeCommandId,\n            precondition: pasteWidgetVisibleCtx,\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 89 /* KeyCode.Period */,\n            }\n        });\n    }\n    runEditorCommand(_accessor, editor, _args) {\n        var _a;\n        return (_a = CopyPasteController.get(editor)) === null || _a === void 0 ? void 0 : _a.changePasteType();\n    }\n});\nregisterEditorAction(class extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.pasteAs',\n            label: nls.localize('pasteAs', \"Paste As...\"),\n            alias: 'Paste As...',\n            precondition: undefined,\n            description: {\n                description: 'Paste as',\n                args: [{\n                        name: 'args',\n                        schema: {\n                            type: 'object',\n                            properties: {\n                                'id': {\n                                    type: 'string',\n                                    description: nls.localize('pasteAs.id', \"The id of the paste edit to try applying. If not provided, the editor will show a picker.\"),\n                                }\n                            },\n                        }\n                    }]\n            }\n        });\n    }\n    run(_accessor, editor, args) {\n        var _a;\n        const id = typeof (args === null || args === void 0 ? void 0 : args.id) === 'string' ? args.id : undefined;\n        return (_a = CopyPasteController.get(editor)) === null || _a === void 0 ? void 0 : _a.pasteAs(id);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { UriList } from '../../../../base/common/dataTransfer.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Mimes } from '../../../../base/common/mime.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { relativePath } from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { localize } from '../../../../nls.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nconst builtInLabel = localize('builtIn', 'Built-in');\nclass SimplePasteAndDropProvider {\n    provideDocumentPasteEdits(_model, _ranges, dataTransfer, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const edit = yield this.getEdit(dataTransfer, token);\n            return edit ? { id: this.id, insertText: edit.insertText, label: edit.label, detail: edit.detail, priority: edit.priority } : undefined;\n        });\n    }\n    provideDocumentOnDropEdits(_model, _position, dataTransfer, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const edit = yield this.getEdit(dataTransfer, token);\n            return edit ? { id: this.id, insertText: edit.insertText, label: edit.label, priority: edit.priority } : undefined;\n        });\n    }\n}\nclass DefaultTextProvider extends SimplePasteAndDropProvider {\n    constructor() {\n        super(...arguments);\n        this.id = 'text';\n        this.dropMimeTypes = [Mimes.text];\n        this.pasteMimeTypes = [Mimes.text];\n    }\n    getEdit(dataTransfer, _token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const textEntry = dataTransfer.get(Mimes.text);\n            if (!textEntry) {\n                return;\n            }\n            // Suppress if there's also a uriList entry.\n            // Typically the uri-list contains the same text as the text entry so showing both is confusing.\n            if (dataTransfer.has(Mimes.uriList)) {\n                return;\n            }\n            const insertText = yield textEntry.asString();\n            return {\n                id: this.id,\n                priority: 0,\n                label: localize('text.label', \"Insert Plain Text\"),\n                detail: builtInLabel,\n                insertText\n            };\n        });\n    }\n}\nclass PathProvider extends SimplePasteAndDropProvider {\n    constructor() {\n        super(...arguments);\n        this.id = 'uri';\n        this.dropMimeTypes = [Mimes.uriList];\n        this.pasteMimeTypes = [Mimes.uriList];\n    }\n    getEdit(dataTransfer, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const entries = yield extractUriList(dataTransfer);\n            if (!entries.length || token.isCancellationRequested) {\n                return;\n            }\n            let uriCount = 0;\n            const insertText = entries\n                .map(({ uri, originalText }) => {\n                if (uri.scheme === Schemas.file) {\n                    return uri.fsPath;\n                }\n                else {\n                    uriCount++;\n                    return originalText;\n                }\n            })\n                .join(' ');\n            let label;\n            if (uriCount > 0) {\n                // Dropping at least one generic uri (such as https) so use most generic label\n                label = entries.length > 1\n                    ? localize('defaultDropProvider.uriList.uris', \"Insert Uris\")\n                    : localize('defaultDropProvider.uriList.uri', \"Insert Uri\");\n            }\n            else {\n                // All the paths are file paths\n                label = entries.length > 1\n                    ? localize('defaultDropProvider.uriList.paths', \"Insert Paths\")\n                    : localize('defaultDropProvider.uriList.path', \"Insert Path\");\n            }\n            return {\n                id: this.id,\n                priority: 0,\n                insertText,\n                label,\n                detail: builtInLabel,\n            };\n        });\n    }\n}\nlet RelativePathProvider = class RelativePathProvider extends SimplePasteAndDropProvider {\n    constructor(_workspaceContextService) {\n        super();\n        this._workspaceContextService = _workspaceContextService;\n        this.id = 'relativePath';\n        this.dropMimeTypes = [Mimes.uriList];\n        this.pasteMimeTypes = [Mimes.uriList];\n    }\n    getEdit(dataTransfer, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const entries = yield extractUriList(dataTransfer);\n            if (!entries.length || token.isCancellationRequested) {\n                return;\n            }\n            const relativeUris = coalesce(entries.map(({ uri }) => {\n                const root = this._workspaceContextService.getWorkspaceFolder(uri);\n                return root ? relativePath(root.uri, uri) : undefined;\n            }));\n            if (!relativeUris.length) {\n                return;\n            }\n            return {\n                id: this.id,\n                priority: 0,\n                insertText: relativeUris.join(' '),\n                label: entries.length > 1\n                    ? localize('defaultDropProvider.uriList.relativePaths', \"Insert Relative Paths\")\n                    : localize('defaultDropProvider.uriList.relativePath', \"Insert Relative Path\"),\n                detail: builtInLabel,\n            };\n        });\n    }\n};\nRelativePathProvider = __decorate([\n    __param(0, IWorkspaceContextService)\n], RelativePathProvider);\nfunction extractUriList(dataTransfer) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const urlListEntry = dataTransfer.get(Mimes.uriList);\n        if (!urlListEntry) {\n            return [];\n        }\n        const strUriList = yield urlListEntry.asString();\n        const entries = [];\n        for (const entry of UriList.parse(strUriList)) {\n            try {\n                entries.push({ uri: URI.parse(entry), originalText: entry });\n            }\n            catch (_a) {\n                // noop\n            }\n        }\n        return entries;\n    });\n}\nlet DefaultDropProvidersFeature = class DefaultDropProvidersFeature extends Disposable {\n    constructor(languageFeaturesService, workspaceContextService) {\n        super();\n        this._register(languageFeaturesService.documentOnDropEditProvider.register('*', new DefaultTextProvider()));\n        this._register(languageFeaturesService.documentOnDropEditProvider.register('*', new PathProvider()));\n        this._register(languageFeaturesService.documentOnDropEditProvider.register('*', new RelativePathProvider(workspaceContextService)));\n    }\n};\nDefaultDropProvidersFeature = __decorate([\n    __param(0, ILanguageFeaturesService),\n    __param(1, IWorkspaceContextService)\n], DefaultDropProvidersFeature);\nexport { DefaultDropProvidersFeature };\nlet DefaultPasteProvidersFeature = class DefaultPasteProvidersFeature extends Disposable {\n    constructor(languageFeaturesService, workspaceContextService) {\n        super();\n        this._register(languageFeaturesService.documentPasteEditProvider.register('*', new DefaultTextProvider()));\n        this._register(languageFeaturesService.documentPasteEditProvider.register('*', new PathProvider()));\n        this._register(languageFeaturesService.documentPasteEditProvider.register('*', new RelativePathProvider(workspaceContextService)));\n    }\n};\nDefaultPasteProvidersFeature = __decorate([\n    __param(0, ILanguageFeaturesService),\n    __param(1, IWorkspaceContextService)\n], DefaultPasteProvidersFeature);\nexport { DefaultPasteProvidersFeature };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, raceCancellation } from '../../../../base/common/async.js';\nimport { VSDataTransfer } from '../../../../base/common/dataTransfer.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { toExternalVSDataTransfer } from '../../../browser/dnd.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { DraggedTreeItemsIdentifier } from '../../../common/services/treeViewsDnd.js';\nimport { ITreeViewsDnDService } from '../../../common/services/treeViewsDndService.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { InlineProgressManager } from '../../inlineProgress/browser/inlineProgress.js';\nimport { localize } from '../../../../nls.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { LocalSelectionTransfer } from '../../../../platform/dnd/browser/dnd.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { PostEditWidgetManager } from './postEditWidget.js';\nexport const changeDropTypeCommandId = 'editor.changeDropType';\nexport const dropWidgetVisibleCtx = new RawContextKey('dropWidgetVisible', false, localize('dropWidgetVisible', \"Whether the drop widget is showing\"));\nlet DropIntoEditorController = class DropIntoEditorController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(DropIntoEditorController.ID);\n    }\n    constructor(editor, instantiationService, _languageFeaturesService, _treeViewsDragAndDropService) {\n        super();\n        this._languageFeaturesService = _languageFeaturesService;\n        this._treeViewsDragAndDropService = _treeViewsDragAndDropService;\n        this.treeItemsTransfer = LocalSelectionTransfer.getInstance();\n        this._dropProgressManager = this._register(instantiationService.createInstance(InlineProgressManager, 'dropIntoEditor', editor));\n        this._postDropWidgetManager = this._register(instantiationService.createInstance(PostEditWidgetManager, 'dropIntoEditor', editor, dropWidgetVisibleCtx, { id: changeDropTypeCommandId, label: localize('postDropWidgetTitle', \"Show drop options...\") }));\n        this._register(editor.onDropIntoEditor(e => this.onDropIntoEditor(editor, e.position, e.event)));\n    }\n    changeDropType() {\n        this._postDropWidgetManager.tryShowSelector();\n    }\n    onDropIntoEditor(editor, position, dragEvent) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!dragEvent.dataTransfer || !editor.hasModel()) {\n                return;\n            }\n            (_a = this._currentOperation) === null || _a === void 0 ? void 0 : _a.cancel();\n            editor.focus();\n            editor.setPosition(position);\n            const p = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n                const tokenSource = new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */, undefined, token);\n                try {\n                    const ourDataTransfer = yield this.extractDataTransferData(dragEvent);\n                    if (ourDataTransfer.size === 0 || tokenSource.token.isCancellationRequested) {\n                        return;\n                    }\n                    const model = editor.getModel();\n                    if (!model) {\n                        return;\n                    }\n                    const providers = this._languageFeaturesService.documentOnDropEditProvider\n                        .ordered(model)\n                        .filter(provider => {\n                        if (!provider.dropMimeTypes) {\n                            // Keep all providers that don't specify mime types\n                            return true;\n                        }\n                        return provider.dropMimeTypes.some(mime => ourDataTransfer.matches(mime));\n                    });\n                    const edits = yield this.getDropEdits(providers, model, position, ourDataTransfer, tokenSource);\n                    if (tokenSource.token.isCancellationRequested) {\n                        return;\n                    }\n                    if (edits.length) {\n                        const canShowWidget = editor.getOption(35 /* EditorOption.dropIntoEditor */).showDropSelector === 'afterDrop';\n                        // Pass in the parent token here as it tracks cancelling the entire drop operation\n                        yield this._postDropWidgetManager.applyEditAndShowIfNeeded([Range.fromPositions(position)], { activeEditIndex: 0, allEdits: edits }, canShowWidget, token);\n                    }\n                }\n                finally {\n                    tokenSource.dispose();\n                    if (this._currentOperation === p) {\n                        this._currentOperation = undefined;\n                    }\n                }\n            }));\n            this._dropProgressManager.showWhile(position, localize('dropIntoEditorProgress', \"Running drop handlers. Click to cancel\"), p);\n            this._currentOperation = p;\n        });\n    }\n    getDropEdits(providers, model, position, dataTransfer, tokenSource) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const results = yield raceCancellation(Promise.all(providers.map(provider => {\n                return provider.provideDocumentOnDropEdits(model, position, dataTransfer, tokenSource.token);\n            })), tokenSource.token);\n            const edits = coalesce(results !== null && results !== void 0 ? results : []);\n            edits.sort((a, b) => b.priority - a.priority);\n            return edits;\n        });\n    }\n    extractDataTransferData(dragEvent) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!dragEvent.dataTransfer) {\n                return new VSDataTransfer();\n            }\n            const dataTransfer = toExternalVSDataTransfer(dragEvent.dataTransfer);\n            if (this.treeItemsTransfer.hasData(DraggedTreeItemsIdentifier.prototype)) {\n                const data = this.treeItemsTransfer.getData(DraggedTreeItemsIdentifier.prototype);\n                if (Array.isArray(data)) {\n                    for (const id of data) {\n                        const treeDataTransfer = yield this._treeViewsDragAndDropService.removeDragOperationTransfer(id.identifier);\n                        if (treeDataTransfer) {\n                            for (const [type, value] of treeDataTransfer) {\n                                dataTransfer.replace(type, value);\n                            }\n                        }\n                    }\n                }\n            }\n            return dataTransfer;\n        });\n    }\n};\nDropIntoEditorController.ID = 'editor.contrib.dropIntoEditorController';\nDropIntoEditorController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, ILanguageFeaturesService),\n    __param(3, ITreeViewsDnDService)\n], DropIntoEditorController);\nexport { DropIntoEditorController };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorCommand, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { registerEditorFeature } from '../../../common/editorFeatures.js';\nimport { DefaultDropProvidersFeature } from './defaultProviders.js';\nimport { DropIntoEditorController, changeDropTypeCommandId, dropWidgetVisibleCtx } from './dropIntoEditorController.js';\nregisterEditorContribution(DropIntoEditorController.ID, DropIntoEditorController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorCommand(new class extends EditorCommand {\n    constructor() {\n        super({\n            id: changeDropTypeCommandId,\n            precondition: dropWidgetVisibleCtx,\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 89 /* KeyCode.Period */,\n            }\n        });\n    }\n    runEditorCommand(_accessor, editor, _args) {\n        var _a;\n        (_a = DropIntoEditorController.get(editor)) === null || _a === void 0 ? void 0 : _a.changeDropType();\n    }\n});\nregisterEditorFeature(DefaultDropProvidersFeature);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Button } from '../../../../base/browser/ui/button/button.js';\nimport { toAction } from '../../../../base/common/actions.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport './postEditWidget.css';\nimport { IBulkEditService, ResourceTextEdit } from '../../../browser/services/bulkEditService.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nlet PostEditWidget = class PostEditWidget extends Disposable {\n    constructor(typeId, editor, visibleContext, showCommand, range, edits, onSelectNewEdit, _contextMenuService, contextKeyService, _keybindingService) {\n        super();\n        this.typeId = typeId;\n        this.editor = editor;\n        this.showCommand = showCommand;\n        this.range = range;\n        this.edits = edits;\n        this.onSelectNewEdit = onSelectNewEdit;\n        this._contextMenuService = _contextMenuService;\n        this._keybindingService = _keybindingService;\n        this.allowEditorOverflow = true;\n        this.suppressMouseDown = true;\n        this.create();\n        this.visibleContext = visibleContext.bindTo(contextKeyService);\n        this.visibleContext.set(true);\n        this._register(toDisposable(() => this.visibleContext.reset()));\n        this.editor.addContentWidget(this);\n        this.editor.layoutContentWidget(this);\n        this._register(toDisposable((() => this.editor.removeContentWidget(this))));\n        this._register(this.editor.onDidChangeCursorPosition(e => {\n            if (!range.containsPosition(e.position)) {\n                this.dispose();\n            }\n        }));\n        this._register(Event.runAndSubscribe(_keybindingService.onDidUpdateKeybindings, () => {\n            this._updateButtonTitle();\n        }));\n    }\n    _updateButtonTitle() {\n        var _a;\n        const binding = (_a = this._keybindingService.lookupKeybinding(this.showCommand.id)) === null || _a === void 0 ? void 0 : _a.getLabel();\n        this.button.element.title = this.showCommand.label + (binding ? ` (${binding})` : '');\n    }\n    create() {\n        this.domNode = dom.$('.post-edit-widget');\n        this.button = this._register(new Button(this.domNode, {\n            supportIcons: true,\n        }));\n        this.button.label = '$(insert)';\n        this._register(dom.addDisposableListener(this.domNode, dom.EventType.CLICK, () => this.showSelector()));\n    }\n    getId() {\n        return PostEditWidget.baseId + '.' + this.typeId;\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    getPosition() {\n        return {\n            position: this.range.getEndPosition(),\n            preference: [2 /* ContentWidgetPositionPreference.BELOW */]\n        };\n    }\n    showSelector() {\n        this._contextMenuService.showContextMenu({\n            getAnchor: () => {\n                const pos = dom.getDomNodePagePosition(this.button.element);\n                return { x: pos.left + pos.width, y: pos.top + pos.height };\n            },\n            getActions: () => {\n                return this.edits.allEdits.map((edit, i) => toAction({\n                    id: '',\n                    label: edit.label,\n                    checked: i === this.edits.activeEditIndex,\n                    run: () => {\n                        if (i !== this.edits.activeEditIndex) {\n                            return this.onSelectNewEdit(i);\n                        }\n                    },\n                }));\n            }\n        });\n    }\n};\nPostEditWidget.baseId = 'editor.widget.postEditWidget';\nPostEditWidget = __decorate([\n    __param(7, IContextMenuService),\n    __param(8, IContextKeyService),\n    __param(9, IKeybindingService)\n], PostEditWidget);\nlet PostEditWidgetManager = class PostEditWidgetManager extends Disposable {\n    constructor(_id, _editor, _visibleContext, _showCommand, _instantiationService, _bulkEditService) {\n        super();\n        this._id = _id;\n        this._editor = _editor;\n        this._visibleContext = _visibleContext;\n        this._showCommand = _showCommand;\n        this._instantiationService = _instantiationService;\n        this._bulkEditService = _bulkEditService;\n        this._currentWidget = this._register(new MutableDisposable());\n        this._register(Event.any(_editor.onDidChangeModel, _editor.onDidChangeModelContent)(() => this.clear()));\n    }\n    applyEditAndShowIfNeeded(ranges, edits, canShowWidget, token) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const model = this._editor.getModel();\n            if (!model || !ranges.length) {\n                return;\n            }\n            const edit = edits.allEdits[edits.activeEditIndex];\n            if (!edit) {\n                return;\n            }\n            let insertTextEdit = [];\n            if (typeof edit.insertText === 'string' ? edit.insertText === '' : edit.insertText.snippet === '') {\n                insertTextEdit = [];\n            }\n            else {\n                insertTextEdit = ranges.map(range => new ResourceTextEdit(model.uri, typeof edit.insertText === 'string'\n                    ? { range, text: edit.insertText, insertAsSnippet: false }\n                    : { range, text: edit.insertText.snippet, insertAsSnippet: true }));\n            }\n            const allEdits = [\n                ...insertTextEdit,\n                ...((_b = (_a = edit.additionalEdit) === null || _a === void 0 ? void 0 : _a.edits) !== null && _b !== void 0 ? _b : [])\n            ];\n            const combinedWorkspaceEdit = {\n                edits: allEdits\n            };\n            // Use a decoration to track edits around the trigger range\n            const primaryRange = ranges[0];\n            const editTrackingDecoration = model.deltaDecorations([], [{\n                    range: primaryRange,\n                    options: { description: 'paste-line-suffix', stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */ }\n                }]);\n            let editResult;\n            let editRange;\n            try {\n                editResult = yield this._bulkEditService.apply(combinedWorkspaceEdit, { editor: this._editor, token });\n                editRange = model.getDecorationRange(editTrackingDecoration[0]);\n            }\n            finally {\n                model.deltaDecorations(editTrackingDecoration, []);\n            }\n            if (canShowWidget && editResult.isApplied && edits.allEdits.length > 1) {\n                this.show(editRange !== null && editRange !== void 0 ? editRange : primaryRange, edits, (newEditIndex) => __awaiter(this, void 0, void 0, function* () {\n                    const model = this._editor.getModel();\n                    if (!model) {\n                        return;\n                    }\n                    yield model.undo();\n                    this.applyEditAndShowIfNeeded(ranges, { activeEditIndex: newEditIndex, allEdits: edits.allEdits }, canShowWidget, token);\n                }));\n            }\n        });\n    }\n    show(range, edits, onDidSelectEdit) {\n        this.clear();\n        if (this._editor.hasModel()) {\n            this._currentWidget.value = this._instantiationService.createInstance(PostEditWidget, this._id, this._editor, this._visibleContext, this._showCommand, range, edits, onDidSelectEdit);\n        }\n    }\n    clear() {\n        this._currentWidget.clear();\n    }\n    tryShowSelector() {\n        var _a;\n        (_a = this._currentWidget.value) === null || _a === void 0 ? void 0 : _a.showSelector();\n    }\n};\nPostEditWidgetManager = __decorate([\n    __param(4, IInstantiationService),\n    __param(5, IBulkEditService)\n], PostEditWidgetManager);\nexport { PostEditWidgetManager };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorCommand, registerEditorCommand } from '../../../browser/editorExtensions.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { LinkedList } from '../../../../base/common/linkedList.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { localize } from '../../../../nls.js';\nconst IEditorCancellationTokens = createDecorator('IEditorCancelService');\nconst ctxCancellableOperation = new RawContextKey('cancellableOperation', false, localize('cancellableOperation', 'Whether the editor runs a cancellable operation, e.g. like \\'Peek References\\''));\nregisterSingleton(IEditorCancellationTokens, class {\n    constructor() {\n        this._tokens = new WeakMap();\n    }\n    add(editor, cts) {\n        let data = this._tokens.get(editor);\n        if (!data) {\n            data = editor.invokeWithinContext(accessor => {\n                const key = ctxCancellableOperation.bindTo(accessor.get(IContextKeyService));\n                const tokens = new LinkedList();\n                return { key, tokens };\n            });\n            this._tokens.set(editor, data);\n        }\n        let removeFn;\n        data.key.set(true);\n        removeFn = data.tokens.push(cts);\n        return () => {\n            // remove w/o cancellation\n            if (removeFn) {\n                removeFn();\n                data.key.set(!data.tokens.isEmpty());\n                removeFn = undefined;\n            }\n        };\n    }\n    cancel(editor) {\n        const data = this._tokens.get(editor);\n        if (!data) {\n            return;\n        }\n        // remove with cancellation\n        const cts = data.tokens.pop();\n        if (cts) {\n            cts.cancel();\n            data.key.set(!data.tokens.isEmpty());\n        }\n    }\n}, 1 /* InstantiationType.Delayed */);\nexport class EditorKeybindingCancellationTokenSource extends CancellationTokenSource {\n    constructor(editor, parent) {\n        super(parent);\n        this.editor = editor;\n        this._unregister = editor.invokeWithinContext(accessor => accessor.get(IEditorCancellationTokens).add(editor, this));\n    }\n    dispose() {\n        this._unregister();\n        super.dispose();\n    }\n}\nregisterEditorCommand(new class extends EditorCommand {\n    constructor() {\n        super({\n            id: 'editor.cancelOperation',\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */,\n                primary: 9 /* KeyCode.Escape */\n            },\n            precondition: ctxCancellableOperation\n        });\n    }\n    runEditorCommand(accessor, editor) {\n        accessor.get(IEditorCancellationTokens).cancel(editor);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../../base/common/strings.js';\nimport { Range } from '../../../common/core/range.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { EditorKeybindingCancellationTokenSource } from './keybindingCancellation.js';\nexport class EditorState {\n    constructor(editor, flags) {\n        this.flags = flags;\n        if ((this.flags & 1 /* CodeEditorStateFlag.Value */) !== 0) {\n            const model = editor.getModel();\n            this.modelVersionId = model ? strings.format('{0}#{1}', model.uri.toString(), model.getVersionId()) : null;\n        }\n        else {\n            this.modelVersionId = null;\n        }\n        if ((this.flags & 4 /* CodeEditorStateFlag.Position */) !== 0) {\n            this.position = editor.getPosition();\n        }\n        else {\n            this.position = null;\n        }\n        if ((this.flags & 2 /* CodeEditorStateFlag.Selection */) !== 0) {\n            this.selection = editor.getSelection();\n        }\n        else {\n            this.selection = null;\n        }\n        if ((this.flags & 8 /* CodeEditorStateFlag.Scroll */) !== 0) {\n            this.scrollLeft = editor.getScrollLeft();\n            this.scrollTop = editor.getScrollTop();\n        }\n        else {\n            this.scrollLeft = -1;\n            this.scrollTop = -1;\n        }\n    }\n    _equals(other) {\n        if (!(other instanceof EditorState)) {\n            return false;\n        }\n        const state = other;\n        if (this.modelVersionId !== state.modelVersionId) {\n            return false;\n        }\n        if (this.scrollLeft !== state.scrollLeft || this.scrollTop !== state.scrollTop) {\n            return false;\n        }\n        if (!this.position && state.position || this.position && !state.position || this.position && state.position && !this.position.equals(state.position)) {\n            return false;\n        }\n        if (!this.selection && state.selection || this.selection && !state.selection || this.selection && state.selection && !this.selection.equalsRange(state.selection)) {\n            return false;\n        }\n        return true;\n    }\n    validate(editor) {\n        return this._equals(new EditorState(editor, this.flags));\n    }\n}\n/**\n * A cancellation token source that cancels when the editor changes as expressed\n * by the provided flags\n * @param range If provided, changes in position and selection within this range will not trigger cancellation\n */\nexport class EditorStateCancellationTokenSource extends EditorKeybindingCancellationTokenSource {\n    constructor(editor, flags, range, parent) {\n        super(editor, parent);\n        this._listener = new DisposableStore();\n        if (flags & 4 /* CodeEditorStateFlag.Position */) {\n            this._listener.add(editor.onDidChangeCursorPosition(e => {\n                if (!range || !Range.containsPosition(range, e.position)) {\n                    this.cancel();\n                }\n            }));\n        }\n        if (flags & 2 /* CodeEditorStateFlag.Selection */) {\n            this._listener.add(editor.onDidChangeCursorSelection(e => {\n                if (!range || !Range.containsRange(range, e.selection)) {\n                    this.cancel();\n                }\n            }));\n        }\n        if (flags & 8 /* CodeEditorStateFlag.Scroll */) {\n            this._listener.add(editor.onDidScrollChange(_ => this.cancel()));\n        }\n        if (flags & 1 /* CodeEditorStateFlag.Value */) {\n            this._listener.add(editor.onDidChangeModel(_ => this.cancel()));\n            this._listener.add(editor.onDidChangeModelContent(_ => this.cancel()));\n        }\n    }\n    dispose() {\n        this._listener.dispose();\n        super.dispose();\n    }\n}\n/**\n * A cancellation token source that cancels when the provided model changes\n */\nexport class TextModelCancellationTokenSource extends CancellationTokenSource {\n    constructor(model, parent) {\n        super(parent);\n        this._listener = model.onDidChangeContent(() => this.cancel());\n    }\n    dispose() {\n        this._listener.dispose();\n        super.dispose();\n    }\n}\n"],"names":["DragAndDropCommand","selection","targetPosition","copy","_classCallCheck","this","targetSelection","_createClass","key","value","model","builder","text","getValueInRange","addEditOperation","Range","lineNumber","column","containsPosition","getEndPosition","equals","getStartPosition","Selection","endLineNumber","startLineNumber","endColumn","startColumn","helper","hasTriggerModifier","e","isMacintosh","altKey","ctrlKey","DragAndDropController","_Disposable","_inherits","_super","_createSuper","editor","_this","call","_editor","_dndDecorationIds","createDecorationsCollection","_register","onMouseDown","_onEditorMouseDown","onMouseUp","_onEditorMouseUp","onMouseDrag","_onEditorMouseDrag","onMouseDrop","_onEditorMouseDrop","onMouseDropCanceled","_onEditorMouseDropCanceled","onKeyDown","onEditorKeyDown","onKeyUp","onEditorKeyUp","onDidBlurEditorWidget","onEditorBlur","onDidBlurEditorText","_mouseDown","_modifierPressed","_dragSelection","_removeDecoration","getOption","updateOptions","mouseStyle","keyCode","TRIGGER_KEY_VALUE","mouseEvent","target","possibleSelections","getSelections","filter","position","length","event","showAt","_hitContent","_hitMargin","newCursorPosition","Position","newSelections","shiftKey","primarySelection","getSelection","selectionStartLineNumber","selectionStartColumn","map","setSelections","pushUndoStop","executeCommand","ID","set","range","options","_DECORATION_OPTIONS","revealPosition","clear","type","_get","_getPrototypeOf","prototype","Disposable","ModelDecorationOptions","register","description","className","registerEditorContribution","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","CommandsRegistry","registerCommand","accessor","_len","arguments","args","Array","_key","_regeneratorRuntime","mark","_callee","resource","outlineService","modelService","reference","wrap","_context","prev","assertType","URI","isUri","get","IOutlineModelService","ITextModelService","createModelReference","sent","getOrCreate","object","textEditorModel","CancellationToken","None","abrupt","getTopLevelSymbols","dispose","finish","stop","__decorate","decorators","desc","d","c","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","TreeElement","_a","parent","children","delete","id","candidate","container","candidateId","concat","name","undefined","element","size","OutlineElement","_TreeElement","symbol","Map","OutlineGroup","_TreeElement2","_super2","label","order","_this2","OutlineModel","_TreeElement3","_super3","uri","_this3","_groups","_step","count","_iterator","_createForOfIteratorHelper","s","n","_step$value","_slicedToArray","err","f","_step2","group","Iterable","first","values","_iterator2","child","_step3","roots","_iterator3","push","_toConsumableArray","sort","a","b","compareRangesUsingStarts","bucket","_flattenDocumentSymbols","compare","registry","textModel","token","cts","CancellationTokenSource","provider","ordered","promises","index","findId","displayName","provideDocumentSymbols","_step4","_iterator4","info","_makeOutlineElement","onUnexpectedExternalError","empty","remove","listener","onDidChange","newProvider","cancel","all","isCancellationRequested","create","_compact","finally","res","_step5","_iterator5","childInfo","entries","overrideContainerLabel","_step6","_iterator6","entry","kind","tags","detail","containerName","selectionRange","createDecorator","OutlineModelService","_languageFeaturesService","debounces","_this4","_disposables","DisposableStore","_cache","LRUCache","_debounceInformation","for","documentSymbolProvider","min","add","onModelRemoved","data","source","now","_this5","versionId","getVersionId","promiseCnt","promise","Date","outlineModel","update","catch","_err","onCancellationRequested","ILanguageFeaturesService","ILanguageFeatureDebounceService","IModelService","registerSingleton","createCombinedWorkspaceEdit","ranges","edit","_b","edits","ResourceTextEdit","insertText","insertAsSnippet","snippet","additionalEdit","changePasteTypeCommandId","pasteWidgetVisibleCtx","RawContextKey","localize","vscodeClipboardMime","CopyPasteController","instantiationService","_bulkEditService","_clipboardService","_quickInputService","_progressService","getContainerDomNode","addDisposableListener","handleCopy","handlePaste","_pasteProgressManager","InlineProgressManager","_postPasteWidgetManager","createInstance","PostEditWidgetManager","tryShowSelector","preferredId","focus","_pasteAsActionContext","document","execCommand","enabled","hasTextFocus","platform","writeResources","clipboardData","isPasteAsEnabled","getModel","selections","enableEmptySelectionClipboard","wasFromEmptySelection","isEmpty","getLineLength","toCopy","_getViewModel","getPlainTextToCopy","defaultPastePayload","multicursorText","isArray","pasteOnNewLine","mode","providers","documentPasteEditProvider","x","prepareDocumentPaste","dataTransfer","toVSDataTransfer","providerCopyMimeTypes","flatMap","copyMimeTypes","handle","generateUuid","setCopyMetadata","createCancelablePromise","_callee2","results","_step2$value","mime","_context2","t0","coalesce","console","error","t1","reverse","replace","_currentCopyOperation","dataTransferPromise","_callee3","metadata","allPotentialMimeTypes","allProviders","_context3","_currentPasteOperation","fetchCopyMetadata","toExternalVSDataTransfer","types","Mimes","uriList","pasteMimeTypes","some","matchesMimeType","preventDefault","stopImmediatePropagation","showPasteAsPick","doPasteInline","p","_callee4","tokenSource","supportedProviders","providerEdits","canShowWidget","_context4","hasModel","EditorStateCancellationTokenSource","mergeInDataFromCopy","isSupportedPasteProvider","applyDefaultPasteHandler","getPasteEdits","showPasteSelector","applyEditAndShowIfNeeded","activeEditIndex","allEdits","showWhile","_callee5","pickedEdit","selected","combinedWorkspaceEdit","_context5","find","pick","placeHolder","withProgress","location","title","setData","JSON","stringify","rawMetadata","getData","parse","_ClipboardEventUtils$","ClipboardEventUtils","getTextData","_ClipboardEventUtils$2","withUndefinedAsNull","isFromEmptySelection","_callee6","toMergeDataTransfer","_step3$value","resources","_context6","has","readResources","append","createStringDataTransferItem","UriList","_callee7","_context7","raceCancellation","provideDocumentPasteEdits","priority","_c","_callee8","textDataTransfer","payload","_context8","asString","trigger","getContribution","Boolean","matches","IInstantiationService","IBulkEditService","IClipboardService","IQuickInputService","IProgressService","registerEditorFeature","DefaultPasteProvidersFeature","registerEditorCommand","_EditorCommand","_class","precondition","kbOpts","weight","primary","_accessor","_args","changePasteType","EditorCommand","registerEditorAction","_EditorAction","_class2","nls","alias","schema","properties","pasteAs","EditorAction","builtInLabel","SimplePasteAndDropProvider","_model","_ranges","getEdit","_position","DefaultTextProvider","_SimplePasteAndDropPr","dropMimeTypes","_token","textEntry","PathProvider","_SimplePasteAndDropPr2","uriCount","extractUriList","_ref","originalText","scheme","Schemas","file","fsPath","join","RelativePathProvider","_SimplePasteAndDropPr3","_workspaceContextService","relativeUris","_ref2","root","getWorkspaceFolder","relativePath","urlListEntry","strUriList","IWorkspaceContextService","DefaultDropProvidersFeature","_super4","languageFeaturesService","workspaceContextService","documentOnDropEditProvider","_Disposable2","_super5","_this6","changeDropTypeCommandId","dropWidgetVisibleCtx","DropIntoEditorController","_treeViewsDragAndDropService","treeItemsTransfer","LocalSelectionTransfer","getInstance","_dropProgressManager","_postDropWidgetManager","onDropIntoEditor","dragEvent","_currentOperation","setPosition","ourDataTransfer","extractDataTransferData","getDropEdits","showDropSelector","fromPositions","provideDocumentOnDropEdits","treeDataTransfer","VSDataTransfer","hasData","DraggedTreeItemsIdentifier","removeDragOperationTransfer","identifier","ITreeViewsDnDService","changeDropType","PostEditWidget","typeId","visibleContext","showCommand","onSelectNewEdit","_contextMenuService","contextKeyService","_keybindingService","allowEditorOverflow","suppressMouseDown","bindTo","toDisposable","reset","addContentWidget","_assertThisInitialized","layoutContentWidget","removeContentWidget","onDidChangeCursorPosition","Event","runAndSubscribe","onDidUpdateKeybindings","_updateButtonTitle","binding","lookupKeybinding","getLabel","button","domNode","dom","$","Button","supportIcons","EventType","CLICK","showSelector","baseId","preference","showContextMenu","getAnchor","pos","getDomNodePagePosition","left","width","y","top","height","getActions","toAction","checked","run","IContextMenuService","IContextKeyService","IKeybindingService","_id","_visibleContext","_showCommand","_instantiationService","_currentWidget","MutableDisposable","any","onDidChangeModel","onDidChangeModelContent","insertTextEdit","primaryRange","editTrackingDecoration","editResult","editRange","deltaDecorations","stickiness","getDecorationRange","isApplied","show","newEditIndex","undo","onDidSelectEdit","IEditorCancellationTokens","ctxCancellableOperation","_tokens","WeakMap","removeFn","invokeWithinContext","tokens","LinkedList","pop","EditorKeybindingCancellationTokenSource","_CancellationTokenSou","_unregister","EditorState","flags","modelVersionId","strings","toString","getPosition","scrollLeft","getScrollLeft","scrollTop","getScrollTop","other","state","equalsRange","_equals","_EditorKeybindingCanc","_listener","onDidChangeCursorSelection","containsRange","onDidScrollChange","_","TextModelCancellationTokenSource","onDidChangeContent"],"sourceRoot":""}