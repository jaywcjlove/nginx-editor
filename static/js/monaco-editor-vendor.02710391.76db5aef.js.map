{"version":3,"file":"static/js/monaco-editor-vendor.02710391.76db5aef.js","mappings":"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","sources":["../../node_modules/monaco-editor/esm/vs/editor/contrib/sectionHeaders/browser/sectionHeaders.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/semanticTokens/browser/documentSemanticTokens.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/semanticTokens/browser/viewportSemanticTokens.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/semanticTokens/common/getSemanticTokens.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/semanticTokens/common/semanticTokensConfig.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/smartSelect/browser/bracketSelections.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/smartSelect/browser/wordSelections.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/smartSelect/browser/smartSelect.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/snippet/browser/snippetController2.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/snippet/browser/snippetParser.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/snippet/browser/snippetVariables.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/snippet/browser/snippetSession.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/stickyScroll/browser/stickyScrollWidget.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/stickyScroll/browser/stickyScrollElement.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/stickyScroll/browser/stickyScrollModelProvider.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/stickyScroll/browser/stickyScrollProvider.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/stickyScroll/browser/stickyScrollController.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/stickyScroll/browser/stickyScrollActions.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/stickyScroll/browser/stickyScrollContribution.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/completionModel.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/suggest.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/wordContextKey.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestAlternatives.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestCommitCharacters.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestOvertypingCapturer.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestWidgetStatus.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestWidgetDetails.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestWidgetRenderer.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestWidget.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestController.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestInlineCompletions.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestMemory.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestModel.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/wordDistance.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/symbolIcons/browser/symbolIcons.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nlet SectionHeaderDetector = class SectionHeaderDetector extends Disposable {\n    constructor(editor, languageConfigurationService, editorWorkerService) {\n        super();\n        this.editor = editor;\n        this.languageConfigurationService = languageConfigurationService;\n        this.editorWorkerService = editorWorkerService;\n        this.decorations = this.editor.createDecorationsCollection();\n        this.options = this.createOptions(editor.getOption(73 /* EditorOption.minimap */));\n        this.computePromise = null;\n        this.currentOccurrences = {};\n        this._register(editor.onDidChangeModel((e) => {\n            this.currentOccurrences = {};\n            this.options = this.createOptions(editor.getOption(73 /* EditorOption.minimap */));\n            this.stop();\n            this.computeSectionHeaders.schedule(0);\n        }));\n        this._register(editor.onDidChangeModelLanguage((e) => {\n            this.currentOccurrences = {};\n            this.options = this.createOptions(editor.getOption(73 /* EditorOption.minimap */));\n            this.stop();\n            this.computeSectionHeaders.schedule(0);\n        }));\n        this._register(languageConfigurationService.onDidChange((e) => {\n            var _a;\n            const editorLanguageId = (_a = this.editor.getModel()) === null || _a === void 0 ? void 0 : _a.getLanguageId();\n            if (editorLanguageId && e.affects(editorLanguageId)) {\n                this.currentOccurrences = {};\n                this.options = this.createOptions(editor.getOption(73 /* EditorOption.minimap */));\n                this.stop();\n                this.computeSectionHeaders.schedule(0);\n            }\n        }));\n        this._register(editor.onDidChangeConfiguration(e => {\n            if (this.options && !e.hasChanged(73 /* EditorOption.minimap */)) {\n                return;\n            }\n            this.options = this.createOptions(editor.getOption(73 /* EditorOption.minimap */));\n            // Remove any links (for the getting disabled case)\n            this.updateDecorations([]);\n            // Stop any computation (for the getting disabled case)\n            this.stop();\n            // Start computing (for the getting enabled case)\n            this.computeSectionHeaders.schedule(0);\n        }));\n        this._register(this.editor.onDidChangeModelContent(e => {\n            this.computeSectionHeaders.schedule();\n        }));\n        this._register(editor.onDidChangeModelTokens((e) => {\n            if (!this.computeSectionHeaders.isScheduled()) {\n                this.computeSectionHeaders.schedule(1000);\n            }\n        }));\n        this.computeSectionHeaders = this._register(new RunOnceScheduler(() => {\n            this.findSectionHeaders();\n        }, 250));\n        this.computeSectionHeaders.schedule(0);\n    }\n    createOptions(minimap) {\n        if (!minimap || !this.editor.hasModel()) {\n            return undefined;\n        }\n        const languageId = this.editor.getModel().getLanguageId();\n        if (!languageId) {\n            return undefined;\n        }\n        const commentsConfiguration = this.languageConfigurationService.getLanguageConfiguration(languageId).comments;\n        const foldingRules = this.languageConfigurationService.getLanguageConfiguration(languageId).foldingRules;\n        if (!commentsConfiguration && !(foldingRules === null || foldingRules === void 0 ? void 0 : foldingRules.markers)) {\n            return undefined;\n        }\n        return {\n            foldingRules,\n            findMarkSectionHeaders: minimap.showMarkSectionHeaders,\n            findRegionSectionHeaders: minimap.showRegionSectionHeaders,\n        };\n    }\n    findSectionHeaders() {\n        var _a, _b;\n        if (!this.editor.hasModel()\n            || (!((_a = this.options) === null || _a === void 0 ? void 0 : _a.findMarkSectionHeaders) && !((_b = this.options) === null || _b === void 0 ? void 0 : _b.findRegionSectionHeaders))) {\n            return;\n        }\n        const model = this.editor.getModel();\n        if (model.isDisposed() || model.isTooLargeForSyncing()) {\n            return;\n        }\n        const modelVersionId = model.getVersionId();\n        this.editorWorkerService.findSectionHeaders(model.uri, this.options)\n            .then((sectionHeaders) => {\n            if (model.isDisposed() || model.getVersionId() !== modelVersionId) {\n                // model changed in the meantime\n                return;\n            }\n            this.updateDecorations(sectionHeaders);\n        });\n    }\n    updateDecorations(sectionHeaders) {\n        const model = this.editor.getModel();\n        if (model) {\n            // Remove all section headers that should be in comments and are not in comments\n            sectionHeaders = sectionHeaders.filter((sectionHeader) => {\n                if (!sectionHeader.shouldBeInComments) {\n                    return true;\n                }\n                const validRange = model.validateRange(sectionHeader.range);\n                const tokens = model.tokenization.getLineTokens(validRange.startLineNumber);\n                const idx = tokens.findTokenIndexAtOffset(validRange.startColumn - 1);\n                const tokenType = tokens.getStandardTokenType(idx);\n                const languageId = tokens.getLanguageId(idx);\n                return (languageId === model.getLanguageId() && tokenType === 1 /* StandardTokenType.Comment */);\n            });\n        }\n        const oldDecorations = Object.values(this.currentOccurrences).map(occurrence => occurrence.decorationId);\n        const newDecorations = sectionHeaders.map(sectionHeader => decoration(sectionHeader));\n        this.editor.changeDecorations((changeAccessor) => {\n            const decorations = changeAccessor.deltaDecorations(oldDecorations, newDecorations);\n            this.currentOccurrences = {};\n            for (let i = 0, len = decorations.length; i < len; i++) {\n                const occurrence = { sectionHeader: sectionHeaders[i], decorationId: decorations[i] };\n                this.currentOccurrences[occurrence.decorationId] = occurrence;\n            }\n        });\n    }\n    stop() {\n        this.computeSectionHeaders.cancel();\n        if (this.computePromise) {\n            this.computePromise.cancel();\n            this.computePromise = null;\n        }\n    }\n    dispose() {\n        super.dispose();\n        this.stop();\n        this.decorations.clear();\n    }\n};\nSectionHeaderDetector.ID = 'editor.sectionHeaderDetector';\nSectionHeaderDetector = __decorate([\n    __param(1, ILanguageConfigurationService),\n    __param(2, IEditorWorkerService)\n], SectionHeaderDetector);\nexport { SectionHeaderDetector };\nfunction decoration(sectionHeader) {\n    return {\n        range: sectionHeader.range,\n        options: ModelDecorationOptions.createDynamic({\n            description: 'section-header',\n            stickiness: 3 /* TrackedRangeStickiness.GrowsOnlyWhenTypingAfter */,\n            collapseOnReplaceEdit: true,\n            minimap: {\n                color: undefined,\n                position: 1 /* MinimapPosition.Inline */,\n                sectionHeaderStyle: sectionHeader.hasSeparatorLine ? 2 /* MinimapSectionHeaderStyle.Underlined */ : 1 /* MinimapSectionHeaderStyle.Normal */,\n                sectionHeaderText: sectionHeader.text,\n            },\n        })\n    };\n}\nregisterEditorContribution(SectionHeaderDetector.ID, SectionHeaderDetector, 1 /* EditorContributionInstantiation.AfterFirstRender */);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar ModelSemanticColoring_1;\nimport { Disposable, dispose } from '../../../../base/common/lifecycle.js';\nimport * as errors from '../../../../base/common/errors.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { toMultilineTokens2 } from '../../../common/services/semanticTokensProviderStyling.js';\nimport { getDocumentSemanticTokens, hasDocumentSemanticTokensProvider, isSemanticTokens, isSemanticTokensEdits } from '../common/getSemanticTokens.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ISemanticTokensStylingService } from '../../../common/services/semanticTokensStyling.js';\nimport { registerEditorFeature } from '../../../common/editorFeatures.js';\nimport { SEMANTIC_HIGHLIGHTING_SETTING_ID, isSemanticColoringEnabled } from '../common/semanticTokensConfig.js';\nlet DocumentSemanticTokensFeature = class DocumentSemanticTokensFeature extends Disposable {\n    constructor(semanticTokensStylingService, modelService, themeService, configurationService, languageFeatureDebounceService, languageFeaturesService) {\n        super();\n        this._watchers = Object.create(null);\n        const register = (model) => {\n            this._watchers[model.uri.toString()] = new ModelSemanticColoring(model, semanticTokensStylingService, themeService, languageFeatureDebounceService, languageFeaturesService);\n        };\n        const deregister = (model, modelSemanticColoring) => {\n            modelSemanticColoring.dispose();\n            delete this._watchers[model.uri.toString()];\n        };\n        const handleSettingOrThemeChange = () => {\n            for (const model of modelService.getModels()) {\n                const curr = this._watchers[model.uri.toString()];\n                if (isSemanticColoringEnabled(model, themeService, configurationService)) {\n                    if (!curr) {\n                        register(model);\n                    }\n                }\n                else {\n                    if (curr) {\n                        deregister(model, curr);\n                    }\n                }\n            }\n        };\n        modelService.getModels().forEach(model => {\n            if (isSemanticColoringEnabled(model, themeService, configurationService)) {\n                register(model);\n            }\n        });\n        this._register(modelService.onModelAdded((model) => {\n            if (isSemanticColoringEnabled(model, themeService, configurationService)) {\n                register(model);\n            }\n        }));\n        this._register(modelService.onModelRemoved((model) => {\n            const curr = this._watchers[model.uri.toString()];\n            if (curr) {\n                deregister(model, curr);\n            }\n        }));\n        this._register(configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration(SEMANTIC_HIGHLIGHTING_SETTING_ID)) {\n                handleSettingOrThemeChange();\n            }\n        }));\n        this._register(themeService.onDidColorThemeChange(handleSettingOrThemeChange));\n    }\n    dispose() {\n        // Dispose all watchers\n        for (const watcher of Object.values(this._watchers)) {\n            watcher.dispose();\n        }\n        super.dispose();\n    }\n};\nDocumentSemanticTokensFeature = __decorate([\n    __param(0, ISemanticTokensStylingService),\n    __param(1, IModelService),\n    __param(2, IThemeService),\n    __param(3, IConfigurationService),\n    __param(4, ILanguageFeatureDebounceService),\n    __param(5, ILanguageFeaturesService)\n], DocumentSemanticTokensFeature);\nexport { DocumentSemanticTokensFeature };\nlet ModelSemanticColoring = ModelSemanticColoring_1 = class ModelSemanticColoring extends Disposable {\n    constructor(model, _semanticTokensStylingService, themeService, languageFeatureDebounceService, languageFeaturesService) {\n        super();\n        this._semanticTokensStylingService = _semanticTokensStylingService;\n        this._isDisposed = false;\n        this._model = model;\n        this._provider = languageFeaturesService.documentSemanticTokensProvider;\n        this._debounceInformation = languageFeatureDebounceService.for(this._provider, 'DocumentSemanticTokens', { min: ModelSemanticColoring_1.REQUEST_MIN_DELAY, max: ModelSemanticColoring_1.REQUEST_MAX_DELAY });\n        this._fetchDocumentSemanticTokens = this._register(new RunOnceScheduler(() => this._fetchDocumentSemanticTokensNow(), ModelSemanticColoring_1.REQUEST_MIN_DELAY));\n        this._currentDocumentResponse = null;\n        this._currentDocumentRequestCancellationTokenSource = null;\n        this._documentProvidersChangeListeners = [];\n        this._providersChangedDuringRequest = false;\n        this._register(this._model.onDidChangeContent(() => {\n            if (!this._fetchDocumentSemanticTokens.isScheduled()) {\n                this._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n            }\n        }));\n        this._register(this._model.onDidChangeAttached(() => {\n            if (!this._fetchDocumentSemanticTokens.isScheduled()) {\n                this._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n            }\n        }));\n        this._register(this._model.onDidChangeLanguage(() => {\n            // clear any outstanding state\n            if (this._currentDocumentResponse) {\n                this._currentDocumentResponse.dispose();\n                this._currentDocumentResponse = null;\n            }\n            if (this._currentDocumentRequestCancellationTokenSource) {\n                this._currentDocumentRequestCancellationTokenSource.cancel();\n                this._currentDocumentRequestCancellationTokenSource = null;\n            }\n            this._setDocumentSemanticTokens(null, null, null, []);\n            this._fetchDocumentSemanticTokens.schedule(0);\n        }));\n        const bindDocumentChangeListeners = () => {\n            dispose(this._documentProvidersChangeListeners);\n            this._documentProvidersChangeListeners = [];\n            for (const provider of this._provider.all(model)) {\n                if (typeof provider.onDidChange === 'function') {\n                    this._documentProvidersChangeListeners.push(provider.onDidChange(() => {\n                        if (this._currentDocumentRequestCancellationTokenSource) {\n                            // there is already a request running,\n                            this._providersChangedDuringRequest = true;\n                            return;\n                        }\n                        this._fetchDocumentSemanticTokens.schedule(0);\n                    }));\n                }\n            }\n        };\n        bindDocumentChangeListeners();\n        this._register(this._provider.onDidChange(() => {\n            bindDocumentChangeListeners();\n            this._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n        }));\n        this._register(themeService.onDidColorThemeChange(_ => {\n            // clear out existing tokens\n            this._setDocumentSemanticTokens(null, null, null, []);\n            this._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n        }));\n        this._fetchDocumentSemanticTokens.schedule(0);\n    }\n    dispose() {\n        if (this._currentDocumentResponse) {\n            this._currentDocumentResponse.dispose();\n            this._currentDocumentResponse = null;\n        }\n        if (this._currentDocumentRequestCancellationTokenSource) {\n            this._currentDocumentRequestCancellationTokenSource.cancel();\n            this._currentDocumentRequestCancellationTokenSource = null;\n        }\n        dispose(this._documentProvidersChangeListeners);\n        this._documentProvidersChangeListeners = [];\n        this._setDocumentSemanticTokens(null, null, null, []);\n        this._isDisposed = true;\n        super.dispose();\n    }\n    _fetchDocumentSemanticTokensNow() {\n        if (this._currentDocumentRequestCancellationTokenSource) {\n            // there is already a request running, let it finish...\n            return;\n        }\n        if (!hasDocumentSemanticTokensProvider(this._provider, this._model)) {\n            // there is no provider\n            if (this._currentDocumentResponse) {\n                // there are semantic tokens set\n                this._model.tokenization.setSemanticTokens(null, false);\n            }\n            return;\n        }\n        if (!this._model.isAttachedToEditor()) {\n            // this document is not visible, there is no need to fetch semantic tokens for it\n            return;\n        }\n        const cancellationTokenSource = new CancellationTokenSource();\n        const lastProvider = this._currentDocumentResponse ? this._currentDocumentResponse.provider : null;\n        const lastResultId = this._currentDocumentResponse ? this._currentDocumentResponse.resultId || null : null;\n        const request = getDocumentSemanticTokens(this._provider, this._model, lastProvider, lastResultId, cancellationTokenSource.token);\n        this._currentDocumentRequestCancellationTokenSource = cancellationTokenSource;\n        this._providersChangedDuringRequest = false;\n        const pendingChanges = [];\n        const contentChangeListener = this._model.onDidChangeContent((e) => {\n            pendingChanges.push(e);\n        });\n        const sw = new StopWatch(false);\n        request.then((res) => {\n            this._debounceInformation.update(this._model, sw.elapsed());\n            this._currentDocumentRequestCancellationTokenSource = null;\n            contentChangeListener.dispose();\n            if (!res) {\n                this._setDocumentSemanticTokens(null, null, null, pendingChanges);\n            }\n            else {\n                const { provider, tokens } = res;\n                const styling = this._semanticTokensStylingService.getStyling(provider);\n                this._setDocumentSemanticTokens(provider, tokens || null, styling, pendingChanges);\n            }\n        }, (err) => {\n            const isExpectedError = err && (errors.isCancellationError(err) || (typeof err.message === 'string' && err.message.indexOf('busy') !== -1));\n            if (!isExpectedError) {\n                errors.onUnexpectedError(err);\n            }\n            // Semantic tokens eats up all errors and considers errors to mean that the result is temporarily not available\n            // The API does not have a special error kind to express this...\n            this._currentDocumentRequestCancellationTokenSource = null;\n            contentChangeListener.dispose();\n            if (pendingChanges.length > 0 || this._providersChangedDuringRequest) {\n                // More changes occurred while the request was running\n                if (!this._fetchDocumentSemanticTokens.isScheduled()) {\n                    this._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n                }\n            }\n        });\n    }\n    static _copy(src, srcOffset, dest, destOffset, length) {\n        // protect against overflows\n        length = Math.min(length, dest.length - destOffset, src.length - srcOffset);\n        for (let i = 0; i < length; i++) {\n            dest[destOffset + i] = src[srcOffset + i];\n        }\n    }\n    _setDocumentSemanticTokens(provider, tokens, styling, pendingChanges) {\n        const currentResponse = this._currentDocumentResponse;\n        const rescheduleIfNeeded = () => {\n            if ((pendingChanges.length > 0 || this._providersChangedDuringRequest) && !this._fetchDocumentSemanticTokens.isScheduled()) {\n                this._fetchDocumentSemanticTokens.schedule(this._debounceInformation.get(this._model));\n            }\n        };\n        if (this._currentDocumentResponse) {\n            this._currentDocumentResponse.dispose();\n            this._currentDocumentResponse = null;\n        }\n        if (this._isDisposed) {\n            // disposed!\n            if (provider && tokens) {\n                provider.releaseDocumentSemanticTokens(tokens.resultId);\n            }\n            return;\n        }\n        if (!provider || !styling) {\n            this._model.tokenization.setSemanticTokens(null, false);\n            return;\n        }\n        if (!tokens) {\n            this._model.tokenization.setSemanticTokens(null, true);\n            rescheduleIfNeeded();\n            return;\n        }\n        if (isSemanticTokensEdits(tokens)) {\n            if (!currentResponse) {\n                // not possible!\n                this._model.tokenization.setSemanticTokens(null, true);\n                return;\n            }\n            if (tokens.edits.length === 0) {\n                // nothing to do!\n                tokens = {\n                    resultId: tokens.resultId,\n                    data: currentResponse.data\n                };\n            }\n            else {\n                let deltaLength = 0;\n                for (const edit of tokens.edits) {\n                    deltaLength += (edit.data ? edit.data.length : 0) - edit.deleteCount;\n                }\n                const srcData = currentResponse.data;\n                const destData = new Uint32Array(srcData.length + deltaLength);\n                let srcLastStart = srcData.length;\n                let destLastStart = destData.length;\n                for (let i = tokens.edits.length - 1; i >= 0; i--) {\n                    const edit = tokens.edits[i];\n                    if (edit.start > srcData.length) {\n                        styling.warnInvalidEditStart(currentResponse.resultId, tokens.resultId, i, edit.start, srcData.length);\n                        // The edits are invalid and there's no way to recover\n                        this._model.tokenization.setSemanticTokens(null, true);\n                        return;\n                    }\n                    const copyCount = srcLastStart - (edit.start + edit.deleteCount);\n                    if (copyCount > 0) {\n                        ModelSemanticColoring_1._copy(srcData, srcLastStart - copyCount, destData, destLastStart - copyCount, copyCount);\n                        destLastStart -= copyCount;\n                    }\n                    if (edit.data) {\n                        ModelSemanticColoring_1._copy(edit.data, 0, destData, destLastStart - edit.data.length, edit.data.length);\n                        destLastStart -= edit.data.length;\n                    }\n                    srcLastStart = edit.start;\n                }\n                if (srcLastStart > 0) {\n                    ModelSemanticColoring_1._copy(srcData, 0, destData, 0, srcLastStart);\n                }\n                tokens = {\n                    resultId: tokens.resultId,\n                    data: destData\n                };\n            }\n        }\n        if (isSemanticTokens(tokens)) {\n            this._currentDocumentResponse = new SemanticTokensResponse(provider, tokens.resultId, tokens.data);\n            const result = toMultilineTokens2(tokens, styling, this._model.getLanguageId());\n            // Adjust incoming semantic tokens\n            if (pendingChanges.length > 0) {\n                // More changes occurred while the request was running\n                // We need to:\n                // 1. Adjust incoming semantic tokens\n                // 2. Request them again\n                for (const change of pendingChanges) {\n                    for (const area of result) {\n                        for (const singleChange of change.changes) {\n                            area.applyEdit(singleChange.range, singleChange.text);\n                        }\n                    }\n                }\n            }\n            this._model.tokenization.setSemanticTokens(result, true);\n        }\n        else {\n            this._model.tokenization.setSemanticTokens(null, true);\n        }\n        rescheduleIfNeeded();\n    }\n};\nModelSemanticColoring.REQUEST_MIN_DELAY = 300;\nModelSemanticColoring.REQUEST_MAX_DELAY = 2000;\nModelSemanticColoring = ModelSemanticColoring_1 = __decorate([\n    __param(1, ISemanticTokensStylingService),\n    __param(2, IThemeService),\n    __param(3, ILanguageFeatureDebounceService),\n    __param(4, ILanguageFeaturesService)\n], ModelSemanticColoring);\nclass SemanticTokensResponse {\n    constructor(provider, resultId, data) {\n        this.provider = provider;\n        this.resultId = resultId;\n        this.data = data;\n    }\n    dispose() {\n        this.provider.releaseDocumentSemanticTokens(this.resultId);\n    }\n}\nregisterEditorFeature(DocumentSemanticTokensFeature);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { createCancelablePromise, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { getDocumentRangeSemanticTokens, hasDocumentRangeSemanticTokensProvider } from '../common/getSemanticTokens.js';\nimport { isSemanticColoringEnabled, SEMANTIC_HIGHLIGHTING_SETTING_ID } from '../common/semanticTokensConfig.js';\nimport { toMultilineTokens2 } from '../../../common/services/semanticTokensProviderStyling.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ISemanticTokensStylingService } from '../../../common/services/semanticTokensStyling.js';\nlet ViewportSemanticTokensContribution = class ViewportSemanticTokensContribution extends Disposable {\n    constructor(editor, _semanticTokensStylingService, _themeService, _configurationService, languageFeatureDebounceService, languageFeaturesService) {\n        super();\n        this._semanticTokensStylingService = _semanticTokensStylingService;\n        this._themeService = _themeService;\n        this._configurationService = _configurationService;\n        this._editor = editor;\n        this._provider = languageFeaturesService.documentRangeSemanticTokensProvider;\n        this._debounceInformation = languageFeatureDebounceService.for(this._provider, 'DocumentRangeSemanticTokens', { min: 100, max: 500 });\n        this._tokenizeViewport = this._register(new RunOnceScheduler(() => this._tokenizeViewportNow(), 100));\n        this._outstandingRequests = [];\n        const scheduleTokenizeViewport = () => {\n            if (this._editor.hasModel()) {\n                this._tokenizeViewport.schedule(this._debounceInformation.get(this._editor.getModel()));\n            }\n        };\n        this._register(this._editor.onDidScrollChange(() => {\n            scheduleTokenizeViewport();\n        }));\n        this._register(this._editor.onDidChangeModel(() => {\n            this._cancelAll();\n            scheduleTokenizeViewport();\n        }));\n        this._register(this._editor.onDidChangeModelContent((e) => {\n            this._cancelAll();\n            scheduleTokenizeViewport();\n        }));\n        this._register(this._provider.onDidChange(() => {\n            this._cancelAll();\n            scheduleTokenizeViewport();\n        }));\n        this._register(this._configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration(SEMANTIC_HIGHLIGHTING_SETTING_ID)) {\n                this._cancelAll();\n                scheduleTokenizeViewport();\n            }\n        }));\n        this._register(this._themeService.onDidColorThemeChange(() => {\n            this._cancelAll();\n            scheduleTokenizeViewport();\n        }));\n        scheduleTokenizeViewport();\n    }\n    _cancelAll() {\n        for (const request of this._outstandingRequests) {\n            request.cancel();\n        }\n        this._outstandingRequests = [];\n    }\n    _removeOutstandingRequest(req) {\n        for (let i = 0, len = this._outstandingRequests.length; i < len; i++) {\n            if (this._outstandingRequests[i] === req) {\n                this._outstandingRequests.splice(i, 1);\n                return;\n            }\n        }\n    }\n    _tokenizeViewportNow() {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        const model = this._editor.getModel();\n        if (model.tokenization.hasCompleteSemanticTokens()) {\n            return;\n        }\n        if (!isSemanticColoringEnabled(model, this._themeService, this._configurationService)) {\n            if (model.tokenization.hasSomeSemanticTokens()) {\n                model.tokenization.setSemanticTokens(null, false);\n            }\n            return;\n        }\n        if (!hasDocumentRangeSemanticTokensProvider(this._provider, model)) {\n            if (model.tokenization.hasSomeSemanticTokens()) {\n                model.tokenization.setSemanticTokens(null, false);\n            }\n            return;\n        }\n        const visibleRanges = this._editor.getVisibleRangesPlusViewportAboveBelow();\n        this._outstandingRequests = this._outstandingRequests.concat(visibleRanges.map(range => this._requestRange(model, range)));\n    }\n    _requestRange(model, range) {\n        const requestVersionId = model.getVersionId();\n        const request = createCancelablePromise(token => Promise.resolve(getDocumentRangeSemanticTokens(this._provider, model, range, token)));\n        const sw = new StopWatch(false);\n        request.then((r) => {\n            this._debounceInformation.update(model, sw.elapsed());\n            if (!r || !r.tokens || model.isDisposed() || model.getVersionId() !== requestVersionId) {\n                return;\n            }\n            const { provider, tokens: result } = r;\n            const styling = this._semanticTokensStylingService.getStyling(provider);\n            model.tokenization.setPartialSemanticTokens(range, toMultilineTokens2(result, styling, model.getLanguageId()));\n        }).then(() => this._removeOutstandingRequest(request), () => this._removeOutstandingRequest(request));\n        return request;\n    }\n};\nViewportSemanticTokensContribution.ID = 'editor.contrib.viewportSemanticTokens';\nViewportSemanticTokensContribution = __decorate([\n    __param(1, ISemanticTokensStylingService),\n    __param(2, IThemeService),\n    __param(3, IConfigurationService),\n    __param(4, ILanguageFeatureDebounceService),\n    __param(5, ILanguageFeaturesService)\n], ViewportSemanticTokensContribution);\nexport { ViewportSemanticTokensContribution };\nregisterEditorContribution(ViewportSemanticTokensContribution.ID, ViewportSemanticTokensContribution, 1 /* EditorContributionInstantiation.AfterFirstRender */);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { encodeSemanticTokensDto } from '../../../common/services/semanticTokensDto.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport function isSemanticTokens(v) {\n    return v && !!(v.data);\n}\nexport function isSemanticTokensEdits(v) {\n    return v && Array.isArray(v.edits);\n}\nexport class DocumentSemanticTokensResult {\n    constructor(provider, tokens, error) {\n        this.provider = provider;\n        this.tokens = tokens;\n        this.error = error;\n    }\n}\nexport function hasDocumentSemanticTokensProvider(registry, model) {\n    return registry.has(model);\n}\nfunction getDocumentSemanticTokensProviders(registry, model) {\n    const groups = registry.orderedGroups(model);\n    return (groups.length > 0 ? groups[0] : []);\n}\nexport async function getDocumentSemanticTokens(registry, model, lastProvider, lastResultId, token) {\n    const providers = getDocumentSemanticTokensProviders(registry, model);\n    // Get tokens from all providers at the same time.\n    const results = await Promise.all(providers.map(async (provider) => {\n        let result;\n        let error = null;\n        try {\n            result = await provider.provideDocumentSemanticTokens(model, (provider === lastProvider ? lastResultId : null), token);\n        }\n        catch (err) {\n            error = err;\n            result = null;\n        }\n        if (!result || (!isSemanticTokens(result) && !isSemanticTokensEdits(result))) {\n            result = null;\n        }\n        return new DocumentSemanticTokensResult(provider, result, error);\n    }));\n    // Try to return the first result with actual tokens or\n    // the first result which threw an error (!!)\n    for (const result of results) {\n        if (result.error) {\n            throw result.error;\n        }\n        if (result.tokens) {\n            return result;\n        }\n    }\n    // Return the first result, even if it doesn't have tokens\n    if (results.length > 0) {\n        return results[0];\n    }\n    return null;\n}\nfunction _getDocumentSemanticTokensProviderHighestGroup(registry, model) {\n    const result = registry.orderedGroups(model);\n    return (result.length > 0 ? result[0] : null);\n}\nclass DocumentRangeSemanticTokensResult {\n    constructor(provider, tokens) {\n        this.provider = provider;\n        this.tokens = tokens;\n    }\n}\nexport function hasDocumentRangeSemanticTokensProvider(providers, model) {\n    return providers.has(model);\n}\nfunction getDocumentRangeSemanticTokensProviders(providers, model) {\n    const groups = providers.orderedGroups(model);\n    return (groups.length > 0 ? groups[0] : []);\n}\nexport async function getDocumentRangeSemanticTokens(registry, model, range, token) {\n    const providers = getDocumentRangeSemanticTokensProviders(registry, model);\n    // Get tokens from all providers at the same time.\n    const results = await Promise.all(providers.map(async (provider) => {\n        let result;\n        try {\n            result = await provider.provideDocumentRangeSemanticTokens(model, range, token);\n        }\n        catch (err) {\n            onUnexpectedExternalError(err);\n            result = null;\n        }\n        if (!result || !isSemanticTokens(result)) {\n            result = null;\n        }\n        return new DocumentRangeSemanticTokensResult(provider, result);\n    }));\n    // Try to return the first result with actual tokens\n    for (const result of results) {\n        if (result.tokens) {\n            return result;\n        }\n    }\n    // Return the first result, even if it doesn't have tokens\n    if (results.length > 0) {\n        return results[0];\n    }\n    return null;\n}\nCommandsRegistry.registerCommand('_provideDocumentSemanticTokensLegend', async (accessor, ...args) => {\n    const [uri] = args;\n    assertType(uri instanceof URI);\n    const model = accessor.get(IModelService).getModel(uri);\n    if (!model) {\n        return undefined;\n    }\n    const { documentSemanticTokensProvider } = accessor.get(ILanguageFeaturesService);\n    const providers = _getDocumentSemanticTokensProviderHighestGroup(documentSemanticTokensProvider, model);\n    if (!providers) {\n        // there is no provider => fall back to a document range semantic tokens provider\n        return accessor.get(ICommandService).executeCommand('_provideDocumentRangeSemanticTokensLegend', uri);\n    }\n    return providers[0].getLegend();\n});\nCommandsRegistry.registerCommand('_provideDocumentSemanticTokens', async (accessor, ...args) => {\n    const [uri] = args;\n    assertType(uri instanceof URI);\n    const model = accessor.get(IModelService).getModel(uri);\n    if (!model) {\n        return undefined;\n    }\n    const { documentSemanticTokensProvider } = accessor.get(ILanguageFeaturesService);\n    if (!hasDocumentSemanticTokensProvider(documentSemanticTokensProvider, model)) {\n        // there is no provider => fall back to a document range semantic tokens provider\n        return accessor.get(ICommandService).executeCommand('_provideDocumentRangeSemanticTokens', uri, model.getFullModelRange());\n    }\n    const r = await getDocumentSemanticTokens(documentSemanticTokensProvider, model, null, null, CancellationToken.None);\n    if (!r) {\n        return undefined;\n    }\n    const { provider, tokens } = r;\n    if (!tokens || !isSemanticTokens(tokens)) {\n        return undefined;\n    }\n    const buff = encodeSemanticTokensDto({\n        id: 0,\n        type: 'full',\n        data: tokens.data\n    });\n    if (tokens.resultId) {\n        provider.releaseDocumentSemanticTokens(tokens.resultId);\n    }\n    return buff;\n});\nCommandsRegistry.registerCommand('_provideDocumentRangeSemanticTokensLegend', async (accessor, ...args) => {\n    const [uri, range] = args;\n    assertType(uri instanceof URI);\n    const model = accessor.get(IModelService).getModel(uri);\n    if (!model) {\n        return undefined;\n    }\n    const { documentRangeSemanticTokensProvider } = accessor.get(ILanguageFeaturesService);\n    const providers = getDocumentRangeSemanticTokensProviders(documentRangeSemanticTokensProvider, model);\n    if (providers.length === 0) {\n        // no providers\n        return undefined;\n    }\n    if (providers.length === 1) {\n        // straight forward case, just a single provider\n        return providers[0].getLegend();\n    }\n    if (!range || !Range.isIRange(range)) {\n        // if no range is provided, we cannot support multiple providers\n        // as we cannot fall back to the one which would give results\n        // => return the first legend for backwards compatibility and print a warning\n        console.warn(`provideDocumentRangeSemanticTokensLegend might be out-of-sync with provideDocumentRangeSemanticTokens unless a range argument is passed in`);\n        return providers[0].getLegend();\n    }\n    const result = await getDocumentRangeSemanticTokens(documentRangeSemanticTokensProvider, model, Range.lift(range), CancellationToken.None);\n    if (!result) {\n        return undefined;\n    }\n    return result.provider.getLegend();\n});\nCommandsRegistry.registerCommand('_provideDocumentRangeSemanticTokens', async (accessor, ...args) => {\n    const [uri, range] = args;\n    assertType(uri instanceof URI);\n    assertType(Range.isIRange(range));\n    const model = accessor.get(IModelService).getModel(uri);\n    if (!model) {\n        return undefined;\n    }\n    const { documentRangeSemanticTokensProvider } = accessor.get(ILanguageFeaturesService);\n    const result = await getDocumentRangeSemanticTokens(documentRangeSemanticTokensProvider, model, Range.lift(range), CancellationToken.None);\n    if (!result || !result.tokens) {\n        // there is no provider or it didn't return tokens\n        return undefined;\n    }\n    return encodeSemanticTokensDto({\n        id: 0,\n        type: 'full',\n        data: result.tokens.data\n    });\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const SEMANTIC_HIGHLIGHTING_SETTING_ID = 'editor.semanticHighlighting';\nexport function isSemanticColoringEnabled(model, themeService, configurationService) {\n    var _a;\n    const setting = (_a = configurationService.getValue(SEMANTIC_HIGHLIGHTING_SETTING_ID, { overrideIdentifier: model.getLanguageId(), resource: model.uri })) === null || _a === void 0 ? void 0 : _a.enabled;\n    if (typeof setting === 'boolean') {\n        return setting;\n    }\n    return themeService.getColorTheme().semanticHighlighting;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LinkedList } from '../../../../base/common/linkedList.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nexport class BracketSelectionRangeProvider {\n    async provideSelectionRanges(model, positions) {\n        const result = [];\n        for (const position of positions) {\n            const bucket = [];\n            result.push(bucket);\n            const ranges = new Map();\n            await new Promise(resolve => BracketSelectionRangeProvider._bracketsRightYield(resolve, 0, model, position, ranges));\n            await new Promise(resolve => BracketSelectionRangeProvider._bracketsLeftYield(resolve, 0, model, position, ranges, bucket));\n        }\n        return result;\n    }\n    static _bracketsRightYield(resolve, round, model, pos, ranges) {\n        const counts = new Map();\n        const t1 = Date.now();\n        while (true) {\n            if (round >= BracketSelectionRangeProvider._maxRounds) {\n                resolve();\n                break;\n            }\n            if (!pos) {\n                resolve();\n                break;\n            }\n            const bracket = model.bracketPairs.findNextBracket(pos);\n            if (!bracket) {\n                resolve();\n                break;\n            }\n            const d = Date.now() - t1;\n            if (d > BracketSelectionRangeProvider._maxDuration) {\n                setTimeout(() => BracketSelectionRangeProvider._bracketsRightYield(resolve, round + 1, model, pos, ranges));\n                break;\n            }\n            if (bracket.bracketInfo.isOpeningBracket) {\n                const key = bracket.bracketInfo.bracketText;\n                // wait for closing\n                const val = counts.has(key) ? counts.get(key) : 0;\n                counts.set(key, val + 1);\n            }\n            else {\n                const key = bracket.bracketInfo.getOpeningBrackets()[0].bracketText;\n                // process closing\n                let val = counts.has(key) ? counts.get(key) : 0;\n                val -= 1;\n                counts.set(key, Math.max(0, val));\n                if (val < 0) {\n                    let list = ranges.get(key);\n                    if (!list) {\n                        list = new LinkedList();\n                        ranges.set(key, list);\n                    }\n                    list.push(bracket.range);\n                }\n            }\n            pos = bracket.range.getEndPosition();\n        }\n    }\n    static _bracketsLeftYield(resolve, round, model, pos, ranges, bucket) {\n        const counts = new Map();\n        const t1 = Date.now();\n        while (true) {\n            if (round >= BracketSelectionRangeProvider._maxRounds && ranges.size === 0) {\n                resolve();\n                break;\n            }\n            if (!pos) {\n                resolve();\n                break;\n            }\n            const bracket = model.bracketPairs.findPrevBracket(pos);\n            if (!bracket) {\n                resolve();\n                break;\n            }\n            const d = Date.now() - t1;\n            if (d > BracketSelectionRangeProvider._maxDuration) {\n                setTimeout(() => BracketSelectionRangeProvider._bracketsLeftYield(resolve, round + 1, model, pos, ranges, bucket));\n                break;\n            }\n            if (!bracket.bracketInfo.isOpeningBracket) {\n                const key = bracket.bracketInfo.getOpeningBrackets()[0].bracketText;\n                // wait for opening\n                const val = counts.has(key) ? counts.get(key) : 0;\n                counts.set(key, val + 1);\n            }\n            else {\n                const key = bracket.bracketInfo.bracketText;\n                // opening\n                let val = counts.has(key) ? counts.get(key) : 0;\n                val -= 1;\n                counts.set(key, Math.max(0, val));\n                if (val < 0) {\n                    const list = ranges.get(key);\n                    if (list) {\n                        const closing = list.shift();\n                        if (list.size === 0) {\n                            ranges.delete(key);\n                        }\n                        const innerBracket = Range.fromPositions(bracket.range.getEndPosition(), closing.getStartPosition());\n                        const outerBracket = Range.fromPositions(bracket.range.getStartPosition(), closing.getEndPosition());\n                        bucket.push({ range: innerBracket });\n                        bucket.push({ range: outerBracket });\n                        BracketSelectionRangeProvider._addBracketLeading(model, outerBracket, bucket);\n                    }\n                }\n            }\n            pos = bracket.range.getStartPosition();\n        }\n    }\n    static _addBracketLeading(model, bracket, bucket) {\n        if (bracket.startLineNumber === bracket.endLineNumber) {\n            return;\n        }\n        // xxxxxxxx {\n        //\n        // }\n        const startLine = bracket.startLineNumber;\n        const column = model.getLineFirstNonWhitespaceColumn(startLine);\n        if (column !== 0 && column !== bracket.startColumn) {\n            bucket.push({ range: Range.fromPositions(new Position(startLine, column), bracket.getEndPosition()) });\n            bucket.push({ range: Range.fromPositions(new Position(startLine, 1), bracket.getEndPosition()) });\n        }\n        // xxxxxxxx\n        // {\n        //\n        // }\n        const aboveLine = startLine - 1;\n        if (aboveLine > 0) {\n            const column = model.getLineFirstNonWhitespaceColumn(aboveLine);\n            if (column === bracket.startColumn && column !== model.getLineLastNonWhitespaceColumn(aboveLine)) {\n                bucket.push({ range: Range.fromPositions(new Position(aboveLine, column), bracket.getEndPosition()) });\n                bucket.push({ range: Range.fromPositions(new Position(aboveLine, 1), bracket.getEndPosition()) });\n            }\n        }\n    }\n}\nBracketSelectionRangeProvider._maxDuration = 30;\nBracketSelectionRangeProvider._maxRounds = 2;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isLowerAsciiLetter, isUpperAsciiLetter } from '../../../../base/common/strings.js';\nimport { Range } from '../../../common/core/range.js';\nexport class WordSelectionRangeProvider {\n    constructor(selectSubwords = true) {\n        this.selectSubwords = selectSubwords;\n    }\n    provideSelectionRanges(model, positions) {\n        const result = [];\n        for (const position of positions) {\n            const bucket = [];\n            result.push(bucket);\n            if (this.selectSubwords) {\n                this._addInWordRanges(bucket, model, position);\n            }\n            this._addWordRanges(bucket, model, position);\n            this._addWhitespaceLine(bucket, model, position);\n            bucket.push({ range: model.getFullModelRange() });\n        }\n        return result;\n    }\n    _addInWordRanges(bucket, model, pos) {\n        const obj = model.getWordAtPosition(pos);\n        if (!obj) {\n            return;\n        }\n        const { word, startColumn } = obj;\n        const offset = pos.column - startColumn;\n        let start = offset;\n        let end = offset;\n        let lastCh = 0;\n        // LEFT anchor (start)\n        for (; start >= 0; start--) {\n            const ch = word.charCodeAt(start);\n            if ((start !== offset) && (ch === 95 /* CharCode.Underline */ || ch === 45 /* CharCode.Dash */)) {\n                // foo-bar OR foo_bar\n                break;\n            }\n            else if (isLowerAsciiLetter(ch) && isUpperAsciiLetter(lastCh)) {\n                // fooBar\n                break;\n            }\n            lastCh = ch;\n        }\n        start += 1;\n        // RIGHT anchor (end)\n        for (; end < word.length; end++) {\n            const ch = word.charCodeAt(end);\n            if (isUpperAsciiLetter(ch) && isLowerAsciiLetter(lastCh)) {\n                // fooBar\n                break;\n            }\n            else if (ch === 95 /* CharCode.Underline */ || ch === 45 /* CharCode.Dash */) {\n                // foo-bar OR foo_bar\n                break;\n            }\n            lastCh = ch;\n        }\n        if (start < end) {\n            bucket.push({ range: new Range(pos.lineNumber, startColumn + start, pos.lineNumber, startColumn + end) });\n        }\n    }\n    _addWordRanges(bucket, model, pos) {\n        const word = model.getWordAtPosition(pos);\n        if (word) {\n            bucket.push({ range: new Range(pos.lineNumber, word.startColumn, pos.lineNumber, word.endColumn) });\n        }\n    }\n    _addWhitespaceLine(bucket, model, pos) {\n        if (model.getLineLength(pos.lineNumber) > 0\n            && model.getLineFirstNonWhitespaceColumn(pos.lineNumber) === 0\n            && model.getLineLastNonWhitespaceColumn(pos.lineNumber) === 0) {\n            bucket.push({ range: new Range(pos.lineNumber, 1, pos.lineNumber, model.getLineMaxColumn(pos.lineNumber)) });\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar SmartSelectController_1;\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { BracketSelectionRangeProvider } from './bracketSelections.js';\nimport { WordSelectionRangeProvider } from './wordSelections.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nclass SelectionRanges {\n    constructor(index, ranges) {\n        this.index = index;\n        this.ranges = ranges;\n    }\n    mov(fwd) {\n        const index = this.index + (fwd ? 1 : -1);\n        if (index < 0 || index >= this.ranges.length) {\n            return this;\n        }\n        const res = new SelectionRanges(index, this.ranges);\n        if (res.ranges[index].equalsRange(this.ranges[this.index])) {\n            // next range equals this range, retry with next-next\n            return res.mov(fwd);\n        }\n        return res;\n    }\n}\nlet SmartSelectController = SmartSelectController_1 = class SmartSelectController {\n    static get(editor) {\n        return editor.getContribution(SmartSelectController_1.ID);\n    }\n    constructor(_editor, _languageFeaturesService) {\n        this._editor = _editor;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._ignoreSelection = false;\n    }\n    dispose() {\n        var _a;\n        (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    async run(forward) {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        const selections = this._editor.getSelections();\n        const model = this._editor.getModel();\n        if (!this._state) {\n            await provideSelectionRanges(this._languageFeaturesService.selectionRangeProvider, model, selections.map(s => s.getPosition()), this._editor.getOption(113 /* EditorOption.smartSelect */), CancellationToken.None).then(ranges => {\n                var _a;\n                if (!arrays.isNonEmptyArray(ranges) || ranges.length !== selections.length) {\n                    // invalid result\n                    return;\n                }\n                if (!this._editor.hasModel() || !arrays.equals(this._editor.getSelections(), selections, (a, b) => a.equalsSelection(b))) {\n                    // invalid editor state\n                    return;\n                }\n                for (let i = 0; i < ranges.length; i++) {\n                    ranges[i] = ranges[i].filter(range => {\n                        // filter ranges inside the selection\n                        return range.containsPosition(selections[i].getStartPosition()) && range.containsPosition(selections[i].getEndPosition());\n                    });\n                    // prepend current selection\n                    ranges[i].unshift(selections[i]);\n                }\n                this._state = ranges.map(ranges => new SelectionRanges(0, ranges));\n                // listen to caret move and forget about state\n                (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\n                this._selectionListener = this._editor.onDidChangeCursorPosition(() => {\n                    var _a;\n                    if (!this._ignoreSelection) {\n                        (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\n                        this._state = undefined;\n                    }\n                });\n            });\n        }\n        if (!this._state) {\n            // no state\n            return;\n        }\n        this._state = this._state.map(state => state.mov(forward));\n        const newSelections = this._state.map(state => Selection.fromPositions(state.ranges[state.index].getStartPosition(), state.ranges[state.index].getEndPosition()));\n        this._ignoreSelection = true;\n        try {\n            this._editor.setSelections(newSelections);\n        }\n        finally {\n            this._ignoreSelection = false;\n        }\n    }\n};\nSmartSelectController.ID = 'editor.contrib.smartSelectController';\nSmartSelectController = SmartSelectController_1 = __decorate([\n    __param(1, ILanguageFeaturesService)\n], SmartSelectController);\nexport { SmartSelectController };\nclass AbstractSmartSelect extends EditorAction {\n    constructor(forward, opts) {\n        super(opts);\n        this._forward = forward;\n    }\n    async run(_accessor, editor) {\n        const controller = SmartSelectController.get(editor);\n        if (controller) {\n            await controller.run(this._forward);\n        }\n    }\n}\nclass GrowSelectionAction extends AbstractSmartSelect {\n    constructor() {\n        super(true, {\n            id: 'editor.action.smartSelect.expand',\n            label: nls.localize('smartSelect.expand', \"Expand Selection\"),\n            alias: 'Expand Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 17 /* KeyCode.RightArrow */,\n                mac: {\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 256 /* KeyMod.WinCtrl */ | 1024 /* KeyMod.Shift */ | 17 /* KeyCode.RightArrow */,\n                    secondary: [256 /* KeyMod.WinCtrl */ | 1024 /* KeyMod.Shift */ | 17 /* KeyCode.RightArrow */],\n                },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '1_basic',\n                title: nls.localize({ key: 'miSmartSelectGrow', comment: ['&& denotes a mnemonic'] }, \"&&Expand Selection\"),\n                order: 2\n            }\n        });\n    }\n}\n// renamed command id\nCommandsRegistry.registerCommandAlias('editor.action.smartSelect.grow', 'editor.action.smartSelect.expand');\nclass ShrinkSelectionAction extends AbstractSmartSelect {\n    constructor() {\n        super(false, {\n            id: 'editor.action.smartSelect.shrink',\n            label: nls.localize('smartSelect.shrink', \"Shrink Selection\"),\n            alias: 'Shrink Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 15 /* KeyCode.LeftArrow */,\n                mac: {\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 256 /* KeyMod.WinCtrl */ | 1024 /* KeyMod.Shift */ | 15 /* KeyCode.LeftArrow */,\n                    secondary: [256 /* KeyMod.WinCtrl */ | 1024 /* KeyMod.Shift */ | 15 /* KeyCode.LeftArrow */],\n                },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '1_basic',\n                title: nls.localize({ key: 'miSmartSelectShrink', comment: ['&& denotes a mnemonic'] }, \"&&Shrink Selection\"),\n                order: 3\n            }\n        });\n    }\n}\nregisterEditorContribution(SmartSelectController.ID, SmartSelectController, 4 /* EditorContributionInstantiation.Lazy */);\nregisterEditorAction(GrowSelectionAction);\nregisterEditorAction(ShrinkSelectionAction);\nexport async function provideSelectionRanges(registry, model, positions, options, token) {\n    const providers = registry.all(model)\n        .concat(new WordSelectionRangeProvider(options.selectSubwords)); // ALWAYS have word based selection range\n    if (providers.length === 1) {\n        // add word selection and bracket selection when no provider exists\n        providers.unshift(new BracketSelectionRangeProvider());\n    }\n    const work = [];\n    const allRawRanges = [];\n    for (const provider of providers) {\n        work.push(Promise.resolve(provider.provideSelectionRanges(model, positions, token)).then(allProviderRanges => {\n            if (arrays.isNonEmptyArray(allProviderRanges) && allProviderRanges.length === positions.length) {\n                for (let i = 0; i < positions.length; i++) {\n                    if (!allRawRanges[i]) {\n                        allRawRanges[i] = [];\n                    }\n                    for (const oneProviderRanges of allProviderRanges[i]) {\n                        if (Range.isIRange(oneProviderRanges.range) && Range.containsPosition(oneProviderRanges.range, positions[i])) {\n                            allRawRanges[i].push(Range.lift(oneProviderRanges.range));\n                        }\n                    }\n                }\n            }\n        }, onUnexpectedExternalError));\n    }\n    await Promise.all(work);\n    return allRawRanges.map(oneRawRanges => {\n        if (oneRawRanges.length === 0) {\n            return [];\n        }\n        // sort all by start/end position\n        oneRawRanges.sort((a, b) => {\n            if (Position.isBefore(a.getStartPosition(), b.getStartPosition())) {\n                return 1;\n            }\n            else if (Position.isBefore(b.getStartPosition(), a.getStartPosition())) {\n                return -1;\n            }\n            else if (Position.isBefore(a.getEndPosition(), b.getEndPosition())) {\n                return -1;\n            }\n            else if (Position.isBefore(b.getEndPosition(), a.getEndPosition())) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        });\n        // remove ranges that don't contain the former range or that are equal to the\n        // former range\n        const oneRanges = [];\n        let last;\n        for (const range of oneRawRanges) {\n            if (!last || (Range.containsRange(range, last) && !Range.equalsRange(range, last))) {\n                oneRanges.push(range);\n                last = range;\n            }\n        }\n        if (!options.selectLeadingAndTrailingWhitespace) {\n            return oneRanges;\n        }\n        // add ranges that expand trivia at line starts and ends whenever a range\n        // wraps onto the a new line\n        const oneRangesWithTrivia = [oneRanges[0]];\n        for (let i = 1; i < oneRanges.length; i++) {\n            const prev = oneRanges[i - 1];\n            const cur = oneRanges[i];\n            if (cur.startLineNumber !== prev.startLineNumber || cur.endLineNumber !== prev.endLineNumber) {\n                // add line/block range without leading/failing whitespace\n                const rangeNoWhitespace = new Range(prev.startLineNumber, model.getLineFirstNonWhitespaceColumn(prev.startLineNumber), prev.endLineNumber, model.getLineLastNonWhitespaceColumn(prev.endLineNumber));\n                if (rangeNoWhitespace.containsRange(prev) && !rangeNoWhitespace.equalsRange(prev) && cur.containsRange(rangeNoWhitespace) && !cur.equalsRange(rangeNoWhitespace)) {\n                    oneRangesWithTrivia.push(rangeNoWhitespace);\n                }\n                // add line/block range\n                const rangeFull = new Range(prev.startLineNumber, 1, prev.endLineNumber, model.getLineMaxColumn(prev.endLineNumber));\n                if (rangeFull.containsRange(prev) && !rangeFull.equalsRange(rangeNoWhitespace) && cur.containsRange(rangeFull) && !cur.equalsRange(rangeFull)) {\n                    oneRangesWithTrivia.push(rangeFull);\n                }\n            }\n            oneRangesWithTrivia.push(cur);\n        }\n        return oneRangesWithTrivia;\n    });\n}\nCommandsRegistry.registerCommand('_executeSelectionRangeProvider', async function (accessor, ...args) {\n    const [resource, positions] = args;\n    assertType(URI.isUri(resource));\n    const registry = accessor.get(ILanguageFeaturesService).selectionRangeProvider;\n    const reference = await accessor.get(ITextModelService).createModelReference(resource);\n    try {\n        return provideSelectionRanges(registry, reference.object.textEditorModel, positions, { selectLeadingAndTrailingWhitespace: true, selectSubwords: true }, CancellationToken.None);\n    }\n    finally {\n        reference.dispose();\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar SnippetController2_1;\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { EditorCommand, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { showSimpleSuggestions } from '../../suggest/browser/suggest.js';\nimport { localize } from '../../../../nls.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { SnippetSession } from './snippetSession.js';\nconst _defaultOptions = {\n    overwriteBefore: 0,\n    overwriteAfter: 0,\n    undoStopBefore: true,\n    undoStopAfter: true,\n    adjustWhitespace: true,\n    clipboardText: undefined,\n    overtypingCapturer: undefined\n};\nlet SnippetController2 = SnippetController2_1 = class SnippetController2 {\n    static get(editor) {\n        return editor.getContribution(SnippetController2_1.ID);\n    }\n    constructor(_editor, _logService, _languageFeaturesService, contextKeyService, _languageConfigurationService) {\n        this._editor = _editor;\n        this._logService = _logService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._languageConfigurationService = _languageConfigurationService;\n        this._snippetListener = new DisposableStore();\n        this._modelVersionId = -1;\n        this._inSnippet = SnippetController2_1.InSnippetMode.bindTo(contextKeyService);\n        this._hasNextTabstop = SnippetController2_1.HasNextTabstop.bindTo(contextKeyService);\n        this._hasPrevTabstop = SnippetController2_1.HasPrevTabstop.bindTo(contextKeyService);\n    }\n    dispose() {\n        var _a;\n        this._inSnippet.reset();\n        this._hasPrevTabstop.reset();\n        this._hasNextTabstop.reset();\n        (_a = this._session) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._snippetListener.dispose();\n    }\n    insert(template, opts) {\n        // this is here to find out more about the yet-not-understood\n        // error that sometimes happens when we fail to inserted a nested\n        // snippet\n        try {\n            this._doInsert(template, typeof opts === 'undefined' ? _defaultOptions : { ..._defaultOptions, ...opts });\n        }\n        catch (e) {\n            this.cancel();\n            this._logService.error(e);\n            this._logService.error('snippet_error');\n            this._logService.error('insert_template=', template);\n            this._logService.error('existing_template=', this._session ? this._session._logInfo() : '<no_session>');\n        }\n    }\n    _doInsert(template, opts) {\n        var _a;\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        // don't listen while inserting the snippet\n        // as that is the inflight state causing cancelation\n        this._snippetListener.clear();\n        if (opts.undoStopBefore) {\n            this._editor.getModel().pushStackElement();\n        }\n        // don't merge\n        if (this._session && typeof template !== 'string') {\n            this.cancel();\n        }\n        if (!this._session) {\n            this._modelVersionId = this._editor.getModel().getAlternativeVersionId();\n            this._session = new SnippetSession(this._editor, template, opts, this._languageConfigurationService);\n            this._session.insert();\n        }\n        else {\n            assertType(typeof template === 'string');\n            this._session.merge(template, opts);\n        }\n        if (opts.undoStopAfter) {\n            this._editor.getModel().pushStackElement();\n        }\n        // regster completion item provider when there is any choice element\n        if ((_a = this._session) === null || _a === void 0 ? void 0 : _a.hasChoice) {\n            const provider = {\n                _debugDisplayName: 'snippetChoiceCompletions',\n                provideCompletionItems: (model, position) => {\n                    if (!this._session || model !== this._editor.getModel() || !Position.equals(this._editor.getPosition(), position)) {\n                        return undefined;\n                    }\n                    const { activeChoice } = this._session;\n                    if (!activeChoice || activeChoice.choice.options.length === 0) {\n                        return undefined;\n                    }\n                    const word = model.getValueInRange(activeChoice.range);\n                    const isAnyOfOptions = Boolean(activeChoice.choice.options.find(o => o.value === word));\n                    const suggestions = [];\n                    for (let i = 0; i < activeChoice.choice.options.length; i++) {\n                        const option = activeChoice.choice.options[i];\n                        suggestions.push({\n                            kind: 13 /* CompletionItemKind.Value */,\n                            label: option.value,\n                            insertText: option.value,\n                            sortText: 'a'.repeat(i + 1),\n                            range: activeChoice.range,\n                            filterText: isAnyOfOptions ? `${word}_${option.value}` : undefined,\n                            command: { id: 'jumpToNextSnippetPlaceholder', title: localize('next', 'Go to next placeholder...') }\n                        });\n                    }\n                    return { suggestions };\n                }\n            };\n            const model = this._editor.getModel();\n            let registration;\n            let isRegistered = false;\n            const disable = () => {\n                registration === null || registration === void 0 ? void 0 : registration.dispose();\n                isRegistered = false;\n            };\n            const enable = () => {\n                if (!isRegistered) {\n                    registration = this._languageFeaturesService.completionProvider.register({\n                        language: model.getLanguageId(),\n                        pattern: model.uri.fsPath,\n                        scheme: model.uri.scheme,\n                        exclusive: true\n                    }, provider);\n                    this._snippetListener.add(registration);\n                    isRegistered = true;\n                }\n            };\n            this._choiceCompletions = { provider, enable, disable };\n        }\n        this._updateState();\n        this._snippetListener.add(this._editor.onDidChangeModelContent(e => e.isFlush && this.cancel()));\n        this._snippetListener.add(this._editor.onDidChangeModel(() => this.cancel()));\n        this._snippetListener.add(this._editor.onDidChangeCursorSelection(() => this._updateState()));\n    }\n    _updateState() {\n        if (!this._session || !this._editor.hasModel()) {\n            // canceled in the meanwhile\n            return;\n        }\n        if (this._modelVersionId === this._editor.getModel().getAlternativeVersionId()) {\n            // undo until the 'before' state happened\n            // and makes use cancel snippet mode\n            return this.cancel();\n        }\n        if (!this._session.hasPlaceholder) {\n            // don't listen for selection changes and don't\n            // update context keys when the snippet is plain text\n            return this.cancel();\n        }\n        if (this._session.isAtLastPlaceholder || !this._session.isSelectionWithinPlaceholders()) {\n            this._editor.getModel().pushStackElement();\n            return this.cancel();\n        }\n        this._inSnippet.set(true);\n        this._hasPrevTabstop.set(!this._session.isAtFirstPlaceholder);\n        this._hasNextTabstop.set(!this._session.isAtLastPlaceholder);\n        this._handleChoice();\n    }\n    _handleChoice() {\n        var _a;\n        if (!this._session || !this._editor.hasModel()) {\n            this._currentChoice = undefined;\n            return;\n        }\n        const { activeChoice } = this._session;\n        if (!activeChoice || !this._choiceCompletions) {\n            (_a = this._choiceCompletions) === null || _a === void 0 ? void 0 : _a.disable();\n            this._currentChoice = undefined;\n            return;\n        }\n        if (this._currentChoice !== activeChoice.choice) {\n            this._currentChoice = activeChoice.choice;\n            this._choiceCompletions.enable();\n            // trigger suggest with the special choice completion provider\n            queueMicrotask(() => {\n                showSimpleSuggestions(this._editor, this._choiceCompletions.provider);\n            });\n        }\n    }\n    finish() {\n        while (this._inSnippet.get()) {\n            this.next();\n        }\n    }\n    cancel(resetSelection = false) {\n        var _a;\n        this._inSnippet.reset();\n        this._hasPrevTabstop.reset();\n        this._hasNextTabstop.reset();\n        this._snippetListener.clear();\n        this._currentChoice = undefined;\n        (_a = this._session) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._session = undefined;\n        this._modelVersionId = -1;\n        if (resetSelection) {\n            // reset selection to the primary cursor when being asked\n            // for. this happens when explicitly cancelling snippet mode,\n            // e.g. when pressing ESC\n            this._editor.setSelections([this._editor.getSelection()]);\n        }\n    }\n    prev() {\n        var _a;\n        (_a = this._session) === null || _a === void 0 ? void 0 : _a.prev();\n        this._updateState();\n    }\n    next() {\n        var _a;\n        (_a = this._session) === null || _a === void 0 ? void 0 : _a.next();\n        this._updateState();\n    }\n    isInSnippet() {\n        return Boolean(this._inSnippet.get());\n    }\n};\nSnippetController2.ID = 'snippetController2';\nSnippetController2.InSnippetMode = new RawContextKey('inSnippetMode', false, localize('inSnippetMode', \"Whether the editor in current in snippet mode\"));\nSnippetController2.HasNextTabstop = new RawContextKey('hasNextTabstop', false, localize('hasNextTabstop', \"Whether there is a next tab stop when in snippet mode\"));\nSnippetController2.HasPrevTabstop = new RawContextKey('hasPrevTabstop', false, localize('hasPrevTabstop', \"Whether there is a previous tab stop when in snippet mode\"));\nSnippetController2 = SnippetController2_1 = __decorate([\n    __param(1, ILogService),\n    __param(2, ILanguageFeaturesService),\n    __param(3, IContextKeyService),\n    __param(4, ILanguageConfigurationService)\n], SnippetController2);\nexport { SnippetController2 };\nregisterEditorContribution(SnippetController2.ID, SnippetController2, 4 /* EditorContributionInstantiation.Lazy */);\nconst CommandCtor = EditorCommand.bindToContribution(SnippetController2.get);\nregisterEditorCommand(new CommandCtor({\n    id: 'jumpToNextSnippetPlaceholder',\n    precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasNextTabstop),\n    handler: ctrl => ctrl.next(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 30,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2 /* KeyCode.Tab */\n    }\n}));\nregisterEditorCommand(new CommandCtor({\n    id: 'jumpToPrevSnippetPlaceholder',\n    precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasPrevTabstop),\n    handler: ctrl => ctrl.prev(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 30,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */\n    }\n}));\nregisterEditorCommand(new CommandCtor({\n    id: 'leaveSnippet',\n    precondition: SnippetController2.InSnippetMode,\n    handler: ctrl => ctrl.cancel(true),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 30,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 9 /* KeyCode.Escape */,\n        secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n    }\n}));\nregisterEditorCommand(new CommandCtor({\n    id: 'acceptSnippet',\n    precondition: SnippetController2.InSnippetMode,\n    handler: ctrl => ctrl.finish(),\n    // kbOpts: {\n    // \tweight: KeybindingWeight.EditorContrib + 30,\n    // \tkbExpr: EditorContextKeys.textFocus,\n    // \tprimary: KeyCode.Enter,\n    // }\n}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class Scanner {\n    constructor() {\n        this.value = '';\n        this.pos = 0;\n    }\n    static isDigitCharacter(ch) {\n        return ch >= 48 /* CharCode.Digit0 */ && ch <= 57 /* CharCode.Digit9 */;\n    }\n    static isVariableCharacter(ch) {\n        return ch === 95 /* CharCode.Underline */\n            || (ch >= 97 /* CharCode.a */ && ch <= 122 /* CharCode.z */)\n            || (ch >= 65 /* CharCode.A */ && ch <= 90 /* CharCode.Z */);\n    }\n    text(value) {\n        this.value = value;\n        this.pos = 0;\n    }\n    tokenText(token) {\n        return this.value.substr(token.pos, token.len);\n    }\n    next() {\n        if (this.pos >= this.value.length) {\n            return { type: 14 /* TokenType.EOF */, pos: this.pos, len: 0 };\n        }\n        const pos = this.pos;\n        let len = 0;\n        let ch = this.value.charCodeAt(pos);\n        let type;\n        // static types\n        type = Scanner._table[ch];\n        if (typeof type === 'number') {\n            this.pos += 1;\n            return { type, pos, len: 1 };\n        }\n        // number\n        if (Scanner.isDigitCharacter(ch)) {\n            type = 8 /* TokenType.Int */;\n            do {\n                len += 1;\n                ch = this.value.charCodeAt(pos + len);\n            } while (Scanner.isDigitCharacter(ch));\n            this.pos += len;\n            return { type, pos, len };\n        }\n        // variable name\n        if (Scanner.isVariableCharacter(ch)) {\n            type = 9 /* TokenType.VariableName */;\n            do {\n                ch = this.value.charCodeAt(pos + (++len));\n            } while (Scanner.isVariableCharacter(ch) || Scanner.isDigitCharacter(ch));\n            this.pos += len;\n            return { type, pos, len };\n        }\n        // format\n        type = 10 /* TokenType.Format */;\n        do {\n            len += 1;\n            ch = this.value.charCodeAt(pos + len);\n        } while (!isNaN(ch)\n            && typeof Scanner._table[ch] === 'undefined' // not static token\n            && !Scanner.isDigitCharacter(ch) // not number\n            && !Scanner.isVariableCharacter(ch) // not variable\n        );\n        this.pos += len;\n        return { type, pos, len };\n    }\n}\nScanner._table = {\n    [36 /* CharCode.DollarSign */]: 0 /* TokenType.Dollar */,\n    [58 /* CharCode.Colon */]: 1 /* TokenType.Colon */,\n    [44 /* CharCode.Comma */]: 2 /* TokenType.Comma */,\n    [123 /* CharCode.OpenCurlyBrace */]: 3 /* TokenType.CurlyOpen */,\n    [125 /* CharCode.CloseCurlyBrace */]: 4 /* TokenType.CurlyClose */,\n    [92 /* CharCode.Backslash */]: 5 /* TokenType.Backslash */,\n    [47 /* CharCode.Slash */]: 6 /* TokenType.Forwardslash */,\n    [124 /* CharCode.Pipe */]: 7 /* TokenType.Pipe */,\n    [43 /* CharCode.Plus */]: 11 /* TokenType.Plus */,\n    [45 /* CharCode.Dash */]: 12 /* TokenType.Dash */,\n    [63 /* CharCode.QuestionMark */]: 13 /* TokenType.QuestionMark */,\n};\nexport class Marker {\n    constructor() {\n        this._children = [];\n    }\n    appendChild(child) {\n        if (child instanceof Text && this._children[this._children.length - 1] instanceof Text) {\n            // this and previous child are text -> merge them\n            this._children[this._children.length - 1].value += child.value;\n        }\n        else {\n            // normal adoption of child\n            child.parent = this;\n            this._children.push(child);\n        }\n        return this;\n    }\n    replace(child, others) {\n        const { parent } = child;\n        const idx = parent.children.indexOf(child);\n        const newChildren = parent.children.slice(0);\n        newChildren.splice(idx, 1, ...others);\n        parent._children = newChildren;\n        (function _fixParent(children, parent) {\n            for (const child of children) {\n                child.parent = parent;\n                _fixParent(child.children, child);\n            }\n        })(others, parent);\n    }\n    get children() {\n        return this._children;\n    }\n    get rightMostDescendant() {\n        if (this._children.length > 0) {\n            return this._children[this._children.length - 1].rightMostDescendant;\n        }\n        return this;\n    }\n    get snippet() {\n        let candidate = this;\n        while (true) {\n            if (!candidate) {\n                return undefined;\n            }\n            if (candidate instanceof TextmateSnippet) {\n                return candidate;\n            }\n            candidate = candidate.parent;\n        }\n    }\n    toString() {\n        return this.children.reduce((prev, cur) => prev + cur.toString(), '');\n    }\n    len() {\n        return 0;\n    }\n}\nexport class Text extends Marker {\n    constructor(value) {\n        super();\n        this.value = value;\n    }\n    toString() {\n        return this.value;\n    }\n    len() {\n        return this.value.length;\n    }\n    clone() {\n        return new Text(this.value);\n    }\n}\nexport class TransformableMarker extends Marker {\n}\nexport class Placeholder extends TransformableMarker {\n    static compareByIndex(a, b) {\n        if (a.index === b.index) {\n            return 0;\n        }\n        else if (a.isFinalTabstop) {\n            return 1;\n        }\n        else if (b.isFinalTabstop) {\n            return -1;\n        }\n        else if (a.index < b.index) {\n            return -1;\n        }\n        else if (a.index > b.index) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    constructor(index) {\n        super();\n        this.index = index;\n    }\n    get isFinalTabstop() {\n        return this.index === 0;\n    }\n    get choice() {\n        return this._children.length === 1 && this._children[0] instanceof Choice\n            ? this._children[0]\n            : undefined;\n    }\n    clone() {\n        const ret = new Placeholder(this.index);\n        if (this.transform) {\n            ret.transform = this.transform.clone();\n        }\n        ret._children = this.children.map(child => child.clone());\n        return ret;\n    }\n}\nexport class Choice extends Marker {\n    constructor() {\n        super(...arguments);\n        this.options = [];\n    }\n    appendChild(marker) {\n        if (marker instanceof Text) {\n            marker.parent = this;\n            this.options.push(marker);\n        }\n        return this;\n    }\n    toString() {\n        return this.options[0].value;\n    }\n    len() {\n        return this.options[0].len();\n    }\n    clone() {\n        const ret = new Choice();\n        this.options.forEach(ret.appendChild, ret);\n        return ret;\n    }\n}\nexport class Transform extends Marker {\n    constructor() {\n        super(...arguments);\n        this.regexp = new RegExp('');\n    }\n    resolve(value) {\n        const _this = this;\n        let didMatch = false;\n        let ret = value.replace(this.regexp, function () {\n            didMatch = true;\n            return _this._replace(Array.prototype.slice.call(arguments, 0, -2));\n        });\n        // when the regex didn't match and when the transform has\n        // else branches, then run those\n        if (!didMatch && this._children.some(child => child instanceof FormatString && Boolean(child.elseValue))) {\n            ret = this._replace([]);\n        }\n        return ret;\n    }\n    _replace(groups) {\n        let ret = '';\n        for (const marker of this._children) {\n            if (marker instanceof FormatString) {\n                let value = groups[marker.index] || '';\n                value = marker.resolve(value);\n                ret += value;\n            }\n            else {\n                ret += marker.toString();\n            }\n        }\n        return ret;\n    }\n    toString() {\n        return '';\n    }\n    clone() {\n        const ret = new Transform();\n        ret.regexp = new RegExp(this.regexp.source, '' + (this.regexp.ignoreCase ? 'i' : '') + (this.regexp.global ? 'g' : ''));\n        ret._children = this.children.map(child => child.clone());\n        return ret;\n    }\n}\nexport class FormatString extends Marker {\n    constructor(index, shorthandName, ifValue, elseValue) {\n        super();\n        this.index = index;\n        this.shorthandName = shorthandName;\n        this.ifValue = ifValue;\n        this.elseValue = elseValue;\n    }\n    resolve(value) {\n        if (this.shorthandName === 'upcase') {\n            return !value ? '' : value.toLocaleUpperCase();\n        }\n        else if (this.shorthandName === 'downcase') {\n            return !value ? '' : value.toLocaleLowerCase();\n        }\n        else if (this.shorthandName === 'capitalize') {\n            return !value ? '' : (value[0].toLocaleUpperCase() + value.substr(1));\n        }\n        else if (this.shorthandName === 'pascalcase') {\n            return !value ? '' : this._toPascalCase(value);\n        }\n        else if (this.shorthandName === 'camelcase') {\n            return !value ? '' : this._toCamelCase(value);\n        }\n        else if (Boolean(value) && typeof this.ifValue === 'string') {\n            return this.ifValue;\n        }\n        else if (!Boolean(value) && typeof this.elseValue === 'string') {\n            return this.elseValue;\n        }\n        else {\n            return value || '';\n        }\n    }\n    _toPascalCase(value) {\n        const match = value.match(/[a-z0-9]+/gi);\n        if (!match) {\n            return value;\n        }\n        return match.map(word => {\n            return word.charAt(0).toUpperCase() + word.substr(1);\n        })\n            .join('');\n    }\n    _toCamelCase(value) {\n        const match = value.match(/[a-z0-9]+/gi);\n        if (!match) {\n            return value;\n        }\n        return match.map((word, index) => {\n            if (index === 0) {\n                return word.charAt(0).toLowerCase() + word.substr(1);\n            }\n            return word.charAt(0).toUpperCase() + word.substr(1);\n        })\n            .join('');\n    }\n    clone() {\n        const ret = new FormatString(this.index, this.shorthandName, this.ifValue, this.elseValue);\n        return ret;\n    }\n}\nexport class Variable extends TransformableMarker {\n    constructor(name) {\n        super();\n        this.name = name;\n    }\n    resolve(resolver) {\n        let value = resolver.resolve(this);\n        if (this.transform) {\n            value = this.transform.resolve(value || '');\n        }\n        if (value !== undefined) {\n            this._children = [new Text(value)];\n            return true;\n        }\n        return false;\n    }\n    clone() {\n        const ret = new Variable(this.name);\n        if (this.transform) {\n            ret.transform = this.transform.clone();\n        }\n        ret._children = this.children.map(child => child.clone());\n        return ret;\n    }\n}\nfunction walk(marker, visitor) {\n    const stack = [...marker];\n    while (stack.length > 0) {\n        const marker = stack.shift();\n        const recurse = visitor(marker);\n        if (!recurse) {\n            break;\n        }\n        stack.unshift(...marker.children);\n    }\n}\nexport class TextmateSnippet extends Marker {\n    get placeholderInfo() {\n        if (!this._placeholders) {\n            // fill in placeholders\n            const all = [];\n            let last;\n            this.walk(function (candidate) {\n                if (candidate instanceof Placeholder) {\n                    all.push(candidate);\n                    last = !last || last.index < candidate.index ? candidate : last;\n                }\n                return true;\n            });\n            this._placeholders = { all, last };\n        }\n        return this._placeholders;\n    }\n    get placeholders() {\n        const { all } = this.placeholderInfo;\n        return all;\n    }\n    offset(marker) {\n        let pos = 0;\n        let found = false;\n        this.walk(candidate => {\n            if (candidate === marker) {\n                found = true;\n                return false;\n            }\n            pos += candidate.len();\n            return true;\n        });\n        if (!found) {\n            return -1;\n        }\n        return pos;\n    }\n    fullLen(marker) {\n        let ret = 0;\n        walk([marker], marker => {\n            ret += marker.len();\n            return true;\n        });\n        return ret;\n    }\n    enclosingPlaceholders(placeholder) {\n        const ret = [];\n        let { parent } = placeholder;\n        while (parent) {\n            if (parent instanceof Placeholder) {\n                ret.push(parent);\n            }\n            parent = parent.parent;\n        }\n        return ret;\n    }\n    resolveVariables(resolver) {\n        this.walk(candidate => {\n            if (candidate instanceof Variable) {\n                if (candidate.resolve(resolver)) {\n                    this._placeholders = undefined;\n                }\n            }\n            return true;\n        });\n        return this;\n    }\n    appendChild(child) {\n        this._placeholders = undefined;\n        return super.appendChild(child);\n    }\n    replace(child, others) {\n        this._placeholders = undefined;\n        return super.replace(child, others);\n    }\n    clone() {\n        const ret = new TextmateSnippet();\n        this._children = this.children.map(child => child.clone());\n        return ret;\n    }\n    walk(visitor) {\n        walk(this.children, visitor);\n    }\n}\nexport class SnippetParser {\n    constructor() {\n        this._scanner = new Scanner();\n        this._token = { type: 14 /* TokenType.EOF */, pos: 0, len: 0 };\n    }\n    static escape(value) {\n        return value.replace(/\\$|}|\\\\/g, '\\\\$&');\n    }\n    static guessNeedsClipboard(template) {\n        return /\\${?CLIPBOARD/.test(template);\n    }\n    parse(value, insertFinalTabstop, enforceFinalTabstop) {\n        const snippet = new TextmateSnippet();\n        this.parseFragment(value, snippet);\n        this.ensureFinalTabstop(snippet, enforceFinalTabstop !== null && enforceFinalTabstop !== void 0 ? enforceFinalTabstop : false, insertFinalTabstop !== null && insertFinalTabstop !== void 0 ? insertFinalTabstop : false);\n        return snippet;\n    }\n    parseFragment(value, snippet) {\n        const offset = snippet.children.length;\n        this._scanner.text(value);\n        this._token = this._scanner.next();\n        while (this._parse(snippet)) {\n            // nothing\n        }\n        // fill in values for placeholders. the first placeholder of an index\n        // that has a value defines the value for all placeholders with that index\n        const placeholderDefaultValues = new Map();\n        const incompletePlaceholders = [];\n        snippet.walk(marker => {\n            if (marker instanceof Placeholder) {\n                if (marker.isFinalTabstop) {\n                    placeholderDefaultValues.set(0, undefined);\n                }\n                else if (!placeholderDefaultValues.has(marker.index) && marker.children.length > 0) {\n                    placeholderDefaultValues.set(marker.index, marker.children);\n                }\n                else {\n                    incompletePlaceholders.push(marker);\n                }\n            }\n            return true;\n        });\n        const fillInIncompletePlaceholder = (placeholder, stack) => {\n            const defaultValues = placeholderDefaultValues.get(placeholder.index);\n            if (!defaultValues) {\n                return;\n            }\n            const clone = new Placeholder(placeholder.index);\n            clone.transform = placeholder.transform;\n            for (const child of defaultValues) {\n                const newChild = child.clone();\n                clone.appendChild(newChild);\n                // \"recurse\" on children that are again placeholders\n                if (newChild instanceof Placeholder && placeholderDefaultValues.has(newChild.index) && !stack.has(newChild.index)) {\n                    stack.add(newChild.index);\n                    fillInIncompletePlaceholder(newChild, stack);\n                    stack.delete(newChild.index);\n                }\n            }\n            snippet.replace(placeholder, [clone]);\n        };\n        const stack = new Set();\n        for (const placeholder of incompletePlaceholders) {\n            fillInIncompletePlaceholder(placeholder, stack);\n        }\n        return snippet.children.slice(offset);\n    }\n    ensureFinalTabstop(snippet, enforceFinalTabstop, insertFinalTabstop) {\n        if (enforceFinalTabstop || insertFinalTabstop && snippet.placeholders.length > 0) {\n            const finalTabstop = snippet.placeholders.find(p => p.index === 0);\n            if (!finalTabstop) {\n                // the snippet uses placeholders but has no\n                // final tabstop defined -> insert at the end\n                snippet.appendChild(new Placeholder(0));\n            }\n        }\n    }\n    _accept(type, value) {\n        if (type === undefined || this._token.type === type) {\n            const ret = !value ? true : this._scanner.tokenText(this._token);\n            this._token = this._scanner.next();\n            return ret;\n        }\n        return false;\n    }\n    _backTo(token) {\n        this._scanner.pos = token.pos + token.len;\n        this._token = token;\n        return false;\n    }\n    _until(type) {\n        const start = this._token;\n        while (this._token.type !== type) {\n            if (this._token.type === 14 /* TokenType.EOF */) {\n                return false;\n            }\n            else if (this._token.type === 5 /* TokenType.Backslash */) {\n                const nextToken = this._scanner.next();\n                if (nextToken.type !== 0 /* TokenType.Dollar */\n                    && nextToken.type !== 4 /* TokenType.CurlyClose */\n                    && nextToken.type !== 5 /* TokenType.Backslash */) {\n                    return false;\n                }\n            }\n            this._token = this._scanner.next();\n        }\n        const value = this._scanner.value.substring(start.pos, this._token.pos).replace(/\\\\(\\$|}|\\\\)/g, '$1');\n        this._token = this._scanner.next();\n        return value;\n    }\n    _parse(marker) {\n        return this._parseEscaped(marker)\n            || this._parseTabstopOrVariableName(marker)\n            || this._parseComplexPlaceholder(marker)\n            || this._parseComplexVariable(marker)\n            || this._parseAnything(marker);\n    }\n    // \\$, \\\\, \\} -> just text\n    _parseEscaped(marker) {\n        let value;\n        if (value = this._accept(5 /* TokenType.Backslash */, true)) {\n            // saw a backslash, append escaped token or that backslash\n            value = this._accept(0 /* TokenType.Dollar */, true)\n                || this._accept(4 /* TokenType.CurlyClose */, true)\n                || this._accept(5 /* TokenType.Backslash */, true)\n                || value;\n            marker.appendChild(new Text(value));\n            return true;\n        }\n        return false;\n    }\n    // $foo -> variable, $1 -> tabstop\n    _parseTabstopOrVariableName(parent) {\n        let value;\n        const token = this._token;\n        const match = this._accept(0 /* TokenType.Dollar */)\n            && (value = this._accept(9 /* TokenType.VariableName */, true) || this._accept(8 /* TokenType.Int */, true));\n        if (!match) {\n            return this._backTo(token);\n        }\n        parent.appendChild(/^\\d+$/.test(value)\n            ? new Placeholder(Number(value))\n            : new Variable(value));\n        return true;\n    }\n    // ${1:<children>}, ${1} -> placeholder\n    _parseComplexPlaceholder(parent) {\n        let index;\n        const token = this._token;\n        const match = this._accept(0 /* TokenType.Dollar */)\n            && this._accept(3 /* TokenType.CurlyOpen */)\n            && (index = this._accept(8 /* TokenType.Int */, true));\n        if (!match) {\n            return this._backTo(token);\n        }\n        const placeholder = new Placeholder(Number(index));\n        if (this._accept(1 /* TokenType.Colon */)) {\n            // ${1:<children>}\n            while (true) {\n                // ...} -> done\n                if (this._accept(4 /* TokenType.CurlyClose */)) {\n                    parent.appendChild(placeholder);\n                    return true;\n                }\n                if (this._parse(placeholder)) {\n                    continue;\n                }\n                // fallback\n                parent.appendChild(new Text('${' + index + ':'));\n                placeholder.children.forEach(parent.appendChild, parent);\n                return true;\n            }\n        }\n        else if (placeholder.index > 0 && this._accept(7 /* TokenType.Pipe */)) {\n            // ${1|one,two,three|}\n            const choice = new Choice();\n            while (true) {\n                if (this._parseChoiceElement(choice)) {\n                    if (this._accept(2 /* TokenType.Comma */)) {\n                        // opt, -> more\n                        continue;\n                    }\n                    if (this._accept(7 /* TokenType.Pipe */)) {\n                        placeholder.appendChild(choice);\n                        if (this._accept(4 /* TokenType.CurlyClose */)) {\n                            // ..|} -> done\n                            parent.appendChild(placeholder);\n                            return true;\n                        }\n                    }\n                }\n                this._backTo(token);\n                return false;\n            }\n        }\n        else if (this._accept(6 /* TokenType.Forwardslash */)) {\n            // ${1/<regex>/<format>/<options>}\n            if (this._parseTransform(placeholder)) {\n                parent.appendChild(placeholder);\n                return true;\n            }\n            this._backTo(token);\n            return false;\n        }\n        else if (this._accept(4 /* TokenType.CurlyClose */)) {\n            // ${1}\n            parent.appendChild(placeholder);\n            return true;\n        }\n        else {\n            // ${1 <- missing curly or colon\n            return this._backTo(token);\n        }\n    }\n    _parseChoiceElement(parent) {\n        const token = this._token;\n        const values = [];\n        while (true) {\n            if (this._token.type === 2 /* TokenType.Comma */ || this._token.type === 7 /* TokenType.Pipe */) {\n                break;\n            }\n            let value;\n            if (value = this._accept(5 /* TokenType.Backslash */, true)) {\n                // \\, \\|, or \\\\\n                value = this._accept(2 /* TokenType.Comma */, true)\n                    || this._accept(7 /* TokenType.Pipe */, true)\n                    || this._accept(5 /* TokenType.Backslash */, true)\n                    || value;\n            }\n            else {\n                value = this._accept(undefined, true);\n            }\n            if (!value) {\n                // EOF\n                this._backTo(token);\n                return false;\n            }\n            values.push(value);\n        }\n        if (values.length === 0) {\n            this._backTo(token);\n            return false;\n        }\n        parent.appendChild(new Text(values.join('')));\n        return true;\n    }\n    // ${foo:<children>}, ${foo} -> variable\n    _parseComplexVariable(parent) {\n        let name;\n        const token = this._token;\n        const match = this._accept(0 /* TokenType.Dollar */)\n            && this._accept(3 /* TokenType.CurlyOpen */)\n            && (name = this._accept(9 /* TokenType.VariableName */, true));\n        if (!match) {\n            return this._backTo(token);\n        }\n        const variable = new Variable(name);\n        if (this._accept(1 /* TokenType.Colon */)) {\n            // ${foo:<children>}\n            while (true) {\n                // ...} -> done\n                if (this._accept(4 /* TokenType.CurlyClose */)) {\n                    parent.appendChild(variable);\n                    return true;\n                }\n                if (this._parse(variable)) {\n                    continue;\n                }\n                // fallback\n                parent.appendChild(new Text('${' + name + ':'));\n                variable.children.forEach(parent.appendChild, parent);\n                return true;\n            }\n        }\n        else if (this._accept(6 /* TokenType.Forwardslash */)) {\n            // ${foo/<regex>/<format>/<options>}\n            if (this._parseTransform(variable)) {\n                parent.appendChild(variable);\n                return true;\n            }\n            this._backTo(token);\n            return false;\n        }\n        else if (this._accept(4 /* TokenType.CurlyClose */)) {\n            // ${foo}\n            parent.appendChild(variable);\n            return true;\n        }\n        else {\n            // ${foo <- missing curly or colon\n            return this._backTo(token);\n        }\n    }\n    _parseTransform(parent) {\n        // ...<regex>/<format>/<options>}\n        const transform = new Transform();\n        let regexValue = '';\n        let regexOptions = '';\n        // (1) /regex\n        while (true) {\n            if (this._accept(6 /* TokenType.Forwardslash */)) {\n                break;\n            }\n            let escaped;\n            if (escaped = this._accept(5 /* TokenType.Backslash */, true)) {\n                escaped = this._accept(6 /* TokenType.Forwardslash */, true) || escaped;\n                regexValue += escaped;\n                continue;\n            }\n            if (this._token.type !== 14 /* TokenType.EOF */) {\n                regexValue += this._accept(undefined, true);\n                continue;\n            }\n            return false;\n        }\n        // (2) /format\n        while (true) {\n            if (this._accept(6 /* TokenType.Forwardslash */)) {\n                break;\n            }\n            let escaped;\n            if (escaped = this._accept(5 /* TokenType.Backslash */, true)) {\n                escaped = this._accept(5 /* TokenType.Backslash */, true) || this._accept(6 /* TokenType.Forwardslash */, true) || escaped;\n                transform.appendChild(new Text(escaped));\n                continue;\n            }\n            if (this._parseFormatString(transform) || this._parseAnything(transform)) {\n                continue;\n            }\n            return false;\n        }\n        // (3) /option\n        while (true) {\n            if (this._accept(4 /* TokenType.CurlyClose */)) {\n                break;\n            }\n            if (this._token.type !== 14 /* TokenType.EOF */) {\n                regexOptions += this._accept(undefined, true);\n                continue;\n            }\n            return false;\n        }\n        try {\n            transform.regexp = new RegExp(regexValue, regexOptions);\n        }\n        catch (e) {\n            // invalid regexp\n            return false;\n        }\n        parent.transform = transform;\n        return true;\n    }\n    _parseFormatString(parent) {\n        const token = this._token;\n        if (!this._accept(0 /* TokenType.Dollar */)) {\n            return false;\n        }\n        let complex = false;\n        if (this._accept(3 /* TokenType.CurlyOpen */)) {\n            complex = true;\n        }\n        const index = this._accept(8 /* TokenType.Int */, true);\n        if (!index) {\n            this._backTo(token);\n            return false;\n        }\n        else if (!complex) {\n            // $1\n            parent.appendChild(new FormatString(Number(index)));\n            return true;\n        }\n        else if (this._accept(4 /* TokenType.CurlyClose */)) {\n            // ${1}\n            parent.appendChild(new FormatString(Number(index)));\n            return true;\n        }\n        else if (!this._accept(1 /* TokenType.Colon */)) {\n            this._backTo(token);\n            return false;\n        }\n        if (this._accept(6 /* TokenType.Forwardslash */)) {\n            // ${1:/upcase}\n            const shorthand = this._accept(9 /* TokenType.VariableName */, true);\n            if (!shorthand || !this._accept(4 /* TokenType.CurlyClose */)) {\n                this._backTo(token);\n                return false;\n            }\n            else {\n                parent.appendChild(new FormatString(Number(index), shorthand));\n                return true;\n            }\n        }\n        else if (this._accept(11 /* TokenType.Plus */)) {\n            // ${1:+<if>}\n            const ifValue = this._until(4 /* TokenType.CurlyClose */);\n            if (ifValue) {\n                parent.appendChild(new FormatString(Number(index), undefined, ifValue, undefined));\n                return true;\n            }\n        }\n        else if (this._accept(12 /* TokenType.Dash */)) {\n            // ${2:-<else>}\n            const elseValue = this._until(4 /* TokenType.CurlyClose */);\n            if (elseValue) {\n                parent.appendChild(new FormatString(Number(index), undefined, undefined, elseValue));\n                return true;\n            }\n        }\n        else if (this._accept(13 /* TokenType.QuestionMark */)) {\n            // ${2:?<if>:<else>}\n            const ifValue = this._until(1 /* TokenType.Colon */);\n            if (ifValue) {\n                const elseValue = this._until(4 /* TokenType.CurlyClose */);\n                if (elseValue) {\n                    parent.appendChild(new FormatString(Number(index), undefined, ifValue, elseValue));\n                    return true;\n                }\n            }\n        }\n        else {\n            // ${1:<else>}\n            const elseValue = this._until(4 /* TokenType.CurlyClose */);\n            if (elseValue) {\n                parent.appendChild(new FormatString(Number(index), undefined, undefined, elseValue));\n                return true;\n            }\n        }\n        this._backTo(token);\n        return false;\n    }\n    _parseAnything(marker) {\n        if (this._token.type !== 14 /* TokenType.EOF */) {\n            marker.appendChild(new Text(this._scanner.tokenText(this._token)));\n            this._accept(undefined);\n            return true;\n        }\n        return false;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { normalizeDriveLetter } from '../../../../base/common/labels.js';\nimport * as path from '../../../../base/common/path.js';\nimport { dirname } from '../../../../base/common/resources.js';\nimport { commonPrefixLength, getLeadingWhitespace, isFalsyOrWhitespace, splitLines } from '../../../../base/common/strings.js';\nimport { generateUuid } from '../../../../base/common/uuid.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { Text } from './snippetParser.js';\nimport * as nls from '../../../../nls.js';\nimport { WORKSPACE_EXTENSION, isSingleFolderWorkspaceIdentifier, toWorkspaceIdentifier, isEmptyWorkspaceIdentifier } from '../../../../platform/workspace/common/workspace.js';\nexport const KnownSnippetVariableNames = Object.freeze({\n    'CURRENT_YEAR': true,\n    'CURRENT_YEAR_SHORT': true,\n    'CURRENT_MONTH': true,\n    'CURRENT_DATE': true,\n    'CURRENT_HOUR': true,\n    'CURRENT_MINUTE': true,\n    'CURRENT_SECOND': true,\n    'CURRENT_DAY_NAME': true,\n    'CURRENT_DAY_NAME_SHORT': true,\n    'CURRENT_MONTH_NAME': true,\n    'CURRENT_MONTH_NAME_SHORT': true,\n    'CURRENT_SECONDS_UNIX': true,\n    'CURRENT_TIMEZONE_OFFSET': true,\n    'SELECTION': true,\n    'CLIPBOARD': true,\n    'TM_SELECTED_TEXT': true,\n    'TM_CURRENT_LINE': true,\n    'TM_CURRENT_WORD': true,\n    'TM_LINE_INDEX': true,\n    'TM_LINE_NUMBER': true,\n    'TM_FILENAME': true,\n    'TM_FILENAME_BASE': true,\n    'TM_DIRECTORY': true,\n    'TM_FILEPATH': true,\n    'CURSOR_INDEX': true, // 0-offset\n    'CURSOR_NUMBER': true, // 1-offset\n    'RELATIVE_FILEPATH': true,\n    'BLOCK_COMMENT_START': true,\n    'BLOCK_COMMENT_END': true,\n    'LINE_COMMENT': true,\n    'WORKSPACE_NAME': true,\n    'WORKSPACE_FOLDER': true,\n    'RANDOM': true,\n    'RANDOM_HEX': true,\n    'UUID': true\n});\nexport class CompositeSnippetVariableResolver {\n    constructor(_delegates) {\n        this._delegates = _delegates;\n        //\n    }\n    resolve(variable) {\n        for (const delegate of this._delegates) {\n            const value = delegate.resolve(variable);\n            if (value !== undefined) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n}\nexport class SelectionBasedVariableResolver {\n    constructor(_model, _selection, _selectionIdx, _overtypingCapturer) {\n        this._model = _model;\n        this._selection = _selection;\n        this._selectionIdx = _selectionIdx;\n        this._overtypingCapturer = _overtypingCapturer;\n        //\n    }\n    resolve(variable) {\n        const { name } = variable;\n        if (name === 'SELECTION' || name === 'TM_SELECTED_TEXT') {\n            let value = this._model.getValueInRange(this._selection) || undefined;\n            let isMultiline = this._selection.startLineNumber !== this._selection.endLineNumber;\n            // If there was no selected text, try to get last overtyped text\n            if (!value && this._overtypingCapturer) {\n                const info = this._overtypingCapturer.getLastOvertypedInfo(this._selectionIdx);\n                if (info) {\n                    value = info.value;\n                    isMultiline = info.multiline;\n                }\n            }\n            if (value && isMultiline && variable.snippet) {\n                // Selection is a multiline string which we indentation we now\n                // need to adjust. We compare the indentation of this variable\n                // with the indentation at the editor position and add potential\n                // extra indentation to the value\n                const line = this._model.getLineContent(this._selection.startLineNumber);\n                const lineLeadingWhitespace = getLeadingWhitespace(line, 0, this._selection.startColumn - 1);\n                let varLeadingWhitespace = lineLeadingWhitespace;\n                variable.snippet.walk(marker => {\n                    if (marker === variable) {\n                        return false;\n                    }\n                    if (marker instanceof Text) {\n                        varLeadingWhitespace = getLeadingWhitespace(splitLines(marker.value).pop());\n                    }\n                    return true;\n                });\n                const whitespaceCommonLength = commonPrefixLength(varLeadingWhitespace, lineLeadingWhitespace);\n                value = value.replace(/(\\r\\n|\\r|\\n)(.*)/g, (m, newline, rest) => `${newline}${varLeadingWhitespace.substr(whitespaceCommonLength)}${rest}`);\n            }\n            return value;\n        }\n        else if (name === 'TM_CURRENT_LINE') {\n            return this._model.getLineContent(this._selection.positionLineNumber);\n        }\n        else if (name === 'TM_CURRENT_WORD') {\n            const info = this._model.getWordAtPosition({\n                lineNumber: this._selection.positionLineNumber,\n                column: this._selection.positionColumn\n            });\n            return info && info.word || undefined;\n        }\n        else if (name === 'TM_LINE_INDEX') {\n            return String(this._selection.positionLineNumber - 1);\n        }\n        else if (name === 'TM_LINE_NUMBER') {\n            return String(this._selection.positionLineNumber);\n        }\n        else if (name === 'CURSOR_INDEX') {\n            return String(this._selectionIdx);\n        }\n        else if (name === 'CURSOR_NUMBER') {\n            return String(this._selectionIdx + 1);\n        }\n        return undefined;\n    }\n}\nexport class ModelBasedVariableResolver {\n    constructor(_labelService, _model) {\n        this._labelService = _labelService;\n        this._model = _model;\n        //\n    }\n    resolve(variable) {\n        const { name } = variable;\n        if (name === 'TM_FILENAME') {\n            return path.basename(this._model.uri.fsPath);\n        }\n        else if (name === 'TM_FILENAME_BASE') {\n            const name = path.basename(this._model.uri.fsPath);\n            const idx = name.lastIndexOf('.');\n            if (idx <= 0) {\n                return name;\n            }\n            else {\n                return name.slice(0, idx);\n            }\n        }\n        else if (name === 'TM_DIRECTORY') {\n            if (path.dirname(this._model.uri.fsPath) === '.') {\n                return '';\n            }\n            return this._labelService.getUriLabel(dirname(this._model.uri));\n        }\n        else if (name === 'TM_FILEPATH') {\n            return this._labelService.getUriLabel(this._model.uri);\n        }\n        else if (name === 'RELATIVE_FILEPATH') {\n            return this._labelService.getUriLabel(this._model.uri, { relative: true, noPrefix: true });\n        }\n        return undefined;\n    }\n}\nexport class ClipboardBasedVariableResolver {\n    constructor(_readClipboardText, _selectionIdx, _selectionCount, _spread) {\n        this._readClipboardText = _readClipboardText;\n        this._selectionIdx = _selectionIdx;\n        this._selectionCount = _selectionCount;\n        this._spread = _spread;\n        //\n    }\n    resolve(variable) {\n        if (variable.name !== 'CLIPBOARD') {\n            return undefined;\n        }\n        const clipboardText = this._readClipboardText();\n        if (!clipboardText) {\n            return undefined;\n        }\n        // `spread` is assigning each cursor a line of the clipboard\n        // text whenever there the line count equals the cursor count\n        // and when enabled\n        if (this._spread) {\n            const lines = clipboardText.split(/\\r\\n|\\n|\\r/).filter(s => !isFalsyOrWhitespace(s));\n            if (lines.length === this._selectionCount) {\n                return lines[this._selectionIdx];\n            }\n        }\n        return clipboardText;\n    }\n}\nlet CommentBasedVariableResolver = class CommentBasedVariableResolver {\n    constructor(_model, _selection, _languageConfigurationService) {\n        this._model = _model;\n        this._selection = _selection;\n        this._languageConfigurationService = _languageConfigurationService;\n        //\n    }\n    resolve(variable) {\n        const { name } = variable;\n        const langId = this._model.getLanguageIdAtPosition(this._selection.selectionStartLineNumber, this._selection.selectionStartColumn);\n        const config = this._languageConfigurationService.getLanguageConfiguration(langId).comments;\n        if (!config) {\n            return undefined;\n        }\n        if (name === 'LINE_COMMENT') {\n            return config.lineCommentToken || undefined;\n        }\n        else if (name === 'BLOCK_COMMENT_START') {\n            return config.blockCommentStartToken || undefined;\n        }\n        else if (name === 'BLOCK_COMMENT_END') {\n            return config.blockCommentEndToken || undefined;\n        }\n        return undefined;\n    }\n};\nCommentBasedVariableResolver = __decorate([\n    __param(2, ILanguageConfigurationService)\n], CommentBasedVariableResolver);\nexport { CommentBasedVariableResolver };\nexport class TimeBasedVariableResolver {\n    constructor() {\n        this._date = new Date();\n    }\n    resolve(variable) {\n        const { name } = variable;\n        if (name === 'CURRENT_YEAR') {\n            return String(this._date.getFullYear());\n        }\n        else if (name === 'CURRENT_YEAR_SHORT') {\n            return String(this._date.getFullYear()).slice(-2);\n        }\n        else if (name === 'CURRENT_MONTH') {\n            return String(this._date.getMonth().valueOf() + 1).padStart(2, '0');\n        }\n        else if (name === 'CURRENT_DATE') {\n            return String(this._date.getDate().valueOf()).padStart(2, '0');\n        }\n        else if (name === 'CURRENT_HOUR') {\n            return String(this._date.getHours().valueOf()).padStart(2, '0');\n        }\n        else if (name === 'CURRENT_MINUTE') {\n            return String(this._date.getMinutes().valueOf()).padStart(2, '0');\n        }\n        else if (name === 'CURRENT_SECOND') {\n            return String(this._date.getSeconds().valueOf()).padStart(2, '0');\n        }\n        else if (name === 'CURRENT_DAY_NAME') {\n            return TimeBasedVariableResolver.dayNames[this._date.getDay()];\n        }\n        else if (name === 'CURRENT_DAY_NAME_SHORT') {\n            return TimeBasedVariableResolver.dayNamesShort[this._date.getDay()];\n        }\n        else if (name === 'CURRENT_MONTH_NAME') {\n            return TimeBasedVariableResolver.monthNames[this._date.getMonth()];\n        }\n        else if (name === 'CURRENT_MONTH_NAME_SHORT') {\n            return TimeBasedVariableResolver.monthNamesShort[this._date.getMonth()];\n        }\n        else if (name === 'CURRENT_SECONDS_UNIX') {\n            return String(Math.floor(this._date.getTime() / 1000));\n        }\n        else if (name === 'CURRENT_TIMEZONE_OFFSET') {\n            const rawTimeOffset = this._date.getTimezoneOffset();\n            const sign = rawTimeOffset > 0 ? '-' : '+';\n            const hours = Math.trunc(Math.abs(rawTimeOffset / 60));\n            const hoursString = (hours < 10 ? '0' + hours : hours);\n            const minutes = Math.abs(rawTimeOffset) - hours * 60;\n            const minutesString = (minutes < 10 ? '0' + minutes : minutes);\n            return sign + hoursString + ':' + minutesString;\n        }\n        return undefined;\n    }\n}\nTimeBasedVariableResolver.dayNames = [nls.localize('Sunday', \"Sunday\"), nls.localize('Monday', \"Monday\"), nls.localize('Tuesday', \"Tuesday\"), nls.localize('Wednesday', \"Wednesday\"), nls.localize('Thursday', \"Thursday\"), nls.localize('Friday', \"Friday\"), nls.localize('Saturday', \"Saturday\")];\nTimeBasedVariableResolver.dayNamesShort = [nls.localize('SundayShort', \"Sun\"), nls.localize('MondayShort', \"Mon\"), nls.localize('TuesdayShort', \"Tue\"), nls.localize('WednesdayShort', \"Wed\"), nls.localize('ThursdayShort', \"Thu\"), nls.localize('FridayShort', \"Fri\"), nls.localize('SaturdayShort', \"Sat\")];\nTimeBasedVariableResolver.monthNames = [nls.localize('January', \"January\"), nls.localize('February', \"February\"), nls.localize('March', \"March\"), nls.localize('April', \"April\"), nls.localize('May', \"May\"), nls.localize('June', \"June\"), nls.localize('July', \"July\"), nls.localize('August', \"August\"), nls.localize('September', \"September\"), nls.localize('October', \"October\"), nls.localize('November', \"November\"), nls.localize('December', \"December\")];\nTimeBasedVariableResolver.monthNamesShort = [nls.localize('JanuaryShort', \"Jan\"), nls.localize('FebruaryShort', \"Feb\"), nls.localize('MarchShort', \"Mar\"), nls.localize('AprilShort', \"Apr\"), nls.localize('MayShort', \"May\"), nls.localize('JuneShort', \"Jun\"), nls.localize('JulyShort', \"Jul\"), nls.localize('AugustShort', \"Aug\"), nls.localize('SeptemberShort', \"Sep\"), nls.localize('OctoberShort', \"Oct\"), nls.localize('NovemberShort', \"Nov\"), nls.localize('DecemberShort', \"Dec\")];\nexport class WorkspaceBasedVariableResolver {\n    constructor(_workspaceService) {\n        this._workspaceService = _workspaceService;\n        //\n    }\n    resolve(variable) {\n        if (!this._workspaceService) {\n            return undefined;\n        }\n        const workspaceIdentifier = toWorkspaceIdentifier(this._workspaceService.getWorkspace());\n        if (isEmptyWorkspaceIdentifier(workspaceIdentifier)) {\n            return undefined;\n        }\n        if (variable.name === 'WORKSPACE_NAME') {\n            return this._resolveWorkspaceName(workspaceIdentifier);\n        }\n        else if (variable.name === 'WORKSPACE_FOLDER') {\n            return this._resoveWorkspacePath(workspaceIdentifier);\n        }\n        return undefined;\n    }\n    _resolveWorkspaceName(workspaceIdentifier) {\n        if (isSingleFolderWorkspaceIdentifier(workspaceIdentifier)) {\n            return path.basename(workspaceIdentifier.uri.path);\n        }\n        let filename = path.basename(workspaceIdentifier.configPath.path);\n        if (filename.endsWith(WORKSPACE_EXTENSION)) {\n            filename = filename.substr(0, filename.length - WORKSPACE_EXTENSION.length - 1);\n        }\n        return filename;\n    }\n    _resoveWorkspacePath(workspaceIdentifier) {\n        if (isSingleFolderWorkspaceIdentifier(workspaceIdentifier)) {\n            return normalizeDriveLetter(workspaceIdentifier.uri.fsPath);\n        }\n        const filename = path.basename(workspaceIdentifier.configPath.path);\n        let folderpath = workspaceIdentifier.configPath.fsPath;\n        if (folderpath.endsWith(filename)) {\n            folderpath = folderpath.substr(0, folderpath.length - filename.length - 1);\n        }\n        return (folderpath ? normalizeDriveLetter(folderpath) : '/');\n    }\n}\nexport class RandomBasedVariableResolver {\n    resolve(variable) {\n        const { name } = variable;\n        if (name === 'RANDOM') {\n            return Math.random().toString().slice(-6);\n        }\n        else if (name === 'RANDOM_HEX') {\n            return Math.random().toString(16).slice(-6);\n        }\n        else if (name === 'UUID') {\n            return generateUuid();\n        }\n        return undefined;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar SnippetSession_1;\nimport { groupBy } from '../../../../base/common/arrays.js';\nimport { dispose } from '../../../../base/common/lifecycle.js';\nimport { getLeadingWhitespace } from '../../../../base/common/strings.js';\nimport './snippetSession.css';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nimport { Choice, Placeholder, SnippetParser, Text, TextmateSnippet } from './snippetParser.js';\nimport { ClipboardBasedVariableResolver, CommentBasedVariableResolver, CompositeSnippetVariableResolver, ModelBasedVariableResolver, RandomBasedVariableResolver, SelectionBasedVariableResolver, TimeBasedVariableResolver, WorkspaceBasedVariableResolver } from './snippetVariables.js';\nexport class OneSnippet {\n    constructor(_editor, _snippet, _snippetLineLeadingWhitespace) {\n        this._editor = _editor;\n        this._snippet = _snippet;\n        this._snippetLineLeadingWhitespace = _snippetLineLeadingWhitespace;\n        this._offset = -1;\n        this._nestingLevel = 1;\n        this._placeholderGroups = groupBy(_snippet.placeholders, Placeholder.compareByIndex);\n        this._placeholderGroupsIdx = -1;\n    }\n    initialize(textChange) {\n        this._offset = textChange.newPosition;\n    }\n    dispose() {\n        if (this._placeholderDecorations) {\n            this._editor.removeDecorations([...this._placeholderDecorations.values()]);\n        }\n        this._placeholderGroups.length = 0;\n    }\n    _initDecorations() {\n        if (this._offset === -1) {\n            throw new Error(`Snippet not initialized!`);\n        }\n        if (this._placeholderDecorations) {\n            // already initialized\n            return;\n        }\n        this._placeholderDecorations = new Map();\n        const model = this._editor.getModel();\n        this._editor.changeDecorations(accessor => {\n            // create a decoration for each placeholder\n            for (const placeholder of this._snippet.placeholders) {\n                const placeholderOffset = this._snippet.offset(placeholder);\n                const placeholderLen = this._snippet.fullLen(placeholder);\n                const range = Range.fromPositions(model.getPositionAt(this._offset + placeholderOffset), model.getPositionAt(this._offset + placeholderOffset + placeholderLen));\n                const options = placeholder.isFinalTabstop ? OneSnippet._decor.inactiveFinal : OneSnippet._decor.inactive;\n                const handle = accessor.addDecoration(range, options);\n                this._placeholderDecorations.set(placeholder, handle);\n            }\n        });\n    }\n    move(fwd) {\n        if (!this._editor.hasModel()) {\n            return [];\n        }\n        this._initDecorations();\n        // Transform placeholder text if necessary\n        if (this._placeholderGroupsIdx >= 0) {\n            const operations = [];\n            for (const placeholder of this._placeholderGroups[this._placeholderGroupsIdx]) {\n                // Check if the placeholder has a transformation\n                if (placeholder.transform) {\n                    const id = this._placeholderDecorations.get(placeholder);\n                    const range = this._editor.getModel().getDecorationRange(id);\n                    const currentValue = this._editor.getModel().getValueInRange(range);\n                    const transformedValueLines = placeholder.transform.resolve(currentValue).split(/\\r\\n|\\r|\\n/);\n                    // fix indentation for transformed lines\n                    for (let i = 1; i < transformedValueLines.length; i++) {\n                        transformedValueLines[i] = this._editor.getModel().normalizeIndentation(this._snippetLineLeadingWhitespace + transformedValueLines[i]);\n                    }\n                    operations.push(EditOperation.replace(range, transformedValueLines.join(this._editor.getModel().getEOL())));\n                }\n            }\n            if (operations.length > 0) {\n                this._editor.executeEdits('snippet.placeholderTransform', operations);\n            }\n        }\n        let couldSkipThisPlaceholder = false;\n        if (fwd === true && this._placeholderGroupsIdx < this._placeholderGroups.length - 1) {\n            this._placeholderGroupsIdx += 1;\n            couldSkipThisPlaceholder = true;\n        }\n        else if (fwd === false && this._placeholderGroupsIdx > 0) {\n            this._placeholderGroupsIdx -= 1;\n            couldSkipThisPlaceholder = true;\n        }\n        else {\n            // the selection of the current placeholder might\n            // not acurate any more -> simply restore it\n        }\n        const newSelections = this._editor.getModel().changeDecorations(accessor => {\n            const activePlaceholders = new Set();\n            // change stickiness to always grow when typing at its edges\n            // because these decorations represent the currently active\n            // tabstop.\n            // Special case #1: reaching the final tabstop\n            // Special case #2: placeholders enclosing active placeholders\n            const selections = [];\n            for (const placeholder of this._placeholderGroups[this._placeholderGroupsIdx]) {\n                const id = this._placeholderDecorations.get(placeholder);\n                const range = this._editor.getModel().getDecorationRange(id);\n                selections.push(new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn));\n                // consider to skip this placeholder index when the decoration\n                // range is empty but when the placeholder wasn't. that's a strong\n                // hint that the placeholder has been deleted. (all placeholder must match this)\n                couldSkipThisPlaceholder = couldSkipThisPlaceholder && this._hasPlaceholderBeenCollapsed(placeholder);\n                accessor.changeDecorationOptions(id, placeholder.isFinalTabstop ? OneSnippet._decor.activeFinal : OneSnippet._decor.active);\n                activePlaceholders.add(placeholder);\n                for (const enclosingPlaceholder of this._snippet.enclosingPlaceholders(placeholder)) {\n                    const id = this._placeholderDecorations.get(enclosingPlaceholder);\n                    accessor.changeDecorationOptions(id, enclosingPlaceholder.isFinalTabstop ? OneSnippet._decor.activeFinal : OneSnippet._decor.active);\n                    activePlaceholders.add(enclosingPlaceholder);\n                }\n            }\n            // change stickness to never grow when typing at its edges\n            // so that in-active tabstops never grow\n            for (const [placeholder, id] of this._placeholderDecorations) {\n                if (!activePlaceholders.has(placeholder)) {\n                    accessor.changeDecorationOptions(id, placeholder.isFinalTabstop ? OneSnippet._decor.inactiveFinal : OneSnippet._decor.inactive);\n                }\n            }\n            return selections;\n        });\n        return !couldSkipThisPlaceholder ? newSelections !== null && newSelections !== void 0 ? newSelections : [] : this.move(fwd);\n    }\n    _hasPlaceholderBeenCollapsed(placeholder) {\n        // A placeholder is empty when it wasn't empty when authored but\n        // when its tracking decoration is empty. This also applies to all\n        // potential parent placeholders\n        let marker = placeholder;\n        while (marker) {\n            if (marker instanceof Placeholder) {\n                const id = this._placeholderDecorations.get(marker);\n                const range = this._editor.getModel().getDecorationRange(id);\n                if (range.isEmpty() && marker.toString().length > 0) {\n                    return true;\n                }\n            }\n            marker = marker.parent;\n        }\n        return false;\n    }\n    get isAtFirstPlaceholder() {\n        return this._placeholderGroupsIdx <= 0 || this._placeholderGroups.length === 0;\n    }\n    get isAtLastPlaceholder() {\n        return this._placeholderGroupsIdx === this._placeholderGroups.length - 1;\n    }\n    get hasPlaceholder() {\n        return this._snippet.placeholders.length > 0;\n    }\n    /**\n     * A snippet is trivial when it has no placeholder or only a final placeholder at\n     * its very end\n     */\n    get isTrivialSnippet() {\n        if (this._snippet.placeholders.length === 0) {\n            return true;\n        }\n        if (this._snippet.placeholders.length === 1) {\n            const [placeholder] = this._snippet.placeholders;\n            if (placeholder.isFinalTabstop) {\n                if (this._snippet.rightMostDescendant === placeholder) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    computePossibleSelections() {\n        const result = new Map();\n        for (const placeholdersWithEqualIndex of this._placeholderGroups) {\n            let ranges;\n            for (const placeholder of placeholdersWithEqualIndex) {\n                if (placeholder.isFinalTabstop) {\n                    // ignore those\n                    break;\n                }\n                if (!ranges) {\n                    ranges = [];\n                    result.set(placeholder.index, ranges);\n                }\n                const id = this._placeholderDecorations.get(placeholder);\n                const range = this._editor.getModel().getDecorationRange(id);\n                if (!range) {\n                    // one of the placeholder lost its decoration and\n                    // therefore we bail out and pretend the placeholder\n                    // (with its mirrors) doesn't exist anymore.\n                    result.delete(placeholder.index);\n                    break;\n                }\n                ranges.push(range);\n            }\n        }\n        return result;\n    }\n    get activeChoice() {\n        if (!this._placeholderDecorations) {\n            return undefined;\n        }\n        const placeholder = this._placeholderGroups[this._placeholderGroupsIdx][0];\n        if (!(placeholder === null || placeholder === void 0 ? void 0 : placeholder.choice)) {\n            return undefined;\n        }\n        const id = this._placeholderDecorations.get(placeholder);\n        if (!id) {\n            return undefined;\n        }\n        const range = this._editor.getModel().getDecorationRange(id);\n        if (!range) {\n            return undefined;\n        }\n        return { range, choice: placeholder.choice };\n    }\n    get hasChoice() {\n        let result = false;\n        this._snippet.walk(marker => {\n            result = marker instanceof Choice;\n            return !result;\n        });\n        return result;\n    }\n    merge(others) {\n        const model = this._editor.getModel();\n        this._nestingLevel *= 10;\n        this._editor.changeDecorations(accessor => {\n            // For each active placeholder take one snippet and merge it\n            // in that the placeholder (can be many for `$1foo$1foo`). Because\n            // everything is sorted by editor selection we can simply remove\n            // elements from the beginning of the array\n            for (const placeholder of this._placeholderGroups[this._placeholderGroupsIdx]) {\n                const nested = others.shift();\n                console.assert(nested._offset !== -1);\n                console.assert(!nested._placeholderDecorations);\n                // Massage placeholder-indicies of the nested snippet to be\n                // sorted right after the insertion point. This ensures we move\n                // through the placeholders in the correct order\n                const indexLastPlaceholder = nested._snippet.placeholderInfo.last.index;\n                for (const nestedPlaceholder of nested._snippet.placeholderInfo.all) {\n                    if (nestedPlaceholder.isFinalTabstop) {\n                        nestedPlaceholder.index = placeholder.index + ((indexLastPlaceholder + 1) / this._nestingLevel);\n                    }\n                    else {\n                        nestedPlaceholder.index = placeholder.index + (nestedPlaceholder.index / this._nestingLevel);\n                    }\n                }\n                this._snippet.replace(placeholder, nested._snippet.children);\n                // Remove the placeholder at which position are inserting\n                // the snippet and also remove its decoration.\n                const id = this._placeholderDecorations.get(placeholder);\n                accessor.removeDecoration(id);\n                this._placeholderDecorations.delete(placeholder);\n                // For each *new* placeholder we create decoration to monitor\n                // how and if it grows/shrinks.\n                for (const placeholder of nested._snippet.placeholders) {\n                    const placeholderOffset = nested._snippet.offset(placeholder);\n                    const placeholderLen = nested._snippet.fullLen(placeholder);\n                    const range = Range.fromPositions(model.getPositionAt(nested._offset + placeholderOffset), model.getPositionAt(nested._offset + placeholderOffset + placeholderLen));\n                    const handle = accessor.addDecoration(range, OneSnippet._decor.inactive);\n                    this._placeholderDecorations.set(placeholder, handle);\n                }\n            }\n            // Last, re-create the placeholder groups by sorting placeholders by their index.\n            this._placeholderGroups = groupBy(this._snippet.placeholders, Placeholder.compareByIndex);\n        });\n    }\n}\nOneSnippet._decor = {\n    active: ModelDecorationOptions.register({ description: 'snippet-placeholder-1', stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */, className: 'snippet-placeholder' }),\n    inactive: ModelDecorationOptions.register({ description: 'snippet-placeholder-2', stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */, className: 'snippet-placeholder' }),\n    activeFinal: ModelDecorationOptions.register({ description: 'snippet-placeholder-3', stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */, className: 'finish-snippet-placeholder' }),\n    inactiveFinal: ModelDecorationOptions.register({ description: 'snippet-placeholder-4', stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */, className: 'finish-snippet-placeholder' }),\n};\nconst _defaultOptions = {\n    overwriteBefore: 0,\n    overwriteAfter: 0,\n    adjustWhitespace: true,\n    clipboardText: undefined,\n    overtypingCapturer: undefined\n};\nlet SnippetSession = SnippetSession_1 = class SnippetSession {\n    static adjustWhitespace(model, position, adjustIndentation, snippet, filter) {\n        const line = model.getLineContent(position.lineNumber);\n        const lineLeadingWhitespace = getLeadingWhitespace(line, 0, position.column - 1);\n        // the snippet as inserted\n        let snippetTextString;\n        snippet.walk(marker => {\n            // all text elements that are not inside choice\n            if (!(marker instanceof Text) || marker.parent instanceof Choice) {\n                return true;\n            }\n            // check with filter (iff provided)\n            if (filter && !filter.has(marker)) {\n                return true;\n            }\n            const lines = marker.value.split(/\\r\\n|\\r|\\n/);\n            if (adjustIndentation) {\n                // adjust indentation of snippet test\n                // -the snippet-start doesn't get extra-indented (lineLeadingWhitespace), only normalized\n                // -all N+1 lines get extra-indented and normalized\n                // -the text start get extra-indented and normalized when following a linebreak\n                const offset = snippet.offset(marker);\n                if (offset === 0) {\n                    // snippet start\n                    lines[0] = model.normalizeIndentation(lines[0]);\n                }\n                else {\n                    // check if text start is after a linebreak\n                    snippetTextString = snippetTextString !== null && snippetTextString !== void 0 ? snippetTextString : snippet.toString();\n                    const prevChar = snippetTextString.charCodeAt(offset - 1);\n                    if (prevChar === 10 /* CharCode.LineFeed */ || prevChar === 13 /* CharCode.CarriageReturn */) {\n                        lines[0] = model.normalizeIndentation(lineLeadingWhitespace + lines[0]);\n                    }\n                }\n                for (let i = 1; i < lines.length; i++) {\n                    lines[i] = model.normalizeIndentation(lineLeadingWhitespace + lines[i]);\n                }\n            }\n            const newValue = lines.join(model.getEOL());\n            if (newValue !== marker.value) {\n                marker.parent.replace(marker, [new Text(newValue)]);\n                snippetTextString = undefined;\n            }\n            return true;\n        });\n        return lineLeadingWhitespace;\n    }\n    static adjustSelection(model, selection, overwriteBefore, overwriteAfter) {\n        if (overwriteBefore !== 0 || overwriteAfter !== 0) {\n            // overwrite[Before|After] is compute using the position, not the whole\n            // selection. therefore we adjust the selection around that position\n            const { positionLineNumber, positionColumn } = selection;\n            const positionColumnBefore = positionColumn - overwriteBefore;\n            const positionColumnAfter = positionColumn + overwriteAfter;\n            const range = model.validateRange({\n                startLineNumber: positionLineNumber,\n                startColumn: positionColumnBefore,\n                endLineNumber: positionLineNumber,\n                endColumn: positionColumnAfter\n            });\n            selection = Selection.createWithDirection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn, selection.getDirection());\n        }\n        return selection;\n    }\n    static createEditsAndSnippetsFromSelections(editor, template, overwriteBefore, overwriteAfter, enforceFinalTabstop, adjustWhitespace, clipboardText, overtypingCapturer, languageConfigurationService) {\n        const edits = [];\n        const snippets = [];\n        if (!editor.hasModel()) {\n            return { edits, snippets };\n        }\n        const model = editor.getModel();\n        const workspaceService = editor.invokeWithinContext(accessor => accessor.get(IWorkspaceContextService));\n        const modelBasedVariableResolver = editor.invokeWithinContext(accessor => new ModelBasedVariableResolver(accessor.get(ILabelService), model));\n        const readClipboardText = () => clipboardText;\n        // know what text the overwrite[Before|After] extensions\n        // of the primary curser have selected because only when\n        // secondary selections extend to the same text we can grow them\n        const firstBeforeText = model.getValueInRange(SnippetSession_1.adjustSelection(model, editor.getSelection(), overwriteBefore, 0));\n        const firstAfterText = model.getValueInRange(SnippetSession_1.adjustSelection(model, editor.getSelection(), 0, overwriteAfter));\n        // remember the first non-whitespace column to decide if\n        // `keepWhitespace` should be overruled for secondary selections\n        const firstLineFirstNonWhitespace = model.getLineFirstNonWhitespaceColumn(editor.getSelection().positionLineNumber);\n        // sort selections by their start position but remeber\n        // the original index. that allows you to create correct\n        // offset-based selection logic without changing the\n        // primary selection\n        const indexedSelections = editor.getSelections()\n            .map((selection, idx) => ({ selection, idx }))\n            .sort((a, b) => Range.compareRangesUsingStarts(a.selection, b.selection));\n        for (const { selection, idx } of indexedSelections) {\n            // extend selection with the `overwriteBefore` and `overwriteAfter` and then\n            // compare if this matches the extensions of the primary selection\n            let extensionBefore = SnippetSession_1.adjustSelection(model, selection, overwriteBefore, 0);\n            let extensionAfter = SnippetSession_1.adjustSelection(model, selection, 0, overwriteAfter);\n            if (firstBeforeText !== model.getValueInRange(extensionBefore)) {\n                extensionBefore = selection;\n            }\n            if (firstAfterText !== model.getValueInRange(extensionAfter)) {\n                extensionAfter = selection;\n            }\n            // merge the before and after selection into one\n            const snippetSelection = selection\n                .setStartPosition(extensionBefore.startLineNumber, extensionBefore.startColumn)\n                .setEndPosition(extensionAfter.endLineNumber, extensionAfter.endColumn);\n            const snippet = new SnippetParser().parse(template, true, enforceFinalTabstop);\n            // adjust the template string to match the indentation and\n            // whitespace rules of this insert location (can be different for each cursor)\n            // happens when being asked for (default) or when this is a secondary\n            // cursor and the leading whitespace is different\n            const start = snippetSelection.getStartPosition();\n            const snippetLineLeadingWhitespace = SnippetSession_1.adjustWhitespace(model, start, adjustWhitespace || (idx > 0 && firstLineFirstNonWhitespace !== model.getLineFirstNonWhitespaceColumn(selection.positionLineNumber)), snippet);\n            snippet.resolveVariables(new CompositeSnippetVariableResolver([\n                modelBasedVariableResolver,\n                new ClipboardBasedVariableResolver(readClipboardText, idx, indexedSelections.length, editor.getOption(79 /* EditorOption.multiCursorPaste */) === 'spread'),\n                new SelectionBasedVariableResolver(model, selection, idx, overtypingCapturer),\n                new CommentBasedVariableResolver(model, selection, languageConfigurationService),\n                new TimeBasedVariableResolver,\n                new WorkspaceBasedVariableResolver(workspaceService),\n                new RandomBasedVariableResolver,\n            ]));\n            // store snippets with the index of their originating selection.\n            // that ensures the primiary cursor stays primary despite not being\n            // the one with lowest start position\n            edits[idx] = EditOperation.replace(snippetSelection, snippet.toString());\n            edits[idx].identifier = { major: idx, minor: 0 }; // mark the edit so only our undo edits will be used to generate end cursors\n            edits[idx]._isTracked = true;\n            snippets[idx] = new OneSnippet(editor, snippet, snippetLineLeadingWhitespace);\n        }\n        return { edits, snippets };\n    }\n    static createEditsAndSnippetsFromEdits(editor, snippetEdits, enforceFinalTabstop, adjustWhitespace, clipboardText, overtypingCapturer, languageConfigurationService) {\n        if (!editor.hasModel() || snippetEdits.length === 0) {\n            return { edits: [], snippets: [] };\n        }\n        const edits = [];\n        const model = editor.getModel();\n        const parser = new SnippetParser();\n        const snippet = new TextmateSnippet();\n        // snippet variables resolver\n        const resolver = new CompositeSnippetVariableResolver([\n            editor.invokeWithinContext(accessor => new ModelBasedVariableResolver(accessor.get(ILabelService), model)),\n            new ClipboardBasedVariableResolver(() => clipboardText, 0, editor.getSelections().length, editor.getOption(79 /* EditorOption.multiCursorPaste */) === 'spread'),\n            new SelectionBasedVariableResolver(model, editor.getSelection(), 0, overtypingCapturer),\n            new CommentBasedVariableResolver(model, editor.getSelection(), languageConfigurationService),\n            new TimeBasedVariableResolver,\n            new WorkspaceBasedVariableResolver(editor.invokeWithinContext(accessor => accessor.get(IWorkspaceContextService))),\n            new RandomBasedVariableResolver,\n        ]);\n        //\n        snippetEdits = snippetEdits.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\n        let offset = 0;\n        for (let i = 0; i < snippetEdits.length; i++) {\n            const { range, template } = snippetEdits[i];\n            // gaps between snippet edits are appended as text nodes. this\n            // ensures placeholder-offsets are later correct\n            if (i > 0) {\n                const lastRange = snippetEdits[i - 1].range;\n                const textRange = Range.fromPositions(lastRange.getEndPosition(), range.getStartPosition());\n                const textNode = new Text(model.getValueInRange(textRange));\n                snippet.appendChild(textNode);\n                offset += textNode.value.length;\n            }\n            const newNodes = parser.parseFragment(template, snippet);\n            SnippetSession_1.adjustWhitespace(model, range.getStartPosition(), true, snippet, new Set(newNodes));\n            snippet.resolveVariables(resolver);\n            const snippetText = snippet.toString();\n            const snippetFragmentText = snippetText.slice(offset);\n            offset = snippetText.length;\n            // make edit\n            const edit = EditOperation.replace(range, snippetFragmentText);\n            edit.identifier = { major: i, minor: 0 }; // mark the edit so only our undo edits will be used to generate end cursors\n            edit._isTracked = true;\n            edits.push(edit);\n        }\n        //\n        parser.ensureFinalTabstop(snippet, enforceFinalTabstop, true);\n        return {\n            edits,\n            snippets: [new OneSnippet(editor, snippet, '')]\n        };\n    }\n    constructor(_editor, _template, _options = _defaultOptions, _languageConfigurationService) {\n        this._editor = _editor;\n        this._template = _template;\n        this._options = _options;\n        this._languageConfigurationService = _languageConfigurationService;\n        this._templateMerges = [];\n        this._snippets = [];\n    }\n    dispose() {\n        dispose(this._snippets);\n    }\n    _logInfo() {\n        return `template=\"${this._template}\", merged_templates=\"${this._templateMerges.join(' -> ')}\"`;\n    }\n    insert() {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        // make insert edit and start with first selections\n        const { edits, snippets } = typeof this._template === 'string'\n            ? SnippetSession_1.createEditsAndSnippetsFromSelections(this._editor, this._template, this._options.overwriteBefore, this._options.overwriteAfter, false, this._options.adjustWhitespace, this._options.clipboardText, this._options.overtypingCapturer, this._languageConfigurationService)\n            : SnippetSession_1.createEditsAndSnippetsFromEdits(this._editor, this._template, false, this._options.adjustWhitespace, this._options.clipboardText, this._options.overtypingCapturer, this._languageConfigurationService);\n        this._snippets = snippets;\n        this._editor.executeEdits('snippet', edits, _undoEdits => {\n            // Sometimes, the text buffer will remove automatic whitespace when doing any edits,\n            // so we need to look only at the undo edits relevant for us.\n            // Our edits have an identifier set so that's how we can distinguish them\n            const undoEdits = _undoEdits.filter(edit => !!edit.identifier);\n            for (let idx = 0; idx < snippets.length; idx++) {\n                snippets[idx].initialize(undoEdits[idx].textChange);\n            }\n            if (this._snippets[0].hasPlaceholder) {\n                return this._move(true);\n            }\n            else {\n                return undoEdits\n                    .map(edit => Selection.fromPositions(edit.range.getEndPosition()));\n            }\n        });\n        this._editor.revealRange(this._editor.getSelections()[0]);\n    }\n    merge(template, options = _defaultOptions) {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        this._templateMerges.push([this._snippets[0]._nestingLevel, this._snippets[0]._placeholderGroupsIdx, template]);\n        const { edits, snippets } = SnippetSession_1.createEditsAndSnippetsFromSelections(this._editor, template, options.overwriteBefore, options.overwriteAfter, true, options.adjustWhitespace, options.clipboardText, options.overtypingCapturer, this._languageConfigurationService);\n        this._editor.executeEdits('snippet', edits, _undoEdits => {\n            // Sometimes, the text buffer will remove automatic whitespace when doing any edits,\n            // so we need to look only at the undo edits relevant for us.\n            // Our edits have an identifier set so that's how we can distinguish them\n            const undoEdits = _undoEdits.filter(edit => !!edit.identifier);\n            for (let idx = 0; idx < snippets.length; idx++) {\n                snippets[idx].initialize(undoEdits[idx].textChange);\n            }\n            // Trivial snippets have no placeholder or are just the final placeholder. That means they\n            // are just text insertions and we don't need to merge the nested snippet into the existing\n            // snippet\n            const isTrivialSnippet = snippets[0].isTrivialSnippet;\n            if (!isTrivialSnippet) {\n                for (const snippet of this._snippets) {\n                    snippet.merge(snippets);\n                }\n                console.assert(snippets.length === 0);\n            }\n            if (this._snippets[0].hasPlaceholder && !isTrivialSnippet) {\n                return this._move(undefined);\n            }\n            else {\n                return undoEdits.map(edit => Selection.fromPositions(edit.range.getEndPosition()));\n            }\n        });\n    }\n    next() {\n        const newSelections = this._move(true);\n        this._editor.setSelections(newSelections);\n        this._editor.revealPositionInCenterIfOutsideViewport(newSelections[0].getPosition());\n    }\n    prev() {\n        const newSelections = this._move(false);\n        this._editor.setSelections(newSelections);\n        this._editor.revealPositionInCenterIfOutsideViewport(newSelections[0].getPosition());\n    }\n    _move(fwd) {\n        const selections = [];\n        for (const snippet of this._snippets) {\n            const oneSelection = snippet.move(fwd);\n            selections.push(...oneSelection);\n        }\n        return selections;\n    }\n    get isAtFirstPlaceholder() {\n        return this._snippets[0].isAtFirstPlaceholder;\n    }\n    get isAtLastPlaceholder() {\n        return this._snippets[0].isAtLastPlaceholder;\n    }\n    get hasPlaceholder() {\n        return this._snippets[0].hasPlaceholder;\n    }\n    get hasChoice() {\n        return this._snippets[0].hasChoice;\n    }\n    get activeChoice() {\n        return this._snippets[0].activeChoice;\n    }\n    isSelectionWithinPlaceholders() {\n        if (!this.hasPlaceholder) {\n            return false;\n        }\n        const selections = this._editor.getSelections();\n        if (selections.length < this._snippets.length) {\n            // this means we started snippet mode with N\n            // selections and have M (N > M) selections.\n            // So one snippet is without selection -> cancel\n            return false;\n        }\n        const allPossibleSelections = new Map();\n        for (const snippet of this._snippets) {\n            const possibleSelections = snippet.computePossibleSelections();\n            // for the first snippet find the placeholder (and its ranges)\n            // that contain at least one selection. for all remaining snippets\n            // the same placeholder (and their ranges) must be used.\n            if (allPossibleSelections.size === 0) {\n                for (const [index, ranges] of possibleSelections) {\n                    ranges.sort(Range.compareRangesUsingStarts);\n                    for (const selection of selections) {\n                        if (ranges[0].containsRange(selection)) {\n                            allPossibleSelections.set(index, []);\n                            break;\n                        }\n                    }\n                }\n            }\n            if (allPossibleSelections.size === 0) {\n                // return false if we couldn't associate a selection to\n                // this (the first) snippet\n                return false;\n            }\n            // add selections from 'this' snippet so that we know all\n            // selections for this placeholder\n            allPossibleSelections.forEach((array, index) => {\n                array.push(...possibleSelections.get(index));\n            });\n        }\n        // sort selections (and later placeholder-ranges). then walk both\n        // arrays and make sure the placeholder-ranges contain the corresponding\n        // selection\n        selections.sort(Range.compareRangesUsingStarts);\n        for (const [index, ranges] of allPossibleSelections) {\n            if (ranges.length !== selections.length) {\n                allPossibleSelections.delete(index);\n                continue;\n            }\n            ranges.sort(Range.compareRangesUsingStarts);\n            for (let i = 0; i < ranges.length; i++) {\n                if (!ranges[i].containsRange(selections[i])) {\n                    allPossibleSelections.delete(index);\n                    continue;\n                }\n            }\n        }\n        // from all possible selections we have deleted those\n        // that don't match with the current selection. if we don't\n        // have any left, we don't have a selection anymore\n        return allPossibleSelections.size > 0;\n    }\n};\nSnippetSession = SnippetSession_1 = __decorate([\n    __param(3, ILanguageConfigurationService)\n], SnippetSession);\nexport { SnippetSession };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createTrustedTypesPolicy } from '../../../../base/browser/trustedTypes.js';\nimport { equals } from '../../../../base/common/arrays.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport './stickyScroll.css';\nimport { getColumnOfNodeOffset } from '../../../browser/viewParts/lines/viewLine.js';\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/codeEditor/embeddedCodeEditorWidget.js';\nimport { Position } from '../../../common/core/position.js';\nimport { StringBuilder } from '../../../common/core/stringBuilder.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { foldingCollapsedIcon, foldingExpandedIcon } from '../../folding/browser/foldingDecorations.js';\nexport class StickyScrollWidgetState {\n    constructor(startLineNumbers, endLineNumbers, lastLineRelativePosition, showEndForLine = null) {\n        this.startLineNumbers = startLineNumbers;\n        this.endLineNumbers = endLineNumbers;\n        this.lastLineRelativePosition = lastLineRelativePosition;\n        this.showEndForLine = showEndForLine;\n    }\n    equals(other) {\n        return !!other\n            && this.lastLineRelativePosition === other.lastLineRelativePosition\n            && this.showEndForLine === other.showEndForLine\n            && equals(this.startLineNumbers, other.startLineNumbers)\n            && equals(this.endLineNumbers, other.endLineNumbers);\n    }\n}\nconst _ttPolicy = createTrustedTypesPolicy('stickyScrollViewLayer', { createHTML: value => value });\nconst STICKY_INDEX_ATTR = 'data-sticky-line-index';\nconst STICKY_IS_LINE_ATTR = 'data-sticky-is-line';\nconst STICKY_IS_LINE_NUMBER_ATTR = 'data-sticky-is-line-number';\nconst STICKY_IS_FOLDING_ICON_ATTR = 'data-sticky-is-folding-icon';\nexport class StickyScrollWidget extends Disposable {\n    constructor(_editor) {\n        super();\n        this._editor = _editor;\n        this._foldingIconStore = new DisposableStore();\n        this._rootDomNode = document.createElement('div');\n        this._lineNumbersDomNode = document.createElement('div');\n        this._linesDomNodeScrollable = document.createElement('div');\n        this._linesDomNode = document.createElement('div');\n        this._lineHeight = this._editor.getOption(67 /* EditorOption.lineHeight */);\n        this._renderedStickyLines = [];\n        this._lineNumbers = [];\n        this._lastLineRelativePosition = 0;\n        this._minContentWidthInPx = 0;\n        this._isOnGlyphMargin = false;\n        this._lineNumbersDomNode.className = 'sticky-widget-line-numbers';\n        this._lineNumbersDomNode.setAttribute('role', 'none');\n        this._linesDomNode.className = 'sticky-widget-lines';\n        this._linesDomNode.setAttribute('role', 'list');\n        this._linesDomNodeScrollable.className = 'sticky-widget-lines-scrollable';\n        this._linesDomNodeScrollable.appendChild(this._linesDomNode);\n        this._rootDomNode.className = 'sticky-widget';\n        this._rootDomNode.classList.toggle('peek', _editor instanceof EmbeddedCodeEditorWidget);\n        this._rootDomNode.appendChild(this._lineNumbersDomNode);\n        this._rootDomNode.appendChild(this._linesDomNodeScrollable);\n        const updateScrollLeftPosition = () => {\n            this._linesDomNode.style.left = this._editor.getOption(115 /* EditorOption.stickyScroll */).scrollWithEditor ? `-${this._editor.getScrollLeft()}px` : '0px';\n        };\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(115 /* EditorOption.stickyScroll */)) {\n                updateScrollLeftPosition();\n            }\n            if (e.hasChanged(67 /* EditorOption.lineHeight */)) {\n                this._lineHeight = this._editor.getOption(67 /* EditorOption.lineHeight */);\n            }\n        }));\n        this._register(this._editor.onDidScrollChange((e) => {\n            if (e.scrollLeftChanged) {\n                updateScrollLeftPosition();\n            }\n            if (e.scrollWidthChanged) {\n                this._updateWidgetWidth();\n            }\n        }));\n        this._register(this._editor.onDidChangeModel(() => {\n            updateScrollLeftPosition();\n            this._updateWidgetWidth();\n        }));\n        this._register(this._foldingIconStore);\n        updateScrollLeftPosition();\n        this._register(this._editor.onDidLayoutChange((e) => {\n            this._updateWidgetWidth();\n        }));\n        this._updateWidgetWidth();\n    }\n    get lineNumbers() {\n        return this._lineNumbers;\n    }\n    get lineNumberCount() {\n        return this._lineNumbers.length;\n    }\n    getRenderedStickyLine(lineNumber) {\n        return this._renderedStickyLines.find(stickyLine => stickyLine.lineNumber === lineNumber);\n    }\n    getCurrentLines() {\n        return this._lineNumbers;\n    }\n    setState(_state, foldingModel, _rebuildFromLine) {\n        if (_rebuildFromLine === undefined &&\n            ((!this._previousState && !_state) || (this._previousState && this._previousState.equals(_state)))) {\n            return;\n        }\n        const isWidgetHeightZero = this._isWidgetHeightZero(_state);\n        const state = isWidgetHeightZero ? undefined : _state;\n        const rebuildFromLine = isWidgetHeightZero ? 0 : this._findLineToRebuildWidgetFrom(_state, _rebuildFromLine);\n        this._renderRootNode(state, foldingModel, rebuildFromLine);\n        this._previousState = _state;\n    }\n    _isWidgetHeightZero(state) {\n        if (!state) {\n            return true;\n        }\n        const futureWidgetHeight = state.startLineNumbers.length * this._lineHeight + state.lastLineRelativePosition;\n        if (futureWidgetHeight > 0) {\n            this._lastLineRelativePosition = state.lastLineRelativePosition;\n            const lineNumbers = [...state.startLineNumbers];\n            if (state.showEndForLine !== null) {\n                lineNumbers[state.showEndForLine] = state.endLineNumbers[state.showEndForLine];\n            }\n            this._lineNumbers = lineNumbers;\n        }\n        else {\n            this._lastLineRelativePosition = 0;\n            this._lineNumbers = [];\n        }\n        return futureWidgetHeight === 0;\n    }\n    _findLineToRebuildWidgetFrom(state, _rebuildFromLine) {\n        if (!state || !this._previousState) {\n            return 0;\n        }\n        if (_rebuildFromLine !== undefined) {\n            return _rebuildFromLine;\n        }\n        const previousState = this._previousState;\n        const indexOfLinesAlreadyRendered = state.startLineNumbers.findIndex(startLineNumber => !previousState.startLineNumbers.includes(startLineNumber));\n        return (indexOfLinesAlreadyRendered === -1) ? 0 : indexOfLinesAlreadyRendered;\n    }\n    _updateWidgetWidth() {\n        const layoutInfo = this._editor.getLayoutInfo();\n        const lineNumbersWidth = layoutInfo.contentLeft;\n        this._lineNumbersDomNode.style.width = `${lineNumbersWidth}px`;\n        this._linesDomNodeScrollable.style.setProperty('--vscode-editorStickyScroll-scrollableWidth', `${this._editor.getScrollWidth() - layoutInfo.verticalScrollbarWidth}px`);\n        this._rootDomNode.style.width = `${layoutInfo.width - layoutInfo.verticalScrollbarWidth}px`;\n    }\n    _clearStickyLinesFromLine(clearFromLine) {\n        this._foldingIconStore.clear();\n        // Removing only the lines that need to be rerendered\n        for (let i = clearFromLine; i < this._renderedStickyLines.length; i++) {\n            const stickyLine = this._renderedStickyLines[i];\n            stickyLine.lineNumberDomNode.remove();\n            stickyLine.lineDomNode.remove();\n        }\n        // Keep the lines that need to be updated\n        this._renderedStickyLines = this._renderedStickyLines.slice(0, clearFromLine);\n        this._rootDomNode.style.display = 'none';\n    }\n    _useFoldingOpacityTransition(requireTransitions) {\n        this._lineNumbersDomNode.style.setProperty('--vscode-editorStickyScroll-foldingOpacityTransition', `opacity ${requireTransitions ? 0.5 : 0}s`);\n    }\n    _setFoldingIconsVisibility(allVisible) {\n        for (const line of this._renderedStickyLines) {\n            const foldingIcon = line.foldingIcon;\n            if (!foldingIcon) {\n                continue;\n            }\n            foldingIcon.setVisible(allVisible ? true : foldingIcon.isCollapsed);\n        }\n    }\n    async _renderRootNode(state, foldingModel, rebuildFromLine) {\n        this._clearStickyLinesFromLine(rebuildFromLine);\n        if (!state) {\n            return;\n        }\n        // For existing sticky lines update the top and z-index\n        for (const stickyLine of this._renderedStickyLines) {\n            this._updateTopAndZIndexOfStickyLine(stickyLine);\n        }\n        // For new sticky lines\n        const layoutInfo = this._editor.getLayoutInfo();\n        const linesToRender = this._lineNumbers.slice(rebuildFromLine);\n        for (const [index, line] of linesToRender.entries()) {\n            const stickyLine = this._renderChildNode(index + rebuildFromLine, line, foldingModel, layoutInfo);\n            if (!stickyLine) {\n                continue;\n            }\n            this._linesDomNode.appendChild(stickyLine.lineDomNode);\n            this._lineNumbersDomNode.appendChild(stickyLine.lineNumberDomNode);\n            this._renderedStickyLines.push(stickyLine);\n        }\n        if (foldingModel) {\n            this._setFoldingHoverListeners();\n            this._useFoldingOpacityTransition(!this._isOnGlyphMargin);\n        }\n        const widgetHeight = this._lineNumbers.length * this._lineHeight + this._lastLineRelativePosition;\n        this._rootDomNode.style.display = 'block';\n        this._lineNumbersDomNode.style.height = `${widgetHeight}px`;\n        this._linesDomNodeScrollable.style.height = `${widgetHeight}px`;\n        this._rootDomNode.style.height = `${widgetHeight}px`;\n        this._rootDomNode.style.marginLeft = '0px';\n        this._minContentWidthInPx = Math.max(...this._renderedStickyLines.map(l => l.scrollWidth)) + layoutInfo.verticalScrollbarWidth;\n        this._editor.layoutOverlayWidget(this);\n    }\n    _setFoldingHoverListeners() {\n        const showFoldingControls = this._editor.getOption(110 /* EditorOption.showFoldingControls */);\n        if (showFoldingControls !== 'mouseover') {\n            return;\n        }\n        this._foldingIconStore.add(dom.addDisposableListener(this._lineNumbersDomNode, dom.EventType.MOUSE_ENTER, () => {\n            this._isOnGlyphMargin = true;\n            this._setFoldingIconsVisibility(true);\n        }));\n        this._foldingIconStore.add(dom.addDisposableListener(this._lineNumbersDomNode, dom.EventType.MOUSE_LEAVE, () => {\n            this._isOnGlyphMargin = false;\n            this._useFoldingOpacityTransition(true);\n            this._setFoldingIconsVisibility(false);\n        }));\n    }\n    _renderChildNode(index, line, foldingModel, layoutInfo) {\n        const viewModel = this._editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        const viewLineNumber = viewModel.coordinatesConverter.convertModelPositionToViewPosition(new Position(line, 1)).lineNumber;\n        const lineRenderingData = viewModel.getViewLineRenderingData(viewLineNumber);\n        const lineNumberOption = this._editor.getOption(68 /* EditorOption.lineNumbers */);\n        let actualInlineDecorations;\n        try {\n            actualInlineDecorations = LineDecoration.filter(lineRenderingData.inlineDecorations, viewLineNumber, lineRenderingData.minColumn, lineRenderingData.maxColumn);\n        }\n        catch (err) {\n            actualInlineDecorations = [];\n        }\n        const renderLineInput = new RenderLineInput(true, true, lineRenderingData.content, lineRenderingData.continuesWithWrappedLine, lineRenderingData.isBasicASCII, lineRenderingData.containsRTL, 0, lineRenderingData.tokens, actualInlineDecorations, lineRenderingData.tabSize, lineRenderingData.startVisibleColumn, 1, 1, 1, 500, 'none', true, true, null);\n        const sb = new StringBuilder(2000);\n        const renderOutput = renderViewLine(renderLineInput, sb);\n        let newLine;\n        if (_ttPolicy) {\n            newLine = _ttPolicy.createHTML(sb.build());\n        }\n        else {\n            newLine = sb.build();\n        }\n        const lineHTMLNode = document.createElement('span');\n        lineHTMLNode.setAttribute(STICKY_INDEX_ATTR, String(index));\n        lineHTMLNode.setAttribute(STICKY_IS_LINE_ATTR, '');\n        lineHTMLNode.setAttribute('role', 'listitem');\n        lineHTMLNode.tabIndex = 0;\n        lineHTMLNode.className = 'sticky-line-content';\n        lineHTMLNode.classList.add(`stickyLine${line}`);\n        lineHTMLNode.style.lineHeight = `${this._lineHeight}px`;\n        lineHTMLNode.innerHTML = newLine;\n        const lineNumberHTMLNode = document.createElement('span');\n        lineNumberHTMLNode.setAttribute(STICKY_INDEX_ATTR, String(index));\n        lineNumberHTMLNode.setAttribute(STICKY_IS_LINE_NUMBER_ATTR, '');\n        lineNumberHTMLNode.className = 'sticky-line-number';\n        lineNumberHTMLNode.style.lineHeight = `${this._lineHeight}px`;\n        const lineNumbersWidth = layoutInfo.contentLeft;\n        lineNumberHTMLNode.style.width = `${lineNumbersWidth}px`;\n        const innerLineNumberHTML = document.createElement('span');\n        if (lineNumberOption.renderType === 1 /* RenderLineNumbersType.On */ || lineNumberOption.renderType === 3 /* RenderLineNumbersType.Interval */ && line % 10 === 0) {\n            innerLineNumberHTML.innerText = line.toString();\n        }\n        else if (lineNumberOption.renderType === 2 /* RenderLineNumbersType.Relative */) {\n            innerLineNumberHTML.innerText = Math.abs(line - this._editor.getPosition().lineNumber).toString();\n        }\n        innerLineNumberHTML.className = 'sticky-line-number-inner';\n        innerLineNumberHTML.style.lineHeight = `${this._lineHeight}px`;\n        innerLineNumberHTML.style.width = `${layoutInfo.lineNumbersWidth}px`;\n        innerLineNumberHTML.style.paddingLeft = `${layoutInfo.lineNumbersLeft}px`;\n        lineNumberHTMLNode.appendChild(innerLineNumberHTML);\n        const foldingIcon = this._renderFoldingIconForLine(foldingModel, line);\n        if (foldingIcon) {\n            lineNumberHTMLNode.appendChild(foldingIcon.domNode);\n        }\n        this._editor.applyFontInfo(lineHTMLNode);\n        this._editor.applyFontInfo(innerLineNumberHTML);\n        lineNumberHTMLNode.style.lineHeight = `${this._lineHeight}px`;\n        lineHTMLNode.style.lineHeight = `${this._lineHeight}px`;\n        lineNumberHTMLNode.style.height = `${this._lineHeight}px`;\n        lineHTMLNode.style.height = `${this._lineHeight}px`;\n        const renderedLine = new RenderedStickyLine(index, line, lineHTMLNode, lineNumberHTMLNode, foldingIcon, renderOutput.characterMapping, lineHTMLNode.scrollWidth);\n        return this._updateTopAndZIndexOfStickyLine(renderedLine);\n    }\n    _updateTopAndZIndexOfStickyLine(stickyLine) {\n        var _a;\n        const index = stickyLine.index;\n        const lineHTMLNode = stickyLine.lineDomNode;\n        const lineNumberHTMLNode = stickyLine.lineNumberDomNode;\n        const isLastLine = index === this._lineNumbers.length - 1;\n        const lastLineZIndex = '0';\n        const intermediateLineZIndex = '1';\n        lineHTMLNode.style.zIndex = isLastLine ? lastLineZIndex : intermediateLineZIndex;\n        lineNumberHTMLNode.style.zIndex = isLastLine ? lastLineZIndex : intermediateLineZIndex;\n        const lastLineTop = `${index * this._lineHeight + this._lastLineRelativePosition + (((_a = stickyLine.foldingIcon) === null || _a === void 0 ? void 0 : _a.isCollapsed) ? 1 : 0)}px`;\n        const intermediateLineTop = `${index * this._lineHeight}px`;\n        lineHTMLNode.style.top = isLastLine ? lastLineTop : intermediateLineTop;\n        lineNumberHTMLNode.style.top = isLastLine ? lastLineTop : intermediateLineTop;\n        return stickyLine;\n    }\n    _renderFoldingIconForLine(foldingModel, line) {\n        const showFoldingControls = this._editor.getOption(110 /* EditorOption.showFoldingControls */);\n        if (!foldingModel || showFoldingControls === 'never') {\n            return;\n        }\n        const foldingRegions = foldingModel.regions;\n        const indexOfFoldingRegion = foldingRegions.findRange(line);\n        const startLineNumber = foldingRegions.getStartLineNumber(indexOfFoldingRegion);\n        const isFoldingScope = line === startLineNumber;\n        if (!isFoldingScope) {\n            return;\n        }\n        const isCollapsed = foldingRegions.isCollapsed(indexOfFoldingRegion);\n        const foldingIcon = new StickyFoldingIcon(isCollapsed, startLineNumber, foldingRegions.getEndLineNumber(indexOfFoldingRegion), this._lineHeight);\n        foldingIcon.setVisible(this._isOnGlyphMargin ? true : (isCollapsed || showFoldingControls === 'always'));\n        foldingIcon.domNode.setAttribute(STICKY_IS_FOLDING_ICON_ATTR, '');\n        return foldingIcon;\n    }\n    getId() {\n        return 'editor.contrib.stickyScrollWidget';\n    }\n    getDomNode() {\n        return this._rootDomNode;\n    }\n    getPosition() {\n        return {\n            preference: null\n        };\n    }\n    getMinContentWidthInPx() {\n        return this._minContentWidthInPx;\n    }\n    focusLineWithIndex(index) {\n        if (0 <= index && index < this._renderedStickyLines.length) {\n            this._renderedStickyLines[index].lineDomNode.focus();\n        }\n    }\n    /**\n     * Given a leaf dom node, tries to find the editor position.\n     */\n    getEditorPositionFromNode(spanDomNode) {\n        if (!spanDomNode || spanDomNode.children.length > 0) {\n            // This is not a leaf node\n            return null;\n        }\n        const renderedStickyLine = this._getRenderedStickyLineFromChildDomNode(spanDomNode);\n        if (!renderedStickyLine) {\n            return null;\n        }\n        const column = getColumnOfNodeOffset(renderedStickyLine.characterMapping, spanDomNode, 0);\n        return new Position(renderedStickyLine.lineNumber, column);\n    }\n    getLineNumberFromChildDomNode(domNode) {\n        var _a, _b;\n        return (_b = (_a = this._getRenderedStickyLineFromChildDomNode(domNode)) === null || _a === void 0 ? void 0 : _a.lineNumber) !== null && _b !== void 0 ? _b : null;\n    }\n    _getRenderedStickyLineFromChildDomNode(domNode) {\n        const index = this.getLineIndexFromChildDomNode(domNode);\n        if (index === null || index < 0 || index >= this._renderedStickyLines.length) {\n            return null;\n        }\n        return this._renderedStickyLines[index];\n    }\n    /**\n     * Given a child dom node, tries to find the line number attribute that was stored in the node.\n     * @returns the attribute value or null if none is found.\n     */\n    getLineIndexFromChildDomNode(domNode) {\n        const lineIndex = this._getAttributeValue(domNode, STICKY_INDEX_ATTR);\n        return lineIndex ? parseInt(lineIndex, 10) : null;\n    }\n    /**\n     * Given a child dom node, tries to find if it is (contained in) a sticky line.\n     * @returns a boolean.\n     */\n    isInStickyLine(domNode) {\n        const isInLine = this._getAttributeValue(domNode, STICKY_IS_LINE_ATTR);\n        return isInLine !== undefined;\n    }\n    /**\n     * Given a child dom node, tries to find if this dom node is (contained in) a sticky folding icon.\n     * @returns a boolean.\n     */\n    isInFoldingIconDomNode(domNode) {\n        const isInFoldingIcon = this._getAttributeValue(domNode, STICKY_IS_FOLDING_ICON_ATTR);\n        return isInFoldingIcon !== undefined;\n    }\n    /**\n     * Given the dom node, finds if it or its parent sequence contains the given attribute.\n     * @returns the attribute value or undefined.\n     */\n    _getAttributeValue(domNode, attribute) {\n        while (domNode && domNode !== this._rootDomNode) {\n            const line = domNode.getAttribute(attribute);\n            if (line !== null) {\n                return line;\n            }\n            domNode = domNode.parentElement;\n        }\n        return;\n    }\n}\nclass RenderedStickyLine {\n    constructor(index, lineNumber, lineDomNode, lineNumberDomNode, foldingIcon, characterMapping, scrollWidth) {\n        this.index = index;\n        this.lineNumber = lineNumber;\n        this.lineDomNode = lineDomNode;\n        this.lineNumberDomNode = lineNumberDomNode;\n        this.foldingIcon = foldingIcon;\n        this.characterMapping = characterMapping;\n        this.scrollWidth = scrollWidth;\n    }\n}\nclass StickyFoldingIcon {\n    constructor(isCollapsed, foldingStartLine, foldingEndLine, dimension) {\n        this.isCollapsed = isCollapsed;\n        this.foldingStartLine = foldingStartLine;\n        this.foldingEndLine = foldingEndLine;\n        this.dimension = dimension;\n        this.domNode = document.createElement('div');\n        this.domNode.style.width = `${dimension}px`;\n        this.domNode.style.height = `${dimension}px`;\n        this.domNode.className = ThemeIcon.asClassName(isCollapsed ? foldingCollapsedIcon : foldingExpandedIcon);\n    }\n    setVisible(visible) {\n        this.domNode.style.cursor = visible ? 'pointer' : 'default';\n        this.domNode.style.opacity = visible ? '1' : '0';\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class StickyRange {\n    constructor(startLineNumber, endLineNumber) {\n        this.startLineNumber = startLineNumber;\n        this.endLineNumber = endLineNumber;\n    }\n}\nexport class StickyElement {\n    constructor(\n    /**\n     * Range of line numbers spanned by the current scope\n     */\n    range, \n    /**\n     * Must be sorted by start line number\n    */\n    children, \n    /**\n     * Parent sticky outline element\n     */\n    parent) {\n        this.range = range;\n        this.children = children;\n        this.parent = parent;\n    }\n}\nexport class StickyModel {\n    constructor(uri, version, element, outlineProviderId) {\n        this.uri = uri;\n        this.version = version;\n        this.element = element;\n        this.outlineProviderId = outlineProviderId;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { OutlineElement, OutlineGroup, OutlineModel } from '../../documentSymbols/browser/outlineModel.js';\nimport { createCancelablePromise, Delayer } from '../../../../base/common/async.js';\nimport { FoldingController, RangesLimitReporter } from '../../folding/browser/folding.js';\nimport { SyntaxRangeProvider } from '../../folding/browser/syntaxRangeProvider.js';\nimport { IndentRangeProvider } from '../../folding/browser/indentRangeProvider.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { StickyElement, StickyModel, StickyRange } from './stickyScrollElement.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nvar ModelProvider;\n(function (ModelProvider) {\n    ModelProvider[\"OUTLINE_MODEL\"] = \"outlineModel\";\n    ModelProvider[\"FOLDING_PROVIDER_MODEL\"] = \"foldingProviderModel\";\n    ModelProvider[\"INDENTATION_MODEL\"] = \"indentationModel\";\n})(ModelProvider || (ModelProvider = {}));\nvar Status;\n(function (Status) {\n    Status[Status[\"VALID\"] = 0] = \"VALID\";\n    Status[Status[\"INVALID\"] = 1] = \"INVALID\";\n    Status[Status[\"CANCELED\"] = 2] = \"CANCELED\";\n})(Status || (Status = {}));\nlet StickyModelProvider = class StickyModelProvider extends Disposable {\n    constructor(_editor, onProviderUpdate, _languageConfigurationService, _languageFeaturesService) {\n        super();\n        this._editor = _editor;\n        this._modelProviders = [];\n        this._modelPromise = null;\n        this._updateScheduler = this._register(new Delayer(300));\n        this._updateOperation = this._register(new DisposableStore());\n        switch (this._editor.getOption(115 /* EditorOption.stickyScroll */).defaultModel) {\n            case ModelProvider.OUTLINE_MODEL:\n                this._modelProviders.push(new StickyModelFromCandidateOutlineProvider(this._editor, _languageFeaturesService));\n            // fall through\n            case ModelProvider.FOLDING_PROVIDER_MODEL:\n                this._modelProviders.push(new StickyModelFromCandidateSyntaxFoldingProvider(this._editor, onProviderUpdate, _languageFeaturesService));\n            // fall through\n            case ModelProvider.INDENTATION_MODEL:\n                this._modelProviders.push(new StickyModelFromCandidateIndentationFoldingProvider(this._editor, _languageConfigurationService));\n                break;\n        }\n    }\n    dispose() {\n        this._modelProviders.forEach(provider => provider.dispose());\n        this._updateOperation.clear();\n        this._cancelModelPromise();\n        super.dispose();\n    }\n    _cancelModelPromise() {\n        if (this._modelPromise) {\n            this._modelPromise.cancel();\n            this._modelPromise = null;\n        }\n    }\n    async update(token) {\n        this._updateOperation.clear();\n        this._updateOperation.add({\n            dispose: () => {\n                this._cancelModelPromise();\n                this._updateScheduler.cancel();\n            }\n        });\n        this._cancelModelPromise();\n        return await this._updateScheduler.trigger(async () => {\n            for (const modelProvider of this._modelProviders) {\n                const { statusPromise, modelPromise } = modelProvider.computeStickyModel(token);\n                this._modelPromise = modelPromise;\n                const status = await statusPromise;\n                if (this._modelPromise !== modelPromise) {\n                    return null;\n                }\n                switch (status) {\n                    case Status.CANCELED:\n                        this._updateOperation.clear();\n                        return null;\n                    case Status.VALID:\n                        return modelProvider.stickyModel;\n                }\n            }\n            return null;\n        }).catch((error) => {\n            onUnexpectedError(error);\n            return null;\n        });\n    }\n};\nStickyModelProvider = __decorate([\n    __param(2, IInstantiationService),\n    __param(3, ILanguageFeaturesService)\n], StickyModelProvider);\nexport { StickyModelProvider };\nclass StickyModelCandidateProvider extends Disposable {\n    constructor(_editor) {\n        super();\n        this._editor = _editor;\n        this._stickyModel = null;\n    }\n    get stickyModel() {\n        return this._stickyModel;\n    }\n    _invalid() {\n        this._stickyModel = null;\n        return Status.INVALID;\n    }\n    computeStickyModel(token) {\n        if (token.isCancellationRequested || !this.isProviderValid()) {\n            return { statusPromise: this._invalid(), modelPromise: null };\n        }\n        const providerModelPromise = createCancelablePromise(token => this.createModelFromProvider(token));\n        return {\n            statusPromise: providerModelPromise.then(providerModel => {\n                if (!this.isModelValid(providerModel)) {\n                    return this._invalid();\n                }\n                if (token.isCancellationRequested) {\n                    return Status.CANCELED;\n                }\n                this._stickyModel = this.createStickyModel(token, providerModel);\n                return Status.VALID;\n            }).then(undefined, (err) => {\n                onUnexpectedError(err);\n                return Status.CANCELED;\n            }),\n            modelPromise: providerModelPromise\n        };\n    }\n    /**\n     * Method which checks whether the model returned by the provider is valid and can be used to compute a sticky model.\n     * This method by default returns true.\n     * @param model model returned by the provider\n     * @returns boolean indicating whether the model is valid\n     */\n    isModelValid(model) {\n        return true;\n    }\n    /**\n     * Method which checks whether the provider is valid before applying it to find the provider model.\n     * This method by default returns true.\n     * @returns boolean indicating whether the provider is valid\n     */\n    isProviderValid() {\n        return true;\n    }\n}\nlet StickyModelFromCandidateOutlineProvider = class StickyModelFromCandidateOutlineProvider extends StickyModelCandidateProvider {\n    constructor(_editor, _languageFeaturesService) {\n        super(_editor);\n        this._languageFeaturesService = _languageFeaturesService;\n    }\n    createModelFromProvider(token) {\n        return OutlineModel.create(this._languageFeaturesService.documentSymbolProvider, this._editor.getModel(), token);\n    }\n    createStickyModel(token, model) {\n        var _a;\n        const { stickyOutlineElement, providerID } = this._stickyModelFromOutlineModel(model, (_a = this._stickyModel) === null || _a === void 0 ? void 0 : _a.outlineProviderId);\n        const textModel = this._editor.getModel();\n        return new StickyModel(textModel.uri, textModel.getVersionId(), stickyOutlineElement, providerID);\n    }\n    isModelValid(model) {\n        return model && model.children.size > 0;\n    }\n    _stickyModelFromOutlineModel(outlineModel, preferredProvider) {\n        let outlineElements;\n        // When several possible outline providers\n        if (Iterable.first(outlineModel.children.values()) instanceof OutlineGroup) {\n            const provider = Iterable.find(outlineModel.children.values(), outlineGroupOfModel => outlineGroupOfModel.id === preferredProvider);\n            if (provider) {\n                outlineElements = provider.children;\n            }\n            else {\n                let tempID = '';\n                let maxTotalSumOfRanges = -1;\n                let optimalOutlineGroup = undefined;\n                for (const [_key, outlineGroup] of outlineModel.children.entries()) {\n                    const totalSumRanges = this._findSumOfRangesOfGroup(outlineGroup);\n                    if (totalSumRanges > maxTotalSumOfRanges) {\n                        optimalOutlineGroup = outlineGroup;\n                        maxTotalSumOfRanges = totalSumRanges;\n                        tempID = outlineGroup.id;\n                    }\n                }\n                preferredProvider = tempID;\n                outlineElements = optimalOutlineGroup.children;\n            }\n        }\n        else {\n            outlineElements = outlineModel.children;\n        }\n        const stickyChildren = [];\n        const outlineElementsArray = Array.from(outlineElements.values()).sort((element1, element2) => {\n            const range1 = new StickyRange(element1.symbol.range.startLineNumber, element1.symbol.range.endLineNumber);\n            const range2 = new StickyRange(element2.symbol.range.startLineNumber, element2.symbol.range.endLineNumber);\n            return this._comparator(range1, range2);\n        });\n        for (const outlineElement of outlineElementsArray) {\n            stickyChildren.push(this._stickyModelFromOutlineElement(outlineElement, outlineElement.symbol.selectionRange.startLineNumber));\n        }\n        const stickyOutlineElement = new StickyElement(undefined, stickyChildren, undefined);\n        return {\n            stickyOutlineElement: stickyOutlineElement,\n            providerID: preferredProvider\n        };\n    }\n    _stickyModelFromOutlineElement(outlineElement, previousStartLine) {\n        const children = [];\n        for (const child of outlineElement.children.values()) {\n            if (child.symbol.selectionRange.startLineNumber !== child.symbol.range.endLineNumber) {\n                if (child.symbol.selectionRange.startLineNumber !== previousStartLine) {\n                    children.push(this._stickyModelFromOutlineElement(child, child.symbol.selectionRange.startLineNumber));\n                }\n                else {\n                    for (const subchild of child.children.values()) {\n                        children.push(this._stickyModelFromOutlineElement(subchild, child.symbol.selectionRange.startLineNumber));\n                    }\n                }\n            }\n        }\n        children.sort((child1, child2) => this._comparator(child1.range, child2.range));\n        const range = new StickyRange(outlineElement.symbol.selectionRange.startLineNumber, outlineElement.symbol.range.endLineNumber);\n        return new StickyElement(range, children, undefined);\n    }\n    _comparator(range1, range2) {\n        if (range1.startLineNumber !== range2.startLineNumber) {\n            return range1.startLineNumber - range2.startLineNumber;\n        }\n        else {\n            return range2.endLineNumber - range1.endLineNumber;\n        }\n    }\n    _findSumOfRangesOfGroup(outline) {\n        let res = 0;\n        for (const child of outline.children.values()) {\n            res += this._findSumOfRangesOfGroup(child);\n        }\n        if (outline instanceof OutlineElement) {\n            return res + outline.symbol.range.endLineNumber - outline.symbol.selectionRange.startLineNumber;\n        }\n        else {\n            return res;\n        }\n    }\n};\nStickyModelFromCandidateOutlineProvider = __decorate([\n    __param(1, ILanguageFeaturesService)\n], StickyModelFromCandidateOutlineProvider);\nclass StickyModelFromCandidateFoldingProvider extends StickyModelCandidateProvider {\n    constructor(editor) {\n        super(editor);\n        this._foldingLimitReporter = new RangesLimitReporter(editor);\n    }\n    createStickyModel(token, model) {\n        const foldingElement = this._fromFoldingRegions(model);\n        const textModel = this._editor.getModel();\n        return new StickyModel(textModel.uri, textModel.getVersionId(), foldingElement, undefined);\n    }\n    isModelValid(model) {\n        return model !== null;\n    }\n    _fromFoldingRegions(foldingRegions) {\n        const length = foldingRegions.length;\n        const orderedStickyElements = [];\n        // The root sticky outline element\n        const stickyOutlineElement = new StickyElement(undefined, [], undefined);\n        for (let i = 0; i < length; i++) {\n            // Finding the parent index of the current range\n            const parentIndex = foldingRegions.getParentIndex(i);\n            let parentNode;\n            if (parentIndex !== -1) {\n                // Access the reference of the parent node\n                parentNode = orderedStickyElements[parentIndex];\n            }\n            else {\n                // In that case the parent node is the root node\n                parentNode = stickyOutlineElement;\n            }\n            const child = new StickyElement(new StickyRange(foldingRegions.getStartLineNumber(i), foldingRegions.getEndLineNumber(i) + 1), [], parentNode);\n            parentNode.children.push(child);\n            orderedStickyElements.push(child);\n        }\n        return stickyOutlineElement;\n    }\n}\nlet StickyModelFromCandidateIndentationFoldingProvider = class StickyModelFromCandidateIndentationFoldingProvider extends StickyModelFromCandidateFoldingProvider {\n    constructor(editor, _languageConfigurationService) {\n        super(editor);\n        this._languageConfigurationService = _languageConfigurationService;\n        this.provider = this._register(new IndentRangeProvider(editor.getModel(), this._languageConfigurationService, this._foldingLimitReporter));\n    }\n    async createModelFromProvider(token) {\n        return this.provider.compute(token);\n    }\n};\nStickyModelFromCandidateIndentationFoldingProvider = __decorate([\n    __param(1, ILanguageConfigurationService)\n], StickyModelFromCandidateIndentationFoldingProvider);\nlet StickyModelFromCandidateSyntaxFoldingProvider = class StickyModelFromCandidateSyntaxFoldingProvider extends StickyModelFromCandidateFoldingProvider {\n    constructor(editor, onProviderUpdate, _languageFeaturesService) {\n        super(editor);\n        this._languageFeaturesService = _languageFeaturesService;\n        const selectedProviders = FoldingController.getFoldingRangeProviders(this._languageFeaturesService, editor.getModel());\n        if (selectedProviders.length > 0) {\n            this.provider = this._register(new SyntaxRangeProvider(editor.getModel(), selectedProviders, onProviderUpdate, this._foldingLimitReporter, undefined));\n        }\n    }\n    isProviderValid() {\n        return this.provider !== undefined;\n    }\n    async createModelFromProvider(token) {\n        var _a, _b;\n        return (_b = (_a = this.provider) === null || _a === void 0 ? void 0 : _a.compute(token)) !== null && _b !== void 0 ? _b : null;\n    }\n};\nStickyModelFromCandidateSyntaxFoldingProvider = __decorate([\n    __param(2, ILanguageFeaturesService)\n], StickyModelFromCandidateSyntaxFoldingProvider);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { binarySearch } from '../../../../base/common/arrays.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { StickyModelProvider } from './stickyScrollModelProvider.js';\nexport class StickyLineCandidate {\n    constructor(startLineNumber, endLineNumber, nestingDepth) {\n        this.startLineNumber = startLineNumber;\n        this.endLineNumber = endLineNumber;\n        this.nestingDepth = nestingDepth;\n    }\n}\nlet StickyLineCandidateProvider = class StickyLineCandidateProvider extends Disposable {\n    constructor(editor, _languageFeaturesService, _languageConfigurationService) {\n        super();\n        this._languageFeaturesService = _languageFeaturesService;\n        this._languageConfigurationService = _languageConfigurationService;\n        this._onDidChangeStickyScroll = this._register(new Emitter());\n        this.onDidChangeStickyScroll = this._onDidChangeStickyScroll.event;\n        this._model = null;\n        this._cts = null;\n        this._stickyModelProvider = null;\n        this._editor = editor;\n        this._sessionStore = this._register(new DisposableStore());\n        this._updateSoon = this._register(new RunOnceScheduler(() => this.update(), 50));\n        this._register(this._editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(115 /* EditorOption.stickyScroll */)) {\n                this.readConfiguration();\n            }\n        }));\n        this.readConfiguration();\n    }\n    readConfiguration() {\n        this._sessionStore.clear();\n        const options = this._editor.getOption(115 /* EditorOption.stickyScroll */);\n        if (!options.enabled) {\n            return;\n        }\n        this._sessionStore.add(this._editor.onDidChangeModel(() => {\n            // We should not show an old model for a different file, it will always be wrong.\n            // So we clear the model here immediately and then trigger an update.\n            this._model = null;\n            this.updateStickyModelProvider();\n            this._onDidChangeStickyScroll.fire();\n            this.update();\n        }));\n        this._sessionStore.add(this._editor.onDidChangeHiddenAreas(() => this.update()));\n        this._sessionStore.add(this._editor.onDidChangeModelContent(() => this._updateSoon.schedule()));\n        this._sessionStore.add(this._languageFeaturesService.documentSymbolProvider.onDidChange(() => this.update()));\n        this._sessionStore.add(toDisposable(() => {\n            var _a;\n            (_a = this._stickyModelProvider) === null || _a === void 0 ? void 0 : _a.dispose();\n            this._stickyModelProvider = null;\n        }));\n        this.updateStickyModelProvider();\n        this.update();\n    }\n    getVersionId() {\n        var _a;\n        return (_a = this._model) === null || _a === void 0 ? void 0 : _a.version;\n    }\n    updateStickyModelProvider() {\n        var _a;\n        (_a = this._stickyModelProvider) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._stickyModelProvider = null;\n        const editor = this._editor;\n        if (editor.hasModel()) {\n            this._stickyModelProvider = new StickyModelProvider(editor, () => this._updateSoon.schedule(), this._languageConfigurationService, this._languageFeaturesService);\n        }\n    }\n    async update() {\n        var _a;\n        (_a = this._cts) === null || _a === void 0 ? void 0 : _a.dispose(true);\n        this._cts = new CancellationTokenSource();\n        await this.updateStickyModel(this._cts.token);\n        this._onDidChangeStickyScroll.fire();\n    }\n    async updateStickyModel(token) {\n        if (!this._editor.hasModel() || !this._stickyModelProvider || this._editor.getModel().isTooLargeForTokenization()) {\n            this._model = null;\n            return;\n        }\n        const model = await this._stickyModelProvider.update(token);\n        if (token.isCancellationRequested) {\n            // the computation was canceled, so do not overwrite the model\n            return;\n        }\n        this._model = model;\n    }\n    updateIndex(index) {\n        if (index === -1) {\n            index = 0;\n        }\n        else if (index < 0) {\n            index = -index - 2;\n        }\n        return index;\n    }\n    getCandidateStickyLinesIntersectingFromStickyModel(range, outlineModel, result, depth, lastStartLineNumber) {\n        if (outlineModel.children.length === 0) {\n            return;\n        }\n        let lastLine = lastStartLineNumber;\n        const childrenStartLines = [];\n        for (let i = 0; i < outlineModel.children.length; i++) {\n            const child = outlineModel.children[i];\n            if (child.range) {\n                childrenStartLines.push(child.range.startLineNumber);\n            }\n        }\n        const lowerBound = this.updateIndex(binarySearch(childrenStartLines, range.startLineNumber, (a, b) => { return a - b; }));\n        const upperBound = this.updateIndex(binarySearch(childrenStartLines, range.startLineNumber + depth, (a, b) => { return a - b; }));\n        for (let i = lowerBound; i <= upperBound; i++) {\n            const child = outlineModel.children[i];\n            if (!child) {\n                return;\n            }\n            if (child.range) {\n                const childStartLine = child.range.startLineNumber;\n                const childEndLine = child.range.endLineNumber;\n                if (range.startLineNumber <= childEndLine + 1 && childStartLine - 1 <= range.endLineNumber && childStartLine !== lastLine) {\n                    lastLine = childStartLine;\n                    result.push(new StickyLineCandidate(childStartLine, childEndLine - 1, depth + 1));\n                    this.getCandidateStickyLinesIntersectingFromStickyModel(range, child, result, depth + 1, childStartLine);\n                }\n            }\n            else {\n                this.getCandidateStickyLinesIntersectingFromStickyModel(range, child, result, depth, lastStartLineNumber);\n            }\n        }\n    }\n    getCandidateStickyLinesIntersecting(range) {\n        var _a, _b;\n        if (!((_a = this._model) === null || _a === void 0 ? void 0 : _a.element)) {\n            return [];\n        }\n        let stickyLineCandidates = [];\n        this.getCandidateStickyLinesIntersectingFromStickyModel(range, this._model.element, stickyLineCandidates, 0, -1);\n        const hiddenRanges = (_b = this._editor._getViewModel()) === null || _b === void 0 ? void 0 : _b.getHiddenAreas();\n        if (hiddenRanges) {\n            for (const hiddenRange of hiddenRanges) {\n                stickyLineCandidates = stickyLineCandidates.filter(stickyLine => !(stickyLine.startLineNumber >= hiddenRange.startLineNumber && stickyLine.endLineNumber <= hiddenRange.endLineNumber + 1));\n            }\n        }\n        return stickyLineCandidates;\n    }\n};\nStickyLineCandidateProvider = __decorate([\n    __param(1, ILanguageFeaturesService),\n    __param(2, ILanguageConfigurationService)\n], StickyLineCandidateProvider);\nexport { StickyLineCandidateProvider };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar StickyScrollController_1;\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { StickyScrollWidget, StickyScrollWidgetState } from './stickyScrollWidget.js';\nimport { StickyLineCandidateProvider } from './stickyScrollProvider.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ClickLinkGesture } from '../../gotoSymbol/browser/link/clickLinkGesture.js';\nimport { Range } from '../../../common/core/range.js';\nimport { getDefinitionsAtPosition } from '../../gotoSymbol/browser/goToSymbol.js';\nimport { goToDefinitionWithLocation } from '../../inlayHints/browser/inlayHintsLocations.js';\nimport { Position } from '../../../common/core/position.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { StickyRange } from './stickyScrollElement.js';\nimport { StandardMouseEvent } from '../../../../base/browser/mouseEvent.js';\nimport { FoldingController } from '../../folding/browser/folding.js';\nimport { toggleCollapseState } from '../../folding/browser/foldingModel.js';\nlet StickyScrollController = StickyScrollController_1 = class StickyScrollController extends Disposable {\n    constructor(_editor, _contextMenuService, _languageFeaturesService, _instaService, _languageConfigurationService, _languageFeatureDebounceService, _contextKeyService) {\n        super();\n        this._editor = _editor;\n        this._contextMenuService = _contextMenuService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._instaService = _instaService;\n        this._contextKeyService = _contextKeyService;\n        this._sessionStore = new DisposableStore();\n        this._foldingModel = null;\n        this._maxStickyLines = Number.MAX_SAFE_INTEGER;\n        this._candidateDefinitionsLength = -1;\n        this._focusedStickyElementIndex = -1;\n        this._enabled = false;\n        this._focused = false;\n        this._positionRevealed = false;\n        this._onMouseDown = false;\n        this._endLineNumbers = [];\n        this._showEndForLine = null;\n        this._stickyScrollWidget = new StickyScrollWidget(this._editor);\n        this._stickyLineCandidateProvider = new StickyLineCandidateProvider(this._editor, _languageFeaturesService, _languageConfigurationService);\n        this._register(this._stickyScrollWidget);\n        this._register(this._stickyLineCandidateProvider);\n        this._widgetState = new StickyScrollWidgetState([], [], 0);\n        this._onDidResize();\n        this._readConfiguration();\n        const stickyScrollDomNode = this._stickyScrollWidget.getDomNode();\n        this._register(this._editor.onDidChangeConfiguration(e => {\n            this._readConfigurationChange(e);\n        }));\n        this._register(dom.addDisposableListener(stickyScrollDomNode, dom.EventType.CONTEXT_MENU, async (event) => {\n            this._onContextMenu(dom.getWindow(stickyScrollDomNode), event);\n        }));\n        this._stickyScrollFocusedContextKey = EditorContextKeys.stickyScrollFocused.bindTo(this._contextKeyService);\n        this._stickyScrollVisibleContextKey = EditorContextKeys.stickyScrollVisible.bindTo(this._contextKeyService);\n        const focusTracker = this._register(dom.trackFocus(stickyScrollDomNode));\n        this._register(focusTracker.onDidBlur(_ => {\n            // Suppose that the blurring is caused by scrolling, then keep the focus on the sticky scroll\n            // This is determined by the fact that the height of the widget has become zero and there has been no position revealing\n            if (this._positionRevealed === false && stickyScrollDomNode.clientHeight === 0) {\n                this._focusedStickyElementIndex = -1;\n                this.focus();\n            }\n            // In all other casees, dispose the focus on the sticky scroll\n            else {\n                this._disposeFocusStickyScrollStore();\n            }\n        }));\n        this._register(focusTracker.onDidFocus(_ => {\n            this.focus();\n        }));\n        this._registerMouseListeners();\n        // Suppose that mouse down on the sticky scroll, then do not focus on the sticky scroll because this will be followed by the revealing of a position\n        this._register(dom.addDisposableListener(stickyScrollDomNode, dom.EventType.MOUSE_DOWN, (e) => {\n            this._onMouseDown = true;\n        }));\n    }\n    static get(editor) {\n        return editor.getContribution(StickyScrollController_1.ID);\n    }\n    _disposeFocusStickyScrollStore() {\n        var _a;\n        this._stickyScrollFocusedContextKey.set(false);\n        (_a = this._focusDisposableStore) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._focused = false;\n        this._positionRevealed = false;\n        this._onMouseDown = false;\n    }\n    focus() {\n        // If the mouse is down, do not focus on the sticky scroll\n        if (this._onMouseDown) {\n            this._onMouseDown = false;\n            this._editor.focus();\n            return;\n        }\n        const focusState = this._stickyScrollFocusedContextKey.get();\n        if (focusState === true) {\n            return;\n        }\n        this._focused = true;\n        this._focusDisposableStore = new DisposableStore();\n        this._stickyScrollFocusedContextKey.set(true);\n        this._focusedStickyElementIndex = this._stickyScrollWidget.lineNumbers.length - 1;\n        this._stickyScrollWidget.focusLineWithIndex(this._focusedStickyElementIndex);\n    }\n    focusNext() {\n        if (this._focusedStickyElementIndex < this._stickyScrollWidget.lineNumberCount - 1) {\n            this._focusNav(true);\n        }\n    }\n    focusPrevious() {\n        if (this._focusedStickyElementIndex > 0) {\n            this._focusNav(false);\n        }\n    }\n    selectEditor() {\n        this._editor.focus();\n    }\n    // True is next, false is previous\n    _focusNav(direction) {\n        this._focusedStickyElementIndex = direction ? this._focusedStickyElementIndex + 1 : this._focusedStickyElementIndex - 1;\n        this._stickyScrollWidget.focusLineWithIndex(this._focusedStickyElementIndex);\n    }\n    goToFocused() {\n        const lineNumbers = this._stickyScrollWidget.lineNumbers;\n        this._disposeFocusStickyScrollStore();\n        this._revealPosition({ lineNumber: lineNumbers[this._focusedStickyElementIndex], column: 1 });\n    }\n    _revealPosition(position) {\n        this._reveaInEditor(position, () => this._editor.revealPosition(position));\n    }\n    _revealLineInCenterIfOutsideViewport(position) {\n        this._reveaInEditor(position, () => this._editor.revealLineInCenterIfOutsideViewport(position.lineNumber, 0 /* ScrollType.Smooth */));\n    }\n    _reveaInEditor(position, revealFunction) {\n        if (this._focused) {\n            this._disposeFocusStickyScrollStore();\n        }\n        this._positionRevealed = true;\n        revealFunction();\n        this._editor.setSelection(Range.fromPositions(position));\n        this._editor.focus();\n    }\n    _registerMouseListeners() {\n        const sessionStore = this._register(new DisposableStore());\n        const gesture = this._register(new ClickLinkGesture(this._editor, {\n            extractLineNumberFromMouseEvent: (e) => {\n                const position = this._stickyScrollWidget.getEditorPositionFromNode(e.target.element);\n                return position ? position.lineNumber : 0;\n            }\n        }));\n        const getMouseEventTarget = (mouseEvent) => {\n            if (!this._editor.hasModel()) {\n                return null;\n            }\n            if (mouseEvent.target.type !== 12 /* MouseTargetType.OVERLAY_WIDGET */ || mouseEvent.target.detail !== this._stickyScrollWidget.getId()) {\n                // not hovering over our widget\n                return null;\n            }\n            const mouseTargetElement = mouseEvent.target.element;\n            if (!mouseTargetElement || mouseTargetElement.innerText !== mouseTargetElement.innerHTML) {\n                // not on a span element rendering text\n                return null;\n            }\n            const position = this._stickyScrollWidget.getEditorPositionFromNode(mouseTargetElement);\n            if (!position) {\n                // not hovering a sticky scroll line\n                return null;\n            }\n            return {\n                range: new Range(position.lineNumber, position.column, position.lineNumber, position.column + mouseTargetElement.innerText.length),\n                textElement: mouseTargetElement\n            };\n        };\n        const stickyScrollWidgetDomNode = this._stickyScrollWidget.getDomNode();\n        this._register(dom.addStandardDisposableListener(stickyScrollWidgetDomNode, dom.EventType.CLICK, (mouseEvent) => {\n            if (mouseEvent.ctrlKey || mouseEvent.altKey || mouseEvent.metaKey) {\n                // modifier pressed\n                return;\n            }\n            if (!mouseEvent.leftButton) {\n                // not left click\n                return;\n            }\n            if (mouseEvent.shiftKey) {\n                // shift click\n                const lineIndex = this._stickyScrollWidget.getLineIndexFromChildDomNode(mouseEvent.target);\n                if (lineIndex === null) {\n                    return;\n                }\n                const position = new Position(this._endLineNumbers[lineIndex], 1);\n                this._revealLineInCenterIfOutsideViewport(position);\n                return;\n            }\n            const isInFoldingIconDomNode = this._stickyScrollWidget.isInFoldingIconDomNode(mouseEvent.target);\n            if (isInFoldingIconDomNode) {\n                // clicked on folding icon\n                const lineNumber = this._stickyScrollWidget.getLineNumberFromChildDomNode(mouseEvent.target);\n                this._toggleFoldingRegionForLine(lineNumber);\n                return;\n            }\n            const isInStickyLine = this._stickyScrollWidget.isInStickyLine(mouseEvent.target);\n            if (!isInStickyLine) {\n                return;\n            }\n            // normal click\n            let position = this._stickyScrollWidget.getEditorPositionFromNode(mouseEvent.target);\n            if (!position) {\n                const lineNumber = this._stickyScrollWidget.getLineNumberFromChildDomNode(mouseEvent.target);\n                if (lineNumber === null) {\n                    // not hovering a sticky scroll line\n                    return;\n                }\n                position = new Position(lineNumber, 1);\n            }\n            this._revealPosition(position);\n        }));\n        this._register(dom.addStandardDisposableListener(stickyScrollWidgetDomNode, dom.EventType.MOUSE_MOVE, (mouseEvent) => {\n            if (mouseEvent.shiftKey) {\n                const currentEndForLineIndex = this._stickyScrollWidget.getLineIndexFromChildDomNode(mouseEvent.target);\n                if (currentEndForLineIndex === null || this._showEndForLine !== null && this._showEndForLine === currentEndForLineIndex) {\n                    return;\n                }\n                this._showEndForLine = currentEndForLineIndex;\n                this._renderStickyScroll();\n                return;\n            }\n            if (this._showEndForLine !== null) {\n                this._showEndForLine = null;\n                this._renderStickyScroll();\n            }\n        }));\n        this._register(dom.addDisposableListener(stickyScrollWidgetDomNode, dom.EventType.MOUSE_LEAVE, (e) => {\n            if (this._showEndForLine !== null) {\n                this._showEndForLine = null;\n                this._renderStickyScroll();\n            }\n        }));\n        this._register(gesture.onMouseMoveOrRelevantKeyDown(([mouseEvent, _keyboardEvent]) => {\n            const mouseTarget = getMouseEventTarget(mouseEvent);\n            if (!mouseTarget || !mouseEvent.hasTriggerModifier || !this._editor.hasModel()) {\n                sessionStore.clear();\n                return;\n            }\n            const { range, textElement } = mouseTarget;\n            if (!range.equalsRange(this._stickyRangeProjectedOnEditor)) {\n                this._stickyRangeProjectedOnEditor = range;\n                sessionStore.clear();\n            }\n            else if (textElement.style.textDecoration === 'underline') {\n                return;\n            }\n            const cancellationToken = new CancellationTokenSource();\n            sessionStore.add(toDisposable(() => cancellationToken.dispose(true)));\n            let currentHTMLChild;\n            getDefinitionsAtPosition(this._languageFeaturesService.definitionProvider, this._editor.getModel(), new Position(range.startLineNumber, range.startColumn + 1), cancellationToken.token).then((candidateDefinitions => {\n                if (cancellationToken.token.isCancellationRequested) {\n                    return;\n                }\n                if (candidateDefinitions.length !== 0) {\n                    this._candidateDefinitionsLength = candidateDefinitions.length;\n                    const childHTML = textElement;\n                    if (currentHTMLChild !== childHTML) {\n                        sessionStore.clear();\n                        currentHTMLChild = childHTML;\n                        currentHTMLChild.style.textDecoration = 'underline';\n                        sessionStore.add(toDisposable(() => {\n                            currentHTMLChild.style.textDecoration = 'none';\n                        }));\n                    }\n                    else if (!currentHTMLChild) {\n                        currentHTMLChild = childHTML;\n                        currentHTMLChild.style.textDecoration = 'underline';\n                        sessionStore.add(toDisposable(() => {\n                            currentHTMLChild.style.textDecoration = 'none';\n                        }));\n                    }\n                }\n                else {\n                    sessionStore.clear();\n                }\n            }));\n        }));\n        this._register(gesture.onCancel(() => {\n            sessionStore.clear();\n        }));\n        this._register(gesture.onExecute(async (e) => {\n            if (e.target.type !== 12 /* MouseTargetType.OVERLAY_WIDGET */ || e.target.detail !== this._stickyScrollWidget.getId()) {\n                // not hovering over our widget\n                return;\n            }\n            const position = this._stickyScrollWidget.getEditorPositionFromNode(e.target.element);\n            if (!position) {\n                // not hovering a sticky scroll line\n                return;\n            }\n            if (!this._editor.hasModel() || !this._stickyRangeProjectedOnEditor) {\n                return;\n            }\n            if (this._candidateDefinitionsLength > 1) {\n                if (this._focused) {\n                    this._disposeFocusStickyScrollStore();\n                }\n                this._revealPosition({ lineNumber: position.lineNumber, column: 1 });\n            }\n            this._instaService.invokeFunction(goToDefinitionWithLocation, e, this._editor, { uri: this._editor.getModel().uri, range: this._stickyRangeProjectedOnEditor });\n        }));\n    }\n    _onContextMenu(targetWindow, e) {\n        const event = new StandardMouseEvent(targetWindow, e);\n        this._contextMenuService.showContextMenu({\n            menuId: MenuId.StickyScrollContext,\n            getAnchor: () => event,\n        });\n    }\n    _toggleFoldingRegionForLine(line) {\n        if (!this._foldingModel || line === null) {\n            return;\n        }\n        const stickyLine = this._stickyScrollWidget.getRenderedStickyLine(line);\n        const foldingIcon = stickyLine === null || stickyLine === void 0 ? void 0 : stickyLine.foldingIcon;\n        if (!foldingIcon) {\n            return;\n        }\n        toggleCollapseState(this._foldingModel, Number.MAX_VALUE, [line]);\n        foldingIcon.isCollapsed = !foldingIcon.isCollapsed;\n        const scrollTop = (foldingIcon.isCollapsed ?\n            this._editor.getTopForLineNumber(foldingIcon.foldingEndLine)\n            : this._editor.getTopForLineNumber(foldingIcon.foldingStartLine))\n            - this._editor.getOption(67 /* EditorOption.lineHeight */) * stickyLine.index + 1;\n        this._editor.setScrollTop(scrollTop);\n        this._renderStickyScroll(line);\n    }\n    _readConfiguration() {\n        const options = this._editor.getOption(115 /* EditorOption.stickyScroll */);\n        if (options.enabled === false) {\n            this._editor.removeOverlayWidget(this._stickyScrollWidget);\n            this._sessionStore.clear();\n            this._enabled = false;\n            return;\n        }\n        else if (options.enabled && !this._enabled) {\n            // When sticky scroll was just enabled, add the listeners on the sticky scroll\n            this._editor.addOverlayWidget(this._stickyScrollWidget);\n            this._sessionStore.add(this._editor.onDidScrollChange((e) => {\n                if (e.scrollTopChanged) {\n                    this._showEndForLine = null;\n                    this._renderStickyScroll();\n                }\n            }));\n            this._sessionStore.add(this._editor.onDidLayoutChange(() => this._onDidResize()));\n            this._sessionStore.add(this._editor.onDidChangeModelTokens((e) => this._onTokensChange(e)));\n            this._sessionStore.add(this._stickyLineCandidateProvider.onDidChangeStickyScroll(() => {\n                this._showEndForLine = null;\n                this._renderStickyScroll();\n            }));\n            this._enabled = true;\n        }\n        const lineNumberOption = this._editor.getOption(68 /* EditorOption.lineNumbers */);\n        if (lineNumberOption.renderType === 2 /* RenderLineNumbersType.Relative */) {\n            this._sessionStore.add(this._editor.onDidChangeCursorPosition(() => {\n                this._showEndForLine = null;\n                this._renderStickyScroll(0);\n            }));\n        }\n    }\n    _readConfigurationChange(event) {\n        if (event.hasChanged(115 /* EditorOption.stickyScroll */)\n            || event.hasChanged(73 /* EditorOption.minimap */)\n            || event.hasChanged(67 /* EditorOption.lineHeight */)\n            || event.hasChanged(110 /* EditorOption.showFoldingControls */)\n            || event.hasChanged(68 /* EditorOption.lineNumbers */)) {\n            this._readConfiguration();\n        }\n        if (event.hasChanged(68 /* EditorOption.lineNumbers */)) {\n            this._renderStickyScroll(0);\n        }\n    }\n    _needsUpdate(event) {\n        const stickyLineNumbers = this._stickyScrollWidget.getCurrentLines();\n        for (const stickyLineNumber of stickyLineNumbers) {\n            for (const range of event.ranges) {\n                if (stickyLineNumber >= range.fromLineNumber && stickyLineNumber <= range.toLineNumber) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    _onTokensChange(event) {\n        if (this._needsUpdate(event)) {\n            // Rebuilding the whole widget from line 0\n            this._renderStickyScroll(0);\n        }\n    }\n    _onDidResize() {\n        const layoutInfo = this._editor.getLayoutInfo();\n        // Make sure sticky scroll doesn't take up more than 25% of the editor\n        const theoreticalLines = layoutInfo.height / this._editor.getOption(67 /* EditorOption.lineHeight */);\n        this._maxStickyLines = Math.round(theoreticalLines * .25);\n    }\n    async _renderStickyScroll(rebuildFromLine) {\n        var _a, _b;\n        const model = this._editor.getModel();\n        if (!model || model.isTooLargeForTokenization()) {\n            this._foldingModel = null;\n            this._stickyScrollWidget.setState(undefined, null);\n            return;\n        }\n        const stickyLineVersion = this._stickyLineCandidateProvider.getVersionId();\n        if (stickyLineVersion === undefined || stickyLineVersion === model.getVersionId()) {\n            this._foldingModel = (_b = await ((_a = FoldingController.get(this._editor)) === null || _a === void 0 ? void 0 : _a.getFoldingModel())) !== null && _b !== void 0 ? _b : null;\n            this._widgetState = this.findScrollWidgetState();\n            this._stickyScrollVisibleContextKey.set(!(this._widgetState.startLineNumbers.length === 0));\n            if (!this._focused) {\n                this._stickyScrollWidget.setState(this._widgetState, this._foldingModel, rebuildFromLine);\n            }\n            else {\n                // Suppose that previously the sticky scroll widget had height 0, then if there are visible lines, set the last line as focused\n                if (this._focusedStickyElementIndex === -1) {\n                    this._stickyScrollWidget.setState(this._widgetState, this._foldingModel, rebuildFromLine);\n                    this._focusedStickyElementIndex = this._stickyScrollWidget.lineNumberCount - 1;\n                    if (this._focusedStickyElementIndex !== -1) {\n                        this._stickyScrollWidget.focusLineWithIndex(this._focusedStickyElementIndex);\n                    }\n                }\n                else {\n                    const focusedStickyElementLineNumber = this._stickyScrollWidget.lineNumbers[this._focusedStickyElementIndex];\n                    this._stickyScrollWidget.setState(this._widgetState, this._foldingModel, rebuildFromLine);\n                    // Suppose that after setting the state, there are no sticky lines, set the focused index to -1\n                    if (this._stickyScrollWidget.lineNumberCount === 0) {\n                        this._focusedStickyElementIndex = -1;\n                    }\n                    else {\n                        const previousFocusedLineNumberExists = this._stickyScrollWidget.lineNumbers.includes(focusedStickyElementLineNumber);\n                        // If the line number is still there, do not change anything\n                        // If the line number is not there, set the new focused line to be the last line\n                        if (!previousFocusedLineNumberExists) {\n                            this._focusedStickyElementIndex = this._stickyScrollWidget.lineNumberCount - 1;\n                        }\n                        this._stickyScrollWidget.focusLineWithIndex(this._focusedStickyElementIndex);\n                    }\n                }\n            }\n        }\n    }\n    findScrollWidgetState() {\n        const lineHeight = this._editor.getOption(67 /* EditorOption.lineHeight */);\n        const maxNumberStickyLines = Math.min(this._maxStickyLines, this._editor.getOption(115 /* EditorOption.stickyScroll */).maxLineCount);\n        const scrollTop = this._editor.getScrollTop();\n        let lastLineRelativePosition = 0;\n        const startLineNumbers = [];\n        const endLineNumbers = [];\n        const arrayVisibleRanges = this._editor.getVisibleRanges();\n        if (arrayVisibleRanges.length !== 0) {\n            const fullVisibleRange = new StickyRange(arrayVisibleRanges[0].startLineNumber, arrayVisibleRanges[arrayVisibleRanges.length - 1].endLineNumber);\n            const candidateRanges = this._stickyLineCandidateProvider.getCandidateStickyLinesIntersecting(fullVisibleRange);\n            for (const range of candidateRanges) {\n                const start = range.startLineNumber;\n                const end = range.endLineNumber;\n                const depth = range.nestingDepth;\n                if (end - start > 0) {\n                    const topOfElementAtDepth = (depth - 1) * lineHeight;\n                    const bottomOfElementAtDepth = depth * lineHeight;\n                    const bottomOfBeginningLine = this._editor.getBottomForLineNumber(start) - scrollTop;\n                    const topOfEndLine = this._editor.getTopForLineNumber(end) - scrollTop;\n                    const bottomOfEndLine = this._editor.getBottomForLineNumber(end) - scrollTop;\n                    if (topOfElementAtDepth > topOfEndLine && topOfElementAtDepth <= bottomOfEndLine) {\n                        startLineNumbers.push(start);\n                        endLineNumbers.push(end + 1);\n                        lastLineRelativePosition = bottomOfEndLine - bottomOfElementAtDepth;\n                        break;\n                    }\n                    else if (bottomOfElementAtDepth > bottomOfBeginningLine && bottomOfElementAtDepth <= bottomOfEndLine) {\n                        startLineNumbers.push(start);\n                        endLineNumbers.push(end + 1);\n                    }\n                    if (startLineNumbers.length === maxNumberStickyLines) {\n                        break;\n                    }\n                }\n            }\n        }\n        this._endLineNumbers = endLineNumbers;\n        return new StickyScrollWidgetState(startLineNumbers, endLineNumbers, lastLineRelativePosition, this._showEndForLine);\n    }\n    dispose() {\n        super.dispose();\n        this._sessionStore.dispose();\n    }\n};\nStickyScrollController.ID = 'store.contrib.stickyScrollController';\nStickyScrollController = StickyScrollController_1 = __decorate([\n    __param(1, IContextMenuService),\n    __param(2, ILanguageFeaturesService),\n    __param(3, IInstantiationService),\n    __param(4, ILanguageConfigurationService),\n    __param(5, ILanguageFeatureDebounceService),\n    __param(6, IContextKeyService)\n], StickyScrollController);\nexport { StickyScrollController };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction2 } from '../../../browser/editorExtensions.js';\nimport { localize, localize2 } from '../../../../nls.js';\nimport { Categories } from '../../../../platform/action/common/actionCommonCategories.js';\nimport { Action2, MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { StickyScrollController } from './stickyScrollController.js';\nexport class ToggleStickyScroll extends Action2 {\n    constructor() {\n        super({\n            id: 'editor.action.toggleStickyScroll',\n            title: {\n                ...localize2('toggleEditorStickyScroll', \"Toggle Editor Sticky Scroll\"),\n                mnemonicTitle: localize({ key: 'mitoggleStickyScroll', comment: ['&& denotes a mnemonic'] }, \"&&Toggle Editor Sticky Scroll\"),\n            },\n            metadata: {\n                description: localize2('toggleEditorStickyScroll.description', \"Toggle/enable the editor sticky scroll which shows the nested scopes at the top of the viewport\"),\n            },\n            category: Categories.View,\n            toggled: {\n                condition: ContextKeyExpr.equals('config.editor.stickyScroll.enabled', true),\n                title: localize('stickyScroll', \"Sticky Scroll\"),\n                mnemonicTitle: localize({ key: 'miStickyScroll', comment: ['&& denotes a mnemonic'] }, \"&&Sticky Scroll\"),\n            },\n            menu: [\n                { id: MenuId.CommandPalette },\n                { id: MenuId.MenubarAppearanceMenu, group: '4_editor', order: 3 },\n                { id: MenuId.StickyScrollContext }\n            ]\n        });\n    }\n    async run(accessor) {\n        const configurationService = accessor.get(IConfigurationService);\n        const newValue = !configurationService.getValue('editor.stickyScroll.enabled');\n        return configurationService.updateValue('editor.stickyScroll.enabled', newValue);\n    }\n}\nconst weight = 100 /* KeybindingWeight.EditorContrib */;\nexport class FocusStickyScroll extends EditorAction2 {\n    constructor() {\n        super({\n            id: 'editor.action.focusStickyScroll',\n            title: {\n                ...localize2('focusStickyScroll', \"Focus on the editor sticky scroll\"),\n                mnemonicTitle: localize({ key: 'mifocusStickyScroll', comment: ['&& denotes a mnemonic'] }, \"&&Focus Sticky Scroll\"),\n            },\n            precondition: ContextKeyExpr.and(ContextKeyExpr.has('config.editor.stickyScroll.enabled'), EditorContextKeys.stickyScrollVisible),\n            menu: [\n                { id: MenuId.CommandPalette },\n            ]\n        });\n    }\n    runEditorCommand(_accessor, editor) {\n        var _a;\n        (_a = StickyScrollController.get(editor)) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n}\nexport class SelectNextStickyScrollLine extends EditorAction2 {\n    constructor() {\n        super({\n            id: 'editor.action.selectNextStickyScrollLine',\n            title: localize2('selectNextStickyScrollLine.title', \"Select the next editor sticky scroll line\"),\n            precondition: EditorContextKeys.stickyScrollFocused.isEqualTo(true),\n            keybinding: {\n                weight,\n                primary: 18 /* KeyCode.DownArrow */\n            }\n        });\n    }\n    runEditorCommand(_accessor, editor) {\n        var _a;\n        (_a = StickyScrollController.get(editor)) === null || _a === void 0 ? void 0 : _a.focusNext();\n    }\n}\nexport class SelectPreviousStickyScrollLine extends EditorAction2 {\n    constructor() {\n        super({\n            id: 'editor.action.selectPreviousStickyScrollLine',\n            title: localize2('selectPreviousStickyScrollLine.title', \"Select the previous sticky scroll line\"),\n            precondition: EditorContextKeys.stickyScrollFocused.isEqualTo(true),\n            keybinding: {\n                weight,\n                primary: 16 /* KeyCode.UpArrow */\n            }\n        });\n    }\n    runEditorCommand(_accessor, editor) {\n        var _a;\n        (_a = StickyScrollController.get(editor)) === null || _a === void 0 ? void 0 : _a.focusPrevious();\n    }\n}\nexport class GoToStickyScrollLine extends EditorAction2 {\n    constructor() {\n        super({\n            id: 'editor.action.goToFocusedStickyScrollLine',\n            title: localize2('goToFocusedStickyScrollLine.title', \"Go to the focused sticky scroll line\"),\n            precondition: EditorContextKeys.stickyScrollFocused.isEqualTo(true),\n            keybinding: {\n                weight,\n                primary: 3 /* KeyCode.Enter */\n            }\n        });\n    }\n    runEditorCommand(_accessor, editor) {\n        var _a;\n        (_a = StickyScrollController.get(editor)) === null || _a === void 0 ? void 0 : _a.goToFocused();\n    }\n}\nexport class SelectEditor extends EditorAction2 {\n    constructor() {\n        super({\n            id: 'editor.action.selectEditor',\n            title: localize2('selectEditor.title', \"Select Editor\"),\n            precondition: EditorContextKeys.stickyScrollFocused.isEqualTo(true),\n            keybinding: {\n                weight,\n                primary: 9 /* KeyCode.Escape */\n            }\n        });\n    }\n    runEditorCommand(_accessor, editor) {\n        var _a;\n        (_a = StickyScrollController.get(editor)) === null || _a === void 0 ? void 0 : _a.selectEditor();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ToggleStickyScroll, FocusStickyScroll, SelectEditor, SelectPreviousStickyScrollLine, SelectNextStickyScrollLine, GoToStickyScrollLine } from './stickyScrollActions.js';\nimport { StickyScrollController } from './stickyScrollController.js';\nimport { registerAction2 } from '../../../../platform/actions/common/actions.js';\nregisterEditorContribution(StickyScrollController.ID, StickyScrollController, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nregisterAction2(ToggleStickyScroll);\nregisterAction2(FocusStickyScroll);\nregisterAction2(SelectPreviousStickyScrollLine);\nregisterAction2(SelectNextStickyScrollLine);\nregisterAction2(GoToStickyScrollLine);\nregisterAction2(SelectEditor);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { quickSelect } from '../../../../base/common/arrays.js';\nimport { anyScore, fuzzyScore, FuzzyScore, fuzzyScoreGracefulAggressive, FuzzyScoreOptions } from '../../../../base/common/filters.js';\nimport { compareIgnoreCase } from '../../../../base/common/strings.js';\nexport class LineContext {\n    constructor(leadingLineContent, characterCountDelta) {\n        this.leadingLineContent = leadingLineContent;\n        this.characterCountDelta = characterCountDelta;\n    }\n}\n/**\n * Sorted, filtered completion view model\n * */\nexport class CompletionModel {\n    constructor(items, column, lineContext, wordDistance, options, snippetSuggestions, fuzzyScoreOptions = FuzzyScoreOptions.default, clipboardText = undefined) {\n        this.clipboardText = clipboardText;\n        this._snippetCompareFn = CompletionModel._compareCompletionItems;\n        this._items = items;\n        this._column = column;\n        this._wordDistance = wordDistance;\n        this._options = options;\n        this._refilterKind = 1 /* Refilter.All */;\n        this._lineContext = lineContext;\n        this._fuzzyScoreOptions = fuzzyScoreOptions;\n        if (snippetSuggestions === 'top') {\n            this._snippetCompareFn = CompletionModel._compareCompletionItemsSnippetsUp;\n        }\n        else if (snippetSuggestions === 'bottom') {\n            this._snippetCompareFn = CompletionModel._compareCompletionItemsSnippetsDown;\n        }\n    }\n    get lineContext() {\n        return this._lineContext;\n    }\n    set lineContext(value) {\n        if (this._lineContext.leadingLineContent !== value.leadingLineContent\n            || this._lineContext.characterCountDelta !== value.characterCountDelta) {\n            this._refilterKind = this._lineContext.characterCountDelta < value.characterCountDelta && this._filteredItems ? 2 /* Refilter.Incr */ : 1 /* Refilter.All */;\n            this._lineContext = value;\n        }\n    }\n    get items() {\n        this._ensureCachedState();\n        return this._filteredItems;\n    }\n    getItemsByProvider() {\n        this._ensureCachedState();\n        return this._itemsByProvider;\n    }\n    getIncompleteProvider() {\n        this._ensureCachedState();\n        const result = new Set();\n        for (const [provider, items] of this.getItemsByProvider()) {\n            if (items.length > 0 && items[0].container.incomplete) {\n                result.add(provider);\n            }\n        }\n        return result;\n    }\n    get stats() {\n        this._ensureCachedState();\n        return this._stats;\n    }\n    _ensureCachedState() {\n        if (this._refilterKind !== 0 /* Refilter.Nothing */) {\n            this._createCachedState();\n        }\n    }\n    _createCachedState() {\n        this._itemsByProvider = new Map();\n        const labelLengths = [];\n        const { leadingLineContent, characterCountDelta } = this._lineContext;\n        let word = '';\n        let wordLow = '';\n        // incrementally filter less\n        const source = this._refilterKind === 1 /* Refilter.All */ ? this._items : this._filteredItems;\n        const target = [];\n        // picks a score function based on the number of\n        // items that we have to score/filter and based on the\n        // user-configuration\n        const scoreFn = (!this._options.filterGraceful || source.length > 2000) ? fuzzyScore : fuzzyScoreGracefulAggressive;\n        for (let i = 0; i < source.length; i++) {\n            const item = source[i];\n            if (item.isInvalid) {\n                continue; // SKIP invalid items\n            }\n            // keep all items by their provider\n            const arr = this._itemsByProvider.get(item.provider);\n            if (arr) {\n                arr.push(item);\n            }\n            else {\n                this._itemsByProvider.set(item.provider, [item]);\n            }\n            // 'word' is that remainder of the current line that we\n            // filter and score against. In theory each suggestion uses a\n            // different word, but in practice not - that's why we cache\n            const overwriteBefore = item.position.column - item.editStart.column;\n            const wordLen = overwriteBefore + characterCountDelta - (item.position.column - this._column);\n            if (word.length !== wordLen) {\n                word = wordLen === 0 ? '' : leadingLineContent.slice(-wordLen);\n                wordLow = word.toLowerCase();\n            }\n            // remember the word against which this item was\n            // scored\n            item.word = word;\n            if (wordLen === 0) {\n                // when there is nothing to score against, don't\n                // event try to do. Use a const rank and rely on\n                // the fallback-sort using the initial sort order.\n                // use a score of `-100` because that is out of the\n                // bound of values `fuzzyScore` will return\n                item.score = FuzzyScore.Default;\n            }\n            else {\n                // skip word characters that are whitespace until\n                // we have hit the replace range (overwriteBefore)\n                let wordPos = 0;\n                while (wordPos < overwriteBefore) {\n                    const ch = word.charCodeAt(wordPos);\n                    if (ch === 32 /* CharCode.Space */ || ch === 9 /* CharCode.Tab */) {\n                        wordPos += 1;\n                    }\n                    else {\n                        break;\n                    }\n                }\n                if (wordPos >= wordLen) {\n                    // the wordPos at which scoring starts is the whole word\n                    // and therefore the same rules as not having a word apply\n                    item.score = FuzzyScore.Default;\n                }\n                else if (typeof item.completion.filterText === 'string') {\n                    // when there is a `filterText` it must match the `word`.\n                    // if it matches we check with the label to compute highlights\n                    // and if that doesn't yield a result we have no highlights,\n                    // despite having the match\n                    const match = scoreFn(word, wordLow, wordPos, item.completion.filterText, item.filterTextLow, 0, this._fuzzyScoreOptions);\n                    if (!match) {\n                        continue; // NO match\n                    }\n                    if (compareIgnoreCase(item.completion.filterText, item.textLabel) === 0) {\n                        // filterText and label are actually the same -> use good highlights\n                        item.score = match;\n                    }\n                    else {\n                        // re-run the scorer on the label in the hope of a result BUT use the rank\n                        // of the filterText-match\n                        item.score = anyScore(word, wordLow, wordPos, item.textLabel, item.labelLow, 0);\n                        item.score[0] = match[0]; // use score from filterText\n                    }\n                }\n                else {\n                    // by default match `word` against the `label`\n                    const match = scoreFn(word, wordLow, wordPos, item.textLabel, item.labelLow, 0, this._fuzzyScoreOptions);\n                    if (!match) {\n                        continue; // NO match\n                    }\n                    item.score = match;\n                }\n            }\n            item.idx = i;\n            item.distance = this._wordDistance.distance(item.position, item.completion);\n            target.push(item);\n            // update stats\n            labelLengths.push(item.textLabel.length);\n        }\n        this._filteredItems = target.sort(this._snippetCompareFn);\n        this._refilterKind = 0 /* Refilter.Nothing */;\n        this._stats = {\n            pLabelLen: labelLengths.length ?\n                quickSelect(labelLengths.length - .85, labelLengths, (a, b) => a - b)\n                : 0\n        };\n    }\n    static _compareCompletionItems(a, b) {\n        if (a.score[0] > b.score[0]) {\n            return -1;\n        }\n        else if (a.score[0] < b.score[0]) {\n            return 1;\n        }\n        else if (a.distance < b.distance) {\n            return -1;\n        }\n        else if (a.distance > b.distance) {\n            return 1;\n        }\n        else if (a.idx < b.idx) {\n            return -1;\n        }\n        else if (a.idx > b.idx) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    static _compareCompletionItemsSnippetsDown(a, b) {\n        if (a.completion.kind !== b.completion.kind) {\n            if (a.completion.kind === 27 /* CompletionItemKind.Snippet */) {\n                return 1;\n            }\n            else if (b.completion.kind === 27 /* CompletionItemKind.Snippet */) {\n                return -1;\n            }\n        }\n        return CompletionModel._compareCompletionItems(a, b);\n    }\n    static _compareCompletionItemsSnippetsUp(a, b) {\n        if (a.completion.kind !== b.completion.kind) {\n            if (a.completion.kind === 27 /* CompletionItemKind.Snippet */) {\n                return -1;\n            }\n            else if (b.completion.kind === 27 /* CompletionItemKind.Snippet */) {\n                return 1;\n            }\n        }\n        return CompletionModel._compareCompletionItems(a, b);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { CancellationError, isCancellationError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { FuzzyScore } from '../../../../base/common/filters.js';\nimport { DisposableStore, isDisposable } from '../../../../base/common/lifecycle.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { localize } from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { historyNavigationVisible } from '../../../../platform/history/browser/contextScopedHistoryWidget.js';\nexport const Context = {\n    Visible: historyNavigationVisible,\n    HasFocusedSuggestion: new RawContextKey('suggestWidgetHasFocusedSuggestion', false, localize('suggestWidgetHasSelection', \"Whether any suggestion is focused\")),\n    DetailsVisible: new RawContextKey('suggestWidgetDetailsVisible', false, localize('suggestWidgetDetailsVisible', \"Whether suggestion details are visible\")),\n    MultipleSuggestions: new RawContextKey('suggestWidgetMultipleSuggestions', false, localize('suggestWidgetMultipleSuggestions', \"Whether there are multiple suggestions to pick from\")),\n    MakesTextEdit: new RawContextKey('suggestionMakesTextEdit', true, localize('suggestionMakesTextEdit', \"Whether inserting the current suggestion yields in a change or has everything already been typed\")),\n    AcceptSuggestionsOnEnter: new RawContextKey('acceptSuggestionOnEnter', true, localize('acceptSuggestionOnEnter', \"Whether suggestions are inserted when pressing Enter\")),\n    HasInsertAndReplaceRange: new RawContextKey('suggestionHasInsertAndReplaceRange', false, localize('suggestionHasInsertAndReplaceRange', \"Whether the current suggestion has insert and replace behaviour\")),\n    InsertMode: new RawContextKey('suggestionInsertMode', undefined, { type: 'string', description: localize('suggestionInsertMode', \"Whether the default behaviour is to insert or replace\") }),\n    CanResolve: new RawContextKey('suggestionCanResolve', false, localize('suggestionCanResolve', \"Whether the current suggestion supports to resolve further details\")),\n};\nexport const suggestWidgetStatusbarMenu = new MenuId('suggestWidgetStatusBar');\nexport class CompletionItem {\n    constructor(position, completion, container, provider) {\n        var _a;\n        this.position = position;\n        this.completion = completion;\n        this.container = container;\n        this.provider = provider;\n        // validation\n        this.isInvalid = false;\n        // sorting, filtering\n        this.score = FuzzyScore.Default;\n        this.distance = 0;\n        this.textLabel = typeof completion.label === 'string'\n            ? completion.label\n            : (_a = completion.label) === null || _a === void 0 ? void 0 : _a.label;\n        // ensure lower-variants (perf)\n        this.labelLow = this.textLabel.toLowerCase();\n        // validate label\n        this.isInvalid = !this.textLabel;\n        this.sortTextLow = completion.sortText && completion.sortText.toLowerCase();\n        this.filterTextLow = completion.filterText && completion.filterText.toLowerCase();\n        this.extensionId = completion.extensionId;\n        // normalize ranges\n        if (Range.isIRange(completion.range)) {\n            this.editStart = new Position(completion.range.startLineNumber, completion.range.startColumn);\n            this.editInsertEnd = new Position(completion.range.endLineNumber, completion.range.endColumn);\n            this.editReplaceEnd = new Position(completion.range.endLineNumber, completion.range.endColumn);\n            // validate range\n            this.isInvalid = this.isInvalid\n                || Range.spansMultipleLines(completion.range) || completion.range.startLineNumber !== position.lineNumber;\n        }\n        else {\n            this.editStart = new Position(completion.range.insert.startLineNumber, completion.range.insert.startColumn);\n            this.editInsertEnd = new Position(completion.range.insert.endLineNumber, completion.range.insert.endColumn);\n            this.editReplaceEnd = new Position(completion.range.replace.endLineNumber, completion.range.replace.endColumn);\n            // validate ranges\n            this.isInvalid = this.isInvalid\n                || Range.spansMultipleLines(completion.range.insert) || Range.spansMultipleLines(completion.range.replace)\n                || completion.range.insert.startLineNumber !== position.lineNumber || completion.range.replace.startLineNumber !== position.lineNumber\n                || completion.range.insert.startColumn !== completion.range.replace.startColumn;\n        }\n        // create the suggestion resolver\n        if (typeof provider.resolveCompletionItem !== 'function') {\n            this._resolveCache = Promise.resolve();\n            this._resolveDuration = 0;\n        }\n    }\n    // ---- resolving\n    get isResolved() {\n        return this._resolveDuration !== undefined;\n    }\n    get resolveDuration() {\n        return this._resolveDuration !== undefined ? this._resolveDuration : -1;\n    }\n    async resolve(token) {\n        if (!this._resolveCache) {\n            const sub = token.onCancellationRequested(() => {\n                this._resolveCache = undefined;\n                this._resolveDuration = undefined;\n            });\n            const sw = new StopWatch(true);\n            this._resolveCache = Promise.resolve(this.provider.resolveCompletionItem(this.completion, token)).then(value => {\n                Object.assign(this.completion, value);\n                this._resolveDuration = sw.elapsed();\n            }, err => {\n                if (isCancellationError(err)) {\n                    // the IPC queue will reject the request with the\n                    // cancellation error -> reset cached\n                    this._resolveCache = undefined;\n                    this._resolveDuration = undefined;\n                }\n            }).finally(() => {\n                sub.dispose();\n            });\n        }\n        return this._resolveCache;\n    }\n}\nexport class CompletionOptions {\n    constructor(snippetSortOrder = 2 /* SnippetSortOrder.Bottom */, kindFilter = new Set(), providerFilter = new Set(), providerItemsToReuse = new Map(), showDeprecated = true) {\n        this.snippetSortOrder = snippetSortOrder;\n        this.kindFilter = kindFilter;\n        this.providerFilter = providerFilter;\n        this.providerItemsToReuse = providerItemsToReuse;\n        this.showDeprecated = showDeprecated;\n    }\n}\nCompletionOptions.default = new CompletionOptions();\nlet _snippetSuggestSupport;\nexport function getSnippetSuggestSupport() {\n    return _snippetSuggestSupport;\n}\nexport class CompletionItemModel {\n    constructor(items, needsClipboard, durations, disposable) {\n        this.items = items;\n        this.needsClipboard = needsClipboard;\n        this.durations = durations;\n        this.disposable = disposable;\n    }\n}\nexport async function provideSuggestionItems(registry, model, position, options = CompletionOptions.default, context = { triggerKind: 0 /* languages.CompletionTriggerKind.Invoke */ }, token = CancellationToken.None) {\n    const sw = new StopWatch();\n    position = position.clone();\n    const word = model.getWordAtPosition(position);\n    const defaultReplaceRange = word ? new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn) : Range.fromPositions(position);\n    const defaultRange = { replace: defaultReplaceRange, insert: defaultReplaceRange.setEndPosition(position.lineNumber, position.column) };\n    const result = [];\n    const disposables = new DisposableStore();\n    const durations = [];\n    let needsClipboard = false;\n    const onCompletionList = (provider, container, sw) => {\n        var _a, _b, _c;\n        let didAddResult = false;\n        if (!container) {\n            return didAddResult;\n        }\n        for (const suggestion of container.suggestions) {\n            if (!options.kindFilter.has(suggestion.kind)) {\n                // skip if not showing deprecated suggestions\n                if (!options.showDeprecated && ((_a = suggestion === null || suggestion === void 0 ? void 0 : suggestion.tags) === null || _a === void 0 ? void 0 : _a.includes(1 /* languages.CompletionItemTag.Deprecated */))) {\n                    continue;\n                }\n                // fill in default range when missing\n                if (!suggestion.range) {\n                    suggestion.range = defaultRange;\n                }\n                // fill in default sortText when missing\n                if (!suggestion.sortText) {\n                    suggestion.sortText = typeof suggestion.label === 'string' ? suggestion.label : suggestion.label.label;\n                }\n                if (!needsClipboard && suggestion.insertTextRules && suggestion.insertTextRules & 4 /* languages.CompletionItemInsertTextRule.InsertAsSnippet */) {\n                    needsClipboard = SnippetParser.guessNeedsClipboard(suggestion.insertText);\n                }\n                result.push(new CompletionItem(position, suggestion, container, provider));\n                didAddResult = true;\n            }\n        }\n        if (isDisposable(container)) {\n            disposables.add(container);\n        }\n        durations.push({\n            providerName: (_b = provider._debugDisplayName) !== null && _b !== void 0 ? _b : 'unknown_provider', elapsedProvider: (_c = container.duration) !== null && _c !== void 0 ? _c : -1, elapsedOverall: sw.elapsed()\n        });\n        return didAddResult;\n    };\n    // ask for snippets in parallel to asking \"real\" providers. Only do something if configured to\n    // do so - no snippet filter, no special-providers-only request\n    const snippetCompletions = (async () => {\n        if (!_snippetSuggestSupport || options.kindFilter.has(27 /* languages.CompletionItemKind.Snippet */)) {\n            return;\n        }\n        // we have items from a previous session that we can reuse\n        const reuseItems = options.providerItemsToReuse.get(_snippetSuggestSupport);\n        if (reuseItems) {\n            reuseItems.forEach(item => result.push(item));\n            return;\n        }\n        if (options.providerFilter.size > 0 && !options.providerFilter.has(_snippetSuggestSupport)) {\n            return;\n        }\n        const sw = new StopWatch();\n        const list = await _snippetSuggestSupport.provideCompletionItems(model, position, context, token);\n        onCompletionList(_snippetSuggestSupport, list, sw);\n    })();\n    // add suggestions from contributed providers - providers are ordered in groups of\n    // equal score and once a group produces a result the process stops\n    // get provider groups, always add snippet suggestion provider\n    for (const providerGroup of registry.orderedGroups(model)) {\n        // for each support in the group ask for suggestions\n        let didAddResult = false;\n        await Promise.all(providerGroup.map(async (provider) => {\n            // we have items from a previous session that we can reuse\n            if (options.providerItemsToReuse.has(provider)) {\n                const items = options.providerItemsToReuse.get(provider);\n                items.forEach(item => result.push(item));\n                didAddResult = didAddResult || items.length > 0;\n                return;\n            }\n            // check if this provider is filtered out\n            if (options.providerFilter.size > 0 && !options.providerFilter.has(provider)) {\n                return;\n            }\n            try {\n                const sw = new StopWatch();\n                const list = await provider.provideCompletionItems(model, position, context, token);\n                didAddResult = onCompletionList(provider, list, sw) || didAddResult;\n            }\n            catch (err) {\n                onUnexpectedExternalError(err);\n            }\n        }));\n        if (didAddResult || token.isCancellationRequested) {\n            break;\n        }\n    }\n    await snippetCompletions;\n    if (token.isCancellationRequested) {\n        disposables.dispose();\n        return Promise.reject(new CancellationError());\n    }\n    return new CompletionItemModel(result.sort(getSuggestionComparator(options.snippetSortOrder)), needsClipboard, { entries: durations, elapsed: sw.elapsed() }, disposables);\n}\nfunction defaultComparator(a, b) {\n    // check with 'sortText'\n    if (a.sortTextLow && b.sortTextLow) {\n        if (a.sortTextLow < b.sortTextLow) {\n            return -1;\n        }\n        else if (a.sortTextLow > b.sortTextLow) {\n            return 1;\n        }\n    }\n    // check with 'label'\n    if (a.textLabel < b.textLabel) {\n        return -1;\n    }\n    else if (a.textLabel > b.textLabel) {\n        return 1;\n    }\n    // check with 'type'\n    return a.completion.kind - b.completion.kind;\n}\nfunction snippetUpComparator(a, b) {\n    if (a.completion.kind !== b.completion.kind) {\n        if (a.completion.kind === 27 /* languages.CompletionItemKind.Snippet */) {\n            return -1;\n        }\n        else if (b.completion.kind === 27 /* languages.CompletionItemKind.Snippet */) {\n            return 1;\n        }\n    }\n    return defaultComparator(a, b);\n}\nfunction snippetDownComparator(a, b) {\n    if (a.completion.kind !== b.completion.kind) {\n        if (a.completion.kind === 27 /* languages.CompletionItemKind.Snippet */) {\n            return 1;\n        }\n        else if (b.completion.kind === 27 /* languages.CompletionItemKind.Snippet */) {\n            return -1;\n        }\n    }\n    return defaultComparator(a, b);\n}\nconst _snippetComparators = new Map();\n_snippetComparators.set(0 /* SnippetSortOrder.Top */, snippetUpComparator);\n_snippetComparators.set(2 /* SnippetSortOrder.Bottom */, snippetDownComparator);\n_snippetComparators.set(1 /* SnippetSortOrder.Inline */, defaultComparator);\nexport function getSuggestionComparator(snippetConfig) {\n    return _snippetComparators.get(snippetConfig);\n}\nCommandsRegistry.registerCommand('_executeCompletionItemProvider', async (accessor, ...args) => {\n    const [uri, position, triggerCharacter, maxItemsToResolve] = args;\n    assertType(URI.isUri(uri));\n    assertType(Position.isIPosition(position));\n    assertType(typeof triggerCharacter === 'string' || !triggerCharacter);\n    assertType(typeof maxItemsToResolve === 'number' || !maxItemsToResolve);\n    const { completionProvider } = accessor.get(ILanguageFeaturesService);\n    const ref = await accessor.get(ITextModelService).createModelReference(uri);\n    try {\n        const result = {\n            incomplete: false,\n            suggestions: []\n        };\n        const resolving = [];\n        const actualPosition = ref.object.textEditorModel.validatePosition(position);\n        const completions = await provideSuggestionItems(completionProvider, ref.object.textEditorModel, actualPosition, undefined, { triggerCharacter: triggerCharacter !== null && triggerCharacter !== void 0 ? triggerCharacter : undefined, triggerKind: triggerCharacter ? 1 /* languages.CompletionTriggerKind.TriggerCharacter */ : 0 /* languages.CompletionTriggerKind.Invoke */ });\n        for (const item of completions.items) {\n            if (resolving.length < (maxItemsToResolve !== null && maxItemsToResolve !== void 0 ? maxItemsToResolve : 0)) {\n                resolving.push(item.resolve(CancellationToken.None));\n            }\n            result.incomplete = result.incomplete || item.container.incomplete;\n            result.suggestions.push(item.completion);\n        }\n        try {\n            await Promise.all(resolving);\n            return result;\n        }\n        finally {\n            setTimeout(() => completions.disposable.dispose(), 100);\n        }\n    }\n    finally {\n        ref.dispose();\n    }\n});\nexport function showSimpleSuggestions(editor, provider) {\n    var _a;\n    (_a = editor.getContribution('editor.contrib.suggestController')) === null || _a === void 0 ? void 0 : _a.triggerSuggest(new Set().add(provider), undefined, true);\n}\nexport class QuickSuggestionsOptions {\n    static isAllOff(config) {\n        return config.other === 'off' && config.comments === 'off' && config.strings === 'off';\n    }\n    static isAllOn(config) {\n        return config.other === 'on' && config.comments === 'on' && config.strings === 'on';\n    }\n    static valueFor(config, tokenType) {\n        switch (tokenType) {\n            case 1 /* StandardTokenType.Comment */: return config.comments;\n            case 2 /* StandardTokenType.String */: return config.strings;\n            default: return config.other;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar WordContextKey_1;\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nlet WordContextKey = WordContextKey_1 = class WordContextKey {\n    constructor(_editor, contextKeyService) {\n        this._editor = _editor;\n        this._enabled = false;\n        this._ckAtEnd = WordContextKey_1.AtEnd.bindTo(contextKeyService);\n        this._configListener = this._editor.onDidChangeConfiguration(e => e.hasChanged(123 /* EditorOption.tabCompletion */) && this._update());\n        this._update();\n    }\n    dispose() {\n        var _a;\n        this._configListener.dispose();\n        (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._ckAtEnd.reset();\n    }\n    _update() {\n        // only update this when tab completions are enabled\n        const enabled = this._editor.getOption(123 /* EditorOption.tabCompletion */) === 'on';\n        if (this._enabled === enabled) {\n            return;\n        }\n        this._enabled = enabled;\n        if (this._enabled) {\n            const checkForWordEnd = () => {\n                if (!this._editor.hasModel()) {\n                    this._ckAtEnd.set(false);\n                    return;\n                }\n                const model = this._editor.getModel();\n                const selection = this._editor.getSelection();\n                const word = model.getWordAtPosition(selection.getStartPosition());\n                if (!word) {\n                    this._ckAtEnd.set(false);\n                    return;\n                }\n                this._ckAtEnd.set(word.endColumn === selection.getStartPosition().column);\n            };\n            this._selectionListener = this._editor.onDidChangeCursorSelection(checkForWordEnd);\n            checkForWordEnd();\n        }\n        else if (this._selectionListener) {\n            this._ckAtEnd.reset();\n            this._selectionListener.dispose();\n            this._selectionListener = undefined;\n        }\n    }\n};\nWordContextKey.AtEnd = new RawContextKey('atEndOfWord', false);\nWordContextKey = WordContextKey_1 = __decorate([\n    __param(1, IContextKeyService)\n], WordContextKey);\nexport { WordContextKey };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar SuggestAlternatives_1;\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nlet SuggestAlternatives = SuggestAlternatives_1 = class SuggestAlternatives {\n    constructor(_editor, contextKeyService) {\n        this._editor = _editor;\n        this._index = 0;\n        this._ckOtherSuggestions = SuggestAlternatives_1.OtherSuggestions.bindTo(contextKeyService);\n    }\n    dispose() {\n        this.reset();\n    }\n    reset() {\n        var _a;\n        this._ckOtherSuggestions.reset();\n        (_a = this._listener) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._model = undefined;\n        this._acceptNext = undefined;\n        this._ignore = false;\n    }\n    set({ model, index }, acceptNext) {\n        // no suggestions -> nothing to do\n        if (model.items.length === 0) {\n            this.reset();\n            return;\n        }\n        // no alternative suggestions -> nothing to do\n        const nextIndex = SuggestAlternatives_1._moveIndex(true, model, index);\n        if (nextIndex === index) {\n            this.reset();\n            return;\n        }\n        this._acceptNext = acceptNext;\n        this._model = model;\n        this._index = index;\n        this._listener = this._editor.onDidChangeCursorPosition(() => {\n            if (!this._ignore) {\n                this.reset();\n            }\n        });\n        this._ckOtherSuggestions.set(true);\n    }\n    static _moveIndex(fwd, model, index) {\n        let newIndex = index;\n        for (let rounds = model.items.length; rounds > 0; rounds--) {\n            newIndex = (newIndex + model.items.length + (fwd ? +1 : -1)) % model.items.length;\n            if (newIndex === index) {\n                break;\n            }\n            if (!model.items[newIndex].completion.additionalTextEdits) {\n                break;\n            }\n        }\n        return newIndex;\n    }\n    next() {\n        this._move(true);\n    }\n    prev() {\n        this._move(false);\n    }\n    _move(fwd) {\n        if (!this._model) {\n            // nothing to reason about\n            return;\n        }\n        try {\n            this._ignore = true;\n            this._index = SuggestAlternatives_1._moveIndex(fwd, this._model, this._index);\n            this._acceptNext({ index: this._index, item: this._model.items[this._index], model: this._model });\n        }\n        finally {\n            this._ignore = false;\n        }\n    }\n};\nSuggestAlternatives.OtherSuggestions = new RawContextKey('hasOtherSuggestions', false);\nSuggestAlternatives = SuggestAlternatives_1 = __decorate([\n    __param(1, IContextKeyService)\n], SuggestAlternatives);\nexport { SuggestAlternatives };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { CharacterSet } from '../../../common/core/characterClassifier.js';\nexport class CommitCharacterController {\n    constructor(editor, widget, model, accept) {\n        this._disposables = new DisposableStore();\n        this._disposables.add(model.onDidSuggest(e => {\n            if (e.completionModel.items.length === 0) {\n                this.reset();\n            }\n        }));\n        this._disposables.add(model.onDidCancel(e => {\n            this.reset();\n        }));\n        this._disposables.add(widget.onDidShow(() => this._onItem(widget.getFocusedItem())));\n        this._disposables.add(widget.onDidFocus(this._onItem, this));\n        this._disposables.add(widget.onDidHide(this.reset, this));\n        this._disposables.add(editor.onWillType(text => {\n            if (this._active && !widget.isFrozen() && model.state !== 0 /* State.Idle */) {\n                const ch = text.charCodeAt(text.length - 1);\n                if (this._active.acceptCharacters.has(ch) && editor.getOption(0 /* EditorOption.acceptSuggestionOnCommitCharacter */)) {\n                    accept(this._active.item);\n                }\n            }\n        }));\n    }\n    _onItem(selected) {\n        if (!selected || !isNonEmptyArray(selected.item.completion.commitCharacters)) {\n            // no item or no commit characters\n            this.reset();\n            return;\n        }\n        if (this._active && this._active.item.item === selected.item) {\n            // still the same item\n            return;\n        }\n        // keep item and its commit characters\n        const acceptCharacters = new CharacterSet();\n        for (const ch of selected.item.completion.commitCharacters) {\n            if (ch.length > 0) {\n                acceptCharacters.add(ch.charCodeAt(0));\n            }\n        }\n        this._active = { acceptCharacters, item: selected };\n    }\n    reset() {\n        this._active = undefined;\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nexport class OvertypingCapturer {\n    constructor(editor, suggestModel) {\n        this._disposables = new DisposableStore();\n        this._lastOvertyped = [];\n        this._locked = false;\n        this._disposables.add(editor.onWillType(() => {\n            if (this._locked || !editor.hasModel()) {\n                return;\n            }\n            const selections = editor.getSelections();\n            const selectionsLength = selections.length;\n            // Check if it will overtype any selections\n            let willOvertype = false;\n            for (let i = 0; i < selectionsLength; i++) {\n                if (!selections[i].isEmpty()) {\n                    willOvertype = true;\n                    break;\n                }\n            }\n            if (!willOvertype) {\n                if (this._lastOvertyped.length !== 0) {\n                    this._lastOvertyped.length = 0;\n                }\n                return;\n            }\n            this._lastOvertyped = [];\n            const model = editor.getModel();\n            for (let i = 0; i < selectionsLength; i++) {\n                const selection = selections[i];\n                // Check for overtyping capturer restrictions\n                if (model.getValueLengthInRange(selection) > OvertypingCapturer._maxSelectionLength) {\n                    return;\n                }\n                this._lastOvertyped[i] = { value: model.getValueInRange(selection), multiline: selection.startLineNumber !== selection.endLineNumber };\n            }\n        }));\n        this._disposables.add(suggestModel.onDidTrigger(e => {\n            this._locked = true;\n        }));\n        this._disposables.add(suggestModel.onDidCancel(e => {\n            this._locked = false;\n        }));\n    }\n    getLastOvertypedInfo(idx) {\n        if (idx >= 0 && idx < this._lastOvertyped.length) {\n            return this._lastOvertyped[idx];\n        }\n        return undefined;\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n}\nOvertypingCapturer._maxSelectionLength = 51200;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { ActionBar } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { localize } from '../../../../nls.js';\nimport { MenuEntryActionViewItem } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { IMenuService, MenuItemAction } from '../../../../platform/actions/common/actions.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nclass StatusBarViewItem extends MenuEntryActionViewItem {\n    updateLabel() {\n        const kb = this._keybindingService.lookupKeybinding(this._action.id, this._contextKeyService);\n        if (!kb) {\n            return super.updateLabel();\n        }\n        if (this.label) {\n            this.label.textContent = localize({ key: 'content', comment: ['A label', 'A keybinding'] }, '{0} ({1})', this._action.label, StatusBarViewItem.symbolPrintEnter(kb));\n        }\n    }\n    static symbolPrintEnter(kb) {\n        var _a;\n        return (_a = kb.getLabel()) === null || _a === void 0 ? void 0 : _a.replace(/\\benter\\b/gi, '\\u23CE');\n    }\n}\nlet SuggestWidgetStatus = class SuggestWidgetStatus {\n    constructor(container, _menuId, instantiationService, _menuService, _contextKeyService) {\n        this._menuId = _menuId;\n        this._menuService = _menuService;\n        this._contextKeyService = _contextKeyService;\n        this._menuDisposables = new DisposableStore();\n        this.element = dom.append(container, dom.$('.suggest-status-bar'));\n        const actionViewItemProvider = (action => {\n            return action instanceof MenuItemAction ? instantiationService.createInstance(StatusBarViewItem, action, undefined) : undefined;\n        });\n        this._leftActions = new ActionBar(this.element, { actionViewItemProvider });\n        this._rightActions = new ActionBar(this.element, { actionViewItemProvider });\n        this._leftActions.domNode.classList.add('left');\n        this._rightActions.domNode.classList.add('right');\n    }\n    dispose() {\n        this._menuDisposables.dispose();\n        this._leftActions.dispose();\n        this._rightActions.dispose();\n        this.element.remove();\n    }\n    show() {\n        const menu = this._menuService.createMenu(this._menuId, this._contextKeyService);\n        const renderMenu = () => {\n            const left = [];\n            const right = [];\n            for (const [group, actions] of menu.getActions()) {\n                if (group === 'left') {\n                    left.push(...actions);\n                }\n                else {\n                    right.push(...actions);\n                }\n            }\n            this._leftActions.clear();\n            this._leftActions.push(left);\n            this._rightActions.clear();\n            this._rightActions.push(right);\n        };\n        this._menuDisposables.add(menu.onDidChange(() => renderMenu()));\n        this._menuDisposables.add(menu);\n    }\n    hide() {\n        this._menuDisposables.clear();\n    }\n};\nSuggestWidgetStatus = __decorate([\n    __param(2, IInstantiationService),\n    __param(3, IMenuService),\n    __param(4, IContextKeyService)\n], SuggestWidgetStatus);\nexport { SuggestWidgetStatus };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { DomScrollableElement } from '../../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../../browser/widget/markdownRenderer/browser/markdownRenderer.js';\nimport { ResizableHTMLElement } from '../../../../base/browser/ui/resizable/resizable.js';\nimport * as nls from '../../../../nls.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nexport function canExpandCompletionItem(item) {\n    return !!item && Boolean(item.completion.documentation || item.completion.detail && item.completion.detail !== item.completion.label);\n}\nlet SuggestDetailsWidget = class SuggestDetailsWidget {\n    constructor(_editor, instaService) {\n        this._editor = _editor;\n        this._onDidClose = new Emitter();\n        this.onDidClose = this._onDidClose.event;\n        this._onDidChangeContents = new Emitter();\n        this.onDidChangeContents = this._onDidChangeContents.event;\n        this._disposables = new DisposableStore();\n        this._renderDisposeable = new DisposableStore();\n        this._borderWidth = 1;\n        this._size = new dom.Dimension(330, 0);\n        this.domNode = dom.$('.suggest-details');\n        this.domNode.classList.add('no-docs');\n        this._markdownRenderer = instaService.createInstance(MarkdownRenderer, { editor: _editor });\n        this._body = dom.$('.body');\n        this._scrollbar = new DomScrollableElement(this._body, {\n            alwaysConsumeMouseWheel: true,\n        });\n        dom.append(this.domNode, this._scrollbar.getDomNode());\n        this._disposables.add(this._scrollbar);\n        this._header = dom.append(this._body, dom.$('.header'));\n        this._close = dom.append(this._header, dom.$('span' + ThemeIcon.asCSSSelector(Codicon.close)));\n        this._close.title = nls.localize('details.close', \"Close\");\n        this._type = dom.append(this._header, dom.$('p.type'));\n        this._docs = dom.append(this._body, dom.$('p.docs'));\n        this._configureFont();\n        this._disposables.add(this._editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(50 /* EditorOption.fontInfo */)) {\n                this._configureFont();\n            }\n        }));\n    }\n    dispose() {\n        this._disposables.dispose();\n        this._renderDisposeable.dispose();\n    }\n    _configureFont() {\n        const options = this._editor.getOptions();\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        const fontFamily = fontInfo.getMassagedFontFamily();\n        const fontSize = options.get(119 /* EditorOption.suggestFontSize */) || fontInfo.fontSize;\n        const lineHeight = options.get(120 /* EditorOption.suggestLineHeight */) || fontInfo.lineHeight;\n        const fontWeight = fontInfo.fontWeight;\n        const fontSizePx = `${fontSize}px`;\n        const lineHeightPx = `${lineHeight}px`;\n        this.domNode.style.fontSize = fontSizePx;\n        this.domNode.style.lineHeight = `${lineHeight / fontSize}`;\n        this.domNode.style.fontWeight = fontWeight;\n        this.domNode.style.fontFeatureSettings = fontInfo.fontFeatureSettings;\n        this._type.style.fontFamily = fontFamily;\n        this._close.style.height = lineHeightPx;\n        this._close.style.width = lineHeightPx;\n    }\n    getLayoutInfo() {\n        const lineHeight = this._editor.getOption(120 /* EditorOption.suggestLineHeight */) || this._editor.getOption(50 /* EditorOption.fontInfo */).lineHeight;\n        const borderWidth = this._borderWidth;\n        const borderHeight = borderWidth * 2;\n        return {\n            lineHeight,\n            borderWidth,\n            borderHeight,\n            verticalPadding: 22,\n            horizontalPadding: 14\n        };\n    }\n    renderLoading() {\n        this._type.textContent = nls.localize('loading', \"Loading...\");\n        this._docs.textContent = '';\n        this.domNode.classList.remove('no-docs', 'no-type');\n        this.layout(this.size.width, this.getLayoutInfo().lineHeight * 2);\n        this._onDidChangeContents.fire(this);\n    }\n    renderItem(item, explainMode) {\n        var _a, _b;\n        this._renderDisposeable.clear();\n        let { detail, documentation } = item.completion;\n        if (explainMode) {\n            let md = '';\n            md += `score: ${item.score[0]}\\n`;\n            md += `prefix: ${(_a = item.word) !== null && _a !== void 0 ? _a : '(no prefix)'}\\n`;\n            md += `word: ${item.completion.filterText ? item.completion.filterText + ' (filterText)' : item.textLabel}\\n`;\n            md += `distance: ${item.distance} (localityBonus-setting)\\n`;\n            md += `index: ${item.idx}, based on ${item.completion.sortText && `sortText: \"${item.completion.sortText}\"` || 'label'}\\n`;\n            md += `commit_chars: ${(_b = item.completion.commitCharacters) === null || _b === void 0 ? void 0 : _b.join('')}\\n`;\n            documentation = new MarkdownString().appendCodeblock('empty', md);\n            detail = `Provider: ${item.provider._debugDisplayName}`;\n        }\n        if (!explainMode && !canExpandCompletionItem(item)) {\n            this.clearContents();\n            return;\n        }\n        this.domNode.classList.remove('no-docs', 'no-type');\n        // --- details\n        if (detail) {\n            const cappedDetail = detail.length > 100000 ? `${detail.substr(0, 100000)}…` : detail;\n            this._type.textContent = cappedDetail;\n            this._type.title = cappedDetail;\n            dom.show(this._type);\n            this._type.classList.toggle('auto-wrap', !/\\r?\\n^\\s+/gmi.test(cappedDetail));\n        }\n        else {\n            dom.clearNode(this._type);\n            this._type.title = '';\n            dom.hide(this._type);\n            this.domNode.classList.add('no-type');\n        }\n        // --- documentation\n        dom.clearNode(this._docs);\n        if (typeof documentation === 'string') {\n            this._docs.classList.remove('markdown-docs');\n            this._docs.textContent = documentation;\n        }\n        else if (documentation) {\n            this._docs.classList.add('markdown-docs');\n            dom.clearNode(this._docs);\n            const renderedContents = this._markdownRenderer.render(documentation);\n            this._docs.appendChild(renderedContents.element);\n            this._renderDisposeable.add(renderedContents);\n            this._renderDisposeable.add(this._markdownRenderer.onDidRenderAsync(() => {\n                this.layout(this._size.width, this._type.clientHeight + this._docs.clientHeight);\n                this._onDidChangeContents.fire(this);\n            }));\n        }\n        this.domNode.style.userSelect = 'text';\n        this.domNode.tabIndex = -1;\n        this._close.onmousedown = e => {\n            e.preventDefault();\n            e.stopPropagation();\n        };\n        this._close.onclick = e => {\n            e.preventDefault();\n            e.stopPropagation();\n            this._onDidClose.fire();\n        };\n        this._body.scrollTop = 0;\n        this.layout(this._size.width, this._type.clientHeight + this._docs.clientHeight);\n        this._onDidChangeContents.fire(this);\n    }\n    clearContents() {\n        this.domNode.classList.add('no-docs');\n        this._type.textContent = '';\n        this._docs.textContent = '';\n    }\n    get isEmpty() {\n        return this.domNode.classList.contains('no-docs');\n    }\n    get size() {\n        return this._size;\n    }\n    layout(width, height) {\n        const newSize = new dom.Dimension(width, height);\n        if (!dom.Dimension.equals(newSize, this._size)) {\n            this._size = newSize;\n            dom.size(this.domNode, width, height);\n        }\n        this._scrollbar.scanDomNode();\n    }\n    scrollDown(much = 8) {\n        this._body.scrollTop += much;\n    }\n    scrollUp(much = 8) {\n        this._body.scrollTop -= much;\n    }\n    scrollTop() {\n        this._body.scrollTop = 0;\n    }\n    scrollBottom() {\n        this._body.scrollTop = this._body.scrollHeight;\n    }\n    pageDown() {\n        this.scrollDown(80);\n    }\n    pageUp() {\n        this.scrollUp(80);\n    }\n    set borderWidth(width) {\n        this._borderWidth = width;\n    }\n    get borderWidth() {\n        return this._borderWidth;\n    }\n};\nSuggestDetailsWidget = __decorate([\n    __param(1, IInstantiationService)\n], SuggestDetailsWidget);\nexport { SuggestDetailsWidget };\nexport class SuggestDetailsOverlay {\n    constructor(widget, _editor) {\n        this.widget = widget;\n        this._editor = _editor;\n        this.allowEditorOverflow = true;\n        this._disposables = new DisposableStore();\n        this._added = false;\n        this._preferAlignAtTop = true;\n        this._resizable = new ResizableHTMLElement();\n        this._resizable.domNode.classList.add('suggest-details-container');\n        this._resizable.domNode.appendChild(widget.domNode);\n        this._resizable.enableSashes(false, true, true, false);\n        let topLeftNow;\n        let sizeNow;\n        let deltaTop = 0;\n        let deltaLeft = 0;\n        this._disposables.add(this._resizable.onDidWillResize(() => {\n            topLeftNow = this._topLeft;\n            sizeNow = this._resizable.size;\n        }));\n        this._disposables.add(this._resizable.onDidResize(e => {\n            if (topLeftNow && sizeNow) {\n                this.widget.layout(e.dimension.width, e.dimension.height);\n                let updateTopLeft = false;\n                if (e.west) {\n                    deltaLeft = sizeNow.width - e.dimension.width;\n                    updateTopLeft = true;\n                }\n                if (e.north) {\n                    deltaTop = sizeNow.height - e.dimension.height;\n                    updateTopLeft = true;\n                }\n                if (updateTopLeft) {\n                    this._applyTopLeft({\n                        top: topLeftNow.top + deltaTop,\n                        left: topLeftNow.left + deltaLeft,\n                    });\n                }\n            }\n            if (e.done) {\n                topLeftNow = undefined;\n                sizeNow = undefined;\n                deltaTop = 0;\n                deltaLeft = 0;\n                this._userSize = e.dimension;\n            }\n        }));\n        this._disposables.add(this.widget.onDidChangeContents(() => {\n            var _a;\n            if (this._anchorBox) {\n                this._placeAtAnchor(this._anchorBox, (_a = this._userSize) !== null && _a !== void 0 ? _a : this.widget.size, this._preferAlignAtTop);\n            }\n        }));\n    }\n    dispose() {\n        this._resizable.dispose();\n        this._disposables.dispose();\n        this.hide();\n    }\n    getId() {\n        return 'suggest.details';\n    }\n    getDomNode() {\n        return this._resizable.domNode;\n    }\n    getPosition() {\n        return this._topLeft ? { preference: this._topLeft } : null;\n    }\n    show() {\n        if (!this._added) {\n            this._editor.addOverlayWidget(this);\n            this._added = true;\n        }\n    }\n    hide(sessionEnded = false) {\n        this._resizable.clearSashHoverState();\n        if (this._added) {\n            this._editor.removeOverlayWidget(this);\n            this._added = false;\n            this._anchorBox = undefined;\n            this._topLeft = undefined;\n        }\n        if (sessionEnded) {\n            this._userSize = undefined;\n            this.widget.clearContents();\n        }\n    }\n    placeAtAnchor(anchor, preferAlignAtTop) {\n        var _a;\n        const anchorBox = anchor.getBoundingClientRect();\n        this._anchorBox = anchorBox;\n        this._preferAlignAtTop = preferAlignAtTop;\n        this._placeAtAnchor(this._anchorBox, (_a = this._userSize) !== null && _a !== void 0 ? _a : this.widget.size, preferAlignAtTop);\n    }\n    _placeAtAnchor(anchorBox, size, preferAlignAtTop) {\n        var _a;\n        const bodyBox = dom.getClientArea(this.getDomNode().ownerDocument.body);\n        const info = this.widget.getLayoutInfo();\n        const defaultMinSize = new dom.Dimension(220, 2 * info.lineHeight);\n        const defaultTop = anchorBox.top;\n        // EAST\n        const eastPlacement = (function () {\n            const width = bodyBox.width - (anchorBox.left + anchorBox.width + info.borderWidth + info.horizontalPadding);\n            const left = -info.borderWidth + anchorBox.left + anchorBox.width;\n            const maxSizeTop = new dom.Dimension(width, bodyBox.height - anchorBox.top - info.borderHeight - info.verticalPadding);\n            const maxSizeBottom = maxSizeTop.with(undefined, anchorBox.top + anchorBox.height - info.borderHeight - info.verticalPadding);\n            return { top: defaultTop, left, fit: width - size.width, maxSizeTop, maxSizeBottom, minSize: defaultMinSize.with(Math.min(width, defaultMinSize.width)) };\n        })();\n        // WEST\n        const westPlacement = (function () {\n            const width = anchorBox.left - info.borderWidth - info.horizontalPadding;\n            const left = Math.max(info.horizontalPadding, anchorBox.left - size.width - info.borderWidth);\n            const maxSizeTop = new dom.Dimension(width, bodyBox.height - anchorBox.top - info.borderHeight - info.verticalPadding);\n            const maxSizeBottom = maxSizeTop.with(undefined, anchorBox.top + anchorBox.height - info.borderHeight - info.verticalPadding);\n            return { top: defaultTop, left, fit: width - size.width, maxSizeTop, maxSizeBottom, minSize: defaultMinSize.with(Math.min(width, defaultMinSize.width)) };\n        })();\n        // SOUTH\n        const southPacement = (function () {\n            const left = anchorBox.left;\n            const top = -info.borderWidth + anchorBox.top + anchorBox.height;\n            const maxSizeBottom = new dom.Dimension(anchorBox.width - info.borderHeight, bodyBox.height - anchorBox.top - anchorBox.height - info.verticalPadding);\n            return { top, left, fit: maxSizeBottom.height - size.height, maxSizeBottom, maxSizeTop: maxSizeBottom, minSize: defaultMinSize.with(maxSizeBottom.width) };\n        })();\n        // take first placement that fits or the first with \"least bad\" fit\n        const placements = [eastPlacement, westPlacement, southPacement];\n        const placement = (_a = placements.find(p => p.fit >= 0)) !== null && _a !== void 0 ? _a : placements.sort((a, b) => b.fit - a.fit)[0];\n        // top/bottom placement\n        const bottom = anchorBox.top + anchorBox.height - info.borderHeight;\n        let alignAtTop;\n        let height = size.height;\n        const maxHeight = Math.max(placement.maxSizeTop.height, placement.maxSizeBottom.height);\n        if (height > maxHeight) {\n            height = maxHeight;\n        }\n        let maxSize;\n        if (preferAlignAtTop) {\n            if (height <= placement.maxSizeTop.height) {\n                alignAtTop = true;\n                maxSize = placement.maxSizeTop;\n            }\n            else {\n                alignAtTop = false;\n                maxSize = placement.maxSizeBottom;\n            }\n        }\n        else {\n            if (height <= placement.maxSizeBottom.height) {\n                alignAtTop = false;\n                maxSize = placement.maxSizeBottom;\n            }\n            else {\n                alignAtTop = true;\n                maxSize = placement.maxSizeTop;\n            }\n        }\n        let { top, left } = placement;\n        if (!alignAtTop && height > anchorBox.height) {\n            top = bottom - height;\n        }\n        const editorDomNode = this._editor.getDomNode();\n        if (editorDomNode) {\n            // get bounding rectangle of the suggest widget relative to the editor\n            const editorBoundingBox = editorDomNode.getBoundingClientRect();\n            top -= editorBoundingBox.top;\n            left -= editorBoundingBox.left;\n        }\n        this._applyTopLeft({ left, top });\n        this._resizable.enableSashes(!alignAtTop, placement === eastPlacement, alignAtTop, placement !== eastPlacement);\n        this._resizable.minSize = placement.minSize;\n        this._resizable.maxSize = maxSize;\n        this._resizable.layout(height, Math.min(maxSize.width, size.width));\n        this.widget.layout(this._resizable.size.width, this._resizable.size.height);\n    }\n    _applyTopLeft(topLeft) {\n        this._topLeft = topLeft;\n        this._editor.layoutOverlayWidget(this);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar _a;\nimport { $, append, hide, show } from '../../../../base/browser/dom.js';\nimport { IconLabel } from '../../../../base/browser/ui/iconLabel/iconLabel.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { createMatches } from '../../../../base/common/filters.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { CompletionItemKinds } from '../../../common/languages.js';\nimport { getIconClasses } from '../../../common/services/getIconClasses.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport * as nls from '../../../../nls.js';\nimport { FileKind } from '../../../../platform/files/common/files.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { canExpandCompletionItem } from './suggestWidgetDetails.js';\nexport function getAriaId(index) {\n    return `suggest-aria-id:${index}`;\n}\nconst suggestMoreInfoIcon = registerIcon('suggest-more-info', Codicon.chevronRight, nls.localize('suggestMoreInfoIcon', 'Icon for more information in the suggest widget.'));\nconst _completionItemColor = new (_a = class ColorExtractor {\n        extract(item, out) {\n            if (item.textLabel.match(_a._regexStrict)) {\n                out[0] = item.textLabel;\n                return true;\n            }\n            if (item.completion.detail && item.completion.detail.match(_a._regexStrict)) {\n                out[0] = item.completion.detail;\n                return true;\n            }\n            if (item.completion.documentation) {\n                const value = typeof item.completion.documentation === 'string'\n                    ? item.completion.documentation\n                    : item.completion.documentation.value;\n                const match = _a._regexRelaxed.exec(value);\n                if (match && (match.index === 0 || match.index + match[0].length === value.length)) {\n                    out[0] = match[0];\n                    return true;\n                }\n            }\n            return false;\n        }\n    },\n    _a._regexRelaxed = /(#([\\da-fA-F]{3}){1,2}|(rgb|hsl)a\\(\\s*(\\d{1,3}%?\\s*,\\s*){3}(1|0?\\.\\d+)\\)|(rgb|hsl)\\(\\s*\\d{1,3}%?(\\s*,\\s*\\d{1,3}%?){2}\\s*\\))/,\n    _a._regexStrict = new RegExp(`^${_a._regexRelaxed.source}$`, 'i'),\n    _a);\nlet ItemRenderer = class ItemRenderer {\n    constructor(_editor, _modelService, _languageService, _themeService) {\n        this._editor = _editor;\n        this._modelService = _modelService;\n        this._languageService = _languageService;\n        this._themeService = _themeService;\n        this._onDidToggleDetails = new Emitter();\n        this.onDidToggleDetails = this._onDidToggleDetails.event;\n        this.templateId = 'suggestion';\n    }\n    dispose() {\n        this._onDidToggleDetails.dispose();\n    }\n    renderTemplate(container) {\n        const disposables = new DisposableStore();\n        const root = container;\n        root.classList.add('show-file-icons');\n        const icon = append(container, $('.icon'));\n        const colorspan = append(icon, $('span.colorspan'));\n        const text = append(container, $('.contents'));\n        const main = append(text, $('.main'));\n        const iconContainer = append(main, $('.icon-label.codicon'));\n        const left = append(main, $('span.left'));\n        const right = append(main, $('span.right'));\n        const iconLabel = new IconLabel(left, { supportHighlights: true, supportIcons: true });\n        disposables.add(iconLabel);\n        const parametersLabel = append(left, $('span.signature-label'));\n        const qualifierLabel = append(left, $('span.qualifier-label'));\n        const detailsLabel = append(right, $('span.details-label'));\n        const readMore = append(right, $('span.readMore' + ThemeIcon.asCSSSelector(suggestMoreInfoIcon)));\n        readMore.title = nls.localize('readMore', \"Read More\");\n        const configureFont = () => {\n            const options = this._editor.getOptions();\n            const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n            const fontFamily = fontInfo.getMassagedFontFamily();\n            const fontFeatureSettings = fontInfo.fontFeatureSettings;\n            const fontSize = options.get(119 /* EditorOption.suggestFontSize */) || fontInfo.fontSize;\n            const lineHeight = options.get(120 /* EditorOption.suggestLineHeight */) || fontInfo.lineHeight;\n            const fontWeight = fontInfo.fontWeight;\n            const letterSpacing = fontInfo.letterSpacing;\n            const fontSizePx = `${fontSize}px`;\n            const lineHeightPx = `${lineHeight}px`;\n            const letterSpacingPx = `${letterSpacing}px`;\n            root.style.fontSize = fontSizePx;\n            root.style.fontWeight = fontWeight;\n            root.style.letterSpacing = letterSpacingPx;\n            main.style.fontFamily = fontFamily;\n            main.style.fontFeatureSettings = fontFeatureSettings;\n            main.style.lineHeight = lineHeightPx;\n            icon.style.height = lineHeightPx;\n            icon.style.width = lineHeightPx;\n            readMore.style.height = lineHeightPx;\n            readMore.style.width = lineHeightPx;\n        };\n        return { root, left, right, icon, colorspan, iconLabel, iconContainer, parametersLabel, qualifierLabel, detailsLabel, readMore, disposables, configureFont };\n    }\n    renderElement(element, index, data) {\n        data.configureFont();\n        const { completion } = element;\n        data.root.id = getAriaId(index);\n        data.colorspan.style.backgroundColor = '';\n        const labelOptions = {\n            labelEscapeNewLines: true,\n            matches: createMatches(element.score)\n        };\n        const color = [];\n        if (completion.kind === 19 /* CompletionItemKind.Color */ && _completionItemColor.extract(element, color)) {\n            // special logic for 'color' completion items\n            data.icon.className = 'icon customcolor';\n            data.iconContainer.className = 'icon hide';\n            data.colorspan.style.backgroundColor = color[0];\n        }\n        else if (completion.kind === 20 /* CompletionItemKind.File */ && this._themeService.getFileIconTheme().hasFileIcons) {\n            // special logic for 'file' completion items\n            data.icon.className = 'icon hide';\n            data.iconContainer.className = 'icon hide';\n            const labelClasses = getIconClasses(this._modelService, this._languageService, URI.from({ scheme: 'fake', path: element.textLabel }), FileKind.FILE);\n            const detailClasses = getIconClasses(this._modelService, this._languageService, URI.from({ scheme: 'fake', path: completion.detail }), FileKind.FILE);\n            labelOptions.extraClasses = labelClasses.length > detailClasses.length ? labelClasses : detailClasses;\n        }\n        else if (completion.kind === 23 /* CompletionItemKind.Folder */ && this._themeService.getFileIconTheme().hasFolderIcons) {\n            // special logic for 'folder' completion items\n            data.icon.className = 'icon hide';\n            data.iconContainer.className = 'icon hide';\n            labelOptions.extraClasses = [\n                getIconClasses(this._modelService, this._languageService, URI.from({ scheme: 'fake', path: element.textLabel }), FileKind.FOLDER),\n                getIconClasses(this._modelService, this._languageService, URI.from({ scheme: 'fake', path: completion.detail }), FileKind.FOLDER)\n            ].flat();\n        }\n        else {\n            // normal icon\n            data.icon.className = 'icon hide';\n            data.iconContainer.className = '';\n            data.iconContainer.classList.add('suggest-icon', ...ThemeIcon.asClassNameArray(CompletionItemKinds.toIcon(completion.kind)));\n        }\n        if (completion.tags && completion.tags.indexOf(1 /* CompletionItemTag.Deprecated */) >= 0) {\n            labelOptions.extraClasses = (labelOptions.extraClasses || []).concat(['deprecated']);\n            labelOptions.matches = [];\n        }\n        data.iconLabel.setLabel(element.textLabel, undefined, labelOptions);\n        if (typeof completion.label === 'string') {\n            data.parametersLabel.textContent = '';\n            data.detailsLabel.textContent = stripNewLines(completion.detail || '');\n            data.root.classList.add('string-label');\n        }\n        else {\n            data.parametersLabel.textContent = stripNewLines(completion.label.detail || '');\n            data.detailsLabel.textContent = stripNewLines(completion.label.description || '');\n            data.root.classList.remove('string-label');\n        }\n        if (this._editor.getOption(118 /* EditorOption.suggest */).showInlineDetails) {\n            show(data.detailsLabel);\n        }\n        else {\n            hide(data.detailsLabel);\n        }\n        if (canExpandCompletionItem(element)) {\n            data.right.classList.add('can-expand-details');\n            show(data.readMore);\n            data.readMore.onmousedown = e => {\n                e.stopPropagation();\n                e.preventDefault();\n            };\n            data.readMore.onclick = e => {\n                e.stopPropagation();\n                e.preventDefault();\n                this._onDidToggleDetails.fire();\n            };\n        }\n        else {\n            data.right.classList.remove('can-expand-details');\n            hide(data.readMore);\n            data.readMore.onmousedown = null;\n            data.readMore.onclick = null;\n        }\n    }\n    disposeTemplate(templateData) {\n        templateData.disposables.dispose();\n    }\n};\nItemRenderer = __decorate([\n    __param(1, IModelService),\n    __param(2, ILanguageService),\n    __param(3, IThemeService)\n], ItemRenderer);\nexport { ItemRenderer };\nfunction stripNewLines(str) {\n    return str.replace(/\\r\\n|\\r|\\n/g, '');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar SuggestWidget_1;\nimport * as dom from '../../../../base/browser/dom.js';\nimport '../../../../base/browser/ui/codicons/codiconStyles.js'; // The codicon symbol styles are defined here and must be loaded\nimport { List } from '../../../../base/browser/ui/list/listWidget.js';\nimport { createCancelablePromise, disposableTimeout, TimeoutTimer } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Emitter, PauseableEmitter } from '../../../../base/common/event.js';\nimport { DisposableStore, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { clamp } from '../../../../base/common/numbers.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './media/suggest.css';\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/codeEditor/embeddedCodeEditorWidget.js';\nimport { SuggestWidgetStatus } from './suggestWidgetStatus.js';\nimport '../../symbolIcons/browser/symbolIcons.js'; // The codicon symbol colors are defined here and must be loaded to get colors\nimport * as nls from '../../../../nls.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { activeContrastBorder, editorForeground, editorWidgetBackground, editorWidgetBorder, listFocusHighlightForeground, listHighlightForeground, quickInputListFocusBackground, quickInputListFocusForeground, quickInputListFocusIconForeground, registerColor, transparent } from '../../../../platform/theme/common/colorRegistry.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { ResizableHTMLElement } from '../../../../base/browser/ui/resizable/resizable.js';\nimport { Context as SuggestContext, suggestWidgetStatusbarMenu } from './suggest.js';\nimport { canExpandCompletionItem, SuggestDetailsOverlay, SuggestDetailsWidget } from './suggestWidgetDetails.js';\nimport { getAriaId, ItemRenderer } from './suggestWidgetRenderer.js';\nimport { getListStyles } from '../../../../platform/theme/browser/defaultStyles.js';\nimport { status } from '../../../../base/browser/ui/aria/aria.js';\n/**\n * Suggest widget colors\n */\nregisterColor('editorSuggestWidget.background', { dark: editorWidgetBackground, light: editorWidgetBackground, hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('editorSuggestWidgetBackground', 'Background color of the suggest widget.'));\nregisterColor('editorSuggestWidget.border', { dark: editorWidgetBorder, light: editorWidgetBorder, hcDark: editorWidgetBorder, hcLight: editorWidgetBorder }, nls.localize('editorSuggestWidgetBorder', 'Border color of the suggest widget.'));\nconst editorSuggestWidgetForeground = registerColor('editorSuggestWidget.foreground', { dark: editorForeground, light: editorForeground, hcDark: editorForeground, hcLight: editorForeground }, nls.localize('editorSuggestWidgetForeground', 'Foreground color of the suggest widget.'));\nregisterColor('editorSuggestWidget.selectedForeground', { dark: quickInputListFocusForeground, light: quickInputListFocusForeground, hcDark: quickInputListFocusForeground, hcLight: quickInputListFocusForeground }, nls.localize('editorSuggestWidgetSelectedForeground', 'Foreground color of the selected entry in the suggest widget.'));\nregisterColor('editorSuggestWidget.selectedIconForeground', { dark: quickInputListFocusIconForeground, light: quickInputListFocusIconForeground, hcDark: quickInputListFocusIconForeground, hcLight: quickInputListFocusIconForeground }, nls.localize('editorSuggestWidgetSelectedIconForeground', 'Icon foreground color of the selected entry in the suggest widget.'));\nexport const editorSuggestWidgetSelectedBackground = registerColor('editorSuggestWidget.selectedBackground', { dark: quickInputListFocusBackground, light: quickInputListFocusBackground, hcDark: quickInputListFocusBackground, hcLight: quickInputListFocusBackground }, nls.localize('editorSuggestWidgetSelectedBackground', 'Background color of the selected entry in the suggest widget.'));\nregisterColor('editorSuggestWidget.highlightForeground', { dark: listHighlightForeground, light: listHighlightForeground, hcDark: listHighlightForeground, hcLight: listHighlightForeground }, nls.localize('editorSuggestWidgetHighlightForeground', 'Color of the match highlights in the suggest widget.'));\nregisterColor('editorSuggestWidget.focusHighlightForeground', { dark: listFocusHighlightForeground, light: listFocusHighlightForeground, hcDark: listFocusHighlightForeground, hcLight: listFocusHighlightForeground }, nls.localize('editorSuggestWidgetFocusHighlightForeground', 'Color of the match highlights in the suggest widget when an item is focused.'));\nregisterColor('editorSuggestWidgetStatus.foreground', { dark: transparent(editorSuggestWidgetForeground, .5), light: transparent(editorSuggestWidgetForeground, .5), hcDark: transparent(editorSuggestWidgetForeground, .5), hcLight: transparent(editorSuggestWidgetForeground, .5) }, nls.localize('editorSuggestWidgetStatusForeground', 'Foreground color of the suggest widget status.'));\nclass PersistedWidgetSize {\n    constructor(_service, editor) {\n        this._service = _service;\n        this._key = `suggestWidget.size/${editor.getEditorType()}/${editor instanceof EmbeddedCodeEditorWidget}`;\n    }\n    restore() {\n        var _a;\n        const raw = (_a = this._service.get(this._key, 0 /* StorageScope.PROFILE */)) !== null && _a !== void 0 ? _a : '';\n        try {\n            const obj = JSON.parse(raw);\n            if (dom.Dimension.is(obj)) {\n                return dom.Dimension.lift(obj);\n            }\n        }\n        catch (_b) {\n            // ignore\n        }\n        return undefined;\n    }\n    store(size) {\n        this._service.store(this._key, JSON.stringify(size), 0 /* StorageScope.PROFILE */, 1 /* StorageTarget.MACHINE */);\n    }\n    reset() {\n        this._service.remove(this._key, 0 /* StorageScope.PROFILE */);\n    }\n}\nlet SuggestWidget = SuggestWidget_1 = class SuggestWidget {\n    constructor(editor, _storageService, _contextKeyService, _themeService, instantiationService) {\n        this.editor = editor;\n        this._storageService = _storageService;\n        this._state = 0 /* State.Hidden */;\n        this._isAuto = false;\n        this._pendingLayout = new MutableDisposable();\n        this._pendingShowDetails = new MutableDisposable();\n        this._ignoreFocusEvents = false;\n        this._forceRenderingAbove = false;\n        this._explainMode = false;\n        this._showTimeout = new TimeoutTimer();\n        this._disposables = new DisposableStore();\n        this._onDidSelect = new PauseableEmitter();\n        this._onDidFocus = new PauseableEmitter();\n        this._onDidHide = new Emitter();\n        this._onDidShow = new Emitter();\n        this.onDidSelect = this._onDidSelect.event;\n        this.onDidFocus = this._onDidFocus.event;\n        this.onDidHide = this._onDidHide.event;\n        this.onDidShow = this._onDidShow.event;\n        this._onDetailsKeydown = new Emitter();\n        this.onDetailsKeyDown = this._onDetailsKeydown.event;\n        this.element = new ResizableHTMLElement();\n        this.element.domNode.classList.add('editor-widget', 'suggest-widget');\n        this._contentWidget = new SuggestContentWidget(this, editor);\n        this._persistedSize = new PersistedWidgetSize(_storageService, editor);\n        class ResizeState {\n            constructor(persistedSize, currentSize, persistHeight = false, persistWidth = false) {\n                this.persistedSize = persistedSize;\n                this.currentSize = currentSize;\n                this.persistHeight = persistHeight;\n                this.persistWidth = persistWidth;\n            }\n        }\n        let state;\n        this._disposables.add(this.element.onDidWillResize(() => {\n            this._contentWidget.lockPreference();\n            state = new ResizeState(this._persistedSize.restore(), this.element.size);\n        }));\n        this._disposables.add(this.element.onDidResize(e => {\n            var _a, _b, _c, _d;\n            this._resize(e.dimension.width, e.dimension.height);\n            if (state) {\n                state.persistHeight = state.persistHeight || !!e.north || !!e.south;\n                state.persistWidth = state.persistWidth || !!e.east || !!e.west;\n            }\n            if (!e.done) {\n                return;\n            }\n            if (state) {\n                // only store width or height value that have changed and also\n                // only store changes that are above a certain threshold\n                const { itemHeight, defaultSize } = this.getLayoutInfo();\n                const threshold = Math.round(itemHeight / 2);\n                let { width, height } = this.element.size;\n                if (!state.persistHeight || Math.abs(state.currentSize.height - height) <= threshold) {\n                    height = (_b = (_a = state.persistedSize) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : defaultSize.height;\n                }\n                if (!state.persistWidth || Math.abs(state.currentSize.width - width) <= threshold) {\n                    width = (_d = (_c = state.persistedSize) === null || _c === void 0 ? void 0 : _c.width) !== null && _d !== void 0 ? _d : defaultSize.width;\n                }\n                this._persistedSize.store(new dom.Dimension(width, height));\n            }\n            // reset working state\n            this._contentWidget.unlockPreference();\n            state = undefined;\n        }));\n        this._messageElement = dom.append(this.element.domNode, dom.$('.message'));\n        this._listElement = dom.append(this.element.domNode, dom.$('.tree'));\n        const details = this._disposables.add(instantiationService.createInstance(SuggestDetailsWidget, this.editor));\n        details.onDidClose(this.toggleDetails, this, this._disposables);\n        this._details = new SuggestDetailsOverlay(details, this.editor);\n        const applyIconStyle = () => this.element.domNode.classList.toggle('no-icons', !this.editor.getOption(118 /* EditorOption.suggest */).showIcons);\n        applyIconStyle();\n        const renderer = instantiationService.createInstance(ItemRenderer, this.editor);\n        this._disposables.add(renderer);\n        this._disposables.add(renderer.onDidToggleDetails(() => this.toggleDetails()));\n        this._list = new List('SuggestWidget', this._listElement, {\n            getHeight: (_element) => this.getLayoutInfo().itemHeight,\n            getTemplateId: (_element) => 'suggestion'\n        }, [renderer], {\n            alwaysConsumeMouseWheel: true,\n            useShadows: false,\n            mouseSupport: false,\n            multipleSelectionSupport: false,\n            accessibilityProvider: {\n                getRole: () => 'option',\n                getWidgetAriaLabel: () => nls.localize('suggest', \"Suggest\"),\n                getWidgetRole: () => 'listbox',\n                getAriaLabel: (item) => {\n                    let label = item.textLabel;\n                    if (typeof item.completion.label !== 'string') {\n                        const { detail, description } = item.completion.label;\n                        if (detail && description) {\n                            label = nls.localize('label.full', '{0} {1}, {2}', label, detail, description);\n                        }\n                        else if (detail) {\n                            label = nls.localize('label.detail', '{0} {1}', label, detail);\n                        }\n                        else if (description) {\n                            label = nls.localize('label.desc', '{0}, {1}', label, description);\n                        }\n                    }\n                    if (!item.isResolved || !this._isDetailsVisible()) {\n                        return label;\n                    }\n                    const { documentation, detail } = item.completion;\n                    const docs = strings.format('{0}{1}', detail || '', documentation ? (typeof documentation === 'string' ? documentation : documentation.value) : '');\n                    return nls.localize('ariaCurrenttSuggestionReadDetails', \"{0}, docs: {1}\", label, docs);\n                },\n            }\n        });\n        this._list.style(getListStyles({\n            listInactiveFocusBackground: editorSuggestWidgetSelectedBackground,\n            listInactiveFocusOutline: activeContrastBorder\n        }));\n        this._status = instantiationService.createInstance(SuggestWidgetStatus, this.element.domNode, suggestWidgetStatusbarMenu);\n        const applyStatusBarStyle = () => this.element.domNode.classList.toggle('with-status-bar', this.editor.getOption(118 /* EditorOption.suggest */).showStatusBar);\n        applyStatusBarStyle();\n        this._disposables.add(_themeService.onDidColorThemeChange(t => this._onThemeChange(t)));\n        this._onThemeChange(_themeService.getColorTheme());\n        this._disposables.add(this._list.onMouseDown(e => this._onListMouseDownOrTap(e)));\n        this._disposables.add(this._list.onTap(e => this._onListMouseDownOrTap(e)));\n        this._disposables.add(this._list.onDidChangeSelection(e => this._onListSelection(e)));\n        this._disposables.add(this._list.onDidChangeFocus(e => this._onListFocus(e)));\n        this._disposables.add(this.editor.onDidChangeCursorSelection(() => this._onCursorSelectionChanged()));\n        this._disposables.add(this.editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(118 /* EditorOption.suggest */)) {\n                applyStatusBarStyle();\n                applyIconStyle();\n            }\n            if (this._completionModel && (e.hasChanged(50 /* EditorOption.fontInfo */) || e.hasChanged(119 /* EditorOption.suggestFontSize */) || e.hasChanged(120 /* EditorOption.suggestLineHeight */))) {\n                this._list.splice(0, this._list.length, this._completionModel.items);\n            }\n        }));\n        this._ctxSuggestWidgetVisible = SuggestContext.Visible.bindTo(_contextKeyService);\n        this._ctxSuggestWidgetDetailsVisible = SuggestContext.DetailsVisible.bindTo(_contextKeyService);\n        this._ctxSuggestWidgetMultipleSuggestions = SuggestContext.MultipleSuggestions.bindTo(_contextKeyService);\n        this._ctxSuggestWidgetHasFocusedSuggestion = SuggestContext.HasFocusedSuggestion.bindTo(_contextKeyService);\n        this._disposables.add(dom.addStandardDisposableListener(this._details.widget.domNode, 'keydown', e => {\n            this._onDetailsKeydown.fire(e);\n        }));\n        this._disposables.add(this.editor.onMouseDown((e) => this._onEditorMouseDown(e)));\n    }\n    dispose() {\n        var _a;\n        this._details.widget.dispose();\n        this._details.dispose();\n        this._list.dispose();\n        this._status.dispose();\n        this._disposables.dispose();\n        (_a = this._loadingTimeout) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._pendingLayout.dispose();\n        this._pendingShowDetails.dispose();\n        this._showTimeout.dispose();\n        this._contentWidget.dispose();\n        this.element.dispose();\n    }\n    _onEditorMouseDown(mouseEvent) {\n        if (this._details.widget.domNode.contains(mouseEvent.target.element)) {\n            // Clicking inside details\n            this._details.widget.domNode.focus();\n        }\n        else {\n            // Clicking outside details and inside suggest\n            if (this.element.domNode.contains(mouseEvent.target.element)) {\n                this.editor.focus();\n            }\n        }\n    }\n    _onCursorSelectionChanged() {\n        if (this._state !== 0 /* State.Hidden */) {\n            this._contentWidget.layout();\n        }\n    }\n    _onListMouseDownOrTap(e) {\n        if (typeof e.element === 'undefined' || typeof e.index === 'undefined') {\n            return;\n        }\n        // prevent stealing browser focus from the editor\n        e.browserEvent.preventDefault();\n        e.browserEvent.stopPropagation();\n        this._select(e.element, e.index);\n    }\n    _onListSelection(e) {\n        if (e.elements.length) {\n            this._select(e.elements[0], e.indexes[0]);\n        }\n    }\n    _select(item, index) {\n        const completionModel = this._completionModel;\n        if (completionModel) {\n            this._onDidSelect.fire({ item, index, model: completionModel });\n            this.editor.focus();\n        }\n    }\n    _onThemeChange(theme) {\n        this._details.widget.borderWidth = isHighContrast(theme.type) ? 2 : 1;\n    }\n    _onListFocus(e) {\n        var _a;\n        if (this._ignoreFocusEvents) {\n            return;\n        }\n        if (!e.elements.length) {\n            if (this._currentSuggestionDetails) {\n                this._currentSuggestionDetails.cancel();\n                this._currentSuggestionDetails = undefined;\n                this._focusedItem = undefined;\n            }\n            this.editor.setAriaOptions({ activeDescendant: undefined });\n            this._ctxSuggestWidgetHasFocusedSuggestion.set(false);\n            return;\n        }\n        if (!this._completionModel) {\n            return;\n        }\n        this._ctxSuggestWidgetHasFocusedSuggestion.set(true);\n        const item = e.elements[0];\n        const index = e.indexes[0];\n        if (item !== this._focusedItem) {\n            (_a = this._currentSuggestionDetails) === null || _a === void 0 ? void 0 : _a.cancel();\n            this._currentSuggestionDetails = undefined;\n            this._focusedItem = item;\n            this._list.reveal(index);\n            this._currentSuggestionDetails = createCancelablePromise(async (token) => {\n                const loading = disposableTimeout(() => {\n                    if (this._isDetailsVisible()) {\n                        this.showDetails(true);\n                    }\n                }, 250);\n                const sub = token.onCancellationRequested(() => loading.dispose());\n                try {\n                    return await item.resolve(token);\n                }\n                finally {\n                    loading.dispose();\n                    sub.dispose();\n                }\n            });\n            this._currentSuggestionDetails.then(() => {\n                if (index >= this._list.length || item !== this._list.element(index)) {\n                    return;\n                }\n                // item can have extra information, so re-render\n                this._ignoreFocusEvents = true;\n                this._list.splice(index, 1, [item]);\n                this._list.setFocus([index]);\n                this._ignoreFocusEvents = false;\n                if (this._isDetailsVisible()) {\n                    this.showDetails(false);\n                }\n                else {\n                    this.element.domNode.classList.remove('docs-side');\n                }\n                this.editor.setAriaOptions({ activeDescendant: getAriaId(index) });\n            }).catch(onUnexpectedError);\n        }\n        // emit an event\n        this._onDidFocus.fire({ item, index, model: this._completionModel });\n    }\n    _setState(state) {\n        if (this._state === state) {\n            return;\n        }\n        this._state = state;\n        this.element.domNode.classList.toggle('frozen', state === 4 /* State.Frozen */);\n        this.element.domNode.classList.remove('message');\n        switch (state) {\n            case 0 /* State.Hidden */:\n                dom.hide(this._messageElement, this._listElement, this._status.element);\n                this._details.hide(true);\n                this._status.hide();\n                this._contentWidget.hide();\n                this._ctxSuggestWidgetVisible.reset();\n                this._ctxSuggestWidgetMultipleSuggestions.reset();\n                this._ctxSuggestWidgetHasFocusedSuggestion.reset();\n                this._showTimeout.cancel();\n                this.element.domNode.classList.remove('visible');\n                this._list.splice(0, this._list.length);\n                this._focusedItem = undefined;\n                this._cappedHeight = undefined;\n                this._explainMode = false;\n                break;\n            case 1 /* State.Loading */:\n                this.element.domNode.classList.add('message');\n                this._messageElement.textContent = SuggestWidget_1.LOADING_MESSAGE;\n                dom.hide(this._listElement, this._status.element);\n                dom.show(this._messageElement);\n                this._details.hide();\n                this._show();\n                this._focusedItem = undefined;\n                status(SuggestWidget_1.LOADING_MESSAGE);\n                break;\n            case 2 /* State.Empty */:\n                this.element.domNode.classList.add('message');\n                this._messageElement.textContent = SuggestWidget_1.NO_SUGGESTIONS_MESSAGE;\n                dom.hide(this._listElement, this._status.element);\n                dom.show(this._messageElement);\n                this._details.hide();\n                this._show();\n                this._focusedItem = undefined;\n                status(SuggestWidget_1.NO_SUGGESTIONS_MESSAGE);\n                break;\n            case 3 /* State.Open */:\n                dom.hide(this._messageElement);\n                dom.show(this._listElement, this._status.element);\n                this._show();\n                break;\n            case 4 /* State.Frozen */:\n                dom.hide(this._messageElement);\n                dom.show(this._listElement, this._status.element);\n                this._show();\n                break;\n            case 5 /* State.Details */:\n                dom.hide(this._messageElement);\n                dom.show(this._listElement, this._status.element);\n                this._details.show();\n                this._show();\n                break;\n        }\n    }\n    _show() {\n        this._status.show();\n        this._contentWidget.show();\n        this._layout(this._persistedSize.restore());\n        this._ctxSuggestWidgetVisible.set(true);\n        this._showTimeout.cancelAndSet(() => {\n            this.element.domNode.classList.add('visible');\n            this._onDidShow.fire(this);\n        }, 100);\n    }\n    showTriggered(auto, delay) {\n        if (this._state !== 0 /* State.Hidden */) {\n            return;\n        }\n        this._contentWidget.setPosition(this.editor.getPosition());\n        this._isAuto = !!auto;\n        if (!this._isAuto) {\n            this._loadingTimeout = disposableTimeout(() => this._setState(1 /* State.Loading */), delay);\n        }\n    }\n    showSuggestions(completionModel, selectionIndex, isFrozen, isAuto, noFocus) {\n        var _a, _b;\n        this._contentWidget.setPosition(this.editor.getPosition());\n        (_a = this._loadingTimeout) === null || _a === void 0 ? void 0 : _a.dispose();\n        (_b = this._currentSuggestionDetails) === null || _b === void 0 ? void 0 : _b.cancel();\n        this._currentSuggestionDetails = undefined;\n        if (this._completionModel !== completionModel) {\n            this._completionModel = completionModel;\n        }\n        if (isFrozen && this._state !== 2 /* State.Empty */ && this._state !== 0 /* State.Hidden */) {\n            this._setState(4 /* State.Frozen */);\n            return;\n        }\n        const visibleCount = this._completionModel.items.length;\n        const isEmpty = visibleCount === 0;\n        this._ctxSuggestWidgetMultipleSuggestions.set(visibleCount > 1);\n        if (isEmpty) {\n            this._setState(isAuto ? 0 /* State.Hidden */ : 2 /* State.Empty */);\n            this._completionModel = undefined;\n            return;\n        }\n        this._focusedItem = undefined;\n        // calling list.splice triggers focus event which this widget forwards. That can lead to\n        // suggestions being cancelled and the widget being cleared (and hidden). All this happens\n        // before revealing and focusing is done which means revealing and focusing will fail when\n        // they get run.\n        this._onDidFocus.pause();\n        this._onDidSelect.pause();\n        try {\n            this._list.splice(0, this._list.length, this._completionModel.items);\n            this._setState(isFrozen ? 4 /* State.Frozen */ : 3 /* State.Open */);\n            this._list.reveal(selectionIndex, 0);\n            this._list.setFocus(noFocus ? [] : [selectionIndex]);\n        }\n        finally {\n            this._onDidFocus.resume();\n            this._onDidSelect.resume();\n        }\n        this._pendingLayout.value = dom.runAtThisOrScheduleAtNextAnimationFrame(dom.getWindow(this.element.domNode), () => {\n            this._pendingLayout.clear();\n            this._layout(this.element.size);\n            // Reset focus border\n            this._details.widget.domNode.classList.remove('focused');\n        });\n    }\n    focusSelected() {\n        if (this._list.length > 0) {\n            this._list.setFocus([0]);\n        }\n    }\n    selectNextPage() {\n        switch (this._state) {\n            case 0 /* State.Hidden */:\n                return false;\n            case 5 /* State.Details */:\n                this._details.widget.pageDown();\n                return true;\n            case 1 /* State.Loading */:\n                return !this._isAuto;\n            default:\n                this._list.focusNextPage();\n                return true;\n        }\n    }\n    selectNext() {\n        switch (this._state) {\n            case 0 /* State.Hidden */:\n                return false;\n            case 1 /* State.Loading */:\n                return !this._isAuto;\n            default:\n                this._list.focusNext(1, true);\n                return true;\n        }\n    }\n    selectLast() {\n        switch (this._state) {\n            case 0 /* State.Hidden */:\n                return false;\n            case 5 /* State.Details */:\n                this._details.widget.scrollBottom();\n                return true;\n            case 1 /* State.Loading */:\n                return !this._isAuto;\n            default:\n                this._list.focusLast();\n                return true;\n        }\n    }\n    selectPreviousPage() {\n        switch (this._state) {\n            case 0 /* State.Hidden */:\n                return false;\n            case 5 /* State.Details */:\n                this._details.widget.pageUp();\n                return true;\n            case 1 /* State.Loading */:\n                return !this._isAuto;\n            default:\n                this._list.focusPreviousPage();\n                return true;\n        }\n    }\n    selectPrevious() {\n        switch (this._state) {\n            case 0 /* State.Hidden */:\n                return false;\n            case 1 /* State.Loading */:\n                return !this._isAuto;\n            default:\n                this._list.focusPrevious(1, true);\n                return false;\n        }\n    }\n    selectFirst() {\n        switch (this._state) {\n            case 0 /* State.Hidden */:\n                return false;\n            case 5 /* State.Details */:\n                this._details.widget.scrollTop();\n                return true;\n            case 1 /* State.Loading */:\n                return !this._isAuto;\n            default:\n                this._list.focusFirst();\n                return true;\n        }\n    }\n    getFocusedItem() {\n        if (this._state !== 0 /* State.Hidden */\n            && this._state !== 2 /* State.Empty */\n            && this._state !== 1 /* State.Loading */\n            && this._completionModel\n            && this._list.getFocus().length > 0) {\n            return {\n                item: this._list.getFocusedElements()[0],\n                index: this._list.getFocus()[0],\n                model: this._completionModel\n            };\n        }\n        return undefined;\n    }\n    toggleDetailsFocus() {\n        if (this._state === 5 /* State.Details */) {\n            this._setState(3 /* State.Open */);\n            this._details.widget.domNode.classList.remove('focused');\n        }\n        else if (this._state === 3 /* State.Open */ && this._isDetailsVisible()) {\n            this._setState(5 /* State.Details */);\n            this._details.widget.domNode.classList.add('focused');\n        }\n    }\n    toggleDetails() {\n        if (this._isDetailsVisible()) {\n            // hide details widget\n            this._pendingShowDetails.clear();\n            this._ctxSuggestWidgetDetailsVisible.set(false);\n            this._setDetailsVisible(false);\n            this._details.hide();\n            this.element.domNode.classList.remove('shows-details');\n        }\n        else if ((canExpandCompletionItem(this._list.getFocusedElements()[0]) || this._explainMode) && (this._state === 3 /* State.Open */ || this._state === 5 /* State.Details */ || this._state === 4 /* State.Frozen */)) {\n            // show details widget (iff possible)\n            this._ctxSuggestWidgetDetailsVisible.set(true);\n            this._setDetailsVisible(true);\n            this.showDetails(false);\n        }\n    }\n    showDetails(loading) {\n        this._pendingShowDetails.value = dom.runAtThisOrScheduleAtNextAnimationFrame(dom.getWindow(this.element.domNode), () => {\n            this._pendingShowDetails.clear();\n            this._details.show();\n            if (loading) {\n                this._details.widget.renderLoading();\n            }\n            else {\n                this._details.widget.renderItem(this._list.getFocusedElements()[0], this._explainMode);\n            }\n            if (!this._details.widget.isEmpty) {\n                this._positionDetails();\n                this.element.domNode.classList.add('shows-details');\n            }\n            else {\n                this._details.hide();\n            }\n            this.editor.focus();\n        });\n    }\n    toggleExplainMode() {\n        if (this._list.getFocusedElements()[0]) {\n            this._explainMode = !this._explainMode;\n            if (!this._isDetailsVisible()) {\n                this.toggleDetails();\n            }\n            else {\n                this.showDetails(false);\n            }\n        }\n    }\n    resetPersistedSize() {\n        this._persistedSize.reset();\n    }\n    hideWidget() {\n        var _a;\n        this._pendingLayout.clear();\n        this._pendingShowDetails.clear();\n        (_a = this._loadingTimeout) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._setState(0 /* State.Hidden */);\n        this._onDidHide.fire(this);\n        this.element.clearSashHoverState();\n        // ensure that a reasonable widget height is persisted so that\n        // accidential \"resize-to-single-items\" cases aren't happening\n        const dim = this._persistedSize.restore();\n        const minPersistedHeight = Math.ceil(this.getLayoutInfo().itemHeight * 4.3);\n        if (dim && dim.height < minPersistedHeight) {\n            this._persistedSize.store(dim.with(undefined, minPersistedHeight));\n        }\n    }\n    isFrozen() {\n        return this._state === 4 /* State.Frozen */;\n    }\n    _afterRender(position) {\n        if (position === null) {\n            if (this._isDetailsVisible()) {\n                this._details.hide(); //todo@jrieken soft-hide\n            }\n            return;\n        }\n        if (this._state === 2 /* State.Empty */ || this._state === 1 /* State.Loading */) {\n            // no special positioning when widget isn't showing list\n            return;\n        }\n        if (this._isDetailsVisible() && !this._details.widget.isEmpty) {\n            this._details.show();\n        }\n        this._positionDetails();\n    }\n    _layout(size) {\n        var _a, _b, _c;\n        if (!this.editor.hasModel()) {\n            return;\n        }\n        if (!this.editor.getDomNode()) {\n            // happens when running tests\n            return;\n        }\n        const bodyBox = dom.getClientArea(this.element.domNode.ownerDocument.body);\n        const info = this.getLayoutInfo();\n        if (!size) {\n            size = info.defaultSize;\n        }\n        let height = size.height;\n        let width = size.width;\n        // status bar\n        this._status.element.style.height = `${info.itemHeight}px`;\n        if (this._state === 2 /* State.Empty */ || this._state === 1 /* State.Loading */) {\n            // showing a message only\n            height = info.itemHeight + info.borderHeight;\n            width = info.defaultSize.width / 2;\n            this.element.enableSashes(false, false, false, false);\n            this.element.minSize = this.element.maxSize = new dom.Dimension(width, height);\n            this._contentWidget.setPreference(2 /* ContentWidgetPositionPreference.BELOW */);\n        }\n        else {\n            // showing items\n            // width math\n            const maxWidth = bodyBox.width - info.borderHeight - 2 * info.horizontalPadding;\n            if (width > maxWidth) {\n                width = maxWidth;\n            }\n            const preferredWidth = this._completionModel ? this._completionModel.stats.pLabelLen * info.typicalHalfwidthCharacterWidth : width;\n            // height math\n            const fullHeight = info.statusBarHeight + this._list.contentHeight + info.borderHeight;\n            const minHeight = info.itemHeight + info.statusBarHeight;\n            const editorBox = dom.getDomNodePagePosition(this.editor.getDomNode());\n            const cursorBox = this.editor.getScrolledVisiblePosition(this.editor.getPosition());\n            const cursorBottom = editorBox.top + cursorBox.top + cursorBox.height;\n            const maxHeightBelow = Math.min(bodyBox.height - cursorBottom - info.verticalPadding, fullHeight);\n            const availableSpaceAbove = editorBox.top + cursorBox.top - info.verticalPadding;\n            const maxHeightAbove = Math.min(availableSpaceAbove, fullHeight);\n            let maxHeight = Math.min(Math.max(maxHeightAbove, maxHeightBelow) + info.borderHeight, fullHeight);\n            if (height === ((_a = this._cappedHeight) === null || _a === void 0 ? void 0 : _a.capped)) {\n                // Restore the old (wanted) height when the current\n                // height is capped to fit\n                height = this._cappedHeight.wanted;\n            }\n            if (height < minHeight) {\n                height = minHeight;\n            }\n            if (height > maxHeight) {\n                height = maxHeight;\n            }\n            const forceRenderingAboveRequiredSpace = 150;\n            if (height > maxHeightBelow || (this._forceRenderingAbove && availableSpaceAbove > forceRenderingAboveRequiredSpace)) {\n                this._contentWidget.setPreference(1 /* ContentWidgetPositionPreference.ABOVE */);\n                this.element.enableSashes(true, true, false, false);\n                maxHeight = maxHeightAbove;\n            }\n            else {\n                this._contentWidget.setPreference(2 /* ContentWidgetPositionPreference.BELOW */);\n                this.element.enableSashes(false, true, true, false);\n                maxHeight = maxHeightBelow;\n            }\n            this.element.preferredSize = new dom.Dimension(preferredWidth, info.defaultSize.height);\n            this.element.maxSize = new dom.Dimension(maxWidth, maxHeight);\n            this.element.minSize = new dom.Dimension(220, minHeight);\n            // Know when the height was capped to fit and remember\n            // the wanted height for later. This is required when going\n            // left to widen suggestions.\n            this._cappedHeight = height === fullHeight\n                ? { wanted: (_c = (_b = this._cappedHeight) === null || _b === void 0 ? void 0 : _b.wanted) !== null && _c !== void 0 ? _c : size.height, capped: height }\n                : undefined;\n        }\n        this._resize(width, height);\n    }\n    _resize(width, height) {\n        const { width: maxWidth, height: maxHeight } = this.element.maxSize;\n        width = Math.min(maxWidth, width);\n        height = Math.min(maxHeight, height);\n        const { statusBarHeight } = this.getLayoutInfo();\n        this._list.layout(height - statusBarHeight, width);\n        this._listElement.style.height = `${height - statusBarHeight}px`;\n        this.element.layout(height, width);\n        this._contentWidget.layout();\n        this._positionDetails();\n    }\n    _positionDetails() {\n        var _a;\n        if (this._isDetailsVisible()) {\n            this._details.placeAtAnchor(this.element.domNode, ((_a = this._contentWidget.getPosition()) === null || _a === void 0 ? void 0 : _a.preference[0]) === 2 /* ContentWidgetPositionPreference.BELOW */);\n        }\n    }\n    getLayoutInfo() {\n        const fontInfo = this.editor.getOption(50 /* EditorOption.fontInfo */);\n        const itemHeight = clamp(this.editor.getOption(120 /* EditorOption.suggestLineHeight */) || fontInfo.lineHeight, 8, 1000);\n        const statusBarHeight = !this.editor.getOption(118 /* EditorOption.suggest */).showStatusBar || this._state === 2 /* State.Empty */ || this._state === 1 /* State.Loading */ ? 0 : itemHeight;\n        const borderWidth = this._details.widget.borderWidth;\n        const borderHeight = 2 * borderWidth;\n        return {\n            itemHeight,\n            statusBarHeight,\n            borderWidth,\n            borderHeight,\n            typicalHalfwidthCharacterWidth: fontInfo.typicalHalfwidthCharacterWidth,\n            verticalPadding: 22,\n            horizontalPadding: 14,\n            defaultSize: new dom.Dimension(430, statusBarHeight + 12 * itemHeight + borderHeight)\n        };\n    }\n    _isDetailsVisible() {\n        return this._storageService.getBoolean('expandSuggestionDocs', 0 /* StorageScope.PROFILE */, false);\n    }\n    _setDetailsVisible(value) {\n        this._storageService.store('expandSuggestionDocs', value, 0 /* StorageScope.PROFILE */, 0 /* StorageTarget.USER */);\n    }\n    forceRenderingAbove() {\n        if (!this._forceRenderingAbove) {\n            this._forceRenderingAbove = true;\n            this._layout(this._persistedSize.restore());\n        }\n    }\n    stopForceRenderingAbove() {\n        this._forceRenderingAbove = false;\n    }\n};\nSuggestWidget.LOADING_MESSAGE = nls.localize('suggestWidget.loading', \"Loading...\");\nSuggestWidget.NO_SUGGESTIONS_MESSAGE = nls.localize('suggestWidget.noSuggestions', \"No suggestions.\");\nSuggestWidget = SuggestWidget_1 = __decorate([\n    __param(1, IStorageService),\n    __param(2, IContextKeyService),\n    __param(3, IThemeService),\n    __param(4, IInstantiationService)\n], SuggestWidget);\nexport { SuggestWidget };\nexport class SuggestContentWidget {\n    constructor(_widget, _editor) {\n        this._widget = _widget;\n        this._editor = _editor;\n        this.allowEditorOverflow = true;\n        this.suppressMouseDown = false;\n        this._preferenceLocked = false;\n        this._added = false;\n        this._hidden = false;\n    }\n    dispose() {\n        if (this._added) {\n            this._added = false;\n            this._editor.removeContentWidget(this);\n        }\n    }\n    getId() {\n        return 'editor.widget.suggestWidget';\n    }\n    getDomNode() {\n        return this._widget.element.domNode;\n    }\n    show() {\n        this._hidden = false;\n        if (!this._added) {\n            this._added = true;\n            this._editor.addContentWidget(this);\n        }\n    }\n    hide() {\n        if (!this._hidden) {\n            this._hidden = true;\n            this.layout();\n        }\n    }\n    layout() {\n        this._editor.layoutContentWidget(this);\n    }\n    getPosition() {\n        if (this._hidden || !this._position || !this._preference) {\n            return null;\n        }\n        return {\n            position: this._position,\n            preference: [this._preference]\n        };\n    }\n    beforeRender() {\n        const { height, width } = this._widget.element.size;\n        const { borderWidth, horizontalPadding } = this._widget.getLayoutInfo();\n        return new dom.Dimension(width + 2 * borderWidth + horizontalPadding, height + 2 * borderWidth);\n    }\n    afterRender(position) {\n        this._widget._afterRender(position);\n    }\n    setPreference(preference) {\n        if (!this._preferenceLocked) {\n            this._preference = preference;\n        }\n    }\n    lockPreference() {\n        this._preferenceLocked = true;\n    }\n    unlockPreference() {\n        this._preferenceLocked = false;\n    }\n    setPosition(position) {\n        this._position = position;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar SuggestController_1;\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { KeyCodeChord } from '../../../../base/common/keybindings.js';\nimport { DisposableStore, dispose, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { assertType, isObject } from '../../../../base/common/types.js';\nimport { StableEditorScrollState } from '../../../browser/stableEditorScroll.js';\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { SnippetController2 } from '../../snippet/browser/snippetController2.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { ISuggestMemoryService } from './suggestMemory.js';\nimport { WordContextKey } from './wordContextKey.js';\nimport * as nls from '../../../../nls.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { Context as SuggestContext, suggestWidgetStatusbarMenu } from './suggest.js';\nimport { SuggestAlternatives } from './suggestAlternatives.js';\nimport { CommitCharacterController } from './suggestCommitCharacters.js';\nimport { SuggestModel } from './suggestModel.js';\nimport { OvertypingCapturer } from './suggestOvertypingCapturer.js';\nimport { SuggestWidget } from './suggestWidget.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { basename, extname } from '../../../../base/common/resources.js';\nimport { hash } from '../../../../base/common/hash.js';\nimport { WindowIdleValue, getWindow } from '../../../../base/browser/dom.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\n// sticky suggest widget which doesn't disappear on focus out and such\nconst _sticky = false;\nclass LineSuffix {\n    constructor(_model, _position) {\n        this._model = _model;\n        this._position = _position;\n        this._decorationOptions = ModelDecorationOptions.register({\n            description: 'suggest-line-suffix',\n            stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */\n        });\n        // spy on what's happening right of the cursor. two cases:\n        // 1. end of line -> check that it's still end of line\n        // 2. mid of line -> add a marker and compute the delta\n        const maxColumn = _model.getLineMaxColumn(_position.lineNumber);\n        if (maxColumn !== _position.column) {\n            const offset = _model.getOffsetAt(_position);\n            const end = _model.getPositionAt(offset + 1);\n            _model.changeDecorations(accessor => {\n                if (this._marker) {\n                    accessor.removeDecoration(this._marker);\n                }\n                this._marker = accessor.addDecoration(Range.fromPositions(_position, end), this._decorationOptions);\n            });\n        }\n    }\n    dispose() {\n        if (this._marker && !this._model.isDisposed()) {\n            this._model.changeDecorations(accessor => {\n                accessor.removeDecoration(this._marker);\n                this._marker = undefined;\n            });\n        }\n    }\n    delta(position) {\n        if (this._model.isDisposed() || this._position.lineNumber !== position.lineNumber) {\n            // bail out early if things seems fishy\n            return 0;\n        }\n        // read the marker (in case suggest was triggered at line end) or compare\n        // the cursor to the line end.\n        if (this._marker) {\n            const range = this._model.getDecorationRange(this._marker);\n            const end = this._model.getOffsetAt(range.getStartPosition());\n            return end - this._model.getOffsetAt(position);\n        }\n        else {\n            return this._model.getLineMaxColumn(position.lineNumber) - position.column;\n        }\n    }\n}\nlet SuggestController = SuggestController_1 = class SuggestController {\n    static get(editor) {\n        return editor.getContribution(SuggestController_1.ID);\n    }\n    constructor(editor, _memoryService, _commandService, _contextKeyService, _instantiationService, _logService, _telemetryService) {\n        this._memoryService = _memoryService;\n        this._commandService = _commandService;\n        this._contextKeyService = _contextKeyService;\n        this._instantiationService = _instantiationService;\n        this._logService = _logService;\n        this._telemetryService = _telemetryService;\n        this._lineSuffix = new MutableDisposable();\n        this._toDispose = new DisposableStore();\n        this._selectors = new PriorityRegistry(s => s.priority);\n        this._onWillInsertSuggestItem = new Emitter();\n        this.onWillInsertSuggestItem = this._onWillInsertSuggestItem.event;\n        this.editor = editor;\n        this.model = _instantiationService.createInstance(SuggestModel, this.editor);\n        // default selector\n        this._selectors.register({\n            priority: 0,\n            select: (model, pos, items) => this._memoryService.select(model, pos, items)\n        });\n        // context key: update insert/replace mode\n        const ctxInsertMode = SuggestContext.InsertMode.bindTo(_contextKeyService);\n        ctxInsertMode.set(editor.getOption(118 /* EditorOption.suggest */).insertMode);\n        this._toDispose.add(this.model.onDidTrigger(() => ctxInsertMode.set(editor.getOption(118 /* EditorOption.suggest */).insertMode)));\n        this.widget = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), () => {\n            const widget = this._instantiationService.createInstance(SuggestWidget, this.editor);\n            this._toDispose.add(widget);\n            this._toDispose.add(widget.onDidSelect(item => this._insertSuggestion(item, 0 /* InsertFlags.None */), this));\n            // Wire up logic to accept a suggestion on certain characters\n            const commitCharacterController = new CommitCharacterController(this.editor, widget, this.model, item => this._insertSuggestion(item, 2 /* InsertFlags.NoAfterUndoStop */));\n            this._toDispose.add(commitCharacterController);\n            // Wire up makes text edit context key\n            const ctxMakesTextEdit = SuggestContext.MakesTextEdit.bindTo(this._contextKeyService);\n            const ctxHasInsertAndReplace = SuggestContext.HasInsertAndReplaceRange.bindTo(this._contextKeyService);\n            const ctxCanResolve = SuggestContext.CanResolve.bindTo(this._contextKeyService);\n            this._toDispose.add(toDisposable(() => {\n                ctxMakesTextEdit.reset();\n                ctxHasInsertAndReplace.reset();\n                ctxCanResolve.reset();\n            }));\n            this._toDispose.add(widget.onDidFocus(({ item }) => {\n                // (ctx: makesTextEdit)\n                const position = this.editor.getPosition();\n                const startColumn = item.editStart.column;\n                const endColumn = position.column;\n                let value = true;\n                if (this.editor.getOption(1 /* EditorOption.acceptSuggestionOnEnter */) === 'smart'\n                    && this.model.state === 2 /* State.Auto */\n                    && !item.completion.additionalTextEdits\n                    && !(item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */)\n                    && endColumn - startColumn === item.completion.insertText.length) {\n                    const oldText = this.editor.getModel().getValueInRange({\n                        startLineNumber: position.lineNumber,\n                        startColumn,\n                        endLineNumber: position.lineNumber,\n                        endColumn\n                    });\n                    value = oldText !== item.completion.insertText;\n                }\n                ctxMakesTextEdit.set(value);\n                // (ctx: hasInsertAndReplaceRange)\n                ctxHasInsertAndReplace.set(!Position.equals(item.editInsertEnd, item.editReplaceEnd));\n                // (ctx: canResolve)\n                ctxCanResolve.set(Boolean(item.provider.resolveCompletionItem) || Boolean(item.completion.documentation) || item.completion.detail !== item.completion.label);\n            }));\n            this._toDispose.add(widget.onDetailsKeyDown(e => {\n                // cmd + c on macOS, ctrl + c on Win / Linux\n                if (e.toKeyCodeChord().equals(new KeyCodeChord(true, false, false, false, 33 /* KeyCode.KeyC */)) ||\n                    (platform.isMacintosh && e.toKeyCodeChord().equals(new KeyCodeChord(false, false, false, true, 33 /* KeyCode.KeyC */)))) {\n                    e.stopPropagation();\n                    return;\n                }\n                if (!e.toKeyCodeChord().isModifierKey()) {\n                    this.editor.focus();\n                }\n            }));\n            return widget;\n        }));\n        // Wire up text overtyping capture\n        this._overtypingCapturer = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), () => {\n            return this._toDispose.add(new OvertypingCapturer(this.editor, this.model));\n        }));\n        this._alternatives = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), () => {\n            return this._toDispose.add(new SuggestAlternatives(this.editor, this._contextKeyService));\n        }));\n        this._toDispose.add(_instantiationService.createInstance(WordContextKey, editor));\n        this._toDispose.add(this.model.onDidTrigger(e => {\n            this.widget.value.showTriggered(e.auto, e.shy ? 250 : 50);\n            this._lineSuffix.value = new LineSuffix(this.editor.getModel(), e.position);\n        }));\n        this._toDispose.add(this.model.onDidSuggest(e => {\n            if (e.triggerOptions.shy) {\n                return;\n            }\n            let index = -1;\n            for (const selector of this._selectors.itemsOrderedByPriorityDesc) {\n                index = selector.select(this.editor.getModel(), this.editor.getPosition(), e.completionModel.items);\n                if (index !== -1) {\n                    break;\n                }\n            }\n            if (index === -1) {\n                index = 0;\n            }\n            if (this.model.state === 0 /* State.Idle */) {\n                // selecting an item can \"pump\" out selection/cursor change events\n                // which can cancel suggest halfway through this function. therefore\n                // we need to check again and bail if the session has been canceled\n                return;\n            }\n            let noFocus = false;\n            if (e.triggerOptions.auto) {\n                // don't \"focus\" item when configured to do\n                const options = this.editor.getOption(118 /* EditorOption.suggest */);\n                if (options.selectionMode === 'never' || options.selectionMode === 'always') {\n                    // simple: always or never\n                    noFocus = options.selectionMode === 'never';\n                }\n                else if (options.selectionMode === 'whenTriggerCharacter') {\n                    // on with trigger character\n                    noFocus = e.triggerOptions.triggerKind !== 1 /* CompletionTriggerKind.TriggerCharacter */;\n                }\n                else if (options.selectionMode === 'whenQuickSuggestion') {\n                    // without trigger character or when refiltering\n                    noFocus = e.triggerOptions.triggerKind === 1 /* CompletionTriggerKind.TriggerCharacter */ && !e.triggerOptions.refilter;\n                }\n            }\n            this.widget.value.showSuggestions(e.completionModel, index, e.isFrozen, e.triggerOptions.auto, noFocus);\n        }));\n        this._toDispose.add(this.model.onDidCancel(e => {\n            if (!e.retrigger) {\n                this.widget.value.hideWidget();\n            }\n        }));\n        this._toDispose.add(this.editor.onDidBlurEditorWidget(() => {\n            if (!_sticky) {\n                this.model.cancel();\n                this.model.clear();\n            }\n        }));\n        // Manage the acceptSuggestionsOnEnter context key\n        const acceptSuggestionsOnEnter = SuggestContext.AcceptSuggestionsOnEnter.bindTo(_contextKeyService);\n        const updateFromConfig = () => {\n            const acceptSuggestionOnEnter = this.editor.getOption(1 /* EditorOption.acceptSuggestionOnEnter */);\n            acceptSuggestionsOnEnter.set(acceptSuggestionOnEnter === 'on' || acceptSuggestionOnEnter === 'smart');\n        };\n        this._toDispose.add(this.editor.onDidChangeConfiguration(() => updateFromConfig()));\n        updateFromConfig();\n    }\n    dispose() {\n        this._alternatives.dispose();\n        this._toDispose.dispose();\n        this.widget.dispose();\n        this.model.dispose();\n        this._lineSuffix.dispose();\n        this._onWillInsertSuggestItem.dispose();\n    }\n    _insertSuggestion(event, flags) {\n        if (!event || !event.item) {\n            this._alternatives.value.reset();\n            this.model.cancel();\n            this.model.clear();\n            return;\n        }\n        if (!this.editor.hasModel()) {\n            return;\n        }\n        const snippetController = SnippetController2.get(this.editor);\n        if (!snippetController) {\n            return;\n        }\n        this._onWillInsertSuggestItem.fire({ item: event.item });\n        const model = this.editor.getModel();\n        const modelVersionNow = model.getAlternativeVersionId();\n        const { item } = event;\n        //\n        const tasks = [];\n        const cts = new CancellationTokenSource();\n        // pushing undo stops *before* additional text edits and\n        // *after* the main edit\n        if (!(flags & 1 /* InsertFlags.NoBeforeUndoStop */)) {\n            this.editor.pushUndoStop();\n        }\n        // compute overwrite[Before|After] deltas BEFORE applying extra edits\n        const info = this.getOverwriteInfo(item, Boolean(flags & 8 /* InsertFlags.AlternativeOverwriteConfig */));\n        // keep item in memory\n        this._memoryService.memorize(model, this.editor.getPosition(), item);\n        const isResolved = item.isResolved;\n        // telemetry data points: duration of command execution, info about async additional edits (-1=n/a, -2=none, 1=success, 0=failed)\n        let _commandExectionDuration = -1;\n        let _additionalEditsAppliedAsync = -1;\n        if (Array.isArray(item.completion.additionalTextEdits)) {\n            // cancel -> stops all listening and closes widget\n            this.model.cancel();\n            // sync additional edits\n            const scrollState = StableEditorScrollState.capture(this.editor);\n            this.editor.executeEdits('suggestController.additionalTextEdits.sync', item.completion.additionalTextEdits.map(edit => {\n                let range = Range.lift(edit.range);\n                if (range.startLineNumber === item.position.lineNumber && range.startColumn > item.position.column) {\n                    // shift additional edit when it is \"after\" the completion insertion position\n                    const columnDelta = this.editor.getPosition().column - item.position.column;\n                    const startColumnDelta = columnDelta;\n                    const endColumnDelta = Range.spansMultipleLines(range) ? 0 : columnDelta;\n                    range = new Range(range.startLineNumber, range.startColumn + startColumnDelta, range.endLineNumber, range.endColumn + endColumnDelta);\n                }\n                return EditOperation.replaceMove(range, edit.text);\n            }));\n            scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\n        }\n        else if (!isResolved) {\n            // async additional edits\n            const sw = new StopWatch();\n            let position;\n            const docListener = model.onDidChangeContent(e => {\n                if (e.isFlush) {\n                    cts.cancel();\n                    docListener.dispose();\n                    return;\n                }\n                for (const change of e.changes) {\n                    const thisPosition = Range.getEndPosition(change.range);\n                    if (!position || Position.isBefore(thisPosition, position)) {\n                        position = thisPosition;\n                    }\n                }\n            });\n            const oldFlags = flags;\n            flags |= 2 /* InsertFlags.NoAfterUndoStop */;\n            let didType = false;\n            const typeListener = this.editor.onWillType(() => {\n                typeListener.dispose();\n                didType = true;\n                if (!(oldFlags & 2 /* InsertFlags.NoAfterUndoStop */)) {\n                    this.editor.pushUndoStop();\n                }\n            });\n            tasks.push(item.resolve(cts.token).then(() => {\n                if (!item.completion.additionalTextEdits || cts.token.isCancellationRequested) {\n                    return undefined;\n                }\n                if (position && item.completion.additionalTextEdits.some(edit => Position.isBefore(position, Range.getStartPosition(edit.range)))) {\n                    return false;\n                }\n                if (didType) {\n                    this.editor.pushUndoStop();\n                }\n                const scrollState = StableEditorScrollState.capture(this.editor);\n                this.editor.executeEdits('suggestController.additionalTextEdits.async', item.completion.additionalTextEdits.map(edit => EditOperation.replaceMove(Range.lift(edit.range), edit.text)));\n                scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\n                if (didType || !(oldFlags & 2 /* InsertFlags.NoAfterUndoStop */)) {\n                    this.editor.pushUndoStop();\n                }\n                return true;\n            }).then(applied => {\n                this._logService.trace('[suggest] async resolving of edits DONE (ms, applied?)', sw.elapsed(), applied);\n                _additionalEditsAppliedAsync = applied === true ? 1 : applied === false ? 0 : -2;\n            }).finally(() => {\n                docListener.dispose();\n                typeListener.dispose();\n            }));\n        }\n        let { insertText } = item.completion;\n        if (!(item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */)) {\n            insertText = SnippetParser.escape(insertText);\n        }\n        // cancel -> stops all listening and closes widget\n        this.model.cancel();\n        snippetController.insert(insertText, {\n            overwriteBefore: info.overwriteBefore,\n            overwriteAfter: info.overwriteAfter,\n            undoStopBefore: false,\n            undoStopAfter: false,\n            adjustWhitespace: !(item.completion.insertTextRules & 1 /* CompletionItemInsertTextRule.KeepWhitespace */),\n            clipboardText: event.model.clipboardText,\n            overtypingCapturer: this._overtypingCapturer.value\n        });\n        if (!(flags & 2 /* InsertFlags.NoAfterUndoStop */)) {\n            this.editor.pushUndoStop();\n        }\n        if (item.completion.command) {\n            if (item.completion.command.id === TriggerSuggestAction.id) {\n                // retigger\n                this.model.trigger({ auto: true, retrigger: true });\n            }\n            else {\n                // exec command, done\n                const sw = new StopWatch();\n                tasks.push(this._commandService.executeCommand(item.completion.command.id, ...(item.completion.command.arguments ? [...item.completion.command.arguments] : [])).catch(e => {\n                    if (item.completion.extensionId) {\n                        onUnexpectedExternalError(e);\n                    }\n                    else {\n                        onUnexpectedError(e);\n                    }\n                }).finally(() => {\n                    _commandExectionDuration = sw.elapsed();\n                }));\n            }\n        }\n        if (flags & 4 /* InsertFlags.KeepAlternativeSuggestions */) {\n            this._alternatives.value.set(event, next => {\n                // cancel resolving of additional edits\n                cts.cancel();\n                // this is not so pretty. when inserting the 'next'\n                // suggestion we undo until we are at the state at\n                // which we were before inserting the previous suggestion...\n                while (model.canUndo()) {\n                    if (modelVersionNow !== model.getAlternativeVersionId()) {\n                        model.undo();\n                    }\n                    this._insertSuggestion(next, 1 /* InsertFlags.NoBeforeUndoStop */ | 2 /* InsertFlags.NoAfterUndoStop */ | (flags & 8 /* InsertFlags.AlternativeOverwriteConfig */ ? 8 /* InsertFlags.AlternativeOverwriteConfig */ : 0));\n                    break;\n                }\n            });\n        }\n        this._alertCompletionItem(item);\n        // clear only now - after all tasks are done\n        Promise.all(tasks).finally(() => {\n            this._reportSuggestionAcceptedTelemetry(item, model, isResolved, _commandExectionDuration, _additionalEditsAppliedAsync);\n            this.model.clear();\n            cts.dispose();\n        });\n    }\n    _reportSuggestionAcceptedTelemetry(item, model, itemResolved, commandExectionDuration, additionalEditsAppliedAsync) {\n        var _a, _b, _c;\n        if (Math.floor(Math.random() * 100) === 0) {\n            // throttle telemetry event because accepting completions happens a lot\n            return;\n        }\n        this._telemetryService.publicLog2('suggest.acceptedSuggestion', {\n            extensionId: (_b = (_a = item.extensionId) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 'unknown',\n            providerId: (_c = item.provider._debugDisplayName) !== null && _c !== void 0 ? _c : 'unknown',\n            kind: item.completion.kind,\n            basenameHash: hash(basename(model.uri)).toString(16),\n            languageId: model.getLanguageId(),\n            fileExtension: extname(model.uri),\n            resolveInfo: !item.provider.resolveCompletionItem ? -1 : itemResolved ? 1 : 0,\n            resolveDuration: item.resolveDuration,\n            commandDuration: commandExectionDuration,\n            additionalEditsAsync: additionalEditsAppliedAsync\n        });\n    }\n    getOverwriteInfo(item, toggleMode) {\n        assertType(this.editor.hasModel());\n        let replace = this.editor.getOption(118 /* EditorOption.suggest */).insertMode === 'replace';\n        if (toggleMode) {\n            replace = !replace;\n        }\n        const overwriteBefore = item.position.column - item.editStart.column;\n        const overwriteAfter = (replace ? item.editReplaceEnd.column : item.editInsertEnd.column) - item.position.column;\n        const columnDelta = this.editor.getPosition().column - item.position.column;\n        const suffixDelta = this._lineSuffix.value ? this._lineSuffix.value.delta(this.editor.getPosition()) : 0;\n        return {\n            overwriteBefore: overwriteBefore + columnDelta,\n            overwriteAfter: overwriteAfter + suffixDelta\n        };\n    }\n    _alertCompletionItem(item) {\n        if (isNonEmptyArray(item.completion.additionalTextEdits)) {\n            const msg = nls.localize('aria.alert.snippet', \"Accepting '{0}' made {1} additional edits\", item.textLabel, item.completion.additionalTextEdits.length);\n            alert(msg);\n        }\n    }\n    triggerSuggest(onlyFrom, auto, noFilter) {\n        if (this.editor.hasModel()) {\n            this.model.trigger({\n                auto: auto !== null && auto !== void 0 ? auto : false,\n                completionOptions: { providerFilter: onlyFrom, kindFilter: noFilter ? new Set() : undefined }\n            });\n            this.editor.revealPosition(this.editor.getPosition(), 0 /* ScrollType.Smooth */);\n            this.editor.focus();\n        }\n    }\n    triggerSuggestAndAcceptBest(arg) {\n        if (!this.editor.hasModel()) {\n            return;\n        }\n        const positionNow = this.editor.getPosition();\n        const fallback = () => {\n            if (positionNow.equals(this.editor.getPosition())) {\n                this._commandService.executeCommand(arg.fallback);\n            }\n        };\n        const makesTextEdit = (item) => {\n            if (item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */ || item.completion.additionalTextEdits) {\n                // snippet, other editor -> makes edit\n                return true;\n            }\n            const position = this.editor.getPosition();\n            const startColumn = item.editStart.column;\n            const endColumn = position.column;\n            if (endColumn - startColumn !== item.completion.insertText.length) {\n                // unequal lengths -> makes edit\n                return true;\n            }\n            const textNow = this.editor.getModel().getValueInRange({\n                startLineNumber: position.lineNumber,\n                startColumn,\n                endLineNumber: position.lineNumber,\n                endColumn\n            });\n            // unequal text -> makes edit\n            return textNow !== item.completion.insertText;\n        };\n        Event.once(this.model.onDidTrigger)(_ => {\n            // wait for trigger because only then the cancel-event is trustworthy\n            const listener = [];\n            Event.any(this.model.onDidTrigger, this.model.onDidCancel)(() => {\n                // retrigger or cancel -> try to type default text\n                dispose(listener);\n                fallback();\n            }, undefined, listener);\n            this.model.onDidSuggest(({ completionModel }) => {\n                dispose(listener);\n                if (completionModel.items.length === 0) {\n                    fallback();\n                    return;\n                }\n                const index = this._memoryService.select(this.editor.getModel(), this.editor.getPosition(), completionModel.items);\n                const item = completionModel.items[index];\n                if (!makesTextEdit(item)) {\n                    fallback();\n                    return;\n                }\n                this.editor.pushUndoStop();\n                this._insertSuggestion({ index, item, model: completionModel }, 4 /* InsertFlags.KeepAlternativeSuggestions */ | 1 /* InsertFlags.NoBeforeUndoStop */ | 2 /* InsertFlags.NoAfterUndoStop */);\n            }, undefined, listener);\n        });\n        this.model.trigger({ auto: false, shy: true });\n        this.editor.revealPosition(positionNow, 0 /* ScrollType.Smooth */);\n        this.editor.focus();\n    }\n    acceptSelectedSuggestion(keepAlternativeSuggestions, alternativeOverwriteConfig) {\n        const item = this.widget.value.getFocusedItem();\n        let flags = 0;\n        if (keepAlternativeSuggestions) {\n            flags |= 4 /* InsertFlags.KeepAlternativeSuggestions */;\n        }\n        if (alternativeOverwriteConfig) {\n            flags |= 8 /* InsertFlags.AlternativeOverwriteConfig */;\n        }\n        this._insertSuggestion(item, flags);\n    }\n    acceptNextSuggestion() {\n        this._alternatives.value.next();\n    }\n    acceptPrevSuggestion() {\n        this._alternatives.value.prev();\n    }\n    cancelSuggestWidget() {\n        this.model.cancel();\n        this.model.clear();\n        this.widget.value.hideWidget();\n    }\n    focusSuggestion() {\n        this.widget.value.focusSelected();\n    }\n    selectNextSuggestion() {\n        this.widget.value.selectNext();\n    }\n    selectNextPageSuggestion() {\n        this.widget.value.selectNextPage();\n    }\n    selectLastSuggestion() {\n        this.widget.value.selectLast();\n    }\n    selectPrevSuggestion() {\n        this.widget.value.selectPrevious();\n    }\n    selectPrevPageSuggestion() {\n        this.widget.value.selectPreviousPage();\n    }\n    selectFirstSuggestion() {\n        this.widget.value.selectFirst();\n    }\n    toggleSuggestionDetails() {\n        this.widget.value.toggleDetails();\n    }\n    toggleExplainMode() {\n        this.widget.value.toggleExplainMode();\n    }\n    toggleSuggestionFocus() {\n        this.widget.value.toggleDetailsFocus();\n    }\n    resetWidgetSize() {\n        this.widget.value.resetPersistedSize();\n    }\n    forceRenderingAbove() {\n        this.widget.value.forceRenderingAbove();\n    }\n    stopForceRenderingAbove() {\n        if (!this.widget.isInitialized) {\n            // This method has no effect if the widget is not initialized yet.\n            return;\n        }\n        this.widget.value.stopForceRenderingAbove();\n    }\n    registerSelector(selector) {\n        return this._selectors.register(selector);\n    }\n};\nSuggestController.ID = 'editor.contrib.suggestController';\nSuggestController = SuggestController_1 = __decorate([\n    __param(1, ISuggestMemoryService),\n    __param(2, ICommandService),\n    __param(3, IContextKeyService),\n    __param(4, IInstantiationService),\n    __param(5, ILogService),\n    __param(6, ITelemetryService)\n], SuggestController);\nexport { SuggestController };\nclass PriorityRegistry {\n    constructor(prioritySelector) {\n        this.prioritySelector = prioritySelector;\n        this._items = new Array();\n    }\n    register(value) {\n        if (this._items.indexOf(value) !== -1) {\n            throw new Error('Value is already registered');\n        }\n        this._items.push(value);\n        this._items.sort((s1, s2) => this.prioritySelector(s2) - this.prioritySelector(s1));\n        return {\n            dispose: () => {\n                const idx = this._items.indexOf(value);\n                if (idx >= 0) {\n                    this._items.splice(idx, 1);\n                }\n            }\n        };\n    }\n    get itemsOrderedByPriorityDesc() {\n        return this._items;\n    }\n}\nexport class TriggerSuggestAction extends EditorAction {\n    constructor() {\n        super({\n            id: TriggerSuggestAction.id,\n            label: nls.localize('suggest.trigger.label', \"Trigger Suggest\"),\n            alias: 'Trigger Suggest',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCompletionItemProvider, SuggestContext.Visible.toNegated()),\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 10 /* KeyCode.Space */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */],\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 10 /* KeyCode.Space */, secondary: [512 /* KeyMod.Alt */ | 9 /* KeyCode.Escape */, 2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */] },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor, args) {\n        const controller = SuggestController.get(editor);\n        if (!controller) {\n            return;\n        }\n        let auto;\n        if (args && typeof args === 'object') {\n            if (args.auto === true) {\n                auto = true;\n            }\n        }\n        controller.triggerSuggest(undefined, auto, undefined);\n    }\n}\nTriggerSuggestAction.id = 'editor.action.triggerSuggest';\nregisterEditorContribution(SuggestController.ID, SuggestController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorAction(TriggerSuggestAction);\nconst weight = 100 /* KeybindingWeight.EditorContrib */ + 90;\nconst SuggestCommand = EditorCommand.bindToContribution(SuggestController.get);\nregisterEditorCommand(new SuggestCommand({\n    id: 'acceptSelectedSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion),\n    handler(x) {\n        x.acceptSelectedSuggestion(true, false);\n    },\n    kbOpts: [{\n            // normal tab\n            primary: 2 /* KeyCode.Tab */,\n            kbExpr: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus),\n            weight,\n        }, {\n            // accept on enter has special rules\n            primary: 3 /* KeyCode.Enter */,\n            kbExpr: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus, SuggestContext.AcceptSuggestionsOnEnter, SuggestContext.MakesTextEdit),\n            weight,\n        }],\n    menuOpts: [{\n            menuId: suggestWidgetStatusbarMenu,\n            title: nls.localize('accept.insert', \"Insert\"),\n            group: 'left',\n            order: 1,\n            when: SuggestContext.HasInsertAndReplaceRange.toNegated()\n        }, {\n            menuId: suggestWidgetStatusbarMenu,\n            title: nls.localize('accept.insert', \"Insert\"),\n            group: 'left',\n            order: 1,\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert'))\n        }, {\n            menuId: suggestWidgetStatusbarMenu,\n            title: nls.localize('accept.replace', \"Replace\"),\n            group: 'left',\n            order: 1,\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace'))\n        }]\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'acceptAlternativeSelectedSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus, SuggestContext.HasFocusedSuggestion),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 1024 /* KeyMod.Shift */ | 3 /* KeyCode.Enter */,\n        secondary: [1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */],\n    },\n    handler(x) {\n        x.acceptSelectedSuggestion(false, true);\n    },\n    menuOpts: [{\n            menuId: suggestWidgetStatusbarMenu,\n            group: 'left',\n            order: 2,\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert')),\n            title: nls.localize('accept.replace', \"Replace\")\n        }, {\n            menuId: suggestWidgetStatusbarMenu,\n            group: 'left',\n            order: 2,\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace')),\n            title: nls.localize('accept.insert', \"Insert\")\n        }]\n}));\n// continue to support the old command\nCommandsRegistry.registerCommandAlias('acceptSelectedSuggestionOnEnter', 'acceptSelectedSuggestion');\nregisterEditorCommand(new SuggestCommand({\n    id: 'hideSuggestWidget',\n    precondition: SuggestContext.Visible,\n    handler: x => x.cancelSuggestWidget(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 9 /* KeyCode.Escape */,\n        secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectNextSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n    handler: c => c.selectNextSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 18 /* KeyCode.DownArrow */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */],\n        mac: { primary: 18 /* KeyCode.DownArrow */, secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */, 256 /* KeyMod.WinCtrl */ | 44 /* KeyCode.KeyN */] }\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectNextPageSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n    handler: c => c.selectNextPageSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 12 /* KeyCode.PageDown */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 12 /* KeyCode.PageDown */]\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectLastSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n    handler: c => c.selectLastSuggestion()\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectPrevSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n    handler: c => c.selectPrevSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 16 /* KeyCode.UpArrow */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */],\n        mac: { primary: 16 /* KeyCode.UpArrow */, secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */, 256 /* KeyMod.WinCtrl */ | 46 /* KeyCode.KeyP */] }\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectPrevPageSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n    handler: c => c.selectPrevPageSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 11 /* KeyCode.PageUp */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 11 /* KeyCode.PageUp */]\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectFirstSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n    handler: c => c.selectFirstSuggestion()\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'focusSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion.negate()),\n    handler: x => x.focusSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 10 /* KeyCode.Space */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */],\n        mac: { primary: 256 /* KeyMod.WinCtrl */ | 10 /* KeyCode.Space */, secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */] }\n    },\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'focusAndAcceptSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion.negate()),\n    handler: c => {\n        c.focusSuggestion();\n        c.acceptSelectedSuggestion(true, false);\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'toggleSuggestionDetails',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion),\n    handler: x => x.toggleSuggestionDetails(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 10 /* KeyCode.Space */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */],\n        mac: { primary: 256 /* KeyMod.WinCtrl */ | 10 /* KeyCode.Space */, secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */] }\n    },\n    menuOpts: [{\n            menuId: suggestWidgetStatusbarMenu,\n            group: 'right',\n            order: 1,\n            when: ContextKeyExpr.and(SuggestContext.DetailsVisible, SuggestContext.CanResolve),\n            title: nls.localize('detail.more', \"show less\")\n        }, {\n            menuId: suggestWidgetStatusbarMenu,\n            group: 'right',\n            order: 1,\n            when: ContextKeyExpr.and(SuggestContext.DetailsVisible.toNegated(), SuggestContext.CanResolve),\n            title: nls.localize('detail.less', \"show more\")\n        }]\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'toggleExplainMode',\n    precondition: SuggestContext.Visible,\n    handler: x => x.toggleExplainMode(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 90 /* KeyCode.Slash */,\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'toggleSuggestionFocus',\n    precondition: SuggestContext.Visible,\n    handler: x => x.toggleSuggestionFocus(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 10 /* KeyCode.Space */,\n        mac: { primary: 256 /* KeyMod.WinCtrl */ | 512 /* KeyMod.Alt */ | 10 /* KeyCode.Space */ }\n    }\n}));\n//#region tab completions\nregisterEditorCommand(new SuggestCommand({\n    id: 'insertBestCompletion',\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), WordContextKey.AtEnd, SuggestContext.Visible.toNegated(), SuggestAlternatives.OtherSuggestions.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n    handler: (x, arg) => {\n        x.triggerSuggestAndAcceptBest(isObject(arg) ? { fallback: 'tab', ...arg } : { fallback: 'tab' });\n    },\n    kbOpts: {\n        weight,\n        primary: 2 /* KeyCode.Tab */\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'insertNextSuggestion',\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n    handler: x => x.acceptNextSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2 /* KeyCode.Tab */\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'insertPrevSuggestion',\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n    handler: x => x.acceptPrevSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */\n    }\n}));\nregisterEditorAction(class extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.resetSuggestSize',\n            label: nls.localize('suggest.reset.label', \"Reset Suggest Widget Size\"),\n            alias: 'Reset Suggest Widget Size',\n            precondition: undefined\n        });\n    }\n    run(_accessor, editor) {\n        var _a;\n        (_a = SuggestController.get(editor)) === null || _a === void 0 ? void 0 : _a.resetWidgetSize();\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { FuzzyScore } from '../../../../base/common/filters.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { Disposable, RefCountedDisposable } from '../../../../base/common/lifecycle.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { Range } from '../../../common/core/range.js';\nimport { registerEditorFeature } from '../../../common/editorFeatures.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { CompletionModel, LineContext } from './completionModel.js';\nimport { CompletionOptions, provideSuggestionItems, QuickSuggestionsOptions } from './suggest.js';\nimport { ISuggestMemoryService } from './suggestMemory.js';\nimport { SuggestModel } from './suggestModel.js';\nimport { WordDistance } from './wordDistance.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nclass SuggestInlineCompletion {\n    constructor(range, insertText, filterText, additionalTextEdits, command, completion) {\n        this.range = range;\n        this.insertText = insertText;\n        this.filterText = filterText;\n        this.additionalTextEdits = additionalTextEdits;\n        this.command = command;\n        this.completion = completion;\n    }\n}\nlet InlineCompletionResults = class InlineCompletionResults extends RefCountedDisposable {\n    constructor(model, line, word, completionModel, completions, _suggestMemoryService) {\n        super(completions.disposable);\n        this.model = model;\n        this.line = line;\n        this.word = word;\n        this.completionModel = completionModel;\n        this._suggestMemoryService = _suggestMemoryService;\n    }\n    canBeReused(model, line, word) {\n        return this.model === model // same model\n            && this.line === line\n            && this.word.word.length > 0\n            && this.word.startColumn === word.startColumn && this.word.endColumn < word.endColumn // same word\n            && this.completionModel.getIncompleteProvider().size === 0; // no incomplete results\n    }\n    get items() {\n        var _a;\n        const result = [];\n        // Split items by preselected index. This ensures the memory-selected item shows first and that better/worst\n        // ranked items are before/after\n        const { items } = this.completionModel;\n        const selectedIndex = this._suggestMemoryService.select(this.model, { lineNumber: this.line, column: this.word.endColumn + this.completionModel.lineContext.characterCountDelta }, items);\n        const first = Iterable.slice(items, selectedIndex);\n        const second = Iterable.slice(items, 0, selectedIndex);\n        let resolveCount = 5;\n        for (const item of Iterable.concat(first, second)) {\n            if (item.score === FuzzyScore.Default) {\n                // skip items that have no overlap\n                continue;\n            }\n            const range = new Range(item.editStart.lineNumber, item.editStart.column, item.editInsertEnd.lineNumber, item.editInsertEnd.column + this.completionModel.lineContext.characterCountDelta // end PLUS character delta\n            );\n            const insertText = item.completion.insertTextRules && (item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */)\n                ? { snippet: item.completion.insertText }\n                : item.completion.insertText;\n            result.push(new SuggestInlineCompletion(range, insertText, (_a = item.filterTextLow) !== null && _a !== void 0 ? _a : item.labelLow, item.completion.additionalTextEdits, item.completion.command, item));\n            // resolve the first N suggestions eagerly\n            if (resolveCount-- >= 0) {\n                item.resolve(CancellationToken.None);\n            }\n        }\n        return result;\n    }\n};\nInlineCompletionResults = __decorate([\n    __param(5, ISuggestMemoryService)\n], InlineCompletionResults);\nlet SuggestInlineCompletions = class SuggestInlineCompletions extends Disposable {\n    constructor(_languageFeatureService, _clipboardService, _suggestMemoryService, _editorService) {\n        super();\n        this._languageFeatureService = _languageFeatureService;\n        this._clipboardService = _clipboardService;\n        this._suggestMemoryService = _suggestMemoryService;\n        this._editorService = _editorService;\n        this._store.add(_languageFeatureService.inlineCompletionsProvider.register('*', this));\n    }\n    async provideInlineCompletions(model, position, context, token) {\n        var _a;\n        if (context.selectedSuggestionInfo) {\n            return;\n        }\n        let editor;\n        for (const candidate of this._editorService.listCodeEditors()) {\n            if (candidate.getModel() === model) {\n                editor = candidate;\n                break;\n            }\n        }\n        if (!editor) {\n            return;\n        }\n        const config = editor.getOption(89 /* EditorOption.quickSuggestions */);\n        if (QuickSuggestionsOptions.isAllOff(config)) {\n            // quick suggest is off (for this model/language)\n            return;\n        }\n        model.tokenization.tokenizeIfCheap(position.lineNumber);\n        const lineTokens = model.tokenization.getLineTokens(position.lineNumber);\n        const tokenType = lineTokens.getStandardTokenType(lineTokens.findTokenIndexAtOffset(Math.max(position.column - 1 - 1, 0)));\n        if (QuickSuggestionsOptions.valueFor(config, tokenType) !== 'inline') {\n            // quick suggest is off (for this token)\n            return undefined;\n        }\n        // We consider non-empty leading words and trigger characters. The latter only\n        // when no word is being typed (word characters superseed trigger characters)\n        let wordInfo = model.getWordAtPosition(position);\n        let triggerCharacterInfo;\n        if (!(wordInfo === null || wordInfo === void 0 ? void 0 : wordInfo.word)) {\n            triggerCharacterInfo = this._getTriggerCharacterInfo(model, position);\n        }\n        if (!(wordInfo === null || wordInfo === void 0 ? void 0 : wordInfo.word) && !triggerCharacterInfo) {\n            // not at word, not a trigger character\n            return;\n        }\n        // ensure that we have word information and that we are at the end of a word\n        // otherwise we stop because we don't want to do quick suggestions inside words\n        if (!wordInfo) {\n            wordInfo = model.getWordUntilPosition(position);\n        }\n        if (wordInfo.endColumn !== position.column) {\n            return;\n        }\n        let result;\n        const leadingLineContents = model.getValueInRange(new Range(position.lineNumber, 1, position.lineNumber, position.column));\n        if (!triggerCharacterInfo && ((_a = this._lastResult) === null || _a === void 0 ? void 0 : _a.canBeReused(model, position.lineNumber, wordInfo))) {\n            // reuse a previous result iff possible, only a refilter is needed\n            // TODO@jrieken this can be improved further and only incomplete results can be updated\n            // console.log(`REUSE with ${wordInfo.word}`);\n            const newLineContext = new LineContext(leadingLineContents, position.column - this._lastResult.word.endColumn);\n            this._lastResult.completionModel.lineContext = newLineContext;\n            this._lastResult.acquire();\n            result = this._lastResult;\n        }\n        else {\n            // refesh model is required\n            const completions = await provideSuggestionItems(this._languageFeatureService.completionProvider, model, position, new CompletionOptions(undefined, SuggestModel.createSuggestFilter(editor).itemKind, triggerCharacterInfo === null || triggerCharacterInfo === void 0 ? void 0 : triggerCharacterInfo.providers), triggerCharacterInfo && { triggerKind: 1 /* CompletionTriggerKind.TriggerCharacter */, triggerCharacter: triggerCharacterInfo.ch }, token);\n            let clipboardText;\n            if (completions.needsClipboard) {\n                clipboardText = await this._clipboardService.readText();\n            }\n            const completionModel = new CompletionModel(completions.items, position.column, new LineContext(leadingLineContents, 0), WordDistance.None, editor.getOption(118 /* EditorOption.suggest */), editor.getOption(112 /* EditorOption.snippetSuggestions */), { boostFullMatch: false, firstMatchCanBeWeak: false }, clipboardText);\n            result = new InlineCompletionResults(model, position.lineNumber, wordInfo, completionModel, completions, this._suggestMemoryService);\n        }\n        this._lastResult = result;\n        return result;\n    }\n    handleItemDidShow(_completions, item) {\n        item.completion.resolve(CancellationToken.None);\n    }\n    freeInlineCompletions(result) {\n        result.release();\n    }\n    _getTriggerCharacterInfo(model, position) {\n        var _a;\n        const ch = model.getValueInRange(Range.fromPositions({ lineNumber: position.lineNumber, column: position.column - 1 }, position));\n        const providers = new Set();\n        for (const provider of this._languageFeatureService.completionProvider.all(model)) {\n            if ((_a = provider.triggerCharacters) === null || _a === void 0 ? void 0 : _a.includes(ch)) {\n                providers.add(provider);\n            }\n        }\n        if (providers.size === 0) {\n            return undefined;\n        }\n        return { providers, ch };\n    }\n};\nSuggestInlineCompletions = __decorate([\n    __param(0, ILanguageFeaturesService),\n    __param(1, IClipboardService),\n    __param(2, ISuggestMemoryService),\n    __param(3, ICodeEditorService)\n], SuggestInlineCompletions);\nexport { SuggestInlineCompletions };\nregisterEditorFeature(SuggestInlineCompletions);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar SuggestMemoryService_1;\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { TernarySearchTree } from '../../../../base/common/ternarySearchTree.js';\nimport { CompletionItemKinds } from '../../../common/languages.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IStorageService, WillSaveStateReason } from '../../../../platform/storage/common/storage.js';\nexport class Memory {\n    constructor(name) {\n        this.name = name;\n    }\n    select(model, pos, items) {\n        if (items.length === 0) {\n            return 0;\n        }\n        const topScore = items[0].score[0];\n        for (let i = 0; i < items.length; i++) {\n            const { score, completion: suggestion } = items[i];\n            if (score[0] !== topScore) {\n                // stop when leaving the group of top matches\n                break;\n            }\n            if (suggestion.preselect) {\n                // stop when seeing an auto-select-item\n                return i;\n            }\n        }\n        return 0;\n    }\n}\nexport class NoMemory extends Memory {\n    constructor() {\n        super('first');\n    }\n    memorize(model, pos, item) {\n        // no-op\n    }\n    toJSON() {\n        return undefined;\n    }\n    fromJSON() {\n        //\n    }\n}\nexport class LRUMemory extends Memory {\n    constructor() {\n        super('recentlyUsed');\n        this._cache = new LRUCache(300, 0.66);\n        this._seq = 0;\n    }\n    memorize(model, pos, item) {\n        const key = `${model.getLanguageId()}/${item.textLabel}`;\n        this._cache.set(key, {\n            touch: this._seq++,\n            type: item.completion.kind,\n            insertText: item.completion.insertText\n        });\n    }\n    select(model, pos, items) {\n        if (items.length === 0) {\n            return 0;\n        }\n        const lineSuffix = model.getLineContent(pos.lineNumber).substr(pos.column - 10, pos.column - 1);\n        if (/\\s$/.test(lineSuffix)) {\n            return super.select(model, pos, items);\n        }\n        const topScore = items[0].score[0];\n        let indexPreselect = -1;\n        let indexRecency = -1;\n        let seq = -1;\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].score[0] !== topScore) {\n                // consider only top items\n                break;\n            }\n            const key = `${model.getLanguageId()}/${items[i].textLabel}`;\n            const item = this._cache.peek(key);\n            if (item && item.touch > seq && item.type === items[i].completion.kind && item.insertText === items[i].completion.insertText) {\n                seq = item.touch;\n                indexRecency = i;\n            }\n            if (items[i].completion.preselect && indexPreselect === -1) {\n                // stop when seeing an auto-select-item\n                return indexPreselect = i;\n            }\n        }\n        if (indexRecency !== -1) {\n            return indexRecency;\n        }\n        else if (indexPreselect !== -1) {\n            return indexPreselect;\n        }\n        else {\n            return 0;\n        }\n    }\n    toJSON() {\n        return this._cache.toJSON();\n    }\n    fromJSON(data) {\n        this._cache.clear();\n        const seq = 0;\n        for (const [key, value] of data) {\n            value.touch = seq;\n            value.type = typeof value.type === 'number' ? value.type : CompletionItemKinds.fromString(value.type);\n            this._cache.set(key, value);\n        }\n        this._seq = this._cache.size;\n    }\n}\nexport class PrefixMemory extends Memory {\n    constructor() {\n        super('recentlyUsedByPrefix');\n        this._trie = TernarySearchTree.forStrings();\n        this._seq = 0;\n    }\n    memorize(model, pos, item) {\n        const { word } = model.getWordUntilPosition(pos);\n        const key = `${model.getLanguageId()}/${word}`;\n        this._trie.set(key, {\n            type: item.completion.kind,\n            insertText: item.completion.insertText,\n            touch: this._seq++\n        });\n    }\n    select(model, pos, items) {\n        const { word } = model.getWordUntilPosition(pos);\n        if (!word) {\n            return super.select(model, pos, items);\n        }\n        const key = `${model.getLanguageId()}/${word}`;\n        let item = this._trie.get(key);\n        if (!item) {\n            item = this._trie.findSubstr(key);\n        }\n        if (item) {\n            for (let i = 0; i < items.length; i++) {\n                const { kind, insertText } = items[i].completion;\n                if (kind === item.type && insertText === item.insertText) {\n                    return i;\n                }\n            }\n        }\n        return super.select(model, pos, items);\n    }\n    toJSON() {\n        const entries = [];\n        this._trie.forEach((value, key) => entries.push([key, value]));\n        // sort by last recently used (touch), then\n        // take the top 200 item and normalize their\n        // touch\n        entries\n            .sort((a, b) => -(a[1].touch - b[1].touch))\n            .forEach((value, i) => value[1].touch = i);\n        return entries.slice(0, 200);\n    }\n    fromJSON(data) {\n        this._trie.clear();\n        if (data.length > 0) {\n            this._seq = data[0][1].touch + 1;\n            for (const [key, value] of data) {\n                value.type = typeof value.type === 'number' ? value.type : CompletionItemKinds.fromString(value.type);\n                this._trie.set(key, value);\n            }\n        }\n    }\n}\nlet SuggestMemoryService = SuggestMemoryService_1 = class SuggestMemoryService {\n    constructor(_storageService, _configService) {\n        this._storageService = _storageService;\n        this._configService = _configService;\n        this._disposables = new DisposableStore();\n        this._persistSoon = new RunOnceScheduler(() => this._saveState(), 500);\n        this._disposables.add(_storageService.onWillSaveState(e => {\n            if (e.reason === WillSaveStateReason.SHUTDOWN) {\n                this._saveState();\n            }\n        }));\n    }\n    dispose() {\n        this._disposables.dispose();\n        this._persistSoon.dispose();\n    }\n    memorize(model, pos, item) {\n        this._withStrategy(model, pos).memorize(model, pos, item);\n        this._persistSoon.schedule();\n    }\n    select(model, pos, items) {\n        return this._withStrategy(model, pos).select(model, pos, items);\n    }\n    _withStrategy(model, pos) {\n        var _a;\n        const mode = this._configService.getValue('editor.suggestSelection', {\n            overrideIdentifier: model.getLanguageIdAtPosition(pos.lineNumber, pos.column),\n            resource: model.uri\n        });\n        if (((_a = this._strategy) === null || _a === void 0 ? void 0 : _a.name) !== mode) {\n            this._saveState();\n            const ctor = SuggestMemoryService_1._strategyCtors.get(mode) || NoMemory;\n            this._strategy = new ctor();\n            try {\n                const share = this._configService.getValue('editor.suggest.shareSuggestSelections');\n                const scope = share ? 0 /* StorageScope.PROFILE */ : 1 /* StorageScope.WORKSPACE */;\n                const raw = this._storageService.get(`${SuggestMemoryService_1._storagePrefix}/${mode}`, scope);\n                if (raw) {\n                    this._strategy.fromJSON(JSON.parse(raw));\n                }\n            }\n            catch (e) {\n                // things can go wrong with JSON...\n            }\n        }\n        return this._strategy;\n    }\n    _saveState() {\n        if (this._strategy) {\n            const share = this._configService.getValue('editor.suggest.shareSuggestSelections');\n            const scope = share ? 0 /* StorageScope.PROFILE */ : 1 /* StorageScope.WORKSPACE */;\n            const raw = JSON.stringify(this._strategy);\n            this._storageService.store(`${SuggestMemoryService_1._storagePrefix}/${this._strategy.name}`, raw, scope, 1 /* StorageTarget.MACHINE */);\n        }\n    }\n};\nSuggestMemoryService._strategyCtors = new Map([\n    ['recentlyUsedByPrefix', PrefixMemory],\n    ['recentlyUsed', LRUMemory],\n    ['first', NoMemory]\n]);\nSuggestMemoryService._storagePrefix = 'suggest/memories';\nSuggestMemoryService = SuggestMemoryService_1 = __decorate([\n    __param(0, IStorageService),\n    __param(1, IConfigurationService)\n], SuggestMemoryService);\nexport { SuggestMemoryService };\nexport const ISuggestMemoryService = createDecorator('ISuggestMemories');\nregisterSingleton(ISuggestMemoryService, SuggestMemoryService, 1 /* InstantiationType.Delayed */);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar SuggestModel_1;\nimport { TimeoutTimer } from '../../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { DisposableStore, dispose } from '../../../../base/common/lifecycle.js';\nimport { getLeadingWhitespace, isHighSurrogate, isLowSurrogate } from '../../../../base/common/strings.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport { WordDistance } from './wordDistance.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { CompletionModel } from './completionModel.js';\nimport { CompletionOptions, getSnippetSuggestSupport, provideSuggestionItems, QuickSuggestionsOptions } from './suggest.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { FuzzyScoreOptions } from '../../../../base/common/filters.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { InlineCompletionContextKeys } from '../../inlineCompletions/browser/inlineCompletionContextKeys.js';\nimport { SnippetController2 } from '../../snippet/browser/snippetController2.js';\nimport { IEnvironmentService } from '../../../../platform/environment/common/environment.js';\nexport class LineContext {\n    static shouldAutoTrigger(editor) {\n        if (!editor.hasModel()) {\n            return false;\n        }\n        const model = editor.getModel();\n        const pos = editor.getPosition();\n        model.tokenization.tokenizeIfCheap(pos.lineNumber);\n        const word = model.getWordAtPosition(pos);\n        if (!word) {\n            return false;\n        }\n        if (word.endColumn !== pos.column &&\n            word.startColumn + 1 !== pos.column /* after typing a single character before a word */) {\n            return false;\n        }\n        if (!isNaN(Number(word.word))) {\n            return false;\n        }\n        return true;\n    }\n    constructor(model, position, triggerOptions) {\n        this.leadingLineContent = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\n        this.leadingWord = model.getWordUntilPosition(position);\n        this.lineNumber = position.lineNumber;\n        this.column = position.column;\n        this.triggerOptions = triggerOptions;\n    }\n}\nfunction canShowQuickSuggest(editor, contextKeyService, configurationService) {\n    if (!Boolean(contextKeyService.getContextKeyValue(InlineCompletionContextKeys.inlineSuggestionVisible.key))) {\n        // Allow if there is no inline suggestion.\n        return true;\n    }\n    const suppressSuggestions = contextKeyService.getContextKeyValue(InlineCompletionContextKeys.suppressSuggestions.key);\n    if (suppressSuggestions !== undefined) {\n        return !suppressSuggestions;\n    }\n    return !editor.getOption(62 /* EditorOption.inlineSuggest */).suppressSuggestions;\n}\nfunction canShowSuggestOnTriggerCharacters(editor, contextKeyService, configurationService) {\n    if (!Boolean(contextKeyService.getContextKeyValue('inlineSuggestionVisible'))) {\n        // Allow if there is no inline suggestion.\n        return true;\n    }\n    const suppressSuggestions = contextKeyService.getContextKeyValue(InlineCompletionContextKeys.suppressSuggestions.key);\n    if (suppressSuggestions !== undefined) {\n        return !suppressSuggestions;\n    }\n    return !editor.getOption(62 /* EditorOption.inlineSuggest */).suppressSuggestions;\n}\nlet SuggestModel = SuggestModel_1 = class SuggestModel {\n    constructor(_editor, _editorWorkerService, _clipboardService, _telemetryService, _logService, _contextKeyService, _configurationService, _languageFeaturesService, _envService) {\n        this._editor = _editor;\n        this._editorWorkerService = _editorWorkerService;\n        this._clipboardService = _clipboardService;\n        this._telemetryService = _telemetryService;\n        this._logService = _logService;\n        this._contextKeyService = _contextKeyService;\n        this._configurationService = _configurationService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._envService = _envService;\n        this._toDispose = new DisposableStore();\n        this._triggerCharacterListener = new DisposableStore();\n        this._triggerQuickSuggest = new TimeoutTimer();\n        this._triggerState = undefined;\n        this._completionDisposables = new DisposableStore();\n        this._onDidCancel = new Emitter();\n        this._onDidTrigger = new Emitter();\n        this._onDidSuggest = new Emitter();\n        this.onDidCancel = this._onDidCancel.event;\n        this.onDidTrigger = this._onDidTrigger.event;\n        this.onDidSuggest = this._onDidSuggest.event;\n        this._telemetryGate = 0;\n        this._currentSelection = this._editor.getSelection() || new Selection(1, 1, 1, 1);\n        // wire up various listeners\n        this._toDispose.add(this._editor.onDidChangeModel(() => {\n            this._updateTriggerCharacters();\n            this.cancel();\n        }));\n        this._toDispose.add(this._editor.onDidChangeModelLanguage(() => {\n            this._updateTriggerCharacters();\n            this.cancel();\n        }));\n        this._toDispose.add(this._editor.onDidChangeConfiguration(() => {\n            this._updateTriggerCharacters();\n        }));\n        this._toDispose.add(this._languageFeaturesService.completionProvider.onDidChange(() => {\n            this._updateTriggerCharacters();\n            this._updateActiveSuggestSession();\n        }));\n        let editorIsComposing = false;\n        this._toDispose.add(this._editor.onDidCompositionStart(() => {\n            editorIsComposing = true;\n        }));\n        this._toDispose.add(this._editor.onDidCompositionEnd(() => {\n            editorIsComposing = false;\n            this._onCompositionEnd();\n        }));\n        this._toDispose.add(this._editor.onDidChangeCursorSelection(e => {\n            // only trigger suggest when the editor isn't composing a character\n            if (!editorIsComposing) {\n                this._onCursorChange(e);\n            }\n        }));\n        this._toDispose.add(this._editor.onDidChangeModelContent(() => {\n            // only filter completions when the editor isn't composing a character\n            // allow-any-unicode-next-line\n            // e.g. ¨ + u makes ü but just ¨ cannot be used for filtering\n            if (!editorIsComposing && this._triggerState !== undefined) {\n                this._refilterCompletionItems();\n            }\n        }));\n        this._updateTriggerCharacters();\n    }\n    dispose() {\n        dispose(this._triggerCharacterListener);\n        dispose([this._onDidCancel, this._onDidSuggest, this._onDidTrigger, this._triggerQuickSuggest]);\n        this._toDispose.dispose();\n        this._completionDisposables.dispose();\n        this.cancel();\n    }\n    _updateTriggerCharacters() {\n        this._triggerCharacterListener.clear();\n        if (this._editor.getOption(91 /* EditorOption.readOnly */)\n            || !this._editor.hasModel()\n            || !this._editor.getOption(121 /* EditorOption.suggestOnTriggerCharacters */)) {\n            return;\n        }\n        const supportsByTriggerCharacter = new Map();\n        for (const support of this._languageFeaturesService.completionProvider.all(this._editor.getModel())) {\n            for (const ch of support.triggerCharacters || []) {\n                let set = supportsByTriggerCharacter.get(ch);\n                if (!set) {\n                    set = new Set();\n                    set.add(getSnippetSuggestSupport());\n                    supportsByTriggerCharacter.set(ch, set);\n                }\n                set.add(support);\n            }\n        }\n        const checkTriggerCharacter = (text) => {\n            var _a;\n            if (!canShowSuggestOnTriggerCharacters(this._editor, this._contextKeyService, this._configurationService)) {\n                return;\n            }\n            if (LineContext.shouldAutoTrigger(this._editor)) {\n                // don't trigger by trigger characters when this is a case for quick suggest\n                return;\n            }\n            if (!text) {\n                // came here from the compositionEnd-event\n                const position = this._editor.getPosition();\n                const model = this._editor.getModel();\n                text = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\n            }\n            let lastChar = '';\n            if (isLowSurrogate(text.charCodeAt(text.length - 1))) {\n                if (isHighSurrogate(text.charCodeAt(text.length - 2))) {\n                    lastChar = text.substr(text.length - 2);\n                }\n            }\n            else {\n                lastChar = text.charAt(text.length - 1);\n            }\n            const supports = supportsByTriggerCharacter.get(lastChar);\n            if (supports) {\n                // keep existing items that where not computed by the\n                // supports/providers that want to trigger now\n                const providerItemsToReuse = new Map();\n                if (this._completionModel) {\n                    for (const [provider, items] of this._completionModel.getItemsByProvider()) {\n                        if (!supports.has(provider)) {\n                            providerItemsToReuse.set(provider, items);\n                        }\n                    }\n                }\n                this.trigger({\n                    auto: true,\n                    triggerKind: 1 /* CompletionTriggerKind.TriggerCharacter */,\n                    triggerCharacter: lastChar,\n                    retrigger: Boolean(this._completionModel),\n                    clipboardText: (_a = this._completionModel) === null || _a === void 0 ? void 0 : _a.clipboardText,\n                    completionOptions: { providerFilter: supports, providerItemsToReuse }\n                });\n            }\n        };\n        this._triggerCharacterListener.add(this._editor.onDidType(checkTriggerCharacter));\n        this._triggerCharacterListener.add(this._editor.onDidCompositionEnd(() => checkTriggerCharacter()));\n    }\n    // --- trigger/retrigger/cancel suggest\n    get state() {\n        if (!this._triggerState) {\n            return 0 /* State.Idle */;\n        }\n        else if (!this._triggerState.auto) {\n            return 1 /* State.Manual */;\n        }\n        else {\n            return 2 /* State.Auto */;\n        }\n    }\n    cancel(retrigger = false) {\n        var _a;\n        if (this._triggerState !== undefined) {\n            this._triggerQuickSuggest.cancel();\n            (_a = this._requestToken) === null || _a === void 0 ? void 0 : _a.cancel();\n            this._requestToken = undefined;\n            this._triggerState = undefined;\n            this._completionModel = undefined;\n            this._context = undefined;\n            this._onDidCancel.fire({ retrigger });\n        }\n    }\n    clear() {\n        this._completionDisposables.clear();\n    }\n    _updateActiveSuggestSession() {\n        if (this._triggerState !== undefined) {\n            if (!this._editor.hasModel() || !this._languageFeaturesService.completionProvider.has(this._editor.getModel())) {\n                this.cancel();\n            }\n            else {\n                this.trigger({ auto: this._triggerState.auto, retrigger: true });\n            }\n        }\n    }\n    _onCursorChange(e) {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        const prevSelection = this._currentSelection;\n        this._currentSelection = this._editor.getSelection();\n        if (!e.selection.isEmpty()\n            || (e.reason !== 0 /* CursorChangeReason.NotSet */ && e.reason !== 3 /* CursorChangeReason.Explicit */)\n            || (e.source !== 'keyboard' && e.source !== 'deleteLeft')) {\n            // Early exit if nothing needs to be done!\n            // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\n            this.cancel();\n            return;\n        }\n        if (this._triggerState === undefined && e.reason === 0 /* CursorChangeReason.NotSet */) {\n            if (prevSelection.containsRange(this._currentSelection) || prevSelection.getEndPosition().isBeforeOrEqual(this._currentSelection.getPosition())) {\n                // cursor did move RIGHT due to typing -> trigger quick suggest\n                this._doTriggerQuickSuggest();\n            }\n        }\n        else if (this._triggerState !== undefined && e.reason === 3 /* CursorChangeReason.Explicit */) {\n            // suggest is active and something like cursor keys are used to move\n            // the cursor. this means we can refilter at the new position\n            this._refilterCompletionItems();\n        }\n    }\n    _onCompositionEnd() {\n        // trigger or refilter when composition ends\n        if (this._triggerState === undefined) {\n            this._doTriggerQuickSuggest();\n        }\n        else {\n            this._refilterCompletionItems();\n        }\n    }\n    _doTriggerQuickSuggest() {\n        var _a;\n        if (QuickSuggestionsOptions.isAllOff(this._editor.getOption(89 /* EditorOption.quickSuggestions */))) {\n            // not enabled\n            return;\n        }\n        if (this._editor.getOption(118 /* EditorOption.suggest */).snippetsPreventQuickSuggestions && ((_a = SnippetController2.get(this._editor)) === null || _a === void 0 ? void 0 : _a.isInSnippet())) {\n            // no quick suggestion when in snippet mode\n            return;\n        }\n        this.cancel();\n        this._triggerQuickSuggest.cancelAndSet(() => {\n            if (this._triggerState !== undefined) {\n                return;\n            }\n            if (!LineContext.shouldAutoTrigger(this._editor)) {\n                return;\n            }\n            if (!this._editor.hasModel() || !this._editor.hasWidgetFocus()) {\n                return;\n            }\n            const model = this._editor.getModel();\n            const pos = this._editor.getPosition();\n            // validate enabled now\n            const config = this._editor.getOption(89 /* EditorOption.quickSuggestions */);\n            if (QuickSuggestionsOptions.isAllOff(config)) {\n                return;\n            }\n            if (!QuickSuggestionsOptions.isAllOn(config)) {\n                // Check the type of the token that triggered this\n                model.tokenization.tokenizeIfCheap(pos.lineNumber);\n                const lineTokens = model.tokenization.getLineTokens(pos.lineNumber);\n                const tokenType = lineTokens.getStandardTokenType(lineTokens.findTokenIndexAtOffset(Math.max(pos.column - 1 - 1, 0)));\n                if (QuickSuggestionsOptions.valueFor(config, tokenType) !== 'on') {\n                    return;\n                }\n            }\n            if (!canShowQuickSuggest(this._editor, this._contextKeyService, this._configurationService)) {\n                // do not trigger quick suggestions if inline suggestions are shown\n                return;\n            }\n            if (!this._languageFeaturesService.completionProvider.has(model)) {\n                return;\n            }\n            // we made it till here -> trigger now\n            this.trigger({ auto: true });\n        }, this._editor.getOption(90 /* EditorOption.quickSuggestionsDelay */));\n    }\n    _refilterCompletionItems() {\n        assertType(this._editor.hasModel());\n        assertType(this._triggerState !== undefined);\n        const model = this._editor.getModel();\n        const position = this._editor.getPosition();\n        const ctx = new LineContext(model, position, { ...this._triggerState, refilter: true });\n        this._onNewContext(ctx);\n    }\n    trigger(options) {\n        var _a, _b, _c, _d, _e, _f;\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        const model = this._editor.getModel();\n        const ctx = new LineContext(model, this._editor.getPosition(), options);\n        // Cancel previous requests, change state & update UI\n        this.cancel(options.retrigger);\n        this._triggerState = options;\n        this._onDidTrigger.fire({ auto: options.auto, shy: (_a = options.shy) !== null && _a !== void 0 ? _a : false, position: this._editor.getPosition() });\n        // Capture context when request was sent\n        this._context = ctx;\n        // Build context for request\n        let suggestCtx = { triggerKind: (_b = options.triggerKind) !== null && _b !== void 0 ? _b : 0 /* CompletionTriggerKind.Invoke */ };\n        if (options.triggerCharacter) {\n            suggestCtx = {\n                triggerKind: 1 /* CompletionTriggerKind.TriggerCharacter */,\n                triggerCharacter: options.triggerCharacter\n            };\n        }\n        this._requestToken = new CancellationTokenSource();\n        // kind filter and snippet sort rules\n        const snippetSuggestions = this._editor.getOption(112 /* EditorOption.snippetSuggestions */);\n        let snippetSortOrder = 1 /* SnippetSortOrder.Inline */;\n        switch (snippetSuggestions) {\n            case 'top':\n                snippetSortOrder = 0 /* SnippetSortOrder.Top */;\n                break;\n            // \t↓ that's the default anyways...\n            // case 'inline':\n            // \tsnippetSortOrder = SnippetSortOrder.Inline;\n            // \tbreak;\n            case 'bottom':\n                snippetSortOrder = 2 /* SnippetSortOrder.Bottom */;\n                break;\n        }\n        const { itemKind: itemKindFilter, showDeprecated } = SuggestModel_1.createSuggestFilter(this._editor);\n        const completionOptions = new CompletionOptions(snippetSortOrder, (_d = (_c = options.completionOptions) === null || _c === void 0 ? void 0 : _c.kindFilter) !== null && _d !== void 0 ? _d : itemKindFilter, (_e = options.completionOptions) === null || _e === void 0 ? void 0 : _e.providerFilter, (_f = options.completionOptions) === null || _f === void 0 ? void 0 : _f.providerItemsToReuse, showDeprecated);\n        const wordDistance = WordDistance.create(this._editorWorkerService, this._editor);\n        const completions = provideSuggestionItems(this._languageFeaturesService.completionProvider, model, this._editor.getPosition(), completionOptions, suggestCtx, this._requestToken.token);\n        Promise.all([completions, wordDistance]).then(async ([completions, wordDistance]) => {\n            var _a;\n            (_a = this._requestToken) === null || _a === void 0 ? void 0 : _a.dispose();\n            if (!this._editor.hasModel()) {\n                return;\n            }\n            let clipboardText = options === null || options === void 0 ? void 0 : options.clipboardText;\n            if (!clipboardText && completions.needsClipboard) {\n                clipboardText = await this._clipboardService.readText();\n            }\n            if (this._triggerState === undefined) {\n                return;\n            }\n            const model = this._editor.getModel();\n            // const items = completions.items;\n            // if (existing) {\n            // \tconst cmpFn = getSuggestionComparator(snippetSortOrder);\n            // \titems = items.concat(existing.items).sort(cmpFn);\n            // }\n            const ctx = new LineContext(model, this._editor.getPosition(), options);\n            const fuzzySearchOptions = {\n                ...FuzzyScoreOptions.default,\n                firstMatchCanBeWeak: !this._editor.getOption(118 /* EditorOption.suggest */).matchOnWordStartOnly\n            };\n            this._completionModel = new CompletionModel(completions.items, this._context.column, {\n                leadingLineContent: ctx.leadingLineContent,\n                characterCountDelta: ctx.column - this._context.column\n            }, wordDistance, this._editor.getOption(118 /* EditorOption.suggest */), this._editor.getOption(112 /* EditorOption.snippetSuggestions */), fuzzySearchOptions, clipboardText);\n            // store containers so that they can be disposed later\n            this._completionDisposables.add(completions.disposable);\n            this._onNewContext(ctx);\n            // finally report telemetry about durations\n            this._reportDurationsTelemetry(completions.durations);\n            // report invalid completions by source\n            if (!this._envService.isBuilt || this._envService.isExtensionDevelopment) {\n                for (const item of completions.items) {\n                    if (item.isInvalid) {\n                        this._logService.warn(`[suggest] did IGNORE invalid completion item from ${item.provider._debugDisplayName}`, item.completion);\n                    }\n                }\n            }\n        }).catch(onUnexpectedError);\n    }\n    _reportDurationsTelemetry(durations) {\n        if (this._telemetryGate++ % 230 !== 0) {\n            return;\n        }\n        setTimeout(() => {\n            this._telemetryService.publicLog2('suggest.durations.json', { data: JSON.stringify(durations) });\n            this._logService.debug('suggest.durations.json', durations);\n        });\n    }\n    static createSuggestFilter(editor) {\n        // kind filter and snippet sort rules\n        const result = new Set();\n        // snippet setting\n        const snippetSuggestions = editor.getOption(112 /* EditorOption.snippetSuggestions */);\n        if (snippetSuggestions === 'none') {\n            result.add(27 /* CompletionItemKind.Snippet */);\n        }\n        // type setting\n        const suggestOptions = editor.getOption(118 /* EditorOption.suggest */);\n        if (!suggestOptions.showMethods) {\n            result.add(0 /* CompletionItemKind.Method */);\n        }\n        if (!suggestOptions.showFunctions) {\n            result.add(1 /* CompletionItemKind.Function */);\n        }\n        if (!suggestOptions.showConstructors) {\n            result.add(2 /* CompletionItemKind.Constructor */);\n        }\n        if (!suggestOptions.showFields) {\n            result.add(3 /* CompletionItemKind.Field */);\n        }\n        if (!suggestOptions.showVariables) {\n            result.add(4 /* CompletionItemKind.Variable */);\n        }\n        if (!suggestOptions.showClasses) {\n            result.add(5 /* CompletionItemKind.Class */);\n        }\n        if (!suggestOptions.showStructs) {\n            result.add(6 /* CompletionItemKind.Struct */);\n        }\n        if (!suggestOptions.showInterfaces) {\n            result.add(7 /* CompletionItemKind.Interface */);\n        }\n        if (!suggestOptions.showModules) {\n            result.add(8 /* CompletionItemKind.Module */);\n        }\n        if (!suggestOptions.showProperties) {\n            result.add(9 /* CompletionItemKind.Property */);\n        }\n        if (!suggestOptions.showEvents) {\n            result.add(10 /* CompletionItemKind.Event */);\n        }\n        if (!suggestOptions.showOperators) {\n            result.add(11 /* CompletionItemKind.Operator */);\n        }\n        if (!suggestOptions.showUnits) {\n            result.add(12 /* CompletionItemKind.Unit */);\n        }\n        if (!suggestOptions.showValues) {\n            result.add(13 /* CompletionItemKind.Value */);\n        }\n        if (!suggestOptions.showConstants) {\n            result.add(14 /* CompletionItemKind.Constant */);\n        }\n        if (!suggestOptions.showEnums) {\n            result.add(15 /* CompletionItemKind.Enum */);\n        }\n        if (!suggestOptions.showEnumMembers) {\n            result.add(16 /* CompletionItemKind.EnumMember */);\n        }\n        if (!suggestOptions.showKeywords) {\n            result.add(17 /* CompletionItemKind.Keyword */);\n        }\n        if (!suggestOptions.showWords) {\n            result.add(18 /* CompletionItemKind.Text */);\n        }\n        if (!suggestOptions.showColors) {\n            result.add(19 /* CompletionItemKind.Color */);\n        }\n        if (!suggestOptions.showFiles) {\n            result.add(20 /* CompletionItemKind.File */);\n        }\n        if (!suggestOptions.showReferences) {\n            result.add(21 /* CompletionItemKind.Reference */);\n        }\n        if (!suggestOptions.showColors) {\n            result.add(22 /* CompletionItemKind.Customcolor */);\n        }\n        if (!suggestOptions.showFolders) {\n            result.add(23 /* CompletionItemKind.Folder */);\n        }\n        if (!suggestOptions.showTypeParameters) {\n            result.add(24 /* CompletionItemKind.TypeParameter */);\n        }\n        if (!suggestOptions.showSnippets) {\n            result.add(27 /* CompletionItemKind.Snippet */);\n        }\n        if (!suggestOptions.showUsers) {\n            result.add(25 /* CompletionItemKind.User */);\n        }\n        if (!suggestOptions.showIssues) {\n            result.add(26 /* CompletionItemKind.Issue */);\n        }\n        return { itemKind: result, showDeprecated: suggestOptions.showDeprecated };\n    }\n    _onNewContext(ctx) {\n        if (!this._context) {\n            // happens when 24x7 IntelliSense is enabled and still in its delay\n            return;\n        }\n        if (ctx.lineNumber !== this._context.lineNumber) {\n            // e.g. happens when pressing Enter while IntelliSense is computed\n            this.cancel();\n            return;\n        }\n        if (getLeadingWhitespace(ctx.leadingLineContent) !== getLeadingWhitespace(this._context.leadingLineContent)) {\n            // cancel IntelliSense when line start changes\n            // happens when the current word gets outdented\n            this.cancel();\n            return;\n        }\n        if (ctx.column < this._context.column) {\n            // typed -> moved cursor LEFT -> retrigger if still on a word\n            if (ctx.leadingWord.word) {\n                this.trigger({ auto: this._context.triggerOptions.auto, retrigger: true });\n            }\n            else {\n                this.cancel();\n            }\n            return;\n        }\n        if (!this._completionModel) {\n            // happens when IntelliSense is not yet computed\n            return;\n        }\n        if (ctx.leadingWord.word.length !== 0 && ctx.leadingWord.startColumn > this._context.leadingWord.startColumn) {\n            // started a new word while IntelliSense shows -> retrigger but reuse all items that we currently have\n            const shouldAutoTrigger = LineContext.shouldAutoTrigger(this._editor);\n            if (shouldAutoTrigger && this._context) {\n                // shouldAutoTrigger forces tokenization, which can cause pending cursor change events to be emitted, which can cause\n                // suggestions to be cancelled, which causes `this._context` to be undefined\n                const map = this._completionModel.getItemsByProvider();\n                this.trigger({\n                    auto: this._context.triggerOptions.auto,\n                    retrigger: true,\n                    clipboardText: this._completionModel.clipboardText,\n                    completionOptions: { providerItemsToReuse: map }\n                });\n            }\n            return;\n        }\n        if (ctx.column > this._context.column && this._completionModel.getIncompleteProvider().size > 0 && ctx.leadingWord.word.length !== 0) {\n            // typed -> moved cursor RIGHT & incomple model & still on a word -> retrigger\n            const providerItemsToReuse = new Map();\n            const providerFilter = new Set();\n            for (const [provider, items] of this._completionModel.getItemsByProvider()) {\n                if (items.length > 0 && items[0].container.incomplete) {\n                    providerFilter.add(provider);\n                }\n                else {\n                    providerItemsToReuse.set(provider, items);\n                }\n            }\n            this.trigger({\n                auto: this._context.triggerOptions.auto,\n                triggerKind: 2 /* CompletionTriggerKind.TriggerForIncompleteCompletions */,\n                retrigger: true,\n                clipboardText: this._completionModel.clipboardText,\n                completionOptions: { providerFilter, providerItemsToReuse }\n            });\n        }\n        else {\n            // typed -> moved cursor RIGHT -> update UI\n            const oldLineContext = this._completionModel.lineContext;\n            let isFrozen = false;\n            this._completionModel.lineContext = {\n                leadingLineContent: ctx.leadingLineContent,\n                characterCountDelta: ctx.column - this._context.column\n            };\n            if (this._completionModel.items.length === 0) {\n                const shouldAutoTrigger = LineContext.shouldAutoTrigger(this._editor);\n                if (!this._context) {\n                    // shouldAutoTrigger forces tokenization, which can cause pending cursor change events to be emitted, which can cause\n                    // suggestions to be cancelled, which causes `this._context` to be undefined\n                    this.cancel();\n                    return;\n                }\n                if (shouldAutoTrigger && this._context.leadingWord.endColumn < ctx.leadingWord.startColumn) {\n                    // retrigger when heading into a new word\n                    this.trigger({ auto: this._context.triggerOptions.auto, retrigger: true });\n                    return;\n                }\n                if (!this._context.triggerOptions.auto) {\n                    // freeze when IntelliSense was manually requested\n                    this._completionModel.lineContext = oldLineContext;\n                    isFrozen = this._completionModel.items.length > 0;\n                    if (isFrozen && ctx.leadingWord.word.length === 0) {\n                        // there were results before but now there aren't\n                        // and also we are not on a word anymore -> cancel\n                        this.cancel();\n                        return;\n                    }\n                }\n                else {\n                    // nothing left\n                    this.cancel();\n                    return;\n                }\n            }\n            this._onDidSuggest.fire({\n                completionModel: this._completionModel,\n                triggerOptions: ctx.triggerOptions,\n                isFrozen,\n            });\n        }\n    }\n};\nSuggestModel = SuggestModel_1 = __decorate([\n    __param(1, IEditorWorkerService),\n    __param(2, IClipboardService),\n    __param(3, ITelemetryService),\n    __param(4, ILogService),\n    __param(5, IContextKeyService),\n    __param(6, IConfigurationService),\n    __param(7, ILanguageFeaturesService),\n    __param(8, IEnvironmentService)\n], SuggestModel);\nexport { SuggestModel };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { binarySearch, isFalsyOrEmpty } from '../../../../base/common/arrays.js';\nimport { Range } from '../../../common/core/range.js';\nimport { BracketSelectionRangeProvider } from '../../smartSelect/browser/bracketSelections.js';\nexport class WordDistance {\n    static async create(service, editor) {\n        if (!editor.getOption(118 /* EditorOption.suggest */).localityBonus) {\n            return WordDistance.None;\n        }\n        if (!editor.hasModel()) {\n            return WordDistance.None;\n        }\n        const model = editor.getModel();\n        const position = editor.getPosition();\n        if (!service.canComputeWordRanges(model.uri)) {\n            return WordDistance.None;\n        }\n        const [ranges] = await new BracketSelectionRangeProvider().provideSelectionRanges(model, [position]);\n        if (ranges.length === 0) {\n            return WordDistance.None;\n        }\n        const wordRanges = await service.computeWordRanges(model.uri, ranges[0].range);\n        if (!wordRanges) {\n            return WordDistance.None;\n        }\n        // remove current word\n        const wordUntilPos = model.getWordUntilPosition(position);\n        delete wordRanges[wordUntilPos.word];\n        return new class extends WordDistance {\n            distance(anchor, item) {\n                if (!position.equals(editor.getPosition())) {\n                    return 0;\n                }\n                if (item.kind === 17 /* CompletionItemKind.Keyword */) {\n                    return 2 << 20;\n                }\n                const word = typeof item.label === 'string' ? item.label : item.label.label;\n                const wordLines = wordRanges[word];\n                if (isFalsyOrEmpty(wordLines)) {\n                    return 2 << 20;\n                }\n                const idx = binarySearch(wordLines, Range.fromPositions(anchor), Range.compareRangesUsingStarts);\n                const bestWordRange = idx >= 0 ? wordLines[idx] : wordLines[Math.max(0, ~idx - 1)];\n                let blockDistance = ranges.length;\n                for (const range of ranges) {\n                    if (!Range.containsRange(range.range, bestWordRange)) {\n                        break;\n                    }\n                    blockDistance -= 1;\n                }\n                return blockDistance;\n            }\n        };\n    }\n}\nWordDistance.None = new class extends WordDistance {\n    distance() { return 0; }\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './symbolIcons.css';\nimport { localize } from '../../../../nls.js';\nimport { foreground, registerColor } from '../../../../platform/theme/common/colorRegistry.js';\nexport const SYMBOL_ICON_ARRAY_FOREGROUND = registerColor('symbolIcon.arrayForeground', {\n    dark: foreground,\n    light: foreground,\n    hcDark: foreground,\n    hcLight: foreground,\n}, localize('symbolIcon.arrayForeground', 'The foreground color for array symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_BOOLEAN_FOREGROUND = registerColor('symbolIcon.booleanForeground', {\n    dark: foreground,\n    light: foreground,\n    hcDark: foreground,\n    hcLight: foreground,\n}, localize('symbolIcon.booleanForeground', 'The foreground color for boolean symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_CLASS_FOREGROUND = registerColor('symbolIcon.classForeground', {\n    dark: '#EE9D28',\n    light: '#D67E00',\n    hcDark: '#EE9D28',\n    hcLight: '#D67E00'\n}, localize('symbolIcon.classForeground', 'The foreground color for class symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_COLOR_FOREGROUND = registerColor('symbolIcon.colorForeground', {\n    dark: foreground,\n    light: foreground,\n    hcDark: foreground,\n    hcLight: foreground\n}, localize('symbolIcon.colorForeground', 'The foreground color for color symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_CONSTANT_FOREGROUND = registerColor('symbolIcon.constantForeground', {\n    dark: foreground,\n    light: foreground,\n    hcDark: foreground,\n    hcLight: foreground\n}, localize('symbolIcon.constantForeground', 'The foreground color for constant symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_CONSTRUCTOR_FOREGROUND = registerColor('symbolIcon.constructorForeground', {\n    dark: '#B180D7',\n    light: '#652D90',\n    hcDark: '#B180D7',\n    hcLight: '#652D90'\n}, localize('symbolIcon.constructorForeground', 'The foreground color for constructor symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_ENUMERATOR_FOREGROUND = registerColor('symbolIcon.enumeratorForeground', {\n    dark: '#EE9D28',\n    light: '#D67E00',\n    hcDark: '#EE9D28',\n    hcLight: '#D67E00'\n}, localize('symbolIcon.enumeratorForeground', 'The foreground color for enumerator symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_ENUMERATOR_MEMBER_FOREGROUND = registerColor('symbolIcon.enumeratorMemberForeground', {\n    dark: '#75BEFF',\n    light: '#007ACC',\n    hcDark: '#75BEFF',\n    hcLight: '#007ACC'\n}, localize('symbolIcon.enumeratorMemberForeground', 'The foreground color for enumerator member symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_EVENT_FOREGROUND = registerColor('symbolIcon.eventForeground', {\n    dark: '#EE9D28',\n    light: '#D67E00',\n    hcDark: '#EE9D28',\n    hcLight: '#D67E00'\n}, localize('symbolIcon.eventForeground', 'The foreground color for event symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_FIELD_FOREGROUND = registerColor('symbolIcon.fieldForeground', {\n    dark: '#75BEFF',\n    light: '#007ACC',\n    hcDark: '#75BEFF',\n    hcLight: '#007ACC'\n}, localize('symbolIcon.fieldForeground', 'The foreground color for field symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_FILE_FOREGROUND = registerColor('symbolIcon.fileForeground', {\n    dark: foreground,\n    light: foreground,\n    hcDark: foreground,\n    hcLight: foreground\n}, localize('symbolIcon.fileForeground', 'The foreground color for file symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_FOLDER_FOREGROUND = registerColor('symbolIcon.folderForeground', {\n    dark: foreground,\n    light: foreground,\n    hcDark: foreground,\n    hcLight: foreground\n}, localize('symbolIcon.folderForeground', 'The foreground color for folder symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_FUNCTION_FOREGROUND = registerColor('symbolIcon.functionForeground', {\n    dark: '#B180D7',\n    light: '#652D90',\n    hcDark: '#B180D7',\n    hcLight: '#652D90'\n}, localize('symbolIcon.functionForeground', 'The foreground color for function symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_INTERFACE_FOREGROUND = registerColor('symbolIcon.interfaceForeground', {\n    dark: '#75BEFF',\n    light: '#007ACC',\n    hcDark: '#75BEFF',\n    hcLight: '#007ACC'\n}, localize('symbolIcon.interfaceForeground', 'The foreground color for interface symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_KEY_FOREGROUND = registerColor('symbolIcon.keyForeground', {\n    dark: foreground,\n    light: foreground,\n    hcDark: foreground,\n    hcLight: foreground\n}, localize('symbolIcon.keyForeground', 'The foreground color for key symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_KEYWORD_FOREGROUND = registerColor('symbolIcon.keywordForeground', {\n    dark: foreground,\n    light: foreground,\n    hcDark: foreground,\n    hcLight: foreground\n}, localize('symbolIcon.keywordForeground', 'The foreground color for keyword symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_METHOD_FOREGROUND = registerColor('symbolIcon.methodForeground', {\n    dark: '#B180D7',\n    light: '#652D90',\n    hcDark: '#B180D7',\n    hcLight: '#652D90'\n}, localize('symbolIcon.methodForeground', 'The foreground color for method symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_MODULE_FOREGROUND = registerColor('symbolIcon.moduleForeground', {\n    dark: foreground,\n    light: foreground,\n    hcDark: foreground,\n    hcLight: foreground\n}, localize('symbolIcon.moduleForeground', 'The foreground color for module symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_NAMESPACE_FOREGROUND = registerColor('symbolIcon.namespaceForeground', {\n    dark: foreground,\n    light: foreground,\n    hcDark: foreground,\n    hcLight: foreground\n}, localize('symbolIcon.namespaceForeground', 'The foreground color for namespace symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_NULL_FOREGROUND = registerColor('symbolIcon.nullForeground', {\n    dark: foreground,\n    light: foreground,\n    hcDark: foreground,\n    hcLight: foreground\n}, localize('symbolIcon.nullForeground', 'The foreground color for null symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_NUMBER_FOREGROUND = registerColor('symbolIcon.numberForeground', {\n    dark: foreground,\n    light: foreground,\n    hcDark: foreground,\n    hcLight: foreground\n}, localize('symbolIcon.numberForeground', 'The foreground color for number symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_OBJECT_FOREGROUND = registerColor('symbolIcon.objectForeground', {\n    dark: foreground,\n    light: foreground,\n    hcDark: foreground,\n    hcLight: foreground\n}, localize('symbolIcon.objectForeground', 'The foreground color for object symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_OPERATOR_FOREGROUND = registerColor('symbolIcon.operatorForeground', {\n    dark: foreground,\n    light: foreground,\n    hcDark: foreground,\n    hcLight: foreground\n}, localize('symbolIcon.operatorForeground', 'The foreground color for operator symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_PACKAGE_FOREGROUND = registerColor('symbolIcon.packageForeground', {\n    dark: foreground,\n    light: foreground,\n    hcDark: foreground,\n    hcLight: foreground\n}, localize('symbolIcon.packageForeground', 'The foreground color for package symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_PROPERTY_FOREGROUND = registerColor('symbolIcon.propertyForeground', {\n    dark: foreground,\n    light: foreground,\n    hcDark: foreground,\n    hcLight: foreground\n}, localize('symbolIcon.propertyForeground', 'The foreground color for property symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_REFERENCE_FOREGROUND = registerColor('symbolIcon.referenceForeground', {\n    dark: foreground,\n    light: foreground,\n    hcDark: foreground,\n    hcLight: foreground\n}, localize('symbolIcon.referenceForeground', 'The foreground color for reference symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_SNIPPET_FOREGROUND = registerColor('symbolIcon.snippetForeground', {\n    dark: foreground,\n    light: foreground,\n    hcDark: foreground,\n    hcLight: foreground\n}, localize('symbolIcon.snippetForeground', 'The foreground color for snippet symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_STRING_FOREGROUND = registerColor('symbolIcon.stringForeground', {\n    dark: foreground,\n    light: foreground,\n    hcDark: foreground,\n    hcLight: foreground\n}, localize('symbolIcon.stringForeground', 'The foreground color for string symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_STRUCT_FOREGROUND = registerColor('symbolIcon.structForeground', {\n    dark: foreground,\n    light: foreground,\n    hcDark: foreground,\n    hcLight: foreground,\n}, localize('symbolIcon.structForeground', 'The foreground color for struct symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_TEXT_FOREGROUND = registerColor('symbolIcon.textForeground', {\n    dark: foreground,\n    light: foreground,\n    hcDark: foreground,\n    hcLight: foreground\n}, localize('symbolIcon.textForeground', 'The foreground color for text symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_TYPEPARAMETER_FOREGROUND = registerColor('symbolIcon.typeParameterForeground', {\n    dark: foreground,\n    light: foreground,\n    hcDark: foreground,\n    hcLight: foreground\n}, localize('symbolIcon.typeParameterForeground', 'The foreground color for type parameter symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_UNIT_FOREGROUND = registerColor('symbolIcon.unitForeground', {\n    dark: foreground,\n    light: foreground,\n    hcDark: foreground,\n    hcLight: foreground\n}, localize('symbolIcon.unitForeground', 'The foreground color for unit symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\nexport const SYMBOL_ICON_VARIABLE_FOREGROUND = registerColor('symbolIcon.variableForeground', {\n    dark: '#75BEFF',\n    light: '#007ACC',\n    hcDark: '#75BEFF',\n    hcLight: '#007ACC',\n}, localize('symbolIcon.variableForeground', 'The foreground color for variable symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\n"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","SectionHeaderDetector","Disposable","constructor","editor","languageConfigurationService","editorWorkerService","super","this","decorations","createDecorationsCollection","options","createOptions","getOption","computePromise","currentOccurrences","_register","onDidChangeModel","e","stop","computeSectionHeaders","schedule","onDidChangeModelLanguage","onDidChange","_a","editorLanguageId","getModel","getLanguageId","affects","onDidChangeConfiguration","hasChanged","updateDecorations","onDidChangeModelContent","onDidChangeModelTokens","isScheduled","RunOnceScheduler","findSectionHeaders","minimap","hasModel","languageId","commentsConfiguration","getLanguageConfiguration","comments","foldingRules","markers","findMarkSectionHeaders","showMarkSectionHeaders","findRegionSectionHeaders","showRegionSectionHeaders","_b","model","isDisposed","isTooLargeForSyncing","modelVersionId","getVersionId","uri","then","sectionHeaders","filter","sectionHeader","shouldBeInComments","validRange","validateRange","range","tokens","tokenization","getLineTokens","startLineNumber","idx","findTokenIndexAtOffset","startColumn","tokenType","getStandardTokenType","oldDecorations","values","map","occurrence","decorationId","newDecorations","ModelDecorationOptions","createDynamic","description","stickiness","collapseOnReplaceEdit","color","undefined","position","sectionHeaderStyle","hasSeparatorLine","sectionHeaderText","text","decoration","changeDecorations","changeAccessor","deltaDecorations","len","cancel","dispose","clear","ID","ILanguageConfigurationService","IEditorWorkerService","registerEditorContribution","ModelSemanticColoring_1","DocumentSemanticTokensFeature","semanticTokensStylingService","modelService","themeService","configurationService","languageFeatureDebounceService","languageFeaturesService","_watchers","create","register","toString","ModelSemanticColoring","deregister","modelSemanticColoring","handleSettingOrThemeChange","getModels","curr","isSemanticColoringEnabled","forEach","onModelAdded","onModelRemoved","affectsConfiguration","SEMANTIC_HIGHLIGHTING_SETTING_ID","onDidColorThemeChange","watcher","ISemanticTokensStylingService","IModelService","IThemeService","IConfigurationService","ILanguageFeatureDebounceService","ILanguageFeaturesService","_semanticTokensStylingService","_isDisposed","_model","_provider","documentSemanticTokensProvider","_debounceInformation","for","min","REQUEST_MIN_DELAY","max","REQUEST_MAX_DELAY","_fetchDocumentSemanticTokens","_fetchDocumentSemanticTokensNow","_currentDocumentResponse","_currentDocumentRequestCancellationTokenSource","_documentProvidersChangeListeners","_providersChangedDuringRequest","onDidChangeContent","get","onDidChangeAttached","onDidChangeLanguage","_setDocumentSemanticTokens","bindDocumentChangeListeners","provider","all","push","_","hasDocumentSemanticTokensProvider","setSemanticTokens","isAttachedToEditor","cancellationTokenSource","CancellationTokenSource","lastProvider","lastResultId","resultId","request","getDocumentSemanticTokens","token","pendingChanges","contentChangeListener","sw","StopWatch","res","update","elapsed","styling","getStyling","err","errors","message","indexOf","_copy","src","srcOffset","dest","destOffset","Math","currentResponse","rescheduleIfNeeded","releaseDocumentSemanticTokens","isSemanticTokensEdits","edits","data","deltaLength","edit","deleteCount","srcData","destData","Uint32Array","srcLastStart","destLastStart","start","warnInvalidEditStart","copyCount","isSemanticTokens","SemanticTokensResponse","result","toMultilineTokens2","change","area","singleChange","changes","applyEdit","registerEditorFeature","ViewportSemanticTokensContribution","_themeService","_configurationService","_editor","documentRangeSemanticTokensProvider","_tokenizeViewport","_tokenizeViewportNow","_outstandingRequests","scheduleTokenizeViewport","onDidScrollChange","_cancelAll","_removeOutstandingRequest","req","splice","hasCompleteSemanticTokens","hasSomeSemanticTokens","hasDocumentRangeSemanticTokensProvider","visibleRanges","getVisibleRangesPlusViewportAboveBelow","concat","_requestRange","requestVersionId","createCancelablePromise","Promise","resolve","getDocumentRangeSemanticTokens","setPartialSemanticTokens","v","Array","isArray","DocumentSemanticTokensResult","error","registry","has","async","providers","groups","orderedGroups","getDocumentSemanticTokensProviders","results","provideDocumentSemanticTokens","DocumentRangeSemanticTokensResult","getDocumentRangeSemanticTokensProviders","provideDocumentRangeSemanticTokens","onUnexpectedExternalError","CommandsRegistry","registerCommand","accessor","_len","args","_key","assertType","URI","_getDocumentSemanticTokensProviderHighestGroup","getLegend","ICommandService","executeCommand","_len2","_key2","getFullModelRange","CancellationToken","None","buff","encodeSemanticTokensDto","id","type","_len3","_key3","Range","isIRange","console","warn","lift","_len4","_key4","setting","getValue","overrideIdentifier","resource","enabled","getColorTheme","semanticHighlighting","BracketSelectionRangeProvider","provideSelectionRanges","positions","bucket","ranges","Map","_bracketsRightYield","_bracketsLeftYield","round","pos","counts","t1","Date","now","_maxRounds","bracket","bracketPairs","findNextBracket","_maxDuration","setTimeout","bracketInfo","isOpeningBracket","bracketText","val","set","getOpeningBrackets","list","LinkedList","getEndPosition","size","findPrevBracket","closing","shift","delete","innerBracket","fromPositions","getStartPosition","outerBracket","_addBracketLeading","endLineNumber","startLine","column","getLineFirstNonWhitespaceColumn","Position","aboveLine","getLineLastNonWhitespaceColumn","WordSelectionRangeProvider","selectSubwords","_addInWordRanges","_addWordRanges","_addWhitespaceLine","obj","getWordAtPosition","word","offset","end","lastCh","ch","charCodeAt","isLowerAsciiLetter","isUpperAsciiLetter","lineNumber","endColumn","getLineLength","getLineMaxColumn","SmartSelectController_1","SelectionRanges","index","mov","fwd","equalsRange","SmartSelectController","getContribution","_languageFeaturesService","_ignoreSelection","_selectionListener","run","forward","selections","getSelections","_state","selectionRangeProvider","s","getPosition","arrays","a","b","equalsSelection","containsPosition","unshift","onDidChangeCursorPosition","state","newSelections","Selection","setSelections","AbstractSmartSelect","EditorAction","opts","_forward","_accessor","controller","registerCommandAlias","work","allRawRanges","allProviderRanges","oneProviderRanges","oneRawRanges","sort","isBefore","oneRanges","last","containsRange","selectLeadingAndTrailingWhitespace","oneRangesWithTrivia","prev","cur","rangeNoWhitespace","rangeFull","registerEditorAction","label","nls","alias","precondition","kbOpts","kbExpr","EditorContextKeys","editorTextFocus","primary","mac","secondary","weight","menuOpts","menuId","MenuId","MenubarSelectionMenu","group","title","comment","order","isUri","reference","ITextModelService","createModelReference","object","textEditorModel","SnippetController2_1","_defaultOptions","overwriteBefore","overwriteAfter","undoStopBefore","undoStopAfter","adjustWhitespace","clipboardText","overtypingCapturer","SnippetController2","_logService","contextKeyService","_languageConfigurationService","_snippetListener","DisposableStore","_modelVersionId","_inSnippet","InSnippetMode","bindTo","_hasNextTabstop","HasNextTabstop","_hasPrevTabstop","HasPrevTabstop","reset","_session","insert","template","_doInsert","_logInfo","pushStackElement","merge","getAlternativeVersionId","SnippetSession","hasChoice","_debugDisplayName","provideCompletionItems","equals","activeChoice","choice","getValueInRange","isAnyOfOptions","Boolean","find","o","value","suggestions","option","kind","insertText","sortText","repeat","filterText","command","localize","registration","isRegistered","disable","enable","completionProvider","language","pattern","fsPath","scheme","exclusive","add","_choiceCompletions","_updateState","isFlush","onDidChangeCursorSelection","hasPlaceholder","isAtLastPlaceholder","isSelectionWithinPlaceholders","isAtFirstPlaceholder","_handleChoice","_currentChoice","queueMicrotask","showSimpleSuggestions","finish","next","resetSelection","getSelection","isInSnippet","RawContextKey","ILogService","IContextKeyService","CommandCtor","EditorCommand","bindToContribution","registerEditorCommand","ContextKeyExpr","and","handler","ctrl","textInputFocus","Scanner","isDigitCharacter","isVariableCharacter","tokenText","substr","_table","isNaN","Marker","_children","appendChild","child","Text","parent","replace","others","children","newChildren","slice","_fixParent","rightMostDescendant","snippet","candidate","TextmateSnippet","reduce","clone","TransformableMarker","Placeholder","compareByIndex","isFinalTabstop","Choice","ret","transform","marker","Transform","regexp","RegExp","_this","didMatch","_replace","prototype","call","some","FormatString","elseValue","source","ignoreCase","global","shorthandName","ifValue","toLocaleUpperCase","toLocaleLowerCase","_toPascalCase","_toCamelCase","match","charAt","toUpperCase","join","toLowerCase","Variable","name","resolver","walk","visitor","stack","placeholderInfo","_placeholders","placeholders","found","fullLen","enclosingPlaceholders","placeholder","resolveVariables","SnippetParser","_scanner","_token","escape","guessNeedsClipboard","test","parse","insertFinalTabstop","enforceFinalTabstop","parseFragment","ensureFinalTabstop","_parse","placeholderDefaultValues","incompletePlaceholders","fillInIncompletePlaceholder","defaultValues","newChild","Set","p","_accept","_backTo","_until","nextToken","substring","_parseEscaped","_parseTabstopOrVariableName","_parseComplexPlaceholder","_parseComplexVariable","_parseAnything","Number","_parseTransform","_parseChoiceElement","variable","regexValue","regexOptions","escaped","_parseFormatString","complex","shorthand","freeze","CompositeSnippetVariableResolver","_delegates","delegate","SelectionBasedVariableResolver","_selection","_selectionIdx","_overtypingCapturer","isMultiline","info","getLastOvertypedInfo","multiline","line","getLineContent","lineLeadingWhitespace","getLeadingWhitespace","varLeadingWhitespace","splitLines","pop","whitespaceCommonLength","commonPrefixLength","m","newline","rest","positionLineNumber","positionColumn","String","ModelBasedVariableResolver","_labelService","path","lastIndexOf","getUriLabel","dirname","relative","noPrefix","ClipboardBasedVariableResolver","_readClipboardText","_selectionCount","_spread","lines","split","isFalsyOrWhitespace","CommentBasedVariableResolver","langId","getLanguageIdAtPosition","selectionStartLineNumber","selectionStartColumn","config","lineCommentToken","blockCommentStartToken","blockCommentEndToken","TimeBasedVariableResolver","_date","getFullYear","getMonth","valueOf","padStart","getDate","getHours","getMinutes","getSeconds","dayNames","getDay","dayNamesShort","monthNames","monthNamesShort","floor","getTime","rawTimeOffset","getTimezoneOffset","sign","hours","trunc","abs","hoursString","minutes","WorkspaceBasedVariableResolver","_workspaceService","workspaceIdentifier","toWorkspaceIdentifier","getWorkspace","isEmptyWorkspaceIdentifier","_resolveWorkspaceName","_resoveWorkspacePath","isSingleFolderWorkspaceIdentifier","filename","configPath","endsWith","WORKSPACE_EXTENSION","normalizeDriveLetter","folderpath","RandomBasedVariableResolver","random","generateUuid","SnippetSession_1","OneSnippet","_snippet","_snippetLineLeadingWhitespace","_offset","_nestingLevel","_placeholderGroups","groupBy","_placeholderGroupsIdx","initialize","textChange","newPosition","_placeholderDecorations","removeDecorations","_initDecorations","Error","placeholderOffset","placeholderLen","getPositionAt","_decor","inactiveFinal","inactive","handle","addDecoration","move","operations","getDecorationRange","currentValue","transformedValueLines","normalizeIndentation","EditOperation","getEOL","executeEdits","couldSkipThisPlaceholder","activePlaceholders","_hasPlaceholderBeenCollapsed","changeDecorationOptions","activeFinal","active","enclosingPlaceholder","isEmpty","isTrivialSnippet","computePossibleSelections","placeholdersWithEqualIndex","nested","assert","indexLastPlaceholder","nestedPlaceholder","removeDecoration","className","adjustIndentation","snippetTextString","prevChar","newValue","adjustSelection","selection","positionColumnBefore","positionColumnAfter","createWithDirection","getDirection","createEditsAndSnippetsFromSelections","snippets","workspaceService","invokeWithinContext","IWorkspaceContextService","modelBasedVariableResolver","ILabelService","readClipboardText","firstBeforeText","firstAfterText","firstLineFirstNonWhitespace","indexedSelections","compareRangesUsingStarts","extensionBefore","extensionAfter","snippetSelection","setStartPosition","setEndPosition","snippetLineLeadingWhitespace","identifier","major","minor","_isTracked","createEditsAndSnippetsFromEdits","snippetEdits","parser","lastRange","textRange","textNode","newNodes","snippetText","snippetFragmentText","_template","_options","_templateMerges","_snippets","_undoEdits","undoEdits","_move","revealRange","revealPositionInCenterIfOutsideViewport","oneSelection","allPossibleSelections","possibleSelections","array","StickyScrollWidgetState","startLineNumbers","endLineNumbers","lastLineRelativePosition","showEndForLine","other","_ttPolicy","createTrustedTypesPolicy","createHTML","STICKY_INDEX_ATTR","STICKY_IS_LINE_ATTR","STICKY_IS_FOLDING_ICON_ATTR","StickyScrollWidget","_foldingIconStore","_rootDomNode","document","createElement","_lineNumbersDomNode","_linesDomNodeScrollable","_linesDomNode","_lineHeight","_renderedStickyLines","_lineNumbers","_lastLineRelativePosition","_minContentWidthInPx","_isOnGlyphMargin","setAttribute","classList","toggle","EmbeddedCodeEditorWidget","updateScrollLeftPosition","style","left","scrollWithEditor","getScrollLeft","scrollLeftChanged","scrollWidthChanged","_updateWidgetWidth","onDidLayoutChange","lineNumbers","lineNumberCount","getRenderedStickyLine","stickyLine","getCurrentLines","setState","foldingModel","_rebuildFromLine","_previousState","isWidgetHeightZero","_isWidgetHeightZero","rebuildFromLine","_findLineToRebuildWidgetFrom","_renderRootNode","futureWidgetHeight","previousState","indexOfLinesAlreadyRendered","findIndex","includes","layoutInfo","getLayoutInfo","lineNumbersWidth","contentLeft","width","setProperty","getScrollWidth","verticalScrollbarWidth","_clearStickyLinesFromLine","clearFromLine","lineNumberDomNode","remove","lineDomNode","display","_useFoldingOpacityTransition","requireTransitions","_setFoldingIconsVisibility","allVisible","foldingIcon","setVisible","isCollapsed","_updateTopAndZIndexOfStickyLine","linesToRender","entries","_renderChildNode","_setFoldingHoverListeners","widgetHeight","height","marginLeft","l","scrollWidth","layoutOverlayWidget","dom","MOUSE_ENTER","MOUSE_LEAVE","viewModel","_getViewModel","viewLineNumber","coordinatesConverter","convertModelPositionToViewPosition","lineRenderingData","getViewLineRenderingData","lineNumberOption","actualInlineDecorations","LineDecoration","inlineDecorations","minColumn","maxColumn","renderLineInput","RenderLineInput","content","continuesWithWrappedLine","isBasicASCII","containsRTL","tabSize","startVisibleColumn","sb","StringBuilder","renderOutput","renderViewLine","newLine","build","lineHTMLNode","tabIndex","lineHeight","innerHTML","lineNumberHTMLNode","innerLineNumberHTML","renderType","innerText","paddingLeft","lineNumbersLeft","_renderFoldingIconForLine","domNode","applyFontInfo","renderedLine","RenderedStickyLine","characterMapping","isLastLine","zIndex","lastLineTop","intermediateLineTop","top","showFoldingControls","foldingRegions","regions","indexOfFoldingRegion","findRange","getStartLineNumber","StickyFoldingIcon","getEndLineNumber","getId","getDomNode","preference","getMinContentWidthInPx","focusLineWithIndex","focus","getEditorPositionFromNode","spanDomNode","renderedStickyLine","_getRenderedStickyLineFromChildDomNode","getColumnOfNodeOffset","getLineNumberFromChildDomNode","getLineIndexFromChildDomNode","lineIndex","_getAttributeValue","parseInt","isInStickyLine","isInFoldingIconDomNode","attribute","getAttribute","parentElement","foldingStartLine","foldingEndLine","dimension","ThemeIcon","asClassName","foldingCollapsedIcon","foldingExpandedIcon","visible","cursor","opacity","StickyRange","StickyElement","StickyModel","version","element","outlineProviderId","ModelProvider","Status","StickyModelProvider","onProviderUpdate","_modelProviders","_modelPromise","_updateScheduler","Delayer","_updateOperation","defaultModel","OUTLINE_MODEL","StickyModelFromCandidateOutlineProvider","FOLDING_PROVIDER_MODEL","StickyModelFromCandidateSyntaxFoldingProvider","INDENTATION_MODEL","StickyModelFromCandidateIndentationFoldingProvider","_cancelModelPromise","trigger","modelProvider","statusPromise","modelPromise","computeStickyModel","status","CANCELED","VALID","stickyModel","catch","onUnexpectedError","IInstantiationService","StickyModelCandidateProvider","_stickyModel","_invalid","INVALID","isCancellationRequested","isProviderValid","providerModelPromise","createModelFromProvider","providerModel","isModelValid","createStickyModel","OutlineModel","documentSymbolProvider","stickyOutlineElement","providerID","_stickyModelFromOutlineModel","textModel","outlineModel","preferredProvider","outlineElements","Iterable","first","OutlineGroup","outlineGroupOfModel","optimalOutlineGroup","tempID","maxTotalSumOfRanges","outlineGroup","totalSumRanges","_findSumOfRangesOfGroup","stickyChildren","outlineElementsArray","from","element1","element2","range1","symbol","range2","_comparator","outlineElement","_stickyModelFromOutlineElement","selectionRange","previousStartLine","subchild","child1","child2","outline","OutlineElement","StickyModelFromCandidateFoldingProvider","_foldingLimitReporter","RangesLimitReporter","foldingElement","_fromFoldingRegions","orderedStickyElements","parentIndex","getParentIndex","parentNode","IndentRangeProvider","compute","selectedProviders","FoldingController","getFoldingRangeProviders","SyntaxRangeProvider","StickyLineCandidate","nestingDepth","StickyLineCandidateProvider","_onDidChangeStickyScroll","Emitter","onDidChangeStickyScroll","event","_cts","_stickyModelProvider","_sessionStore","_updateSoon","readConfiguration","updateStickyModelProvider","fire","onDidChangeHiddenAreas","toDisposable","updateStickyModel","isTooLargeForTokenization","updateIndex","getCandidateStickyLinesIntersectingFromStickyModel","depth","lastStartLineNumber","lastLine","childrenStartLines","lowerBound","binarySearch","upperBound","childStartLine","childEndLine","getCandidateStickyLinesIntersecting","stickyLineCandidates","hiddenRanges","getHiddenAreas","hiddenRange","StickyScrollController_1","StickyScrollController","_contextMenuService","_instaService","_languageFeatureDebounceService","_contextKeyService","_foldingModel","_maxStickyLines","MAX_SAFE_INTEGER","_candidateDefinitionsLength","_focusedStickyElementIndex","_enabled","_focused","_positionRevealed","_onMouseDown","_endLineNumbers","_showEndForLine","_stickyScrollWidget","_stickyLineCandidateProvider","_widgetState","_onDidResize","_readConfiguration","stickyScrollDomNode","_readConfigurationChange","CONTEXT_MENU","_onContextMenu","_stickyScrollFocusedContextKey","stickyScrollFocused","_stickyScrollVisibleContextKey","stickyScrollVisible","focusTracker","onDidBlur","clientHeight","_disposeFocusStickyScrollStore","onDidFocus","_registerMouseListeners","MOUSE_DOWN","_focusDisposableStore","focusNext","_focusNav","focusPrevious","selectEditor","direction","goToFocused","_revealPosition","_reveaInEditor","revealPosition","_revealLineInCenterIfOutsideViewport","revealLineInCenterIfOutsideViewport","revealFunction","setSelection","sessionStore","gesture","ClickLinkGesture","extractLineNumberFromMouseEvent","getMouseEventTarget","mouseEvent","detail","mouseTargetElement","textElement","stickyScrollWidgetDomNode","CLICK","ctrlKey","altKey","metaKey","leftButton","shiftKey","_toggleFoldingRegionForLine","MOUSE_MOVE","currentEndForLineIndex","_renderStickyScroll","onMouseMoveOrRelevantKeyDown","_ref","_keyboardEvent","mouseTarget","hasTriggerModifier","_stickyRangeProjectedOnEditor","textDecoration","cancellationToken","currentHTMLChild","getDefinitionsAtPosition","definitionProvider","candidateDefinitions","childHTML","onCancel","onExecute","invokeFunction","goToDefinitionWithLocation","targetWindow","StandardMouseEvent","showContextMenu","StickyScrollContext","getAnchor","toggleCollapseState","MAX_VALUE","scrollTop","getTopForLineNumber","setScrollTop","removeOverlayWidget","addOverlayWidget","scrollTopChanged","_onTokensChange","_needsUpdate","stickyLineNumbers","stickyLineNumber","fromLineNumber","toLineNumber","theoreticalLines","stickyLineVersion","getFoldingModel","findScrollWidgetState","focusedStickyElementLineNumber","maxNumberStickyLines","maxLineCount","getScrollTop","arrayVisibleRanges","getVisibleRanges","fullVisibleRange","candidateRanges","topOfElementAtDepth","bottomOfElementAtDepth","bottomOfBeginningLine","getBottomForLineNumber","topOfEndLine","bottomOfEndLine","IContextMenuService","ToggleStickyScroll","Action2","localize2","mnemonicTitle","metadata","category","Categories","View","toggled","condition","menu","CommandPalette","MenubarAppearanceMenu","updateValue","FocusStickyScroll","EditorAction2","runEditorCommand","SelectNextStickyScrollLine","isEqualTo","keybinding","SelectPreviousStickyScrollLine","GoToStickyScrollLine","SelectEditor","registerAction2","LineContext","leadingLineContent","characterCountDelta","CompletionModel","items","lineContext","wordDistance","snippetSuggestions","fuzzyScoreOptions","FuzzyScoreOptions","default","_snippetCompareFn","_compareCompletionItems","_items","_column","_wordDistance","_refilterKind","_lineContext","_fuzzyScoreOptions","_compareCompletionItemsSnippetsUp","_compareCompletionItemsSnippetsDown","_filteredItems","_ensureCachedState","getItemsByProvider","_itemsByProvider","getIncompleteProvider","container","incomplete","stats","_stats","_createCachedState","labelLengths","wordLow","scoreFn","filterGraceful","fuzzyScore","fuzzyScoreGracefulAggressive","item","isInvalid","arr","editStart","wordLen","score","FuzzyScore","Default","wordPos","completion","filterTextLow","compareIgnoreCase","textLabel","anyScore","labelLow","distance","pLabelLen","quickSelect","Context","Visible","historyNavigationVisible","HasFocusedSuggestion","DetailsVisible","MultipleSuggestions","MakesTextEdit","AcceptSuggestionsOnEnter","HasInsertAndReplaceRange","InsertMode","CanResolve","suggestWidgetStatusbarMenu","CompletionItem","sortTextLow","extensionId","editInsertEnd","editReplaceEnd","spansMultipleLines","resolveCompletionItem","_resolveCache","_resolveDuration","isResolved","resolveDuration","sub","onCancellationRequested","assign","isCancellationError","finally","CompletionOptions","snippetSortOrder","kindFilter","providerFilter","providerItemsToReuse","showDeprecated","_snippetSuggestSupport","getSnippetSuggestSupport","CompletionItemModel","needsClipboard","durations","disposable","provideSuggestionItems","context","triggerKind","defaultReplaceRange","defaultRange","disposables","onCompletionList","_c","didAddResult","suggestion","tags","insertTextRules","isDisposable","providerName","elapsedProvider","duration","elapsedOverall","snippetCompletions","reuseItems","providerGroup","reject","CancellationError","snippetConfig","_snippetComparators","defaultComparator","triggerSuggest","triggerCharacter","maxItemsToResolve","isIPosition","ref","resolving","actualPosition","validatePosition","completions","QuickSuggestionsOptions","isAllOff","strings","isAllOn","valueFor","WordContextKey_1","WordContextKey","_ckAtEnd","AtEnd","_configListener","_update","checkForWordEnd","SuggestAlternatives_1","SuggestAlternatives","_index","_ckOtherSuggestions","OtherSuggestions","_listener","_acceptNext","_ignore","acceptNext","_moveIndex","newIndex","rounds","additionalTextEdits","CommitCharacterController","widget","accept","_disposables","onDidSuggest","completionModel","onDidCancel","onDidShow","_onItem","getFocusedItem","onDidHide","onWillType","_active","isFrozen","acceptCharacters","selected","isNonEmptyArray","commitCharacters","CharacterSet","OvertypingCapturer","suggestModel","_lastOvertyped","_locked","selectionsLength","willOvertype","getValueLengthInRange","_maxSelectionLength","onDidTrigger","StatusBarViewItem","MenuEntryActionViewItem","updateLabel","kb","_keybindingService","lookupKeybinding","_action","textContent","symbolPrintEnter","getLabel","SuggestWidgetStatus","_menuId","instantiationService","_menuService","_menuDisposables","$","actionViewItemProvider","action","MenuItemAction","createInstance","_leftActions","ActionBar","_rightActions","show","createMenu","renderMenu","right","actions","getActions","hide","IMenuService","canExpandCompletionItem","documentation","SuggestDetailsWidget","instaService","_onDidClose","onDidClose","_onDidChangeContents","onDidChangeContents","_renderDisposeable","_borderWidth","_size","_markdownRenderer","MarkdownRenderer","_body","_scrollbar","DomScrollableElement","alwaysConsumeMouseWheel","_header","_close","asCSSSelector","Codicon","close","_type","_docs","_configureFont","getOptions","fontInfo","fontFamily","getMassagedFontFamily","fontSize","fontWeight","fontSizePx","lineHeightPx","fontFeatureSettings","borderWidth","borderHeight","verticalPadding","horizontalPadding","renderLoading","layout","renderItem","explainMode","md","MarkdownString","appendCodeblock","cappedDetail","renderedContents","render","onDidRenderAsync","userSelect","onmousedown","preventDefault","stopPropagation","onclick","clearContents","contains","newSize","scanDomNode","scrollDown","much","scrollUp","scrollBottom","scrollHeight","pageDown","pageUp","SuggestDetailsOverlay","topLeftNow","sizeNow","allowEditorOverflow","_added","_preferAlignAtTop","_resizable","ResizableHTMLElement","enableSashes","deltaTop","deltaLeft","onDidWillResize","_topLeft","onDidResize","updateTopLeft","west","north","_applyTopLeft","done","_userSize","_anchorBox","_placeAtAnchor","sessionEnded","clearSashHoverState","placeAtAnchor","anchor","preferAlignAtTop","anchorBox","getBoundingClientRect","bodyBox","ownerDocument","body","defaultMinSize","defaultTop","eastPlacement","maxSizeTop","maxSizeBottom","with","fit","minSize","westPlacement","southPacement","placements","placement","bottom","alignAtTop","maxHeight","maxSize","editorDomNode","editorBoundingBox","topLeft","getAriaId","suggestMoreInfoIcon","registerIcon","chevronRight","_completionItemColor","extract","out","_regexStrict","_regexRelaxed","exec","ItemRenderer","_modelService","_languageService","_onDidToggleDetails","onDidToggleDetails","templateId","renderTemplate","root","icon","append","colorspan","main","iconContainer","iconLabel","IconLabel","supportHighlights","supportIcons","parametersLabel","qualifierLabel","detailsLabel","readMore","configureFont","letterSpacing","letterSpacingPx","renderElement","backgroundColor","labelOptions","labelEscapeNewLines","matches","createMatches","getFileIconTheme","hasFileIcons","labelClasses","getIconClasses","FileKind","FILE","detailClasses","extraClasses","hasFolderIcons","FOLDER","flat","asClassNameArray","CompletionItemKinds","toIcon","setLabel","stripNewLines","showInlineDetails","disposeTemplate","templateData","str","ILanguageService","SuggestWidget_1","registerColor","dark","editorWidgetBackground","light","hcDark","hcLight","editorWidgetBorder","editorSuggestWidgetForeground","editorForeground","quickInputListFocusForeground","quickInputListFocusIconForeground","editorSuggestWidgetSelectedBackground","quickInputListFocusBackground","listHighlightForeground","listFocusHighlightForeground","transparent","PersistedWidgetSize","_service","getEditorType","restore","raw","JSON","is","store","stringify","SuggestWidget","_storageService","_isAuto","_pendingLayout","MutableDisposable","_pendingShowDetails","_ignoreFocusEvents","_forceRenderingAbove","_explainMode","_showTimeout","TimeoutTimer","_onDidSelect","PauseableEmitter","_onDidFocus","_onDidHide","_onDidShow","onDidSelect","_onDetailsKeydown","onDetailsKeyDown","_contentWidget","SuggestContentWidget","_persistedSize","ResizeState","persistedSize","currentSize","persistHeight","persistWidth","lockPreference","_d","_resize","south","east","itemHeight","defaultSize","threshold","unlockPreference","_messageElement","_listElement","details","toggleDetails","_details","applyIconStyle","showIcons","renderer","_list","List","getHeight","_element","getTemplateId","useShadows","mouseSupport","multipleSelectionSupport","accessibilityProvider","getRole","getWidgetAriaLabel","getWidgetRole","getAriaLabel","_isDetailsVisible","docs","getListStyles","listInactiveFocusBackground","listInactiveFocusOutline","activeContrastBorder","_status","applyStatusBarStyle","showStatusBar","t","_onThemeChange","onMouseDown","_onListMouseDownOrTap","onTap","onDidChangeSelection","_onListSelection","onDidChangeFocus","_onListFocus","_onCursorSelectionChanged","_completionModel","_ctxSuggestWidgetVisible","SuggestContext","_ctxSuggestWidgetDetailsVisible","_ctxSuggestWidgetMultipleSuggestions","_ctxSuggestWidgetHasFocusedSuggestion","_onEditorMouseDown","_loadingTimeout","browserEvent","_select","elements","indexes","theme","isHighContrast","_currentSuggestionDetails","_focusedItem","setAriaOptions","activeDescendant","reveal","loading","disposableTimeout","showDetails","setFocus","_setState","_cappedHeight","LOADING_MESSAGE","_show","NO_SUGGESTIONS_MESSAGE","_layout","cancelAndSet","showTriggered","auto","delay","setPosition","showSuggestions","selectionIndex","isAuto","noFocus","visibleCount","pause","resume","focusSelected","selectNextPage","focusNextPage","selectNext","selectLast","focusLast","selectPreviousPage","focusPreviousPage","selectPrevious","selectFirst","focusFirst","getFocus","getFocusedElements","toggleDetailsFocus","_setDetailsVisible","_positionDetails","toggleExplainMode","resetPersistedSize","hideWidget","dim","minPersistedHeight","ceil","_afterRender","setPreference","maxWidth","preferredWidth","typicalHalfwidthCharacterWidth","fullHeight","statusBarHeight","contentHeight","minHeight","editorBox","cursorBox","getScrolledVisiblePosition","cursorBottom","maxHeightBelow","availableSpaceAbove","maxHeightAbove","capped","wanted","forceRenderingAboveRequiredSpace","preferredSize","clamp","getBoolean","forceRenderingAbove","stopForceRenderingAbove","IStorageService","_widget","suppressMouseDown","_preferenceLocked","_hidden","removeContentWidget","addContentWidget","layoutContentWidget","_position","_preference","beforeRender","afterRender","SuggestController_1","LineSuffix","_decorationOptions","getOffsetAt","_marker","delta","SuggestController","_memoryService","_commandService","_instantiationService","_telemetryService","_lineSuffix","_toDispose","_selectors","PriorityRegistry","priority","_onWillInsertSuggestItem","onWillInsertSuggestItem","SuggestModel","select","ctxInsertMode","insertMode","WindowIdleValue","getWindow","_insertSuggestion","commitCharacterController","ctxMakesTextEdit","ctxHasInsertAndReplace","ctxCanResolve","toKeyCodeChord","KeyCodeChord","platform","isModifierKey","_alternatives","shy","triggerOptions","selector","itemsOrderedByPriorityDesc","selectionMode","refilter","retrigger","onDidBlurEditorWidget","acceptSuggestionsOnEnter","updateFromConfig","acceptSuggestionOnEnter","flags","snippetController","modelVersionNow","tasks","cts","pushUndoStop","getOverwriteInfo","memorize","_commandExectionDuration","_additionalEditsAppliedAsync","scrollState","StableEditorScrollState","capture","columnDelta","startColumnDelta","endColumnDelta","replaceMove","restoreRelativeVerticalPositionOfCursor","docListener","thisPosition","oldFlags","didType","typeListener","applied","trace","TriggerSuggestAction","canUndo","undo","_alertCompletionItem","_reportSuggestionAcceptedTelemetry","itemResolved","commandExectionDuration","additionalEditsAppliedAsync","publicLog2","providerId","basenameHash","hash","basename","fileExtension","extname","resolveInfo","commandDuration","additionalEditsAsync","toggleMode","msg","alert","onlyFrom","noFilter","completionOptions","triggerSuggestAndAcceptBest","arg","positionNow","fallback","makesTextEdit","Event","once","listener","any","_ref2","acceptSelectedSuggestion","keepAlternativeSuggestions","alternativeOverwriteConfig","acceptNextSuggestion","acceptPrevSuggestion","cancelSuggestWidget","focusSuggestion","selectNextSuggestion","selectNextPageSuggestion","selectLastSuggestion","selectPrevSuggestion","selectPrevPageSuggestion","selectFirstSuggestion","toggleSuggestionDetails","toggleSuggestionFocus","resetWidgetSize","isInitialized","registerSelector","ISuggestMemoryService","ITelemetryService","prioritySelector","s1","s2","writable","hasCompletionItemProvider","toNegated","SuggestCommand","x","when","or","negate","isObject","SuggestInlineCompletion","InlineCompletionResults","RefCountedDisposable","_suggestMemoryService","canBeReused","selectedIndex","second","resolveCount","SuggestInlineCompletions","_languageFeatureService","_clipboardService","_editorService","_store","inlineCompletionsProvider","provideInlineCompletions","selectedSuggestionInfo","listCodeEditors","tokenizeIfCheap","lineTokens","triggerCharacterInfo","wordInfo","_getTriggerCharacterInfo","getWordUntilPosition","leadingLineContents","_lastResult","newLineContext","acquire","createSuggestFilter","itemKind","readText","WordDistance","boostFullMatch","firstMatchCanBeWeak","handleItemDidShow","_completions","freeInlineCompletions","release","triggerCharacters","IClipboardService","ICodeEditorService","SuggestMemoryService_1","Memory","topScore","preselect","NoMemory","toJSON","fromJSON","SuggestMemoryService","_configService","_persistSoon","_saveState","onWillSaveState","reason","WillSaveStateReason","SHUTDOWN","_withStrategy","mode","_strategy","ctor","_strategyCtors","scope","_storagePrefix","_trie","TernarySearchTree","forStrings","_seq","touch","findSubstr","fromString","_cache","LRUCache","lineSuffix","indexPreselect","indexRecency","seq","peek","createDecorator","registerSingleton","SuggestModel_1","shouldAutoTrigger","leadingWord","_editorWorkerService","_envService","_triggerCharacterListener","_triggerQuickSuggest","_triggerState","_completionDisposables","_onDidCancel","_onDidTrigger","_onDidSuggest","_telemetryGate","_currentSelection","_updateTriggerCharacters","_updateActiveSuggestSession","editorIsComposing","onDidCompositionStart","onDidCompositionEnd","_onCompositionEnd","_onCursorChange","_refilterCompletionItems","supportsByTriggerCharacter","support","checkTriggerCharacter","getContextKeyValue","suppressSuggestions","InlineCompletionContextKeys","canShowSuggestOnTriggerCharacters","lastChar","isLowSurrogate","isHighSurrogate","supports","onDidType","_requestToken","_context","prevSelection","isBeforeOrEqual","_doTriggerQuickSuggest","snippetsPreventQuickSuggestions","hasWidgetFocus","inlineSuggestionVisible","canShowQuickSuggest","ctx","_onNewContext","_e","_f","suggestCtx","itemKindFilter","fuzzySearchOptions","matchOnWordStartOnly","_reportDurationsTelemetry","isBuilt","isExtensionDevelopment","debug","suggestOptions","showMethods","showFunctions","showConstructors","showFields","showVariables","showClasses","showStructs","showInterfaces","showModules","showProperties","showEvents","showOperators","showUnits","showValues","showConstants","showEnums","showEnumMembers","showKeywords","showWords","showColors","showFiles","showReferences","showFolders","showTypeParameters","showSnippets","showUsers","showIssues","oldLineContext","IEnvironmentService","service","localityBonus","canComputeWordRanges","wordRanges","computeWordRanges","wordUntilPos","wordLines","isFalsyOrEmpty","bestWordRange","blockDistance","foreground"],"sourceRoot":""}