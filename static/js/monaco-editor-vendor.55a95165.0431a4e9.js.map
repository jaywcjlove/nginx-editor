{"version":3,"file":"static/js/monaco-editor-vendor.55a95165.0431a4e9.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/editor/browser/view/renderingContext.js","../node_modules/monaco-editor/esm/vs/editor/browser/view/viewController.js","../node_modules/monaco-editor/esm/vs/editor/browser/view/viewLayer.js","../node_modules/monaco-editor/esm/vs/editor/browser/view/viewOverlays.js","../node_modules/monaco-editor/esm/vs/editor/browser/view/viewPart.js","../node_modules/monaco-editor/esm/vs/editor/browser/view/viewUserInputEvents.js","../node_modules/monaco-editor/esm/vs/editor/browser/widget/codeEditorWidget.js","../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffReview.js","../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditorWidget.js","../node_modules/monaco-editor/esm/vs/editor/browser/widget/inlineDiffMargin.js","../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffNavigator.js","../node_modules/monaco-editor/esm/vs/editor/browser/widget/embeddedCodeEditorWidget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class RestrictedRenderingContext {\n    constructor(viewLayout, viewportData) {\n        this._restrictedRenderingContextBrand = undefined;\n        this._viewLayout = viewLayout;\n        this.viewportData = viewportData;\n        this.scrollWidth = this._viewLayout.getScrollWidth();\n        this.scrollHeight = this._viewLayout.getScrollHeight();\n        this.visibleRange = this.viewportData.visibleRange;\n        this.bigNumbersDelta = this.viewportData.bigNumbersDelta;\n        const vInfo = this._viewLayout.getCurrentViewport();\n        this.scrollTop = vInfo.top;\n        this.scrollLeft = vInfo.left;\n        this.viewportWidth = vInfo.width;\n        this.viewportHeight = vInfo.height;\n    }\n    getScrolledTopFromAbsoluteTop(absoluteTop) {\n        return absoluteTop - this.scrollTop;\n    }\n    getVerticalOffsetForLineNumber(lineNumber) {\n        return this._viewLayout.getVerticalOffsetForLineNumber(lineNumber);\n    }\n    getDecorationsInViewport() {\n        return this.viewportData.getDecorationsInViewport();\n    }\n}\nexport class RenderingContext extends RestrictedRenderingContext {\n    constructor(viewLayout, viewportData, viewLines) {\n        super(viewLayout, viewportData);\n        this._renderingContextBrand = undefined;\n        this._viewLines = viewLines;\n    }\n    linesVisibleRangesForRange(range, includeNewLines) {\n        return this._viewLines.linesVisibleRangesForRange(range, includeNewLines);\n    }\n    visibleRangeForPosition(position) {\n        return this._viewLines.visibleRangeForPosition(position);\n    }\n}\nexport class LineVisibleRanges {\n    constructor(outsideRenderedLine, lineNumber, ranges) {\n        this.outsideRenderedLine = outsideRenderedLine;\n        this.lineNumber = lineNumber;\n        this.ranges = ranges;\n    }\n}\nexport class HorizontalRange {\n    constructor(left, width) {\n        this._horizontalRangeBrand = undefined;\n        this.left = Math.round(left);\n        this.width = Math.round(width);\n    }\n    static from(ranges) {\n        const result = new Array(ranges.length);\n        for (let i = 0, len = ranges.length; i < len; i++) {\n            const range = ranges[i];\n            result[i] = new HorizontalRange(range.left, range.width);\n        }\n        return result;\n    }\n    toString() {\n        return `[${this.left},${this.width}]`;\n    }\n}\nexport class FloatHorizontalRange {\n    constructor(left, width) {\n        this._floatHorizontalRangeBrand = undefined;\n        this.left = left;\n        this.width = width;\n    }\n    toString() {\n        return `[${this.left},${this.width}]`;\n    }\n    static compare(a, b) {\n        return a.left - b.left;\n    }\n}\nexport class HorizontalPosition {\n    constructor(outsideRenderedLine, left) {\n        this.outsideRenderedLine = outsideRenderedLine;\n        this.originalLeft = left;\n        this.left = Math.round(this.originalLeft);\n    }\n}\nexport class VisibleRanges {\n    constructor(outsideRenderedLine, ranges) {\n        this.outsideRenderedLine = outsideRenderedLine;\n        this.ranges = ranges;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CoreNavigationCommands } from '../coreCommands.js';\nimport { Position } from '../../common/core/position.js';\nimport * as platform from '../../../base/common/platform.js';\nexport class ViewController {\n    constructor(configuration, viewModel, userInputEvents, commandDelegate) {\n        this.configuration = configuration;\n        this.viewModel = viewModel;\n        this.userInputEvents = userInputEvents;\n        this.commandDelegate = commandDelegate;\n    }\n    paste(text, pasteOnNewLine, multicursorText, mode) {\n        this.commandDelegate.paste(text, pasteOnNewLine, multicursorText, mode);\n    }\n    type(text) {\n        this.commandDelegate.type(text);\n    }\n    compositionType(text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) {\n        this.commandDelegate.compositionType(text, replacePrevCharCnt, replaceNextCharCnt, positionDelta);\n    }\n    compositionStart() {\n        this.commandDelegate.startComposition();\n    }\n    compositionEnd() {\n        this.commandDelegate.endComposition();\n    }\n    cut() {\n        this.commandDelegate.cut();\n    }\n    setSelection(modelSelection) {\n        CoreNavigationCommands.SetSelection.runCoreEditorCommand(this.viewModel, {\n            source: 'keyboard',\n            selection: modelSelection\n        });\n    }\n    _validateViewColumn(viewPosition) {\n        const minColumn = this.viewModel.getLineMinColumn(viewPosition.lineNumber);\n        if (viewPosition.column < minColumn) {\n            return new Position(viewPosition.lineNumber, minColumn);\n        }\n        return viewPosition;\n    }\n    _hasMulticursorModifier(data) {\n        switch (this.configuration.options.get(72 /* EditorOption.multiCursorModifier */)) {\n            case 'altKey':\n                return data.altKey;\n            case 'ctrlKey':\n                return data.ctrlKey;\n            case 'metaKey':\n                return data.metaKey;\n            default:\n                return false;\n        }\n    }\n    _hasNonMulticursorModifier(data) {\n        switch (this.configuration.options.get(72 /* EditorOption.multiCursorModifier */)) {\n            case 'altKey':\n                return data.ctrlKey || data.metaKey;\n            case 'ctrlKey':\n                return data.altKey || data.metaKey;\n            case 'metaKey':\n                return data.ctrlKey || data.altKey;\n            default:\n                return false;\n        }\n    }\n    dispatchMouse(data) {\n        const options = this.configuration.options;\n        const selectionClipboardIsOn = (platform.isLinux && options.get(98 /* EditorOption.selectionClipboard */));\n        const columnSelection = options.get(18 /* EditorOption.columnSelection */);\n        if (data.middleButton && !selectionClipboardIsOn) {\n            this._columnSelect(data.position, data.mouseColumn, data.inSelectionMode);\n        }\n        else if (data.startedOnLineNumbers) {\n            // If the dragging started on the gutter, then have operations work on the entire line\n            if (this._hasMulticursorModifier(data)) {\n                if (data.inSelectionMode) {\n                    this._lastCursorLineSelect(data.position);\n                }\n                else {\n                    this._createCursor(data.position, true);\n                }\n            }\n            else {\n                if (data.inSelectionMode) {\n                    this._lineSelectDrag(data.position);\n                }\n                else {\n                    this._lineSelect(data.position);\n                }\n            }\n        }\n        else if (data.mouseDownCount >= 4) {\n            this._selectAll();\n        }\n        else if (data.mouseDownCount === 3) {\n            if (this._hasMulticursorModifier(data)) {\n                if (data.inSelectionMode) {\n                    this._lastCursorLineSelectDrag(data.position);\n                }\n                else {\n                    this._lastCursorLineSelect(data.position);\n                }\n            }\n            else {\n                if (data.inSelectionMode) {\n                    this._lineSelectDrag(data.position);\n                }\n                else {\n                    this._lineSelect(data.position);\n                }\n            }\n        }\n        else if (data.mouseDownCount === 2) {\n            if (!data.onInjectedText) {\n                if (this._hasMulticursorModifier(data)) {\n                    this._lastCursorWordSelect(data.position);\n                }\n                else {\n                    if (data.inSelectionMode) {\n                        this._wordSelectDrag(data.position);\n                    }\n                    else {\n                        this._wordSelect(data.position);\n                    }\n                }\n            }\n        }\n        else {\n            if (this._hasMulticursorModifier(data)) {\n                if (!this._hasNonMulticursorModifier(data)) {\n                    if (data.shiftKey) {\n                        this._columnSelect(data.position, data.mouseColumn, true);\n                    }\n                    else {\n                        // Do multi-cursor operations only when purely alt is pressed\n                        if (data.inSelectionMode) {\n                            this._lastCursorMoveToSelect(data.position);\n                        }\n                        else {\n                            this._createCursor(data.position, false);\n                        }\n                    }\n                }\n            }\n            else {\n                if (data.inSelectionMode) {\n                    if (data.altKey) {\n                        this._columnSelect(data.position, data.mouseColumn, true);\n                    }\n                    else {\n                        if (columnSelection) {\n                            this._columnSelect(data.position, data.mouseColumn, true);\n                        }\n                        else {\n                            this._moveToSelect(data.position);\n                        }\n                    }\n                }\n                else {\n                    this.moveTo(data.position);\n                }\n            }\n        }\n    }\n    _usualArgs(viewPosition) {\n        viewPosition = this._validateViewColumn(viewPosition);\n        return {\n            source: 'mouse',\n            position: this._convertViewToModelPosition(viewPosition),\n            viewPosition: viewPosition\n        };\n    }\n    moveTo(viewPosition) {\n        CoreNavigationCommands.MoveTo.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n    }\n    _moveToSelect(viewPosition) {\n        CoreNavigationCommands.MoveToSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n    }\n    _columnSelect(viewPosition, mouseColumn, doColumnSelect) {\n        viewPosition = this._validateViewColumn(viewPosition);\n        CoreNavigationCommands.ColumnSelect.runCoreEditorCommand(this.viewModel, {\n            source: 'mouse',\n            position: this._convertViewToModelPosition(viewPosition),\n            viewPosition: viewPosition,\n            mouseColumn: mouseColumn,\n            doColumnSelect: doColumnSelect\n        });\n    }\n    _createCursor(viewPosition, wholeLine) {\n        viewPosition = this._validateViewColumn(viewPosition);\n        CoreNavigationCommands.CreateCursor.runCoreEditorCommand(this.viewModel, {\n            source: 'mouse',\n            position: this._convertViewToModelPosition(viewPosition),\n            viewPosition: viewPosition,\n            wholeLine: wholeLine\n        });\n    }\n    _lastCursorMoveToSelect(viewPosition) {\n        CoreNavigationCommands.LastCursorMoveToSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n    }\n    _wordSelect(viewPosition) {\n        CoreNavigationCommands.WordSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n    }\n    _wordSelectDrag(viewPosition) {\n        CoreNavigationCommands.WordSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n    }\n    _lastCursorWordSelect(viewPosition) {\n        CoreNavigationCommands.LastCursorWordSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n    }\n    _lineSelect(viewPosition) {\n        CoreNavigationCommands.LineSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n    }\n    _lineSelectDrag(viewPosition) {\n        CoreNavigationCommands.LineSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n    }\n    _lastCursorLineSelect(viewPosition) {\n        CoreNavigationCommands.LastCursorLineSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n    }\n    _lastCursorLineSelectDrag(viewPosition) {\n        CoreNavigationCommands.LastCursorLineSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition));\n    }\n    _selectAll() {\n        CoreNavigationCommands.SelectAll.runCoreEditorCommand(this.viewModel, { source: 'mouse' });\n    }\n    // ----------------------\n    _convertViewToModelPosition(viewPosition) {\n        return this.viewModel.coordinatesConverter.convertViewPositionToModelPosition(viewPosition);\n    }\n    emitKeyDown(e) {\n        this.userInputEvents.emitKeyDown(e);\n    }\n    emitKeyUp(e) {\n        this.userInputEvents.emitKeyUp(e);\n    }\n    emitContextMenu(e) {\n        this.userInputEvents.emitContextMenu(e);\n    }\n    emitMouseMove(e) {\n        this.userInputEvents.emitMouseMove(e);\n    }\n    emitMouseLeave(e) {\n        this.userInputEvents.emitMouseLeave(e);\n    }\n    emitMouseUp(e) {\n        this.userInputEvents.emitMouseUp(e);\n    }\n    emitMouseDown(e) {\n        this.userInputEvents.emitMouseDown(e);\n    }\n    emitMouseDrag(e) {\n        this.userInputEvents.emitMouseDrag(e);\n    }\n    emitMouseDrop(e) {\n        this.userInputEvents.emitMouseDrop(e);\n    }\n    emitMouseDropCanceled() {\n        this.userInputEvents.emitMouseDropCanceled();\n    }\n    emitMouseWheel(e) {\n        this.userInputEvents.emitMouseWheel(e);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { createStringBuilder } from '../../common/core/stringBuilder.js';\nexport class RenderedLinesCollection {\n    constructor(createLine) {\n        this._createLine = createLine;\n        this._set(1, []);\n    }\n    flush() {\n        this._set(1, []);\n    }\n    _set(rendLineNumberStart, lines) {\n        this._lines = lines;\n        this._rendLineNumberStart = rendLineNumberStart;\n    }\n    _get() {\n        return {\n            rendLineNumberStart: this._rendLineNumberStart,\n            lines: this._lines\n        };\n    }\n    /**\n     * @returns Inclusive line number that is inside this collection\n     */\n    getStartLineNumber() {\n        return this._rendLineNumberStart;\n    }\n    /**\n     * @returns Inclusive line number that is inside this collection\n     */\n    getEndLineNumber() {\n        return this._rendLineNumberStart + this._lines.length - 1;\n    }\n    getCount() {\n        return this._lines.length;\n    }\n    getLine(lineNumber) {\n        const lineIndex = lineNumber - this._rendLineNumberStart;\n        if (lineIndex < 0 || lineIndex >= this._lines.length) {\n            throw new Error('Illegal value for lineNumber');\n        }\n        return this._lines[lineIndex];\n    }\n    /**\n     * @returns Lines that were removed from this collection\n     */\n    onLinesDeleted(deleteFromLineNumber, deleteToLineNumber) {\n        if (this.getCount() === 0) {\n            // no lines\n            return null;\n        }\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        if (deleteToLineNumber < startLineNumber) {\n            // deleting above the viewport\n            const deleteCnt = deleteToLineNumber - deleteFromLineNumber + 1;\n            this._rendLineNumberStart -= deleteCnt;\n            return null;\n        }\n        if (deleteFromLineNumber > endLineNumber) {\n            // deleted below the viewport\n            return null;\n        }\n        // Record what needs to be deleted\n        let deleteStartIndex = 0;\n        let deleteCount = 0;\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - this._rendLineNumberStart;\n            if (deleteFromLineNumber <= lineNumber && lineNumber <= deleteToLineNumber) {\n                // this is a line to be deleted\n                if (deleteCount === 0) {\n                    // this is the first line to be deleted\n                    deleteStartIndex = lineIndex;\n                    deleteCount = 1;\n                }\n                else {\n                    deleteCount++;\n                }\n            }\n        }\n        // Adjust this._rendLineNumberStart for lines deleted above\n        if (deleteFromLineNumber < startLineNumber) {\n            // Something was deleted above\n            let deleteAboveCount = 0;\n            if (deleteToLineNumber < startLineNumber) {\n                // the entire deleted lines are above\n                deleteAboveCount = deleteToLineNumber - deleteFromLineNumber + 1;\n            }\n            else {\n                deleteAboveCount = startLineNumber - deleteFromLineNumber;\n            }\n            this._rendLineNumberStart -= deleteAboveCount;\n        }\n        const deleted = this._lines.splice(deleteStartIndex, deleteCount);\n        return deleted;\n    }\n    onLinesChanged(changeFromLineNumber, changeCount) {\n        const changeToLineNumber = changeFromLineNumber + changeCount - 1;\n        if (this.getCount() === 0) {\n            // no lines\n            return false;\n        }\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        let someoneNotified = false;\n        for (let changedLineNumber = changeFromLineNumber; changedLineNumber <= changeToLineNumber; changedLineNumber++) {\n            if (changedLineNumber >= startLineNumber && changedLineNumber <= endLineNumber) {\n                // Notify the line\n                this._lines[changedLineNumber - this._rendLineNumberStart].onContentChanged();\n                someoneNotified = true;\n            }\n        }\n        return someoneNotified;\n    }\n    onLinesInserted(insertFromLineNumber, insertToLineNumber) {\n        if (this.getCount() === 0) {\n            // no lines\n            return null;\n        }\n        const insertCnt = insertToLineNumber - insertFromLineNumber + 1;\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        if (insertFromLineNumber <= startLineNumber) {\n            // inserting above the viewport\n            this._rendLineNumberStart += insertCnt;\n            return null;\n        }\n        if (insertFromLineNumber > endLineNumber) {\n            // inserting below the viewport\n            return null;\n        }\n        if (insertCnt + insertFromLineNumber > endLineNumber) {\n            // insert inside the viewport in such a way that all remaining lines are pushed outside\n            const deleted = this._lines.splice(insertFromLineNumber - this._rendLineNumberStart, endLineNumber - insertFromLineNumber + 1);\n            return deleted;\n        }\n        // insert inside the viewport, push out some lines, but not all remaining lines\n        const newLines = [];\n        for (let i = 0; i < insertCnt; i++) {\n            newLines[i] = this._createLine();\n        }\n        const insertIndex = insertFromLineNumber - this._rendLineNumberStart;\n        const beforeLines = this._lines.slice(0, insertIndex);\n        const afterLines = this._lines.slice(insertIndex, this._lines.length - insertCnt);\n        const deletedLines = this._lines.slice(this._lines.length - insertCnt, this._lines.length);\n        this._lines = beforeLines.concat(newLines).concat(afterLines);\n        return deletedLines;\n    }\n    onTokensChanged(ranges) {\n        if (this.getCount() === 0) {\n            // no lines\n            return false;\n        }\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        let notifiedSomeone = false;\n        for (let i = 0, len = ranges.length; i < len; i++) {\n            const rng = ranges[i];\n            if (rng.toLineNumber < startLineNumber || rng.fromLineNumber > endLineNumber) {\n                // range outside viewport\n                continue;\n            }\n            const from = Math.max(startLineNumber, rng.fromLineNumber);\n            const to = Math.min(endLineNumber, rng.toLineNumber);\n            for (let lineNumber = from; lineNumber <= to; lineNumber++) {\n                const lineIndex = lineNumber - this._rendLineNumberStart;\n                this._lines[lineIndex].onTokensChanged();\n                notifiedSomeone = true;\n            }\n        }\n        return notifiedSomeone;\n    }\n}\nexport class VisibleLinesCollection {\n    constructor(host) {\n        this._host = host;\n        this.domNode = this._createDomNode();\n        this._linesCollection = new RenderedLinesCollection(() => this._host.createVisibleLine());\n    }\n    _createDomNode() {\n        const domNode = createFastDomNode(document.createElement('div'));\n        domNode.setClassName('view-layer');\n        domNode.setPosition('absolute');\n        domNode.domNode.setAttribute('role', 'presentation');\n        domNode.domNode.setAttribute('aria-hidden', 'true');\n        return domNode;\n    }\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        if (e.hasChanged(133 /* EditorOption.layoutInfo */)) {\n            return true;\n        }\n        return false;\n    }\n    onFlushed(e) {\n        this._linesCollection.flush();\n        // No need to clear the dom node because a full .innerHTML will occur in ViewLayerRenderer._render\n        return true;\n    }\n    onLinesChanged(e) {\n        return this._linesCollection.onLinesChanged(e.fromLineNumber, e.count);\n    }\n    onLinesDeleted(e) {\n        const deleted = this._linesCollection.onLinesDeleted(e.fromLineNumber, e.toLineNumber);\n        if (deleted) {\n            // Remove from DOM\n            for (let i = 0, len = deleted.length; i < len; i++) {\n                const lineDomNode = deleted[i].getDomNode();\n                if (lineDomNode) {\n                    this.domNode.domNode.removeChild(lineDomNode);\n                }\n            }\n        }\n        return true;\n    }\n    onLinesInserted(e) {\n        const deleted = this._linesCollection.onLinesInserted(e.fromLineNumber, e.toLineNumber);\n        if (deleted) {\n            // Remove from DOM\n            for (let i = 0, len = deleted.length; i < len; i++) {\n                const lineDomNode = deleted[i].getDomNode();\n                if (lineDomNode) {\n                    this.domNode.domNode.removeChild(lineDomNode);\n                }\n            }\n        }\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onTokensChanged(e) {\n        return this._linesCollection.onTokensChanged(e.ranges);\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // ---- end view event handlers\n    getStartLineNumber() {\n        return this._linesCollection.getStartLineNumber();\n    }\n    getEndLineNumber() {\n        return this._linesCollection.getEndLineNumber();\n    }\n    getVisibleLine(lineNumber) {\n        return this._linesCollection.getLine(lineNumber);\n    }\n    renderLines(viewportData) {\n        const inp = this._linesCollection._get();\n        const renderer = new ViewLayerRenderer(this.domNode.domNode, this._host, viewportData);\n        const ctx = {\n            rendLineNumberStart: inp.rendLineNumberStart,\n            lines: inp.lines,\n            linesLength: inp.lines.length\n        };\n        // Decide if this render will do a single update (single large .innerHTML) or many updates (inserting/removing dom nodes)\n        const resCtx = renderer.render(ctx, viewportData.startLineNumber, viewportData.endLineNumber, viewportData.relativeVerticalOffset);\n        this._linesCollection._set(resCtx.rendLineNumberStart, resCtx.lines);\n    }\n}\nclass ViewLayerRenderer {\n    constructor(domNode, host, viewportData) {\n        this.domNode = domNode;\n        this.host = host;\n        this.viewportData = viewportData;\n    }\n    render(inContext, startLineNumber, stopLineNumber, deltaTop) {\n        const ctx = {\n            rendLineNumberStart: inContext.rendLineNumberStart,\n            lines: inContext.lines.slice(0),\n            linesLength: inContext.linesLength\n        };\n        if ((ctx.rendLineNumberStart + ctx.linesLength - 1 < startLineNumber) || (stopLineNumber < ctx.rendLineNumberStart)) {\n            // There is no overlap whatsoever\n            ctx.rendLineNumberStart = startLineNumber;\n            ctx.linesLength = stopLineNumber - startLineNumber + 1;\n            ctx.lines = [];\n            for (let x = startLineNumber; x <= stopLineNumber; x++) {\n                ctx.lines[x - startLineNumber] = this.host.createVisibleLine();\n            }\n            this._finishRendering(ctx, true, deltaTop);\n            return ctx;\n        }\n        // Update lines which will remain untouched\n        this._renderUntouchedLines(ctx, Math.max(startLineNumber - ctx.rendLineNumberStart, 0), Math.min(stopLineNumber - ctx.rendLineNumberStart, ctx.linesLength - 1), deltaTop, startLineNumber);\n        if (ctx.rendLineNumberStart > startLineNumber) {\n            // Insert lines before\n            const fromLineNumber = startLineNumber;\n            const toLineNumber = Math.min(stopLineNumber, ctx.rendLineNumberStart - 1);\n            if (fromLineNumber <= toLineNumber) {\n                this._insertLinesBefore(ctx, fromLineNumber, toLineNumber, deltaTop, startLineNumber);\n                ctx.linesLength += toLineNumber - fromLineNumber + 1;\n            }\n        }\n        else if (ctx.rendLineNumberStart < startLineNumber) {\n            // Remove lines before\n            const removeCnt = Math.min(ctx.linesLength, startLineNumber - ctx.rendLineNumberStart);\n            if (removeCnt > 0) {\n                this._removeLinesBefore(ctx, removeCnt);\n                ctx.linesLength -= removeCnt;\n            }\n        }\n        ctx.rendLineNumberStart = startLineNumber;\n        if (ctx.rendLineNumberStart + ctx.linesLength - 1 < stopLineNumber) {\n            // Insert lines after\n            const fromLineNumber = ctx.rendLineNumberStart + ctx.linesLength;\n            const toLineNumber = stopLineNumber;\n            if (fromLineNumber <= toLineNumber) {\n                this._insertLinesAfter(ctx, fromLineNumber, toLineNumber, deltaTop, startLineNumber);\n                ctx.linesLength += toLineNumber - fromLineNumber + 1;\n            }\n        }\n        else if (ctx.rendLineNumberStart + ctx.linesLength - 1 > stopLineNumber) {\n            // Remove lines after\n            const fromLineNumber = Math.max(0, stopLineNumber - ctx.rendLineNumberStart + 1);\n            const toLineNumber = ctx.linesLength - 1;\n            const removeCnt = toLineNumber - fromLineNumber + 1;\n            if (removeCnt > 0) {\n                this._removeLinesAfter(ctx, removeCnt);\n                ctx.linesLength -= removeCnt;\n            }\n        }\n        this._finishRendering(ctx, false, deltaTop);\n        return ctx;\n    }\n    _renderUntouchedLines(ctx, startIndex, endIndex, deltaTop, deltaLN) {\n        const rendLineNumberStart = ctx.rendLineNumberStart;\n        const lines = ctx.lines;\n        for (let i = startIndex; i <= endIndex; i++) {\n            const lineNumber = rendLineNumberStart + i;\n            lines[i].layoutLine(lineNumber, deltaTop[lineNumber - deltaLN]);\n        }\n    }\n    _insertLinesBefore(ctx, fromLineNumber, toLineNumber, deltaTop, deltaLN) {\n        const newLines = [];\n        let newLinesLen = 0;\n        for (let lineNumber = fromLineNumber; lineNumber <= toLineNumber; lineNumber++) {\n            newLines[newLinesLen++] = this.host.createVisibleLine();\n        }\n        ctx.lines = newLines.concat(ctx.lines);\n    }\n    _removeLinesBefore(ctx, removeCount) {\n        for (let i = 0; i < removeCount; i++) {\n            const lineDomNode = ctx.lines[i].getDomNode();\n            if (lineDomNode) {\n                this.domNode.removeChild(lineDomNode);\n            }\n        }\n        ctx.lines.splice(0, removeCount);\n    }\n    _insertLinesAfter(ctx, fromLineNumber, toLineNumber, deltaTop, deltaLN) {\n        const newLines = [];\n        let newLinesLen = 0;\n        for (let lineNumber = fromLineNumber; lineNumber <= toLineNumber; lineNumber++) {\n            newLines[newLinesLen++] = this.host.createVisibleLine();\n        }\n        ctx.lines = ctx.lines.concat(newLines);\n    }\n    _removeLinesAfter(ctx, removeCount) {\n        const removeIndex = ctx.linesLength - removeCount;\n        for (let i = 0; i < removeCount; i++) {\n            const lineDomNode = ctx.lines[removeIndex + i].getDomNode();\n            if (lineDomNode) {\n                this.domNode.removeChild(lineDomNode);\n            }\n        }\n        ctx.lines.splice(removeIndex, removeCount);\n    }\n    _finishRenderingNewLines(ctx, domNodeIsEmpty, newLinesHTML, wasNew) {\n        if (ViewLayerRenderer._ttPolicy) {\n            newLinesHTML = ViewLayerRenderer._ttPolicy.createHTML(newLinesHTML);\n        }\n        const lastChild = this.domNode.lastChild;\n        if (domNodeIsEmpty || !lastChild) {\n            this.domNode.innerHTML = newLinesHTML; // explains the ugly casts -> https://github.com/microsoft/vscode/issues/106396#issuecomment-692625393;\n        }\n        else {\n            lastChild.insertAdjacentHTML('afterend', newLinesHTML);\n        }\n        let currChild = this.domNode.lastChild;\n        for (let i = ctx.linesLength - 1; i >= 0; i--) {\n            const line = ctx.lines[i];\n            if (wasNew[i]) {\n                line.setDomNode(currChild);\n                currChild = currChild.previousSibling;\n            }\n        }\n    }\n    _finishRenderingInvalidLines(ctx, invalidLinesHTML, wasInvalid) {\n        const hugeDomNode = document.createElement('div');\n        if (ViewLayerRenderer._ttPolicy) {\n            invalidLinesHTML = ViewLayerRenderer._ttPolicy.createHTML(invalidLinesHTML);\n        }\n        hugeDomNode.innerHTML = invalidLinesHTML;\n        for (let i = 0; i < ctx.linesLength; i++) {\n            const line = ctx.lines[i];\n            if (wasInvalid[i]) {\n                const source = hugeDomNode.firstChild;\n                const lineDomNode = line.getDomNode();\n                lineDomNode.parentNode.replaceChild(source, lineDomNode);\n                line.setDomNode(source);\n            }\n        }\n    }\n    _finishRendering(ctx, domNodeIsEmpty, deltaTop) {\n        const sb = ViewLayerRenderer._sb;\n        const linesLength = ctx.linesLength;\n        const lines = ctx.lines;\n        const rendLineNumberStart = ctx.rendLineNumberStart;\n        const wasNew = [];\n        {\n            sb.reset();\n            let hadNewLine = false;\n            for (let i = 0; i < linesLength; i++) {\n                const line = lines[i];\n                wasNew[i] = false;\n                const lineDomNode = line.getDomNode();\n                if (lineDomNode) {\n                    // line is not new\n                    continue;\n                }\n                const renderResult = line.renderLine(i + rendLineNumberStart, deltaTop[i], this.viewportData, sb);\n                if (!renderResult) {\n                    // line does not need rendering\n                    continue;\n                }\n                wasNew[i] = true;\n                hadNewLine = true;\n            }\n            if (hadNewLine) {\n                this._finishRenderingNewLines(ctx, domNodeIsEmpty, sb.build(), wasNew);\n            }\n        }\n        {\n            sb.reset();\n            let hadInvalidLine = false;\n            const wasInvalid = [];\n            for (let i = 0; i < linesLength; i++) {\n                const line = lines[i];\n                wasInvalid[i] = false;\n                if (wasNew[i]) {\n                    // line was new\n                    continue;\n                }\n                const renderResult = line.renderLine(i + rendLineNumberStart, deltaTop[i], this.viewportData, sb);\n                if (!renderResult) {\n                    // line does not need rendering\n                    continue;\n                }\n                wasInvalid[i] = true;\n                hadInvalidLine = true;\n            }\n            if (hadInvalidLine) {\n                this._finishRenderingInvalidLines(ctx, sb.build(), wasInvalid);\n            }\n        }\n    }\n}\nViewLayerRenderer._ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('editorViewLayer', { createHTML: value => value });\nViewLayerRenderer._sb = createStringBuilder(100000);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { VisibleLinesCollection } from './viewLayer.js';\nimport { ViewPart } from './viewPart.js';\nexport class ViewOverlays extends ViewPart {\n    constructor(context) {\n        super(context);\n        this._visibleLines = new VisibleLinesCollection(this);\n        this.domNode = this._visibleLines.domNode;\n        this._dynamicOverlays = [];\n        this._isFocused = false;\n        this.domNode.setClassName('view-overlays');\n    }\n    shouldRender() {\n        if (super.shouldRender()) {\n            return true;\n        }\n        for (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n            const dynamicOverlay = this._dynamicOverlays[i];\n            if (dynamicOverlay.shouldRender()) {\n                return true;\n            }\n        }\n        return false;\n    }\n    dispose() {\n        super.dispose();\n        for (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n            const dynamicOverlay = this._dynamicOverlays[i];\n            dynamicOverlay.dispose();\n        }\n        this._dynamicOverlays = [];\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    // ---- begin IVisibleLinesHost\n    createVisibleLine() {\n        return new ViewOverlayLine(this._context.configuration, this._dynamicOverlays);\n    }\n    // ---- end IVisibleLinesHost\n    addDynamicOverlay(overlay) {\n        this._dynamicOverlays.push(overlay);\n    }\n    // ----- event handlers\n    onConfigurationChanged(e) {\n        this._visibleLines.onConfigurationChanged(e);\n        const startLineNumber = this._visibleLines.getStartLineNumber();\n        const endLineNumber = this._visibleLines.getEndLineNumber();\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const line = this._visibleLines.getVisibleLine(lineNumber);\n            line.onConfigurationChanged(e);\n        }\n        return true;\n    }\n    onFlushed(e) {\n        return this._visibleLines.onFlushed(e);\n    }\n    onFocusChanged(e) {\n        this._isFocused = e.isFocused;\n        return true;\n    }\n    onLinesChanged(e) {\n        return this._visibleLines.onLinesChanged(e);\n    }\n    onLinesDeleted(e) {\n        return this._visibleLines.onLinesDeleted(e);\n    }\n    onLinesInserted(e) {\n        return this._visibleLines.onLinesInserted(e);\n    }\n    onScrollChanged(e) {\n        return this._visibleLines.onScrollChanged(e) || true;\n    }\n    onTokensChanged(e) {\n        return this._visibleLines.onTokensChanged(e);\n    }\n    onZonesChanged(e) {\n        return this._visibleLines.onZonesChanged(e);\n    }\n    // ----- end event handlers\n    prepareRender(ctx) {\n        const toRender = this._dynamicOverlays.filter(overlay => overlay.shouldRender());\n        for (let i = 0, len = toRender.length; i < len; i++) {\n            const dynamicOverlay = toRender[i];\n            dynamicOverlay.prepareRender(ctx);\n            dynamicOverlay.onDidRender();\n        }\n    }\n    render(ctx) {\n        // Overwriting to bypass `shouldRender` flag\n        this._viewOverlaysRender(ctx);\n        this.domNode.toggleClassName('focused', this._isFocused);\n    }\n    _viewOverlaysRender(ctx) {\n        this._visibleLines.renderLines(ctx.viewportData);\n    }\n}\nexport class ViewOverlayLine {\n    constructor(configuration, dynamicOverlays) {\n        this._configuration = configuration;\n        this._lineHeight = this._configuration.options.get(61 /* EditorOption.lineHeight */);\n        this._dynamicOverlays = dynamicOverlays;\n        this._domNode = null;\n        this._renderedContent = null;\n    }\n    getDomNode() {\n        if (!this._domNode) {\n            return null;\n        }\n        return this._domNode.domNode;\n    }\n    setDomNode(domNode) {\n        this._domNode = createFastDomNode(domNode);\n    }\n    onContentChanged() {\n        // Nothing\n    }\n    onTokensChanged() {\n        // Nothing\n    }\n    onConfigurationChanged(e) {\n        this._lineHeight = this._configuration.options.get(61 /* EditorOption.lineHeight */);\n    }\n    renderLine(lineNumber, deltaTop, viewportData, sb) {\n        let result = '';\n        for (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n            const dynamicOverlay = this._dynamicOverlays[i];\n            result += dynamicOverlay.render(viewportData.startLineNumber, lineNumber);\n        }\n        if (this._renderedContent === result) {\n            // No rendering needed\n            return false;\n        }\n        this._renderedContent = result;\n        sb.appendASCIIString('<div style=\"position:absolute;top:');\n        sb.appendASCIIString(String(deltaTop));\n        sb.appendASCIIString('px;width:100%;height:');\n        sb.appendASCIIString(String(this._lineHeight));\n        sb.appendASCIIString('px;\">');\n        sb.appendASCIIString(result);\n        sb.appendASCIIString('</div>');\n        return true;\n    }\n    layoutLine(lineNumber, deltaTop) {\n        if (this._domNode) {\n            this._domNode.setTop(deltaTop);\n            this._domNode.setHeight(this._lineHeight);\n        }\n    }\n}\nexport class ContentViewOverlays extends ViewOverlays {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(133 /* EditorOption.layoutInfo */);\n        this._contentWidth = layoutInfo.contentWidth;\n        this.domNode.setHeight(0);\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(133 /* EditorOption.layoutInfo */);\n        this._contentWidth = layoutInfo.contentWidth;\n        return super.onConfigurationChanged(e) || true;\n    }\n    onScrollChanged(e) {\n        return super.onScrollChanged(e) || e.scrollWidthChanged;\n    }\n    // --- end event handlers\n    _viewOverlaysRender(ctx) {\n        super._viewOverlaysRender(ctx);\n        this.domNode.setWidth(Math.max(ctx.scrollWidth, this._contentWidth));\n    }\n}\nexport class MarginViewOverlays extends ViewOverlays {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(133 /* EditorOption.layoutInfo */);\n        this._contentLeft = layoutInfo.contentLeft;\n        this.domNode.setClassName('margin-view-overlays');\n        this.domNode.setWidth(1);\n        applyFontInfo(this.domNode, options.get(46 /* EditorOption.fontInfo */));\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        applyFontInfo(this.domNode, options.get(46 /* EditorOption.fontInfo */));\n        const layoutInfo = options.get(133 /* EditorOption.layoutInfo */);\n        this._contentLeft = layoutInfo.contentLeft;\n        return super.onConfigurationChanged(e) || true;\n    }\n    onScrollChanged(e) {\n        return super.onScrollChanged(e) || e.scrollHeightChanged;\n    }\n    _viewOverlaysRender(ctx) {\n        super._viewOverlaysRender(ctx);\n        const height = Math.min(ctx.scrollHeight, 1000000);\n        this.domNode.setHeight(height);\n        this.domNode.setWidth(this._contentLeft);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ViewEventHandler } from '../../common/viewEventHandler.js';\nexport class ViewPart extends ViewEventHandler {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        super.dispose();\n    }\n}\nexport class PartFingerprints {\n    static write(target, partId) {\n        target.setAttribute('data-mprt', String(partId));\n    }\n    static read(target) {\n        const r = target.getAttribute('data-mprt');\n        if (r === null) {\n            return 0 /* PartFingerprint.None */;\n        }\n        return parseInt(r, 10);\n    }\n    static collect(child, stopAt) {\n        const result = [];\n        let resultLen = 0;\n        while (child && child !== document.body) {\n            if (child === stopAt) {\n                break;\n            }\n            if (child.nodeType === child.ELEMENT_NODE) {\n                result[resultLen++] = this.read(child);\n            }\n            child = child.parentElement;\n        }\n        const r = new Uint8Array(resultLen);\n        for (let i = 0; i < resultLen; i++) {\n            r[i] = result[resultLen - i - 1];\n        }\n        return r;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class ViewUserInputEvents {\n    constructor(coordinatesConverter) {\n        this.onKeyDown = null;\n        this.onKeyUp = null;\n        this.onContextMenu = null;\n        this.onMouseMove = null;\n        this.onMouseLeave = null;\n        this.onMouseDown = null;\n        this.onMouseUp = null;\n        this.onMouseDrag = null;\n        this.onMouseDrop = null;\n        this.onMouseDropCanceled = null;\n        this.onMouseWheel = null;\n        this._coordinatesConverter = coordinatesConverter;\n    }\n    emitKeyDown(e) {\n        var _a;\n        (_a = this.onKeyDown) === null || _a === void 0 ? void 0 : _a.call(this, e);\n    }\n    emitKeyUp(e) {\n        var _a;\n        (_a = this.onKeyUp) === null || _a === void 0 ? void 0 : _a.call(this, e);\n    }\n    emitContextMenu(e) {\n        var _a;\n        (_a = this.onContextMenu) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseMove(e) {\n        var _a;\n        (_a = this.onMouseMove) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseLeave(e) {\n        var _a;\n        (_a = this.onMouseLeave) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseDown(e) {\n        var _a;\n        (_a = this.onMouseDown) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseUp(e) {\n        var _a;\n        (_a = this.onMouseUp) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseDrag(e) {\n        var _a;\n        (_a = this.onMouseDrag) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseDrop(e) {\n        var _a;\n        (_a = this.onMouseDrop) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseDropCanceled() {\n        var _a;\n        (_a = this.onMouseDropCanceled) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n    emitMouseWheel(e) {\n        var _a;\n        (_a = this.onMouseWheel) === null || _a === void 0 ? void 0 : _a.call(this, e);\n    }\n    _convertViewToModelMouseEvent(e) {\n        if (e.target) {\n            return {\n                event: e.event,\n                target: this._convertViewToModelMouseTarget(e.target)\n            };\n        }\n        return e;\n    }\n    _convertViewToModelMouseTarget(target) {\n        return ViewUserInputEvents.convertViewToModelMouseTarget(target, this._coordinatesConverter);\n    }\n    static convertViewToModelMouseTarget(target, coordinatesConverter) {\n        const result = Object.assign({}, target);\n        if (result.position) {\n            result.position = coordinatesConverter.convertViewPositionToModelPosition(result.position);\n        }\n        if (result.range) {\n            result.range = coordinatesConverter.convertViewRangeToModelRange(result.range);\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport '../services/markerDecorations.js';\nimport './media/editor.css';\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Emitter, EventDeliveryQueue } from '../../../base/common/event.js';\nimport { Disposable, dispose } from '../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { EditorConfiguration } from '../config/editorConfiguration.js';\nimport { EditorExtensionsRegistry } from '../editorExtensions.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { View } from '../view.js';\nimport { ViewUserInputEvents } from '../view/viewUserInputEvents.js';\nimport { filterValidationDecorations } from '../../common/config/editorOptions.js';\nimport { CursorsController } from '../../common/cursor/cursor.js';\nimport { CursorColumns } from '../../common/core/cursorColumns.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { InternalEditorAction } from '../../common/editorAction.js';\nimport * as editorCommon from '../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\nimport { editorUnnecessaryCodeBorder, editorUnnecessaryCodeOpacity } from '../../common/core/editorColorRegistry.js';\nimport { editorErrorBorder, editorErrorForeground, editorHintBorder, editorHintForeground, editorInfoBorder, editorInfoForeground, editorWarningBorder, editorWarningForeground, editorForeground, editorErrorBackground, editorInfoBackground, editorWarningBackground } from '../../../platform/theme/common/colorRegistry.js';\nimport { ViewModel } from '../../common/viewModel/viewModelImpl.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { IThemeService, registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { withNullAsUndefined } from '../../../base/common/types.js';\nimport { MonospaceLineBreaksComputerFactory } from '../../common/viewModel/monospaceLineBreaksComputer.js';\nimport { DOMLineBreaksComputerFactory } from '../view/domLineBreaksComputer.js';\nimport { WordOperations } from '../../common/cursor/cursorWordOperations.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\nlet EDITOR_ID = 0;\nclass ModelData {\n    constructor(model, viewModel, view, hasRealView, listenersToRemove) {\n        this.model = model;\n        this.viewModel = viewModel;\n        this.view = view;\n        this.hasRealView = hasRealView;\n        this.listenersToRemove = listenersToRemove;\n    }\n    dispose() {\n        dispose(this.listenersToRemove);\n        this.model.onBeforeDetached();\n        if (this.hasRealView) {\n            this.view.dispose();\n        }\n        this.viewModel.dispose();\n    }\n}\nlet CodeEditorWidget = class CodeEditorWidget extends Disposable {\n    constructor(domElement, _options, codeEditorWidgetOptions, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService, languageConfigurationService, languageFeaturesService) {\n        super();\n        this.languageConfigurationService = languageConfigurationService;\n        //#region Eventing\n        this._deliveryQueue = new EventDeliveryQueue();\n        this._onDidDispose = this._register(new Emitter());\n        this.onDidDispose = this._onDidDispose.event;\n        this._onDidChangeModelContent = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelContent = this._onDidChangeModelContent.event;\n        this._onDidChangeModelLanguage = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelLanguage = this._onDidChangeModelLanguage.event;\n        this._onDidChangeModelLanguageConfiguration = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelLanguageConfiguration = this._onDidChangeModelLanguageConfiguration.event;\n        this._onDidChangeModelOptions = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelOptions = this._onDidChangeModelOptions.event;\n        this._onDidChangeModelDecorations = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelDecorations = this._onDidChangeModelDecorations.event;\n        this._onDidChangeModelTokens = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelTokens = this._onDidChangeModelTokens.event;\n        this._onDidChangeConfiguration = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeConfiguration = this._onDidChangeConfiguration.event;\n        this._onDidChangeModel = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModel = this._onDidChangeModel.event;\n        this._onDidChangeCursorPosition = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeCursorPosition = this._onDidChangeCursorPosition.event;\n        this._onDidChangeCursorSelection = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeCursorSelection = this._onDidChangeCursorSelection.event;\n        this._onDidAttemptReadOnlyEdit = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidAttemptReadOnlyEdit = this._onDidAttemptReadOnlyEdit.event;\n        this._onDidLayoutChange = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._editorTextFocus = this._register(new BooleanEventEmitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidFocusEditorText = this._editorTextFocus.onDidChangeToTrue;\n        this.onDidBlurEditorText = this._editorTextFocus.onDidChangeToFalse;\n        this._editorWidgetFocus = this._register(new BooleanEventEmitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidFocusEditorWidget = this._editorWidgetFocus.onDidChangeToTrue;\n        this.onDidBlurEditorWidget = this._editorWidgetFocus.onDidChangeToFalse;\n        this._onWillType = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onWillType = this._onWillType.event;\n        this._onDidType = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidType = this._onDidType.event;\n        this._onDidCompositionStart = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidCompositionStart = this._onDidCompositionStart.event;\n        this._onDidCompositionEnd = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidCompositionEnd = this._onDidCompositionEnd.event;\n        this._onDidPaste = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidPaste = this._onDidPaste.event;\n        this._onMouseUp = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onMouseUp = this._onMouseUp.event;\n        this._onMouseDown = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onMouseDown = this._onMouseDown.event;\n        this._onMouseDrag = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onMouseDrag = this._onMouseDrag.event;\n        this._onMouseDrop = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onMouseDrop = this._onMouseDrop.event;\n        this._onMouseDropCanceled = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onMouseDropCanceled = this._onMouseDropCanceled.event;\n        this._onDropIntoEditor = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDropIntoEditor = this._onDropIntoEditor.event;\n        this._onContextMenu = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onContextMenu = this._onContextMenu.event;\n        this._onMouseMove = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onMouseMove = this._onMouseMove.event;\n        this._onMouseLeave = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onMouseLeave = this._onMouseLeave.event;\n        this._onMouseWheel = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onMouseWheel = this._onMouseWheel.event;\n        this._onKeyUp = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onKeyUp = this._onKeyUp.event;\n        this._onKeyDown = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onKeyDown = this._onKeyDown.event;\n        this._onDidContentSizeChange = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidContentSizeChange = this._onDidContentSizeChange.event;\n        this._onDidScrollChange = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidScrollChange = this._onDidScrollChange.event;\n        this._onDidChangeViewZones = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeViewZones = this._onDidChangeViewZones.event;\n        this._onDidChangeHiddenAreas = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeHiddenAreas = this._onDidChangeHiddenAreas.event;\n        this._bannerDomNode = null;\n        this._dropIntoEditorDecorations = this.createDecorationsCollection();\n        const options = Object.assign({}, _options);\n        this._domElement = domElement;\n        this._overflowWidgetsDomNode = options.overflowWidgetsDomNode;\n        delete options.overflowWidgetsDomNode;\n        this._id = (++EDITOR_ID);\n        this._decorationTypeKeysToIds = {};\n        this._decorationTypeSubtypes = {};\n        this._telemetryData = codeEditorWidgetOptions.telemetryData;\n        this._configuration = this._register(this._createConfiguration(codeEditorWidgetOptions.isSimpleWidget || false, options, accessibilityService));\n        this._register(this._configuration.onDidChange((e) => {\n            this._onDidChangeConfiguration.fire(e);\n            const options = this._configuration.options;\n            if (e.hasChanged(133 /* EditorOption.layoutInfo */)) {\n                const layoutInfo = options.get(133 /* EditorOption.layoutInfo */);\n                this._onDidLayoutChange.fire(layoutInfo);\n            }\n        }));\n        this._contextKeyService = this._register(contextKeyService.createScoped(this._domElement));\n        this._notificationService = notificationService;\n        this._codeEditorService = codeEditorService;\n        this._commandService = commandService;\n        this._themeService = themeService;\n        this._register(new EditorContextKeysManager(this, this._contextKeyService));\n        this._register(new EditorModeContext(this, this._contextKeyService, languageFeaturesService));\n        this._instantiationService = instantiationService.createChild(new ServiceCollection([IContextKeyService, this._contextKeyService]));\n        this._modelData = null;\n        this._contributions = {};\n        this._actions = {};\n        this._focusTracker = new CodeEditorWidgetFocusTracker(domElement);\n        this._register(this._focusTracker.onChange(() => {\n            this._editorWidgetFocus.setValue(this._focusTracker.hasFocus());\n        }));\n        this._contentWidgets = {};\n        this._overlayWidgets = {};\n        let contributions;\n        if (Array.isArray(codeEditorWidgetOptions.contributions)) {\n            contributions = codeEditorWidgetOptions.contributions;\n        }\n        else {\n            contributions = EditorExtensionsRegistry.getEditorContributions();\n        }\n        for (const desc of contributions) {\n            if (this._contributions[desc.id]) {\n                onUnexpectedError(new Error(`Cannot have two contributions with the same id ${desc.id}`));\n                continue;\n            }\n            try {\n                const contribution = this._instantiationService.createInstance(desc.ctor, this);\n                this._contributions[desc.id] = contribution;\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n        }\n        EditorExtensionsRegistry.getEditorActions().forEach((action) => {\n            if (this._actions[action.id]) {\n                onUnexpectedError(new Error(`Cannot have two actions with the same id ${action.id}`));\n                return;\n            }\n            const internalAction = new InternalEditorAction(action.id, action.label, action.alias, withNullAsUndefined(action.precondition), () => {\n                return this._instantiationService.invokeFunction((accessor) => {\n                    return Promise.resolve(action.runEditorCommand(accessor, this, null));\n                });\n            }, this._contextKeyService);\n            this._actions[internalAction.id] = internalAction;\n        });\n        const isDropIntoEnabled = () => {\n            return !this._configuration.options.get(83 /* EditorOption.readOnly */)\n                && this._configuration.options.get(32 /* EditorOption.dropIntoEditor */).enabled;\n        };\n        this._register(new dom.DragAndDropObserver(this._domElement, {\n            onDragEnter: () => undefined,\n            onDragOver: e => {\n                if (!isDropIntoEnabled()) {\n                    return;\n                }\n                const target = this.getTargetAtClientPoint(e.clientX, e.clientY);\n                if (target === null || target === void 0 ? void 0 : target.position) {\n                    this.showDropIndicatorAt(target.position);\n                }\n            },\n            onDrop: (e) => __awaiter(this, void 0, void 0, function* () {\n                if (!isDropIntoEnabled()) {\n                    return;\n                }\n                this.removeDropIndicator();\n                if (!e.dataTransfer) {\n                    return;\n                }\n                const target = this.getTargetAtClientPoint(e.clientX, e.clientY);\n                if (target === null || target === void 0 ? void 0 : target.position) {\n                    this._onDropIntoEditor.fire({ position: target.position, event: e });\n                }\n            }),\n            onDragLeave: () => {\n                this.removeDropIndicator();\n            },\n            onDragEnd: () => {\n                this.removeDropIndicator();\n            },\n        }));\n        this._codeEditorService.addCodeEditor(this);\n    }\n    //#endregion\n    get isSimpleWidget() {\n        return this._configuration.isSimpleWidget;\n    }\n    _createConfiguration(isSimpleWidget, options, accessibilityService) {\n        return new EditorConfiguration(isSimpleWidget, options, this._domElement, accessibilityService);\n    }\n    getId() {\n        return this.getEditorType() + ':' + this._id;\n    }\n    getEditorType() {\n        return editorCommon.EditorType.ICodeEditor;\n    }\n    dispose() {\n        this._codeEditorService.removeCodeEditor(this);\n        this._focusTracker.dispose();\n        const keys = Object.keys(this._contributions);\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const contributionId = keys[i];\n            this._contributions[contributionId].dispose();\n        }\n        this._contributions = {};\n        this._actions = {};\n        this._contentWidgets = {};\n        this._overlayWidgets = {};\n        this._removeDecorationTypes();\n        this._postDetachModelCleanup(this._detachModel());\n        this._onDidDispose.fire();\n        super.dispose();\n    }\n    invokeWithinContext(fn) {\n        return this._instantiationService.invokeFunction(fn);\n    }\n    updateOptions(newOptions) {\n        this._configuration.updateOptions(newOptions || {});\n    }\n    getOptions() {\n        return this._configuration.options;\n    }\n    getOption(id) {\n        return this._configuration.options.get(id);\n    }\n    getRawOptions() {\n        return this._configuration.getRawOptions();\n    }\n    getOverflowWidgetsDomNode() {\n        return this._overflowWidgetsDomNode;\n    }\n    getConfiguredWordAtPosition(position) {\n        if (!this._modelData) {\n            return null;\n        }\n        return WordOperations.getWordAtPosition(this._modelData.model, this._configuration.options.get(119 /* EditorOption.wordSeparators */), position);\n    }\n    getValue(options = null) {\n        if (!this._modelData) {\n            return '';\n        }\n        const preserveBOM = (options && options.preserveBOM) ? true : false;\n        let eolPreference = 0 /* EndOfLinePreference.TextDefined */;\n        if (options && options.lineEnding && options.lineEnding === '\\n') {\n            eolPreference = 1 /* EndOfLinePreference.LF */;\n        }\n        else if (options && options.lineEnding && options.lineEnding === '\\r\\n') {\n            eolPreference = 2 /* EndOfLinePreference.CRLF */;\n        }\n        return this._modelData.model.getValue(eolPreference, preserveBOM);\n    }\n    setValue(newValue) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.model.setValue(newValue);\n    }\n    getModel() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.model;\n    }\n    setModel(_model = null) {\n        const model = _model;\n        if (this._modelData === null && model === null) {\n            // Current model is the new model\n            return;\n        }\n        if (this._modelData && this._modelData.model === model) {\n            // Current model is the new model\n            return;\n        }\n        const hasTextFocus = this.hasTextFocus();\n        const detachedModel = this._detachModel();\n        this._attachModel(model);\n        if (hasTextFocus && this.hasModel()) {\n            this.focus();\n        }\n        const e = {\n            oldModelUrl: detachedModel ? detachedModel.uri : null,\n            newModelUrl: model ? model.uri : null\n        };\n        this._removeDecorationTypes();\n        this._onDidChangeModel.fire(e);\n        this._postDetachModelCleanup(detachedModel);\n    }\n    _removeDecorationTypes() {\n        this._decorationTypeKeysToIds = {};\n        if (this._decorationTypeSubtypes) {\n            for (const decorationType in this._decorationTypeSubtypes) {\n                const subTypes = this._decorationTypeSubtypes[decorationType];\n                for (const subType in subTypes) {\n                    this._removeDecorationType(decorationType + '-' + subType);\n                }\n            }\n            this._decorationTypeSubtypes = {};\n        }\n    }\n    getVisibleRanges() {\n        if (!this._modelData) {\n            return [];\n        }\n        return this._modelData.viewModel.getVisibleRanges();\n    }\n    getVisibleRangesPlusViewportAboveBelow() {\n        if (!this._modelData) {\n            return [];\n        }\n        return this._modelData.viewModel.getVisibleRangesPlusViewportAboveBelow();\n    }\n    getWhitespaces() {\n        if (!this._modelData) {\n            return [];\n        }\n        return this._modelData.viewModel.viewLayout.getWhitespaces();\n    }\n    static _getVerticalOffsetAfterPosition(modelData, modelLineNumber, modelColumn, includeViewZones) {\n        const modelPosition = modelData.model.validatePosition({\n            lineNumber: modelLineNumber,\n            column: modelColumn\n        });\n        const viewPosition = modelData.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n        return modelData.viewModel.viewLayout.getVerticalOffsetAfterLineNumber(viewPosition.lineNumber, includeViewZones);\n    }\n    getTopForLineNumber(lineNumber, includeViewZones = false) {\n        if (!this._modelData) {\n            return -1;\n        }\n        return CodeEditorWidget._getVerticalOffsetForPosition(this._modelData, lineNumber, 1, includeViewZones);\n    }\n    getTopForPosition(lineNumber, column) {\n        if (!this._modelData) {\n            return -1;\n        }\n        return CodeEditorWidget._getVerticalOffsetForPosition(this._modelData, lineNumber, column, false);\n    }\n    static _getVerticalOffsetForPosition(modelData, modelLineNumber, modelColumn, includeViewZones = false) {\n        const modelPosition = modelData.model.validatePosition({\n            lineNumber: modelLineNumber,\n            column: modelColumn\n        });\n        const viewPosition = modelData.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n        return modelData.viewModel.viewLayout.getVerticalOffsetForLineNumber(viewPosition.lineNumber, includeViewZones);\n    }\n    getBottomForLineNumber(lineNumber, includeViewZones = false) {\n        if (!this._modelData) {\n            return -1;\n        }\n        return CodeEditorWidget._getVerticalOffsetAfterPosition(this._modelData, lineNumber, 1, includeViewZones);\n    }\n    setHiddenAreas(ranges) {\n        var _a;\n        (_a = this._modelData) === null || _a === void 0 ? void 0 : _a.viewModel.setHiddenAreas(ranges.map(r => Range.lift(r)));\n    }\n    getVisibleColumnFromPosition(rawPosition) {\n        if (!this._modelData) {\n            return rawPosition.column;\n        }\n        const position = this._modelData.model.validatePosition(rawPosition);\n        const tabSize = this._modelData.model.getOptions().tabSize;\n        return CursorColumns.visibleColumnFromColumn(this._modelData.model.getLineContent(position.lineNumber), position.column, tabSize) + 1;\n    }\n    getPosition() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel.getPosition();\n    }\n    setPosition(position, source = 'api') {\n        if (!this._modelData) {\n            return;\n        }\n        if (!Position.isIPosition(position)) {\n            throw new Error('Invalid arguments');\n        }\n        this._modelData.viewModel.setSelections(source, [{\n                selectionStartLineNumber: position.lineNumber,\n                selectionStartColumn: position.column,\n                positionLineNumber: position.lineNumber,\n                positionColumn: position.column\n            }]);\n    }\n    _sendRevealRange(modelRange, verticalType, revealHorizontal, scrollType) {\n        if (!this._modelData) {\n            return;\n        }\n        if (!Range.isIRange(modelRange)) {\n            throw new Error('Invalid arguments');\n        }\n        const validatedModelRange = this._modelData.model.validateRange(modelRange);\n        const viewRange = this._modelData.viewModel.coordinatesConverter.convertModelRangeToViewRange(validatedModelRange);\n        this._modelData.viewModel.revealRange('api', revealHorizontal, viewRange, verticalType, scrollType);\n    }\n    revealLine(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLine(lineNumber, 0 /* VerticalRevealType.Simple */, scrollType);\n    }\n    revealLineInCenter(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLine(lineNumber, 1 /* VerticalRevealType.Center */, scrollType);\n    }\n    revealLineInCenterIfOutsideViewport(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLine(lineNumber, 2 /* VerticalRevealType.CenterIfOutsideViewport */, scrollType);\n    }\n    revealLineNearTop(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLine(lineNumber, 5 /* VerticalRevealType.NearTop */, scrollType);\n    }\n    _revealLine(lineNumber, revealType, scrollType) {\n        if (typeof lineNumber !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(new Range(lineNumber, 1, lineNumber, 1), revealType, false, scrollType);\n    }\n    revealPosition(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealPosition(position, 0 /* VerticalRevealType.Simple */, true, scrollType);\n    }\n    revealPositionInCenter(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealPosition(position, 1 /* VerticalRevealType.Center */, true, scrollType);\n    }\n    revealPositionInCenterIfOutsideViewport(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealPosition(position, 2 /* VerticalRevealType.CenterIfOutsideViewport */, true, scrollType);\n    }\n    revealPositionNearTop(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealPosition(position, 5 /* VerticalRevealType.NearTop */, true, scrollType);\n    }\n    _revealPosition(position, verticalType, revealHorizontal, scrollType) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(new Range(position.lineNumber, position.column, position.lineNumber, position.column), verticalType, revealHorizontal, scrollType);\n    }\n    getSelection() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel.getSelection();\n    }\n    getSelections() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel.getSelections();\n    }\n    setSelection(something, source = 'api') {\n        const isSelection = Selection.isISelection(something);\n        const isRange = Range.isIRange(something);\n        if (!isSelection && !isRange) {\n            throw new Error('Invalid arguments');\n        }\n        if (isSelection) {\n            this._setSelectionImpl(something, source);\n        }\n        else if (isRange) {\n            // act as if it was an IRange\n            const selection = {\n                selectionStartLineNumber: something.startLineNumber,\n                selectionStartColumn: something.startColumn,\n                positionLineNumber: something.endLineNumber,\n                positionColumn: something.endColumn\n            };\n            this._setSelectionImpl(selection, source);\n        }\n    }\n    _setSelectionImpl(sel, source) {\n        if (!this._modelData) {\n            return;\n        }\n        const selection = new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n        this._modelData.viewModel.setSelections(source, [selection]);\n    }\n    revealLines(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 0 /* VerticalRevealType.Simple */, scrollType);\n    }\n    revealLinesInCenter(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 1 /* VerticalRevealType.Center */, scrollType);\n    }\n    revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 2 /* VerticalRevealType.CenterIfOutsideViewport */, scrollType);\n    }\n    revealLinesNearTop(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 5 /* VerticalRevealType.NearTop */, scrollType);\n    }\n    _revealLines(startLineNumber, endLineNumber, verticalType, scrollType) {\n        if (typeof startLineNumber !== 'number' || typeof endLineNumber !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(new Range(startLineNumber, 1, endLineNumber, 1), verticalType, false, scrollType);\n    }\n    revealRange(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */, revealVerticalInCenter = false, revealHorizontal = true) {\n        this._revealRange(range, revealVerticalInCenter ? 1 /* VerticalRevealType.Center */ : 0 /* VerticalRevealType.Simple */, revealHorizontal, scrollType);\n    }\n    revealRangeInCenter(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 1 /* VerticalRevealType.Center */, true, scrollType);\n    }\n    revealRangeInCenterIfOutsideViewport(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 2 /* VerticalRevealType.CenterIfOutsideViewport */, true, scrollType);\n    }\n    revealRangeNearTop(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 5 /* VerticalRevealType.NearTop */, true, scrollType);\n    }\n    revealRangeNearTopIfOutsideViewport(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 6 /* VerticalRevealType.NearTopIfOutsideViewport */, true, scrollType);\n    }\n    revealRangeAtTop(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 3 /* VerticalRevealType.Top */, true, scrollType);\n    }\n    _revealRange(range, verticalType, revealHorizontal, scrollType) {\n        if (!Range.isIRange(range)) {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(Range.lift(range), verticalType, revealHorizontal, scrollType);\n    }\n    setSelections(ranges, source = 'api', reason = 0 /* CursorChangeReason.NotSet */) {\n        if (!this._modelData) {\n            return;\n        }\n        if (!ranges || ranges.length === 0) {\n            throw new Error('Invalid arguments');\n        }\n        for (let i = 0, len = ranges.length; i < len; i++) {\n            if (!Selection.isISelection(ranges[i])) {\n                throw new Error('Invalid arguments');\n            }\n        }\n        this._modelData.viewModel.setSelections(source, ranges, reason);\n    }\n    getContentWidth() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getContentWidth();\n    }\n    getScrollWidth() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getScrollWidth();\n    }\n    getScrollLeft() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getCurrentScrollLeft();\n    }\n    getContentHeight() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getContentHeight();\n    }\n    getScrollHeight() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getScrollHeight();\n    }\n    getScrollTop() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getCurrentScrollTop();\n    }\n    setScrollLeft(newScrollLeft, scrollType = 1 /* editorCommon.ScrollType.Immediate */) {\n        if (!this._modelData) {\n            return;\n        }\n        if (typeof newScrollLeft !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._modelData.viewModel.viewLayout.setScrollPosition({\n            scrollLeft: newScrollLeft\n        }, scrollType);\n    }\n    setScrollTop(newScrollTop, scrollType = 1 /* editorCommon.ScrollType.Immediate */) {\n        if (!this._modelData) {\n            return;\n        }\n        if (typeof newScrollTop !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._modelData.viewModel.viewLayout.setScrollPosition({\n            scrollTop: newScrollTop\n        }, scrollType);\n    }\n    setScrollPosition(position, scrollType = 1 /* editorCommon.ScrollType.Immediate */) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.viewLayout.setScrollPosition(position, scrollType);\n    }\n    saveViewState() {\n        if (!this._modelData) {\n            return null;\n        }\n        const contributionsState = {};\n        const keys = Object.keys(this._contributions);\n        for (const id of keys) {\n            const contribution = this._contributions[id];\n            if (typeof contribution.saveViewState === 'function') {\n                contributionsState[id] = contribution.saveViewState();\n            }\n        }\n        const cursorState = this._modelData.viewModel.saveCursorState();\n        const viewState = this._modelData.viewModel.saveState();\n        return {\n            cursorState: cursorState,\n            viewState: viewState,\n            contributionsState: contributionsState\n        };\n    }\n    restoreViewState(s) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        const codeEditorState = s;\n        if (codeEditorState && codeEditorState.cursorState && codeEditorState.viewState) {\n            const cursorState = codeEditorState.cursorState;\n            if (Array.isArray(cursorState)) {\n                if (cursorState.length > 0) {\n                    this._modelData.viewModel.restoreCursorState(cursorState);\n                }\n            }\n            else {\n                // Backwards compatibility\n                this._modelData.viewModel.restoreCursorState([cursorState]);\n            }\n            const contributionsState = codeEditorState.contributionsState || {};\n            const keys = Object.keys(this._contributions);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const id = keys[i];\n                const contribution = this._contributions[id];\n                if (typeof contribution.restoreViewState === 'function') {\n                    contribution.restoreViewState(contributionsState[id]);\n                }\n            }\n            const reducedState = this._modelData.viewModel.reduceRestoreState(codeEditorState.viewState);\n            this._modelData.view.restoreState(reducedState);\n        }\n    }\n    getContribution(id) {\n        return (this._contributions[id] || null);\n    }\n    getActions() {\n        const result = [];\n        const keys = Object.keys(this._actions);\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const id = keys[i];\n            result.push(this._actions[id]);\n        }\n        return result;\n    }\n    getSupportedActions() {\n        let result = this.getActions();\n        result = result.filter(action => action.isSupported());\n        return result;\n    }\n    getAction(id) {\n        return this._actions[id] || null;\n    }\n    trigger(source, handlerId, payload) {\n        payload = payload || {};\n        switch (handlerId) {\n            case \"compositionStart\" /* editorCommon.Handler.CompositionStart */:\n                this._startComposition();\n                return;\n            case \"compositionEnd\" /* editorCommon.Handler.CompositionEnd */:\n                this._endComposition(source);\n                return;\n            case \"type\" /* editorCommon.Handler.Type */: {\n                const args = payload;\n                this._type(source, args.text || '');\n                return;\n            }\n            case \"replacePreviousChar\" /* editorCommon.Handler.ReplacePreviousChar */: {\n                const args = payload;\n                this._compositionType(source, args.text || '', args.replaceCharCnt || 0, 0, 0);\n                return;\n            }\n            case \"compositionType\" /* editorCommon.Handler.CompositionType */: {\n                const args = payload;\n                this._compositionType(source, args.text || '', args.replacePrevCharCnt || 0, args.replaceNextCharCnt || 0, args.positionDelta || 0);\n                return;\n            }\n            case \"paste\" /* editorCommon.Handler.Paste */: {\n                const args = payload;\n                this._paste(source, args.text || '', args.pasteOnNewLine || false, args.multicursorText || null, args.mode || null);\n                return;\n            }\n            case \"cut\" /* editorCommon.Handler.Cut */:\n                this._cut(source);\n                return;\n        }\n        const action = this.getAction(handlerId);\n        if (action) {\n            Promise.resolve(action.run()).then(undefined, onUnexpectedError);\n            return;\n        }\n        if (!this._modelData) {\n            return;\n        }\n        if (this._triggerEditorCommand(source, handlerId, payload)) {\n            return;\n        }\n        this._triggerCommand(handlerId, payload);\n    }\n    _triggerCommand(handlerId, payload) {\n        this._commandService.executeCommand(handlerId, payload);\n    }\n    _startComposition() {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.startComposition();\n        this._onDidCompositionStart.fire();\n    }\n    _endComposition(source) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.endComposition(source);\n        this._onDidCompositionEnd.fire();\n    }\n    _type(source, text) {\n        if (!this._modelData || text.length === 0) {\n            return;\n        }\n        if (source === 'keyboard') {\n            this._onWillType.fire(text);\n        }\n        this._modelData.viewModel.type(text, source);\n        if (source === 'keyboard') {\n            this._onDidType.fire(text);\n        }\n    }\n    _compositionType(source, text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.compositionType(text, replacePrevCharCnt, replaceNextCharCnt, positionDelta, source);\n    }\n    _paste(source, text, pasteOnNewLine, multicursorText, mode) {\n        if (!this._modelData || text.length === 0) {\n            return;\n        }\n        const viewModel = this._modelData.viewModel;\n        const startPosition = viewModel.getSelection().getStartPosition();\n        viewModel.paste(text, pasteOnNewLine, multicursorText, source);\n        const endPosition = viewModel.getSelection().getStartPosition();\n        if (source === 'keyboard') {\n            this._onDidPaste.fire({\n                range: new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column),\n                languageId: mode\n            });\n        }\n    }\n    _cut(source) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.cut(source);\n    }\n    _triggerEditorCommand(source, handlerId, payload) {\n        const command = EditorExtensionsRegistry.getEditorCommand(handlerId);\n        if (command) {\n            payload = payload || {};\n            payload.source = source;\n            this._instantiationService.invokeFunction((accessor) => {\n                Promise.resolve(command.runEditorCommand(accessor, this, payload)).then(undefined, onUnexpectedError);\n            });\n            return true;\n        }\n        return false;\n    }\n    _getViewModel() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel;\n    }\n    pushUndoStop() {\n        if (!this._modelData) {\n            return false;\n        }\n        if (this._configuration.options.get(83 /* EditorOption.readOnly */)) {\n            // read only editor => sorry!\n            return false;\n        }\n        this._modelData.model.pushStackElement();\n        return true;\n    }\n    popUndoStop() {\n        if (!this._modelData) {\n            return false;\n        }\n        if (this._configuration.options.get(83 /* EditorOption.readOnly */)) {\n            // read only editor => sorry!\n            return false;\n        }\n        this._modelData.model.popStackElement();\n        return true;\n    }\n    executeEdits(source, edits, endCursorState) {\n        if (!this._modelData) {\n            return false;\n        }\n        if (this._configuration.options.get(83 /* EditorOption.readOnly */)) {\n            // read only editor => sorry!\n            return false;\n        }\n        let cursorStateComputer;\n        if (!endCursorState) {\n            cursorStateComputer = () => null;\n        }\n        else if (Array.isArray(endCursorState)) {\n            cursorStateComputer = () => endCursorState;\n        }\n        else {\n            cursorStateComputer = endCursorState;\n        }\n        this._modelData.viewModel.executeEdits(source, edits, cursorStateComputer);\n        return true;\n    }\n    executeCommand(source, command) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.executeCommand(command, source);\n    }\n    executeCommands(source, commands) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.executeCommands(commands, source);\n    }\n    createDecorationsCollection(decorations) {\n        return new EditorDecorationsCollection(this, decorations);\n    }\n    changeDecorations(callback) {\n        if (!this._modelData) {\n            // callback will not be called\n            return null;\n        }\n        return this._modelData.model.changeDecorations(callback, this._id);\n    }\n    getLineDecorations(lineNumber) {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.model.getLineDecorations(lineNumber, this._id, filterValidationDecorations(this._configuration.options));\n    }\n    getDecorationsInRange(range) {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.model.getDecorationsInRange(range, this._id, filterValidationDecorations(this._configuration.options));\n    }\n    /**\n     * @deprecated\n     */\n    deltaDecorations(oldDecorations, newDecorations) {\n        if (!this._modelData) {\n            return [];\n        }\n        if (oldDecorations.length === 0 && newDecorations.length === 0) {\n            return oldDecorations;\n        }\n        return this._modelData.model.deltaDecorations(oldDecorations, newDecorations, this._id);\n    }\n    removeDecorations(decorationIds) {\n        if (!this._modelData || decorationIds.length === 0) {\n            return;\n        }\n        this._modelData.model.changeDecorations((changeAccessor) => {\n            changeAccessor.deltaDecorations(decorationIds, []);\n        });\n    }\n    removeDecorationsByType(decorationTypeKey) {\n        // remove decorations for type and sub type\n        const oldDecorationsIds = this._decorationTypeKeysToIds[decorationTypeKey];\n        if (oldDecorationsIds) {\n            this.deltaDecorations(oldDecorationsIds, []);\n        }\n        if (this._decorationTypeKeysToIds.hasOwnProperty(decorationTypeKey)) {\n            delete this._decorationTypeKeysToIds[decorationTypeKey];\n        }\n        if (this._decorationTypeSubtypes.hasOwnProperty(decorationTypeKey)) {\n            delete this._decorationTypeSubtypes[decorationTypeKey];\n        }\n    }\n    getLayoutInfo() {\n        const options = this._configuration.options;\n        const layoutInfo = options.get(133 /* EditorOption.layoutInfo */);\n        return layoutInfo;\n    }\n    createOverviewRuler(cssClassName) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        return this._modelData.view.createOverviewRuler(cssClassName);\n    }\n    getContainerDomNode() {\n        return this._domElement;\n    }\n    getDomNode() {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        return this._modelData.view.domNode.domNode;\n    }\n    delegateVerticalScrollbarPointerDown(browserEvent) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.delegateVerticalScrollbarPointerDown(browserEvent);\n    }\n    layout(dimension) {\n        this._configuration.observeContainer(dimension);\n        this.render();\n    }\n    focus() {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.focus();\n    }\n    hasTextFocus() {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return false;\n        }\n        return this._modelData.view.isFocused();\n    }\n    hasWidgetFocus() {\n        return this._focusTracker && this._focusTracker.hasFocus();\n    }\n    addContentWidget(widget) {\n        const widgetData = {\n            widget: widget,\n            position: widget.getPosition()\n        };\n        if (this._contentWidgets.hasOwnProperty(widget.getId())) {\n            console.warn('Overwriting a content widget with the same id.');\n        }\n        this._contentWidgets[widget.getId()] = widgetData;\n        if (this._modelData && this._modelData.hasRealView) {\n            this._modelData.view.addContentWidget(widgetData);\n        }\n    }\n    layoutContentWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._contentWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._contentWidgets[widgetId];\n            widgetData.position = widget.getPosition();\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.layoutContentWidget(widgetData);\n            }\n        }\n    }\n    removeContentWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._contentWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._contentWidgets[widgetId];\n            delete this._contentWidgets[widgetId];\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.removeContentWidget(widgetData);\n            }\n        }\n    }\n    addOverlayWidget(widget) {\n        const widgetData = {\n            widget: widget,\n            position: widget.getPosition()\n        };\n        if (this._overlayWidgets.hasOwnProperty(widget.getId())) {\n            console.warn('Overwriting an overlay widget with the same id.');\n        }\n        this._overlayWidgets[widget.getId()] = widgetData;\n        if (this._modelData && this._modelData.hasRealView) {\n            this._modelData.view.addOverlayWidget(widgetData);\n        }\n    }\n    layoutOverlayWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._overlayWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._overlayWidgets[widgetId];\n            widgetData.position = widget.getPosition();\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.layoutOverlayWidget(widgetData);\n            }\n        }\n    }\n    removeOverlayWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._overlayWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._overlayWidgets[widgetId];\n            delete this._overlayWidgets[widgetId];\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.removeOverlayWidget(widgetData);\n            }\n        }\n    }\n    changeViewZones(callback) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.change(callback);\n    }\n    getTargetAtClientPoint(clientX, clientY) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        return this._modelData.view.getTargetAtClientPoint(clientX, clientY);\n    }\n    getScrolledVisiblePosition(rawPosition) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        const position = this._modelData.model.validatePosition(rawPosition);\n        const options = this._configuration.options;\n        const layoutInfo = options.get(133 /* EditorOption.layoutInfo */);\n        const top = CodeEditorWidget._getVerticalOffsetForPosition(this._modelData, position.lineNumber, position.column) - this.getScrollTop();\n        const left = this._modelData.view.getOffsetForColumn(position.lineNumber, position.column) + layoutInfo.glyphMarginWidth + layoutInfo.lineNumbersWidth + layoutInfo.decorationsWidth - this.getScrollLeft();\n        return {\n            top: top,\n            left: left,\n            height: options.get(61 /* EditorOption.lineHeight */)\n        };\n    }\n    getOffsetForColumn(lineNumber, column) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return -1;\n        }\n        return this._modelData.view.getOffsetForColumn(lineNumber, column);\n    }\n    render(forceRedraw = false) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.render(true, forceRedraw);\n    }\n    setAriaOptions(options) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.setAriaOptions(options);\n    }\n    applyFontInfo(target) {\n        applyFontInfo(target, this._configuration.options.get(46 /* EditorOption.fontInfo */));\n    }\n    setBanner(domNode, domNodeHeight) {\n        if (this._bannerDomNode && this._domElement.contains(this._bannerDomNode)) {\n            this._domElement.removeChild(this._bannerDomNode);\n        }\n        this._bannerDomNode = domNode;\n        this._configuration.setReservedHeight(domNode ? domNodeHeight : 0);\n        if (this._bannerDomNode) {\n            this._domElement.prepend(this._bannerDomNode);\n        }\n    }\n    _attachModel(model) {\n        if (!model) {\n            this._modelData = null;\n            return;\n        }\n        const listenersToRemove = [];\n        this._domElement.setAttribute('data-mode-id', model.getLanguageId());\n        this._configuration.setIsDominatedByLongLines(model.isDominatedByLongLines());\n        this._configuration.setModelLineCount(model.getLineCount());\n        model.onBeforeAttached();\n        const viewModel = new ViewModel(this._id, this._configuration, model, DOMLineBreaksComputerFactory.create(), MonospaceLineBreaksComputerFactory.create(this._configuration.options), (callback) => dom.scheduleAtNextAnimationFrame(callback), this.languageConfigurationService, this._themeService);\n        // Someone might destroy the model from under the editor, so prevent any exceptions by setting a null model\n        listenersToRemove.push(model.onWillDispose(() => this.setModel(null)));\n        listenersToRemove.push(viewModel.onEvent((e) => {\n            switch (e.kind) {\n                case 0 /* OutgoingViewModelEventKind.ContentSizeChanged */:\n                    this._onDidContentSizeChange.fire(e);\n                    break;\n                case 1 /* OutgoingViewModelEventKind.FocusChanged */:\n                    this._editorTextFocus.setValue(e.hasFocus);\n                    break;\n                case 2 /* OutgoingViewModelEventKind.ScrollChanged */:\n                    this._onDidScrollChange.fire(e);\n                    break;\n                case 3 /* OutgoingViewModelEventKind.ViewZonesChanged */:\n                    this._onDidChangeViewZones.fire();\n                    break;\n                case 4 /* OutgoingViewModelEventKind.HiddenAreasChanged */:\n                    this._onDidChangeHiddenAreas.fire();\n                    break;\n                case 5 /* OutgoingViewModelEventKind.ReadOnlyEditAttempt */:\n                    this._onDidAttemptReadOnlyEdit.fire();\n                    break;\n                case 6 /* OutgoingViewModelEventKind.CursorStateChanged */: {\n                    if (e.reachedMaxCursorCount) {\n                        this._notificationService.warn(nls.localize('cursors.maximum', \"The number of cursors has been limited to {0}.\", CursorsController.MAX_CURSOR_COUNT));\n                    }\n                    const positions = [];\n                    for (let i = 0, len = e.selections.length; i < len; i++) {\n                        positions[i] = e.selections[i].getPosition();\n                    }\n                    const e1 = {\n                        position: positions[0],\n                        secondaryPositions: positions.slice(1),\n                        reason: e.reason,\n                        source: e.source\n                    };\n                    this._onDidChangeCursorPosition.fire(e1);\n                    const e2 = {\n                        selection: e.selections[0],\n                        secondarySelections: e.selections.slice(1),\n                        modelVersionId: e.modelVersionId,\n                        oldSelections: e.oldSelections,\n                        oldModelVersionId: e.oldModelVersionId,\n                        source: e.source,\n                        reason: e.reason\n                    };\n                    this._onDidChangeCursorSelection.fire(e2);\n                    break;\n                }\n                case 7 /* OutgoingViewModelEventKind.ModelDecorationsChanged */:\n                    this._onDidChangeModelDecorations.fire(e.event);\n                    break;\n                case 8 /* OutgoingViewModelEventKind.ModelLanguageChanged */:\n                    this._domElement.setAttribute('data-mode-id', model.getLanguageId());\n                    this._onDidChangeModelLanguage.fire(e.event);\n                    break;\n                case 9 /* OutgoingViewModelEventKind.ModelLanguageConfigurationChanged */:\n                    this._onDidChangeModelLanguageConfiguration.fire(e.event);\n                    break;\n                case 10 /* OutgoingViewModelEventKind.ModelContentChanged */:\n                    this._onDidChangeModelContent.fire(e.event);\n                    break;\n                case 11 /* OutgoingViewModelEventKind.ModelOptionsChanged */:\n                    this._onDidChangeModelOptions.fire(e.event);\n                    break;\n                case 12 /* OutgoingViewModelEventKind.ModelTokensChanged */:\n                    this._onDidChangeModelTokens.fire(e.event);\n                    break;\n            }\n        }));\n        const [view, hasRealView] = this._createView(viewModel);\n        if (hasRealView) {\n            this._domElement.appendChild(view.domNode.domNode);\n            let keys = Object.keys(this._contentWidgets);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const widgetId = keys[i];\n                view.addContentWidget(this._contentWidgets[widgetId]);\n            }\n            keys = Object.keys(this._overlayWidgets);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const widgetId = keys[i];\n                view.addOverlayWidget(this._overlayWidgets[widgetId]);\n            }\n            view.render(false, true);\n            view.domNode.domNode.setAttribute('data-uri', model.uri.toString());\n        }\n        this._modelData = new ModelData(model, viewModel, view, hasRealView, listenersToRemove);\n    }\n    _createView(viewModel) {\n        let commandDelegate;\n        if (this.isSimpleWidget) {\n            commandDelegate = {\n                paste: (text, pasteOnNewLine, multicursorText, mode) => {\n                    this._paste('keyboard', text, pasteOnNewLine, multicursorText, mode);\n                },\n                type: (text) => {\n                    this._type('keyboard', text);\n                },\n                compositionType: (text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) => {\n                    this._compositionType('keyboard', text, replacePrevCharCnt, replaceNextCharCnt, positionDelta);\n                },\n                startComposition: () => {\n                    this._startComposition();\n                },\n                endComposition: () => {\n                    this._endComposition('keyboard');\n                },\n                cut: () => {\n                    this._cut('keyboard');\n                }\n            };\n        }\n        else {\n            commandDelegate = {\n                paste: (text, pasteOnNewLine, multicursorText, mode) => {\n                    const payload = { text, pasteOnNewLine, multicursorText, mode };\n                    this._commandService.executeCommand(\"paste\" /* editorCommon.Handler.Paste */, payload);\n                },\n                type: (text) => {\n                    const payload = { text };\n                    this._commandService.executeCommand(\"type\" /* editorCommon.Handler.Type */, payload);\n                },\n                compositionType: (text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) => {\n                    // Try if possible to go through the existing `replacePreviousChar` command\n                    if (replaceNextCharCnt || positionDelta) {\n                        // must be handled through the new command\n                        const payload = { text, replacePrevCharCnt, replaceNextCharCnt, positionDelta };\n                        this._commandService.executeCommand(\"compositionType\" /* editorCommon.Handler.CompositionType */, payload);\n                    }\n                    else {\n                        const payload = { text, replaceCharCnt: replacePrevCharCnt };\n                        this._commandService.executeCommand(\"replacePreviousChar\" /* editorCommon.Handler.ReplacePreviousChar */, payload);\n                    }\n                },\n                startComposition: () => {\n                    this._commandService.executeCommand(\"compositionStart\" /* editorCommon.Handler.CompositionStart */, {});\n                },\n                endComposition: () => {\n                    this._commandService.executeCommand(\"compositionEnd\" /* editorCommon.Handler.CompositionEnd */, {});\n                },\n                cut: () => {\n                    this._commandService.executeCommand(\"cut\" /* editorCommon.Handler.Cut */, {});\n                }\n            };\n        }\n        const viewUserInputEvents = new ViewUserInputEvents(viewModel.coordinatesConverter);\n        viewUserInputEvents.onKeyDown = (e) => this._onKeyDown.fire(e);\n        viewUserInputEvents.onKeyUp = (e) => this._onKeyUp.fire(e);\n        viewUserInputEvents.onContextMenu = (e) => this._onContextMenu.fire(e);\n        viewUserInputEvents.onMouseMove = (e) => this._onMouseMove.fire(e);\n        viewUserInputEvents.onMouseLeave = (e) => this._onMouseLeave.fire(e);\n        viewUserInputEvents.onMouseDown = (e) => this._onMouseDown.fire(e);\n        viewUserInputEvents.onMouseUp = (e) => this._onMouseUp.fire(e);\n        viewUserInputEvents.onMouseDrag = (e) => this._onMouseDrag.fire(e);\n        viewUserInputEvents.onMouseDrop = (e) => this._onMouseDrop.fire(e);\n        viewUserInputEvents.onMouseDropCanceled = (e) => this._onMouseDropCanceled.fire(e);\n        viewUserInputEvents.onMouseWheel = (e) => this._onMouseWheel.fire(e);\n        const view = new View(commandDelegate, this._configuration, this._themeService.getColorTheme(), viewModel, viewUserInputEvents, this._overflowWidgetsDomNode);\n        return [view, true];\n    }\n    _postDetachModelCleanup(detachedModel) {\n        detachedModel === null || detachedModel === void 0 ? void 0 : detachedModel.removeAllDecorationsWithOwnerId(this._id);\n    }\n    _detachModel() {\n        if (!this._modelData) {\n            return null;\n        }\n        const model = this._modelData.model;\n        const removeDomNode = this._modelData.hasRealView ? this._modelData.view.domNode.domNode : null;\n        this._modelData.dispose();\n        this._modelData = null;\n        this._domElement.removeAttribute('data-mode-id');\n        if (removeDomNode && this._domElement.contains(removeDomNode)) {\n            this._domElement.removeChild(removeDomNode);\n        }\n        if (this._bannerDomNode && this._domElement.contains(this._bannerDomNode)) {\n            this._domElement.removeChild(this._bannerDomNode);\n        }\n        return model;\n    }\n    _removeDecorationType(key) {\n        this._codeEditorService.removeDecorationType(key);\n    }\n    hasModel() {\n        return (this._modelData !== null);\n    }\n    showDropIndicatorAt(position) {\n        const newDecorations = [{\n                range: new Range(position.lineNumber, position.column, position.lineNumber, position.column),\n                options: CodeEditorWidget.dropIntoEditorDecorationOptions\n            }];\n        this._dropIntoEditorDecorations.set(newDecorations);\n        this.revealPosition(position, 1 /* editorCommon.ScrollType.Immediate */);\n    }\n    removeDropIndicator() {\n        this._dropIntoEditorDecorations.clear();\n    }\n};\nCodeEditorWidget.dropIntoEditorDecorationOptions = ModelDecorationOptions.register({\n    description: 'workbench-dnd-target',\n    className: 'dnd-target'\n});\nCodeEditorWidget = __decorate([\n    __param(3, IInstantiationService),\n    __param(4, ICodeEditorService),\n    __param(5, ICommandService),\n    __param(6, IContextKeyService),\n    __param(7, IThemeService),\n    __param(8, INotificationService),\n    __param(9, IAccessibilityService),\n    __param(10, ILanguageConfigurationService),\n    __param(11, ILanguageFeaturesService)\n], CodeEditorWidget);\nexport { CodeEditorWidget };\nexport class BooleanEventEmitter extends Disposable {\n    constructor(_emitterOptions) {\n        super();\n        this._emitterOptions = _emitterOptions;\n        this._onDidChangeToTrue = this._register(new Emitter(this._emitterOptions));\n        this.onDidChangeToTrue = this._onDidChangeToTrue.event;\n        this._onDidChangeToFalse = this._register(new Emitter(this._emitterOptions));\n        this.onDidChangeToFalse = this._onDidChangeToFalse.event;\n        this._value = 0 /* BooleanEventValue.NotSet */;\n    }\n    setValue(_value) {\n        const value = (_value ? 2 /* BooleanEventValue.True */ : 1 /* BooleanEventValue.False */);\n        if (this._value === value) {\n            return;\n        }\n        this._value = value;\n        if (this._value === 2 /* BooleanEventValue.True */) {\n            this._onDidChangeToTrue.fire();\n        }\n        else if (this._value === 1 /* BooleanEventValue.False */) {\n            this._onDidChangeToFalse.fire();\n        }\n    }\n}\nclass EditorContextKeysManager extends Disposable {\n    constructor(editor, contextKeyService) {\n        super();\n        this._editor = editor;\n        contextKeyService.createKey('editorId', editor.getId());\n        this._editorSimpleInput = EditorContextKeys.editorSimpleInput.bindTo(contextKeyService);\n        this._editorFocus = EditorContextKeys.focus.bindTo(contextKeyService);\n        this._textInputFocus = EditorContextKeys.textInputFocus.bindTo(contextKeyService);\n        this._editorTextFocus = EditorContextKeys.editorTextFocus.bindTo(contextKeyService);\n        this._editorTabMovesFocus = EditorContextKeys.tabMovesFocus.bindTo(contextKeyService);\n        this._editorReadonly = EditorContextKeys.readOnly.bindTo(contextKeyService);\n        this._inDiffEditor = EditorContextKeys.inDiffEditor.bindTo(contextKeyService);\n        this._editorColumnSelection = EditorContextKeys.columnSelection.bindTo(contextKeyService);\n        this._hasMultipleSelections = EditorContextKeys.hasMultipleSelections.bindTo(contextKeyService);\n        this._hasNonEmptySelection = EditorContextKeys.hasNonEmptySelection.bindTo(contextKeyService);\n        this._canUndo = EditorContextKeys.canUndo.bindTo(contextKeyService);\n        this._canRedo = EditorContextKeys.canRedo.bindTo(contextKeyService);\n        this._register(this._editor.onDidChangeConfiguration(() => this._updateFromConfig()));\n        this._register(this._editor.onDidChangeCursorSelection(() => this._updateFromSelection()));\n        this._register(this._editor.onDidFocusEditorWidget(() => this._updateFromFocus()));\n        this._register(this._editor.onDidBlurEditorWidget(() => this._updateFromFocus()));\n        this._register(this._editor.onDidFocusEditorText(() => this._updateFromFocus()));\n        this._register(this._editor.onDidBlurEditorText(() => this._updateFromFocus()));\n        this._register(this._editor.onDidChangeModel(() => this._updateFromModel()));\n        this._register(this._editor.onDidChangeConfiguration(() => this._updateFromModel()));\n        this._updateFromConfig();\n        this._updateFromSelection();\n        this._updateFromFocus();\n        this._updateFromModel();\n        this._editorSimpleInput.set(this._editor.isSimpleWidget);\n    }\n    _updateFromConfig() {\n        const options = this._editor.getOptions();\n        this._editorTabMovesFocus.set(options.get(132 /* EditorOption.tabFocusMode */));\n        this._editorReadonly.set(options.get(83 /* EditorOption.readOnly */));\n        this._inDiffEditor.set(options.get(56 /* EditorOption.inDiffEditor */));\n        this._editorColumnSelection.set(options.get(18 /* EditorOption.columnSelection */));\n    }\n    _updateFromSelection() {\n        const selections = this._editor.getSelections();\n        if (!selections) {\n            this._hasMultipleSelections.reset();\n            this._hasNonEmptySelection.reset();\n        }\n        else {\n            this._hasMultipleSelections.set(selections.length > 1);\n            this._hasNonEmptySelection.set(selections.some(s => !s.isEmpty()));\n        }\n    }\n    _updateFromFocus() {\n        this._editorFocus.set(this._editor.hasWidgetFocus() && !this._editor.isSimpleWidget);\n        this._editorTextFocus.set(this._editor.hasTextFocus() && !this._editor.isSimpleWidget);\n        this._textInputFocus.set(this._editor.hasTextFocus());\n    }\n    _updateFromModel() {\n        const model = this._editor.getModel();\n        this._canUndo.set(Boolean(model && model.canUndo()));\n        this._canRedo.set(Boolean(model && model.canRedo()));\n    }\n}\nexport class EditorModeContext extends Disposable {\n    constructor(_editor, _contextKeyService, _languageFeaturesService) {\n        super();\n        this._editor = _editor;\n        this._contextKeyService = _contextKeyService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._langId = EditorContextKeys.languageId.bindTo(_contextKeyService);\n        this._hasCompletionItemProvider = EditorContextKeys.hasCompletionItemProvider.bindTo(_contextKeyService);\n        this._hasCodeActionsProvider = EditorContextKeys.hasCodeActionsProvider.bindTo(_contextKeyService);\n        this._hasCodeLensProvider = EditorContextKeys.hasCodeLensProvider.bindTo(_contextKeyService);\n        this._hasDefinitionProvider = EditorContextKeys.hasDefinitionProvider.bindTo(_contextKeyService);\n        this._hasDeclarationProvider = EditorContextKeys.hasDeclarationProvider.bindTo(_contextKeyService);\n        this._hasImplementationProvider = EditorContextKeys.hasImplementationProvider.bindTo(_contextKeyService);\n        this._hasTypeDefinitionProvider = EditorContextKeys.hasTypeDefinitionProvider.bindTo(_contextKeyService);\n        this._hasHoverProvider = EditorContextKeys.hasHoverProvider.bindTo(_contextKeyService);\n        this._hasDocumentHighlightProvider = EditorContextKeys.hasDocumentHighlightProvider.bindTo(_contextKeyService);\n        this._hasDocumentSymbolProvider = EditorContextKeys.hasDocumentSymbolProvider.bindTo(_contextKeyService);\n        this._hasReferenceProvider = EditorContextKeys.hasReferenceProvider.bindTo(_contextKeyService);\n        this._hasRenameProvider = EditorContextKeys.hasRenameProvider.bindTo(_contextKeyService);\n        this._hasSignatureHelpProvider = EditorContextKeys.hasSignatureHelpProvider.bindTo(_contextKeyService);\n        this._hasInlayHintsProvider = EditorContextKeys.hasInlayHintsProvider.bindTo(_contextKeyService);\n        this._hasDocumentFormattingProvider = EditorContextKeys.hasDocumentFormattingProvider.bindTo(_contextKeyService);\n        this._hasDocumentSelectionFormattingProvider = EditorContextKeys.hasDocumentSelectionFormattingProvider.bindTo(_contextKeyService);\n        this._hasMultipleDocumentFormattingProvider = EditorContextKeys.hasMultipleDocumentFormattingProvider.bindTo(_contextKeyService);\n        this._hasMultipleDocumentSelectionFormattingProvider = EditorContextKeys.hasMultipleDocumentSelectionFormattingProvider.bindTo(_contextKeyService);\n        this._isInWalkThrough = EditorContextKeys.isInWalkThroughSnippet.bindTo(_contextKeyService);\n        const update = () => this._update();\n        // update when model/mode changes\n        this._register(_editor.onDidChangeModel(update));\n        this._register(_editor.onDidChangeModelLanguage(update));\n        // update when registries change\n        this._register(_languageFeaturesService.completionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.codeActionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.codeLensProvider.onDidChange(update));\n        this._register(_languageFeaturesService.definitionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.declarationProvider.onDidChange(update));\n        this._register(_languageFeaturesService.implementationProvider.onDidChange(update));\n        this._register(_languageFeaturesService.typeDefinitionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.hoverProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentHighlightProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentSymbolProvider.onDidChange(update));\n        this._register(_languageFeaturesService.referenceProvider.onDidChange(update));\n        this._register(_languageFeaturesService.renameProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentFormattingEditProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentRangeFormattingEditProvider.onDidChange(update));\n        this._register(_languageFeaturesService.signatureHelpProvider.onDidChange(update));\n        this._register(_languageFeaturesService.inlayHintsProvider.onDidChange(update));\n        update();\n    }\n    dispose() {\n        super.dispose();\n    }\n    reset() {\n        this._contextKeyService.bufferChangeEvents(() => {\n            this._langId.reset();\n            this._hasCompletionItemProvider.reset();\n            this._hasCodeActionsProvider.reset();\n            this._hasCodeLensProvider.reset();\n            this._hasDefinitionProvider.reset();\n            this._hasDeclarationProvider.reset();\n            this._hasImplementationProvider.reset();\n            this._hasTypeDefinitionProvider.reset();\n            this._hasHoverProvider.reset();\n            this._hasDocumentHighlightProvider.reset();\n            this._hasDocumentSymbolProvider.reset();\n            this._hasReferenceProvider.reset();\n            this._hasRenameProvider.reset();\n            this._hasDocumentFormattingProvider.reset();\n            this._hasDocumentSelectionFormattingProvider.reset();\n            this._hasSignatureHelpProvider.reset();\n            this._isInWalkThrough.reset();\n        });\n    }\n    _update() {\n        const model = this._editor.getModel();\n        if (!model) {\n            this.reset();\n            return;\n        }\n        this._contextKeyService.bufferChangeEvents(() => {\n            this._langId.set(model.getLanguageId());\n            this._hasCompletionItemProvider.set(this._languageFeaturesService.completionProvider.has(model));\n            this._hasCodeActionsProvider.set(this._languageFeaturesService.codeActionProvider.has(model));\n            this._hasCodeLensProvider.set(this._languageFeaturesService.codeLensProvider.has(model));\n            this._hasDefinitionProvider.set(this._languageFeaturesService.definitionProvider.has(model));\n            this._hasDeclarationProvider.set(this._languageFeaturesService.declarationProvider.has(model));\n            this._hasImplementationProvider.set(this._languageFeaturesService.implementationProvider.has(model));\n            this._hasTypeDefinitionProvider.set(this._languageFeaturesService.typeDefinitionProvider.has(model));\n            this._hasHoverProvider.set(this._languageFeaturesService.hoverProvider.has(model));\n            this._hasDocumentHighlightProvider.set(this._languageFeaturesService.documentHighlightProvider.has(model));\n            this._hasDocumentSymbolProvider.set(this._languageFeaturesService.documentSymbolProvider.has(model));\n            this._hasReferenceProvider.set(this._languageFeaturesService.referenceProvider.has(model));\n            this._hasRenameProvider.set(this._languageFeaturesService.renameProvider.has(model));\n            this._hasSignatureHelpProvider.set(this._languageFeaturesService.signatureHelpProvider.has(model));\n            this._hasInlayHintsProvider.set(this._languageFeaturesService.inlayHintsProvider.has(model));\n            this._hasDocumentFormattingProvider.set(this._languageFeaturesService.documentFormattingEditProvider.has(model) || this._languageFeaturesService.documentRangeFormattingEditProvider.has(model));\n            this._hasDocumentSelectionFormattingProvider.set(this._languageFeaturesService.documentRangeFormattingEditProvider.has(model));\n            this._hasMultipleDocumentFormattingProvider.set(this._languageFeaturesService.documentFormattingEditProvider.all(model).length + this._languageFeaturesService.documentRangeFormattingEditProvider.all(model).length > 1);\n            this._hasMultipleDocumentSelectionFormattingProvider.set(this._languageFeaturesService.documentRangeFormattingEditProvider.all(model).length > 1);\n            this._isInWalkThrough.set(model.uri.scheme === Schemas.walkThroughSnippet);\n        });\n    }\n}\nclass CodeEditorWidgetFocusTracker extends Disposable {\n    constructor(domElement) {\n        super();\n        this._onChange = this._register(new Emitter());\n        this.onChange = this._onChange.event;\n        this._hasFocus = false;\n        this._domFocusTracker = this._register(dom.trackFocus(domElement));\n        this._register(this._domFocusTracker.onDidFocus(() => {\n            this._hasFocus = true;\n            this._onChange.fire(undefined);\n        }));\n        this._register(this._domFocusTracker.onDidBlur(() => {\n            this._hasFocus = false;\n            this._onChange.fire(undefined);\n        }));\n    }\n    hasFocus() {\n        return this._hasFocus;\n    }\n}\nclass EditorDecorationsCollection {\n    constructor(_editor, decorations) {\n        this._editor = _editor;\n        this._decorationIds = [];\n        this._isChangingDecorations = false;\n        if (Array.isArray(decorations) && decorations.length > 0) {\n            this.set(decorations);\n        }\n    }\n    get length() {\n        return this._decorationIds.length;\n    }\n    onDidChange(listener, thisArgs, disposables) {\n        return this._editor.onDidChangeModelDecorations((e) => {\n            if (this._isChangingDecorations) {\n                return;\n            }\n            listener.call(thisArgs, e);\n        }, disposables);\n    }\n    getRange(index) {\n        if (!this._editor.hasModel()) {\n            return null;\n        }\n        if (index >= this._decorationIds.length) {\n            return null;\n        }\n        return this._editor.getModel().getDecorationRange(this._decorationIds[index]);\n    }\n    getRanges() {\n        if (!this._editor.hasModel()) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const result = [];\n        for (const decorationId of this._decorationIds) {\n            const range = model.getDecorationRange(decorationId);\n            if (range) {\n                result.push(range);\n            }\n        }\n        return result;\n    }\n    has(decoration) {\n        return this._decorationIds.includes(decoration.id);\n    }\n    clear() {\n        if (this._decorationIds.length === 0) {\n            // nothing to do\n            return;\n        }\n        this.set([]);\n    }\n    set(newDecorations) {\n        try {\n            this._isChangingDecorations = true;\n            this._editor.changeDecorations((accessor) => {\n                this._decorationIds = accessor.deltaDecorations(this._decorationIds, newDecorations);\n            });\n        }\n        finally {\n            this._isChangingDecorations = false;\n        }\n    }\n}\nconst squigglyStart = encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 6 3' enable-background='new 0 0 6 3' height='3' width='6'><g fill='`);\nconst squigglyEnd = encodeURIComponent(`'><polygon points='5.5,0 2.5,3 1.1,3 4.1,0'/><polygon points='4,0 6,2 6,0.6 5.4,0'/><polygon points='0,2 1,3 2.4,3 0,0.6'/></g></svg>`);\nfunction getSquigglySVGData(color) {\n    return squigglyStart + encodeURIComponent(color.toString()) + squigglyEnd;\n}\nconst dotdotdotStart = encodeURIComponent(`<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"3\" width=\"12\"><g fill=\"`);\nconst dotdotdotEnd = encodeURIComponent(`\"><circle cx=\"1\" cy=\"1\" r=\"1\"/><circle cx=\"5\" cy=\"1\" r=\"1\"/><circle cx=\"9\" cy=\"1\" r=\"1\"/></g></svg>`);\nfunction getDotDotDotSVGData(color) {\n    return dotdotdotStart + encodeURIComponent(color.toString()) + dotdotdotEnd;\n}\nregisterThemingParticipant((theme, collector) => {\n    const errorBorderColor = theme.getColor(editorErrorBorder);\n    if (errorBorderColor) {\n        collector.addRule(`.monaco-editor .${\"squiggly-error\" /* ClassName.EditorErrorDecoration */} { border-bottom: 4px double ${errorBorderColor}; }`);\n    }\n    const errorForeground = theme.getColor(editorErrorForeground);\n    if (errorForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-error\" /* ClassName.EditorErrorDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(errorForeground)}\") repeat-x bottom left; }`);\n    }\n    const errorBackground = theme.getColor(editorErrorBackground);\n    if (errorBackground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-error\" /* ClassName.EditorErrorDecoration */}::before { display: block; content: ''; width: 100%; height: 100%; background: ${errorBackground}; }`);\n    }\n    const warningBorderColor = theme.getColor(editorWarningBorder);\n    if (warningBorderColor) {\n        collector.addRule(`.monaco-editor .${\"squiggly-warning\" /* ClassName.EditorWarningDecoration */} { border-bottom: 4px double ${warningBorderColor}; }`);\n    }\n    const warningForeground = theme.getColor(editorWarningForeground);\n    if (warningForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-warning\" /* ClassName.EditorWarningDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(warningForeground)}\") repeat-x bottom left; }`);\n    }\n    const warningBackground = theme.getColor(editorWarningBackground);\n    if (warningBackground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-warning\" /* ClassName.EditorWarningDecoration */}::before { display: block; content: ''; width: 100%; height: 100%; background: ${warningBackground}; }`);\n    }\n    const infoBorderColor = theme.getColor(editorInfoBorder);\n    if (infoBorderColor) {\n        collector.addRule(`.monaco-editor .${\"squiggly-info\" /* ClassName.EditorInfoDecoration */} { border-bottom: 4px double ${infoBorderColor}; }`);\n    }\n    const infoForeground = theme.getColor(editorInfoForeground);\n    if (infoForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-info\" /* ClassName.EditorInfoDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(infoForeground)}\") repeat-x bottom left; }`);\n    }\n    const infoBackground = theme.getColor(editorInfoBackground);\n    if (infoBackground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-info\" /* ClassName.EditorInfoDecoration */}::before { display: block; content: ''; width: 100%; height: 100%; background: ${infoBackground}; }`);\n    }\n    const hintBorderColor = theme.getColor(editorHintBorder);\n    if (hintBorderColor) {\n        collector.addRule(`.monaco-editor .${\"squiggly-hint\" /* ClassName.EditorHintDecoration */} { border-bottom: 2px dotted ${hintBorderColor}; }`);\n    }\n    const hintForeground = theme.getColor(editorHintForeground);\n    if (hintForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-hint\" /* ClassName.EditorHintDecoration */} { background: url(\"data:image/svg+xml,${getDotDotDotSVGData(hintForeground)}\") no-repeat bottom left; }`);\n    }\n    const unnecessaryForeground = theme.getColor(editorUnnecessaryCodeOpacity);\n    if (unnecessaryForeground) {\n        collector.addRule(`.monaco-editor.showUnused .${\"squiggly-inline-unnecessary\" /* ClassName.EditorUnnecessaryInlineDecoration */} { opacity: ${unnecessaryForeground.rgba.a}; }`);\n    }\n    const unnecessaryBorder = theme.getColor(editorUnnecessaryCodeBorder);\n    if (unnecessaryBorder) {\n        collector.addRule(`.monaco-editor.showUnused .${\"squiggly-unnecessary\" /* ClassName.EditorUnnecessaryDecoration */} { border-bottom: 2px dashed ${unnecessaryBorder}; }`);\n    }\n    const deprecatedForeground = theme.getColor(editorForeground) || 'inherit';\n    collector.addRule(`.monaco-editor.showDeprecated .${\"squiggly-inline-deprecated\" /* ClassName.EditorDeprecatedInlineDecoration */} { text-decoration: line-through; text-decoration-color: ${deprecatedForeground}}`);\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar _a;\nimport './media/diffReview.css';\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { DomScrollableElement } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { Action } from '../../../base/common/actions.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { EditorAction, registerEditorAction } from '../editorExtensions.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { EditorFontLigatures } from '../../common/config/editorOptions.js';\nimport { LineTokens } from '../../common/tokens/lineTokens.js';\nimport { Position } from '../../common/core/position.js';\nimport { editorLineNumbers } from '../../common/core/editorColorRegistry.js';\nimport { RenderLineInput, renderViewLine2 as renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\nimport { ViewLineRenderingData } from '../../common/viewModel.js';\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\nimport { scrollbarShadow } from '../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant, ThemeIcon } from '../../../platform/theme/common/themeService.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\nimport { ILanguageService } from '../../common/languages/language.js';\nconst DIFF_LINES_PADDING = 3;\nclass DiffEntry {\n    constructor(originalLineStart, originalLineEnd, modifiedLineStart, modifiedLineEnd) {\n        this.originalLineStart = originalLineStart;\n        this.originalLineEnd = originalLineEnd;\n        this.modifiedLineStart = modifiedLineStart;\n        this.modifiedLineEnd = modifiedLineEnd;\n    }\n    getType() {\n        if (this.originalLineStart === 0) {\n            return 1 /* DiffEntryType.Insert */;\n        }\n        if (this.modifiedLineStart === 0) {\n            return 2 /* DiffEntryType.Delete */;\n        }\n        return 0 /* DiffEntryType.Equal */;\n    }\n}\nclass Diff {\n    constructor(entries) {\n        this.entries = entries;\n    }\n}\nconst diffReviewInsertIcon = registerIcon('diff-review-insert', Codicon.add, nls.localize('diffReviewInsertIcon', 'Icon for \\'Insert\\' in diff review.'));\nconst diffReviewRemoveIcon = registerIcon('diff-review-remove', Codicon.remove, nls.localize('diffReviewRemoveIcon', 'Icon for \\'Remove\\' in diff review.'));\nconst diffReviewCloseIcon = registerIcon('diff-review-close', Codicon.close, nls.localize('diffReviewCloseIcon', 'Icon for \\'Close\\' in diff review.'));\nlet DiffReview = class DiffReview extends Disposable {\n    constructor(diffEditor, _languageService) {\n        super();\n        this._languageService = _languageService;\n        this._width = 0;\n        this._diffEditor = diffEditor;\n        this._isVisible = false;\n        this.shadow = createFastDomNode(document.createElement('div'));\n        this.shadow.setClassName('diff-review-shadow');\n        this.actionBarContainer = createFastDomNode(document.createElement('div'));\n        this.actionBarContainer.setClassName('diff-review-actions');\n        this._actionBar = this._register(new ActionBar(this.actionBarContainer.domNode));\n        this._actionBar.push(new Action('diffreview.close', nls.localize('label.close', \"Close\"), 'close-diff-review ' + ThemeIcon.asClassName(diffReviewCloseIcon), true, () => __awaiter(this, void 0, void 0, function* () { return this.hide(); })), { label: false, icon: true });\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setClassName('diff-review monaco-editor-background');\n        this._content = createFastDomNode(document.createElement('div'));\n        this._content.setClassName('diff-review-content');\n        this._content.setAttribute('role', 'code');\n        this.scrollbar = this._register(new DomScrollableElement(this._content.domNode, {}));\n        this.domNode.domNode.appendChild(this.scrollbar.getDomNode());\n        this._register(diffEditor.onDidUpdateDiff(() => {\n            if (!this._isVisible) {\n                return;\n            }\n            this._diffs = this._compute();\n            this._render();\n        }));\n        this._register(diffEditor.getModifiedEditor().onDidChangeCursorPosition(() => {\n            if (!this._isVisible) {\n                return;\n            }\n            this._render();\n        }));\n        this._register(dom.addStandardDisposableListener(this.domNode.domNode, 'click', (e) => {\n            e.preventDefault();\n            const row = dom.findParentWithClass(e.target, 'diff-review-row');\n            if (row) {\n                this._goToRow(row);\n            }\n        }));\n        this._register(dom.addStandardDisposableListener(this.domNode.domNode, 'keydown', (e) => {\n            if (e.equals(18 /* KeyCode.DownArrow */)\n                || e.equals(2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */)\n                || e.equals(512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */)) {\n                e.preventDefault();\n                this._goToRow(this._getNextRow());\n            }\n            if (e.equals(16 /* KeyCode.UpArrow */)\n                || e.equals(2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */)\n                || e.equals(512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */)) {\n                e.preventDefault();\n                this._goToRow(this._getPrevRow());\n            }\n            if (e.equals(9 /* KeyCode.Escape */)\n                || e.equals(2048 /* KeyMod.CtrlCmd */ | 9 /* KeyCode.Escape */)\n                || e.equals(512 /* KeyMod.Alt */ | 9 /* KeyCode.Escape */)\n                || e.equals(1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */)) {\n                e.preventDefault();\n                this.hide();\n            }\n            if (e.equals(10 /* KeyCode.Space */)\n                || e.equals(3 /* KeyCode.Enter */)) {\n                e.preventDefault();\n                this.accept();\n            }\n        }));\n        this._diffs = [];\n        this._currentDiff = null;\n    }\n    prev() {\n        let index = 0;\n        if (!this._isVisible) {\n            this._diffs = this._compute();\n        }\n        if (this._isVisible) {\n            let currentIndex = -1;\n            for (let i = 0, len = this._diffs.length; i < len; i++) {\n                if (this._diffs[i] === this._currentDiff) {\n                    currentIndex = i;\n                    break;\n                }\n            }\n            index = (this._diffs.length + currentIndex - 1);\n        }\n        else {\n            index = this._findDiffIndex(this._diffEditor.getPosition());\n        }\n        if (this._diffs.length === 0) {\n            // Nothing to do\n            return;\n        }\n        index = index % this._diffs.length;\n        const entries = this._diffs[index].entries;\n        this._diffEditor.setPosition(new Position(entries[0].modifiedLineStart, 1));\n        this._diffEditor.setSelection({ startColumn: 1, startLineNumber: entries[0].modifiedLineStart, endColumn: 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, endLineNumber: entries[entries.length - 1].modifiedLineEnd });\n        this._isVisible = true;\n        this._diffEditor.doLayout();\n        this._render();\n        this._goToRow(this._getNextRow());\n    }\n    next() {\n        let index = 0;\n        if (!this._isVisible) {\n            this._diffs = this._compute();\n        }\n        if (this._isVisible) {\n            let currentIndex = -1;\n            for (let i = 0, len = this._diffs.length; i < len; i++) {\n                if (this._diffs[i] === this._currentDiff) {\n                    currentIndex = i;\n                    break;\n                }\n            }\n            index = (currentIndex + 1);\n        }\n        else {\n            index = this._findDiffIndex(this._diffEditor.getPosition());\n        }\n        if (this._diffs.length === 0) {\n            // Nothing to do\n            return;\n        }\n        index = index % this._diffs.length;\n        const entries = this._diffs[index].entries;\n        this._diffEditor.setPosition(new Position(entries[0].modifiedLineStart, 1));\n        this._diffEditor.setSelection({ startColumn: 1, startLineNumber: entries[0].modifiedLineStart, endColumn: 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, endLineNumber: entries[entries.length - 1].modifiedLineEnd });\n        this._isVisible = true;\n        this._diffEditor.doLayout();\n        this._render();\n        this._goToRow(this._getNextRow());\n    }\n    accept() {\n        let jumpToLineNumber = -1;\n        const current = this._getCurrentFocusedRow();\n        if (current) {\n            const lineNumber = parseInt(current.getAttribute('data-line'), 10);\n            if (!isNaN(lineNumber)) {\n                jumpToLineNumber = lineNumber;\n            }\n        }\n        this.hide();\n        if (jumpToLineNumber !== -1) {\n            this._diffEditor.setPosition(new Position(jumpToLineNumber, 1));\n            this._diffEditor.revealPosition(new Position(jumpToLineNumber, 1), 1 /* ScrollType.Immediate */);\n        }\n    }\n    hide() {\n        this._isVisible = false;\n        this._diffEditor.updateOptions({ readOnly: false });\n        this._diffEditor.focus();\n        this._diffEditor.doLayout();\n        this._render();\n    }\n    _getPrevRow() {\n        const current = this._getCurrentFocusedRow();\n        if (!current) {\n            return this._getFirstRow();\n        }\n        if (current.previousElementSibling) {\n            return current.previousElementSibling;\n        }\n        return current;\n    }\n    _getNextRow() {\n        const current = this._getCurrentFocusedRow();\n        if (!current) {\n            return this._getFirstRow();\n        }\n        if (current.nextElementSibling) {\n            return current.nextElementSibling;\n        }\n        return current;\n    }\n    _getFirstRow() {\n        return this.domNode.domNode.querySelector('.diff-review-row');\n    }\n    _getCurrentFocusedRow() {\n        const result = document.activeElement;\n        if (result && /diff-review-row/.test(result.className)) {\n            return result;\n        }\n        return null;\n    }\n    _goToRow(row) {\n        const prev = this._getCurrentFocusedRow();\n        row.tabIndex = 0;\n        row.focus();\n        if (prev && prev !== row) {\n            prev.tabIndex = -1;\n        }\n        this.scrollbar.scanDomNode();\n    }\n    isVisible() {\n        return this._isVisible;\n    }\n    layout(top, width, height) {\n        this._width = width;\n        this.shadow.setTop(top - 6);\n        this.shadow.setWidth(width);\n        this.shadow.setHeight(this._isVisible ? 6 : 0);\n        this.domNode.setTop(top);\n        this.domNode.setWidth(width);\n        this.domNode.setHeight(height);\n        this._content.setHeight(height);\n        this._content.setWidth(width);\n        if (this._isVisible) {\n            this.actionBarContainer.setAttribute('aria-hidden', 'false');\n            this.actionBarContainer.setDisplay('block');\n        }\n        else {\n            this.actionBarContainer.setAttribute('aria-hidden', 'true');\n            this.actionBarContainer.setDisplay('none');\n        }\n    }\n    _compute() {\n        const lineChanges = this._diffEditor.getLineChanges();\n        if (!lineChanges || lineChanges.length === 0) {\n            return [];\n        }\n        const originalModel = this._diffEditor.getOriginalEditor().getModel();\n        const modifiedModel = this._diffEditor.getModifiedEditor().getModel();\n        if (!originalModel || !modifiedModel) {\n            return [];\n        }\n        return DiffReview._mergeAdjacent(lineChanges, originalModel.getLineCount(), modifiedModel.getLineCount());\n    }\n    static _mergeAdjacent(lineChanges, originalLineCount, modifiedLineCount) {\n        if (!lineChanges || lineChanges.length === 0) {\n            return [];\n        }\n        const diffs = [];\n        let diffsLength = 0;\n        for (let i = 0, len = lineChanges.length; i < len; i++) {\n            const lineChange = lineChanges[i];\n            const originalStart = lineChange.originalStartLineNumber;\n            const originalEnd = lineChange.originalEndLineNumber;\n            const modifiedStart = lineChange.modifiedStartLineNumber;\n            const modifiedEnd = lineChange.modifiedEndLineNumber;\n            const r = [];\n            let rLength = 0;\n            // Emit before anchors\n            {\n                const originalEqualAbove = (originalEnd === 0 ? originalStart : originalStart - 1);\n                const modifiedEqualAbove = (modifiedEnd === 0 ? modifiedStart : modifiedStart - 1);\n                // Make sure we don't step into the previous diff\n                let minOriginal = 1;\n                let minModified = 1;\n                if (i > 0) {\n                    const prevLineChange = lineChanges[i - 1];\n                    if (prevLineChange.originalEndLineNumber === 0) {\n                        minOriginal = prevLineChange.originalStartLineNumber + 1;\n                    }\n                    else {\n                        minOriginal = prevLineChange.originalEndLineNumber + 1;\n                    }\n                    if (prevLineChange.modifiedEndLineNumber === 0) {\n                        minModified = prevLineChange.modifiedStartLineNumber + 1;\n                    }\n                    else {\n                        minModified = prevLineChange.modifiedEndLineNumber + 1;\n                    }\n                }\n                let fromOriginal = originalEqualAbove - DIFF_LINES_PADDING + 1;\n                let fromModified = modifiedEqualAbove - DIFF_LINES_PADDING + 1;\n                if (fromOriginal < minOriginal) {\n                    const delta = minOriginal - fromOriginal;\n                    fromOriginal = fromOriginal + delta;\n                    fromModified = fromModified + delta;\n                }\n                if (fromModified < minModified) {\n                    const delta = minModified - fromModified;\n                    fromOriginal = fromOriginal + delta;\n                    fromModified = fromModified + delta;\n                }\n                r[rLength++] = new DiffEntry(fromOriginal, originalEqualAbove, fromModified, modifiedEqualAbove);\n            }\n            // Emit deleted lines\n            {\n                if (originalEnd !== 0) {\n                    r[rLength++] = new DiffEntry(originalStart, originalEnd, 0, 0);\n                }\n            }\n            // Emit inserted lines\n            {\n                if (modifiedEnd !== 0) {\n                    r[rLength++] = new DiffEntry(0, 0, modifiedStart, modifiedEnd);\n                }\n            }\n            // Emit after anchors\n            {\n                const originalEqualBelow = (originalEnd === 0 ? originalStart + 1 : originalEnd + 1);\n                const modifiedEqualBelow = (modifiedEnd === 0 ? modifiedStart + 1 : modifiedEnd + 1);\n                // Make sure we don't step into the next diff\n                let maxOriginal = originalLineCount;\n                let maxModified = modifiedLineCount;\n                if (i + 1 < len) {\n                    const nextLineChange = lineChanges[i + 1];\n                    if (nextLineChange.originalEndLineNumber === 0) {\n                        maxOriginal = nextLineChange.originalStartLineNumber;\n                    }\n                    else {\n                        maxOriginal = nextLineChange.originalStartLineNumber - 1;\n                    }\n                    if (nextLineChange.modifiedEndLineNumber === 0) {\n                        maxModified = nextLineChange.modifiedStartLineNumber;\n                    }\n                    else {\n                        maxModified = nextLineChange.modifiedStartLineNumber - 1;\n                    }\n                }\n                let toOriginal = originalEqualBelow + DIFF_LINES_PADDING - 1;\n                let toModified = modifiedEqualBelow + DIFF_LINES_PADDING - 1;\n                if (toOriginal > maxOriginal) {\n                    const delta = maxOriginal - toOriginal;\n                    toOriginal = toOriginal + delta;\n                    toModified = toModified + delta;\n                }\n                if (toModified > maxModified) {\n                    const delta = maxModified - toModified;\n                    toOriginal = toOriginal + delta;\n                    toModified = toModified + delta;\n                }\n                r[rLength++] = new DiffEntry(originalEqualBelow, toOriginal, modifiedEqualBelow, toModified);\n            }\n            diffs[diffsLength++] = new Diff(r);\n        }\n        // Merge adjacent diffs\n        let curr = diffs[0].entries;\n        const r = [];\n        let rLength = 0;\n        for (let i = 1, len = diffs.length; i < len; i++) {\n            const thisDiff = diffs[i].entries;\n            const currLast = curr[curr.length - 1];\n            const thisFirst = thisDiff[0];\n            if (currLast.getType() === 0 /* DiffEntryType.Equal */\n                && thisFirst.getType() === 0 /* DiffEntryType.Equal */\n                && thisFirst.originalLineStart <= currLast.originalLineEnd) {\n                // We are dealing with equal lines that overlap\n                curr[curr.length - 1] = new DiffEntry(currLast.originalLineStart, thisFirst.originalLineEnd, currLast.modifiedLineStart, thisFirst.modifiedLineEnd);\n                curr = curr.concat(thisDiff.slice(1));\n                continue;\n            }\n            r[rLength++] = new Diff(curr);\n            curr = thisDiff;\n        }\n        r[rLength++] = new Diff(curr);\n        return r;\n    }\n    _findDiffIndex(pos) {\n        const lineNumber = pos.lineNumber;\n        for (let i = 0, len = this._diffs.length; i < len; i++) {\n            const diff = this._diffs[i].entries;\n            const lastModifiedLine = diff[diff.length - 1].modifiedLineEnd;\n            if (lineNumber <= lastModifiedLine) {\n                return i;\n            }\n        }\n        return 0;\n    }\n    _render() {\n        const originalOptions = this._diffEditor.getOriginalEditor().getOptions();\n        const modifiedOptions = this._diffEditor.getModifiedEditor().getOptions();\n        const originalModel = this._diffEditor.getOriginalEditor().getModel();\n        const modifiedModel = this._diffEditor.getModifiedEditor().getModel();\n        const originalModelOpts = originalModel.getOptions();\n        const modifiedModelOpts = modifiedModel.getOptions();\n        if (!this._isVisible || !originalModel || !modifiedModel) {\n            dom.clearNode(this._content.domNode);\n            this._currentDiff = null;\n            this.scrollbar.scanDomNode();\n            return;\n        }\n        this._diffEditor.updateOptions({ readOnly: true });\n        const diffIndex = this._findDiffIndex(this._diffEditor.getPosition());\n        if (this._diffs[diffIndex] === this._currentDiff) {\n            return;\n        }\n        this._currentDiff = this._diffs[diffIndex];\n        const diffs = this._diffs[diffIndex].entries;\n        const container = document.createElement('div');\n        container.className = 'diff-review-table';\n        container.setAttribute('role', 'list');\n        container.setAttribute('aria-label', 'Difference review. Use \"Stage | Unstage | Revert Selected Ranges\" commands');\n        applyFontInfo(container, modifiedOptions.get(46 /* EditorOption.fontInfo */));\n        let minOriginalLine = 0;\n        let maxOriginalLine = 0;\n        let minModifiedLine = 0;\n        let maxModifiedLine = 0;\n        for (let i = 0, len = diffs.length; i < len; i++) {\n            const diffEntry = diffs[i];\n            const originalLineStart = diffEntry.originalLineStart;\n            const originalLineEnd = diffEntry.originalLineEnd;\n            const modifiedLineStart = diffEntry.modifiedLineStart;\n            const modifiedLineEnd = diffEntry.modifiedLineEnd;\n            if (originalLineStart !== 0 && ((minOriginalLine === 0 || originalLineStart < minOriginalLine))) {\n                minOriginalLine = originalLineStart;\n            }\n            if (originalLineEnd !== 0 && ((maxOriginalLine === 0 || originalLineEnd > maxOriginalLine))) {\n                maxOriginalLine = originalLineEnd;\n            }\n            if (modifiedLineStart !== 0 && ((minModifiedLine === 0 || modifiedLineStart < minModifiedLine))) {\n                minModifiedLine = modifiedLineStart;\n            }\n            if (modifiedLineEnd !== 0 && ((maxModifiedLine === 0 || modifiedLineEnd > maxModifiedLine))) {\n                maxModifiedLine = modifiedLineEnd;\n            }\n        }\n        const header = document.createElement('div');\n        header.className = 'diff-review-row';\n        const cell = document.createElement('div');\n        cell.className = 'diff-review-cell diff-review-summary';\n        const originalChangedLinesCnt = maxOriginalLine - minOriginalLine + 1;\n        const modifiedChangedLinesCnt = maxModifiedLine - minModifiedLine + 1;\n        cell.appendChild(document.createTextNode(`${diffIndex + 1}/${this._diffs.length}: @@ -${minOriginalLine},${originalChangedLinesCnt} +${minModifiedLine},${modifiedChangedLinesCnt} @@`));\n        header.setAttribute('data-line', String(minModifiedLine));\n        const getAriaLines = (lines) => {\n            if (lines === 0) {\n                return nls.localize('no_lines_changed', \"no lines changed\");\n            }\n            else if (lines === 1) {\n                return nls.localize('one_line_changed', \"1 line changed\");\n            }\n            else {\n                return nls.localize('more_lines_changed', \"{0} lines changed\", lines);\n            }\n        };\n        const originalChangedLinesCntAria = getAriaLines(originalChangedLinesCnt);\n        const modifiedChangedLinesCntAria = getAriaLines(modifiedChangedLinesCnt);\n        header.setAttribute('aria-label', nls.localize({\n            key: 'header',\n            comment: [\n                'This is the ARIA label for a git diff header.',\n                'A git diff header looks like this: @@ -154,12 +159,39 @@.',\n                'That encodes that at original line 154 (which is now line 159), 12 lines were removed/changed with 39 lines.',\n                'Variables 0 and 1 refer to the diff index out of total number of diffs.',\n                'Variables 2 and 4 will be numbers (a line number).',\n                'Variables 3 and 5 will be \"no lines changed\", \"1 line changed\" or \"X lines changed\", localized separately.'\n            ]\n        }, \"Difference {0} of {1}: original line {2}, {3}, modified line {4}, {5}\", (diffIndex + 1), this._diffs.length, minOriginalLine, originalChangedLinesCntAria, minModifiedLine, modifiedChangedLinesCntAria));\n        header.appendChild(cell);\n        // @@ -504,7 +517,7 @@\n        header.setAttribute('role', 'listitem');\n        container.appendChild(header);\n        const lineHeight = modifiedOptions.get(61 /* EditorOption.lineHeight */);\n        let modLine = minModifiedLine;\n        for (let i = 0, len = diffs.length; i < len; i++) {\n            const diffEntry = diffs[i];\n            DiffReview._renderSection(container, diffEntry, modLine, lineHeight, this._width, originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts, this._languageService.languageIdCodec);\n            if (diffEntry.modifiedLineStart !== 0) {\n                modLine = diffEntry.modifiedLineEnd;\n            }\n        }\n        dom.clearNode(this._content.domNode);\n        this._content.domNode.appendChild(container);\n        this.scrollbar.scanDomNode();\n    }\n    static _renderSection(dest, diffEntry, modLine, lineHeight, width, originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts, languageIdCodec) {\n        const type = diffEntry.getType();\n        let rowClassName = 'diff-review-row';\n        let lineNumbersExtraClassName = '';\n        const spacerClassName = 'diff-review-spacer';\n        let spacerIcon = null;\n        switch (type) {\n            case 1 /* DiffEntryType.Insert */:\n                rowClassName = 'diff-review-row line-insert';\n                lineNumbersExtraClassName = ' char-insert';\n                spacerIcon = diffReviewInsertIcon;\n                break;\n            case 2 /* DiffEntryType.Delete */:\n                rowClassName = 'diff-review-row line-delete';\n                lineNumbersExtraClassName = ' char-delete';\n                spacerIcon = diffReviewRemoveIcon;\n                break;\n        }\n        const originalLineStart = diffEntry.originalLineStart;\n        const originalLineEnd = diffEntry.originalLineEnd;\n        const modifiedLineStart = diffEntry.modifiedLineStart;\n        const modifiedLineEnd = diffEntry.modifiedLineEnd;\n        const cnt = Math.max(modifiedLineEnd - modifiedLineStart, originalLineEnd - originalLineStart);\n        const originalLayoutInfo = originalOptions.get(133 /* EditorOption.layoutInfo */);\n        const originalLineNumbersWidth = originalLayoutInfo.glyphMarginWidth + originalLayoutInfo.lineNumbersWidth;\n        const modifiedLayoutInfo = modifiedOptions.get(133 /* EditorOption.layoutInfo */);\n        const modifiedLineNumbersWidth = 10 + modifiedLayoutInfo.glyphMarginWidth + modifiedLayoutInfo.lineNumbersWidth;\n        for (let i = 0; i <= cnt; i++) {\n            const originalLine = (originalLineStart === 0 ? 0 : originalLineStart + i);\n            const modifiedLine = (modifiedLineStart === 0 ? 0 : modifiedLineStart + i);\n            const row = document.createElement('div');\n            row.style.minWidth = width + 'px';\n            row.className = rowClassName;\n            row.setAttribute('role', 'listitem');\n            if (modifiedLine !== 0) {\n                modLine = modifiedLine;\n            }\n            row.setAttribute('data-line', String(modLine));\n            const cell = document.createElement('div');\n            cell.className = 'diff-review-cell';\n            cell.style.height = `${lineHeight}px`;\n            row.appendChild(cell);\n            const originalLineNumber = document.createElement('span');\n            originalLineNumber.style.width = (originalLineNumbersWidth + 'px');\n            originalLineNumber.style.minWidth = (originalLineNumbersWidth + 'px');\n            originalLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n            if (originalLine !== 0) {\n                originalLineNumber.appendChild(document.createTextNode(String(originalLine)));\n            }\n            else {\n                originalLineNumber.innerText = '\\u00a0';\n            }\n            cell.appendChild(originalLineNumber);\n            const modifiedLineNumber = document.createElement('span');\n            modifiedLineNumber.style.width = (modifiedLineNumbersWidth + 'px');\n            modifiedLineNumber.style.minWidth = (modifiedLineNumbersWidth + 'px');\n            modifiedLineNumber.style.paddingRight = '10px';\n            modifiedLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n            if (modifiedLine !== 0) {\n                modifiedLineNumber.appendChild(document.createTextNode(String(modifiedLine)));\n            }\n            else {\n                modifiedLineNumber.innerText = '\\u00a0';\n            }\n            cell.appendChild(modifiedLineNumber);\n            const spacer = document.createElement('span');\n            spacer.className = spacerClassName;\n            if (spacerIcon) {\n                const spacerCodicon = document.createElement('span');\n                spacerCodicon.className = ThemeIcon.asClassName(spacerIcon);\n                spacerCodicon.innerText = '\\u00a0\\u00a0';\n                spacer.appendChild(spacerCodicon);\n            }\n            else {\n                spacer.innerText = '\\u00a0\\u00a0';\n            }\n            cell.appendChild(spacer);\n            let lineContent;\n            if (modifiedLine !== 0) {\n                let html = this._renderLine(modifiedModel, modifiedOptions, modifiedModelOpts.tabSize, modifiedLine, languageIdCodec);\n                if (DiffReview._ttPolicy) {\n                    html = DiffReview._ttPolicy.createHTML(html);\n                }\n                cell.insertAdjacentHTML('beforeend', html);\n                lineContent = modifiedModel.getLineContent(modifiedLine);\n            }\n            else {\n                let html = this._renderLine(originalModel, originalOptions, originalModelOpts.tabSize, originalLine, languageIdCodec);\n                if (DiffReview._ttPolicy) {\n                    html = DiffReview._ttPolicy.createHTML(html);\n                }\n                cell.insertAdjacentHTML('beforeend', html);\n                lineContent = originalModel.getLineContent(originalLine);\n            }\n            if (lineContent.length === 0) {\n                lineContent = nls.localize('blankLine', \"blank\");\n            }\n            let ariaLabel = '';\n            switch (type) {\n                case 0 /* DiffEntryType.Equal */:\n                    if (originalLine === modifiedLine) {\n                        ariaLabel = nls.localize({ key: 'unchangedLine', comment: ['The placeholders are contents of the line and should not be translated.'] }, \"{0} unchanged line {1}\", lineContent, originalLine);\n                    }\n                    else {\n                        ariaLabel = nls.localize('equalLine', \"{0} original line {1} modified line {2}\", lineContent, originalLine, modifiedLine);\n                    }\n                    break;\n                case 1 /* DiffEntryType.Insert */:\n                    ariaLabel = nls.localize('insertLine', \"+ {0} modified line {1}\", lineContent, modifiedLine);\n                    break;\n                case 2 /* DiffEntryType.Delete */:\n                    ariaLabel = nls.localize('deleteLine', \"- {0} original line {1}\", lineContent, originalLine);\n                    break;\n            }\n            row.setAttribute('aria-label', ariaLabel);\n            dest.appendChild(row);\n        }\n    }\n    static _renderLine(model, options, tabSize, lineNumber, languageIdCodec) {\n        const lineContent = model.getLineContent(lineNumber);\n        const fontInfo = options.get(46 /* EditorOption.fontInfo */);\n        const lineTokens = LineTokens.createEmpty(lineContent, languageIdCodec);\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, model.mightContainNonBasicASCII());\n        const containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, model.mightContainRTL());\n        const r = renderViewLine(new RenderLineInput((fontInfo.isMonospace && !options.get(29 /* EditorOption.disableMonospaceOptimizations */)), fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, [], tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, options.get(107 /* EditorOption.stopRenderingLineAfter */), options.get(90 /* EditorOption.renderWhitespace */), options.get(85 /* EditorOption.renderControlCharacters */), options.get(47 /* EditorOption.fontLigatures */) !== EditorFontLigatures.OFF, null));\n        return r.html;\n    }\n};\nDiffReview._ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('diffReview', { createHTML: value => value });\nDiffReview = __decorate([\n    __param(1, ILanguageService)\n], DiffReview);\nexport { DiffReview };\n// theming\nregisterThemingParticipant((theme, collector) => {\n    const lineNumbers = theme.getColor(editorLineNumbers);\n    if (lineNumbers) {\n        collector.addRule(`.monaco-diff-editor .diff-review-line-number { color: ${lineNumbers}; }`);\n    }\n    const shadow = theme.getColor(scrollbarShadow);\n    if (shadow) {\n        collector.addRule(`.monaco-diff-editor .diff-review-shadow { box-shadow: ${shadow} 0 -6px 6px -6px inset; }`);\n    }\n});\nclass DiffReviewNext extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.diffReview.next',\n            label: nls.localize('editor.action.diffReview.next', \"Go to Next Difference\"),\n            alias: 'Go to Next Difference',\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n            kbOpts: {\n                kbExpr: null,\n                primary: 65 /* KeyCode.F7 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const diffEditor = findFocusedDiffEditor(accessor);\n        if (diffEditor) {\n            diffEditor.diffReviewNext();\n        }\n    }\n}\nclass DiffReviewPrev extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.diffReview.prev',\n            label: nls.localize('editor.action.diffReview.prev', \"Go to Previous Difference\"),\n            alias: 'Go to Previous Difference',\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n            kbOpts: {\n                kbExpr: null,\n                primary: 1024 /* KeyMod.Shift */ | 65 /* KeyCode.F7 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const diffEditor = findFocusedDiffEditor(accessor);\n        if (diffEditor) {\n            diffEditor.diffReviewPrev();\n        }\n    }\n}\nfunction findFocusedDiffEditor(accessor) {\n    const codeEditorService = accessor.get(ICodeEditorService);\n    const diffEditors = codeEditorService.listDiffEditors();\n    const activeCodeEditor = codeEditorService.getActiveCodeEditor();\n    if (!activeCodeEditor) {\n        return null;\n    }\n    for (let i = 0, len = diffEditors.length; i < len; i++) {\n        const diffEditor = diffEditors[i];\n        if (diffEditor.getModifiedEditor().getId() === activeCodeEditor.getId() || diffEditor.getOriginalEditor().getId() === activeCodeEditor.getId()) {\n            return diffEditor;\n        }\n    }\n    return null;\n}\nregisterEditorAction(DiffReviewNext);\nregisterEditorAction(DiffReviewPrev);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar _a;\nimport './media/diffEditor.css';\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport * as assert from '../../../base/common/assert.js';\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { Sash } from '../../../base/browser/ui/sash/sash.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { StableEditorScrollState } from '../stableEditorScroll.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { CodeEditorWidget } from './codeEditorWidget.js';\nimport { DiffReview } from './diffReview.js';\nimport { EditorOptions, EditorFontLigatures, stringSet as validateStringSetOption, boolean as validateBooleanOption, clampedInt } from '../../common/config/editorOptions.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { createStringBuilder } from '../../common/core/stringBuilder.js';\nimport * as editorCommon from '../../common/editorCommon.js';\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\nimport { IEditorWorkerService } from '../../common/services/editorWorker.js';\nimport { OverviewRulerZone } from '../../common/viewModel/overviewZoneManager.js';\nimport { LineDecoration } from '../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\nimport { InlineDecoration, ViewLineRenderingData } from '../../common/viewModel.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { defaultInsertColor, defaultRemoveColor, diffBorder, diffInserted, diffInsertedOutline, diffRemoved, diffRemovedOutline, scrollbarShadow, scrollbarSliderBackground, scrollbarSliderHoverBackground, scrollbarSliderActiveBackground, diffDiagonalFill, diffInsertedLineGutter, diffRemovedLineGutter, diffInsertedLine, diffRemovedLine, diffOverviewRulerInserted, diffOverviewRulerRemoved } from '../../../platform/theme/common/colorRegistry.js';\nimport { IThemeService, getThemeTypeSelector, registerThemingParticipant, ThemeIcon } from '../../../platform/theme/common/themeService.js';\nimport { IContextMenuService } from '../../../platform/contextview/browser/contextView.js';\nimport { InlineDiffMargin } from './inlineDiffMargin.js';\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\nimport { EditorExtensionsRegistry } from '../editorExtensions.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\nimport { ElementSizeObserver } from '../config/elementSizeObserver.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../base/browser/ui/mouseCursor/mouseCursor.js';\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\nimport { isHighContrast } from '../../../platform/theme/common/theme.js';\nclass VisualEditorState {\n    constructor(_contextMenuService, _clipboardService) {\n        this._contextMenuService = _contextMenuService;\n        this._clipboardService = _clipboardService;\n        this._zones = [];\n        this._inlineDiffMargins = [];\n        this._zonesMap = {};\n        this._decorations = [];\n    }\n    getForeignViewZones(allViewZones) {\n        return allViewZones.filter((z) => !this._zonesMap[String(z.id)]);\n    }\n    clean(editor) {\n        // (1) View zones\n        if (this._zones.length > 0) {\n            editor.changeViewZones((viewChangeAccessor) => {\n                for (const zoneId of this._zones) {\n                    viewChangeAccessor.removeZone(zoneId);\n                }\n            });\n        }\n        this._zones = [];\n        this._zonesMap = {};\n        // (2) Model decorations\n        editor.changeDecorations((changeAccessor) => {\n            this._decorations = changeAccessor.deltaDecorations(this._decorations, []);\n        });\n    }\n    apply(editor, overviewRuler, newDecorations, restoreScrollState) {\n        const scrollState = restoreScrollState ? StableEditorScrollState.capture(editor) : null;\n        // view zones\n        editor.changeViewZones((viewChangeAccessor) => {\n            var _a;\n            for (const zoneId of this._zones) {\n                viewChangeAccessor.removeZone(zoneId);\n            }\n            for (const inlineDiffMargin of this._inlineDiffMargins) {\n                inlineDiffMargin.dispose();\n            }\n            this._zones = [];\n            this._zonesMap = {};\n            this._inlineDiffMargins = [];\n            for (let i = 0, length = newDecorations.zones.length; i < length; i++) {\n                const viewZone = newDecorations.zones[i];\n                viewZone.suppressMouseDown = true;\n                const zoneId = viewChangeAccessor.addZone(viewZone);\n                this._zones.push(zoneId);\n                this._zonesMap[String(zoneId)] = true;\n                if (newDecorations.zones[i].diff && viewZone.marginDomNode) {\n                    viewZone.suppressMouseDown = false;\n                    if (((_a = newDecorations.zones[i].diff) === null || _a === void 0 ? void 0 : _a.originalModel.getValueLength()) !== 0) {\n                        // do not contribute diff margin actions for newly created files\n                        this._inlineDiffMargins.push(new InlineDiffMargin(zoneId, viewZone.marginDomNode, editor, newDecorations.zones[i].diff, this._contextMenuService, this._clipboardService));\n                    }\n                }\n            }\n        });\n        scrollState === null || scrollState === void 0 ? void 0 : scrollState.restore(editor);\n        // decorations\n        editor.changeDecorations((changeAccessor) => {\n            this._decorations = changeAccessor.deltaDecorations(this._decorations, newDecorations.decorations);\n        });\n        // overview ruler\n        overviewRuler === null || overviewRuler === void 0 ? void 0 : overviewRuler.setZones(newDecorations.overviewZones);\n    }\n}\nlet DIFF_EDITOR_ID = 0;\nconst diffInsertIcon = registerIcon('diff-insert', Codicon.add, nls.localize('diffInsertIcon', 'Line decoration for inserts in the diff editor.'));\nconst diffRemoveIcon = registerIcon('diff-remove', Codicon.remove, nls.localize('diffRemoveIcon', 'Line decoration for removals in the diff editor.'));\nconst ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('diffEditorWidget', { createHTML: value => value });\nlet DiffEditorWidget = class DiffEditorWidget extends Disposable {\n    constructor(domElement, options, codeEditorWidgetOptions, clipboardService, editorWorkerService, contextKeyService, instantiationService, codeEditorService, themeService, notificationService, contextMenuService, _editorProgressService) {\n        super();\n        this._editorProgressService = _editorProgressService;\n        this._onDidDispose = this._register(new Emitter());\n        this.onDidDispose = this._onDidDispose.event;\n        this._onDidUpdateDiff = this._register(new Emitter());\n        this.onDidUpdateDiff = this._onDidUpdateDiff.event;\n        this._onDidContentSizeChange = this._register(new Emitter());\n        this._lastOriginalWarning = null;\n        this._lastModifiedWarning = null;\n        this._editorWorkerService = editorWorkerService;\n        this._codeEditorService = codeEditorService;\n        this._contextKeyService = this._register(contextKeyService.createScoped(domElement));\n        this._instantiationService = instantiationService.createChild(new ServiceCollection([IContextKeyService, this._contextKeyService]));\n        this._contextKeyService.createKey('isInDiffEditor', true);\n        this._themeService = themeService;\n        this._notificationService = notificationService;\n        this._id = (++DIFF_EDITOR_ID);\n        this._state = 0 /* editorBrowser.DiffEditorState.Idle */;\n        this._updatingDiffProgress = null;\n        this._domElement = domElement;\n        options = options || {};\n        this._options = validateDiffEditorOptions(options, {\n            enableSplitViewResizing: true,\n            renderSideBySide: true,\n            renderMarginRevertIcon: true,\n            maxComputationTime: 5000,\n            maxFileSize: 50,\n            ignoreTrimWhitespace: true,\n            renderIndicators: true,\n            originalEditable: false,\n            diffCodeLens: false,\n            renderOverviewRuler: true,\n            diffWordWrap: 'inherit'\n        });\n        if (typeof options.isInEmbeddedEditor !== 'undefined') {\n            this._contextKeyService.createKey('isInEmbeddedDiffEditor', options.isInEmbeddedEditor);\n        }\n        else {\n            this._contextKeyService.createKey('isInEmbeddedDiffEditor', false);\n        }\n        this._updateDecorationsRunner = this._register(new RunOnceScheduler(() => this._updateDecorations(), 0));\n        this._containerDomElement = document.createElement('div');\n        this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._options.renderSideBySide);\n        this._containerDomElement.style.position = 'relative';\n        this._containerDomElement.style.height = '100%';\n        this._domElement.appendChild(this._containerDomElement);\n        this._overviewViewportDomElement = createFastDomNode(document.createElement('div'));\n        this._overviewViewportDomElement.setClassName('diffViewport');\n        this._overviewViewportDomElement.setPosition('absolute');\n        this._overviewDomElement = document.createElement('div');\n        this._overviewDomElement.className = 'diffOverview';\n        this._overviewDomElement.style.position = 'absolute';\n        this._overviewDomElement.appendChild(this._overviewViewportDomElement.domNode);\n        this._register(dom.addStandardDisposableListener(this._overviewDomElement, dom.EventType.POINTER_DOWN, (e) => {\n            this._modifiedEditor.delegateVerticalScrollbarPointerDown(e);\n        }));\n        if (this._options.renderOverviewRuler) {\n            this._containerDomElement.appendChild(this._overviewDomElement);\n        }\n        // Create left side\n        this._originalDomNode = document.createElement('div');\n        this._originalDomNode.className = 'editor original';\n        this._originalDomNode.style.position = 'absolute';\n        this._originalDomNode.style.height = '100%';\n        this._containerDomElement.appendChild(this._originalDomNode);\n        // Create right side\n        this._modifiedDomNode = document.createElement('div');\n        this._modifiedDomNode.className = 'editor modified';\n        this._modifiedDomNode.style.position = 'absolute';\n        this._modifiedDomNode.style.height = '100%';\n        this._containerDomElement.appendChild(this._modifiedDomNode);\n        this._beginUpdateDecorationsTimeout = -1;\n        this._currentlyChangingViewZones = false;\n        this._diffComputationToken = 0;\n        this._originalEditorState = new VisualEditorState(contextMenuService, clipboardService);\n        this._modifiedEditorState = new VisualEditorState(contextMenuService, clipboardService);\n        this._isVisible = true;\n        this._isHandlingScrollEvent = false;\n        this._elementSizeObserver = this._register(new ElementSizeObserver(this._containerDomElement, options.dimension));\n        this._register(this._elementSizeObserver.onDidChange(() => this._onDidContainerSizeChanged()));\n        if (options.automaticLayout) {\n            this._elementSizeObserver.startObserving();\n        }\n        this._diffComputationResult = null;\n        this._originalEditor = this._createLeftHandSideEditor(options, codeEditorWidgetOptions.originalEditor || {});\n        this._modifiedEditor = this._createRightHandSideEditor(options, codeEditorWidgetOptions.modifiedEditor || {});\n        this._originalOverviewRuler = null;\n        this._modifiedOverviewRuler = null;\n        this._reviewPane = instantiationService.createInstance(DiffReview, this);\n        this._containerDomElement.appendChild(this._reviewPane.domNode.domNode);\n        this._containerDomElement.appendChild(this._reviewPane.shadow.domNode);\n        this._containerDomElement.appendChild(this._reviewPane.actionBarContainer.domNode);\n        if (this._options.renderSideBySide) {\n            this._setStrategy(new DiffEditorWidgetSideBySide(this._createDataSource(), this._options.enableSplitViewResizing));\n        }\n        else {\n            this._setStrategy(new DiffEditorWidgetInline(this._createDataSource(), this._options.enableSplitViewResizing));\n        }\n        this._register(themeService.onDidColorThemeChange(t => {\n            if (this._strategy && this._strategy.applyColors(t)) {\n                this._updateDecorationsRunner.schedule();\n            }\n            this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._options.renderSideBySide);\n        }));\n        const contributions = EditorExtensionsRegistry.getDiffEditorContributions();\n        for (const desc of contributions) {\n            try {\n                this._register(instantiationService.createInstance(desc.ctor, this));\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n        }\n        this._codeEditorService.addDiffEditor(this);\n    }\n    _setState(newState) {\n        if (this._state === newState) {\n            return;\n        }\n        this._state = newState;\n        if (this._updatingDiffProgress) {\n            this._updatingDiffProgress.done();\n            this._updatingDiffProgress = null;\n        }\n        if (this._state === 1 /* editorBrowser.DiffEditorState.ComputingDiff */) {\n            this._updatingDiffProgress = this._editorProgressService.show(true, 1000);\n        }\n    }\n    diffReviewNext() {\n        this._reviewPane.next();\n    }\n    diffReviewPrev() {\n        this._reviewPane.prev();\n    }\n    static _getClassName(theme, renderSideBySide) {\n        let result = 'monaco-diff-editor monaco-editor-background ';\n        if (renderSideBySide) {\n            result += 'side-by-side ';\n        }\n        result += getThemeTypeSelector(theme.type);\n        return result;\n    }\n    _disposeOverviewRulers() {\n        if (this._originalOverviewRuler) {\n            this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode());\n            this._originalOverviewRuler.dispose();\n            this._originalOverviewRuler = null;\n        }\n        if (this._modifiedOverviewRuler) {\n            this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode());\n            this._modifiedOverviewRuler.dispose();\n            this._modifiedOverviewRuler = null;\n        }\n    }\n    _createOverviewRulers() {\n        if (!this._options.renderOverviewRuler) {\n            return;\n        }\n        assert.ok(!this._originalOverviewRuler && !this._modifiedOverviewRuler);\n        if (this._originalEditor.hasModel()) {\n            this._originalOverviewRuler = this._originalEditor.createOverviewRuler('original diffOverviewRuler');\n            this._overviewDomElement.appendChild(this._originalOverviewRuler.getDomNode());\n        }\n        if (this._modifiedEditor.hasModel()) {\n            this._modifiedOverviewRuler = this._modifiedEditor.createOverviewRuler('modified diffOverviewRuler');\n            this._overviewDomElement.appendChild(this._modifiedOverviewRuler.getDomNode());\n        }\n        this._layoutOverviewRulers();\n    }\n    _createLeftHandSideEditor(options, codeEditorWidgetOptions) {\n        const editor = this._createInnerEditor(this._instantiationService, this._originalDomNode, this._adjustOptionsForLeftHandSide(options), codeEditorWidgetOptions);\n        this._register(editor.onDidScrollChange((e) => {\n            if (this._isHandlingScrollEvent) {\n                return;\n            }\n            if (!e.scrollTopChanged && !e.scrollLeftChanged && !e.scrollHeightChanged) {\n                return;\n            }\n            this._isHandlingScrollEvent = true;\n            this._modifiedEditor.setScrollPosition({\n                scrollLeft: e.scrollLeft,\n                scrollTop: e.scrollTop\n            });\n            this._isHandlingScrollEvent = false;\n            this._layoutOverviewViewport();\n        }));\n        this._register(editor.onDidChangeViewZones(() => {\n            this._onViewZonesChanged();\n        }));\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (!editor.getModel()) {\n                return;\n            }\n            if (e.hasChanged(46 /* EditorOption.fontInfo */)) {\n                this._updateDecorationsRunner.schedule();\n            }\n            if (e.hasChanged(134 /* EditorOption.wrappingInfo */)) {\n                this._updateDecorationsRunner.cancel();\n                this._updateDecorations();\n            }\n        }));\n        this._register(editor.onDidChangeHiddenAreas(() => {\n            this._updateDecorationsRunner.cancel();\n            this._updateDecorations();\n        }));\n        this._register(editor.onDidChangeModelContent(() => {\n            if (this._isVisible) {\n                this._beginUpdateDecorationsSoon();\n            }\n        }));\n        const isInDiffLeftEditorKey = this._contextKeyService.createKey('isInDiffLeftEditor', editor.hasWidgetFocus());\n        this._register(editor.onDidFocusEditorWidget(() => isInDiffLeftEditorKey.set(true)));\n        this._register(editor.onDidBlurEditorWidget(() => isInDiffLeftEditorKey.set(false)));\n        this._register(editor.onDidContentSizeChange(e => {\n            const width = this._originalEditor.getContentWidth() + this._modifiedEditor.getContentWidth() + DiffEditorWidget.ONE_OVERVIEW_WIDTH;\n            const height = Math.max(this._modifiedEditor.getContentHeight(), this._originalEditor.getContentHeight());\n            this._onDidContentSizeChange.fire({\n                contentHeight: height,\n                contentWidth: width,\n                contentHeightChanged: e.contentHeightChanged,\n                contentWidthChanged: e.contentWidthChanged\n            });\n        }));\n        return editor;\n    }\n    _createRightHandSideEditor(options, codeEditorWidgetOptions) {\n        const editor = this._createInnerEditor(this._instantiationService, this._modifiedDomNode, this._adjustOptionsForRightHandSide(options), codeEditorWidgetOptions);\n        this._register(editor.onDidScrollChange((e) => {\n            if (this._isHandlingScrollEvent) {\n                return;\n            }\n            if (!e.scrollTopChanged && !e.scrollLeftChanged && !e.scrollHeightChanged) {\n                return;\n            }\n            this._isHandlingScrollEvent = true;\n            this._originalEditor.setScrollPosition({\n                scrollLeft: e.scrollLeft,\n                scrollTop: e.scrollTop\n            });\n            this._isHandlingScrollEvent = false;\n            this._layoutOverviewViewport();\n        }));\n        this._register(editor.onDidChangeViewZones(() => {\n            this._onViewZonesChanged();\n        }));\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (!editor.getModel()) {\n                return;\n            }\n            if (e.hasChanged(46 /* EditorOption.fontInfo */)) {\n                this._updateDecorationsRunner.schedule();\n            }\n            if (e.hasChanged(134 /* EditorOption.wrappingInfo */)) {\n                this._updateDecorationsRunner.cancel();\n                this._updateDecorations();\n            }\n        }));\n        this._register(editor.onDidChangeHiddenAreas(() => {\n            this._updateDecorationsRunner.cancel();\n            this._updateDecorations();\n        }));\n        this._register(editor.onDidChangeModelContent(() => {\n            if (this._isVisible) {\n                this._beginUpdateDecorationsSoon();\n            }\n        }));\n        this._register(editor.onDidChangeModelOptions((e) => {\n            if (e.tabSize) {\n                this._updateDecorationsRunner.schedule();\n            }\n        }));\n        const isInDiffRightEditorKey = this._contextKeyService.createKey('isInDiffRightEditor', editor.hasWidgetFocus());\n        this._register(editor.onDidFocusEditorWidget(() => isInDiffRightEditorKey.set(true)));\n        this._register(editor.onDidBlurEditorWidget(() => isInDiffRightEditorKey.set(false)));\n        this._register(editor.onDidContentSizeChange(e => {\n            const width = this._originalEditor.getContentWidth() + this._modifiedEditor.getContentWidth() + DiffEditorWidget.ONE_OVERVIEW_WIDTH;\n            const height = Math.max(this._modifiedEditor.getContentHeight(), this._originalEditor.getContentHeight());\n            this._onDidContentSizeChange.fire({\n                contentHeight: height,\n                contentWidth: width,\n                contentHeightChanged: e.contentHeightChanged,\n                contentWidthChanged: e.contentWidthChanged\n            });\n        }));\n        // Revert change when an arrow is clicked.\n        this._register(editor.onMouseDown(event => {\n            var _a, _b;\n            if (!event.event.rightButton && event.target.position && ((_a = event.target.element) === null || _a === void 0 ? void 0 : _a.className.includes('arrow-revert-change'))) {\n                const lineNumber = event.target.position.lineNumber;\n                const change = (_b = this._diffComputationResult) === null || _b === void 0 ? void 0 : _b.changes.find(c => c.modifiedStartLineNumber === lineNumber - 1 || c.modifiedStartLineNumber === lineNumber);\n                if (change) {\n                    this.revertChange(change);\n                }\n                event.event.stopPropagation();\n                this._updateDecorations();\n                return;\n            }\n        }));\n        return editor;\n    }\n    /**\n     * Reverts a change in the modified editor.\n     */\n    revertChange(change) {\n        const editor = this._modifiedEditor;\n        const original = this._originalEditor.getModel();\n        const modified = this._modifiedEditor.getModel();\n        if (!original || !modified || !editor) {\n            return;\n        }\n        const originalRange = change.originalEndLineNumber > 0 ? new Range(change.originalStartLineNumber, 1, change.originalEndLineNumber, original.getLineMaxColumn(change.originalEndLineNumber)) : null;\n        const originalContent = originalRange ? original.getValueInRange(originalRange) : null;\n        const newRange = change.modifiedEndLineNumber > 0 ? new Range(change.modifiedStartLineNumber, 1, change.modifiedEndLineNumber, modified.getLineMaxColumn(change.modifiedEndLineNumber)) : null;\n        const eol = modified.getEOL();\n        if (change.originalEndLineNumber === 0 && newRange) {\n            // Insert change.\n            // To revert: delete the new content and a linebreak (if possible)\n            let range = newRange;\n            if (change.modifiedStartLineNumber > 1) {\n                // Try to include a linebreak from before.\n                range = newRange.setStartPosition(change.modifiedStartLineNumber - 1, modified.getLineMaxColumn(change.modifiedStartLineNumber - 1));\n            }\n            else if (change.modifiedEndLineNumber < modified.getLineCount()) {\n                // Try to include the linebreak from after.\n                range = newRange.setEndPosition(change.modifiedEndLineNumber + 1, 1);\n            }\n            editor.executeEdits('diffEditor', [{\n                    range,\n                    text: '',\n                }]);\n        }\n        else if (change.modifiedEndLineNumber === 0 && originalContent !== null) {\n            // Delete change.\n            // To revert: insert the old content and a linebreak.\n            const insertAt = change.modifiedStartLineNumber < modified.getLineCount() ? new Position(change.modifiedStartLineNumber + 1, 1) : new Position(change.modifiedStartLineNumber, modified.getLineMaxColumn(change.modifiedStartLineNumber));\n            editor.executeEdits('diffEditor', [{\n                    range: Range.fromPositions(insertAt, insertAt),\n                    text: change.modifiedStartLineNumber < modified.getLineCount() ? originalContent + eol : eol + originalContent,\n                }]);\n        }\n        else if (newRange && originalContent !== null) {\n            // Modified change.\n            editor.executeEdits('diffEditor', [{\n                    range: newRange,\n                    text: originalContent,\n                }]);\n        }\n    }\n    _createInnerEditor(instantiationService, container, options, editorWidgetOptions) {\n        return instantiationService.createInstance(CodeEditorWidget, container, options, editorWidgetOptions);\n    }\n    dispose() {\n        this._codeEditorService.removeDiffEditor(this);\n        if (this._beginUpdateDecorationsTimeout !== -1) {\n            window.clearTimeout(this._beginUpdateDecorationsTimeout);\n            this._beginUpdateDecorationsTimeout = -1;\n        }\n        this._cleanViewZonesAndDecorations();\n        if (this._originalOverviewRuler) {\n            this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode());\n            this._originalOverviewRuler.dispose();\n        }\n        if (this._modifiedOverviewRuler) {\n            this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode());\n            this._modifiedOverviewRuler.dispose();\n        }\n        this._overviewDomElement.removeChild(this._overviewViewportDomElement.domNode);\n        if (this._options.renderOverviewRuler) {\n            this._containerDomElement.removeChild(this._overviewDomElement);\n        }\n        this._containerDomElement.removeChild(this._originalDomNode);\n        this._originalEditor.dispose();\n        this._containerDomElement.removeChild(this._modifiedDomNode);\n        this._modifiedEditor.dispose();\n        this._strategy.dispose();\n        this._containerDomElement.removeChild(this._reviewPane.domNode.domNode);\n        this._containerDomElement.removeChild(this._reviewPane.shadow.domNode);\n        this._containerDomElement.removeChild(this._reviewPane.actionBarContainer.domNode);\n        this._reviewPane.dispose();\n        this._domElement.removeChild(this._containerDomElement);\n        this._onDidDispose.fire();\n        super.dispose();\n    }\n    //------------ begin IDiffEditor methods\n    getId() {\n        return this.getEditorType() + ':' + this._id;\n    }\n    getEditorType() {\n        return editorCommon.EditorType.IDiffEditor;\n    }\n    getLineChanges() {\n        if (!this._diffComputationResult) {\n            return null;\n        }\n        return this._diffComputationResult.changes;\n    }\n    getOriginalEditor() {\n        return this._originalEditor;\n    }\n    getModifiedEditor() {\n        return this._modifiedEditor;\n    }\n    updateOptions(_newOptions) {\n        const newOptions = validateDiffEditorOptions(_newOptions, this._options);\n        const changed = changedDiffEditorOptions(this._options, newOptions);\n        this._options = newOptions;\n        const beginUpdateDecorations = (changed.ignoreTrimWhitespace || changed.renderIndicators || changed.renderMarginRevertIcon);\n        const beginUpdateDecorationsSoon = (this._isVisible && (changed.maxComputationTime || changed.maxFileSize));\n        if (beginUpdateDecorations) {\n            this._beginUpdateDecorations();\n        }\n        else if (beginUpdateDecorationsSoon) {\n            this._beginUpdateDecorationsSoon();\n        }\n        this._modifiedEditor.updateOptions(this._adjustOptionsForRightHandSide(_newOptions));\n        this._originalEditor.updateOptions(this._adjustOptionsForLeftHandSide(_newOptions));\n        // enableSplitViewResizing\n        this._strategy.setEnableSplitViewResizing(this._options.enableSplitViewResizing);\n        // renderSideBySide\n        if (changed.renderSideBySide) {\n            if (this._options.renderSideBySide) {\n                this._setStrategy(new DiffEditorWidgetSideBySide(this._createDataSource(), this._options.enableSplitViewResizing));\n            }\n            else {\n                this._setStrategy(new DiffEditorWidgetInline(this._createDataSource(), this._options.enableSplitViewResizing));\n            }\n            // Update class name\n            this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._options.renderSideBySide);\n        }\n        // renderOverviewRuler\n        if (changed.renderOverviewRuler) {\n            if (this._options.renderOverviewRuler) {\n                this._containerDomElement.appendChild(this._overviewDomElement);\n            }\n            else {\n                this._containerDomElement.removeChild(this._overviewDomElement);\n            }\n        }\n    }\n    getModel() {\n        return {\n            original: this._originalEditor.getModel(),\n            modified: this._modifiedEditor.getModel()\n        };\n    }\n    setModel(model) {\n        // Guard us against partial null model\n        if (model && (!model.original || !model.modified)) {\n            throw new Error(!model.original ? 'DiffEditorWidget.setModel: Original model is null' : 'DiffEditorWidget.setModel: Modified model is null');\n        }\n        // Remove all view zones & decorations\n        this._cleanViewZonesAndDecorations();\n        this._disposeOverviewRulers();\n        // Update code editor models\n        this._originalEditor.setModel(model ? model.original : null);\n        this._modifiedEditor.setModel(model ? model.modified : null);\n        this._updateDecorationsRunner.cancel();\n        // this.originalEditor.onDidChangeModelOptions\n        if (model) {\n            this._originalEditor.setScrollTop(0);\n            this._modifiedEditor.setScrollTop(0);\n        }\n        // Disable any diff computations that will come in\n        this._diffComputationResult = null;\n        this._diffComputationToken++;\n        this._setState(0 /* editorBrowser.DiffEditorState.Idle */);\n        if (model) {\n            this._createOverviewRulers();\n            // Begin comparing\n            this._beginUpdateDecorations();\n        }\n        this._layoutOverviewViewport();\n    }\n    getContainerDomNode() {\n        return this._domElement;\n    }\n    getVisibleColumnFromPosition(position) {\n        return this._modifiedEditor.getVisibleColumnFromPosition(position);\n    }\n    getPosition() {\n        return this._modifiedEditor.getPosition();\n    }\n    setPosition(position, source = 'api') {\n        this._modifiedEditor.setPosition(position, source);\n    }\n    revealLine(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLine(lineNumber, scrollType);\n    }\n    revealLineInCenter(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLineInCenter(lineNumber, scrollType);\n    }\n    revealLineInCenterIfOutsideViewport(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLineInCenterIfOutsideViewport(lineNumber, scrollType);\n    }\n    revealLineNearTop(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLineNearTop(lineNumber, scrollType);\n    }\n    revealPosition(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealPosition(position, scrollType);\n    }\n    revealPositionInCenter(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealPositionInCenter(position, scrollType);\n    }\n    revealPositionInCenterIfOutsideViewport(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealPositionInCenterIfOutsideViewport(position, scrollType);\n    }\n    revealPositionNearTop(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealPositionNearTop(position, scrollType);\n    }\n    getSelection() {\n        return this._modifiedEditor.getSelection();\n    }\n    getSelections() {\n        return this._modifiedEditor.getSelections();\n    }\n    setSelection(something, source = 'api') {\n        this._modifiedEditor.setSelection(something, source);\n    }\n    setSelections(ranges, source = 'api') {\n        this._modifiedEditor.setSelections(ranges, source);\n    }\n    revealLines(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLines(startLineNumber, endLineNumber, scrollType);\n    }\n    revealLinesInCenter(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLinesInCenter(startLineNumber, endLineNumber, scrollType);\n    }\n    revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType);\n    }\n    revealLinesNearTop(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealLinesNearTop(startLineNumber, endLineNumber, scrollType);\n    }\n    revealRange(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */, revealVerticalInCenter = false, revealHorizontal = true) {\n        this._modifiedEditor.revealRange(range, scrollType, revealVerticalInCenter, revealHorizontal);\n    }\n    revealRangeInCenter(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealRangeInCenter(range, scrollType);\n    }\n    revealRangeInCenterIfOutsideViewport(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealRangeInCenterIfOutsideViewport(range, scrollType);\n    }\n    revealRangeNearTop(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealRangeNearTop(range, scrollType);\n    }\n    revealRangeNearTopIfOutsideViewport(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealRangeNearTopIfOutsideViewport(range, scrollType);\n    }\n    revealRangeAtTop(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._modifiedEditor.revealRangeAtTop(range, scrollType);\n    }\n    getSupportedActions() {\n        return this._modifiedEditor.getSupportedActions();\n    }\n    saveViewState() {\n        const originalViewState = this._originalEditor.saveViewState();\n        const modifiedViewState = this._modifiedEditor.saveViewState();\n        return {\n            original: originalViewState,\n            modified: modifiedViewState\n        };\n    }\n    restoreViewState(s) {\n        if (s && s.original && s.modified) {\n            const diffEditorState = s;\n            this._originalEditor.restoreViewState(diffEditorState.original);\n            this._modifiedEditor.restoreViewState(diffEditorState.modified);\n        }\n    }\n    layout(dimension) {\n        this._elementSizeObserver.observe(dimension);\n    }\n    focus() {\n        this._modifiedEditor.focus();\n    }\n    hasTextFocus() {\n        return this._originalEditor.hasTextFocus() || this._modifiedEditor.hasTextFocus();\n    }\n    trigger(source, handlerId, payload) {\n        this._modifiedEditor.trigger(source, handlerId, payload);\n    }\n    createDecorationsCollection(decorations) {\n        return this._modifiedEditor.createDecorationsCollection(decorations);\n    }\n    changeDecorations(callback) {\n        return this._modifiedEditor.changeDecorations(callback);\n    }\n    //------------ end IDiffEditor methods\n    //------------ begin layouting methods\n    _onDidContainerSizeChanged() {\n        this._doLayout();\n    }\n    _getReviewHeight() {\n        return this._reviewPane.isVisible() ? this._elementSizeObserver.getHeight() : 0;\n    }\n    _layoutOverviewRulers() {\n        if (!this._options.renderOverviewRuler) {\n            return;\n        }\n        if (!this._originalOverviewRuler || !this._modifiedOverviewRuler) {\n            return;\n        }\n        const height = this._elementSizeObserver.getHeight();\n        const reviewHeight = this._getReviewHeight();\n        const freeSpace = DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH - 2 * DiffEditorWidget.ONE_OVERVIEW_WIDTH;\n        const layoutInfo = this._modifiedEditor.getLayoutInfo();\n        if (layoutInfo) {\n            this._originalOverviewRuler.setLayout({\n                top: 0,\n                width: DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n                right: freeSpace + DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n                height: (height - reviewHeight)\n            });\n            this._modifiedOverviewRuler.setLayout({\n                top: 0,\n                right: 0,\n                width: DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n                height: (height - reviewHeight)\n            });\n        }\n    }\n    //------------ end layouting methods\n    _onViewZonesChanged() {\n        if (this._currentlyChangingViewZones) {\n            return;\n        }\n        this._updateDecorationsRunner.schedule();\n    }\n    _beginUpdateDecorationsSoon() {\n        // Clear previous timeout if necessary\n        if (this._beginUpdateDecorationsTimeout !== -1) {\n            window.clearTimeout(this._beginUpdateDecorationsTimeout);\n            this._beginUpdateDecorationsTimeout = -1;\n        }\n        this._beginUpdateDecorationsTimeout = window.setTimeout(() => this._beginUpdateDecorations(), DiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY);\n    }\n    static _equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        if (!a || !b) {\n            return false;\n        }\n        return (a.toString() === b.toString());\n    }\n    _beginUpdateDecorations() {\n        this._beginUpdateDecorationsTimeout = -1;\n        const currentOriginalModel = this._originalEditor.getModel();\n        const currentModifiedModel = this._modifiedEditor.getModel();\n        if (!currentOriginalModel || !currentModifiedModel) {\n            return;\n        }\n        // Prevent old diff requests to come if a new request has been initiated\n        // The best method would be to call cancel on the Promise, but this is not\n        // yet supported, so using tokens for now.\n        this._diffComputationToken++;\n        const currentToken = this._diffComputationToken;\n        const diffLimit = this._options.maxFileSize * 1024 * 1024; // MB\n        const canSyncModelForDiff = (model) => {\n            const bufferTextLength = model.getValueLength();\n            return (diffLimit === 0 || bufferTextLength <= diffLimit);\n        };\n        if (!canSyncModelForDiff(currentOriginalModel) || !canSyncModelForDiff(currentModifiedModel)) {\n            if (!DiffEditorWidget._equals(currentOriginalModel.uri, this._lastOriginalWarning)\n                || !DiffEditorWidget._equals(currentModifiedModel.uri, this._lastModifiedWarning)) {\n                this._lastOriginalWarning = currentOriginalModel.uri;\n                this._lastModifiedWarning = currentModifiedModel.uri;\n                this._notificationService.warn(nls.localize(\"diff.tooLarge\", \"Cannot compare files because one file is too large.\"));\n            }\n            return;\n        }\n        this._setState(1 /* editorBrowser.DiffEditorState.ComputingDiff */);\n        this._editorWorkerService.computeDiff(currentOriginalModel.uri, currentModifiedModel.uri, this._options.ignoreTrimWhitespace, this._options.maxComputationTime).then((result) => {\n            if (currentToken === this._diffComputationToken\n                && currentOriginalModel === this._originalEditor.getModel()\n                && currentModifiedModel === this._modifiedEditor.getModel()) {\n                this._setState(2 /* editorBrowser.DiffEditorState.DiffComputed */);\n                this._diffComputationResult = result;\n                this._updateDecorationsRunner.schedule();\n                this._onDidUpdateDiff.fire();\n            }\n        }, (error) => {\n            if (currentToken === this._diffComputationToken\n                && currentOriginalModel === this._originalEditor.getModel()\n                && currentModifiedModel === this._modifiedEditor.getModel()) {\n                this._setState(2 /* editorBrowser.DiffEditorState.DiffComputed */);\n                this._diffComputationResult = null;\n                this._updateDecorationsRunner.schedule();\n            }\n        });\n    }\n    _cleanViewZonesAndDecorations() {\n        this._originalEditorState.clean(this._originalEditor);\n        this._modifiedEditorState.clean(this._modifiedEditor);\n    }\n    _updateDecorations() {\n        if (!this._originalEditor.getModel() || !this._modifiedEditor.getModel()) {\n            return;\n        }\n        const lineChanges = (this._diffComputationResult ? this._diffComputationResult.changes : []);\n        const foreignOriginal = this._originalEditorState.getForeignViewZones(this._originalEditor.getWhitespaces());\n        const foreignModified = this._modifiedEditorState.getForeignViewZones(this._modifiedEditor.getWhitespaces());\n        const diffDecorations = this._strategy.getEditorsDiffDecorations(lineChanges, this._options.ignoreTrimWhitespace, this._options.renderIndicators, this._options.renderMarginRevertIcon, foreignOriginal, foreignModified);\n        try {\n            this._currentlyChangingViewZones = true;\n            this._originalEditorState.apply(this._originalEditor, this._originalOverviewRuler, diffDecorations.original, false);\n            this._modifiedEditorState.apply(this._modifiedEditor, this._modifiedOverviewRuler, diffDecorations.modified, true);\n        }\n        finally {\n            this._currentlyChangingViewZones = false;\n        }\n    }\n    _adjustOptionsForSubEditor(options) {\n        const clonedOptions = Object.assign({}, options);\n        clonedOptions.inDiffEditor = true;\n        clonedOptions.automaticLayout = false;\n        // Clone scrollbar options before changing them\n        clonedOptions.scrollbar = Object.assign({}, (clonedOptions.scrollbar || {}));\n        clonedOptions.scrollbar.vertical = 'visible';\n        clonedOptions.folding = false;\n        clonedOptions.codeLens = this._options.diffCodeLens;\n        clonedOptions.fixedOverflowWidgets = true;\n        // clonedOptions.lineDecorationsWidth = '2ch';\n        // Clone minimap options before changing them\n        clonedOptions.minimap = Object.assign({}, (clonedOptions.minimap || {}));\n        clonedOptions.minimap.enabled = false;\n        return clonedOptions;\n    }\n    _adjustOptionsForLeftHandSide(options) {\n        const result = this._adjustOptionsForSubEditor(options);\n        if (!this._options.renderSideBySide) {\n            // never wrap hidden editor\n            result.wordWrapOverride1 = 'off';\n            result.wordWrapOverride2 = 'off';\n        }\n        else {\n            result.wordWrapOverride1 = this._options.diffWordWrap;\n        }\n        if (options.originalAriaLabel) {\n            result.ariaLabel = options.originalAriaLabel;\n        }\n        result.readOnly = !this._options.originalEditable;\n        result.dropIntoEditor = { enabled: !result.readOnly };\n        result.extraEditorClassName = 'original-in-monaco-diff-editor';\n        return Object.assign(Object.assign({}, result), { dimension: {\n                height: 0,\n                width: 0\n            } });\n    }\n    _adjustOptionsForRightHandSide(options) {\n        const result = this._adjustOptionsForSubEditor(options);\n        if (options.modifiedAriaLabel) {\n            result.ariaLabel = options.modifiedAriaLabel;\n        }\n        result.wordWrapOverride1 = this._options.diffWordWrap;\n        result.revealHorizontalRightPadding = EditorOptions.revealHorizontalRightPadding.defaultValue + DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH;\n        result.scrollbar.verticalHasArrows = false;\n        result.extraEditorClassName = 'modified-in-monaco-diff-editor';\n        return Object.assign(Object.assign({}, result), { dimension: {\n                height: 0,\n                width: 0\n            } });\n    }\n    doLayout() {\n        this._elementSizeObserver.observe();\n        this._doLayout();\n    }\n    _doLayout() {\n        const width = this._elementSizeObserver.getWidth();\n        const height = this._elementSizeObserver.getHeight();\n        const reviewHeight = this._getReviewHeight();\n        const splitPoint = this._strategy.layout();\n        this._originalDomNode.style.width = splitPoint + 'px';\n        this._originalDomNode.style.left = '0px';\n        this._modifiedDomNode.style.width = (width - splitPoint) + 'px';\n        this._modifiedDomNode.style.left = splitPoint + 'px';\n        this._overviewDomElement.style.top = '0px';\n        this._overviewDomElement.style.height = (height - reviewHeight) + 'px';\n        this._overviewDomElement.style.width = DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH + 'px';\n        this._overviewDomElement.style.left = (width - DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH) + 'px';\n        this._overviewViewportDomElement.setWidth(DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH);\n        this._overviewViewportDomElement.setHeight(30);\n        this._originalEditor.layout({ width: splitPoint, height: (height - reviewHeight) });\n        this._modifiedEditor.layout({ width: width - splitPoint - (this._options.renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0), height: (height - reviewHeight) });\n        if (this._originalOverviewRuler || this._modifiedOverviewRuler) {\n            this._layoutOverviewRulers();\n        }\n        this._reviewPane.layout(height - reviewHeight, width, reviewHeight);\n        this._layoutOverviewViewport();\n    }\n    _layoutOverviewViewport() {\n        const layout = this._computeOverviewViewport();\n        if (!layout) {\n            this._overviewViewportDomElement.setTop(0);\n            this._overviewViewportDomElement.setHeight(0);\n        }\n        else {\n            this._overviewViewportDomElement.setTop(layout.top);\n            this._overviewViewportDomElement.setHeight(layout.height);\n        }\n    }\n    _computeOverviewViewport() {\n        const layoutInfo = this._modifiedEditor.getLayoutInfo();\n        if (!layoutInfo) {\n            return null;\n        }\n        const scrollTop = this._modifiedEditor.getScrollTop();\n        const scrollHeight = this._modifiedEditor.getScrollHeight();\n        const computedAvailableSize = Math.max(0, layoutInfo.height);\n        const computedRepresentableSize = Math.max(0, computedAvailableSize - 2 * 0);\n        const computedRatio = scrollHeight > 0 ? (computedRepresentableSize / scrollHeight) : 0;\n        const computedSliderSize = Math.max(0, Math.floor(layoutInfo.height * computedRatio));\n        const computedSliderPosition = Math.floor(scrollTop * computedRatio);\n        return {\n            height: computedSliderSize,\n            top: computedSliderPosition\n        };\n    }\n    _createDataSource() {\n        return {\n            getWidth: () => {\n                return this._elementSizeObserver.getWidth();\n            },\n            getHeight: () => {\n                return (this._elementSizeObserver.getHeight() - this._getReviewHeight());\n            },\n            getOptions: () => {\n                return {\n                    renderOverviewRuler: this._options.renderOverviewRuler\n                };\n            },\n            getContainerDomNode: () => {\n                return this._containerDomElement;\n            },\n            relayoutEditors: () => {\n                this._doLayout();\n            },\n            getOriginalEditor: () => {\n                return this._originalEditor;\n            },\n            getModifiedEditor: () => {\n                return this._modifiedEditor;\n            }\n        };\n    }\n    _setStrategy(newStrategy) {\n        if (this._strategy) {\n            this._strategy.dispose();\n        }\n        this._strategy = newStrategy;\n        newStrategy.applyColors(this._themeService.getColorTheme());\n        if (this._diffComputationResult) {\n            this._updateDecorations();\n        }\n        // Just do a layout, the strategy might need it\n        this._doLayout();\n    }\n    _getLineChangeAtOrBeforeLineNumber(lineNumber, startLineNumberExtractor) {\n        const lineChanges = (this._diffComputationResult ? this._diffComputationResult.changes : []);\n        if (lineChanges.length === 0 || lineNumber < startLineNumberExtractor(lineChanges[0])) {\n            // There are no changes or `lineNumber` is before the first change\n            return null;\n        }\n        let min = 0;\n        let max = lineChanges.length - 1;\n        while (min < max) {\n            const mid = Math.floor((min + max) / 2);\n            const midStart = startLineNumberExtractor(lineChanges[mid]);\n            const midEnd = (mid + 1 <= max ? startLineNumberExtractor(lineChanges[mid + 1]) : 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n            if (lineNumber < midStart) {\n                max = mid - 1;\n            }\n            else if (lineNumber >= midEnd) {\n                min = mid + 1;\n            }\n            else {\n                // HIT!\n                min = mid;\n                max = mid;\n            }\n        }\n        return lineChanges[min];\n    }\n    _getEquivalentLineForOriginalLineNumber(lineNumber) {\n        const lineChange = this._getLineChangeAtOrBeforeLineNumber(lineNumber, (lineChange) => lineChange.originalStartLineNumber);\n        if (!lineChange) {\n            return lineNumber;\n        }\n        const originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n        const modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n        const lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? (lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1) : 0);\n        const lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? (lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1) : 0);\n        const delta = lineNumber - originalEquivalentLineNumber;\n        if (delta <= lineChangeOriginalLength) {\n            return modifiedEquivalentLineNumber + Math.min(delta, lineChangeModifiedLength);\n        }\n        return modifiedEquivalentLineNumber + lineChangeModifiedLength - lineChangeOriginalLength + delta;\n    }\n    _getEquivalentLineForModifiedLineNumber(lineNumber) {\n        const lineChange = this._getLineChangeAtOrBeforeLineNumber(lineNumber, (lineChange) => lineChange.modifiedStartLineNumber);\n        if (!lineChange) {\n            return lineNumber;\n        }\n        const originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n        const modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n        const lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? (lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1) : 0);\n        const lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? (lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1) : 0);\n        const delta = lineNumber - modifiedEquivalentLineNumber;\n        if (delta <= lineChangeModifiedLength) {\n            return originalEquivalentLineNumber + Math.min(delta, lineChangeOriginalLength);\n        }\n        return originalEquivalentLineNumber + lineChangeOriginalLength - lineChangeModifiedLength + delta;\n    }\n    getDiffLineInformationForOriginal(lineNumber) {\n        if (!this._diffComputationResult) {\n            // Cannot answer that which I don't know\n            return null;\n        }\n        return {\n            equivalentLineNumber: this._getEquivalentLineForOriginalLineNumber(lineNumber)\n        };\n    }\n    getDiffLineInformationForModified(lineNumber) {\n        if (!this._diffComputationResult) {\n            // Cannot answer that which I don't know\n            return null;\n        }\n        return {\n            equivalentLineNumber: this._getEquivalentLineForModifiedLineNumber(lineNumber)\n        };\n    }\n};\nDiffEditorWidget.ONE_OVERVIEW_WIDTH = 15;\nDiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH = 30;\nDiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY = 200; // ms\nDiffEditorWidget = __decorate([\n    __param(3, IClipboardService),\n    __param(4, IEditorWorkerService),\n    __param(5, IContextKeyService),\n    __param(6, IInstantiationService),\n    __param(7, ICodeEditorService),\n    __param(8, IThemeService),\n    __param(9, INotificationService),\n    __param(10, IContextMenuService),\n    __param(11, IEditorProgressService)\n], DiffEditorWidget);\nexport { DiffEditorWidget };\nclass DiffEditorWidgetStyle extends Disposable {\n    constructor(dataSource) {\n        super();\n        this._dataSource = dataSource;\n        this._insertColor = null;\n        this._removeColor = null;\n    }\n    applyColors(theme) {\n        const newInsertColor = theme.getColor(diffOverviewRulerInserted) || (theme.getColor(diffInserted) || defaultInsertColor).transparent(2);\n        const newRemoveColor = theme.getColor(diffOverviewRulerRemoved) || (theme.getColor(diffRemoved) || defaultRemoveColor).transparent(2);\n        const hasChanges = !newInsertColor.equals(this._insertColor) || !newRemoveColor.equals(this._removeColor);\n        this._insertColor = newInsertColor;\n        this._removeColor = newRemoveColor;\n        return hasChanges;\n    }\n    getEditorsDiffDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators, renderMarginRevertIcon, originalWhitespaces, modifiedWhitespaces) {\n        // Get view zones\n        modifiedWhitespaces = modifiedWhitespaces.sort((a, b) => {\n            return a.afterLineNumber - b.afterLineNumber;\n        });\n        originalWhitespaces = originalWhitespaces.sort((a, b) => {\n            return a.afterLineNumber - b.afterLineNumber;\n        });\n        const zones = this._getViewZones(lineChanges, originalWhitespaces, modifiedWhitespaces, renderIndicators);\n        // Get decorations & overview ruler zones\n        const originalDecorations = this._getOriginalEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators);\n        const modifiedDecorations = this._getModifiedEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators, renderMarginRevertIcon);\n        return {\n            original: {\n                decorations: originalDecorations.decorations,\n                overviewZones: originalDecorations.overviewZones,\n                zones: zones.original\n            },\n            modified: {\n                decorations: modifiedDecorations.decorations,\n                overviewZones: modifiedDecorations.overviewZones,\n                zones: zones.modified\n            }\n        };\n    }\n}\nclass ForeignViewZonesIterator {\n    constructor(source) {\n        this._source = source;\n        this._index = -1;\n        this.current = null;\n        this.advance();\n    }\n    advance() {\n        this._index++;\n        if (this._index < this._source.length) {\n            this.current = this._source[this._index];\n        }\n        else {\n            this.current = null;\n        }\n    }\n}\nclass ViewZonesComputer {\n    constructor(_lineChanges, _originalForeignVZ, _modifiedForeignVZ, _originalEditor, _modifiedEditor) {\n        this._lineChanges = _lineChanges;\n        this._originalForeignVZ = _originalForeignVZ;\n        this._modifiedForeignVZ = _modifiedForeignVZ;\n        this._originalEditor = _originalEditor;\n        this._modifiedEditor = _modifiedEditor;\n    }\n    static _getViewLineCount(editor, startLineNumber, endLineNumber) {\n        const model = editor.getModel();\n        const viewModel = editor._getViewModel();\n        if (model && viewModel) {\n            const viewRange = getViewRange(model, viewModel, startLineNumber, endLineNumber);\n            return (viewRange.endLineNumber - viewRange.startLineNumber + 1);\n        }\n        return (endLineNumber - startLineNumber + 1);\n    }\n    getViewZones() {\n        const originalLineHeight = this._originalEditor.getOption(61 /* EditorOption.lineHeight */);\n        const modifiedLineHeight = this._modifiedEditor.getOption(61 /* EditorOption.lineHeight */);\n        const originalHasWrapping = (this._originalEditor.getOption(134 /* EditorOption.wrappingInfo */).wrappingColumn !== -1);\n        const modifiedHasWrapping = (this._modifiedEditor.getOption(134 /* EditorOption.wrappingInfo */).wrappingColumn !== -1);\n        const hasWrapping = (originalHasWrapping || modifiedHasWrapping);\n        const originalModel = this._originalEditor.getModel();\n        const originalCoordinatesConverter = this._originalEditor._getViewModel().coordinatesConverter;\n        const modifiedCoordinatesConverter = this._modifiedEditor._getViewModel().coordinatesConverter;\n        const result = {\n            original: [],\n            modified: []\n        };\n        let lineChangeModifiedLength = 0;\n        let lineChangeOriginalLength = 0;\n        let originalEquivalentLineNumber = 0;\n        let modifiedEquivalentLineNumber = 0;\n        let originalEndEquivalentLineNumber = 0;\n        let modifiedEndEquivalentLineNumber = 0;\n        const sortMyViewZones = (a, b) => {\n            return a.afterLineNumber - b.afterLineNumber;\n        };\n        const addAndCombineIfPossible = (destination, item) => {\n            if (item.domNode === null && destination.length > 0) {\n                const lastItem = destination[destination.length - 1];\n                if (lastItem.afterLineNumber === item.afterLineNumber && lastItem.domNode === null) {\n                    lastItem.heightInLines += item.heightInLines;\n                    return;\n                }\n            }\n            destination.push(item);\n        };\n        const modifiedForeignVZ = new ForeignViewZonesIterator(this._modifiedForeignVZ);\n        const originalForeignVZ = new ForeignViewZonesIterator(this._originalForeignVZ);\n        let lastOriginalLineNumber = 1;\n        let lastModifiedLineNumber = 1;\n        // In order to include foreign view zones after the last line change, the for loop will iterate once more after the end of the `lineChanges` array\n        for (let i = 0, length = this._lineChanges.length; i <= length; i++) {\n            const lineChange = (i < length ? this._lineChanges[i] : null);\n            if (lineChange !== null) {\n                originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n                modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n                lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? ViewZonesComputer._getViewLineCount(this._originalEditor, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber) : 0);\n                lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? ViewZonesComputer._getViewLineCount(this._modifiedEditor, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber) : 0);\n                originalEndEquivalentLineNumber = Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\n                modifiedEndEquivalentLineNumber = Math.max(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\n            }\n            else {\n                // Increase to very large value to get the producing tests of foreign view zones running\n                originalEquivalentLineNumber += 10000000 + lineChangeOriginalLength;\n                modifiedEquivalentLineNumber += 10000000 + lineChangeModifiedLength;\n                originalEndEquivalentLineNumber = originalEquivalentLineNumber;\n                modifiedEndEquivalentLineNumber = modifiedEquivalentLineNumber;\n            }\n            // Each step produces view zones, and after producing them, we try to cancel them out, to avoid empty-empty view zone cases\n            let stepOriginal = [];\n            let stepModified = [];\n            // ---------------------------- PRODUCE VIEW ZONES\n            // [PRODUCE] View zones due to line mapping differences (equal lines but wrapped differently)\n            if (hasWrapping) {\n                let count;\n                if (lineChange) {\n                    if (lineChange.originalEndLineNumber > 0) {\n                        count = lineChange.originalStartLineNumber - lastOriginalLineNumber;\n                    }\n                    else {\n                        count = lineChange.modifiedStartLineNumber - lastModifiedLineNumber;\n                    }\n                }\n                else {\n                    // `lastOriginalLineNumber` has not been looked at yet\n                    count = originalModel.getLineCount() - lastOriginalLineNumber + 1;\n                }\n                for (let i = 0; i < count; i++) {\n                    const originalLineNumber = lastOriginalLineNumber + i;\n                    const modifiedLineNumber = lastModifiedLineNumber + i;\n                    const originalViewLineCount = originalCoordinatesConverter.getModelLineViewLineCount(originalLineNumber);\n                    const modifiedViewLineCount = modifiedCoordinatesConverter.getModelLineViewLineCount(modifiedLineNumber);\n                    if (originalViewLineCount < modifiedViewLineCount) {\n                        stepOriginal.push({\n                            afterLineNumber: originalLineNumber,\n                            heightInLines: modifiedViewLineCount - originalViewLineCount,\n                            domNode: null,\n                            marginDomNode: null\n                        });\n                    }\n                    else if (originalViewLineCount > modifiedViewLineCount) {\n                        stepModified.push({\n                            afterLineNumber: modifiedLineNumber,\n                            heightInLines: originalViewLineCount - modifiedViewLineCount,\n                            domNode: null,\n                            marginDomNode: null\n                        });\n                    }\n                }\n                if (lineChange) {\n                    lastOriginalLineNumber = (lineChange.originalEndLineNumber > 0 ? lineChange.originalEndLineNumber : lineChange.originalStartLineNumber) + 1;\n                    lastModifiedLineNumber = (lineChange.modifiedEndLineNumber > 0 ? lineChange.modifiedEndLineNumber : lineChange.modifiedStartLineNumber) + 1;\n                }\n            }\n            // [PRODUCE] View zone(s) in original-side due to foreign view zone(s) in modified-side\n            while (modifiedForeignVZ.current && modifiedForeignVZ.current.afterLineNumber <= modifiedEndEquivalentLineNumber) {\n                let viewZoneLineNumber;\n                if (modifiedForeignVZ.current.afterLineNumber <= modifiedEquivalentLineNumber) {\n                    viewZoneLineNumber = originalEquivalentLineNumber - modifiedEquivalentLineNumber + modifiedForeignVZ.current.afterLineNumber;\n                }\n                else {\n                    viewZoneLineNumber = originalEndEquivalentLineNumber;\n                }\n                let marginDomNode = null;\n                if (lineChange && lineChange.modifiedStartLineNumber <= modifiedForeignVZ.current.afterLineNumber && modifiedForeignVZ.current.afterLineNumber <= lineChange.modifiedEndLineNumber) {\n                    marginDomNode = this._createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion();\n                }\n                stepOriginal.push({\n                    afterLineNumber: viewZoneLineNumber,\n                    heightInLines: modifiedForeignVZ.current.height / modifiedLineHeight,\n                    domNode: null,\n                    marginDomNode: marginDomNode\n                });\n                modifiedForeignVZ.advance();\n            }\n            // [PRODUCE] View zone(s) in modified-side due to foreign view zone(s) in original-side\n            while (originalForeignVZ.current && originalForeignVZ.current.afterLineNumber <= originalEndEquivalentLineNumber) {\n                let viewZoneLineNumber;\n                if (originalForeignVZ.current.afterLineNumber <= originalEquivalentLineNumber) {\n                    viewZoneLineNumber = modifiedEquivalentLineNumber - originalEquivalentLineNumber + originalForeignVZ.current.afterLineNumber;\n                }\n                else {\n                    viewZoneLineNumber = modifiedEndEquivalentLineNumber;\n                }\n                stepModified.push({\n                    afterLineNumber: viewZoneLineNumber,\n                    heightInLines: originalForeignVZ.current.height / originalLineHeight,\n                    domNode: null\n                });\n                originalForeignVZ.advance();\n            }\n            if (lineChange !== null && isChangeOrInsert(lineChange)) {\n                const r = this._produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength);\n                if (r) {\n                    stepOriginal.push(r);\n                }\n            }\n            if (lineChange !== null && isChangeOrDelete(lineChange)) {\n                const r = this._produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength);\n                if (r) {\n                    stepModified.push(r);\n                }\n            }\n            // ---------------------------- END PRODUCE VIEW ZONES\n            // ---------------------------- EMIT MINIMAL VIEW ZONES\n            // [CANCEL & EMIT] Try to cancel view zones out\n            let stepOriginalIndex = 0;\n            let stepModifiedIndex = 0;\n            stepOriginal = stepOriginal.sort(sortMyViewZones);\n            stepModified = stepModified.sort(sortMyViewZones);\n            while (stepOriginalIndex < stepOriginal.length && stepModifiedIndex < stepModified.length) {\n                const original = stepOriginal[stepOriginalIndex];\n                const modified = stepModified[stepModifiedIndex];\n                const originalDelta = original.afterLineNumber - originalEquivalentLineNumber;\n                const modifiedDelta = modified.afterLineNumber - modifiedEquivalentLineNumber;\n                if (originalDelta < modifiedDelta) {\n                    addAndCombineIfPossible(result.original, original);\n                    stepOriginalIndex++;\n                }\n                else if (modifiedDelta < originalDelta) {\n                    addAndCombineIfPossible(result.modified, modified);\n                    stepModifiedIndex++;\n                }\n                else if (original.shouldNotShrink) {\n                    addAndCombineIfPossible(result.original, original);\n                    stepOriginalIndex++;\n                }\n                else if (modified.shouldNotShrink) {\n                    addAndCombineIfPossible(result.modified, modified);\n                    stepModifiedIndex++;\n                }\n                else {\n                    if (original.heightInLines >= modified.heightInLines) {\n                        // modified view zone gets removed\n                        original.heightInLines -= modified.heightInLines;\n                        stepModifiedIndex++;\n                    }\n                    else {\n                        // original view zone gets removed\n                        modified.heightInLines -= original.heightInLines;\n                        stepOriginalIndex++;\n                    }\n                }\n            }\n            // [EMIT] Remaining original view zones\n            while (stepOriginalIndex < stepOriginal.length) {\n                addAndCombineIfPossible(result.original, stepOriginal[stepOriginalIndex]);\n                stepOriginalIndex++;\n            }\n            // [EMIT] Remaining modified view zones\n            while (stepModifiedIndex < stepModified.length) {\n                addAndCombineIfPossible(result.modified, stepModified[stepModifiedIndex]);\n                stepModifiedIndex++;\n            }\n            // ---------------------------- END EMIT MINIMAL VIEW ZONES\n        }\n        return {\n            original: ViewZonesComputer._ensureDomNodes(result.original),\n            modified: ViewZonesComputer._ensureDomNodes(result.modified),\n        };\n    }\n    static _ensureDomNodes(zones) {\n        return zones.map((z) => {\n            if (!z.domNode) {\n                z.domNode = createFakeLinesDiv();\n            }\n            return z;\n        });\n    }\n}\nfunction createDecoration(startLineNumber, startColumn, endLineNumber, endColumn, options) {\n    return {\n        range: new Range(startLineNumber, startColumn, endLineNumber, endColumn),\n        options: options\n    };\n}\nconst DECORATIONS = {\n    arrowRevertChange: ModelDecorationOptions.register({\n        description: 'diff-editor-arrow-revert-change',\n        glyphMarginClassName: 'arrow-revert-change ' + ThemeIcon.asClassName(Codicon.arrowRight),\n    }),\n    charDelete: ModelDecorationOptions.register({\n        description: 'diff-editor-char-delete',\n        className: 'char-delete'\n    }),\n    charDeleteWholeLine: ModelDecorationOptions.register({\n        description: 'diff-editor-char-delete-whole-line',\n        className: 'char-delete',\n        isWholeLine: true\n    }),\n    charInsert: ModelDecorationOptions.register({\n        description: 'diff-editor-char-insert',\n        className: 'char-insert'\n    }),\n    charInsertWholeLine: ModelDecorationOptions.register({\n        description: 'diff-editor-char-insert-whole-line',\n        className: 'char-insert',\n        isWholeLine: true\n    }),\n    lineInsert: ModelDecorationOptions.register({\n        description: 'diff-editor-line-insert',\n        className: 'line-insert',\n        marginClassName: 'gutter-insert',\n        isWholeLine: true\n    }),\n    lineInsertWithSign: ModelDecorationOptions.register({\n        description: 'diff-editor-line-insert-with-sign',\n        className: 'line-insert',\n        linesDecorationsClassName: 'insert-sign ' + ThemeIcon.asClassName(diffInsertIcon),\n        marginClassName: 'gutter-insert',\n        isWholeLine: true\n    }),\n    lineDelete: ModelDecorationOptions.register({\n        description: 'diff-editor-line-delete',\n        className: 'line-delete',\n        marginClassName: 'gutter-delete',\n        isWholeLine: true\n    }),\n    lineDeleteWithSign: ModelDecorationOptions.register({\n        description: 'diff-editor-line-delete-with-sign',\n        className: 'line-delete',\n        linesDecorationsClassName: 'delete-sign ' + ThemeIcon.asClassName(diffRemoveIcon),\n        marginClassName: 'gutter-delete',\n        isWholeLine: true\n    }),\n    lineDeleteMargin: ModelDecorationOptions.register({\n        description: 'diff-editor-line-delete-margin',\n        marginClassName: 'gutter-delete',\n    })\n};\nclass DiffEditorWidgetSideBySide extends DiffEditorWidgetStyle {\n    constructor(dataSource, enableSplitViewResizing) {\n        super(dataSource);\n        this._disableSash = (enableSplitViewResizing === false);\n        this._sashRatio = null;\n        this._sashPosition = null;\n        this._startSashPosition = null;\n        this._sash = this._register(new Sash(this._dataSource.getContainerDomNode(), this, { orientation: 0 /* Orientation.VERTICAL */ }));\n        if (this._disableSash) {\n            this._sash.state = 0 /* SashState.Disabled */;\n        }\n        this._sash.onDidStart(() => this._onSashDragStart());\n        this._sash.onDidChange((e) => this._onSashDrag(e));\n        this._sash.onDidEnd(() => this._onSashDragEnd());\n        this._sash.onDidReset(() => this._onSashReset());\n    }\n    setEnableSplitViewResizing(enableSplitViewResizing) {\n        const newDisableSash = (enableSplitViewResizing === false);\n        if (this._disableSash !== newDisableSash) {\n            this._disableSash = newDisableSash;\n            this._sash.state = this._disableSash ? 0 /* SashState.Disabled */ : 3 /* SashState.Enabled */;\n        }\n    }\n    layout(sashRatio = this._sashRatio) {\n        const w = this._dataSource.getWidth();\n        const contentWidth = w - (this._dataSource.getOptions().renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0);\n        let sashPosition = Math.floor((sashRatio || 0.5) * contentWidth);\n        const midPoint = Math.floor(0.5 * contentWidth);\n        sashPosition = this._disableSash ? midPoint : sashPosition || midPoint;\n        if (contentWidth > DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH * 2) {\n            if (sashPosition < DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH) {\n                sashPosition = DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH;\n            }\n            if (sashPosition > contentWidth - DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH) {\n                sashPosition = contentWidth - DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH;\n            }\n        }\n        else {\n            sashPosition = midPoint;\n        }\n        if (this._sashPosition !== sashPosition) {\n            this._sashPosition = sashPosition;\n        }\n        this._sash.layout();\n        return this._sashPosition;\n    }\n    _onSashDragStart() {\n        this._startSashPosition = this._sashPosition;\n    }\n    _onSashDrag(e) {\n        const w = this._dataSource.getWidth();\n        const contentWidth = w - (this._dataSource.getOptions().renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0);\n        const sashPosition = this.layout((this._startSashPosition + (e.currentX - e.startX)) / contentWidth);\n        this._sashRatio = sashPosition / contentWidth;\n        this._dataSource.relayoutEditors();\n    }\n    _onSashDragEnd() {\n        this._sash.layout();\n    }\n    _onSashReset() {\n        this._sashRatio = 0.5;\n        this._dataSource.relayoutEditors();\n        this._sash.layout();\n    }\n    getVerticalSashTop(sash) {\n        return 0;\n    }\n    getVerticalSashLeft(sash) {\n        return this._sashPosition;\n    }\n    getVerticalSashHeight(sash) {\n        return this._dataSource.getHeight();\n    }\n    _getViewZones(lineChanges, originalForeignVZ, modifiedForeignVZ) {\n        const originalEditor = this._dataSource.getOriginalEditor();\n        const modifiedEditor = this._dataSource.getModifiedEditor();\n        const c = new SideBySideViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\n        return c.getViewZones();\n    }\n    _getOriginalEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators) {\n        const originalEditor = this._dataSource.getOriginalEditor();\n        const overviewZoneColor = String(this._removeColor);\n        const result = {\n            decorations: [],\n            overviewZones: []\n        };\n        const originalModel = originalEditor.getModel();\n        const originalViewModel = originalEditor._getViewModel();\n        for (const lineChange of lineChanges) {\n            if (isChangeOrDelete(lineChange)) {\n                result.decorations.push({\n                    range: new Range(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n                    options: (renderIndicators ? DECORATIONS.lineDeleteWithSign : DECORATIONS.lineDelete)\n                });\n                if (!isChangeOrInsert(lineChange) || !lineChange.charChanges) {\n                    result.decorations.push(createDecoration(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charDeleteWholeLine));\n                }\n                const viewRange = getViewRange(originalModel, originalViewModel, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, /*use endLineNumber*/ 0, overviewZoneColor));\n                if (lineChange.charChanges) {\n                    for (const charChange of lineChange.charChanges) {\n                        if (isCharChangeOrDelete(charChange)) {\n                            if (ignoreTrimWhitespace) {\n                                for (let lineNumber = charChange.originalStartLineNumber; lineNumber <= charChange.originalEndLineNumber; lineNumber++) {\n                                    let startColumn;\n                                    let endColumn;\n                                    if (lineNumber === charChange.originalStartLineNumber) {\n                                        startColumn = charChange.originalStartColumn;\n                                    }\n                                    else {\n                                        startColumn = originalModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                                    }\n                                    if (lineNumber === charChange.originalEndLineNumber) {\n                                        endColumn = charChange.originalEndColumn;\n                                    }\n                                    else {\n                                        endColumn = originalModel.getLineLastNonWhitespaceColumn(lineNumber);\n                                    }\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charDelete));\n                                }\n                            }\n                            else {\n                                result.decorations.push(createDecoration(charChange.originalStartLineNumber, charChange.originalStartColumn, charChange.originalEndLineNumber, charChange.originalEndColumn, DECORATIONS.charDelete));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    _getModifiedEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators, renderMarginRevertIcon) {\n        const modifiedEditor = this._dataSource.getModifiedEditor();\n        const overviewZoneColor = String(this._insertColor);\n        const result = {\n            decorations: [],\n            overviewZones: []\n        };\n        const modifiedModel = modifiedEditor.getModel();\n        const modifiedViewModel = modifiedEditor._getViewModel();\n        for (const lineChange of lineChanges) {\n            // Arrows for reverting changes.\n            if (renderMarginRevertIcon) {\n                if (lineChange.modifiedEndLineNumber > 0) {\n                    result.decorations.push({\n                        range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedStartLineNumber, 1),\n                        options: DECORATIONS.arrowRevertChange\n                    });\n                }\n                else {\n                    const viewZone = zones.modified.find(z => z.afterLineNumber === lineChange.modifiedStartLineNumber);\n                    if (viewZone) {\n                        viewZone.marginDomNode = createViewZoneMarginArrow();\n                    }\n                }\n            }\n            if (isChangeOrInsert(lineChange)) {\n                result.decorations.push({\n                    range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n                    options: (renderIndicators ? DECORATIONS.lineInsertWithSign : DECORATIONS.lineInsert)\n                });\n                if (!isChangeOrDelete(lineChange) || !lineChange.charChanges) {\n                    result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charInsertWholeLine));\n                }\n                const viewRange = getViewRange(modifiedModel, modifiedViewModel, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, /*use endLineNumber*/ 0, overviewZoneColor));\n                if (lineChange.charChanges) {\n                    for (const charChange of lineChange.charChanges) {\n                        if (isCharChangeOrInsert(charChange)) {\n                            if (ignoreTrimWhitespace) {\n                                for (let lineNumber = charChange.modifiedStartLineNumber; lineNumber <= charChange.modifiedEndLineNumber; lineNumber++) {\n                                    let startColumn;\n                                    let endColumn;\n                                    if (lineNumber === charChange.modifiedStartLineNumber) {\n                                        startColumn = charChange.modifiedStartColumn;\n                                    }\n                                    else {\n                                        startColumn = modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                                    }\n                                    if (lineNumber === charChange.modifiedEndLineNumber) {\n                                        endColumn = charChange.modifiedEndColumn;\n                                    }\n                                    else {\n                                        endColumn = modifiedModel.getLineLastNonWhitespaceColumn(lineNumber);\n                                    }\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charInsert));\n                                }\n                            }\n                            else {\n                                result.decorations.push(createDecoration(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn, DECORATIONS.charInsert));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n}\nDiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH = 100;\nclass SideBySideViewZonesComputer extends ViewZonesComputer {\n    constructor(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor) {\n        super(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\n    }\n    _createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion() {\n        return null;\n    }\n    _produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        if (lineChangeModifiedLength > lineChangeOriginalLength) {\n            return {\n                afterLineNumber: Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber),\n                heightInLines: (lineChangeModifiedLength - lineChangeOriginalLength),\n                domNode: null\n            };\n        }\n        return null;\n    }\n    _produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        if (lineChangeOriginalLength > lineChangeModifiedLength) {\n            return {\n                afterLineNumber: Math.max(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber),\n                heightInLines: (lineChangeOriginalLength - lineChangeModifiedLength),\n                domNode: null\n            };\n        }\n        return null;\n    }\n}\nclass DiffEditorWidgetInline extends DiffEditorWidgetStyle {\n    constructor(dataSource, enableSplitViewResizing) {\n        super(dataSource);\n        this._decorationsLeft = dataSource.getOriginalEditor().getLayoutInfo().decorationsLeft;\n        this._register(dataSource.getOriginalEditor().onDidLayoutChange((layoutInfo) => {\n            if (this._decorationsLeft !== layoutInfo.decorationsLeft) {\n                this._decorationsLeft = layoutInfo.decorationsLeft;\n                dataSource.relayoutEditors();\n            }\n        }));\n    }\n    setEnableSplitViewResizing(enableSplitViewResizing) {\n        // Nothing to do..\n    }\n    _getViewZones(lineChanges, originalForeignVZ, modifiedForeignVZ, renderIndicators) {\n        const originalEditor = this._dataSource.getOriginalEditor();\n        const modifiedEditor = this._dataSource.getModifiedEditor();\n        const computer = new InlineViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor, renderIndicators);\n        return computer.getViewZones();\n    }\n    _getOriginalEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators) {\n        const overviewZoneColor = String(this._removeColor);\n        const result = {\n            decorations: [],\n            overviewZones: []\n        };\n        const originalEditor = this._dataSource.getOriginalEditor();\n        const originalModel = originalEditor.getModel();\n        const originalViewModel = originalEditor._getViewModel();\n        let zoneIndex = 0;\n        for (const lineChange of lineChanges) {\n            // Add overview zones in the overview ruler\n            if (isChangeOrDelete(lineChange)) {\n                result.decorations.push({\n                    range: new Range(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n                    options: DECORATIONS.lineDeleteMargin\n                });\n                while (zoneIndex < zones.modified.length) {\n                    const zone = zones.modified[zoneIndex];\n                    if (zone.diff && zone.diff.originalStartLineNumber >= lineChange.originalStartLineNumber) {\n                        break;\n                    }\n                    zoneIndex++;\n                }\n                let zoneHeightInLines = 0;\n                if (zoneIndex < zones.modified.length) {\n                    const zone = zones.modified[zoneIndex];\n                    if (zone.diff\n                        && zone.diff.originalStartLineNumber === lineChange.originalStartLineNumber\n                        && zone.diff.originalEndLineNumber === lineChange.originalEndLineNumber\n                        && zone.diff.modifiedStartLineNumber === lineChange.modifiedStartLineNumber\n                        && zone.diff.modifiedEndLineNumber === lineChange.modifiedEndLineNumber) {\n                        zoneHeightInLines = zone.heightInLines;\n                    }\n                }\n                const viewRange = getViewRange(originalModel, originalViewModel, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, zoneHeightInLines, overviewZoneColor));\n            }\n        }\n        return result;\n    }\n    _getModifiedEditorDecorations(zones, lineChanges, ignoreTrimWhitespace, renderIndicators, renderMarginRevertIcon) {\n        const modifiedEditor = this._dataSource.getModifiedEditor();\n        const overviewZoneColor = String(this._insertColor);\n        const result = {\n            decorations: [],\n            overviewZones: []\n        };\n        const modifiedModel = modifiedEditor.getModel();\n        const modifiedViewModel = modifiedEditor._getViewModel();\n        for (const lineChange of lineChanges) {\n            // Add decorations & overview zones\n            if (isChangeOrInsert(lineChange)) {\n                result.decorations.push({\n                    range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n                    options: (renderIndicators ? DECORATIONS.lineInsertWithSign : DECORATIONS.lineInsert)\n                });\n                const viewRange = getViewRange(modifiedModel, modifiedViewModel, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, /*use endLineNumber*/ 0, overviewZoneColor));\n                if (lineChange.charChanges) {\n                    for (const charChange of lineChange.charChanges) {\n                        if (isCharChangeOrInsert(charChange)) {\n                            if (ignoreTrimWhitespace) {\n                                for (let lineNumber = charChange.modifiedStartLineNumber; lineNumber <= charChange.modifiedEndLineNumber; lineNumber++) {\n                                    let startColumn;\n                                    let endColumn;\n                                    if (lineNumber === charChange.modifiedStartLineNumber) {\n                                        startColumn = charChange.modifiedStartColumn;\n                                    }\n                                    else {\n                                        startColumn = modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                                    }\n                                    if (lineNumber === charChange.modifiedEndLineNumber) {\n                                        endColumn = charChange.modifiedEndColumn;\n                                    }\n                                    else {\n                                        endColumn = modifiedModel.getLineLastNonWhitespaceColumn(lineNumber);\n                                    }\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charInsert));\n                                }\n                            }\n                            else {\n                                result.decorations.push(createDecoration(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn, DECORATIONS.charInsert));\n                            }\n                        }\n                    }\n                }\n                else {\n                    result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charInsertWholeLine));\n                }\n            }\n        }\n        return result;\n    }\n    layout() {\n        // An editor should not be smaller than 5px\n        return Math.max(5, this._decorationsLeft);\n    }\n}\nclass InlineViewZonesComputer extends ViewZonesComputer {\n    constructor(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor, renderIndicators) {\n        super(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\n        this._originalModel = originalEditor.getModel();\n        this._renderIndicators = renderIndicators;\n        this._pendingLineChange = [];\n        this._pendingViewZones = [];\n        this._lineBreaksComputer = this._modifiedEditor._getViewModel().createLineBreaksComputer();\n    }\n    getViewZones() {\n        const result = super.getViewZones();\n        this._finalize(result);\n        return result;\n    }\n    _createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion() {\n        const result = document.createElement('div');\n        result.className = 'inline-added-margin-view-zone';\n        return result;\n    }\n    _produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        const marginDomNode = document.createElement('div');\n        marginDomNode.className = 'inline-added-margin-view-zone';\n        return {\n            afterLineNumber: Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber),\n            heightInLines: lineChangeModifiedLength,\n            domNode: document.createElement('div'),\n            marginDomNode: marginDomNode\n        };\n    }\n    _produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        const domNode = document.createElement('div');\n        domNode.className = `view-lines line-delete ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`;\n        const marginDomNode = document.createElement('div');\n        marginDomNode.className = 'inline-deleted-margin-view-zone';\n        const viewZone = {\n            shouldNotShrink: true,\n            afterLineNumber: (lineChange.modifiedEndLineNumber === 0 ? lineChange.modifiedStartLineNumber : lineChange.modifiedStartLineNumber - 1),\n            heightInLines: lineChangeOriginalLength,\n            minWidthInPx: 0,\n            domNode: domNode,\n            marginDomNode: marginDomNode,\n            diff: {\n                originalStartLineNumber: lineChange.originalStartLineNumber,\n                originalEndLineNumber: lineChange.originalEndLineNumber,\n                modifiedStartLineNumber: lineChange.modifiedStartLineNumber,\n                modifiedEndLineNumber: lineChange.modifiedEndLineNumber,\n                originalModel: this._originalModel,\n                viewLineCounts: null,\n            }\n        };\n        for (let lineNumber = lineChange.originalStartLineNumber; lineNumber <= lineChange.originalEndLineNumber; lineNumber++) {\n            this._lineBreaksComputer.addRequest(this._originalModel.getLineContent(lineNumber), null, null);\n        }\n        this._pendingLineChange.push(lineChange);\n        this._pendingViewZones.push(viewZone);\n        return viewZone;\n    }\n    _finalize(result) {\n        const modifiedEditorOptions = this._modifiedEditor.getOptions();\n        const tabSize = this._modifiedEditor.getModel().getOptions().tabSize;\n        const fontInfo = modifiedEditorOptions.get(46 /* EditorOption.fontInfo */);\n        const disableMonospaceOptimizations = modifiedEditorOptions.get(29 /* EditorOption.disableMonospaceOptimizations */);\n        const typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        const scrollBeyondLastColumn = modifiedEditorOptions.get(95 /* EditorOption.scrollBeyondLastColumn */);\n        const mightContainNonBasicASCII = this._originalModel.mightContainNonBasicASCII();\n        const mightContainRTL = this._originalModel.mightContainRTL();\n        const lineHeight = modifiedEditorOptions.get(61 /* EditorOption.lineHeight */);\n        const layoutInfo = modifiedEditorOptions.get(133 /* EditorOption.layoutInfo */);\n        const lineDecorationsWidth = layoutInfo.decorationsWidth;\n        const stopRenderingLineAfter = modifiedEditorOptions.get(107 /* EditorOption.stopRenderingLineAfter */);\n        const renderWhitespace = modifiedEditorOptions.get(90 /* EditorOption.renderWhitespace */);\n        const renderControlCharacters = modifiedEditorOptions.get(85 /* EditorOption.renderControlCharacters */);\n        const fontLigatures = modifiedEditorOptions.get(47 /* EditorOption.fontLigatures */);\n        const lineBreaks = this._lineBreaksComputer.finalize();\n        let lineBreakIndex = 0;\n        for (let i = 0; i < this._pendingLineChange.length; i++) {\n            const lineChange = this._pendingLineChange[i];\n            const viewZone = this._pendingViewZones[i];\n            const domNode = viewZone.domNode;\n            applyFontInfo(domNode, fontInfo);\n            const marginDomNode = viewZone.marginDomNode;\n            applyFontInfo(marginDomNode, fontInfo);\n            const decorations = [];\n            if (lineChange.charChanges) {\n                for (const charChange of lineChange.charChanges) {\n                    if (isCharChangeOrDelete(charChange)) {\n                        decorations.push(new InlineDecoration(new Range(charChange.originalStartLineNumber, charChange.originalStartColumn, charChange.originalEndLineNumber, charChange.originalEndColumn), 'char-delete', 0 /* InlineDecorationType.Regular */));\n                    }\n                }\n            }\n            const hasCharChanges = (decorations.length > 0);\n            const sb = createStringBuilder(10000);\n            let maxCharsPerLine = 0;\n            let renderedLineCount = 0;\n            let viewLineCounts = null;\n            for (let lineNumber = lineChange.originalStartLineNumber; lineNumber <= lineChange.originalEndLineNumber; lineNumber++) {\n                const lineIndex = lineNumber - lineChange.originalStartLineNumber;\n                const lineTokens = this._originalModel.tokenization.getLineTokens(lineNumber);\n                const lineContent = lineTokens.getLineContent();\n                const lineBreakData = lineBreaks[lineBreakIndex++];\n                const actualDecorations = LineDecoration.filter(decorations, lineNumber, 1, lineContent.length + 1);\n                if (lineBreakData) {\n                    let lastBreakOffset = 0;\n                    for (const breakOffset of lineBreakData.breakOffsets) {\n                        const viewLineTokens = lineTokens.sliceAndInflate(lastBreakOffset, breakOffset, 0);\n                        const viewLineContent = lineContent.substring(lastBreakOffset, breakOffset);\n                        maxCharsPerLine = Math.max(maxCharsPerLine, this._renderOriginalLine(renderedLineCount++, viewLineContent, viewLineTokens, LineDecoration.extractWrapped(actualDecorations, lastBreakOffset, breakOffset), hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode));\n                        lastBreakOffset = breakOffset;\n                    }\n                    if (!viewLineCounts) {\n                        viewLineCounts = [];\n                    }\n                    // make sure all lines before this one have an entry in `viewLineCounts`\n                    while (viewLineCounts.length < lineIndex) {\n                        viewLineCounts[viewLineCounts.length] = 1;\n                    }\n                    viewLineCounts[lineIndex] = lineBreakData.breakOffsets.length;\n                    viewZone.heightInLines += (lineBreakData.breakOffsets.length - 1);\n                    const marginDomNode2 = document.createElement('div');\n                    marginDomNode2.className = 'gutter-delete';\n                    result.original.push({\n                        afterLineNumber: lineNumber,\n                        afterColumn: 0,\n                        heightInLines: lineBreakData.breakOffsets.length - 1,\n                        domNode: createFakeLinesDiv(),\n                        marginDomNode: marginDomNode2\n                    });\n                }\n                else {\n                    maxCharsPerLine = Math.max(maxCharsPerLine, this._renderOriginalLine(renderedLineCount++, lineContent, lineTokens, actualDecorations, hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode));\n                }\n            }\n            maxCharsPerLine += scrollBeyondLastColumn;\n            const html = sb.build();\n            const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n            domNode.innerHTML = trustedhtml;\n            viewZone.minWidthInPx = (maxCharsPerLine * typicalHalfwidthCharacterWidth);\n            if (viewLineCounts) {\n                // make sure all lines have an entry in `viewLineCounts`\n                const cnt = lineChange.originalEndLineNumber - lineChange.originalStartLineNumber;\n                while (viewLineCounts.length <= cnt) {\n                    viewLineCounts[viewLineCounts.length] = 1;\n                }\n            }\n            viewZone.diff.viewLineCounts = viewLineCounts;\n        }\n        result.original.sort((a, b) => {\n            return a.afterLineNumber - b.afterLineNumber;\n        });\n    }\n    _renderOriginalLine(renderedLineCount, lineContent, lineTokens, decorations, hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode) {\n        sb.appendASCIIString('<div class=\"view-line');\n        if (!hasCharChanges) {\n            // No char changes\n            sb.appendASCIIString(' char-delete');\n        }\n        sb.appendASCIIString('\" style=\"top:');\n        sb.appendASCIIString(String(renderedLineCount * lineHeight));\n        sb.appendASCIIString('px;width:1000000px;\">');\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, mightContainNonBasicASCII);\n        const containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, mightContainRTL);\n        const output = renderViewLine(new RenderLineInput((fontInfo.isMonospace && !disableMonospaceOptimizations), fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null // Send no selections, original line cannot be selected\n        ), sb);\n        sb.appendASCIIString('</div>');\n        if (this._renderIndicators) {\n            const marginElement = document.createElement('div');\n            marginElement.className = `delete-sign ${ThemeIcon.asClassName(diffRemoveIcon)}`;\n            marginElement.setAttribute('style', `position:absolute;top:${renderedLineCount * lineHeight}px;width:${lineDecorationsWidth}px;height:${lineHeight}px;right:0;`);\n            marginDomNode.appendChild(marginElement);\n        }\n        return output.characterMapping.getHorizontalOffset(output.characterMapping.length);\n    }\n}\nfunction validateDiffWordWrap(value, defaultValue) {\n    return validateStringSetOption(value, defaultValue, ['off', 'on', 'inherit']);\n}\nfunction isChangeOrInsert(lineChange) {\n    return lineChange.modifiedEndLineNumber > 0;\n}\nfunction isChangeOrDelete(lineChange) {\n    return lineChange.originalEndLineNumber > 0;\n}\nfunction isCharChangeOrInsert(charChange) {\n    if (charChange.modifiedStartLineNumber === charChange.modifiedEndLineNumber) {\n        return charChange.modifiedEndColumn - charChange.modifiedStartColumn > 0;\n    }\n    return charChange.modifiedEndLineNumber - charChange.modifiedStartLineNumber > 0;\n}\nfunction isCharChangeOrDelete(charChange) {\n    if (charChange.originalStartLineNumber === charChange.originalEndLineNumber) {\n        return charChange.originalEndColumn - charChange.originalStartColumn > 0;\n    }\n    return charChange.originalEndLineNumber - charChange.originalStartLineNumber > 0;\n}\nfunction createFakeLinesDiv() {\n    const r = document.createElement('div');\n    r.className = 'diagonal-fill';\n    return r;\n}\nfunction createViewZoneMarginArrow() {\n    const arrow = document.createElement('div');\n    arrow.className = 'arrow-revert-change ' + ThemeIcon.asClassName(Codicon.arrowRight);\n    return dom.$('div', {}, arrow);\n}\nfunction getViewRange(model, viewModel, startLineNumber, endLineNumber) {\n    const lineCount = model.getLineCount();\n    startLineNumber = Math.min(lineCount, Math.max(1, startLineNumber));\n    endLineNumber = Math.min(lineCount, Math.max(1, endLineNumber));\n    return viewModel.coordinatesConverter.convertModelRangeToViewRange(new Range(startLineNumber, model.getLineMinColumn(startLineNumber), endLineNumber, model.getLineMaxColumn(endLineNumber)));\n}\nfunction validateDiffEditorOptions(options, defaults) {\n    return {\n        enableSplitViewResizing: validateBooleanOption(options.enableSplitViewResizing, defaults.enableSplitViewResizing),\n        renderSideBySide: validateBooleanOption(options.renderSideBySide, defaults.renderSideBySide),\n        renderMarginRevertIcon: validateBooleanOption(options.renderMarginRevertIcon, defaults.renderMarginRevertIcon),\n        maxComputationTime: clampedInt(options.maxComputationTime, defaults.maxComputationTime, 0, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n        maxFileSize: clampedInt(options.maxFileSize, defaults.maxFileSize, 0, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */),\n        ignoreTrimWhitespace: validateBooleanOption(options.ignoreTrimWhitespace, defaults.ignoreTrimWhitespace),\n        renderIndicators: validateBooleanOption(options.renderIndicators, defaults.renderIndicators),\n        originalEditable: validateBooleanOption(options.originalEditable, defaults.originalEditable),\n        diffCodeLens: validateBooleanOption(options.diffCodeLens, defaults.diffCodeLens),\n        renderOverviewRuler: validateBooleanOption(options.renderOverviewRuler, defaults.renderOverviewRuler),\n        diffWordWrap: validateDiffWordWrap(options.diffWordWrap, defaults.diffWordWrap),\n    };\n}\nfunction changedDiffEditorOptions(a, b) {\n    return {\n        enableSplitViewResizing: (a.enableSplitViewResizing !== b.enableSplitViewResizing),\n        renderSideBySide: (a.renderSideBySide !== b.renderSideBySide),\n        renderMarginRevertIcon: (a.renderMarginRevertIcon !== b.renderMarginRevertIcon),\n        maxComputationTime: (a.maxComputationTime !== b.maxComputationTime),\n        maxFileSize: (a.maxFileSize !== b.maxFileSize),\n        ignoreTrimWhitespace: (a.ignoreTrimWhitespace !== b.ignoreTrimWhitespace),\n        renderIndicators: (a.renderIndicators !== b.renderIndicators),\n        originalEditable: (a.originalEditable !== b.originalEditable),\n        diffCodeLens: (a.diffCodeLens !== b.diffCodeLens),\n        renderOverviewRuler: (a.renderOverviewRuler !== b.renderOverviewRuler),\n        diffWordWrap: (a.diffWordWrap !== b.diffWordWrap),\n    };\n}\nregisterThemingParticipant((theme, collector) => {\n    const added = theme.getColor(diffInserted);\n    if (added) {\n        collector.addRule(`.monaco-editor .char-insert, .monaco-diff-editor .char-insert { background-color: ${added}; }`);\n    }\n    const lineAdded = theme.getColor(diffInsertedLine) || added;\n    if (lineAdded) {\n        collector.addRule(`.monaco-editor .line-insert, .monaco-diff-editor .line-insert { background-color: ${lineAdded}; }`);\n    }\n    const gutterAdded = theme.getColor(diffInsertedLineGutter) || lineAdded;\n    if (gutterAdded) {\n        collector.addRule(`.monaco-editor .inline-added-margin-view-zone { background-color: ${gutterAdded}; }`);\n        collector.addRule(`.monaco-editor .gutter-insert, .monaco-diff-editor .gutter-insert { background-color: ${gutterAdded}; }`);\n    }\n    const removed = theme.getColor(diffRemoved);\n    if (removed) {\n        collector.addRule(`.monaco-editor .char-delete, .monaco-diff-editor .char-delete { background-color: ${removed}; }`);\n    }\n    const lineRemoved = theme.getColor(diffRemovedLine) || removed;\n    if (lineRemoved) {\n        collector.addRule(`.monaco-editor .line-delete, .monaco-diff-editor .line-delete { background-color: ${lineRemoved}; }`);\n    }\n    const gutterRemoved = theme.getColor(diffRemovedLineGutter) || lineRemoved;\n    if (gutterRemoved) {\n        collector.addRule(`.monaco-editor .inline-deleted-margin-view-zone { background-color: ${gutterRemoved}; }`);\n        collector.addRule(`.monaco-editor .gutter-delete, .monaco-diff-editor .gutter-delete { background-color: ${gutterRemoved}; }`);\n    }\n    const addedOutline = theme.getColor(diffInsertedOutline);\n    if (addedOutline) {\n        collector.addRule(`.monaco-editor .line-insert, .monaco-editor .char-insert { border: 1px ${isHighContrast(theme.type) ? 'dashed' : 'solid'} ${addedOutline}; }`);\n    }\n    const removedOutline = theme.getColor(diffRemovedOutline);\n    if (removedOutline) {\n        collector.addRule(`.monaco-editor .line-delete, .monaco-editor .char-delete { border: 1px ${isHighContrast(theme.type) ? 'dashed' : 'solid'} ${removedOutline}; }`);\n    }\n    const shadow = theme.getColor(scrollbarShadow);\n    if (shadow) {\n        collector.addRule(`.monaco-diff-editor.side-by-side .editor.modified { box-shadow: -6px 0 5px -5px ${shadow}; }`);\n    }\n    const border = theme.getColor(diffBorder);\n    if (border) {\n        collector.addRule(`.monaco-diff-editor.side-by-side .editor.modified { border-left: 1px solid ${border}; }`);\n    }\n    const scrollbarSliderBackgroundColor = theme.getColor(scrollbarSliderBackground);\n    if (scrollbarSliderBackgroundColor) {\n        collector.addRule(`\n\t\t\t.monaco-diff-editor .diffViewport {\n\t\t\t\tbackground: ${scrollbarSliderBackgroundColor};\n\t\t\t}\n\t\t`);\n    }\n    const scrollbarSliderHoverBackgroundColor = theme.getColor(scrollbarSliderHoverBackground);\n    if (scrollbarSliderHoverBackgroundColor) {\n        collector.addRule(`\n\t\t\t.monaco-diff-editor .diffViewport:hover {\n\t\t\t\tbackground: ${scrollbarSliderHoverBackgroundColor};\n\t\t\t}\n\t\t`);\n    }\n    const scrollbarSliderActiveBackgroundColor = theme.getColor(scrollbarSliderActiveBackground);\n    if (scrollbarSliderActiveBackgroundColor) {\n        collector.addRule(`\n\t\t\t.monaco-diff-editor .diffViewport:active {\n\t\t\t\tbackground: ${scrollbarSliderActiveBackgroundColor};\n\t\t\t}\n\t\t`);\n    }\n    const diffDiagonalFillColor = theme.getColor(diffDiagonalFill);\n    collector.addRule(`\n\t.monaco-editor .diagonal-fill {\n\t\tbackground-image: linear-gradient(\n\t\t\t-45deg,\n\t\t\t${diffDiagonalFillColor} 12.5%,\n\t\t\t#0000 12.5%, #0000 50%,\n\t\t\t${diffDiagonalFillColor} 50%, ${diffDiagonalFillColor} 62.5%,\n\t\t\t#0000 62.5%, #0000 100%\n\t\t);\n\t\tbackground-size: 8px 8px;\n\t}\n\t`);\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { Action } from '../../../base/common/actions.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Range } from '../../common/core/range.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nexport class InlineDiffMargin extends Disposable {\n    constructor(_viewZoneId, _marginDomNode, editor, diff, _contextMenuService, _clipboardService) {\n        super();\n        this._viewZoneId = _viewZoneId;\n        this._marginDomNode = _marginDomNode;\n        this.editor = editor;\n        this.diff = diff;\n        this._contextMenuService = _contextMenuService;\n        this._clipboardService = _clipboardService;\n        this._visibility = false;\n        // make sure the diff margin shows above overlay.\n        this._marginDomNode.style.zIndex = '10';\n        this._diffActions = document.createElement('div');\n        this._diffActions.className = Codicon.lightBulb.classNames + ' lightbulb-glyph';\n        this._diffActions.style.position = 'absolute';\n        const lineHeight = editor.getOption(61 /* EditorOption.lineHeight */);\n        const lineFeed = editor.getModel().getEOL();\n        this._diffActions.style.right = '0px';\n        this._diffActions.style.visibility = 'hidden';\n        this._diffActions.style.height = `${lineHeight}px`;\n        this._diffActions.style.lineHeight = `${lineHeight}px`;\n        this._marginDomNode.appendChild(this._diffActions);\n        const actions = [];\n        const isDeletion = diff.modifiedEndLineNumber === 0;\n        // default action\n        actions.push(new Action('diff.clipboard.copyDeletedContent', isDeletion\n            ? (diff.originalEndLineNumber > diff.modifiedStartLineNumber\n                ? nls.localize('diff.clipboard.copyDeletedLinesContent.label', \"Copy deleted lines\")\n                : nls.localize('diff.clipboard.copyDeletedLinesContent.single.label', \"Copy deleted line\"))\n            : (diff.originalEndLineNumber > diff.modifiedStartLineNumber\n                ? nls.localize('diff.clipboard.copyChangedLinesContent.label', \"Copy changed lines\")\n                : nls.localize('diff.clipboard.copyChangedLinesContent.single.label', \"Copy changed line\")), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n            const range = new Range(diff.originalStartLineNumber, 1, diff.originalEndLineNumber + 1, 1);\n            const deletedText = diff.originalModel.getValueInRange(range);\n            yield this._clipboardService.writeText(deletedText);\n        })));\n        let currentLineNumberOffset = 0;\n        let copyLineAction = undefined;\n        if (diff.originalEndLineNumber > diff.modifiedStartLineNumber) {\n            copyLineAction = new Action('diff.clipboard.copyDeletedLineContent', isDeletion\n                ? nls.localize('diff.clipboard.copyDeletedLineContent.label', \"Copy deleted line ({0})\", diff.originalStartLineNumber)\n                : nls.localize('diff.clipboard.copyChangedLineContent.label', \"Copy changed line ({0})\", diff.originalStartLineNumber), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                const lineContent = diff.originalModel.getLineContent(diff.originalStartLineNumber + currentLineNumberOffset);\n                if (lineContent === '') {\n                    // empty line\n                    const eof = diff.originalModel.getEndOfLineSequence();\n                    yield this._clipboardService.writeText(eof === 0 /* EndOfLineSequence.LF */ ? '\\n' : '\\r\\n');\n                }\n                else {\n                    yield this._clipboardService.writeText(lineContent);\n                }\n            }));\n            actions.push(copyLineAction);\n        }\n        const readOnly = editor.getOption(83 /* EditorOption.readOnly */);\n        if (!readOnly) {\n            actions.push(new Action('diff.inline.revertChange', nls.localize('diff.inline.revertChange.label', \"Revert this change\"), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                const range = new Range(diff.originalStartLineNumber, 1, diff.originalEndLineNumber, diff.originalModel.getLineMaxColumn(diff.originalEndLineNumber));\n                const deletedText = diff.originalModel.getValueInRange(range);\n                if (diff.modifiedEndLineNumber === 0) {\n                    // deletion only\n                    const column = editor.getModel().getLineMaxColumn(diff.modifiedStartLineNumber);\n                    editor.executeEdits('diffEditor', [\n                        {\n                            range: new Range(diff.modifiedStartLineNumber, column, diff.modifiedStartLineNumber, column),\n                            text: lineFeed + deletedText\n                        }\n                    ]);\n                }\n                else {\n                    const column = editor.getModel().getLineMaxColumn(diff.modifiedEndLineNumber);\n                    editor.executeEdits('diffEditor', [\n                        {\n                            range: new Range(diff.modifiedStartLineNumber, 1, diff.modifiedEndLineNumber, column),\n                            text: deletedText\n                        }\n                    ]);\n                }\n            })));\n        }\n        const showContextMenu = (x, y) => {\n            this._contextMenuService.showContextMenu({\n                getAnchor: () => {\n                    return {\n                        x,\n                        y\n                    };\n                },\n                getActions: () => {\n                    if (copyLineAction) {\n                        copyLineAction.label =\n                            isDeletion\n                                ? nls.localize('diff.clipboard.copyDeletedLineContent.label', \"Copy deleted line ({0})\", diff.originalStartLineNumber + currentLineNumberOffset)\n                                : nls.localize('diff.clipboard.copyChangedLineContent.label', \"Copy changed line ({0})\", diff.originalStartLineNumber + currentLineNumberOffset);\n                    }\n                    return actions;\n                },\n                autoSelectFirstItem: true\n            });\n        };\n        this._register(dom.addStandardDisposableListener(this._diffActions, 'mousedown', e => {\n            const { top, height } = dom.getDomNodePagePosition(this._diffActions);\n            const pad = Math.floor(lineHeight / 3);\n            e.preventDefault();\n            showContextMenu(e.posx, top + height + pad);\n        }));\n        this._register(editor.onMouseMove((e) => {\n            if (e.target.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */ || e.target.type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */) {\n                const viewZoneId = e.target.detail.viewZoneId;\n                if (viewZoneId === this._viewZoneId) {\n                    this.visibility = true;\n                    currentLineNumberOffset = this._updateLightBulbPosition(this._marginDomNode, e.event.browserEvent.y, lineHeight);\n                }\n                else {\n                    this.visibility = false;\n                }\n            }\n            else {\n                this.visibility = false;\n            }\n        }));\n        this._register(editor.onMouseDown((e) => {\n            if (!e.event.rightButton) {\n                return;\n            }\n            if (e.target.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */ || e.target.type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */) {\n                const viewZoneId = e.target.detail.viewZoneId;\n                if (viewZoneId === this._viewZoneId) {\n                    e.event.preventDefault();\n                    currentLineNumberOffset = this._updateLightBulbPosition(this._marginDomNode, e.event.browserEvent.y, lineHeight);\n                    showContextMenu(e.event.posx, e.event.posy + lineHeight);\n                }\n            }\n        }));\n    }\n    get visibility() {\n        return this._visibility;\n    }\n    set visibility(_visibility) {\n        if (this._visibility !== _visibility) {\n            this._visibility = _visibility;\n            if (_visibility) {\n                this._diffActions.style.visibility = 'visible';\n            }\n            else {\n                this._diffActions.style.visibility = 'hidden';\n            }\n        }\n    }\n    _updateLightBulbPosition(marginDomNode, y, lineHeight) {\n        const { top } = dom.getDomNodePagePosition(marginDomNode);\n        const offset = y - top;\n        const lineNumberOffset = Math.floor(offset / lineHeight);\n        const newTop = lineNumberOffset * lineHeight;\n        this._diffActions.style.top = `${newTop}px`;\n        if (this.diff.viewLineCounts) {\n            let acc = 0;\n            for (let i = 0; i < this.diff.viewLineCounts.length; i++) {\n                acc += this.diff.viewLineCounts[i];\n                if (lineNumberOffset < acc) {\n                    return i;\n                }\n            }\n        }\n        return lineNumberOffset;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from '../../../base/common/assert.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as objects from '../../../base/common/objects.js';\nimport { Range } from '../../common/core/range.js';\nconst defaultOptions = {\n    followsCaret: true,\n    ignoreCharChanges: true,\n    alwaysRevealFirst: true\n};\n/**\n * Create a new diff navigator for the provided diff editor.\n */\nexport class DiffNavigator extends Disposable {\n    constructor(editor, options = {}) {\n        super();\n        this._onDidUpdate = this._register(new Emitter());\n        this._editor = editor;\n        this._options = objects.mixin(options, defaultOptions, false);\n        this.disposed = false;\n        this.nextIdx = -1;\n        this.ranges = [];\n        this.ignoreSelectionChange = false;\n        this.revealFirst = Boolean(this._options.alwaysRevealFirst);\n        // hook up to diff editor for diff, disposal, and caret move\n        this._register(this._editor.onDidDispose(() => this.dispose()));\n        this._register(this._editor.onDidUpdateDiff(() => this._onDiffUpdated()));\n        if (this._options.followsCaret) {\n            this._register(this._editor.getModifiedEditor().onDidChangeCursorPosition((e) => {\n                if (this.ignoreSelectionChange) {\n                    return;\n                }\n                this.nextIdx = -1;\n            }));\n        }\n        if (this._options.alwaysRevealFirst) {\n            this._register(this._editor.getModifiedEditor().onDidChangeModel((e) => {\n                this.revealFirst = true;\n            }));\n        }\n        // init things\n        this._init();\n    }\n    _init() {\n        const changes = this._editor.getLineChanges();\n        if (!changes) {\n            return;\n        }\n    }\n    _onDiffUpdated() {\n        this._init();\n        this._compute(this._editor.getLineChanges());\n        if (this.revealFirst) {\n            // Only reveal first on first non-null changes\n            if (this._editor.getLineChanges() !== null) {\n                this.revealFirst = false;\n                this.nextIdx = -1;\n                this.next(1 /* ScrollType.Immediate */);\n            }\n        }\n    }\n    _compute(lineChanges) {\n        // new ranges\n        this.ranges = [];\n        if (lineChanges) {\n            // create ranges from changes\n            lineChanges.forEach((lineChange) => {\n                if (!this._options.ignoreCharChanges && lineChange.charChanges) {\n                    lineChange.charChanges.forEach((charChange) => {\n                        this.ranges.push({\n                            rhs: true,\n                            range: new Range(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn)\n                        });\n                    });\n                }\n                else {\n                    if (lineChange.modifiedEndLineNumber === 0) {\n                        // a deletion\n                        this.ranges.push({\n                            rhs: true,\n                            range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedStartLineNumber + 1, 1)\n                        });\n                    }\n                    else {\n                        // an insertion or modification\n                        this.ranges.push({\n                            rhs: true,\n                            range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber + 1, 1)\n                        });\n                    }\n                }\n            });\n        }\n        // sort\n        this.ranges.sort((left, right) => Range.compareRangesUsingStarts(left.range, right.range));\n        this._onDidUpdate.fire(this);\n    }\n    _initIdx(fwd) {\n        let found = false;\n        const position = this._editor.getPosition();\n        if (!position) {\n            this.nextIdx = 0;\n            return;\n        }\n        for (let i = 0, len = this.ranges.length; i < len && !found; i++) {\n            const range = this.ranges[i].range;\n            if (position.isBeforeOrEqual(range.getStartPosition())) {\n                this.nextIdx = i + (fwd ? 0 : -1);\n                found = true;\n            }\n        }\n        if (!found) {\n            // after the last change\n            this.nextIdx = fwd ? 0 : this.ranges.length - 1;\n        }\n        if (this.nextIdx < 0) {\n            this.nextIdx = this.ranges.length - 1;\n        }\n    }\n    _move(fwd, scrollType) {\n        assert.ok(!this.disposed, 'Illegal State - diff navigator has been disposed');\n        if (!this.canNavigate()) {\n            return;\n        }\n        if (this.nextIdx === -1) {\n            this._initIdx(fwd);\n        }\n        else if (fwd) {\n            this.nextIdx += 1;\n            if (this.nextIdx >= this.ranges.length) {\n                this.nextIdx = 0;\n            }\n        }\n        else {\n            this.nextIdx -= 1;\n            if (this.nextIdx < 0) {\n                this.nextIdx = this.ranges.length - 1;\n            }\n        }\n        const info = this.ranges[this.nextIdx];\n        this.ignoreSelectionChange = true;\n        try {\n            const pos = info.range.getStartPosition();\n            this._editor.setPosition(pos);\n            this._editor.revealRangeInCenter(info.range, scrollType);\n        }\n        finally {\n            this.ignoreSelectionChange = false;\n        }\n    }\n    canNavigate() {\n        return this.ranges && this.ranges.length > 0;\n    }\n    next(scrollType = 0 /* ScrollType.Smooth */) {\n        this._move(true, scrollType);\n    }\n    previous(scrollType = 0 /* ScrollType.Smooth */) {\n        this._move(false, scrollType);\n    }\n    dispose() {\n        super.dispose();\n        this.ranges = [];\n        this.disposed = true;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as objects from '../../../base/common/objects.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { CodeEditorWidget } from './codeEditorWidget.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\nlet EmbeddedCodeEditorWidget = class EmbeddedCodeEditorWidget extends CodeEditorWidget {\n    constructor(domElement, options, parentEditor, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService, languageConfigurationService, languageFeaturesService) {\n        super(domElement, Object.assign(Object.assign({}, parentEditor.getRawOptions()), { overflowWidgetsDomNode: parentEditor.getOverflowWidgetsDomNode() }), {}, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService, languageConfigurationService, languageFeaturesService);\n        this._parentEditor = parentEditor;\n        this._overwriteOptions = options;\n        // Overwrite parent's options\n        super.updateOptions(this._overwriteOptions);\n        this._register(parentEditor.onDidChangeConfiguration((e) => this._onParentConfigurationChanged(e)));\n    }\n    getParentEditor() {\n        return this._parentEditor;\n    }\n    _onParentConfigurationChanged(e) {\n        super.updateOptions(this._parentEditor.getRawOptions());\n        super.updateOptions(this._overwriteOptions);\n    }\n    updateOptions(newOptions) {\n        objects.mixin(this._overwriteOptions, newOptions, true);\n        super.updateOptions(this._overwriteOptions);\n    }\n};\nEmbeddedCodeEditorWidget = __decorate([\n    __param(3, IInstantiationService),\n    __param(4, ICodeEditorService),\n    __param(5, ICommandService),\n    __param(6, IContextKeyService),\n    __param(7, IThemeService),\n    __param(8, INotificationService),\n    __param(9, IAccessibilityService),\n    __param(10, ILanguageConfigurationService),\n    __param(11, ILanguageFeaturesService)\n], EmbeddedCodeEditorWidget);\nexport { EmbeddedCodeEditorWidget };\n"],"names":["RenderingContext","viewLayout","viewportData","viewLines","_renderingContextBrand","undefined","_viewLines","range","includeNewLines","this","linesVisibleRangesForRange","position","visibleRangeForPosition","_restrictedRenderingContextBrand","_viewLayout","scrollWidth","getScrollWidth","scrollHeight","getScrollHeight","visibleRange","bigNumbersDelta","vInfo","getCurrentViewport","scrollTop","top","scrollLeft","left","viewportWidth","width","viewportHeight","height","absoluteTop","lineNumber","getVerticalOffsetForLineNumber","getDecorationsInViewport","LineVisibleRanges","outsideRenderedLine","ranges","HorizontalRange","_horizontalRangeBrand","Math","round","result","Array","length","i","len","FloatHorizontalRange","_floatHorizontalRangeBrand","a","b","HorizontalPosition","originalLeft","VisibleRanges","ViewController","configuration","viewModel","userInputEvents","commandDelegate","text","pasteOnNewLine","multicursorText","mode","paste","type","replacePrevCharCnt","replaceNextCharCnt","positionDelta","compositionType","startComposition","endComposition","cut","modelSelection","CoreNavigationCommands","source","selection","viewPosition","minColumn","getLineMinColumn","column","Position","data","options","get","altKey","ctrlKey","metaKey","selectionClipboardIsOn","platform","columnSelection","middleButton","_columnSelect","mouseColumn","inSelectionMode","startedOnLineNumbers","_hasMulticursorModifier","_lastCursorLineSelect","_createCursor","_lineSelectDrag","_lineSelect","mouseDownCount","_selectAll","_lastCursorLineSelectDrag","onInjectedText","_lastCursorWordSelect","_wordSelectDrag","_wordSelect","_hasNonMulticursorModifier","shiftKey","_lastCursorMoveToSelect","_moveToSelect","moveTo","_validateViewColumn","_convertViewToModelPosition","_usualArgs","doColumnSelect","wholeLine","coordinatesConverter","convertViewPositionToModelPosition","e","emitKeyDown","emitKeyUp","emitContextMenu","emitMouseMove","emitMouseLeave","emitMouseUp","emitMouseDown","emitMouseDrag","emitMouseDrop","emitMouseDropCanceled","emitMouseWheel","_a","RenderedLinesCollection","createLine","_createLine","_set","rendLineNumberStart","lines","_lines","_rendLineNumberStart","lineIndex","Error","deleteFromLineNumber","deleteToLineNumber","getCount","startLineNumber","getStartLineNumber","endLineNumber","getEndLineNumber","deleteCnt","deleteStartIndex","deleteCount","deleteAboveCount","splice","changeFromLineNumber","changeCount","changeToLineNumber","someoneNotified","changedLineNumber","onContentChanged","insertFromLineNumber","insertToLineNumber","insertCnt","newLines","insertIndex","beforeLines","slice","afterLines","deletedLines","concat","notifiedSomeone","rng","toLineNumber","fromLineNumber","from","max","to","min","onTokensChanged","VisibleLinesCollection","host","_host","domNode","_createDomNode","_linesCollection","createVisibleLine","createFastDomNode","document","createElement","setClassName","setPosition","setAttribute","hasChanged","flush","onLinesChanged","count","deleted","onLinesDeleted","lineDomNode","getDomNode","removeChild","onLinesInserted","scrollTopChanged","getLine","inp","_get","renderer","ViewLayerRenderer","ctx","linesLength","resCtx","render","relativeVerticalOffset","inContext","stopLineNumber","deltaTop","x","_finishRendering","_renderUntouchedLines","_insertLinesBefore","removeCnt","_removeLinesBefore","_insertLinesAfter","_removeLinesAfter","startIndex","endIndex","deltaLN","layoutLine","newLinesLen","removeCount","removeIndex","domNodeIsEmpty","newLinesHTML","wasNew","_ttPolicy","createHTML","lastChild","innerHTML","insertAdjacentHTML","currChild","line","setDomNode","previousSibling","invalidLinesHTML","wasInvalid","hugeDomNode","firstChild","parentNode","replaceChild","sb","_sb","reset","hadNewLine","renderLine","_finishRenderingNewLines","build","hadInvalidLine","_finishRenderingInvalidLines","window","trustedTypes","createPolicy","value","createStringBuilder","ViewOverlays","context","_visibleLines","_dynamicOverlays","_isFocused","shouldRender","dispose","ViewOverlayLine","_context","overlay","push","onConfigurationChanged","getVisibleLine","onFlushed","isFocused","onScrollChanged","onZonesChanged","toRender","filter","dynamicOverlay","prepareRender","onDidRender","_viewOverlaysRender","toggleClassName","renderLines","ViewPart","dynamicOverlays","_configuration","_lineHeight","_domNode","_renderedContent","appendASCIIString","String","setTop","setHeight","ContentViewOverlays","layoutInfo","_contentWidth","contentWidth","scrollWidthChanged","setWidth","MarginViewOverlays","_contentLeft","contentLeft","applyFontInfo","scrollHeightChanged","addEventHandler","removeEventHandler","ViewEventHandler","PartFingerprints","target","partId","r","getAttribute","parseInt","child","stopAt","resultLen","body","nodeType","ELEMENT_NODE","read","parentElement","Uint8Array","ViewUserInputEvents","onKeyDown","onKeyUp","onContextMenu","onMouseMove","onMouseLeave","onMouseDown","onMouseUp","onMouseDrag","onMouseDrop","onMouseDropCanceled","onMouseWheel","_coordinatesConverter","call","_convertViewToModelMouseEvent","event","_convertViewToModelMouseTarget","convertViewToModelMouseTarget","Object","assign","convertViewRangeToModelRange","__decorate","decorators","key","desc","d","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","done","then","apply","EDITOR_ID","ModelData","model","view","hasRealView","listenersToRemove","onBeforeDetached","CodeEditorWidget","domElement","_options","codeEditorWidgetOptions","instantiationService","codeEditorService","commandService","contextKeyService","themeService","notificationService","accessibilityService","languageConfigurationService","languageFeaturesService","_deliveryQueue","EventDeliveryQueue","_onDidDispose","_register","Emitter","onDidDispose","_onDidChangeModelContent","deliveryQueue","onDidChangeModelContent","_onDidChangeModelLanguage","onDidChangeModelLanguage","_onDidChangeModelLanguageConfiguration","onDidChangeModelLanguageConfiguration","_onDidChangeModelOptions","onDidChangeModelOptions","_onDidChangeModelDecorations","onDidChangeModelDecorations","_onDidChangeModelTokens","onDidChangeModelTokens","_onDidChangeConfiguration","onDidChangeConfiguration","_onDidChangeModel","onDidChangeModel","_onDidChangeCursorPosition","onDidChangeCursorPosition","_onDidChangeCursorSelection","onDidChangeCursorSelection","_onDidAttemptReadOnlyEdit","onDidAttemptReadOnlyEdit","_onDidLayoutChange","onDidLayoutChange","_editorTextFocus","BooleanEventEmitter","onDidFocusEditorText","onDidChangeToTrue","onDidBlurEditorText","onDidChangeToFalse","_editorWidgetFocus","onDidFocusEditorWidget","onDidBlurEditorWidget","_onWillType","onWillType","_onDidType","onDidType","_onDidCompositionStart","onDidCompositionStart","_onDidCompositionEnd","onDidCompositionEnd","_onDidPaste","onDidPaste","_onMouseUp","_onMouseDown","_onMouseDrag","_onMouseDrop","_onMouseDropCanceled","_onDropIntoEditor","onDropIntoEditor","_onContextMenu","_onMouseMove","_onMouseLeave","_onMouseWheel","_onKeyUp","_onKeyDown","_onDidContentSizeChange","onDidContentSizeChange","_onDidScrollChange","onDidScrollChange","_onDidChangeViewZones","onDidChangeViewZones","_onDidChangeHiddenAreas","onDidChangeHiddenAreas","_bannerDomNode","_dropIntoEditorDecorations","createDecorationsCollection","contributions","_domElement","_overflowWidgetsDomNode","overflowWidgetsDomNode","_id","_decorationTypeKeysToIds","_decorationTypeSubtypes","_telemetryData","telemetryData","_createConfiguration","isSimpleWidget","onDidChange","fire","_contextKeyService","createScoped","_notificationService","_codeEditorService","_commandService","_themeService","EditorContextKeysManager","EditorModeContext","_instantiationService","createChild","ServiceCollection","IContextKeyService","_modelData","_contributions","_actions","_focusTracker","CodeEditorWidgetFocusTracker","onChange","setValue","hasFocus","_contentWidgets","_overlayWidgets","isArray","EditorExtensionsRegistry","id","onUnexpectedError","contribution","createInstance","ctor","err","forEach","action","internalAction","InternalEditorAction","label","alias","withNullAsUndefined","precondition","invokeFunction","accessor","runEditorCommand","isDropIntoEnabled","enabled","dom","DragAndDropObserver","onDragEnter","onDragOver","getTargetAtClientPoint","clientX","clientY","showDropIndicatorAt","onDrop","removeDropIndicator","dataTransfer","onDragLeave","onDragEnd","addCodeEditor","EditorConfiguration","getEditorType","editorCommon","removeCodeEditor","keys","contributionId","_removeDecorationTypes","_postDetachModelCleanup","_detachModel","fn","newOptions","updateOptions","getRawOptions","WordOperations","preserveBOM","eolPreference","lineEnding","getValue","newValue","_model","hasTextFocus","detachedModel","_attachModel","hasModel","focus","oldModelUrl","uri","newModelUrl","decorationType","subTypes","subType","_removeDecorationType","getVisibleRanges","getVisibleRangesPlusViewportAboveBelow","getWhitespaces","includeViewZones","_getVerticalOffsetForPosition","_getVerticalOffsetAfterPosition","setHiddenAreas","map","Range","rawPosition","validatePosition","tabSize","getOptions","CursorColumns","getLineContent","getPosition","setSelections","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","modelRange","verticalType","revealHorizontal","scrollType","validatedModelRange","validateRange","viewRange","convertModelRangeToViewRange","revealRange","_revealLine","revealType","_sendRevealRange","_revealPosition","getSelection","getSelections","something","isSelection","Selection","isRange","_setSelectionImpl","startColumn","endColumn","sel","_revealLines","revealVerticalInCenter","_revealRange","reason","getContentWidth","getCurrentScrollLeft","getContentHeight","getCurrentScrollTop","newScrollLeft","setScrollPosition","newScrollTop","contributionsState","saveViewState","cursorState","saveCursorState","viewState","saveState","s","codeEditorState","restoreCursorState","restoreViewState","reducedState","reduceRestoreState","restoreState","getActions","isSupported","handlerId","payload","_startComposition","_endComposition","args","_type","_compositionType","replaceCharCnt","_paste","_cut","getAction","run","_triggerEditorCommand","_triggerCommand","executeCommand","startPosition","getStartPosition","endPosition","languageId","command","pushStackElement","popStackElement","edits","endCursorState","cursorStateComputer","executeEdits","commands","executeCommands","decorations","EditorDecorationsCollection","callback","changeDecorations","getLineDecorations","filterValidationDecorations","getDecorationsInRange","oldDecorations","newDecorations","deltaDecorations","decorationIds","changeAccessor","decorationTypeKey","oldDecorationsIds","hasOwnProperty","cssClassName","createOverviewRuler","browserEvent","delegateVerticalScrollbarPointerDown","dimension","observeContainer","widget","widgetData","getId","console","warn","addContentWidget","widgetId","layoutContentWidget","removeContentWidget","addOverlayWidget","layoutOverlayWidget","removeOverlayWidget","change","getScrollTop","getOffsetForColumn","glyphMarginWidth","lineNumbersWidth","decorationsWidth","getScrollLeft","forceRedraw","setAriaOptions","domNodeHeight","contains","setReservedHeight","prepend","getLanguageId","setIsDominatedByLongLines","isDominatedByLongLines","setModelLineCount","getLineCount","onBeforeAttached","ViewModel","DOMLineBreaksComputerFactory","MonospaceLineBreaksComputerFactory","scheduleAtNextAnimationFrame","onWillDispose","setModel","onEvent","kind","reachedMaxCursorCount","nls","CursorsController","positions","selections","e1","secondaryPositions","e2","secondarySelections","modelVersionId","oldSelections","oldModelVersionId","_createView","appendChild","toString","viewUserInputEvents","View","getColorTheme","removeAllDecorationsWithOwnerId","removeDomNode","removeAttribute","removeDecorationType","dropIntoEditorDecorationOptions","set","revealPosition","clear","modelData","modelLineNumber","modelColumn","modelPosition","convertModelPositionToViewPosition","getVerticalOffsetAfterLineNumber","Disposable","ModelDecorationOptions","description","className","IInstantiationService","ICodeEditorService","ICommandService","IThemeService","INotificationService","IAccessibilityService","ILanguageConfigurationService","ILanguageFeaturesService","_emitterOptions","_onDidChangeToTrue","_onDidChangeToFalse","_value","editor","_editor","createKey","_editorSimpleInput","EditorContextKeys","_editorFocus","_textInputFocus","_editorTabMovesFocus","_editorReadonly","_inDiffEditor","_editorColumnSelection","_hasMultipleSelections","_hasNonEmptySelection","_canUndo","_canRedo","_updateFromConfig","_updateFromSelection","_updateFromFocus","_updateFromModel","some","isEmpty","hasWidgetFocus","getModel","Boolean","canUndo","canRedo","_languageFeaturesService","_langId","_hasCompletionItemProvider","_hasCodeActionsProvider","_hasCodeLensProvider","_hasDefinitionProvider","_hasDeclarationProvider","_hasImplementationProvider","_hasTypeDefinitionProvider","_hasHoverProvider","_hasDocumentHighlightProvider","_hasDocumentSymbolProvider","_hasReferenceProvider","_hasRenameProvider","_hasSignatureHelpProvider","_hasInlayHintsProvider","_hasDocumentFormattingProvider","_hasDocumentSelectionFormattingProvider","_hasMultipleDocumentFormattingProvider","_hasMultipleDocumentSelectionFormattingProvider","_isInWalkThrough","update","_update","completionProvider","codeActionProvider","codeLensProvider","definitionProvider","declarationProvider","implementationProvider","typeDefinitionProvider","hoverProvider","documentHighlightProvider","documentSymbolProvider","referenceProvider","renameProvider","documentFormattingEditProvider","documentRangeFormattingEditProvider","signatureHelpProvider","inlayHintsProvider","bufferChangeEvents","has","all","scheme","Schemas","_onChange","_hasFocus","_domFocusTracker","trackFocus","onDidFocus","onDidBlur","_decorationIds","_isChangingDecorations","listener","thisArgs","disposables","index","getDecorationRange","decorationId","decoration","includes","squigglyStart","encodeURIComponent","squigglyEnd","getSquigglySVGData","color","dotdotdotStart","dotdotdotEnd","registerThemingParticipant","theme","collector","errorBorderColor","getColor","editorErrorBorder","addRule","errorForeground","editorErrorForeground","errorBackground","editorErrorBackground","warningBorderColor","editorWarningBorder","warningForeground","editorWarningForeground","warningBackground","editorWarningBackground","infoBorderColor","editorInfoBorder","infoForeground","editorInfoForeground","infoBackground","editorInfoBackground","hintBorderColor","editorHintBorder","hintForeground","editorHintForeground","unnecessaryForeground","editorUnnecessaryCodeOpacity","rgba","unnecessaryBorder","editorUnnecessaryCodeBorder","deprecatedForeground","editorForeground","DiffEntry","originalLineStart","originalLineEnd","modifiedLineStart","modifiedLineEnd","Diff","entries","diffReviewInsertIcon","registerIcon","Codicon","diffReviewRemoveIcon","diffReviewCloseIcon","DiffReview","diffEditor","_languageService","_width","_diffEditor","_isVisible","shadow","actionBarContainer","_actionBar","ActionBar","Action","ThemeIcon","hide","icon","_content","scrollbar","DomScrollableElement","onDidUpdateDiff","_diffs","_compute","_render","getModifiedEditor","addStandardDisposableListener","preventDefault","row","findParentWithClass","_goToRow","equals","_getNextRow","_getPrevRow","accept","_currentDiff","currentIndex","_findDiffIndex","setSelection","doLayout","jumpToLineNumber","current","_getCurrentFocusedRow","isNaN","readOnly","previousElementSibling","_getFirstRow","nextElementSibling","querySelector","activeElement","test","prev","tabIndex","scanDomNode","setDisplay","lineChanges","getLineChanges","originalModel","getOriginalEditor","modifiedModel","_mergeAdjacent","pos","diff","originalOptions","modifiedOptions","originalModelOpts","modifiedModelOpts","clearNode","diffIndex","diffs","container","minOriginalLine","maxOriginalLine","minModifiedLine","maxModifiedLine","diffEntry","header","cell","originalChangedLinesCnt","modifiedChangedLinesCnt","createTextNode","getAriaLines","originalChangedLinesCntAria","modifiedChangedLinesCntAria","comment","lineHeight","modLine","_renderSection","languageIdCodec","originalLineCount","modifiedLineCount","diffsLength","lineChange","originalStart","originalStartLineNumber","originalEnd","originalEndLineNumber","modifiedStart","modifiedStartLineNumber","modifiedEnd","modifiedEndLineNumber","rLength","originalEqualAbove","modifiedEqualAbove","minOriginal","minModified","prevLineChange","fromOriginal","fromModified","delta","originalEqualBelow","modifiedEqualBelow","maxOriginal","maxModified","nextLineChange","toOriginal","toModified","curr","thisDiff","currLast","thisFirst","getType","dest","rowClassName","lineNumbersExtraClassName","spacerIcon","cnt","originalLayoutInfo","originalLineNumbersWidth","modifiedLayoutInfo","modifiedLineNumbersWidth","originalLine","modifiedLine","style","minWidth","originalLineNumber","innerText","modifiedLineNumber","paddingRight","spacer","spacerCodicon","lineContent","html","_renderLine","ariaLabel","fontInfo","lineTokens","LineTokens","isBasicASCII","ViewLineRenderingData","mightContainNonBasicASCII","containsRTL","mightContainRTL","renderViewLine","RenderLineInput","isMonospace","canUseHalfwidthRightwardsArrow","spaceWidth","middotWidth","wsmiddotWidth","EditorFontLigatures","ILanguageService","lineNumbers","editorLineNumbers","scrollbarShadow","DiffReviewNext","ContextKeyExpr","kbOpts","kbExpr","primary","weight","findFocusedDiffEditor","diffReviewNext","EditorAction","DiffReviewPrev","diffReviewPrev","diffEditors","listDiffEditors","activeCodeEditor","getActiveCodeEditor","registerEditorAction","InlineDiffMargin","_viewZoneId","_marginDomNode","_contextMenuService","_clipboardService","_visibility","zIndex","_diffActions","getOption","lineFeed","getEOL","right","visibility","actions","isDeletion","deletedText","getValueInRange","writeText","currentLineNumberOffset","copyLineAction","eof","getEndOfLineSequence","getLineMaxColumn","showContextMenu","y","getAnchor","autoSelectFirstItem","getDomNodePagePosition","pad","floor","posx","detail","viewZoneId","_updateLightBulbPosition","rightButton","posy","marginDomNode","offset","lineNumberOffset","newTop","viewLineCounts","acc","VisualEditorState","_zones","_inlineDiffMargins","_zonesMap","_decorations","allViewZones","z","changeViewZones","viewChangeAccessor","zoneId","removeZone","overviewRuler","restoreScrollState","scrollState","StableEditorScrollState","zones","viewZone","suppressMouseDown","addZone","getValueLength","restore","setZones","overviewZones","DIFF_EDITOR_ID","diffInsertIcon","diffRemoveIcon","ttPolicy","DiffEditorWidget","clipboardService","editorWorkerService","contextMenuService","_editorProgressService","_onDidUpdateDiff","_lastOriginalWarning","_lastModifiedWarning","_editorWorkerService","_state","_updatingDiffProgress","validateDiffEditorOptions","enableSplitViewResizing","renderSideBySide","renderMarginRevertIcon","maxComputationTime","maxFileSize","ignoreTrimWhitespace","renderIndicators","originalEditable","diffCodeLens","renderOverviewRuler","diffWordWrap","isInEmbeddedEditor","_updateDecorationsRunner","RunOnceScheduler","_updateDecorations","_containerDomElement","_getClassName","_overviewViewportDomElement","_overviewDomElement","EventType","POINTER_DOWN","_modifiedEditor","_originalDomNode","_modifiedDomNode","_beginUpdateDecorationsTimeout","_currentlyChangingViewZones","_diffComputationToken","_originalEditorState","_modifiedEditorState","_isHandlingScrollEvent","_elementSizeObserver","ElementSizeObserver","_onDidContainerSizeChanged","automaticLayout","startObserving","_diffComputationResult","_originalEditor","_createLeftHandSideEditor","originalEditor","_createRightHandSideEditor","modifiedEditor","_originalOverviewRuler","_modifiedOverviewRuler","_reviewPane","_setStrategy","DiffEditorWidgetSideBySide","_createDataSource","DiffEditorWidgetInline","onDidColorThemeChange","t","_strategy","applyColors","schedule","addDiffEditor","newState","show","assert","ok","_layoutOverviewRulers","_createInnerEditor","_adjustOptionsForLeftHandSide","scrollLeftChanged","_layoutOverviewViewport","_onViewZonesChanged","cancel","_beginUpdateDecorationsSoon","isInDiffLeftEditorKey","ONE_OVERVIEW_WIDTH","contentHeight","contentHeightChanged","contentWidthChanged","_adjustOptionsForRightHandSide","isInDiffRightEditorKey","_b","element","changes","find","revertChange","stopPropagation","original","modified","originalRange","originalContent","newRange","eol","setStartPosition","setEndPosition","insertAt","editorWidgetOptions","removeDiffEditor","clearTimeout","_cleanViewZonesAndDecorations","_newOptions","changed","beginUpdateDecorations","beginUpdateDecorationsSoon","_beginUpdateDecorations","setEnableSplitViewResizing","_disposeOverviewRulers","setScrollTop","_setState","_createOverviewRulers","getVisibleColumnFromPosition","revealLine","revealLineInCenter","revealLineInCenterIfOutsideViewport","revealLineNearTop","revealPositionInCenter","revealPositionInCenterIfOutsideViewport","revealPositionNearTop","revealLines","revealLinesInCenter","revealLinesInCenterIfOutsideViewport","revealLinesNearTop","revealRangeInCenter","revealRangeInCenterIfOutsideViewport","revealRangeNearTop","revealRangeNearTopIfOutsideViewport","revealRangeAtTop","getSupportedActions","diffEditorState","observe","trigger","_doLayout","isVisible","getHeight","reviewHeight","_getReviewHeight","freeSpace","ENTIRE_DIFF_OVERVIEW_WIDTH","getLayoutInfo","setLayout","setTimeout","UPDATE_DIFF_DECORATIONS_DELAY","currentOriginalModel","currentModifiedModel","currentToken","diffLimit","canSyncModelForDiff","bufferTextLength","computeDiff","error","_equals","clean","foreignOriginal","getForeignViewZones","foreignModified","diffDecorations","getEditorsDiffDecorations","clonedOptions","inDiffEditor","vertical","folding","codeLens","fixedOverflowWidgets","minimap","_adjustOptionsForSubEditor","wordWrapOverride1","wordWrapOverride2","originalAriaLabel","dropIntoEditor","extraEditorClassName","modifiedAriaLabel","revealHorizontalRightPadding","EditorOptions","verticalHasArrows","getWidth","splitPoint","layout","_computeOverviewViewport","computedAvailableSize","computedRepresentableSize","computedRatio","getContainerDomNode","relayoutEditors","newStrategy","startLineNumberExtractor","mid","midStart","midEnd","_getLineChangeAtOrBeforeLineNumber","originalEquivalentLineNumber","modifiedEquivalentLineNumber","lineChangeOriginalLength","lineChangeModifiedLength","equivalentLineNumber","_getEquivalentLineForOriginalLineNumber","_getEquivalentLineForModifiedLineNumber","getThemeTypeSelector","IClipboardService","IEditorWorkerService","IContextMenuService","IEditorProgressService","DiffEditorWidgetStyle","dataSource","_dataSource","_insertColor","_removeColor","newInsertColor","diffOverviewRulerInserted","diffInserted","defaultInsertColor","transparent","newRemoveColor","diffOverviewRulerRemoved","diffRemoved","defaultRemoveColor","hasChanges","originalWhitespaces","modifiedWhitespaces","sort","afterLineNumber","_getViewZones","originalDecorations","_getOriginalEditorDecorations","modifiedDecorations","_getModifiedEditorDecorations","ForeignViewZonesIterator","_source","_index","advance","ViewZonesComputer","_lineChanges","_originalForeignVZ","_modifiedForeignVZ","originalLineHeight","modifiedLineHeight","originalHasWrapping","wrappingColumn","modifiedHasWrapping","hasWrapping","originalCoordinatesConverter","_getViewModel","modifiedCoordinatesConverter","originalEndEquivalentLineNumber","modifiedEndEquivalentLineNumber","sortMyViewZones","addAndCombineIfPossible","destination","item","lastItem","heightInLines","modifiedForeignVZ","originalForeignVZ","lastOriginalLineNumber","lastModifiedLineNumber","_getViewLineCount","stepOriginal","stepModified","originalViewLineCount","getModelLineViewLineCount","modifiedViewLineCount","viewZoneLineNumber","_createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion","isChangeOrInsert","_produceOriginalFromDiff","isChangeOrDelete","_produceModifiedFromDiff","stepOriginalIndex","stepModifiedIndex","originalDelta","modifiedDelta","shouldNotShrink","_ensureDomNodes","getViewRange","createFakeLinesDiv","createDecoration","DECORATIONS","arrowRevertChange","glyphMarginClassName","charDelete","charDeleteWholeLine","isWholeLine","charInsert","charInsertWholeLine","lineInsert","marginClassName","lineInsertWithSign","linesDecorationsClassName","lineDelete","lineDeleteWithSign","lineDeleteMargin","_disableSash","_sashRatio","_sashPosition","_startSashPosition","_sash","Sash","orientation","state","onDidStart","_onSashDragStart","_onSashDrag","onDidEnd","_onSashDragEnd","onDidReset","_onSashReset","newDisableSash","sashRatio","w","sashPosition","midPoint","MINIMUM_EDITOR_WIDTH","currentX","startX","sash","SideBySideViewZonesComputer","getViewZones","overviewZoneColor","originalViewModel","charChanges","OverviewRulerZone","charChange","isCharChangeOrDelete","originalStartColumn","getLineFirstNonWhitespaceColumn","originalEndColumn","getLineLastNonWhitespaceColumn","modifiedViewModel","arrow","$","createViewZoneMarginArrow","isCharChangeOrInsert","modifiedStartColumn","modifiedEndColumn","_decorationsLeft","decorationsLeft","InlineViewZonesComputer","zoneIndex","zone","zoneHeightInLines","_originalModel","_renderIndicators","_pendingLineChange","_pendingViewZones","_lineBreaksComputer","createLineBreaksComputer","_finalize","MOUSE_CURSOR_TEXT_CSS_CLASS_NAME","minWidthInPx","addRequest","modifiedEditorOptions","disableMonospaceOptimizations","typicalHalfwidthCharacterWidth","scrollBeyondLastColumn","lineDecorationsWidth","stopRenderingLineAfter","renderWhitespace","renderControlCharacters","fontLigatures","lineBreaks","finalize","lineBreakIndex","InlineDecoration","hasCharChanges","maxCharsPerLine","renderedLineCount","tokenization","getLineTokens","lineBreakData","actualDecorations","LineDecoration","lastBreakOffset","breakOffsets","breakOffset","viewLineTokens","sliceAndInflate","viewLineContent","substring","_renderOriginalLine","marginDomNode2","afterColumn","trustedhtml","output","marginElement","characterMapping","getHorizontalOffset","lineCount","defaults","validateBooleanOption","clampedInt","defaultValue","validateStringSetOption","added","lineAdded","diffInsertedLine","gutterAdded","diffInsertedLineGutter","removed","lineRemoved","diffRemovedLine","gutterRemoved","diffRemovedLineGutter","addedOutline","diffInsertedOutline","isHighContrast","removedOutline","diffRemovedOutline","border","diffBorder","scrollbarSliderBackgroundColor","scrollbarSliderBackground","scrollbarSliderHoverBackgroundColor","scrollbarSliderHoverBackground","scrollbarSliderActiveBackgroundColor","scrollbarSliderActiveBackground","diffDiagonalFillColor","diffDiagonalFill","defaultOptions","followsCaret","ignoreCharChanges","alwaysRevealFirst","DiffNavigator","_onDidUpdate","objects","disposed","nextIdx","ignoreSelectionChange","revealFirst","_onDiffUpdated","_init","rhs","fwd","found","isBeforeOrEqual","canNavigate","_initIdx","info","_move","EmbeddedCodeEditorWidget","parentEditor","getOverflowWidgetsDomNode","_parentEditor","_overwriteOptions","_onParentConfigurationChanged"],"sourceRoot":""}