{"version":3,"file":"static/js/monaco-editor-vendor.c2cd25cc.a8c11beb.js","mappings":"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","sources":["../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/glob.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/hash.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/history.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/htmlContent.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/iconLabels.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/idGenerator.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/ime.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/iterator.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/keyCodes.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/keybindingLabels.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/keybindings.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/labels.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/lazy.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/lifecycle.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/linkedList.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/linkedText.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { isThenable } from './async.js';\nimport { isEqualOrParent } from './extpath.js';\nimport { LRUCache } from './map.js';\nimport { basename, extname, posix, sep } from './path.js';\nimport { isLinux } from './platform.js';\nimport { escapeRegExpCharacters, ltrim } from './strings.js';\nexport const GLOBSTAR = '**';\nexport const GLOB_SPLIT = '/';\nconst PATH_REGEX = '[/\\\\\\\\]'; // any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]'; // any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\nfunction starsToRegExp(starCount, isLastPattern) {\n    switch (starCount) {\n        case 0:\n            return '';\n        case 1:\n            return `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n        default:\n            // Matches:  (Path Sep OR Path Val followed by Path Sep) 0-many times except when it's the last pattern\n            //           in which case also matches (Path Sep followed by Path Val)\n            // Group is non capturing because we don't need to capture at all (?:...)\n            // Overall we use non-greedy matching because it could be that we match too much\n            return `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}${isLastPattern ? `|${PATH_REGEX}${NO_PATH_REGEX}+` : ''})*?`;\n    }\n}\nexport function splitGlobAware(pattern, splitChar) {\n    if (!pattern) {\n        return [];\n    }\n    const segments = [];\n    let inBraces = false;\n    let inBrackets = false;\n    let curVal = '';\n    for (const char of pattern) {\n        switch (char) {\n            case splitChar:\n                if (!inBraces && !inBrackets) {\n                    segments.push(curVal);\n                    curVal = '';\n                    continue;\n                }\n                break;\n            case '{':\n                inBraces = true;\n                break;\n            case '}':\n                inBraces = false;\n                break;\n            case '[':\n                inBrackets = true;\n                break;\n            case ']':\n                inBrackets = false;\n                break;\n        }\n        curVal += char;\n    }\n    // Tail\n    if (curVal) {\n        segments.push(curVal);\n    }\n    return segments;\n}\nfunction parseRegExp(pattern) {\n    if (!pattern) {\n        return '';\n    }\n    let regEx = '';\n    // Split up into segments for each slash found\n    const segments = splitGlobAware(pattern, GLOB_SPLIT);\n    // Special case where we only have globstars\n    if (segments.every(segment => segment === GLOBSTAR)) {\n        regEx = '.*';\n    }\n    // Build regex over segments\n    else {\n        let previousSegmentWasGlobStar = false;\n        segments.forEach((segment, index) => {\n            // Treat globstar specially\n            if (segment === GLOBSTAR) {\n                // if we have more than one globstar after another, just ignore it\n                if (previousSegmentWasGlobStar) {\n                    return;\n                }\n                regEx += starsToRegExp(2, index === segments.length - 1);\n            }\n            // Anything else, not globstar\n            else {\n                // States\n                let inBraces = false;\n                let braceVal = '';\n                let inBrackets = false;\n                let bracketVal = '';\n                for (const char of segment) {\n                    // Support brace expansion\n                    if (char !== '}' && inBraces) {\n                        braceVal += char;\n                        continue;\n                    }\n                    // Support brackets\n                    if (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n                        let res;\n                        // range operator\n                        if (char === '-') {\n                            res = char;\n                        }\n                        // negation operator (only valid on first index in bracket)\n                        else if ((char === '^' || char === '!') && !bracketVal) {\n                            res = '^';\n                        }\n                        // glob split matching is not allowed within character ranges\n                        // see http://man7.org/linux/man-pages/man7/glob.7.html\n                        else if (char === GLOB_SPLIT) {\n                            res = '';\n                        }\n                        // anything else gets escaped\n                        else {\n                            res = escapeRegExpCharacters(char);\n                        }\n                        bracketVal += res;\n                        continue;\n                    }\n                    switch (char) {\n                        case '{':\n                            inBraces = true;\n                            continue;\n                        case '[':\n                            inBrackets = true;\n                            continue;\n                        case '}': {\n                            const choices = splitGlobAware(braceVal, ',');\n                            // Converts {foo,bar} => [foo|bar]\n                            const braceRegExp = `(?:${choices.map(choice => parseRegExp(choice)).join('|')})`;\n                            regEx += braceRegExp;\n                            inBraces = false;\n                            braceVal = '';\n                            break;\n                        }\n                        case ']': {\n                            regEx += ('[' + bracketVal + ']');\n                            inBrackets = false;\n                            bracketVal = '';\n                            break;\n                        }\n                        case '?':\n                            regEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n                            continue;\n                        case '*':\n                            regEx += starsToRegExp(1);\n                            continue;\n                        default:\n                            regEx += escapeRegExpCharacters(char);\n                    }\n                }\n                // Tail: Add the slash we had split on if there is more to\n                // come and the remaining pattern is not a globstar\n                // For example if pattern: some/**/*.js we want the \"/\" after\n                // some to be included in the RegEx to prevent a folder called\n                // \"something\" to match as well.\n                if (index < segments.length - 1 && // more segments to come after this\n                    (segments[index + 1] !== GLOBSTAR || // next segment is not **, or...\n                        index + 2 < segments.length // ...next segment is ** but there is more segments after that\n                    )) {\n                    regEx += PATH_REGEX;\n                }\n            }\n            // update globstar state\n            previousSegmentWasGlobStar = (segment === GLOBSTAR);\n        });\n    }\n    return regEx;\n}\n// regexes to check for trivial glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; // **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; // **/something\nconst T3 = /^{\\*\\*\\/\\*?[\\w\\.-]+\\/?(,\\*\\*\\/\\*?[\\w\\.-]+\\/?)*}$/; // {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/\\*?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/\\*?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; // Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; // **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; // something/else\nconst CACHE = new LRUCache(10000); // bounded to 10000 elements\nconst FALSE = function () {\n    return false;\n};\nconst NULL = function () {\n    return null;\n};\nfunction parsePattern(arg1, options) {\n    if (!arg1) {\n        return NULL;\n    }\n    // Handle relative patterns\n    let pattern;\n    if (typeof arg1 !== 'string') {\n        pattern = arg1.pattern;\n    }\n    else {\n        pattern = arg1;\n    }\n    // Whitespace trimming\n    pattern = pattern.trim();\n    // Check cache\n    const patternKey = `${pattern}_${!!options.trimForExclusions}`;\n    let parsedPattern = CACHE.get(patternKey);\n    if (parsedPattern) {\n        return wrapRelativePattern(parsedPattern, arg1);\n    }\n    // Check for Trivials\n    let match;\n    if (T1.test(pattern)) {\n        parsedPattern = trivia1(pattern.substr(4), pattern); // common pattern: **/*.txt just need endsWith check\n    }\n    else if (match = T2.exec(trimForExclusions(pattern, options))) { // common pattern: **/some.txt just need basename check\n        parsedPattern = trivia2(match[1], pattern);\n    }\n    else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n        parsedPattern = trivia3(pattern, options);\n    }\n    else if (match = T4.exec(trimForExclusions(pattern, options))) { // common pattern: **/something/else just need endsWith check\n        parsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n    }\n    else if (match = T5.exec(trimForExclusions(pattern, options))) { // common pattern: something/else just need equals check\n        parsedPattern = trivia4and5(match[1], pattern, false);\n    }\n    // Otherwise convert to pattern\n    else {\n        parsedPattern = toRegExp(pattern);\n    }\n    // Cache\n    CACHE.set(patternKey, parsedPattern);\n    return wrapRelativePattern(parsedPattern, arg1);\n}\nfunction wrapRelativePattern(parsedPattern, arg2) {\n    if (typeof arg2 === 'string') {\n        return parsedPattern;\n    }\n    const wrappedPattern = function (path, basename) {\n        if (!isEqualOrParent(path, arg2.base, !isLinux)) {\n            // skip glob matching if `base` is not a parent of `path`\n            return null;\n        }\n        // Given we have checked `base` being a parent of `path`,\n        // we can now remove the `base` portion of the `path`\n        // and only match on the remaining path components\n        // For that we try to extract the portion of the `path`\n        // that comes after the `base` portion. We have to account\n        // for the fact that `base` might end in a path separator\n        // (https://github.com/microsoft/vscode/issues/162498)\n        return parsedPattern(ltrim(path.substr(arg2.base.length), sep), basename);\n    };\n    // Make sure to preserve associated metadata\n    wrappedPattern.allBasenames = parsedPattern.allBasenames;\n    wrappedPattern.allPaths = parsedPattern.allPaths;\n    wrappedPattern.basenames = parsedPattern.basenames;\n    wrappedPattern.patterns = parsedPattern.patterns;\n    return wrappedPattern;\n}\nfunction trimForExclusions(pattern, options) {\n    return options.trimForExclusions && pattern.endsWith('/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n// common pattern: **/*.txt just need endsWith check\nfunction trivia1(base, pattern) {\n    return function (path, basename) {\n        return typeof path === 'string' && path.endsWith(base) ? pattern : null;\n    };\n}\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base, pattern) {\n    const slashBase = `/${base}`;\n    const backslashBase = `\\\\${base}`;\n    const parsedPattern = function (path, basename) {\n        if (typeof path !== 'string') {\n            return null;\n        }\n        if (basename) {\n            return basename === base ? pattern : null;\n        }\n        return path === base || path.endsWith(slashBase) || path.endsWith(backslashBase) ? pattern : null;\n    };\n    const basenames = [base];\n    parsedPattern.basenames = basenames;\n    parsedPattern.patterns = [pattern];\n    parsedPattern.allBasenames = basenames;\n    return parsedPattern;\n}\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern, options) {\n    const parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1)\n        .split(',')\n        .map(pattern => parsePattern(pattern, options))\n        .filter(pattern => pattern !== NULL), pattern);\n    const patternsLength = parsedPatterns.length;\n    if (!patternsLength) {\n        return NULL;\n    }\n    if (patternsLength === 1) {\n        return parsedPatterns[0];\n    }\n    const parsedPattern = function (path, basename) {\n        for (let i = 0, n = parsedPatterns.length; i < n; i++) {\n            if (parsedPatterns[i](path, basename)) {\n                return pattern;\n            }\n        }\n        return null;\n    };\n    const withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n    if (withBasenames) {\n        parsedPattern.allBasenames = withBasenames.allBasenames;\n    }\n    const allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, []);\n    if (allPaths.length) {\n        parsedPattern.allPaths = allPaths;\n    }\n    return parsedPattern;\n}\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(targetPath, pattern, matchPathEnds) {\n    const usingPosixSep = sep === posix.sep;\n    const nativePath = usingPosixSep ? targetPath : targetPath.replace(ALL_FORWARD_SLASHES, sep);\n    const nativePathEnd = sep + nativePath;\n    const targetPathEnd = posix.sep + targetPath;\n    let parsedPattern;\n    if (matchPathEnds) {\n        parsedPattern = function (path, basename) {\n            return typeof path === 'string' && ((path === nativePath || path.endsWith(nativePathEnd)) || !usingPosixSep && (path === targetPath || path.endsWith(targetPathEnd))) ? pattern : null;\n        };\n    }\n    else {\n        parsedPattern = function (path, basename) {\n            return typeof path === 'string' && (path === nativePath || (!usingPosixSep && path === targetPath)) ? pattern : null;\n        };\n    }\n    parsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + targetPath];\n    return parsedPattern;\n}\nfunction toRegExp(pattern) {\n    try {\n        const regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n        return function (path) {\n            regExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n            return typeof path === 'string' && regExp.test(path) ? pattern : null;\n        };\n    }\n    catch (error) {\n        return NULL;\n    }\n}\nexport function match(arg1, path, hasSibling) {\n    if (!arg1 || typeof path !== 'string') {\n        return false;\n    }\n    return parse(arg1)(path, undefined, hasSibling);\n}\nexport function parse(arg1, options = {}) {\n    if (!arg1) {\n        return FALSE;\n    }\n    // Glob with String\n    if (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n        const parsedPattern = parsePattern(arg1, options);\n        if (parsedPattern === NULL) {\n            return FALSE;\n        }\n        const resultPattern = function (path, basename) {\n            return !!parsedPattern(path, basename);\n        };\n        if (parsedPattern.allBasenames) {\n            resultPattern.allBasenames = parsedPattern.allBasenames;\n        }\n        if (parsedPattern.allPaths) {\n            resultPattern.allPaths = parsedPattern.allPaths;\n        }\n        return resultPattern;\n    }\n    // Glob with Expression\n    return parsedExpression(arg1, options);\n}\nexport function isRelativePattern(obj) {\n    const rp = obj;\n    if (!rp) {\n        return false;\n    }\n    return typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\nfunction parsedExpression(expression, options) {\n    const parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n        .map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n        .filter(pattern => pattern !== NULL));\n    const patternsLength = parsedPatterns.length;\n    if (!patternsLength) {\n        return NULL;\n    }\n    if (!parsedPatterns.some(parsedPattern => !!parsedPattern.requiresSiblings)) {\n        if (patternsLength === 1) {\n            return parsedPatterns[0];\n        }\n        const resultExpression = function (path, basename) {\n            let resultPromises = undefined;\n            for (let i = 0, n = parsedPatterns.length; i < n; i++) {\n                const result = parsedPatterns[i](path, basename);\n                if (typeof result === 'string') {\n                    return result; // immediately return as soon as the first expression matches\n                }\n                // If the result is a promise, we have to keep it for\n                // later processing and await the result properly.\n                if (isThenable(result)) {\n                    if (!resultPromises) {\n                        resultPromises = [];\n                    }\n                    resultPromises.push(result);\n                }\n            }\n            // With result promises, we have to loop over each and\n            // await the result before we can return any result.\n            if (resultPromises) {\n                return (() => __awaiter(this, void 0, void 0, function* () {\n                    for (const resultPromise of resultPromises) {\n                        const result = yield resultPromise;\n                        if (typeof result === 'string') {\n                            return result;\n                        }\n                    }\n                    return null;\n                }))();\n            }\n            return null;\n        };\n        const withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n        if (withBasenames) {\n            resultExpression.allBasenames = withBasenames.allBasenames;\n        }\n        const allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, []);\n        if (allPaths.length) {\n            resultExpression.allPaths = allPaths;\n        }\n        return resultExpression;\n    }\n    const resultExpression = function (path, base, hasSibling) {\n        let name = undefined;\n        let resultPromises = undefined;\n        for (let i = 0, n = parsedPatterns.length; i < n; i++) {\n            // Pattern matches path\n            const parsedPattern = parsedPatterns[i];\n            if (parsedPattern.requiresSiblings && hasSibling) {\n                if (!base) {\n                    base = basename(path);\n                }\n                if (!name) {\n                    name = base.substr(0, base.length - extname(path).length);\n                }\n            }\n            const result = parsedPattern(path, base, name, hasSibling);\n            if (typeof result === 'string') {\n                return result; // immediately return as soon as the first expression matches\n            }\n            // If the result is a promise, we have to keep it for\n            // later processing and await the result properly.\n            if (isThenable(result)) {\n                if (!resultPromises) {\n                    resultPromises = [];\n                }\n                resultPromises.push(result);\n            }\n        }\n        // With result promises, we have to loop over each and\n        // await the result before we can return any result.\n        if (resultPromises) {\n            return (() => __awaiter(this, void 0, void 0, function* () {\n                for (const resultPromise of resultPromises) {\n                    const result = yield resultPromise;\n                    if (typeof result === 'string') {\n                        return result;\n                    }\n                }\n                return null;\n            }))();\n        }\n        return null;\n    };\n    const withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n    if (withBasenames) {\n        resultExpression.allBasenames = withBasenames.allBasenames;\n    }\n    const allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, []);\n    if (allPaths.length) {\n        resultExpression.allPaths = allPaths;\n    }\n    return resultExpression;\n}\nfunction parseExpressionPattern(pattern, value, options) {\n    if (value === false) {\n        return NULL; // pattern is disabled\n    }\n    const parsedPattern = parsePattern(pattern, options);\n    if (parsedPattern === NULL) {\n        return NULL;\n    }\n    // Expression Pattern is <boolean>\n    if (typeof value === 'boolean') {\n        return parsedPattern;\n    }\n    // Expression Pattern is <SiblingClause>\n    if (value) {\n        const when = value.when;\n        if (typeof when === 'string') {\n            const result = (path, basename, name, hasSibling) => {\n                if (!hasSibling || !parsedPattern(path, basename)) {\n                    return null;\n                }\n                const clausePattern = when.replace('$(basename)', () => name);\n                const matched = hasSibling(clausePattern);\n                return isThenable(matched) ?\n                    matched.then(match => match ? pattern : null) :\n                    matched ? pattern : null;\n            };\n            result.requiresSiblings = true;\n            return result;\n        }\n    }\n    // Expression is anything\n    return parsedPattern;\n}\nfunction aggregateBasenameMatches(parsedPatterns, result) {\n    const basenamePatterns = parsedPatterns.filter(parsedPattern => !!parsedPattern.basenames);\n    if (basenamePatterns.length < 2) {\n        return parsedPatterns;\n    }\n    const basenames = basenamePatterns.reduce((all, current) => {\n        const basenames = current.basenames;\n        return basenames ? all.concat(basenames) : all;\n    }, []);\n    let patterns;\n    if (result) {\n        patterns = [];\n        for (let i = 0, n = basenames.length; i < n; i++) {\n            patterns.push(result);\n        }\n    }\n    else {\n        patterns = basenamePatterns.reduce((all, current) => {\n            const patterns = current.patterns;\n            return patterns ? all.concat(patterns) : all;\n        }, []);\n    }\n    const aggregate = function (path, basename) {\n        if (typeof path !== 'string') {\n            return null;\n        }\n        if (!basename) {\n            let i;\n            for (i = path.length; i > 0; i--) {\n                const ch = path.charCodeAt(i - 1);\n                if (ch === 47 /* CharCode.Slash */ || ch === 92 /* CharCode.Backslash */) {\n                    break;\n                }\n            }\n            basename = path.substr(i);\n        }\n        const index = basenames.indexOf(basename);\n        return index !== -1 ? patterns[index] : null;\n    };\n    aggregate.basenames = basenames;\n    aggregate.patterns = patterns;\n    aggregate.allBasenames = basenames;\n    const aggregatedPatterns = parsedPatterns.filter(parsedPattern => !parsedPattern.basenames);\n    aggregatedPatterns.push(aggregate);\n    return aggregatedPatterns;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\n/**\n * Return a hash value for an object.\n */\nexport function hash(obj) {\n    return doHash(obj, 0);\n}\nexport function doHash(obj, hashVal) {\n    switch (typeof obj) {\n        case 'object':\n            if (obj === null) {\n                return numberHash(349, hashVal);\n            }\n            else if (Array.isArray(obj)) {\n                return arrayHash(obj, hashVal);\n            }\n            return objectHash(obj, hashVal);\n        case 'string':\n            return stringHash(obj, hashVal);\n        case 'boolean':\n            return booleanHash(obj, hashVal);\n        case 'number':\n            return numberHash(obj, hashVal);\n        case 'undefined':\n            return numberHash(937, hashVal);\n        default:\n            return numberHash(617, hashVal);\n    }\n}\nexport function numberHash(val, initialHashVal) {\n    return (((initialHashVal << 5) - initialHashVal) + val) | 0; // hashVal * 31 + ch, keep as int32\n}\nfunction booleanHash(b, initialHashVal) {\n    return numberHash(b ? 433 : 863, initialHashVal);\n}\nexport function stringHash(s, hashVal) {\n    hashVal = numberHash(149417, hashVal);\n    for (let i = 0, length = s.length; i < length; i++) {\n        hashVal = numberHash(s.charCodeAt(i), hashVal);\n    }\n    return hashVal;\n}\nfunction arrayHash(arr, initialHashVal) {\n    initialHashVal = numberHash(104579, initialHashVal);\n    return arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\nfunction objectHash(obj, initialHashVal) {\n    initialHashVal = numberHash(181387, initialHashVal);\n    return Object.keys(obj).sort().reduce((hashVal, key) => {\n        hashVal = stringHash(key, hashVal);\n        return doHash(obj[key], hashVal);\n    }, initialHashVal);\n}\nfunction leftRotate(value, bits, totalBits = 32) {\n    // delta + bits = totalBits\n    const delta = totalBits - bits;\n    // All ones, expect `delta` zeros aligned to the right\n    const mask = ~((1 << delta) - 1);\n    // Join (value left-shifted `bits` bits) with (masked value right-shifted `delta` bits)\n    return ((value << bits) | ((mask & value) >>> delta)) >>> 0;\n}\nfunction fill(dest, index = 0, count = dest.byteLength, value = 0) {\n    for (let i = 0; i < count; i++) {\n        dest[index + i] = value;\n    }\n}\nfunction leftPad(value, length, char = '0') {\n    while (value.length < length) {\n        value = char + value;\n    }\n    return value;\n}\nexport function toHexString(bufferOrValue, bitsize = 32) {\n    if (bufferOrValue instanceof ArrayBuffer) {\n        return Array.from(new Uint8Array(bufferOrValue)).map(b => b.toString(16).padStart(2, '0')).join('');\n    }\n    return leftPad((bufferOrValue >>> 0).toString(16), bitsize / 4);\n}\n/**\n * A SHA1 implementation that works with strings and does not allocate.\n */\nclass StringSHA1 {\n    constructor() {\n        this._h0 = 0x67452301;\n        this._h1 = 0xEFCDAB89;\n        this._h2 = 0x98BADCFE;\n        this._h3 = 0x10325476;\n        this._h4 = 0xC3D2E1F0;\n        this._buff = new Uint8Array(64 /* SHA1Constant.BLOCK_SIZE */ + 3 /* to fit any utf-8 */);\n        this._buffDV = new DataView(this._buff.buffer);\n        this._buffLen = 0;\n        this._totalLen = 0;\n        this._leftoverHighSurrogate = 0;\n        this._finished = false;\n    }\n    update(str) {\n        const strLen = str.length;\n        if (strLen === 0) {\n            return;\n        }\n        const buff = this._buff;\n        let buffLen = this._buffLen;\n        let leftoverHighSurrogate = this._leftoverHighSurrogate;\n        let charCode;\n        let offset;\n        if (leftoverHighSurrogate !== 0) {\n            charCode = leftoverHighSurrogate;\n            offset = -1;\n            leftoverHighSurrogate = 0;\n        }\n        else {\n            charCode = str.charCodeAt(0);\n            offset = 0;\n        }\n        while (true) {\n            let codePoint = charCode;\n            if (strings.isHighSurrogate(charCode)) {\n                if (offset + 1 < strLen) {\n                    const nextCharCode = str.charCodeAt(offset + 1);\n                    if (strings.isLowSurrogate(nextCharCode)) {\n                        offset++;\n                        codePoint = strings.computeCodePoint(charCode, nextCharCode);\n                    }\n                    else {\n                        // illegal => unicode replacement character\n                        codePoint = 65533 /* SHA1Constant.UNICODE_REPLACEMENT */;\n                    }\n                }\n                else {\n                    // last character is a surrogate pair\n                    leftoverHighSurrogate = charCode;\n                    break;\n                }\n            }\n            else if (strings.isLowSurrogate(charCode)) {\n                // illegal => unicode replacement character\n                codePoint = 65533 /* SHA1Constant.UNICODE_REPLACEMENT */;\n            }\n            buffLen = this._push(buff, buffLen, codePoint);\n            offset++;\n            if (offset < strLen) {\n                charCode = str.charCodeAt(offset);\n            }\n            else {\n                break;\n            }\n        }\n        this._buffLen = buffLen;\n        this._leftoverHighSurrogate = leftoverHighSurrogate;\n    }\n    _push(buff, buffLen, codePoint) {\n        if (codePoint < 0x0080) {\n            buff[buffLen++] = codePoint;\n        }\n        else if (codePoint < 0x0800) {\n            buff[buffLen++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else if (codePoint < 0x10000) {\n            buff[buffLen++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else {\n            buff[buffLen++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        if (buffLen >= 64 /* SHA1Constant.BLOCK_SIZE */) {\n            this._step();\n            buffLen -= 64 /* SHA1Constant.BLOCK_SIZE */;\n            this._totalLen += 64 /* SHA1Constant.BLOCK_SIZE */;\n            // take last 3 in case of UTF8 overflow\n            buff[0] = buff[64 /* SHA1Constant.BLOCK_SIZE */ + 0];\n            buff[1] = buff[64 /* SHA1Constant.BLOCK_SIZE */ + 1];\n            buff[2] = buff[64 /* SHA1Constant.BLOCK_SIZE */ + 2];\n        }\n        return buffLen;\n    }\n    digest() {\n        if (!this._finished) {\n            this._finished = true;\n            if (this._leftoverHighSurrogate) {\n                // illegal => unicode replacement character\n                this._leftoverHighSurrogate = 0;\n                this._buffLen = this._push(this._buff, this._buffLen, 65533 /* SHA1Constant.UNICODE_REPLACEMENT */);\n            }\n            this._totalLen += this._buffLen;\n            this._wrapUp();\n        }\n        return toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n    }\n    _wrapUp() {\n        this._buff[this._buffLen++] = 0x80;\n        fill(this._buff, this._buffLen);\n        if (this._buffLen > 56) {\n            this._step();\n            fill(this._buff);\n        }\n        // this will fit because the mantissa can cover up to 52 bits\n        const ml = 8 * this._totalLen;\n        this._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n        this._buffDV.setUint32(60, ml % 4294967296, false);\n        this._step();\n    }\n    _step() {\n        const bigBlock32 = StringSHA1._bigBlock32;\n        const data = this._buffDV;\n        for (let j = 0; j < 64 /* 16*4 */; j += 4) {\n            bigBlock32.setUint32(j, data.getUint32(j, false), false);\n        }\n        for (let j = 64; j < 320 /* 80*4 */; j += 4) {\n            bigBlock32.setUint32(j, leftRotate((bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false)), 1), false);\n        }\n        let a = this._h0;\n        let b = this._h1;\n        let c = this._h2;\n        let d = this._h3;\n        let e = this._h4;\n        let f, k;\n        let temp;\n        for (let j = 0; j < 80; j++) {\n            if (j < 20) {\n                f = (b & c) | ((~b) & d);\n                k = 0x5A827999;\n            }\n            else if (j < 40) {\n                f = b ^ c ^ d;\n                k = 0x6ED9EBA1;\n            }\n            else if (j < 60) {\n                f = (b & c) | (b & d) | (c & d);\n                k = 0x8F1BBCDC;\n            }\n            else {\n                f = b ^ c ^ d;\n                k = 0xCA62C1D6;\n            }\n            temp = (leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false)) & 0xffffffff;\n            e = d;\n            d = c;\n            c = leftRotate(b, 30);\n            b = a;\n            a = temp;\n        }\n        this._h0 = (this._h0 + a) & 0xffffffff;\n        this._h1 = (this._h1 + b) & 0xffffffff;\n        this._h2 = (this._h2 + c) & 0xffffffff;\n        this._h3 = (this._h3 + d) & 0xffffffff;\n        this._h4 = (this._h4 + e) & 0xffffffff;\n    }\n}\nStringSHA1._bigBlock32 = new DataView(new ArrayBuffer(320)); // 80 * 4 = 320\nexport { StringSHA1 };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ArrayNavigator } from './navigator.js';\nexport class HistoryNavigator {\n    constructor(history = [], limit = 10) {\n        this._initialize(history);\n        this._limit = limit;\n        this._onChange();\n    }\n    getHistory() {\n        return this._elements;\n    }\n    add(t) {\n        this._history.delete(t);\n        this._history.add(t);\n        this._onChange();\n    }\n    next() {\n        if (this._currentPosition() !== this._elements.length - 1) {\n            return this._navigator.next();\n        }\n        return null;\n    }\n    previous() {\n        if (this._currentPosition() !== 0) {\n            return this._navigator.previous();\n        }\n        return null;\n    }\n    current() {\n        return this._navigator.current();\n    }\n    first() {\n        return this._navigator.first();\n    }\n    last() {\n        return this._navigator.last();\n    }\n    isLast() {\n        return this._currentPosition() === this._elements.length - 1;\n    }\n    isNowhere() {\n        return this._navigator.current() === null;\n    }\n    has(t) {\n        return this._history.has(t);\n    }\n    _onChange() {\n        this._reduceToLimit();\n        const elements = this._elements;\n        this._navigator = new ArrayNavigator(elements, 0, elements.length, elements.length);\n    }\n    _reduceToLimit() {\n        const data = this._elements;\n        if (data.length > this._limit) {\n            this._initialize(data.slice(data.length - this._limit));\n        }\n    }\n    _currentPosition() {\n        const currentElement = this._navigator.current();\n        if (!currentElement) {\n            return -1;\n        }\n        return this._elements.indexOf(currentElement);\n    }\n    _initialize(history) {\n        this._history = new Set();\n        for (const entry of history) {\n            this._history.add(entry);\n        }\n    }\n    get _elements() {\n        const elements = [];\n        this._history.forEach(e => elements.push(e));\n        return elements;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from './errors.js';\nimport { escapeIcons } from './iconLabels.js';\nimport { escapeRegExpCharacters } from './strings.js';\nexport class MarkdownString {\n    constructor(value = '', isTrustedOrOptions = false) {\n        var _a, _b, _c;\n        this.value = value;\n        if (typeof this.value !== 'string') {\n            throw illegalArgument('value');\n        }\n        if (typeof isTrustedOrOptions === 'boolean') {\n            this.isTrusted = isTrustedOrOptions;\n            this.supportThemeIcons = false;\n            this.supportHtml = false;\n        }\n        else {\n            this.isTrusted = (_a = isTrustedOrOptions.isTrusted) !== null && _a !== void 0 ? _a : undefined;\n            this.supportThemeIcons = (_b = isTrustedOrOptions.supportThemeIcons) !== null && _b !== void 0 ? _b : false;\n            this.supportHtml = (_c = isTrustedOrOptions.supportHtml) !== null && _c !== void 0 ? _c : false;\n        }\n    }\n    appendText(value, newlineStyle = 0 /* MarkdownStringTextNewlineStyle.Paragraph */) {\n        this.value += escapeMarkdownSyntaxTokens(this.supportThemeIcons ? escapeIcons(value) : value)\n            .replace(/([ \\t]+)/g, (_match, g1) => '&nbsp;'.repeat(g1.length))\n            .replace(/\\>/gm, '\\\\>')\n            .replace(/\\n/g, newlineStyle === 1 /* MarkdownStringTextNewlineStyle.Break */ ? '\\\\\\n' : '\\n\\n');\n        return this;\n    }\n    appendMarkdown(value) {\n        this.value += value;\n        return this;\n    }\n    appendCodeblock(langId, code) {\n        this.value += '\\n```';\n        this.value += langId;\n        this.value += '\\n';\n        this.value += code;\n        this.value += '\\n```\\n';\n        return this;\n    }\n    appendLink(target, label, title) {\n        this.value += '[';\n        this.value += this._escape(label, ']');\n        this.value += '](';\n        this.value += this._escape(String(target), ')');\n        if (title) {\n            this.value += ` \"${this._escape(this._escape(title, '\"'), ')')}\"`;\n        }\n        this.value += ')';\n        return this;\n    }\n    _escape(value, ch) {\n        const r = new RegExp(escapeRegExpCharacters(ch), 'g');\n        return value.replace(r, (match, offset) => {\n            if (value.charAt(offset - 1) !== '\\\\') {\n                return `\\\\${match}`;\n            }\n            else {\n                return match;\n            }\n        });\n    }\n}\nexport function isEmptyMarkdownString(oneOrMany) {\n    if (isMarkdownString(oneOrMany)) {\n        return !oneOrMany.value;\n    }\n    else if (Array.isArray(oneOrMany)) {\n        return oneOrMany.every(isEmptyMarkdownString);\n    }\n    else {\n        return true;\n    }\n}\nexport function isMarkdownString(thing) {\n    if (thing instanceof MarkdownString) {\n        return true;\n    }\n    else if (thing && typeof thing === 'object') {\n        return typeof thing.value === 'string'\n            && (typeof thing.isTrusted === 'boolean' || thing.isTrusted === undefined)\n            && (typeof thing.supportThemeIcons === 'boolean' || thing.supportThemeIcons === undefined);\n    }\n    return false;\n}\nexport function escapeMarkdownSyntaxTokens(text) {\n    // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    return text.replace(/[\\\\`*_{}[\\]()#+\\-!~]/g, '\\\\$&');\n}\nexport function escapeDoubleQuotes(input) {\n    return input.replace(/\"/g, '&quot;');\n}\nexport function removeMarkdownEscapes(text) {\n    if (!text) {\n        return text;\n    }\n    return text.replace(/\\\\([\\\\`*_{}[\\]()#+\\-.!~])/g, '$1');\n}\nexport function parseHrefAndDimensions(href) {\n    const dimensions = [];\n    const splitted = href.split('|').map(s => s.trim());\n    href = splitted[0];\n    const parameters = splitted[1];\n    if (parameters) {\n        const heightFromParams = /height=(\\d+)/.exec(parameters);\n        const widthFromParams = /width=(\\d+)/.exec(parameters);\n        const height = heightFromParams ? heightFromParams[1] : '';\n        const width = widthFromParams ? widthFromParams[1] : '';\n        const widthIsFinite = isFinite(parseInt(width));\n        const heightIsFinite = isFinite(parseInt(height));\n        if (widthIsFinite) {\n            dimensions.push(`width=\"${width}\"`);\n        }\n        if (heightIsFinite) {\n            dimensions.push(`height=\"${height}\"`);\n        }\n    }\n    return { href, dimensions };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { matchesFuzzy } from './filters.js';\nimport { ltrim } from './strings.js';\nimport { ThemeIcon } from './themables.js';\nconst iconStartMarker = '$(';\nconst iconsRegex = new RegExp(`\\\\$\\\\(${ThemeIcon.iconNameExpression}(?:${ThemeIcon.iconModifierExpression})?\\\\)`, 'g'); // no capturing groups\nconst escapeIconsRegex = new RegExp(`(\\\\\\\\)?${iconsRegex.source}`, 'g');\nexport function escapeIcons(text) {\n    return text.replace(escapeIconsRegex, (match, escaped) => escaped ? match : `\\\\${match}`);\n}\nconst markdownEscapedIconsRegex = new RegExp(`\\\\\\\\${iconsRegex.source}`, 'g');\nexport function markdownEscapeEscapedIcons(text) {\n    // Need to add an extra \\ for escaping in markdown\n    return text.replace(markdownEscapedIconsRegex, match => `\\\\${match}`);\n}\nconst stripIconsRegex = new RegExp(`(\\\\s)?(\\\\\\\\)?${iconsRegex.source}(\\\\s)?`, 'g');\n/**\n * Takes a label with icons (`$(iconId)xyz`)  and strips the icons out (`xyz`)\n */\nexport function stripIcons(text) {\n    if (text.indexOf(iconStartMarker) === -1) {\n        return text;\n    }\n    return text.replace(stripIconsRegex, (match, preWhitespace, escaped, postWhitespace) => escaped ? match : preWhitespace || postWhitespace || '');\n}\n/**\n * Takes a label with icons (`$(iconId)xyz`), removes the icon syntax adds whitespace so that screen readers can read the text better.\n */\nexport function getCodiconAriaLabel(text) {\n    if (!text) {\n        return '';\n    }\n    return text.replace(/\\$\\((.*?)\\)/g, (_match, codiconName) => ` ${codiconName} `).trim();\n}\nconst _parseIconsRegex = new RegExp(`\\\\$\\\\(${ThemeIcon.iconNameCharacter}+\\\\)`, 'g');\n/**\n * Takes a label with icons (`abc $(iconId)xyz`) and returns the text (`abc xyz`) and the offsets of the icons (`[3]`)\n */\nexport function parseLabelWithIcons(input) {\n    _parseIconsRegex.lastIndex = 0;\n    let text = '';\n    const iconOffsets = [];\n    let iconsOffset = 0;\n    while (true) {\n        const pos = _parseIconsRegex.lastIndex;\n        const match = _parseIconsRegex.exec(input);\n        const chars = input.substring(pos, match === null || match === void 0 ? void 0 : match.index);\n        if (chars.length > 0) {\n            text += chars;\n            for (let i = 0; i < chars.length; i++) {\n                iconOffsets.push(iconsOffset);\n            }\n        }\n        if (!match) {\n            break;\n        }\n        iconsOffset += match[0].length;\n    }\n    return { text, iconOffsets };\n}\nexport function matchesFuzzyIconAware(query, target, enableSeparateSubstringMatching = false) {\n    const { text, iconOffsets } = target;\n    // Return early if there are no icon markers in the word to match against\n    if (!iconOffsets || iconOffsets.length === 0) {\n        return matchesFuzzy(query, text, enableSeparateSubstringMatching);\n    }\n    // Trim the word to match against because it could have leading\n    // whitespace now if the word started with an icon\n    const wordToMatchAgainstWithoutIconsTrimmed = ltrim(text, ' ');\n    const leadingWhitespaceOffset = text.length - wordToMatchAgainstWithoutIconsTrimmed.length;\n    // match on value without icon\n    const matches = matchesFuzzy(query, wordToMatchAgainstWithoutIconsTrimmed, enableSeparateSubstringMatching);\n    // Map matches back to offsets with icon and trimming\n    if (matches) {\n        for (const match of matches) {\n            const iconOffset = iconOffsets[match.start + leadingWhitespaceOffset] /* icon offsets at index */ + leadingWhitespaceOffset /* overall leading whitespace offset */;\n            match.start += iconOffset;\n            match.end += iconOffset;\n        }\n    }\n    return matches;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class IdGenerator {\n    constructor(prefix) {\n        this._prefix = prefix;\n        this._lastId = 0;\n    }\n    nextId() {\n        return this._prefix + (++this._lastId);\n    }\n}\nexport const defaultGenerator = new IdGenerator('id#');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from './event.js';\nexport class IMEImpl {\n    constructor() {\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._enabled = true;\n    }\n    get enabled() {\n        return this._enabled;\n    }\n    /**\n     * Enable IME\n     */\n    enable() {\n        this._enabled = true;\n        this._onDidChange.fire();\n    }\n    /**\n     * Disable IME\n     */\n    disable() {\n        this._enabled = false;\n        this._onDidChange.fire();\n    }\n}\nexport const IME = new IMEImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var Iterable;\n(function (Iterable) {\n    function is(thing) {\n        return thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n    }\n    Iterable.is = is;\n    const _empty = Object.freeze([]);\n    function empty() {\n        return _empty;\n    }\n    Iterable.empty = empty;\n    function* single(element) {\n        yield element;\n    }\n    Iterable.single = single;\n    function wrap(iterableOrElement) {\n        if (is(iterableOrElement)) {\n            return iterableOrElement;\n        }\n        else {\n            return single(iterableOrElement);\n        }\n    }\n    Iterable.wrap = wrap;\n    function from(iterable) {\n        return iterable || _empty;\n    }\n    Iterable.from = from;\n    function isEmpty(iterable) {\n        return !iterable || iterable[Symbol.iterator]().next().done === true;\n    }\n    Iterable.isEmpty = isEmpty;\n    function first(iterable) {\n        return iterable[Symbol.iterator]().next().value;\n    }\n    Iterable.first = first;\n    function some(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    Iterable.some = some;\n    function find(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return undefined;\n    }\n    Iterable.find = find;\n    function* filter(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                yield element;\n            }\n        }\n    }\n    Iterable.filter = filter;\n    function* map(iterable, fn) {\n        let index = 0;\n        for (const element of iterable) {\n            yield fn(element, index++);\n        }\n    }\n    Iterable.map = map;\n    function* concat(...iterables) {\n        for (const iterable of iterables) {\n            for (const element of iterable) {\n                yield element;\n            }\n        }\n    }\n    Iterable.concat = concat;\n    function reduce(iterable, reducer, initialValue) {\n        let value = initialValue;\n        for (const element of iterable) {\n            value = reducer(value, element);\n        }\n        return value;\n    }\n    Iterable.reduce = reduce;\n    /**\n     * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\n     */\n    function* slice(arr, from, to = arr.length) {\n        if (from < 0) {\n            from += arr.length;\n        }\n        if (to < 0) {\n            to += arr.length;\n        }\n        else if (to > arr.length) {\n            to = arr.length;\n        }\n        for (; from < to; from++) {\n            yield arr[from];\n        }\n    }\n    Iterable.slice = slice;\n    /**\n     * Consumes `atMost` elements from iterable and returns the consumed elements,\n     * and an iterable for the rest of the elements.\n     */\n    function consume(iterable, atMost = Number.POSITIVE_INFINITY) {\n        const consumed = [];\n        if (atMost === 0) {\n            return [consumed, iterable];\n        }\n        const iterator = iterable[Symbol.iterator]();\n        for (let i = 0; i < atMost; i++) {\n            const next = iterator.next();\n            if (next.done) {\n                return [consumed, Iterable.empty()];\n            }\n            consumed.push(next.value);\n        }\n        return [consumed, { [Symbol.iterator]() { return iterator; } }];\n    }\n    Iterable.consume = consume;\n})(Iterable || (Iterable = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass KeyCodeStrMap {\n    constructor() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    define(keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    }\n    keyCodeToStr(keyCode) {\n        return this._keyCodeToStr[keyCode];\n    }\n    strToKeyCode(str) {\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* KeyCode.Unknown */;\n    }\n}\nconst uiMap = new KeyCodeStrMap();\nconst userSettingsUSMap = new KeyCodeStrMap();\nconst userSettingsGeneralMap = new KeyCodeStrMap();\nexport const EVENT_KEY_CODE_MAP = new Array(230);\nexport const NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE = {};\nconst scanCodeIntToStr = [];\nconst scanCodeStrToInt = Object.create(null);\nconst scanCodeLowerCaseStrToInt = Object.create(null);\n/**\n * -1 if a ScanCode => KeyCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_CODE_TO_KEY_CODE = [];\n/**\n * -1 if a KeyCode => ScanCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_KEY_CODE_TO_CODE = [];\nfor (let i = 0; i <= 193 /* ScanCode.MAX_VALUE */; i++) {\n    IMMUTABLE_CODE_TO_KEY_CODE[i] = -1 /* KeyCode.DependsOnKbLayout */;\n}\nfor (let i = 0; i <= 127 /* KeyCode.MAX_VALUE */; i++) {\n    IMMUTABLE_KEY_CODE_TO_CODE[i] = -1 /* ScanCode.DependsOnKbLayout */;\n}\n(function () {\n    // See https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n    // See https://github.com/microsoft/node-native-keymap/blob/master/deps/chromium/keyboard_codes_win.h\n    const empty = '';\n    const mappings = [\n        // keyCodeOrd, immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel\n        [0, 1, 0 /* ScanCode.None */, 'None', 0 /* KeyCode.Unknown */, 'unknown', 0, 'VK_UNKNOWN', empty, empty],\n        [0, 1, 1 /* ScanCode.Hyper */, 'Hyper', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 2 /* ScanCode.Super */, 'Super', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 3 /* ScanCode.Fn */, 'Fn', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 4 /* ScanCode.FnLock */, 'FnLock', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 5 /* ScanCode.Suspend */, 'Suspend', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 6 /* ScanCode.Resume */, 'Resume', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 7 /* ScanCode.Turbo */, 'Turbo', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 8 /* ScanCode.Sleep */, 'Sleep', 0 /* KeyCode.Unknown */, empty, 0, 'VK_SLEEP', empty, empty],\n        [0, 1, 9 /* ScanCode.WakeUp */, 'WakeUp', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [31, 0, 10 /* ScanCode.KeyA */, 'KeyA', 31 /* KeyCode.KeyA */, 'A', 65, 'VK_A', empty, empty],\n        [32, 0, 11 /* ScanCode.KeyB */, 'KeyB', 32 /* KeyCode.KeyB */, 'B', 66, 'VK_B', empty, empty],\n        [33, 0, 12 /* ScanCode.KeyC */, 'KeyC', 33 /* KeyCode.KeyC */, 'C', 67, 'VK_C', empty, empty],\n        [34, 0, 13 /* ScanCode.KeyD */, 'KeyD', 34 /* KeyCode.KeyD */, 'D', 68, 'VK_D', empty, empty],\n        [35, 0, 14 /* ScanCode.KeyE */, 'KeyE', 35 /* KeyCode.KeyE */, 'E', 69, 'VK_E', empty, empty],\n        [36, 0, 15 /* ScanCode.KeyF */, 'KeyF', 36 /* KeyCode.KeyF */, 'F', 70, 'VK_F', empty, empty],\n        [37, 0, 16 /* ScanCode.KeyG */, 'KeyG', 37 /* KeyCode.KeyG */, 'G', 71, 'VK_G', empty, empty],\n        [38, 0, 17 /* ScanCode.KeyH */, 'KeyH', 38 /* KeyCode.KeyH */, 'H', 72, 'VK_H', empty, empty],\n        [39, 0, 18 /* ScanCode.KeyI */, 'KeyI', 39 /* KeyCode.KeyI */, 'I', 73, 'VK_I', empty, empty],\n        [40, 0, 19 /* ScanCode.KeyJ */, 'KeyJ', 40 /* KeyCode.KeyJ */, 'J', 74, 'VK_J', empty, empty],\n        [41, 0, 20 /* ScanCode.KeyK */, 'KeyK', 41 /* KeyCode.KeyK */, 'K', 75, 'VK_K', empty, empty],\n        [42, 0, 21 /* ScanCode.KeyL */, 'KeyL', 42 /* KeyCode.KeyL */, 'L', 76, 'VK_L', empty, empty],\n        [43, 0, 22 /* ScanCode.KeyM */, 'KeyM', 43 /* KeyCode.KeyM */, 'M', 77, 'VK_M', empty, empty],\n        [44, 0, 23 /* ScanCode.KeyN */, 'KeyN', 44 /* KeyCode.KeyN */, 'N', 78, 'VK_N', empty, empty],\n        [45, 0, 24 /* ScanCode.KeyO */, 'KeyO', 45 /* KeyCode.KeyO */, 'O', 79, 'VK_O', empty, empty],\n        [46, 0, 25 /* ScanCode.KeyP */, 'KeyP', 46 /* KeyCode.KeyP */, 'P', 80, 'VK_P', empty, empty],\n        [47, 0, 26 /* ScanCode.KeyQ */, 'KeyQ', 47 /* KeyCode.KeyQ */, 'Q', 81, 'VK_Q', empty, empty],\n        [48, 0, 27 /* ScanCode.KeyR */, 'KeyR', 48 /* KeyCode.KeyR */, 'R', 82, 'VK_R', empty, empty],\n        [49, 0, 28 /* ScanCode.KeyS */, 'KeyS', 49 /* KeyCode.KeyS */, 'S', 83, 'VK_S', empty, empty],\n        [50, 0, 29 /* ScanCode.KeyT */, 'KeyT', 50 /* KeyCode.KeyT */, 'T', 84, 'VK_T', empty, empty],\n        [51, 0, 30 /* ScanCode.KeyU */, 'KeyU', 51 /* KeyCode.KeyU */, 'U', 85, 'VK_U', empty, empty],\n        [52, 0, 31 /* ScanCode.KeyV */, 'KeyV', 52 /* KeyCode.KeyV */, 'V', 86, 'VK_V', empty, empty],\n        [53, 0, 32 /* ScanCode.KeyW */, 'KeyW', 53 /* KeyCode.KeyW */, 'W', 87, 'VK_W', empty, empty],\n        [54, 0, 33 /* ScanCode.KeyX */, 'KeyX', 54 /* KeyCode.KeyX */, 'X', 88, 'VK_X', empty, empty],\n        [55, 0, 34 /* ScanCode.KeyY */, 'KeyY', 55 /* KeyCode.KeyY */, 'Y', 89, 'VK_Y', empty, empty],\n        [56, 0, 35 /* ScanCode.KeyZ */, 'KeyZ', 56 /* KeyCode.KeyZ */, 'Z', 90, 'VK_Z', empty, empty],\n        [22, 0, 36 /* ScanCode.Digit1 */, 'Digit1', 22 /* KeyCode.Digit1 */, '1', 49, 'VK_1', empty, empty],\n        [23, 0, 37 /* ScanCode.Digit2 */, 'Digit2', 23 /* KeyCode.Digit2 */, '2', 50, 'VK_2', empty, empty],\n        [24, 0, 38 /* ScanCode.Digit3 */, 'Digit3', 24 /* KeyCode.Digit3 */, '3', 51, 'VK_3', empty, empty],\n        [25, 0, 39 /* ScanCode.Digit4 */, 'Digit4', 25 /* KeyCode.Digit4 */, '4', 52, 'VK_4', empty, empty],\n        [26, 0, 40 /* ScanCode.Digit5 */, 'Digit5', 26 /* KeyCode.Digit5 */, '5', 53, 'VK_5', empty, empty],\n        [27, 0, 41 /* ScanCode.Digit6 */, 'Digit6', 27 /* KeyCode.Digit6 */, '6', 54, 'VK_6', empty, empty],\n        [28, 0, 42 /* ScanCode.Digit7 */, 'Digit7', 28 /* KeyCode.Digit7 */, '7', 55, 'VK_7', empty, empty],\n        [29, 0, 43 /* ScanCode.Digit8 */, 'Digit8', 29 /* KeyCode.Digit8 */, '8', 56, 'VK_8', empty, empty],\n        [30, 0, 44 /* ScanCode.Digit9 */, 'Digit9', 30 /* KeyCode.Digit9 */, '9', 57, 'VK_9', empty, empty],\n        [21, 0, 45 /* ScanCode.Digit0 */, 'Digit0', 21 /* KeyCode.Digit0 */, '0', 48, 'VK_0', empty, empty],\n        [3, 1, 46 /* ScanCode.Enter */, 'Enter', 3 /* KeyCode.Enter */, 'Enter', 13, 'VK_RETURN', empty, empty],\n        [9, 1, 47 /* ScanCode.Escape */, 'Escape', 9 /* KeyCode.Escape */, 'Escape', 27, 'VK_ESCAPE', empty, empty],\n        [1, 1, 48 /* ScanCode.Backspace */, 'Backspace', 1 /* KeyCode.Backspace */, 'Backspace', 8, 'VK_BACK', empty, empty],\n        [2, 1, 49 /* ScanCode.Tab */, 'Tab', 2 /* KeyCode.Tab */, 'Tab', 9, 'VK_TAB', empty, empty],\n        [10, 1, 50 /* ScanCode.Space */, 'Space', 10 /* KeyCode.Space */, 'Space', 32, 'VK_SPACE', empty, empty],\n        [83, 0, 51 /* ScanCode.Minus */, 'Minus', 83 /* KeyCode.Minus */, '-', 189, 'VK_OEM_MINUS', '-', 'OEM_MINUS'],\n        [81, 0, 52 /* ScanCode.Equal */, 'Equal', 81 /* KeyCode.Equal */, '=', 187, 'VK_OEM_PLUS', '=', 'OEM_PLUS'],\n        [87, 0, 53 /* ScanCode.BracketLeft */, 'BracketLeft', 87 /* KeyCode.BracketLeft */, '[', 219, 'VK_OEM_4', '[', 'OEM_4'],\n        [89, 0, 54 /* ScanCode.BracketRight */, 'BracketRight', 89 /* KeyCode.BracketRight */, ']', 221, 'VK_OEM_6', ']', 'OEM_6'],\n        [88, 0, 55 /* ScanCode.Backslash */, 'Backslash', 88 /* KeyCode.Backslash */, '\\\\', 220, 'VK_OEM_5', '\\\\', 'OEM_5'],\n        [0, 0, 56 /* ScanCode.IntlHash */, 'IntlHash', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [80, 0, 57 /* ScanCode.Semicolon */, 'Semicolon', 80 /* KeyCode.Semicolon */, ';', 186, 'VK_OEM_1', ';', 'OEM_1'],\n        [90, 0, 58 /* ScanCode.Quote */, 'Quote', 90 /* KeyCode.Quote */, '\\'', 222, 'VK_OEM_7', '\\'', 'OEM_7'],\n        [86, 0, 59 /* ScanCode.Backquote */, 'Backquote', 86 /* KeyCode.Backquote */, '`', 192, 'VK_OEM_3', '`', 'OEM_3'],\n        [82, 0, 60 /* ScanCode.Comma */, 'Comma', 82 /* KeyCode.Comma */, ',', 188, 'VK_OEM_COMMA', ',', 'OEM_COMMA'],\n        [84, 0, 61 /* ScanCode.Period */, 'Period', 84 /* KeyCode.Period */, '.', 190, 'VK_OEM_PERIOD', '.', 'OEM_PERIOD'],\n        [85, 0, 62 /* ScanCode.Slash */, 'Slash', 85 /* KeyCode.Slash */, '/', 191, 'VK_OEM_2', '/', 'OEM_2'],\n        [8, 1, 63 /* ScanCode.CapsLock */, 'CapsLock', 8 /* KeyCode.CapsLock */, 'CapsLock', 20, 'VK_CAPITAL', empty, empty],\n        [59, 1, 64 /* ScanCode.F1 */, 'F1', 59 /* KeyCode.F1 */, 'F1', 112, 'VK_F1', empty, empty],\n        [60, 1, 65 /* ScanCode.F2 */, 'F2', 60 /* KeyCode.F2 */, 'F2', 113, 'VK_F2', empty, empty],\n        [61, 1, 66 /* ScanCode.F3 */, 'F3', 61 /* KeyCode.F3 */, 'F3', 114, 'VK_F3', empty, empty],\n        [62, 1, 67 /* ScanCode.F4 */, 'F4', 62 /* KeyCode.F4 */, 'F4', 115, 'VK_F4', empty, empty],\n        [63, 1, 68 /* ScanCode.F5 */, 'F5', 63 /* KeyCode.F5 */, 'F5', 116, 'VK_F5', empty, empty],\n        [64, 1, 69 /* ScanCode.F6 */, 'F6', 64 /* KeyCode.F6 */, 'F6', 117, 'VK_F6', empty, empty],\n        [65, 1, 70 /* ScanCode.F7 */, 'F7', 65 /* KeyCode.F7 */, 'F7', 118, 'VK_F7', empty, empty],\n        [66, 1, 71 /* ScanCode.F8 */, 'F8', 66 /* KeyCode.F8 */, 'F8', 119, 'VK_F8', empty, empty],\n        [67, 1, 72 /* ScanCode.F9 */, 'F9', 67 /* KeyCode.F9 */, 'F9', 120, 'VK_F9', empty, empty],\n        [68, 1, 73 /* ScanCode.F10 */, 'F10', 68 /* KeyCode.F10 */, 'F10', 121, 'VK_F10', empty, empty],\n        [69, 1, 74 /* ScanCode.F11 */, 'F11', 69 /* KeyCode.F11 */, 'F11', 122, 'VK_F11', empty, empty],\n        [70, 1, 75 /* ScanCode.F12 */, 'F12', 70 /* KeyCode.F12 */, 'F12', 123, 'VK_F12', empty, empty],\n        [0, 1, 76 /* ScanCode.PrintScreen */, 'PrintScreen', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [79, 1, 77 /* ScanCode.ScrollLock */, 'ScrollLock', 79 /* KeyCode.ScrollLock */, 'ScrollLock', 145, 'VK_SCROLL', empty, empty],\n        [7, 1, 78 /* ScanCode.Pause */, 'Pause', 7 /* KeyCode.PauseBreak */, 'PauseBreak', 19, 'VK_PAUSE', empty, empty],\n        [19, 1, 79 /* ScanCode.Insert */, 'Insert', 19 /* KeyCode.Insert */, 'Insert', 45, 'VK_INSERT', empty, empty],\n        [14, 1, 80 /* ScanCode.Home */, 'Home', 14 /* KeyCode.Home */, 'Home', 36, 'VK_HOME', empty, empty],\n        [11, 1, 81 /* ScanCode.PageUp */, 'PageUp', 11 /* KeyCode.PageUp */, 'PageUp', 33, 'VK_PRIOR', empty, empty],\n        [20, 1, 82 /* ScanCode.Delete */, 'Delete', 20 /* KeyCode.Delete */, 'Delete', 46, 'VK_DELETE', empty, empty],\n        [13, 1, 83 /* ScanCode.End */, 'End', 13 /* KeyCode.End */, 'End', 35, 'VK_END', empty, empty],\n        [12, 1, 84 /* ScanCode.PageDown */, 'PageDown', 12 /* KeyCode.PageDown */, 'PageDown', 34, 'VK_NEXT', empty, empty],\n        [17, 1, 85 /* ScanCode.ArrowRight */, 'ArrowRight', 17 /* KeyCode.RightArrow */, 'RightArrow', 39, 'VK_RIGHT', 'Right', empty],\n        [15, 1, 86 /* ScanCode.ArrowLeft */, 'ArrowLeft', 15 /* KeyCode.LeftArrow */, 'LeftArrow', 37, 'VK_LEFT', 'Left', empty],\n        [18, 1, 87 /* ScanCode.ArrowDown */, 'ArrowDown', 18 /* KeyCode.DownArrow */, 'DownArrow', 40, 'VK_DOWN', 'Down', empty],\n        [16, 1, 88 /* ScanCode.ArrowUp */, 'ArrowUp', 16 /* KeyCode.UpArrow */, 'UpArrow', 38, 'VK_UP', 'Up', empty],\n        [78, 1, 89 /* ScanCode.NumLock */, 'NumLock', 78 /* KeyCode.NumLock */, 'NumLock', 144, 'VK_NUMLOCK', empty, empty],\n        [108, 1, 90 /* ScanCode.NumpadDivide */, 'NumpadDivide', 108 /* KeyCode.NumpadDivide */, 'NumPad_Divide', 111, 'VK_DIVIDE', empty, empty],\n        [103, 1, 91 /* ScanCode.NumpadMultiply */, 'NumpadMultiply', 103 /* KeyCode.NumpadMultiply */, 'NumPad_Multiply', 106, 'VK_MULTIPLY', empty, empty],\n        [106, 1, 92 /* ScanCode.NumpadSubtract */, 'NumpadSubtract', 106 /* KeyCode.NumpadSubtract */, 'NumPad_Subtract', 109, 'VK_SUBTRACT', empty, empty],\n        [104, 1, 93 /* ScanCode.NumpadAdd */, 'NumpadAdd', 104 /* KeyCode.NumpadAdd */, 'NumPad_Add', 107, 'VK_ADD', empty, empty],\n        [3, 1, 94 /* ScanCode.NumpadEnter */, 'NumpadEnter', 3 /* KeyCode.Enter */, empty, 0, empty, empty, empty],\n        [94, 1, 95 /* ScanCode.Numpad1 */, 'Numpad1', 94 /* KeyCode.Numpad1 */, 'NumPad1', 97, 'VK_NUMPAD1', empty, empty],\n        [95, 1, 96 /* ScanCode.Numpad2 */, 'Numpad2', 95 /* KeyCode.Numpad2 */, 'NumPad2', 98, 'VK_NUMPAD2', empty, empty],\n        [96, 1, 97 /* ScanCode.Numpad3 */, 'Numpad3', 96 /* KeyCode.Numpad3 */, 'NumPad3', 99, 'VK_NUMPAD3', empty, empty],\n        [97, 1, 98 /* ScanCode.Numpad4 */, 'Numpad4', 97 /* KeyCode.Numpad4 */, 'NumPad4', 100, 'VK_NUMPAD4', empty, empty],\n        [98, 1, 99 /* ScanCode.Numpad5 */, 'Numpad5', 98 /* KeyCode.Numpad5 */, 'NumPad5', 101, 'VK_NUMPAD5', empty, empty],\n        [99, 1, 100 /* ScanCode.Numpad6 */, 'Numpad6', 99 /* KeyCode.Numpad6 */, 'NumPad6', 102, 'VK_NUMPAD6', empty, empty],\n        [100, 1, 101 /* ScanCode.Numpad7 */, 'Numpad7', 100 /* KeyCode.Numpad7 */, 'NumPad7', 103, 'VK_NUMPAD7', empty, empty],\n        [101, 1, 102 /* ScanCode.Numpad8 */, 'Numpad8', 101 /* KeyCode.Numpad8 */, 'NumPad8', 104, 'VK_NUMPAD8', empty, empty],\n        [102, 1, 103 /* ScanCode.Numpad9 */, 'Numpad9', 102 /* KeyCode.Numpad9 */, 'NumPad9', 105, 'VK_NUMPAD9', empty, empty],\n        [93, 1, 104 /* ScanCode.Numpad0 */, 'Numpad0', 93 /* KeyCode.Numpad0 */, 'NumPad0', 96, 'VK_NUMPAD0', empty, empty],\n        [107, 1, 105 /* ScanCode.NumpadDecimal */, 'NumpadDecimal', 107 /* KeyCode.NumpadDecimal */, 'NumPad_Decimal', 110, 'VK_DECIMAL', empty, empty],\n        [92, 0, 106 /* ScanCode.IntlBackslash */, 'IntlBackslash', 92 /* KeyCode.IntlBackslash */, 'OEM_102', 226, 'VK_OEM_102', empty, empty],\n        [58, 1, 107 /* ScanCode.ContextMenu */, 'ContextMenu', 58 /* KeyCode.ContextMenu */, 'ContextMenu', 93, empty, empty, empty],\n        [0, 1, 108 /* ScanCode.Power */, 'Power', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 109 /* ScanCode.NumpadEqual */, 'NumpadEqual', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [71, 1, 110 /* ScanCode.F13 */, 'F13', 71 /* KeyCode.F13 */, 'F13', 124, 'VK_F13', empty, empty],\n        [72, 1, 111 /* ScanCode.F14 */, 'F14', 72 /* KeyCode.F14 */, 'F14', 125, 'VK_F14', empty, empty],\n        [73, 1, 112 /* ScanCode.F15 */, 'F15', 73 /* KeyCode.F15 */, 'F15', 126, 'VK_F15', empty, empty],\n        [74, 1, 113 /* ScanCode.F16 */, 'F16', 74 /* KeyCode.F16 */, 'F16', 127, 'VK_F16', empty, empty],\n        [75, 1, 114 /* ScanCode.F17 */, 'F17', 75 /* KeyCode.F17 */, 'F17', 128, 'VK_F17', empty, empty],\n        [76, 1, 115 /* ScanCode.F18 */, 'F18', 76 /* KeyCode.F18 */, 'F18', 129, 'VK_F18', empty, empty],\n        [77, 1, 116 /* ScanCode.F19 */, 'F19', 77 /* KeyCode.F19 */, 'F19', 130, 'VK_F19', empty, empty],\n        [0, 1, 117 /* ScanCode.F20 */, 'F20', 0 /* KeyCode.Unknown */, empty, 0, 'VK_F20', empty, empty],\n        [0, 1, 118 /* ScanCode.F21 */, 'F21', 0 /* KeyCode.Unknown */, empty, 0, 'VK_F21', empty, empty],\n        [0, 1, 119 /* ScanCode.F22 */, 'F22', 0 /* KeyCode.Unknown */, empty, 0, 'VK_F22', empty, empty],\n        [0, 1, 120 /* ScanCode.F23 */, 'F23', 0 /* KeyCode.Unknown */, empty, 0, 'VK_F23', empty, empty],\n        [0, 1, 121 /* ScanCode.F24 */, 'F24', 0 /* KeyCode.Unknown */, empty, 0, 'VK_F24', empty, empty],\n        [0, 1, 122 /* ScanCode.Open */, 'Open', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 123 /* ScanCode.Help */, 'Help', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 124 /* ScanCode.Select */, 'Select', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 125 /* ScanCode.Again */, 'Again', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 126 /* ScanCode.Undo */, 'Undo', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 127 /* ScanCode.Cut */, 'Cut', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 128 /* ScanCode.Copy */, 'Copy', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 129 /* ScanCode.Paste */, 'Paste', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 130 /* ScanCode.Find */, 'Find', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 131 /* ScanCode.AudioVolumeMute */, 'AudioVolumeMute', 112 /* KeyCode.AudioVolumeMute */, 'AudioVolumeMute', 173, 'VK_VOLUME_MUTE', empty, empty],\n        [0, 1, 132 /* ScanCode.AudioVolumeUp */, 'AudioVolumeUp', 113 /* KeyCode.AudioVolumeUp */, 'AudioVolumeUp', 175, 'VK_VOLUME_UP', empty, empty],\n        [0, 1, 133 /* ScanCode.AudioVolumeDown */, 'AudioVolumeDown', 114 /* KeyCode.AudioVolumeDown */, 'AudioVolumeDown', 174, 'VK_VOLUME_DOWN', empty, empty],\n        [105, 1, 134 /* ScanCode.NumpadComma */, 'NumpadComma', 105 /* KeyCode.NUMPAD_SEPARATOR */, 'NumPad_Separator', 108, 'VK_SEPARATOR', empty, empty],\n        [110, 0, 135 /* ScanCode.IntlRo */, 'IntlRo', 110 /* KeyCode.ABNT_C1 */, 'ABNT_C1', 193, 'VK_ABNT_C1', empty, empty],\n        [0, 1, 136 /* ScanCode.KanaMode */, 'KanaMode', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 0, 137 /* ScanCode.IntlYen */, 'IntlYen', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 138 /* ScanCode.Convert */, 'Convert', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 139 /* ScanCode.NonConvert */, 'NonConvert', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 140 /* ScanCode.Lang1 */, 'Lang1', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 141 /* ScanCode.Lang2 */, 'Lang2', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 142 /* ScanCode.Lang3 */, 'Lang3', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 143 /* ScanCode.Lang4 */, 'Lang4', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 144 /* ScanCode.Lang5 */, 'Lang5', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 145 /* ScanCode.Abort */, 'Abort', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 146 /* ScanCode.Props */, 'Props', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 147 /* ScanCode.NumpadParenLeft */, 'NumpadParenLeft', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 148 /* ScanCode.NumpadParenRight */, 'NumpadParenRight', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 149 /* ScanCode.NumpadBackspace */, 'NumpadBackspace', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 150 /* ScanCode.NumpadMemoryStore */, 'NumpadMemoryStore', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 151 /* ScanCode.NumpadMemoryRecall */, 'NumpadMemoryRecall', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 152 /* ScanCode.NumpadMemoryClear */, 'NumpadMemoryClear', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 153 /* ScanCode.NumpadMemoryAdd */, 'NumpadMemoryAdd', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 154 /* ScanCode.NumpadMemorySubtract */, 'NumpadMemorySubtract', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 155 /* ScanCode.NumpadClear */, 'NumpadClear', 126 /* KeyCode.Clear */, 'Clear', 12, 'VK_CLEAR', empty, empty],\n        [0, 1, 156 /* ScanCode.NumpadClearEntry */, 'NumpadClearEntry', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [5, 1, 0 /* ScanCode.None */, empty, 5 /* KeyCode.Ctrl */, 'Ctrl', 17, 'VK_CONTROL', empty, empty],\n        [4, 1, 0 /* ScanCode.None */, empty, 4 /* KeyCode.Shift */, 'Shift', 16, 'VK_SHIFT', empty, empty],\n        [6, 1, 0 /* ScanCode.None */, empty, 6 /* KeyCode.Alt */, 'Alt', 18, 'VK_MENU', empty, empty],\n        [57, 1, 0 /* ScanCode.None */, empty, 57 /* KeyCode.Meta */, 'Meta', 0, 'VK_COMMAND', empty, empty],\n        [5, 1, 157 /* ScanCode.ControlLeft */, 'ControlLeft', 5 /* KeyCode.Ctrl */, empty, 0, 'VK_LCONTROL', empty, empty],\n        [4, 1, 158 /* ScanCode.ShiftLeft */, 'ShiftLeft', 4 /* KeyCode.Shift */, empty, 0, 'VK_LSHIFT', empty, empty],\n        [6, 1, 159 /* ScanCode.AltLeft */, 'AltLeft', 6 /* KeyCode.Alt */, empty, 0, 'VK_LMENU', empty, empty],\n        [57, 1, 160 /* ScanCode.MetaLeft */, 'MetaLeft', 57 /* KeyCode.Meta */, empty, 0, 'VK_LWIN', empty, empty],\n        [5, 1, 161 /* ScanCode.ControlRight */, 'ControlRight', 5 /* KeyCode.Ctrl */, empty, 0, 'VK_RCONTROL', empty, empty],\n        [4, 1, 162 /* ScanCode.ShiftRight */, 'ShiftRight', 4 /* KeyCode.Shift */, empty, 0, 'VK_RSHIFT', empty, empty],\n        [6, 1, 163 /* ScanCode.AltRight */, 'AltRight', 6 /* KeyCode.Alt */, empty, 0, 'VK_RMENU', empty, empty],\n        [57, 1, 164 /* ScanCode.MetaRight */, 'MetaRight', 57 /* KeyCode.Meta */, empty, 0, 'VK_RWIN', empty, empty],\n        [0, 1, 165 /* ScanCode.BrightnessUp */, 'BrightnessUp', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 166 /* ScanCode.BrightnessDown */, 'BrightnessDown', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 167 /* ScanCode.MediaPlay */, 'MediaPlay', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 168 /* ScanCode.MediaRecord */, 'MediaRecord', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 169 /* ScanCode.MediaFastForward */, 'MediaFastForward', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 170 /* ScanCode.MediaRewind */, 'MediaRewind', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [114, 1, 171 /* ScanCode.MediaTrackNext */, 'MediaTrackNext', 119 /* KeyCode.MediaTrackNext */, 'MediaTrackNext', 176, 'VK_MEDIA_NEXT_TRACK', empty, empty],\n        [115, 1, 172 /* ScanCode.MediaTrackPrevious */, 'MediaTrackPrevious', 120 /* KeyCode.MediaTrackPrevious */, 'MediaTrackPrevious', 177, 'VK_MEDIA_PREV_TRACK', empty, empty],\n        [116, 1, 173 /* ScanCode.MediaStop */, 'MediaStop', 121 /* KeyCode.MediaStop */, 'MediaStop', 178, 'VK_MEDIA_STOP', empty, empty],\n        [0, 1, 174 /* ScanCode.Eject */, 'Eject', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [117, 1, 175 /* ScanCode.MediaPlayPause */, 'MediaPlayPause', 122 /* KeyCode.MediaPlayPause */, 'MediaPlayPause', 179, 'VK_MEDIA_PLAY_PAUSE', empty, empty],\n        [0, 1, 176 /* ScanCode.MediaSelect */, 'MediaSelect', 123 /* KeyCode.LaunchMediaPlayer */, 'LaunchMediaPlayer', 181, 'VK_MEDIA_LAUNCH_MEDIA_SELECT', empty, empty],\n        [0, 1, 177 /* ScanCode.LaunchMail */, 'LaunchMail', 124 /* KeyCode.LaunchMail */, 'LaunchMail', 180, 'VK_MEDIA_LAUNCH_MAIL', empty, empty],\n        [0, 1, 178 /* ScanCode.LaunchApp2 */, 'LaunchApp2', 125 /* KeyCode.LaunchApp2 */, 'LaunchApp2', 183, 'VK_MEDIA_LAUNCH_APP2', empty, empty],\n        [0, 1, 179 /* ScanCode.LaunchApp1 */, 'LaunchApp1', 0 /* KeyCode.Unknown */, empty, 0, 'VK_MEDIA_LAUNCH_APP1', empty, empty],\n        [0, 1, 180 /* ScanCode.SelectTask */, 'SelectTask', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 181 /* ScanCode.LaunchScreenSaver */, 'LaunchScreenSaver', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 182 /* ScanCode.BrowserSearch */, 'BrowserSearch', 115 /* KeyCode.BrowserSearch */, 'BrowserSearch', 170, 'VK_BROWSER_SEARCH', empty, empty],\n        [0, 1, 183 /* ScanCode.BrowserHome */, 'BrowserHome', 116 /* KeyCode.BrowserHome */, 'BrowserHome', 172, 'VK_BROWSER_HOME', empty, empty],\n        [112, 1, 184 /* ScanCode.BrowserBack */, 'BrowserBack', 117 /* KeyCode.BrowserBack */, 'BrowserBack', 166, 'VK_BROWSER_BACK', empty, empty],\n        [113, 1, 185 /* ScanCode.BrowserForward */, 'BrowserForward', 118 /* KeyCode.BrowserForward */, 'BrowserForward', 167, 'VK_BROWSER_FORWARD', empty, empty],\n        [0, 1, 186 /* ScanCode.BrowserStop */, 'BrowserStop', 0 /* KeyCode.Unknown */, empty, 0, 'VK_BROWSER_STOP', empty, empty],\n        [0, 1, 187 /* ScanCode.BrowserRefresh */, 'BrowserRefresh', 0 /* KeyCode.Unknown */, empty, 0, 'VK_BROWSER_REFRESH', empty, empty],\n        [0, 1, 188 /* ScanCode.BrowserFavorites */, 'BrowserFavorites', 0 /* KeyCode.Unknown */, empty, 0, 'VK_BROWSER_FAVORITES', empty, empty],\n        [0, 1, 189 /* ScanCode.ZoomToggle */, 'ZoomToggle', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 190 /* ScanCode.MailReply */, 'MailReply', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 191 /* ScanCode.MailForward */, 'MailForward', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 192 /* ScanCode.MailSend */, 'MailSend', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        // See https://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html\n        // If an Input Method Editor is processing key input and the event is keydown, return 229.\n        [109, 1, 0 /* ScanCode.None */, empty, 109 /* KeyCode.KEY_IN_COMPOSITION */, 'KeyInComposition', 229, empty, empty, empty],\n        [111, 1, 0 /* ScanCode.None */, empty, 111 /* KeyCode.ABNT_C2 */, 'ABNT_C2', 194, 'VK_ABNT_C2', empty, empty],\n        [91, 1, 0 /* ScanCode.None */, empty, 91 /* KeyCode.OEM_8 */, 'OEM_8', 223, 'VK_OEM_8', empty, empty],\n        [0, 1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_KANA', empty, empty],\n        [0, 1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_HANGUL', empty, empty],\n        [0, 1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_JUNJA', empty, empty],\n        [0, 1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_FINAL', empty, empty],\n        [0, 1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_HANJA', empty, empty],\n        [0, 1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_KANJI', empty, empty],\n        [0, 1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_CONVERT', empty, empty],\n        [0, 1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_NONCONVERT', empty, empty],\n        [0, 1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_ACCEPT', empty, empty],\n        [0, 1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_MODECHANGE', empty, empty],\n        [0, 1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_SELECT', empty, empty],\n        [0, 1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PRINT', empty, empty],\n        [0, 1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_EXECUTE', empty, empty],\n        [0, 1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_SNAPSHOT', empty, empty],\n        [0, 1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_HELP', empty, empty],\n        [0, 1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_APPS', empty, empty],\n        [0, 1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PROCESSKEY', empty, empty],\n        [0, 1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PACKET', empty, empty],\n        [0, 1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_DBE_SBCSCHAR', empty, empty],\n        [0, 1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_DBE_DBCSCHAR', empty, empty],\n        [0, 1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_ATTN', empty, empty],\n        [0, 1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_CRSEL', empty, empty],\n        [0, 1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_EXSEL', empty, empty],\n        [0, 1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_EREOF', empty, empty],\n        [0, 1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PLAY', empty, empty],\n        [0, 1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_ZOOM', empty, empty],\n        [0, 1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_NONAME', empty, empty],\n        [0, 1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PA1', empty, empty],\n        [0, 1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_OEM_CLEAR', empty, empty],\n    ];\n    const seenKeyCode = [];\n    const seenScanCode = [];\n    for (const mapping of mappings) {\n        const [_keyCodeOrd, immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel] = mapping;\n        if (!seenScanCode[scanCode]) {\n            seenScanCode[scanCode] = true;\n            scanCodeIntToStr[scanCode] = scanCodeStr;\n            scanCodeStrToInt[scanCodeStr] = scanCode;\n            scanCodeLowerCaseStrToInt[scanCodeStr.toLowerCase()] = scanCode;\n            if (immutable) {\n                IMMUTABLE_CODE_TO_KEY_CODE[scanCode] = keyCode;\n                if ((keyCode !== 0 /* KeyCode.Unknown */)\n                    && (keyCode !== 3 /* KeyCode.Enter */)\n                    && (keyCode !== 5 /* KeyCode.Ctrl */)\n                    && (keyCode !== 4 /* KeyCode.Shift */)\n                    && (keyCode !== 6 /* KeyCode.Alt */)\n                    && (keyCode !== 57 /* KeyCode.Meta */)) {\n                    IMMUTABLE_KEY_CODE_TO_CODE[keyCode] = scanCode;\n                }\n            }\n        }\n        if (!seenKeyCode[keyCode]) {\n            seenKeyCode[keyCode] = true;\n            if (!keyCodeStr) {\n                throw new Error(`String representation missing for key code ${keyCode} around scan code ${scanCodeStr}`);\n            }\n            uiMap.define(keyCode, keyCodeStr);\n            userSettingsUSMap.define(keyCode, usUserSettingsLabel || keyCodeStr);\n            userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel || usUserSettingsLabel || keyCodeStr);\n        }\n        if (eventKeyCode) {\n            EVENT_KEY_CODE_MAP[eventKeyCode] = keyCode;\n        }\n        if (vkey) {\n            NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE[vkey] = keyCode;\n        }\n    }\n    // Manually added due to the exclusion above (due to duplication with NumpadEnter)\n    IMMUTABLE_KEY_CODE_TO_CODE[3 /* KeyCode.Enter */] = 46 /* ScanCode.Enter */;\n})();\nexport var KeyCodeUtils;\n(function (KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n    function toElectronAccelerator(keyCode) {\n        if (keyCode >= 93 /* KeyCode.Numpad0 */ && keyCode <= 108 /* KeyCode.NumpadDivide */) {\n            // [Electron Accelerators] Electron is able to parse numpad keys, but unfortunately it\n            // renders them just as regular keys in menus. For example, num0 is rendered as \"0\",\n            // numdiv is rendered as \"/\", numsub is rendered as \"-\".\n            //\n            // This can lead to incredible confusion, as it makes numpad based keybindings indistinguishable\n            // from keybindings based on regular keys.\n            //\n            // We therefore need to fall back to custom rendering for numpad keys.\n            return null;\n        }\n        switch (keyCode) {\n            case 16 /* KeyCode.UpArrow */:\n                return 'Up';\n            case 18 /* KeyCode.DownArrow */:\n                return 'Down';\n            case 15 /* KeyCode.LeftArrow */:\n                return 'Left';\n            case 17 /* KeyCode.RightArrow */:\n                return 'Right';\n        }\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toElectronAccelerator = toElectronAccelerator;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\nexport function KeyChord(firstPart, secondPart) {\n    const chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nexport class ModifierLabelProvider {\n    constructor(mac, windows, linux = windows) {\n        this.modifierLabels = [null]; // index 0 will never me accessed.\n        this.modifierLabels[2 /* OperatingSystem.Macintosh */] = mac;\n        this.modifierLabels[1 /* OperatingSystem.Windows */] = windows;\n        this.modifierLabels[3 /* OperatingSystem.Linux */] = linux;\n    }\n    toLabel(OS, chords, keyLabelProvider) {\n        if (chords.length === 0) {\n            return null;\n        }\n        const result = [];\n        for (let i = 0, len = chords.length; i < len; i++) {\n            const chord = chords[i];\n            const keyLabel = keyLabelProvider(chord);\n            if (keyLabel === null) {\n                // this keybinding cannot be expressed...\n                return null;\n            }\n            result[i] = _simpleAsString(chord, keyLabel, this.modifierLabels[OS]);\n        }\n        return result.join(' ');\n    }\n}\n/**\n * A label provider that prints modifiers in a suitable format for displaying in the UI.\n */\nexport const UILabelProvider = new ModifierLabelProvider({\n    ctrlKey: '\\u2303',\n    shiftKey: '⇧',\n    altKey: '⌥',\n    metaKey: '⌘',\n    separator: '',\n}, {\n    ctrlKey: nls.localize({ key: 'ctrlKey', comment: ['This is the short form for the Control key on the keyboard'] }, \"Ctrl\"),\n    shiftKey: nls.localize({ key: 'shiftKey', comment: ['This is the short form for the Shift key on the keyboard'] }, \"Shift\"),\n    altKey: nls.localize({ key: 'altKey', comment: ['This is the short form for the Alt key on the keyboard'] }, \"Alt\"),\n    metaKey: nls.localize({ key: 'windowsKey', comment: ['This is the short form for the Windows key on the keyboard'] }, \"Windows\"),\n    separator: '+',\n}, {\n    ctrlKey: nls.localize({ key: 'ctrlKey', comment: ['This is the short form for the Control key on the keyboard'] }, \"Ctrl\"),\n    shiftKey: nls.localize({ key: 'shiftKey', comment: ['This is the short form for the Shift key on the keyboard'] }, \"Shift\"),\n    altKey: nls.localize({ key: 'altKey', comment: ['This is the short form for the Alt key on the keyboard'] }, \"Alt\"),\n    metaKey: nls.localize({ key: 'superKey', comment: ['This is the short form for the Super key on the keyboard'] }, \"Super\"),\n    separator: '+',\n});\n/**\n * A label provider that prints modifiers in a suitable format for ARIA.\n */\nexport const AriaLabelProvider = new ModifierLabelProvider({\n    ctrlKey: nls.localize({ key: 'ctrlKey.long', comment: ['This is the long form for the Control key on the keyboard'] }, \"Control\"),\n    shiftKey: nls.localize({ key: 'shiftKey.long', comment: ['This is the long form for the Shift key on the keyboard'] }, \"Shift\"),\n    altKey: nls.localize({ key: 'optKey.long', comment: ['This is the long form for the Alt/Option key on the keyboard'] }, \"Option\"),\n    metaKey: nls.localize({ key: 'cmdKey.long', comment: ['This is the long form for the Command key on the keyboard'] }, \"Command\"),\n    separator: '+',\n}, {\n    ctrlKey: nls.localize({ key: 'ctrlKey.long', comment: ['This is the long form for the Control key on the keyboard'] }, \"Control\"),\n    shiftKey: nls.localize({ key: 'shiftKey.long', comment: ['This is the long form for the Shift key on the keyboard'] }, \"Shift\"),\n    altKey: nls.localize({ key: 'altKey.long', comment: ['This is the long form for the Alt key on the keyboard'] }, \"Alt\"),\n    metaKey: nls.localize({ key: 'windowsKey.long', comment: ['This is the long form for the Windows key on the keyboard'] }, \"Windows\"),\n    separator: '+',\n}, {\n    ctrlKey: nls.localize({ key: 'ctrlKey.long', comment: ['This is the long form for the Control key on the keyboard'] }, \"Control\"),\n    shiftKey: nls.localize({ key: 'shiftKey.long', comment: ['This is the long form for the Shift key on the keyboard'] }, \"Shift\"),\n    altKey: nls.localize({ key: 'altKey.long', comment: ['This is the long form for the Alt key on the keyboard'] }, \"Alt\"),\n    metaKey: nls.localize({ key: 'superKey.long', comment: ['This is the long form for the Super key on the keyboard'] }, \"Super\"),\n    separator: '+',\n});\n/**\n * A label provider that prints modifiers in a suitable format for Electron Accelerators.\n * See https://github.com/electron/electron/blob/master/docs/api/accelerator.md\n */\nexport const ElectronAcceleratorLabelProvider = new ModifierLabelProvider({\n    ctrlKey: 'Ctrl',\n    shiftKey: 'Shift',\n    altKey: 'Alt',\n    metaKey: 'Cmd',\n    separator: '+',\n}, {\n    ctrlKey: 'Ctrl',\n    shiftKey: 'Shift',\n    altKey: 'Alt',\n    metaKey: 'Super',\n    separator: '+',\n});\n/**\n * A label provider that prints modifiers in a suitable format for user settings.\n */\nexport const UserSettingsLabelProvider = new ModifierLabelProvider({\n    ctrlKey: 'ctrl',\n    shiftKey: 'shift',\n    altKey: 'alt',\n    metaKey: 'cmd',\n    separator: '+',\n}, {\n    ctrlKey: 'ctrl',\n    shiftKey: 'shift',\n    altKey: 'alt',\n    metaKey: 'win',\n    separator: '+',\n}, {\n    ctrlKey: 'ctrl',\n    shiftKey: 'shift',\n    altKey: 'alt',\n    metaKey: 'meta',\n    separator: '+',\n});\nfunction _simpleAsString(modifiers, key, labels) {\n    if (key === null) {\n        return '';\n    }\n    const result = [];\n    // translate modifier keys: Ctrl-Shift-Alt-Meta\n    if (modifiers.ctrlKey) {\n        result.push(labels.ctrlKey);\n    }\n    if (modifiers.shiftKey) {\n        result.push(labels.shiftKey);\n    }\n    if (modifiers.altKey) {\n        result.push(labels.altKey);\n    }\n    if (modifiers.metaKey) {\n        result.push(labels.metaKey);\n    }\n    // the actual key\n    if (key !== '') {\n        result.push(key);\n    }\n    return result.join(labels.separator);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from './errors.js';\nexport function decodeKeybinding(keybinding, OS) {\n    if (keybinding === 0) {\n        return null;\n    }\n    const firstChord = (keybinding & 0x0000FFFF) >>> 0;\n    const secondChord = (keybinding & 0xFFFF0000) >>> 16;\n    if (secondChord !== 0) {\n        return new Keybinding([\n            createSimpleKeybinding(firstChord, OS),\n            createSimpleKeybinding(secondChord, OS)\n        ]);\n    }\n    return new Keybinding([createSimpleKeybinding(firstChord, OS)]);\n}\nexport function createSimpleKeybinding(keybinding, OS) {\n    const ctrlCmd = (keybinding & 2048 /* BinaryKeybindingsMask.CtrlCmd */ ? true : false);\n    const winCtrl = (keybinding & 256 /* BinaryKeybindingsMask.WinCtrl */ ? true : false);\n    const ctrlKey = (OS === 2 /* OperatingSystem.Macintosh */ ? winCtrl : ctrlCmd);\n    const shiftKey = (keybinding & 1024 /* BinaryKeybindingsMask.Shift */ ? true : false);\n    const altKey = (keybinding & 512 /* BinaryKeybindingsMask.Alt */ ? true : false);\n    const metaKey = (OS === 2 /* OperatingSystem.Macintosh */ ? ctrlCmd : winCtrl);\n    const keyCode = (keybinding & 255 /* BinaryKeybindingsMask.KeyCode */);\n    return new KeyCodeChord(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\n/**\n * Represents a chord which uses the `keyCode` field of keyboard events.\n * A chord is a combination of keys pressed simultaneously.\n */\nexport class KeyCodeChord {\n    constructor(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyCode = keyCode;\n    }\n    equals(other) {\n        return (other instanceof KeyCodeChord\n            && this.ctrlKey === other.ctrlKey\n            && this.shiftKey === other.shiftKey\n            && this.altKey === other.altKey\n            && this.metaKey === other.metaKey\n            && this.keyCode === other.keyCode);\n    }\n    isModifierKey() {\n        return (this.keyCode === 0 /* KeyCode.Unknown */\n            || this.keyCode === 5 /* KeyCode.Ctrl */\n            || this.keyCode === 57 /* KeyCode.Meta */\n            || this.keyCode === 6 /* KeyCode.Alt */\n            || this.keyCode === 4 /* KeyCode.Shift */);\n    }\n    /**\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n     */\n    isDuplicateModifierCase() {\n        return ((this.ctrlKey && this.keyCode === 5 /* KeyCode.Ctrl */)\n            || (this.shiftKey && this.keyCode === 4 /* KeyCode.Shift */)\n            || (this.altKey && this.keyCode === 6 /* KeyCode.Alt */)\n            || (this.metaKey && this.keyCode === 57 /* KeyCode.Meta */));\n    }\n}\n/**\n * Represents a chord which uses the `code` field of keyboard events.\n * A chord is a combination of keys pressed simultaneously.\n */\nexport class ScanCodeChord {\n    constructor(ctrlKey, shiftKey, altKey, metaKey, scanCode) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.scanCode = scanCode;\n    }\n    /**\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n     */\n    isDuplicateModifierCase() {\n        return ((this.ctrlKey && (this.scanCode === 157 /* ScanCode.ControlLeft */ || this.scanCode === 161 /* ScanCode.ControlRight */))\n            || (this.shiftKey && (this.scanCode === 158 /* ScanCode.ShiftLeft */ || this.scanCode === 162 /* ScanCode.ShiftRight */))\n            || (this.altKey && (this.scanCode === 159 /* ScanCode.AltLeft */ || this.scanCode === 163 /* ScanCode.AltRight */))\n            || (this.metaKey && (this.scanCode === 160 /* ScanCode.MetaLeft */ || this.scanCode === 164 /* ScanCode.MetaRight */)));\n    }\n}\n/**\n * A keybinding is a sequence of chords.\n */\nexport class Keybinding {\n    constructor(chords) {\n        if (chords.length === 0) {\n            throw illegalArgument(`chords`);\n        }\n        this.chords = chords;\n    }\n}\nexport class ResolvedChord {\n    constructor(ctrlKey, shiftKey, altKey, metaKey, keyLabel, keyAriaLabel) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyLabel = keyLabel;\n        this.keyAriaLabel = keyAriaLabel;\n    }\n}\n/**\n * A resolved keybinding. Consists of one or multiple chords.\n */\nexport class ResolvedKeybinding {\n}\n","import { hasDriveLetter } from './extpath.js';\nimport { isWindows } from './platform.js';\nexport function normalizeDriveLetter(path, isWindowsOS = isWindows) {\n    if (hasDriveLetter(path, isWindowsOS)) {\n        return path.charAt(0).toUpperCase() + path.slice(1);\n    }\n    return path;\n}\nlet normalizedUserHomeCached = Object.create(null);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class Lazy {\n    constructor(executor) {\n        this.executor = executor;\n        this._didRun = false;\n    }\n    /**\n     * Get the wrapped value.\n     *\n     * This will force evaluation of the lazy value if it has not been resolved yet. Lazy values are only\n     * resolved once. `getValue` will re-throw exceptions that are hit while resolving the value\n     */\n    get value() {\n        if (!this._didRun) {\n            try {\n                this._value = this.executor();\n            }\n            catch (err) {\n                this._error = err;\n            }\n            finally {\n                this._didRun = true;\n            }\n        }\n        if (this._error) {\n            throw this._error;\n        }\n        return this._value;\n    }\n    /**\n     * Get the wrapped value without forcing evaluation.\n     */\n    get rawValue() { return this._value; }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { once } from './functional.js';\nimport { Iterable } from './iterator.js';\n// #region Disposable Tracking\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\nlet disposableTracker = null;\nexport function setDisposableTracker(tracker) {\n    disposableTracker = tracker;\n}\nif (TRACK_DISPOSABLES) {\n    const __is_disposable_tracked__ = '__is_disposable_tracked__';\n    setDisposableTracker(new class {\n        trackDisposable(x) {\n            const stack = new Error('Potentially leaked disposable').stack;\n            setTimeout(() => {\n                if (!x[__is_disposable_tracked__]) {\n                    console.log(stack);\n                }\n            }, 3000);\n        }\n        setParent(child, parent) {\n            if (child && child !== Disposable.None) {\n                try {\n                    child[__is_disposable_tracked__] = true;\n                }\n                catch (_a) {\n                    // noop\n                }\n            }\n        }\n        markAsDisposed(disposable) {\n            if (disposable && disposable !== Disposable.None) {\n                try {\n                    disposable[__is_disposable_tracked__] = true;\n                }\n                catch (_a) {\n                    // noop\n                }\n            }\n        }\n        markAsSingleton(disposable) { }\n    });\n}\nfunction trackDisposable(x) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.trackDisposable(x);\n    return x;\n}\nfunction markAsDisposed(disposable) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.markAsDisposed(disposable);\n}\nfunction setParentOfDisposable(child, parent) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.setParent(child, parent);\n}\nfunction setParentOfDisposables(children, parent) {\n    if (!disposableTracker) {\n        return;\n    }\n    for (const child of children) {\n        disposableTracker.setParent(child, parent);\n    }\n}\n/**\n * Indicates that the given object is a singleton which does not need to be disposed.\n*/\nexport function markAsSingleton(singleton) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.markAsSingleton(singleton);\n    return singleton;\n}\n/**\n * Check if `thing` is {@link IDisposable disposable}.\n */\nexport function isDisposable(thing) {\n    return typeof thing.dispose === 'function' && thing.dispose.length === 0;\n}\nexport function dispose(arg) {\n    if (Iterable.is(arg)) {\n        const errors = [];\n        for (const d of arg) {\n            if (d) {\n                try {\n                    d.dispose();\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n            }\n        }\n        if (errors.length === 1) {\n            throw errors[0];\n        }\n        else if (errors.length > 1) {\n            throw new AggregateError(errors, 'Encountered errors while disposing of store');\n        }\n        return Array.isArray(arg) ? [] : arg;\n    }\n    else if (arg) {\n        arg.dispose();\n        return arg;\n    }\n}\n/**\n * Combine multiple disposable values into a single {@link IDisposable}.\n */\nexport function combinedDisposable(...disposables) {\n    const parent = toDisposable(() => dispose(disposables));\n    setParentOfDisposables(disposables, parent);\n    return parent;\n}\n/**\n * Turn a function that implements dispose into an {@link IDisposable}.\n */\nexport function toDisposable(fn) {\n    const self = trackDisposable({\n        dispose: once(() => {\n            markAsDisposed(self);\n            fn();\n        })\n    });\n    return self;\n}\n/**\n * Manages a collection of disposable values.\n *\n * This is the preferred way to manage multiple disposables. A `DisposableStore` is safer to work with than an\n * `IDisposable[]` as it considers edge cases, such as registering the same value multiple times or adding an item to a\n * store that has already been disposed of.\n */\nclass DisposableStore {\n    constructor() {\n        this._toDispose = new Set();\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    /**\n     * Dispose of all registered disposables and mark this object as disposed.\n     *\n     * Any future disposables added to this object will be disposed of on `add`.\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clear();\n    }\n    /**\n     * @return `true` if this object has been disposed of.\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Dispose of all registered disposables but do not mark this object as disposed.\n     */\n    clear() {\n        if (this._toDispose.size === 0) {\n            return;\n        }\n        try {\n            dispose(this._toDispose);\n        }\n        finally {\n            this._toDispose.clear();\n        }\n    }\n    /**\n     * Add a new {@link IDisposable disposable} to the collection.\n     */\n    add(o) {\n        if (!o) {\n            return o;\n        }\n        if (o === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        setParentOfDisposable(o, this);\n        if (this._isDisposed) {\n            if (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n                console.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n            }\n        }\n        else {\n            this._toDispose.add(o);\n        }\n        return o;\n    }\n}\nDisposableStore.DISABLE_DISPOSED_WARNING = false;\nexport { DisposableStore };\n/**\n * Abstract base class for a {@link IDisposable disposable} object.\n *\n * Subclasses can {@linkcode _register} disposables that will be automatically cleaned up when this object is disposed of.\n */\nclass Disposable {\n    constructor() {\n        this._store = new DisposableStore();\n        trackDisposable(this);\n        setParentOfDisposable(this._store, this);\n    }\n    dispose() {\n        markAsDisposed(this);\n        this._store.dispose();\n    }\n    /**\n     * Adds `o` to the collection of disposables managed by this object.\n     */\n    _register(o) {\n        if (o === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        return this._store.add(o);\n    }\n}\n/**\n * A disposable that does nothing when it is disposed of.\n *\n * TODO: This should not be a static property.\n */\nDisposable.None = Object.freeze({ dispose() { } });\nexport { Disposable };\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable {\n    constructor() {\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    get value() {\n        return this._isDisposed ? undefined : this._value;\n    }\n    set value(value) {\n        var _a;\n        if (this._isDisposed || value === this._value) {\n            return;\n        }\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n        if (value) {\n            setParentOfDisposable(value, this);\n        }\n        this._value = value;\n    }\n    /**\n     * Resets the stored value and disposed of the previously stored value.\n     */\n    clear() {\n        this.value = undefined;\n    }\n    dispose() {\n        var _a;\n        this._isDisposed = true;\n        markAsDisposed(this);\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._value = undefined;\n    }\n    /**\n     * Clears the value, but does not dispose it.\n     * The old value is returned.\n    */\n    clearAndLeak() {\n        const oldValue = this._value;\n        this._value = undefined;\n        if (oldValue) {\n            setParentOfDisposable(oldValue, null);\n        }\n        return oldValue;\n    }\n}\nexport class RefCountedDisposable {\n    constructor(_disposable) {\n        this._disposable = _disposable;\n        this._counter = 1;\n    }\n    acquire() {\n        this._counter++;\n        return this;\n    }\n    release() {\n        if (--this._counter === 0) {\n            this._disposable.dispose();\n        }\n        return this;\n    }\n}\n/**\n * A safe disposable can be `unset` so that a leaked reference (listener)\n * can be cut-off.\n */\nexport class SafeDisposable {\n    constructor() {\n        this.dispose = () => { };\n        this.unset = () => { };\n        this.isset = () => false;\n        trackDisposable(this);\n    }\n    set(fn) {\n        let callback = fn;\n        this.unset = () => callback = undefined;\n        this.isset = () => callback !== undefined;\n        this.dispose = () => {\n            if (callback) {\n                callback();\n                callback = undefined;\n                markAsDisposed(this);\n            }\n        };\n        return this;\n    }\n}\nexport class ImmortalReference {\n    constructor(object) {\n        this.object = object;\n    }\n    dispose() { }\n}\n/**\n * A map the manages the lifecycle of the values that it stores.\n */\nexport class DisposableMap {\n    constructor() {\n        this._store = new Map();\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    /**\n     * Disposes of all stored values and mark this object as disposed.\n     *\n     * Trying to use this object after it has been disposed of is an error.\n     */\n    dispose() {\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clearAndDisposeAll();\n    }\n    /**\n     * Disposes of all stored values and clear the map, but DO NOT mark this object as disposed.\n     */\n    clearAndDisposeAll() {\n        if (!this._store.size) {\n            return;\n        }\n        try {\n            dispose(this._store.values());\n        }\n        finally {\n            this._store.clear();\n        }\n    }\n    get(key) {\n        return this._store.get(key);\n    }\n    set(key, value, skipDisposeOnOverwrite = false) {\n        var _a;\n        if (this._isDisposed) {\n            console.warn(new Error('Trying to add a disposable to a DisposableMap that has already been disposed of. The added object will be leaked!').stack);\n        }\n        if (!skipDisposeOnOverwrite) {\n            (_a = this._store.get(key)) === null || _a === void 0 ? void 0 : _a.dispose();\n        }\n        this._store.set(key, value);\n    }\n    [Symbol.iterator]() {\n        return this._store[Symbol.iterator]();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass Node {\n    constructor(element) {\n        this.element = element;\n        this.next = Node.Undefined;\n        this.prev = Node.Undefined;\n    }\n}\nNode.Undefined = new Node(undefined);\nexport class LinkedList {\n    constructor() {\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    get size() {\n        return this._size;\n    }\n    isEmpty() {\n        return this._first === Node.Undefined;\n    }\n    clear() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            const next = node.next;\n            node.prev = Node.Undefined;\n            node.next = Node.Undefined;\n            node = next;\n        }\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    unshift(element) {\n        return this._insert(element, false);\n    }\n    push(element) {\n        return this._insert(element, true);\n    }\n    _insert(element, atTheEnd) {\n        const newNode = new Node(element);\n        if (this._first === Node.Undefined) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            // push\n            const oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            // unshift\n            const oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        this._size += 1;\n        let didRemove = false;\n        return () => {\n            if (!didRemove) {\n                didRemove = true;\n                this._remove(newNode);\n            }\n        };\n    }\n    shift() {\n        if (this._first === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._first.element;\n            this._remove(this._first);\n            return res;\n        }\n    }\n    pop() {\n        if (this._last === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._last.element;\n            this._remove(this._last);\n            return res;\n        }\n    }\n    _remove(node) {\n        if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n            // middle\n            const anchor = node.prev;\n            anchor.next = node.next;\n            node.next.prev = anchor;\n        }\n        else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n            // only node\n            this._first = Node.Undefined;\n            this._last = Node.Undefined;\n        }\n        else if (node.next === Node.Undefined) {\n            // last\n            this._last = this._last.prev;\n            this._last.next = Node.Undefined;\n        }\n        else if (node.prev === Node.Undefined) {\n            // first\n            this._first = this._first.next;\n            this._first.prev = Node.Undefined;\n        }\n        // done\n        this._size -= 1;\n    }\n    *[Symbol.iterator]() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            yield node.element;\n            node = node.next;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { memoize } from './decorators.js';\nexport class LinkedText {\n    constructor(nodes) {\n        this.nodes = nodes;\n    }\n    toString() {\n        return this.nodes.map(node => typeof node === 'string' ? node : node.label).join('');\n    }\n}\n__decorate([\n    memoize\n], LinkedText.prototype, \"toString\", null);\nconst LINK_REGEX = /\\[([^\\]]+)\\]\\(((?:https?:\\/\\/|command:|file:)[^\\)\\s]+)(?: ([\"'])(.+?)(\\3))?\\)/gi;\nexport function parseLinkedText(text) {\n    const result = [];\n    let index = 0;\n    let match;\n    while (match = LINK_REGEX.exec(text)) {\n        if (match.index - index > 0) {\n            result.push(text.substring(index, match.index));\n        }\n        const [, label, href, , title] = match;\n        if (title) {\n            result.push({ label, href, title });\n        }\n        else {\n            result.push({ label, href });\n        }\n        index = match.index + match[0].length;\n    }\n    if (index < text.length) {\n        result.push(text.substring(index));\n    }\n    return new LinkedText(result);\n}\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","GLOBSTAR","GLOB_SPLIT","PATH_REGEX","NO_PATH_REGEX","ALL_FORWARD_SLASHES","starsToRegExp","starCount","isLastPattern","concat","splitGlobAware","pattern","splitChar","_step","segments","inBraces","inBrackets","curVal","_iterator","_createForOfIteratorHelper","s","n","char","push","err","f","parseRegExp","regEx","every","segment","previousSegmentWasGlobStar","forEach","index","length","_step2","braceVal","bracketVal","_iterator2","choices","braceRegExp","map","choice","join","escapeRegExpCharacters","T1","T2","T3","T3_2","T4","T5","CACHE","LRUCache","FALSE","NULL","parsePattern","arg1","options","trim","match","patternKey","trimForExclusions","parsedPattern","get","test","base","path","basename","endsWith","trivia1","substr","exec","slashBase","backslashBase","basenames","patterns","allBasenames","trivia2","parsedPatterns","aggregateBasenameMatches","slice","split","filter","patternsLength","i","withBasenames","find","allPaths","reduce","all","current","trivia3","trivia4and5","regExp","RegExp","lastIndex","error","toRegExp","set","wrapRelativePattern","arg2","wrappedPattern","isEqualOrParent","isLinux","ltrim","sep","targetPath","matchPathEnds","usingPosixSep","posix","nativePath","replace","nativePathEnd","targetPathEnd","hasSibling","parse","undefined","arguments","obj","rp","isRelativePattern","resultPattern","expression","Object","getOwnPropertyNames","when","name","matched","isThenable","requiresSiblings","parseExpressionPattern","some","resultExpression","_this","resultPromises","_regeneratorRuntime","mark","_callee","_iterator3","_step3","resultPromise","_result","wrap","_context","prev","sent","abrupt","t0","finish","stop","_this2","extname","_callee2","_iterator4","_step4","_result2","_context2","parsedExpression","basenamePatterns","aggregate","ch","charCodeAt","indexOf","aggregatedPatterns","hash","doHash","hashVal","numberHash","Array","isArray","arr","initialHashVal","item","keys","sort","key","stringHash","objectHash","b","booleanHash","val","leftRotate","bits","delta","fill","dest","count","byteLength","toHexString","bufferOrValue","bitsize","ArrayBuffer","from","Uint8Array","toString","padStart","leftPad","StringSHA1","_classCallCheck","this","_h0","_h1","_h2","_h3","_h4","_buff","_buffDV","DataView","buffer","_buffLen","_totalLen","_leftoverHighSurrogate","_finished","_createClass","str","strLen","charCode","offset","buff","buffLen","leftoverHighSurrogate","codePoint","strings","nextCharCode","_push","_wrapUp","ml","setUint32","Math","floor","bigBlock32","_bigBlock32","data","j","getUint32","k","temp","a","c","d","HistoryNavigator","history","limit","_initialize","_limit","_onChange","_elements","t","_history","delete","add","_currentPosition","_navigator","previous","first","last","has","_reduceToLimit","elements","ArrayNavigator","currentElement","Set","entry","MarkdownString","_a","_b","_c","isTrustedOrOptions","illegalArgument","isTrusted","supportThemeIcons","supportHtml","text","newlineStyle","escapeIcons","_match","g1","repeat","langId","code","target","label","title","_escape","String","r","charAt","isEmptyMarkdownString","oneOrMany","isMarkdownString","thing","escapeDoubleQuotes","input","removeMarkdownEscapes","parseHrefAndDimensions","href","dimensions","splitted","parameters","heightFromParams","widthFromParams","height","width","widthIsFinite","isFinite","parseInt","heightIsFinite","iconStartMarker","iconsRegex","ThemeIcon","iconNameExpression","iconModifierExpression","escapeIconsRegex","source","escaped","markdownEscapedIconsRegex","markdownEscapeEscapedIcons","stripIconsRegex","stripIcons","preWhitespace","postWhitespace","getCodiconAriaLabel","codiconName","_parseIconsRegex","iconNameCharacter","parseLabelWithIcons","iconOffsets","iconsOffset","pos","chars","substring","matchesFuzzyIconAware","query","enableSeparateSubstringMatching","matchesFuzzy","wordToMatchAgainstWithoutIconsTrimmed","leadingWhitespaceOffset","matches","iconOffset","start","end","IdGenerator","prefix","_prefix","_lastId","defaultGenerator","IME","IMEImpl","_onDidChange","Emitter","onDidChange","event","_enabled","fire","Iterable","_marked","single","_marked2","_marked3","_marked4","is","Symbol","iterator","_empty","freeze","element","iterable","predicate","fn","_context3","_len","iterables","_key","_i","_iterables","_iterator5","_step5","_args4","_context4","empty","iterableOrElement","isEmpty","reducer","initialValue","_step6","_iterator6","to","_context5","consume","atMost","Number","POSITIVE_INFINITY","consumed","_defineProperty","KeyCodeUtils","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","create","keyCode","toLowerCase","uiMap","userSettingsUSMap","userSettingsGeneralMap","EVENT_KEY_CODE_MAP","NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE","scanCodeIntToStr","scanCodeStrToInt","scanCodeLowerCaseStrToInt","IMMUTABLE_CODE_TO_KEY_CODE","IMMUTABLE_KEY_CODE_TO_CODE","KeyChord","firstPart","secondPart","seenKeyCode","seenScanCode","_i2","_mappings","mapping","_mapping","_slicedToArray","immutable","scanCode","scanCodeStr","keyCodeStr","eventKeyCode","vkey","usUserSettingsLabel","generalUserSettingsLabel","Error","define","keyCodeToStr","fromString","strToKeyCode","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","toElectronAccelerator","ModifierLabelProvider","mac","windows","linux","modifierLabels","OS","chords","keyLabelProvider","len","chord","keyLabel","_simpleAsString","UILabelProvider","ctrlKey","shiftKey","altKey","metaKey","separator","nls","comment","AriaLabelProvider","ElectronAcceleratorLabelProvider","modifiers","labels","decodeKeybinding","keybinding","firstChord","secondChord","Keybinding","createSimpleKeybinding","ctrlCmd","winCtrl","KeyCodeChord","other","ResolvedChord","keyAriaLabel","ResolvedKeybinding","normalizeDriveLetter","isWindowsOS","isWindows","hasDriveLetter","toUpperCase","Lazy","executor","_didRun","_value","_error","disposableTracker","trackDisposable","x","markAsDisposed","disposable","setParentOfDisposable","child","parent","setParent","markAsSingleton","singleton","isDisposable","dispose","arg","errors","AggregateError","combinedDisposable","disposables","toDisposable","children","setParentOfDisposables","self","once","DisposableStore","_toDispose","_isDisposed","clear","size","o","DISABLE_DISPOSED_WARNING","console","warn","stack","Disposable","_store","None","MutableDisposable","oldValue","RefCountedDisposable","_disposable","_counter","SafeDisposable","unset","isset","callback","ImmortalReference","object","DisposableMap","_Symbol$iterator","Map","clearAndDisposeAll","values","skipDisposeOnOverwrite","Node","Undefined","LinkedList","_first","_last","_size","node","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","res","anchor","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","LinkedText","nodes","memoize","prototype","LINK_REGEX","parseLinkedText","_match2"],"sourceRoot":""}