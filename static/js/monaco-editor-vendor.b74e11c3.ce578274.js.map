{"version":3,"file":"static/js/monaco-editor-vendor.b74e11c3.ce578274.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/editor/contrib/dnd/browser/dragAndDropCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/dnd/browser/dnd.js","../node_modules/monaco-editor/esm/vs/editor/contrib/documentSymbols/browser/documentSymbols.js","../node_modules/monaco-editor/esm/vs/editor/contrib/documentSymbols/browser/outlineModel.js","../node_modules/monaco-editor/esm/vs/editor/contrib/editorState/browser/keybindingCancellation.js","../node_modules/monaco-editor/esm/vs/editor/contrib/editorState/browser/editorState.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findDecorations.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/replaceAllCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/replacePattern.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findModel.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findOptionsWidget.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findState.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findWidget.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class DragAndDropCommand {\n    constructor(selection, targetPosition, copy) {\n        this.selection = selection;\n        this.targetPosition = targetPosition;\n        this.copy = copy;\n        this.targetSelection = null;\n    }\n    getEditOperations(model, builder) {\n        let text = model.getValueInRange(this.selection);\n        if (!this.copy) {\n            builder.addEditOperation(this.selection, null);\n        }\n        builder.addEditOperation(new Range(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column), text);\n        if (this.selection.containsPosition(this.targetPosition) && !(this.copy && (this.selection.getEndPosition().equals(this.targetPosition) || this.selection.getStartPosition().equals(this.targetPosition)) // we allow users to paste content beside the selection\n        )) {\n            this.targetSelection = this.selection;\n            return;\n        }\n        if (this.copy) {\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.selection.endLineNumber - this.selection.startLineNumber + this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        if (this.targetPosition.lineNumber > this.selection.endLineNumber) {\n            // Drag the selection downwards\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        if (this.targetPosition.lineNumber < this.selection.endLineNumber) {\n            // Drag the selection upwards\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber + this.selection.endLineNumber - this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        // The target position is at the same line as the selection's end position.\n        if (this.selection.endColumn <= this.targetPosition.column) {\n            // The target position is after the selection's end position\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn :\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column :\n                this.selection.endColumn);\n        }\n        else {\n            // The target position is before the selection's end position. Since the selection doesn't contain the target position, the selection is one-line and target position is before this selection.\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column + this.selection.endColumn - this.selection.startColumn);\n        }\n    }\n    computeCursorState(model, helper) {\n        return this.targetSelection;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { isMacintosh } from '../../../../base/common/platform.js';\nimport './dnd.css';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { DragAndDropCommand } from './dragAndDropCommand.js';\nfunction hasTriggerModifier(e) {\n    if (isMacintosh) {\n        return e.altKey;\n    }\n    else {\n        return e.ctrlKey;\n    }\n}\nexport class DragAndDropController extends Disposable {\n    constructor(editor) {\n        super();\n        this._editor = editor;\n        this._register(this._editor.onMouseDown((e) => this._onEditorMouseDown(e)));\n        this._register(this._editor.onMouseUp((e) => this._onEditorMouseUp(e)));\n        this._register(this._editor.onMouseDrag((e) => this._onEditorMouseDrag(e)));\n        this._register(this._editor.onMouseDrop((e) => this._onEditorMouseDrop(e)));\n        this._register(this._editor.onMouseDropCanceled(() => this._onEditorMouseDropCanceled()));\n        this._register(this._editor.onKeyDown((e) => this.onEditorKeyDown(e)));\n        this._register(this._editor.onKeyUp((e) => this.onEditorKeyUp(e)));\n        this._register(this._editor.onDidBlurEditorWidget(() => this.onEditorBlur()));\n        this._register(this._editor.onDidBlurEditorText(() => this.onEditorBlur()));\n        this._dndDecorationIds = [];\n        this._mouseDown = false;\n        this._modifierPressed = false;\n        this._dragSelection = null;\n    }\n    onEditorBlur() {\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n        this._modifierPressed = false;\n    }\n    onEditorKeyDown(e) {\n        if (!this._editor.getOption(31 /* dragAndDrop */) || this._editor.getOption(18 /* columnSelection */)) {\n            return;\n        }\n        if (hasTriggerModifier(e)) {\n            this._modifierPressed = true;\n        }\n        if (this._mouseDown && hasTriggerModifier(e)) {\n            this._editor.updateOptions({\n                mouseStyle: 'copy'\n            });\n        }\n    }\n    onEditorKeyUp(e) {\n        if (!this._editor.getOption(31 /* dragAndDrop */) || this._editor.getOption(18 /* columnSelection */)) {\n            return;\n        }\n        if (hasTriggerModifier(e)) {\n            this._modifierPressed = false;\n        }\n        if (this._mouseDown && e.keyCode === DragAndDropController.TRIGGER_KEY_VALUE) {\n            this._editor.updateOptions({\n                mouseStyle: 'default'\n            });\n        }\n    }\n    _onEditorMouseDown(mouseEvent) {\n        this._mouseDown = true;\n    }\n    _onEditorMouseUp(mouseEvent) {\n        this._mouseDown = false;\n        // Whenever users release the mouse, the drag and drop operation should finish and the cursor should revert to text.\n        this._editor.updateOptions({\n            mouseStyle: 'text'\n        });\n    }\n    _onEditorMouseDrag(mouseEvent) {\n        let target = mouseEvent.target;\n        if (this._dragSelection === null) {\n            const selections = this._editor.getSelections() || [];\n            let possibleSelections = selections.filter(selection => target.position && selection.containsPosition(target.position));\n            if (possibleSelections.length === 1) {\n                this._dragSelection = possibleSelections[0];\n            }\n            else {\n                return;\n            }\n        }\n        if (hasTriggerModifier(mouseEvent.event)) {\n            this._editor.updateOptions({\n                mouseStyle: 'copy'\n            });\n        }\n        else {\n            this._editor.updateOptions({\n                mouseStyle: 'default'\n            });\n        }\n        if (target.position) {\n            if (this._dragSelection.containsPosition(target.position)) {\n                this._removeDecoration();\n            }\n            else {\n                this.showAt(target.position);\n            }\n        }\n    }\n    _onEditorMouseDropCanceled() {\n        this._editor.updateOptions({\n            mouseStyle: 'text'\n        });\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n    }\n    _onEditorMouseDrop(mouseEvent) {\n        if (mouseEvent.target && (this._hitContent(mouseEvent.target) || this._hitMargin(mouseEvent.target)) && mouseEvent.target.position) {\n            let newCursorPosition = new Position(mouseEvent.target.position.lineNumber, mouseEvent.target.position.column);\n            if (this._dragSelection === null) {\n                let newSelections = null;\n                if (mouseEvent.event.shiftKey) {\n                    let primarySelection = this._editor.getSelection();\n                    if (primarySelection) {\n                        const { selectionStartLineNumber, selectionStartColumn } = primarySelection;\n                        newSelections = [new Selection(selectionStartLineNumber, selectionStartColumn, newCursorPosition.lineNumber, newCursorPosition.column)];\n                    }\n                }\n                else {\n                    newSelections = (this._editor.getSelections() || []).map(selection => {\n                        if (selection.containsPosition(newCursorPosition)) {\n                            return new Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);\n                        }\n                        else {\n                            return selection;\n                        }\n                    });\n                }\n                // Use `mouse` as the source instead of `api` and setting the reason to explicit (to behave like any other mouse operation).\n                this._editor.setSelections(newSelections || [], 'mouse', 3 /* Explicit */);\n            }\n            else if (!this._dragSelection.containsPosition(newCursorPosition) ||\n                ((hasTriggerModifier(mouseEvent.event) ||\n                    this._modifierPressed) && (this._dragSelection.getEndPosition().equals(newCursorPosition) || this._dragSelection.getStartPosition().equals(newCursorPosition)) // we allow users to paste content beside the selection\n                )) {\n                this._editor.pushUndoStop();\n                this._editor.executeCommand(DragAndDropController.ID, new DragAndDropCommand(this._dragSelection, newCursorPosition, hasTriggerModifier(mouseEvent.event) || this._modifierPressed));\n                this._editor.pushUndoStop();\n            }\n        }\n        this._editor.updateOptions({\n            mouseStyle: 'text'\n        });\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n    }\n    showAt(position) {\n        let newDecorations = [{\n                range: new Range(position.lineNumber, position.column, position.lineNumber, position.column),\n                options: DragAndDropController._DECORATION_OPTIONS\n            }];\n        this._dndDecorationIds = this._editor.deltaDecorations(this._dndDecorationIds, newDecorations);\n        this._editor.revealPosition(position, 1 /* Immediate */);\n    }\n    _removeDecoration() {\n        this._dndDecorationIds = this._editor.deltaDecorations(this._dndDecorationIds, []);\n    }\n    _hitContent(target) {\n        return target.type === 6 /* CONTENT_TEXT */ ||\n            target.type === 7 /* CONTENT_EMPTY */;\n    }\n    _hitMargin(target) {\n        return target.type === 2 /* GUTTER_GLYPH_MARGIN */ ||\n            target.type === 3 /* GUTTER_LINE_NUMBERS */ ||\n            target.type === 4 /* GUTTER_LINE_DECORATIONS */;\n    }\n    dispose() {\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n        this._modifierPressed = false;\n        super.dispose();\n    }\n}\nDragAndDropController.ID = 'editor.contrib.dragAndDrop';\nDragAndDropController.TRIGGER_KEY_VALUE = isMacintosh ? 6 /* Alt */ : 5 /* Ctrl */;\nDragAndDropController._DECORATION_OPTIONS = ModelDecorationOptions.register({\n    description: 'dnd-target',\n    className: 'dnd-target'\n});\nregisterEditorContribution(DragAndDropController.ID, DragAndDropController);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { IOutlineModelService } from './outlineModel.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nCommandsRegistry.registerCommand('_executeDocumentSymbolProvider', function (accessor, ...args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [resource] = args;\n        assertType(URI.isUri(resource));\n        const outlineService = accessor.get(IOutlineModelService);\n        const modelService = accessor.get(ITextModelService);\n        const reference = yield modelService.createModelReference(resource);\n        try {\n            return (yield outlineService.getOrCreate(reference.object.textEditorModel, CancellationToken.None)).getTopLevelSymbols();\n        }\n        finally {\n            reference.dispose();\n        }\n    });\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { equals } from '../../../../base/common/arrays.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport class TreeElement {\n    remove() {\n        if (this.parent) {\n            this.parent.children.delete(this.id);\n        }\n    }\n    static findId(candidate, container) {\n        // complex id-computation which contains the origin/extension,\n        // the parent path, and some dedupe logic when names collide\n        let candidateId;\n        if (typeof candidate === 'string') {\n            candidateId = `${container.id}/${candidate}`;\n        }\n        else {\n            candidateId = `${container.id}/${candidate.name}`;\n            if (container.children.get(candidateId) !== undefined) {\n                candidateId = `${container.id}/${candidate.name}_${candidate.range.startLineNumber}_${candidate.range.startColumn}`;\n            }\n        }\n        let id = candidateId;\n        for (let i = 0; container.children.get(id) !== undefined; i++) {\n            id = `${candidateId}_${i}`;\n        }\n        return id;\n    }\n    static empty(element) {\n        return element.children.size === 0;\n    }\n}\nexport class OutlineElement extends TreeElement {\n    constructor(id, parent, symbol) {\n        super();\n        this.id = id;\n        this.parent = parent;\n        this.symbol = symbol;\n        this.children = new Map();\n    }\n}\nexport class OutlineGroup extends TreeElement {\n    constructor(id, parent, label, order) {\n        super();\n        this.id = id;\n        this.parent = parent;\n        this.label = label;\n        this.order = order;\n        this.children = new Map();\n    }\n}\nexport class OutlineModel extends TreeElement {\n    constructor(uri) {\n        super();\n        this.uri = uri;\n        this.id = 'root';\n        this.parent = undefined;\n        this._groups = new Map();\n        this.children = new Map();\n        this.id = 'root';\n        this.parent = undefined;\n    }\n    static create(registry, textModel, token) {\n        const cts = new CancellationTokenSource(token);\n        const result = new OutlineModel(textModel.uri);\n        const provider = registry.ordered(textModel);\n        const promises = provider.map((provider, index) => {\n            var _a;\n            let id = TreeElement.findId(`provider_${index}`, result);\n            let group = new OutlineGroup(id, result, (_a = provider.displayName) !== null && _a !== void 0 ? _a : 'Unknown Outline Provider', index);\n            return Promise.resolve(provider.provideDocumentSymbols(textModel, cts.token)).then(result => {\n                for (const info of result || []) {\n                    OutlineModel._makeOutlineElement(info, group);\n                }\n                return group;\n            }, err => {\n                onUnexpectedExternalError(err);\n                return group;\n            }).then(group => {\n                if (!TreeElement.empty(group)) {\n                    result._groups.set(id, group);\n                }\n                else {\n                    group.remove();\n                }\n            });\n        });\n        const listener = registry.onDidChange(() => {\n            const newProvider = registry.ordered(textModel);\n            if (!equals(newProvider, provider)) {\n                cts.cancel();\n            }\n        });\n        return Promise.all(promises).then(() => {\n            if (cts.token.isCancellationRequested && !token.isCancellationRequested) {\n                return OutlineModel.create(registry, textModel, token);\n            }\n            else {\n                return result._compact();\n            }\n        }).finally(() => {\n            listener.dispose();\n        });\n    }\n    static _makeOutlineElement(info, container) {\n        let id = TreeElement.findId(info, container);\n        let res = new OutlineElement(id, container, info);\n        if (info.children) {\n            for (const childInfo of info.children) {\n                OutlineModel._makeOutlineElement(childInfo, res);\n            }\n        }\n        container.children.set(res.id, res);\n    }\n    _compact() {\n        let count = 0;\n        for (const [key, group] of this._groups) {\n            if (group.children.size === 0) { // empty\n                this._groups.delete(key);\n            }\n            else {\n                count += 1;\n            }\n        }\n        if (count !== 1) {\n            //\n            this.children = this._groups;\n        }\n        else {\n            // adopt all elements of the first group\n            let group = Iterable.first(this._groups.values());\n            for (let [, child] of group.children) {\n                child.parent = this;\n                this.children.set(child.id, child);\n            }\n        }\n        return this;\n    }\n    getTopLevelSymbols() {\n        const roots = [];\n        for (const child of this.children.values()) {\n            if (child instanceof OutlineElement) {\n                roots.push(child.symbol);\n            }\n            else {\n                roots.push(...Iterable.map(child.children.values(), child => child.symbol));\n            }\n        }\n        return roots.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\n    }\n    asListOfDocumentSymbols() {\n        const roots = this.getTopLevelSymbols();\n        const bucket = [];\n        OutlineModel._flattenDocumentSymbols(bucket, roots, '');\n        return bucket.sort((a, b) => Position.compare(Range.getStartPosition(a.range), Range.getStartPosition(b.range)) || Position.compare(Range.getEndPosition(b.range), Range.getEndPosition(a.range)));\n    }\n    static _flattenDocumentSymbols(bucket, entries, overrideContainerLabel) {\n        for (const entry of entries) {\n            bucket.push({\n                kind: entry.kind,\n                tags: entry.tags,\n                name: entry.name,\n                detail: entry.detail,\n                containerName: entry.containerName || overrideContainerLabel,\n                range: entry.range,\n                selectionRange: entry.selectionRange,\n                children: undefined, // we flatten it...\n            });\n            // Recurse over children\n            if (entry.children) {\n                OutlineModel._flattenDocumentSymbols(bucket, entry.children, entry.name);\n            }\n        }\n    }\n}\nexport const IOutlineModelService = createDecorator('IOutlineModelService');\nlet OutlineModelService = class OutlineModelService {\n    constructor(_languageFeaturesService, debounces, modelService) {\n        this._languageFeaturesService = _languageFeaturesService;\n        this._disposables = new DisposableStore();\n        this._cache = new LRUCache(10, 0.7);\n        this._debounceInformation = debounces.for(_languageFeaturesService.documentSymbolProvider, 'DocumentSymbols', { min: 350 });\n        // don't cache outline models longer than their text model\n        this._disposables.add(modelService.onModelRemoved(textModel => {\n            this._cache.delete(textModel.id);\n        }));\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n    getOrCreate(textModel, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const registry = this._languageFeaturesService.documentSymbolProvider;\n            const provider = registry.ordered(textModel);\n            let data = this._cache.get(textModel.id);\n            if (!data || data.versionId !== textModel.getVersionId() || !equals(data.provider, provider)) {\n                let source = new CancellationTokenSource();\n                data = {\n                    versionId: textModel.getVersionId(),\n                    provider,\n                    promiseCnt: 0,\n                    source,\n                    promise: OutlineModel.create(registry, textModel, source.token),\n                    model: undefined,\n                };\n                this._cache.set(textModel.id, data);\n                const now = Date.now();\n                data.promise.then(outlineModel => {\n                    data.model = outlineModel;\n                    this._debounceInformation.update(textModel, Date.now() - now);\n                }).catch(_err => {\n                    this._cache.delete(textModel.id);\n                });\n            }\n            if (data.model) {\n                // resolved -> return data\n                return data.model;\n            }\n            // increase usage counter\n            data.promiseCnt += 1;\n            const listener = token.onCancellationRequested(() => {\n                // last -> cancel provider request, remove cached promise\n                if (--data.promiseCnt === 0) {\n                    data.source.cancel();\n                    this._cache.delete(textModel.id);\n                }\n            });\n            try {\n                return yield data.promise;\n            }\n            finally {\n                listener.dispose();\n            }\n        });\n    }\n};\nOutlineModelService = __decorate([\n    __param(0, ILanguageFeaturesService),\n    __param(1, ILanguageFeatureDebounceService),\n    __param(2, IModelService)\n], OutlineModelService);\nexport { OutlineModelService };\nregisterSingleton(IOutlineModelService, OutlineModelService, true);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorCommand, registerEditorCommand } from '../../../browser/editorExtensions.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { LinkedList } from '../../../../base/common/linkedList.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { localize } from '../../../../nls.js';\nconst IEditorCancellationTokens = createDecorator('IEditorCancelService');\nconst ctxCancellableOperation = new RawContextKey('cancellableOperation', false, localize('cancellableOperation', 'Whether the editor runs a cancellable operation, e.g. like \\'Peek References\\''));\nregisterSingleton(IEditorCancellationTokens, class {\n    constructor() {\n        this._tokens = new WeakMap();\n    }\n    add(editor, cts) {\n        let data = this._tokens.get(editor);\n        if (!data) {\n            data = editor.invokeWithinContext(accessor => {\n                const key = ctxCancellableOperation.bindTo(accessor.get(IContextKeyService));\n                const tokens = new LinkedList();\n                return { key, tokens };\n            });\n            this._tokens.set(editor, data);\n        }\n        let removeFn;\n        data.key.set(true);\n        removeFn = data.tokens.push(cts);\n        return () => {\n            // remove w/o cancellation\n            if (removeFn) {\n                removeFn();\n                data.key.set(!data.tokens.isEmpty());\n                removeFn = undefined;\n            }\n        };\n    }\n    cancel(editor) {\n        const data = this._tokens.get(editor);\n        if (!data) {\n            return;\n        }\n        // remove with cancellation\n        const cts = data.tokens.pop();\n        if (cts) {\n            cts.cancel();\n            data.key.set(!data.tokens.isEmpty());\n        }\n    }\n}, true);\nexport class EditorKeybindingCancellationTokenSource extends CancellationTokenSource {\n    constructor(editor, parent) {\n        super(parent);\n        this.editor = editor;\n        this._unregister = editor.invokeWithinContext(accessor => accessor.get(IEditorCancellationTokens).add(editor, this));\n    }\n    dispose() {\n        this._unregister();\n        super.dispose();\n    }\n}\nregisterEditorCommand(new class extends EditorCommand {\n    constructor() {\n        super({\n            id: 'editor.cancelOperation',\n            kbOpts: {\n                weight: 100 /* EditorContrib */,\n                primary: 9 /* Escape */\n            },\n            precondition: ctxCancellableOperation\n        });\n    }\n    runEditorCommand(accessor, editor) {\n        accessor.get(IEditorCancellationTokens).cancel(editor);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../../base/common/strings.js';\nimport { Range } from '../../../common/core/range.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { EditorKeybindingCancellationTokenSource } from './keybindingCancellation.js';\nexport class EditorState {\n    constructor(editor, flags) {\n        this.flags = flags;\n        if ((this.flags & 1 /* Value */) !== 0) {\n            const model = editor.getModel();\n            this.modelVersionId = model ? strings.format('{0}#{1}', model.uri.toString(), model.getVersionId()) : null;\n        }\n        else {\n            this.modelVersionId = null;\n        }\n        if ((this.flags & 4 /* Position */) !== 0) {\n            this.position = editor.getPosition();\n        }\n        else {\n            this.position = null;\n        }\n        if ((this.flags & 2 /* Selection */) !== 0) {\n            this.selection = editor.getSelection();\n        }\n        else {\n            this.selection = null;\n        }\n        if ((this.flags & 8 /* Scroll */) !== 0) {\n            this.scrollLeft = editor.getScrollLeft();\n            this.scrollTop = editor.getScrollTop();\n        }\n        else {\n            this.scrollLeft = -1;\n            this.scrollTop = -1;\n        }\n    }\n    _equals(other) {\n        if (!(other instanceof EditorState)) {\n            return false;\n        }\n        const state = other;\n        if (this.modelVersionId !== state.modelVersionId) {\n            return false;\n        }\n        if (this.scrollLeft !== state.scrollLeft || this.scrollTop !== state.scrollTop) {\n            return false;\n        }\n        if (!this.position && state.position || this.position && !state.position || this.position && state.position && !this.position.equals(state.position)) {\n            return false;\n        }\n        if (!this.selection && state.selection || this.selection && !state.selection || this.selection && state.selection && !this.selection.equalsRange(state.selection)) {\n            return false;\n        }\n        return true;\n    }\n    validate(editor) {\n        return this._equals(new EditorState(editor, this.flags));\n    }\n}\n/**\n * A cancellation token source that cancels when the editor changes as expressed\n * by the provided flags\n * @param range If provided, changes in position and selection within this range will not trigger cancellation\n */\nexport class EditorStateCancellationTokenSource extends EditorKeybindingCancellationTokenSource {\n    constructor(editor, flags, range, parent) {\n        super(editor, parent);\n        this._listener = new DisposableStore();\n        if (flags & 4 /* Position */) {\n            this._listener.add(editor.onDidChangeCursorPosition(e => {\n                if (!range || !Range.containsPosition(range, e.position)) {\n                    this.cancel();\n                }\n            }));\n        }\n        if (flags & 2 /* Selection */) {\n            this._listener.add(editor.onDidChangeCursorSelection(e => {\n                if (!range || !Range.containsRange(range, e.selection)) {\n                    this.cancel();\n                }\n            }));\n        }\n        if (flags & 8 /* Scroll */) {\n            this._listener.add(editor.onDidScrollChange(_ => this.cancel()));\n        }\n        if (flags & 1 /* Value */) {\n            this._listener.add(editor.onDidChangeModel(_ => this.cancel()));\n            this._listener.add(editor.onDidChangeModelContent(_ => this.cancel()));\n        }\n    }\n    dispose() {\n        this._listener.dispose();\n        super.dispose();\n    }\n}\n/**\n * A cancellation token source that cancels when the provided model changes\n */\nexport class TextModelCancellationTokenSource extends CancellationTokenSource {\n    constructor(model, parent) {\n        super(parent);\n        this._listener = model.onDidChangeContent(() => this.cancel());\n    }\n    dispose() {\n        this._listener.dispose();\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { MinimapPosition, OverviewRulerLane } from '../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { minimapFindMatch, overviewRulerFindMatchForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nexport class FindDecorations {\n    constructor(editor) {\n        this._editor = editor;\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationIds = [];\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n        this._startPosition = this._editor.getPosition();\n    }\n    dispose() {\n        this._editor.deltaDecorations(this._allDecorations(), []);\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationIds = [];\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n    }\n    reset() {\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationIds = [];\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n    }\n    getCount() {\n        return this._decorations.length;\n    }\n    /** @deprecated use getFindScopes to support multiple selections */\n    getFindScope() {\n        if (this._findScopeDecorationIds[0]) {\n            return this._editor.getModel().getDecorationRange(this._findScopeDecorationIds[0]);\n        }\n        return null;\n    }\n    getFindScopes() {\n        if (this._findScopeDecorationIds.length) {\n            const scopes = this._findScopeDecorationIds.map(findScopeDecorationId => this._editor.getModel().getDecorationRange(findScopeDecorationId)).filter(element => !!element);\n            if (scopes.length) {\n                return scopes;\n            }\n        }\n        return null;\n    }\n    getStartPosition() {\n        return this._startPosition;\n    }\n    setStartPosition(newStartPosition) {\n        this._startPosition = newStartPosition;\n        this.setCurrentFindMatch(null);\n    }\n    _getDecorationIndex(decorationId) {\n        const index = this._decorations.indexOf(decorationId);\n        if (index >= 0) {\n            return index + 1;\n        }\n        return 1;\n    }\n    getCurrentMatchesPosition(desiredRange) {\n        let candidates = this._editor.getModel().getDecorationsInRange(desiredRange);\n        for (const candidate of candidates) {\n            const candidateOpts = candidate.options;\n            if (candidateOpts === FindDecorations._FIND_MATCH_DECORATION || candidateOpts === FindDecorations._CURRENT_FIND_MATCH_DECORATION) {\n                return this._getDecorationIndex(candidate.id);\n            }\n        }\n        // We don't know the current match position, so returns zero to show '?' in find widget\n        return 0;\n    }\n    setCurrentFindMatch(nextMatch) {\n        let newCurrentDecorationId = null;\n        let matchPosition = 0;\n        if (nextMatch) {\n            for (let i = 0, len = this._decorations.length; i < len; i++) {\n                let range = this._editor.getModel().getDecorationRange(this._decorations[i]);\n                if (nextMatch.equalsRange(range)) {\n                    newCurrentDecorationId = this._decorations[i];\n                    matchPosition = (i + 1);\n                    break;\n                }\n            }\n        }\n        if (this._highlightedDecorationId !== null || newCurrentDecorationId !== null) {\n            this._editor.changeDecorations((changeAccessor) => {\n                if (this._highlightedDecorationId !== null) {\n                    changeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._FIND_MATCH_DECORATION);\n                    this._highlightedDecorationId = null;\n                }\n                if (newCurrentDecorationId !== null) {\n                    this._highlightedDecorationId = newCurrentDecorationId;\n                    changeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._CURRENT_FIND_MATCH_DECORATION);\n                }\n                if (this._rangeHighlightDecorationId !== null) {\n                    changeAccessor.removeDecoration(this._rangeHighlightDecorationId);\n                    this._rangeHighlightDecorationId = null;\n                }\n                if (newCurrentDecorationId !== null) {\n                    let rng = this._editor.getModel().getDecorationRange(newCurrentDecorationId);\n                    if (rng.startLineNumber !== rng.endLineNumber && rng.endColumn === 1) {\n                        let lineBeforeEnd = rng.endLineNumber - 1;\n                        let lineBeforeEndMaxColumn = this._editor.getModel().getLineMaxColumn(lineBeforeEnd);\n                        rng = new Range(rng.startLineNumber, rng.startColumn, lineBeforeEnd, lineBeforeEndMaxColumn);\n                    }\n                    this._rangeHighlightDecorationId = changeAccessor.addDecoration(rng, FindDecorations._RANGE_HIGHLIGHT_DECORATION);\n                }\n            });\n        }\n        return matchPosition;\n    }\n    set(findMatches, findScopes) {\n        this._editor.changeDecorations((accessor) => {\n            let findMatchesOptions = FindDecorations._FIND_MATCH_DECORATION;\n            let newOverviewRulerApproximateDecorations = [];\n            if (findMatches.length > 1000) {\n                // we go into a mode where the overview ruler gets \"approximate\" decorations\n                // the reason is that the overview ruler paints all the decorations in the file and we don't want to cause freezes\n                findMatchesOptions = FindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION;\n                // approximate a distance in lines where matches should be merged\n                const lineCount = this._editor.getModel().getLineCount();\n                const height = this._editor.getLayoutInfo().height;\n                const approxPixelsPerLine = height / lineCount;\n                const mergeLinesDelta = Math.max(2, Math.ceil(3 / approxPixelsPerLine));\n                // merge decorations as much as possible\n                let prevStartLineNumber = findMatches[0].range.startLineNumber;\n                let prevEndLineNumber = findMatches[0].range.endLineNumber;\n                for (let i = 1, len = findMatches.length; i < len; i++) {\n                    const range = findMatches[i].range;\n                    if (prevEndLineNumber + mergeLinesDelta >= range.startLineNumber) {\n                        if (range.endLineNumber > prevEndLineNumber) {\n                            prevEndLineNumber = range.endLineNumber;\n                        }\n                    }\n                    else {\n                        newOverviewRulerApproximateDecorations.push({\n                            range: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\n                            options: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\n                        });\n                        prevStartLineNumber = range.startLineNumber;\n                        prevEndLineNumber = range.endLineNumber;\n                    }\n                }\n                newOverviewRulerApproximateDecorations.push({\n                    range: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\n                    options: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\n                });\n            }\n            // Find matches\n            let newFindMatchesDecorations = new Array(findMatches.length);\n            for (let i = 0, len = findMatches.length; i < len; i++) {\n                newFindMatchesDecorations[i] = {\n                    range: findMatches[i].range,\n                    options: findMatchesOptions\n                };\n            }\n            this._decorations = accessor.deltaDecorations(this._decorations, newFindMatchesDecorations);\n            // Overview ruler approximate decorations\n            this._overviewRulerApproximateDecorations = accessor.deltaDecorations(this._overviewRulerApproximateDecorations, newOverviewRulerApproximateDecorations);\n            // Range highlight\n            if (this._rangeHighlightDecorationId) {\n                accessor.removeDecoration(this._rangeHighlightDecorationId);\n                this._rangeHighlightDecorationId = null;\n            }\n            // Find scope\n            if (this._findScopeDecorationIds.length) {\n                this._findScopeDecorationIds.forEach(findScopeDecorationId => accessor.removeDecoration(findScopeDecorationId));\n                this._findScopeDecorationIds = [];\n            }\n            if (findScopes === null || findScopes === void 0 ? void 0 : findScopes.length) {\n                this._findScopeDecorationIds = findScopes.map(findScope => accessor.addDecoration(findScope, FindDecorations._FIND_SCOPE_DECORATION));\n            }\n        });\n    }\n    matchBeforePosition(position) {\n        if (this._decorations.length === 0) {\n            return null;\n        }\n        for (let i = this._decorations.length - 1; i >= 0; i--) {\n            let decorationId = this._decorations[i];\n            let r = this._editor.getModel().getDecorationRange(decorationId);\n            if (!r || r.endLineNumber > position.lineNumber) {\n                continue;\n            }\n            if (r.endLineNumber < position.lineNumber) {\n                return r;\n            }\n            if (r.endColumn > position.column) {\n                continue;\n            }\n            return r;\n        }\n        return this._editor.getModel().getDecorationRange(this._decorations[this._decorations.length - 1]);\n    }\n    matchAfterPosition(position) {\n        if (this._decorations.length === 0) {\n            return null;\n        }\n        for (let i = 0, len = this._decorations.length; i < len; i++) {\n            let decorationId = this._decorations[i];\n            let r = this._editor.getModel().getDecorationRange(decorationId);\n            if (!r || r.startLineNumber < position.lineNumber) {\n                continue;\n            }\n            if (r.startLineNumber > position.lineNumber) {\n                return r;\n            }\n            if (r.startColumn < position.column) {\n                continue;\n            }\n            return r;\n        }\n        return this._editor.getModel().getDecorationRange(this._decorations[0]);\n    }\n    _allDecorations() {\n        let result = [];\n        result = result.concat(this._decorations);\n        result = result.concat(this._overviewRulerApproximateDecorations);\n        if (this._findScopeDecorationIds.length) {\n            result.push(...this._findScopeDecorationIds);\n        }\n        if (this._rangeHighlightDecorationId) {\n            result.push(this._rangeHighlightDecorationId);\n        }\n        return result;\n    }\n}\nFindDecorations._CURRENT_FIND_MATCH_DECORATION = ModelDecorationOptions.register({\n    description: 'current-find-match',\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\n    zIndex: 13,\n    className: 'currentFindMatch',\n    showIfCollapsed: true,\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerFindMatchForeground),\n        position: OverviewRulerLane.Center\n    },\n    minimap: {\n        color: themeColorFromId(minimapFindMatch),\n        position: MinimapPosition.Inline\n    }\n});\nFindDecorations._FIND_MATCH_DECORATION = ModelDecorationOptions.register({\n    description: 'find-match',\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\n    zIndex: 10,\n    className: 'findMatch',\n    showIfCollapsed: true,\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerFindMatchForeground),\n        position: OverviewRulerLane.Center\n    },\n    minimap: {\n        color: themeColorFromId(minimapFindMatch),\n        position: MinimapPosition.Inline\n    }\n});\nFindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION = ModelDecorationOptions.register({\n    description: 'find-match-no-overview',\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\n    className: 'findMatch',\n    showIfCollapsed: true\n});\nFindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION = ModelDecorationOptions.register({\n    description: 'find-match-only-overview',\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerFindMatchForeground),\n        position: OverviewRulerLane.Center\n    }\n});\nFindDecorations._RANGE_HIGHLIGHT_DECORATION = ModelDecorationOptions.register({\n    description: 'find-range-highlight',\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\n    className: 'rangeHighlight',\n    isWholeLine: true\n});\nFindDecorations._FIND_SCOPE_DECORATION = ModelDecorationOptions.register({\n    description: 'find-scope',\n    className: 'findScope',\n    isWholeLine: true\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nexport class ReplaceAllCommand {\n    constructor(editorSelection, ranges, replaceStrings) {\n        this._editorSelection = editorSelection;\n        this._ranges = ranges;\n        this._replaceStrings = replaceStrings;\n        this._trackedEditorSelectionId = null;\n    }\n    getEditOperations(model, builder) {\n        if (this._ranges.length > 0) {\n            // Collect all edit operations\n            let ops = [];\n            for (let i = 0; i < this._ranges.length; i++) {\n                ops.push({\n                    range: this._ranges[i],\n                    text: this._replaceStrings[i]\n                });\n            }\n            // Sort them in ascending order by range starts\n            ops.sort((o1, o2) => {\n                return Range.compareRangesUsingStarts(o1.range, o2.range);\n            });\n            // Merge operations that touch each other\n            let resultOps = [];\n            let previousOp = ops[0];\n            for (let i = 1; i < ops.length; i++) {\n                if (previousOp.range.endLineNumber === ops[i].range.startLineNumber && previousOp.range.endColumn === ops[i].range.startColumn) {\n                    // These operations are one after another and can be merged\n                    previousOp.range = previousOp.range.plusRange(ops[i].range);\n                    previousOp.text = previousOp.text + ops[i].text;\n                }\n                else {\n                    resultOps.push(previousOp);\n                    previousOp = ops[i];\n                }\n            }\n            resultOps.push(previousOp);\n            for (const op of resultOps) {\n                builder.addEditOperation(op.range, op.text);\n            }\n        }\n        this._trackedEditorSelectionId = builder.trackSelection(this._editorSelection);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this._trackedEditorSelectionId);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { buildReplaceStringWithCasePreserved } from '../../../../base/common/search.js';\n/**\n * Assigned when the replace pattern is entirely static.\n */\nclass StaticValueReplacePattern {\n    constructor(staticValue) {\n        this.staticValue = staticValue;\n        this.kind = 0 /* StaticValue */;\n    }\n}\n/**\n * Assigned when the replace pattern has replacement patterns.\n */\nclass DynamicPiecesReplacePattern {\n    constructor(pieces) {\n        this.pieces = pieces;\n        this.kind = 1 /* DynamicPieces */;\n    }\n}\nexport class ReplacePattern {\n    constructor(pieces) {\n        if (!pieces || pieces.length === 0) {\n            this._state = new StaticValueReplacePattern('');\n        }\n        else if (pieces.length === 1 && pieces[0].staticValue !== null) {\n            this._state = new StaticValueReplacePattern(pieces[0].staticValue);\n        }\n        else {\n            this._state = new DynamicPiecesReplacePattern(pieces);\n        }\n    }\n    static fromStaticValue(value) {\n        return new ReplacePattern([ReplacePiece.staticValue(value)]);\n    }\n    get hasReplacementPatterns() {\n        return (this._state.kind === 1 /* DynamicPieces */);\n    }\n    buildReplaceString(matches, preserveCase) {\n        if (this._state.kind === 0 /* StaticValue */) {\n            if (preserveCase) {\n                return buildReplaceStringWithCasePreserved(matches, this._state.staticValue);\n            }\n            else {\n                return this._state.staticValue;\n            }\n        }\n        let result = '';\n        for (let i = 0, len = this._state.pieces.length; i < len; i++) {\n            let piece = this._state.pieces[i];\n            if (piece.staticValue !== null) {\n                // static value ReplacePiece\n                result += piece.staticValue;\n                continue;\n            }\n            // match index ReplacePiece\n            let match = ReplacePattern._substitute(piece.matchIndex, matches);\n            if (piece.caseOps !== null && piece.caseOps.length > 0) {\n                let repl = [];\n                let lenOps = piece.caseOps.length;\n                let opIdx = 0;\n                for (let idx = 0, len = match.length; idx < len; idx++) {\n                    if (opIdx >= lenOps) {\n                        repl.push(match.slice(idx));\n                        break;\n                    }\n                    switch (piece.caseOps[opIdx]) {\n                        case 'U':\n                            repl.push(match[idx].toUpperCase());\n                            break;\n                        case 'u':\n                            repl.push(match[idx].toUpperCase());\n                            opIdx++;\n                            break;\n                        case 'L':\n                            repl.push(match[idx].toLowerCase());\n                            break;\n                        case 'l':\n                            repl.push(match[idx].toLowerCase());\n                            opIdx++;\n                            break;\n                        default:\n                            repl.push(match[idx]);\n                    }\n                }\n                match = repl.join('');\n            }\n            result += match;\n        }\n        return result;\n    }\n    static _substitute(matchIndex, matches) {\n        if (matches === null) {\n            return '';\n        }\n        if (matchIndex === 0) {\n            return matches[0];\n        }\n        let remainder = '';\n        while (matchIndex > 0) {\n            if (matchIndex < matches.length) {\n                // A match can be undefined\n                let match = (matches[matchIndex] || '');\n                return match + remainder;\n            }\n            remainder = String(matchIndex % 10) + remainder;\n            matchIndex = Math.floor(matchIndex / 10);\n        }\n        return '$' + remainder;\n    }\n}\n/**\n * A replace piece can either be a static string or an index to a specific match.\n */\nexport class ReplacePiece {\n    constructor(staticValue, matchIndex, caseOps) {\n        this.staticValue = staticValue;\n        this.matchIndex = matchIndex;\n        if (!caseOps || caseOps.length === 0) {\n            this.caseOps = null;\n        }\n        else {\n            this.caseOps = caseOps.slice(0);\n        }\n    }\n    static staticValue(value) {\n        return new ReplacePiece(value, -1, null);\n    }\n    static caseOps(index, caseOps) {\n        return new ReplacePiece(null, index, caseOps);\n    }\n}\nclass ReplacePieceBuilder {\n    constructor(source) {\n        this._source = source;\n        this._lastCharIndex = 0;\n        this._result = [];\n        this._resultLen = 0;\n        this._currentStaticPiece = '';\n    }\n    emitUnchanged(toCharIndex) {\n        this._emitStatic(this._source.substring(this._lastCharIndex, toCharIndex));\n        this._lastCharIndex = toCharIndex;\n    }\n    emitStatic(value, toCharIndex) {\n        this._emitStatic(value);\n        this._lastCharIndex = toCharIndex;\n    }\n    _emitStatic(value) {\n        if (value.length === 0) {\n            return;\n        }\n        this._currentStaticPiece += value;\n    }\n    emitMatchIndex(index, toCharIndex, caseOps) {\n        if (this._currentStaticPiece.length !== 0) {\n            this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\n            this._currentStaticPiece = '';\n        }\n        this._result[this._resultLen++] = ReplacePiece.caseOps(index, caseOps);\n        this._lastCharIndex = toCharIndex;\n    }\n    finalize() {\n        this.emitUnchanged(this._source.length);\n        if (this._currentStaticPiece.length !== 0) {\n            this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\n            this._currentStaticPiece = '';\n        }\n        return new ReplacePattern(this._result);\n    }\n}\n/**\n * \\n\t\t\t=> inserts a LF\n * \\t\t\t\t=> inserts a TAB\n * \\\\\t\t\t=> inserts a \"\\\".\n * \\u\t\t\t=> upper-cases one character in a match.\n * \\U\t\t\t=> upper-cases ALL remaining characters in a match.\n * \\l\t\t\t=> lower-cases one character in a match.\n * \\L\t\t\t=> lower-cases ALL remaining characters in a match.\n * $$\t\t\t=> inserts a \"$\".\n * $& and $0\t=> inserts the matched substring.\n * $n\t\t\t=> Where n is a non-negative integer lesser than 100, inserts the nth parenthesized submatch string\n * everything else stays untouched\n *\n * Also see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter\n */\nexport function parseReplaceString(replaceString) {\n    if (!replaceString || replaceString.length === 0) {\n        return new ReplacePattern(null);\n    }\n    let caseOps = [];\n    let result = new ReplacePieceBuilder(replaceString);\n    for (let i = 0, len = replaceString.length; i < len; i++) {\n        let chCode = replaceString.charCodeAt(i);\n        if (chCode === 92 /* Backslash */) {\n            // move to next char\n            i++;\n            if (i >= len) {\n                // string ends with a \\\n                break;\n            }\n            let nextChCode = replaceString.charCodeAt(i);\n            // let replaceWithCharacter: string | null = null;\n            switch (nextChCode) {\n                case 92 /* Backslash */:\n                    // \\\\ => inserts a \"\\\"\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('\\\\', i + 1);\n                    break;\n                case 110 /* n */:\n                    // \\n => inserts a LF\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('\\n', i + 1);\n                    break;\n                case 116 /* t */:\n                    // \\t => inserts a TAB\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('\\t', i + 1);\n                    break;\n                // Case modification of string replacements, patterned after Boost, but only applied\n                // to the replacement text, not subsequent content.\n                case 117 /* u */:\n                // \\u => upper-cases one character.\n                case 85 /* U */:\n                // \\U => upper-cases ALL following characters.\n                case 108 /* l */:\n                // \\l => lower-cases one character.\n                case 76 /* L */:\n                    // \\L => lower-cases ALL following characters.\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('', i + 1);\n                    caseOps.push(String.fromCharCode(nextChCode));\n                    break;\n            }\n            continue;\n        }\n        if (chCode === 36 /* DollarSign */) {\n            // move to next char\n            i++;\n            if (i >= len) {\n                // string ends with a $\n                break;\n            }\n            let nextChCode = replaceString.charCodeAt(i);\n            if (nextChCode === 36 /* DollarSign */) {\n                // $$ => inserts a \"$\"\n                result.emitUnchanged(i - 1);\n                result.emitStatic('$', i + 1);\n                continue;\n            }\n            if (nextChCode === 48 /* Digit0 */ || nextChCode === 38 /* Ampersand */) {\n                // $& and $0 => inserts the matched substring.\n                result.emitUnchanged(i - 1);\n                result.emitMatchIndex(0, i + 1, caseOps);\n                caseOps.length = 0;\n                continue;\n            }\n            if (49 /* Digit1 */ <= nextChCode && nextChCode <= 57 /* Digit9 */) {\n                // $n\n                let matchIndex = nextChCode - 48 /* Digit0 */;\n                // peek next char to probe for $nn\n                if (i + 1 < len) {\n                    let nextNextChCode = replaceString.charCodeAt(i + 1);\n                    if (48 /* Digit0 */ <= nextNextChCode && nextNextChCode <= 57 /* Digit9 */) {\n                        // $nn\n                        // move to next char\n                        i++;\n                        matchIndex = matchIndex * 10 + (nextNextChCode - 48 /* Digit0 */);\n                        result.emitUnchanged(i - 2);\n                        result.emitMatchIndex(matchIndex, i + 1, caseOps);\n                        caseOps.length = 0;\n                        continue;\n                    }\n                }\n                result.emitUnchanged(i - 1);\n                result.emitMatchIndex(matchIndex, i + 1, caseOps);\n                caseOps.length = 0;\n                continue;\n            }\n        }\n    }\n    return result.finalize();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { findFirstInSorted } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler, TimeoutTimer } from '../../../../base/common/async.js';\nimport { DisposableStore, dispose } from '../../../../base/common/lifecycle.js';\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection } from '../../../common/commands/replaceCommand.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { SearchParams } from '../../../common/model/textModelSearch.js';\nimport { FindDecorations } from './findDecorations.js';\nimport { ReplaceAllCommand } from './replaceAllCommand.js';\nimport { parseReplaceString, ReplacePattern } from './replacePattern.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nexport const CONTEXT_FIND_WIDGET_VISIBLE = new RawContextKey('findWidgetVisible', false);\nexport const CONTEXT_FIND_WIDGET_NOT_VISIBLE = CONTEXT_FIND_WIDGET_VISIBLE.toNegated();\n// Keep ContextKey use of 'Focussed' to not break when clauses\nexport const CONTEXT_FIND_INPUT_FOCUSED = new RawContextKey('findInputFocussed', false);\nexport const CONTEXT_REPLACE_INPUT_FOCUSED = new RawContextKey('replaceInputFocussed', false);\nexport const ToggleCaseSensitiveKeybinding = {\n    primary: 512 /* Alt */ | 33 /* KeyC */,\n    mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 33 /* KeyC */ }\n};\nexport const ToggleWholeWordKeybinding = {\n    primary: 512 /* Alt */ | 53 /* KeyW */,\n    mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 53 /* KeyW */ }\n};\nexport const ToggleRegexKeybinding = {\n    primary: 512 /* Alt */ | 48 /* KeyR */,\n    mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 48 /* KeyR */ }\n};\nexport const ToggleSearchScopeKeybinding = {\n    primary: 512 /* Alt */ | 42 /* KeyL */,\n    mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 42 /* KeyL */ }\n};\nexport const TogglePreserveCaseKeybinding = {\n    primary: 512 /* Alt */ | 46 /* KeyP */,\n    mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 46 /* KeyP */ }\n};\nexport const FIND_IDS = {\n    StartFindAction: 'actions.find',\n    StartFindWithSelection: 'actions.findWithSelection',\n    StartFindWithArgs: 'editor.actions.findWithArgs',\n    NextMatchFindAction: 'editor.action.nextMatchFindAction',\n    PreviousMatchFindAction: 'editor.action.previousMatchFindAction',\n    NextSelectionMatchFindAction: 'editor.action.nextSelectionMatchFindAction',\n    PreviousSelectionMatchFindAction: 'editor.action.previousSelectionMatchFindAction',\n    StartFindReplaceAction: 'editor.action.startFindReplaceAction',\n    CloseFindWidgetCommand: 'closeFindWidget',\n    ToggleCaseSensitiveCommand: 'toggleFindCaseSensitive',\n    ToggleWholeWordCommand: 'toggleFindWholeWord',\n    ToggleRegexCommand: 'toggleFindRegex',\n    ToggleSearchScopeCommand: 'toggleFindInSelection',\n    TogglePreserveCaseCommand: 'togglePreserveCase',\n    ReplaceOneAction: 'editor.action.replaceOne',\n    ReplaceAllAction: 'editor.action.replaceAll',\n    SelectAllMatchesAction: 'editor.action.selectAllMatches'\n};\nexport const MATCHES_LIMIT = 19999;\nconst RESEARCH_DELAY = 240;\nexport class FindModelBoundToEditorModel {\n    constructor(editor, state) {\n        this._toDispose = new DisposableStore();\n        this._editor = editor;\n        this._state = state;\n        this._isDisposed = false;\n        this._startSearchingTimer = new TimeoutTimer();\n        this._decorations = new FindDecorations(editor);\n        this._toDispose.add(this._decorations);\n        this._updateDecorationsScheduler = new RunOnceScheduler(() => this.research(false), 100);\n        this._toDispose.add(this._updateDecorationsScheduler);\n        this._toDispose.add(this._editor.onDidChangeCursorPosition((e) => {\n            if (e.reason === 3 /* Explicit */\n                || e.reason === 5 /* Undo */\n                || e.reason === 6 /* Redo */) {\n                this._decorations.setStartPosition(this._editor.getPosition());\n            }\n        }));\n        this._ignoreModelContentChanged = false;\n        this._toDispose.add(this._editor.onDidChangeModelContent((e) => {\n            if (this._ignoreModelContentChanged) {\n                return;\n            }\n            if (e.isFlush) {\n                // a model.setValue() was called\n                this._decorations.reset();\n            }\n            this._decorations.setStartPosition(this._editor.getPosition());\n            this._updateDecorationsScheduler.schedule();\n        }));\n        this._toDispose.add(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this.research(false, this._state.searchScope);\n    }\n    dispose() {\n        this._isDisposed = true;\n        dispose(this._startSearchingTimer);\n        this._toDispose.dispose();\n    }\n    _onStateChanged(e) {\n        if (this._isDisposed) {\n            // The find model is disposed during a find state changed event\n            return;\n        }\n        if (!this._editor.hasModel()) {\n            // The find model will be disposed momentarily\n            return;\n        }\n        if (e.searchString || e.isReplaceRevealed || e.isRegex || e.wholeWord || e.matchCase || e.searchScope) {\n            let model = this._editor.getModel();\n            if (model.isTooLargeForSyncing()) {\n                this._startSearchingTimer.cancel();\n                this._startSearchingTimer.setIfNotSet(() => {\n                    if (e.searchScope) {\n                        this.research(e.moveCursor, this._state.searchScope);\n                    }\n                    else {\n                        this.research(e.moveCursor);\n                    }\n                }, RESEARCH_DELAY);\n            }\n            else {\n                if (e.searchScope) {\n                    this.research(e.moveCursor, this._state.searchScope);\n                }\n                else {\n                    this.research(e.moveCursor);\n                }\n            }\n        }\n    }\n    static _getSearchRange(model, findScope) {\n        // If we have set now or before a find scope, use it for computing the search range\n        if (findScope) {\n            return findScope;\n        }\n        return model.getFullModelRange();\n    }\n    research(moveCursor, newFindScope) {\n        let findScopes = null;\n        if (typeof newFindScope !== 'undefined') {\n            if (newFindScope !== null) {\n                if (!Array.isArray(newFindScope)) {\n                    findScopes = [newFindScope];\n                }\n                else {\n                    findScopes = newFindScope;\n                }\n            }\n        }\n        else {\n            findScopes = this._decorations.getFindScopes();\n        }\n        if (findScopes !== null) {\n            findScopes = findScopes.map(findScope => {\n                if (findScope.startLineNumber !== findScope.endLineNumber) {\n                    let endLineNumber = findScope.endLineNumber;\n                    if (findScope.endColumn === 1) {\n                        endLineNumber = endLineNumber - 1;\n                    }\n                    return new Range(findScope.startLineNumber, 1, endLineNumber, this._editor.getModel().getLineMaxColumn(endLineNumber));\n                }\n                return findScope;\n            });\n        }\n        let findMatches = this._findMatches(findScopes, false, MATCHES_LIMIT);\n        this._decorations.set(findMatches, findScopes);\n        const editorSelection = this._editor.getSelection();\n        let currentMatchesPosition = this._decorations.getCurrentMatchesPosition(editorSelection);\n        if (currentMatchesPosition === 0 && findMatches.length > 0) {\n            // current selection is not on top of a match\n            // try to find its nearest result from the top of the document\n            const matchAfterSelection = findFirstInSorted(findMatches.map(match => match.range), range => Range.compareRangesUsingStarts(range, editorSelection) >= 0);\n            currentMatchesPosition = matchAfterSelection > 0 ? matchAfterSelection - 1 + 1 /** match position is one based */ : currentMatchesPosition;\n        }\n        this._state.changeMatchInfo(currentMatchesPosition, this._decorations.getCount(), undefined);\n        if (moveCursor && this._editor.getOption(35 /* find */).cursorMoveOnType) {\n            this._moveToNextMatch(this._decorations.getStartPosition());\n        }\n    }\n    _hasMatches() {\n        return (this._state.matchesCount > 0);\n    }\n    _cannotFind() {\n        if (!this._hasMatches()) {\n            let findScope = this._decorations.getFindScope();\n            if (findScope) {\n                // Reveal the selection so user is reminded that 'selection find' is on.\n                this._editor.revealRangeInCenterIfOutsideViewport(findScope, 0 /* Smooth */);\n            }\n            return true;\n        }\n        return false;\n    }\n    _setCurrentFindMatch(match) {\n        let matchesPosition = this._decorations.setCurrentFindMatch(match);\n        this._state.changeMatchInfo(matchesPosition, this._decorations.getCount(), match);\n        this._editor.setSelection(match);\n        this._editor.revealRangeInCenterIfOutsideViewport(match, 0 /* Smooth */);\n    }\n    _prevSearchPosition(before) {\n        let isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0\n            || this._state.searchString.indexOf('$') >= 0);\n        let { lineNumber, column } = before;\n        let model = this._editor.getModel();\n        if (isUsingLineStops || column === 1) {\n            if (lineNumber === 1) {\n                lineNumber = model.getLineCount();\n            }\n            else {\n                lineNumber--;\n            }\n            column = model.getLineMaxColumn(lineNumber);\n        }\n        else {\n            column--;\n        }\n        return new Position(lineNumber, column);\n    }\n    _moveToPrevMatch(before, isRecursed = false) {\n        if (!this._state.canNavigateBack()) {\n            // we are beyond the first matched find result\n            // instead of doing nothing, we should refocus the first item\n            const nextMatchRange = this._decorations.matchAfterPosition(before);\n            if (nextMatchRange) {\n                this._setCurrentFindMatch(nextMatchRange);\n            }\n            return;\n        }\n        if (this._decorations.getCount() < MATCHES_LIMIT) {\n            let prevMatchRange = this._decorations.matchBeforePosition(before);\n            if (prevMatchRange && prevMatchRange.isEmpty() && prevMatchRange.getStartPosition().equals(before)) {\n                before = this._prevSearchPosition(before);\n                prevMatchRange = this._decorations.matchBeforePosition(before);\n            }\n            if (prevMatchRange) {\n                this._setCurrentFindMatch(prevMatchRange);\n            }\n            return;\n        }\n        if (this._cannotFind()) {\n            return;\n        }\n        let findScope = this._decorations.getFindScope();\n        let searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\n        // ...(----)...|...\n        if (searchRange.getEndPosition().isBefore(before)) {\n            before = searchRange.getEndPosition();\n        }\n        // ...|...(----)...\n        if (before.isBefore(searchRange.getStartPosition())) {\n            before = searchRange.getEndPosition();\n        }\n        let { lineNumber, column } = before;\n        let model = this._editor.getModel();\n        let position = new Position(lineNumber, column);\n        let prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(117 /* wordSeparators */) : null, false);\n        if (prevMatch && prevMatch.range.isEmpty() && prevMatch.range.getStartPosition().equals(position)) {\n            // Looks like we're stuck at this position, unacceptable!\n            position = this._prevSearchPosition(position);\n            prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(117 /* wordSeparators */) : null, false);\n        }\n        if (!prevMatch) {\n            // there is precisely one match and selection is on top of it\n            return;\n        }\n        if (!isRecursed && !searchRange.containsRange(prevMatch.range)) {\n            return this._moveToPrevMatch(prevMatch.range.getStartPosition(), true);\n        }\n        this._setCurrentFindMatch(prevMatch.range);\n    }\n    moveToPrevMatch() {\n        this._moveToPrevMatch(this._editor.getSelection().getStartPosition());\n    }\n    _nextSearchPosition(after) {\n        let isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0\n            || this._state.searchString.indexOf('$') >= 0);\n        let { lineNumber, column } = after;\n        let model = this._editor.getModel();\n        if (isUsingLineStops || column === model.getLineMaxColumn(lineNumber)) {\n            if (lineNumber === model.getLineCount()) {\n                lineNumber = 1;\n            }\n            else {\n                lineNumber++;\n            }\n            column = 1;\n        }\n        else {\n            column++;\n        }\n        return new Position(lineNumber, column);\n    }\n    _moveToNextMatch(after) {\n        if (!this._state.canNavigateForward()) {\n            // we are beyond the last matched find result\n            // instead of doing nothing, we should refocus the last item\n            const prevMatchRange = this._decorations.matchBeforePosition(after);\n            if (prevMatchRange) {\n                this._setCurrentFindMatch(prevMatchRange);\n            }\n            return;\n        }\n        if (this._decorations.getCount() < MATCHES_LIMIT) {\n            let nextMatchRange = this._decorations.matchAfterPosition(after);\n            if (nextMatchRange && nextMatchRange.isEmpty() && nextMatchRange.getStartPosition().equals(after)) {\n                // Looks like we're stuck at this position, unacceptable!\n                after = this._nextSearchPosition(after);\n                nextMatchRange = this._decorations.matchAfterPosition(after);\n            }\n            if (nextMatchRange) {\n                this._setCurrentFindMatch(nextMatchRange);\n            }\n            return;\n        }\n        let nextMatch = this._getNextMatch(after, false, true);\n        if (nextMatch) {\n            this._setCurrentFindMatch(nextMatch.range);\n        }\n    }\n    _getNextMatch(after, captureMatches, forceMove, isRecursed = false) {\n        if (this._cannotFind()) {\n            return null;\n        }\n        let findScope = this._decorations.getFindScope();\n        let searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\n        // ...(----)...|...\n        if (searchRange.getEndPosition().isBefore(after)) {\n            after = searchRange.getStartPosition();\n        }\n        // ...|...(----)...\n        if (after.isBefore(searchRange.getStartPosition())) {\n            after = searchRange.getStartPosition();\n        }\n        let { lineNumber, column } = after;\n        let model = this._editor.getModel();\n        let position = new Position(lineNumber, column);\n        let nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(117 /* wordSeparators */) : null, captureMatches);\n        if (forceMove && nextMatch && nextMatch.range.isEmpty() && nextMatch.range.getStartPosition().equals(position)) {\n            // Looks like we're stuck at this position, unacceptable!\n            position = this._nextSearchPosition(position);\n            nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(117 /* wordSeparators */) : null, captureMatches);\n        }\n        if (!nextMatch) {\n            // there is precisely one match and selection is on top of it\n            return null;\n        }\n        if (!isRecursed && !searchRange.containsRange(nextMatch.range)) {\n            return this._getNextMatch(nextMatch.range.getEndPosition(), captureMatches, forceMove, true);\n        }\n        return nextMatch;\n    }\n    moveToNextMatch() {\n        this._moveToNextMatch(this._editor.getSelection().getEndPosition());\n    }\n    _getReplacePattern() {\n        if (this._state.isRegex) {\n            return parseReplaceString(this._state.replaceString);\n        }\n        return ReplacePattern.fromStaticValue(this._state.replaceString);\n    }\n    replace() {\n        if (!this._hasMatches()) {\n            return;\n        }\n        let replacePattern = this._getReplacePattern();\n        let selection = this._editor.getSelection();\n        let nextMatch = this._getNextMatch(selection.getStartPosition(), true, false);\n        if (nextMatch) {\n            if (selection.equalsRange(nextMatch.range)) {\n                // selection sits on a find match => replace it!\n                let replaceString = replacePattern.buildReplaceString(nextMatch.matches, this._state.preserveCase);\n                let command = new ReplaceCommand(selection, replaceString);\n                this._executeEditorCommand('replace', command);\n                this._decorations.setStartPosition(new Position(selection.startLineNumber, selection.startColumn + replaceString.length));\n                this.research(true);\n            }\n            else {\n                this._decorations.setStartPosition(this._editor.getPosition());\n                this._setCurrentFindMatch(nextMatch.range);\n            }\n        }\n    }\n    _findMatches(findScopes, captureMatches, limitResultCount) {\n        const searchRanges = (findScopes || [null]).map((scope) => FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), scope));\n        return this._editor.getModel().findMatches(this._state.searchString, searchRanges, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(117 /* wordSeparators */) : null, captureMatches, limitResultCount);\n    }\n    replaceAll() {\n        if (!this._hasMatches()) {\n            return;\n        }\n        const findScopes = this._decorations.getFindScopes();\n        if (findScopes === null && this._state.matchesCount >= MATCHES_LIMIT) {\n            // Doing a replace on the entire file that is over ${MATCHES_LIMIT} matches\n            this._largeReplaceAll();\n        }\n        else {\n            this._regularReplaceAll(findScopes);\n        }\n        this.research(false);\n    }\n    _largeReplaceAll() {\n        const searchParams = new SearchParams(this._state.searchString, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(117 /* wordSeparators */) : null);\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return;\n        }\n        let searchRegex = searchData.regex;\n        if (!searchRegex.multiline) {\n            let mod = 'mu';\n            if (searchRegex.ignoreCase) {\n                mod += 'i';\n            }\n            if (searchRegex.global) {\n                mod += 'g';\n            }\n            searchRegex = new RegExp(searchRegex.source, mod);\n        }\n        const model = this._editor.getModel();\n        const modelText = model.getValue(1 /* LF */);\n        const fullModelRange = model.getFullModelRange();\n        const replacePattern = this._getReplacePattern();\n        let resultText;\n        const preserveCase = this._state.preserveCase;\n        if (replacePattern.hasReplacementPatterns || preserveCase) {\n            resultText = modelText.replace(searchRegex, function () {\n                return replacePattern.buildReplaceString(arguments, preserveCase);\n            });\n        }\n        else {\n            resultText = modelText.replace(searchRegex, replacePattern.buildReplaceString(null, preserveCase));\n        }\n        let command = new ReplaceCommandThatPreservesSelection(fullModelRange, resultText, this._editor.getSelection());\n        this._executeEditorCommand('replaceAll', command);\n    }\n    _regularReplaceAll(findScopes) {\n        const replacePattern = this._getReplacePattern();\n        // Get all the ranges (even more than the highlighted ones)\n        let matches = this._findMatches(findScopes, replacePattern.hasReplacementPatterns || this._state.preserveCase, 1073741824 /* MAX_SAFE_SMALL_INTEGER */);\n        let replaceStrings = [];\n        for (let i = 0, len = matches.length; i < len; i++) {\n            replaceStrings[i] = replacePattern.buildReplaceString(matches[i].matches, this._state.preserveCase);\n        }\n        let command = new ReplaceAllCommand(this._editor.getSelection(), matches.map(m => m.range), replaceStrings);\n        this._executeEditorCommand('replaceAll', command);\n    }\n    selectAllMatches() {\n        if (!this._hasMatches()) {\n            return;\n        }\n        let findScopes = this._decorations.getFindScopes();\n        // Get all the ranges (even more than the highlighted ones)\n        let matches = this._findMatches(findScopes, false, 1073741824 /* MAX_SAFE_SMALL_INTEGER */);\n        let selections = matches.map(m => new Selection(m.range.startLineNumber, m.range.startColumn, m.range.endLineNumber, m.range.endColumn));\n        // If one of the ranges is the editor selection, then maintain it as primary\n        let editorSelection = this._editor.getSelection();\n        for (let i = 0, len = selections.length; i < len; i++) {\n            let sel = selections[i];\n            if (sel.equalsRange(editorSelection)) {\n                selections = [editorSelection].concat(selections.slice(0, i)).concat(selections.slice(i + 1));\n                break;\n            }\n        }\n        this._editor.setSelections(selections);\n    }\n    _executeEditorCommand(source, command) {\n        try {\n            this._ignoreModelContentChanged = true;\n            this._editor.pushUndoStop();\n            this._editor.executeCommand(source, command);\n            this._editor.pushUndoStop();\n        }\n        finally {\n            this._ignoreModelContentChanged = false;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { CaseSensitiveCheckbox, RegexCheckbox, WholeWordsCheckbox } from '../../../../base/browser/ui/findinput/findInputCheckboxes.js';\nimport { Widget } from '../../../../base/browser/ui/widget.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { FIND_IDS } from './findModel.js';\nimport { contrastBorder, editorWidgetBackground, editorWidgetForeground, inputActiveOptionBackground, inputActiveOptionBorder, inputActiveOptionForeground, widgetShadow } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nexport class FindOptionsWidget extends Widget {\n    constructor(editor, state, keybindingService, themeService) {\n        super();\n        this._hideSoon = this._register(new RunOnceScheduler(() => this._hide(), 2000));\n        this._isVisible = false;\n        this._editor = editor;\n        this._state = state;\n        this._keybindingService = keybindingService;\n        this._domNode = document.createElement('div');\n        this._domNode.className = 'findOptionsWidget';\n        this._domNode.style.display = 'none';\n        this._domNode.style.top = '10px';\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        const inputActiveOptionBorderColor = themeService.getColorTheme().getColor(inputActiveOptionBorder);\n        const inputActiveOptionForegroundColor = themeService.getColorTheme().getColor(inputActiveOptionForeground);\n        const inputActiveOptionBackgroundColor = themeService.getColorTheme().getColor(inputActiveOptionBackground);\n        this.caseSensitive = this._register(new CaseSensitiveCheckbox({\n            appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),\n            isChecked: this._state.matchCase,\n            inputActiveOptionBorder: inputActiveOptionBorderColor,\n            inputActiveOptionForeground: inputActiveOptionForegroundColor,\n            inputActiveOptionBackground: inputActiveOptionBackgroundColor\n        }));\n        this._domNode.appendChild(this.caseSensitive.domNode);\n        this._register(this.caseSensitive.onChange(() => {\n            this._state.change({\n                matchCase: this.caseSensitive.checked\n            }, false);\n        }));\n        this.wholeWords = this._register(new WholeWordsCheckbox({\n            appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),\n            isChecked: this._state.wholeWord,\n            inputActiveOptionBorder: inputActiveOptionBorderColor,\n            inputActiveOptionForeground: inputActiveOptionForegroundColor,\n            inputActiveOptionBackground: inputActiveOptionBackgroundColor\n        }));\n        this._domNode.appendChild(this.wholeWords.domNode);\n        this._register(this.wholeWords.onChange(() => {\n            this._state.change({\n                wholeWord: this.wholeWords.checked\n            }, false);\n        }));\n        this.regex = this._register(new RegexCheckbox({\n            appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),\n            isChecked: this._state.isRegex,\n            inputActiveOptionBorder: inputActiveOptionBorderColor,\n            inputActiveOptionForeground: inputActiveOptionForegroundColor,\n            inputActiveOptionBackground: inputActiveOptionBackgroundColor\n        }));\n        this._domNode.appendChild(this.regex.domNode);\n        this._register(this.regex.onChange(() => {\n            this._state.change({\n                isRegex: this.regex.checked\n            }, false);\n        }));\n        this._editor.addOverlayWidget(this);\n        this._register(this._state.onFindReplaceStateChange((e) => {\n            let somethingChanged = false;\n            if (e.isRegex) {\n                this.regex.checked = this._state.isRegex;\n                somethingChanged = true;\n            }\n            if (e.wholeWord) {\n                this.wholeWords.checked = this._state.wholeWord;\n                somethingChanged = true;\n            }\n            if (e.matchCase) {\n                this.caseSensitive.checked = this._state.matchCase;\n                somethingChanged = true;\n            }\n            if (!this._state.isRevealed && somethingChanged) {\n                this._revealTemporarily();\n            }\n        }));\n        this._register(dom.addDisposableNonBubblingMouseOutListener(this._domNode, (e) => this._onMouseOut()));\n        this._register(dom.addDisposableListener(this._domNode, 'mouseover', (e) => this._onMouseOver()));\n        this._applyTheme(themeService.getColorTheme());\n        this._register(themeService.onDidColorThemeChange(this._applyTheme.bind(this)));\n    }\n    _keybindingLabelFor(actionId) {\n        let kb = this._keybindingService.lookupKeybinding(actionId);\n        if (!kb) {\n            return '';\n        }\n        return ` (${kb.getLabel()})`;\n    }\n    dispose() {\n        this._editor.removeOverlayWidget(this);\n        super.dispose();\n    }\n    // ----- IOverlayWidget API\n    getId() {\n        return FindOptionsWidget.ID;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        return {\n            preference: 0 /* TOP_RIGHT_CORNER */\n        };\n    }\n    highlightFindOptions() {\n        this._revealTemporarily();\n    }\n    _revealTemporarily() {\n        this._show();\n        this._hideSoon.schedule();\n    }\n    _onMouseOut() {\n        this._hideSoon.schedule();\n    }\n    _onMouseOver() {\n        this._hideSoon.cancel();\n    }\n    _show() {\n        if (this._isVisible) {\n            return;\n        }\n        this._isVisible = true;\n        this._domNode.style.display = 'block';\n    }\n    _hide() {\n        if (!this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        this._domNode.style.display = 'none';\n    }\n    _applyTheme(theme) {\n        let inputStyles = {\n            inputActiveOptionBorder: theme.getColor(inputActiveOptionBorder),\n            inputActiveOptionForeground: theme.getColor(inputActiveOptionForeground),\n            inputActiveOptionBackground: theme.getColor(inputActiveOptionBackground)\n        };\n        this.caseSensitive.style(inputStyles);\n        this.wholeWords.style(inputStyles);\n        this.regex.style(inputStyles);\n    }\n}\nFindOptionsWidget.ID = 'editor.contrib.findOptionsWidget';\nregisterThemingParticipant((theme, collector) => {\n    const widgetBackground = theme.getColor(editorWidgetBackground);\n    if (widgetBackground) {\n        collector.addRule(`.monaco-editor .findOptionsWidget { background-color: ${widgetBackground}; }`);\n    }\n    const widgetForeground = theme.getColor(editorWidgetForeground);\n    if (widgetForeground) {\n        collector.addRule(`.monaco-editor .findOptionsWidget { color: ${widgetForeground}; }`);\n    }\n    const widgetShadowColor = theme.getColor(widgetShadow);\n    if (widgetShadowColor) {\n        collector.addRule(`.monaco-editor .findOptionsWidget { box-shadow: 0 0 8px 2px ${widgetShadowColor}; }`);\n    }\n    const hcBorder = theme.getColor(contrastBorder);\n    if (hcBorder) {\n        collector.addRule(`.monaco-editor .findOptionsWidget { border: 2px solid ${hcBorder}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Range } from '../../../common/core/range.js';\nimport { MATCHES_LIMIT } from './findModel.js';\nfunction effectiveOptionValue(override, value) {\n    if (override === 1 /* True */) {\n        return true;\n    }\n    if (override === 2 /* False */) {\n        return false;\n    }\n    return value;\n}\nexport class FindReplaceState extends Disposable {\n    constructor() {\n        super();\n        this._onFindReplaceStateChange = this._register(new Emitter());\n        this.onFindReplaceStateChange = this._onFindReplaceStateChange.event;\n        this._searchString = '';\n        this._replaceString = '';\n        this._isRevealed = false;\n        this._isReplaceRevealed = false;\n        this._isRegex = false;\n        this._isRegexOverride = 0 /* NotSet */;\n        this._wholeWord = false;\n        this._wholeWordOverride = 0 /* NotSet */;\n        this._matchCase = false;\n        this._matchCaseOverride = 0 /* NotSet */;\n        this._preserveCase = false;\n        this._preserveCaseOverride = 0 /* NotSet */;\n        this._searchScope = null;\n        this._matchesPosition = 0;\n        this._matchesCount = 0;\n        this._currentMatch = null;\n        this._loop = true;\n        this._isSearching = false;\n        this._filters = null;\n    }\n    get searchString() { return this._searchString; }\n    get replaceString() { return this._replaceString; }\n    get isRevealed() { return this._isRevealed; }\n    get isReplaceRevealed() { return this._isReplaceRevealed; }\n    get isRegex() { return effectiveOptionValue(this._isRegexOverride, this._isRegex); }\n    get wholeWord() { return effectiveOptionValue(this._wholeWordOverride, this._wholeWord); }\n    get matchCase() { return effectiveOptionValue(this._matchCaseOverride, this._matchCase); }\n    get preserveCase() { return effectiveOptionValue(this._preserveCaseOverride, this._preserveCase); }\n    get actualIsRegex() { return this._isRegex; }\n    get actualWholeWord() { return this._wholeWord; }\n    get actualMatchCase() { return this._matchCase; }\n    get actualPreserveCase() { return this._preserveCase; }\n    get searchScope() { return this._searchScope; }\n    get matchesPosition() { return this._matchesPosition; }\n    get matchesCount() { return this._matchesCount; }\n    get currentMatch() { return this._currentMatch; }\n    changeMatchInfo(matchesPosition, matchesCount, currentMatch) {\n        let changeEvent = {\n            moveCursor: false,\n            updateHistory: false,\n            searchString: false,\n            replaceString: false,\n            isRevealed: false,\n            isReplaceRevealed: false,\n            isRegex: false,\n            wholeWord: false,\n            matchCase: false,\n            preserveCase: false,\n            searchScope: false,\n            matchesPosition: false,\n            matchesCount: false,\n            currentMatch: false,\n            loop: false,\n            isSearching: false,\n            filters: false\n        };\n        let somethingChanged = false;\n        if (matchesCount === 0) {\n            matchesPosition = 0;\n        }\n        if (matchesPosition > matchesCount) {\n            matchesPosition = matchesCount;\n        }\n        if (this._matchesPosition !== matchesPosition) {\n            this._matchesPosition = matchesPosition;\n            changeEvent.matchesPosition = true;\n            somethingChanged = true;\n        }\n        if (this._matchesCount !== matchesCount) {\n            this._matchesCount = matchesCount;\n            changeEvent.matchesCount = true;\n            somethingChanged = true;\n        }\n        if (typeof currentMatch !== 'undefined') {\n            if (!Range.equalsRange(this._currentMatch, currentMatch)) {\n                this._currentMatch = currentMatch;\n                changeEvent.currentMatch = true;\n                somethingChanged = true;\n            }\n        }\n        if (somethingChanged) {\n            this._onFindReplaceStateChange.fire(changeEvent);\n        }\n    }\n    change(newState, moveCursor, updateHistory = true) {\n        var _a;\n        let changeEvent = {\n            moveCursor: moveCursor,\n            updateHistory: updateHistory,\n            searchString: false,\n            replaceString: false,\n            isRevealed: false,\n            isReplaceRevealed: false,\n            isRegex: false,\n            wholeWord: false,\n            matchCase: false,\n            preserveCase: false,\n            searchScope: false,\n            matchesPosition: false,\n            matchesCount: false,\n            currentMatch: false,\n            loop: false,\n            isSearching: false,\n            filters: false\n        };\n        let somethingChanged = false;\n        const oldEffectiveIsRegex = this.isRegex;\n        const oldEffectiveWholeWords = this.wholeWord;\n        const oldEffectiveMatchCase = this.matchCase;\n        const oldEffectivePreserveCase = this.preserveCase;\n        if (typeof newState.searchString !== 'undefined') {\n            if (this._searchString !== newState.searchString) {\n                this._searchString = newState.searchString;\n                changeEvent.searchString = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.replaceString !== 'undefined') {\n            if (this._replaceString !== newState.replaceString) {\n                this._replaceString = newState.replaceString;\n                changeEvent.replaceString = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isRevealed !== 'undefined') {\n            if (this._isRevealed !== newState.isRevealed) {\n                this._isRevealed = newState.isRevealed;\n                changeEvent.isRevealed = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isReplaceRevealed !== 'undefined') {\n            if (this._isReplaceRevealed !== newState.isReplaceRevealed) {\n                this._isReplaceRevealed = newState.isReplaceRevealed;\n                changeEvent.isReplaceRevealed = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isRegex !== 'undefined') {\n            this._isRegex = newState.isRegex;\n        }\n        if (typeof newState.wholeWord !== 'undefined') {\n            this._wholeWord = newState.wholeWord;\n        }\n        if (typeof newState.matchCase !== 'undefined') {\n            this._matchCase = newState.matchCase;\n        }\n        if (typeof newState.preserveCase !== 'undefined') {\n            this._preserveCase = newState.preserveCase;\n        }\n        if (typeof newState.searchScope !== 'undefined') {\n            if (!((_a = newState.searchScope) === null || _a === void 0 ? void 0 : _a.every((newSearchScope) => {\n                var _a;\n                return (_a = this._searchScope) === null || _a === void 0 ? void 0 : _a.some(existingSearchScope => {\n                    return !Range.equalsRange(existingSearchScope, newSearchScope);\n                });\n            }))) {\n                this._searchScope = newState.searchScope;\n                changeEvent.searchScope = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.loop !== 'undefined') {\n            if (this._loop !== newState.loop) {\n                this._loop = newState.loop;\n                changeEvent.loop = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isSearching !== 'undefined') {\n            if (this._isSearching !== newState.isSearching) {\n                this._isSearching = newState.isSearching;\n                changeEvent.isSearching = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.filters !== 'undefined') {\n            if (this._filters) {\n                this._filters.update(newState.filters);\n            }\n            else {\n                this._filters = newState.filters;\n            }\n            changeEvent.filters = true;\n            somethingChanged = true;\n        }\n        // Overrides get set when they explicitly come in and get reset anytime something else changes\n        this._isRegexOverride = (typeof newState.isRegexOverride !== 'undefined' ? newState.isRegexOverride : 0 /* NotSet */);\n        this._wholeWordOverride = (typeof newState.wholeWordOverride !== 'undefined' ? newState.wholeWordOverride : 0 /* NotSet */);\n        this._matchCaseOverride = (typeof newState.matchCaseOverride !== 'undefined' ? newState.matchCaseOverride : 0 /* NotSet */);\n        this._preserveCaseOverride = (typeof newState.preserveCaseOverride !== 'undefined' ? newState.preserveCaseOverride : 0 /* NotSet */);\n        if (oldEffectiveIsRegex !== this.isRegex) {\n            somethingChanged = true;\n            changeEvent.isRegex = true;\n        }\n        if (oldEffectiveWholeWords !== this.wholeWord) {\n            somethingChanged = true;\n            changeEvent.wholeWord = true;\n        }\n        if (oldEffectiveMatchCase !== this.matchCase) {\n            somethingChanged = true;\n            changeEvent.matchCase = true;\n        }\n        if (oldEffectivePreserveCase !== this.preserveCase) {\n            somethingChanged = true;\n            changeEvent.preserveCase = true;\n        }\n        if (somethingChanged) {\n            this._onFindReplaceStateChange.fire(changeEvent);\n        }\n    }\n    canNavigateBack() {\n        return this.canNavigateInLoop() || (this.matchesPosition !== 1);\n    }\n    canNavigateForward() {\n        return this.canNavigateInLoop() || (this.matchesPosition < this.matchesCount);\n    }\n    canNavigateInLoop() {\n        return this._loop || (this.matchesCount >= MATCHES_LIMIT);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { alert as alertFn } from '../../../../base/browser/ui/aria/aria.js';\nimport { Checkbox } from '../../../../base/browser/ui/checkbox/checkbox.js';\nimport { Sash } from '../../../../base/browser/ui/sash/sash.js';\nimport { Widget } from '../../../../base/browser/ui/widget.js';\nimport { Delayer } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './findWidget.css';\nimport { Range } from '../../../common/core/range.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_REPLACE_INPUT_FOCUSED, FIND_IDS, MATCHES_LIMIT } from './findModel.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextScopedFindInput, ContextScopedReplaceInput } from '../../../../platform/history/browser/contextScopedHistoryWidget.js';\nimport { showHistoryKeybindingHint } from '../../../../platform/history/browser/historyWidgetKeybindingHint.js';\nimport { contrastBorder, editorFindMatch, editorFindMatchBorder, editorFindMatchHighlight, editorFindMatchHighlightBorder, editorFindRangeHighlight, editorFindRangeHighlightBorder, editorWidgetBackground, editorWidgetBorder, editorWidgetForeground, editorWidgetResizeBorder, errorForeground, focusBorder, inputActiveOptionBackground, inputActiveOptionBorder, inputActiveOptionForeground, inputBackground, inputBorder, inputForeground, inputValidationErrorBackground, inputValidationErrorBorder, inputValidationErrorForeground, inputValidationInfoBackground, inputValidationInfoBorder, inputValidationInfoForeground, inputValidationWarningBackground, inputValidationWarningBorder, inputValidationWarningForeground, toolbarHoverBackground, widgetShadow } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerIcon, widgetClose } from '../../../../platform/theme/common/iconRegistry.js';\nimport { registerThemingParticipant, ThemeIcon } from '../../../../platform/theme/common/themeService.js';\nconst findSelectionIcon = registerIcon('find-selection', Codicon.selection, nls.localize('findSelectionIcon', 'Icon for \\'Find in Selection\\' in the editor find widget.'));\nconst findCollapsedIcon = registerIcon('find-collapsed', Codicon.chevronRight, nls.localize('findCollapsedIcon', 'Icon to indicate that the editor find widget is collapsed.'));\nconst findExpandedIcon = registerIcon('find-expanded', Codicon.chevronDown, nls.localize('findExpandedIcon', 'Icon to indicate that the editor find widget is expanded.'));\nexport const findReplaceIcon = registerIcon('find-replace', Codicon.replace, nls.localize('findReplaceIcon', 'Icon for \\'Replace\\' in the editor find widget.'));\nexport const findReplaceAllIcon = registerIcon('find-replace-all', Codicon.replaceAll, nls.localize('findReplaceAllIcon', 'Icon for \\'Replace All\\' in the editor find widget.'));\nexport const findPreviousMatchIcon = registerIcon('find-previous-match', Codicon.arrowUp, nls.localize('findPreviousMatchIcon', 'Icon for \\'Find Previous\\' in the editor find widget.'));\nexport const findNextMatchIcon = registerIcon('find-next-match', Codicon.arrowDown, nls.localize('findNextMatchIcon', 'Icon for \\'Find Next\\' in the editor find widget.'));\nconst NLS_FIND_INPUT_LABEL = nls.localize('label.find', \"Find\");\nconst NLS_FIND_INPUT_PLACEHOLDER = nls.localize('placeholder.find', \"Find\");\nconst NLS_PREVIOUS_MATCH_BTN_LABEL = nls.localize('label.previousMatchButton', \"Previous Match\");\nconst NLS_NEXT_MATCH_BTN_LABEL = nls.localize('label.nextMatchButton', \"Next Match\");\nconst NLS_TOGGLE_SELECTION_FIND_TITLE = nls.localize('label.toggleSelectionFind', \"Find in Selection\");\nconst NLS_CLOSE_BTN_LABEL = nls.localize('label.closeButton', \"Close\");\nconst NLS_REPLACE_INPUT_LABEL = nls.localize('label.replace', \"Replace\");\nconst NLS_REPLACE_INPUT_PLACEHOLDER = nls.localize('placeholder.replace', \"Replace\");\nconst NLS_REPLACE_BTN_LABEL = nls.localize('label.replaceButton', \"Replace\");\nconst NLS_REPLACE_ALL_BTN_LABEL = nls.localize('label.replaceAllButton', \"Replace All\");\nconst NLS_TOGGLE_REPLACE_MODE_BTN_LABEL = nls.localize('label.toggleReplaceButton', \"Toggle Replace\");\nconst NLS_MATCHES_COUNT_LIMIT_TITLE = nls.localize('title.matchesCountLimit', \"Only the first {0} results are highlighted, but all find operations work on the entire text.\", MATCHES_LIMIT);\nexport const NLS_MATCHES_LOCATION = nls.localize('label.matchesLocation', \"{0} of {1}\");\nexport const NLS_NO_RESULTS = nls.localize('label.noResults', \"No results\");\nconst FIND_WIDGET_INITIAL_WIDTH = 419;\nconst PART_WIDTH = 275;\nconst FIND_INPUT_AREA_WIDTH = PART_WIDTH - 54;\nlet MAX_MATCHES_COUNT_WIDTH = 69;\n// let FIND_ALL_CONTROLS_WIDTH = 17/** Find Input margin-left */ + (MAX_MATCHES_COUNT_WIDTH + 3 + 1) /** Match Results */ + 23 /** Button */ * 4 + 2/** sash */;\nconst FIND_INPUT_AREA_HEIGHT = 33; // The height of Find Widget when Replace Input is not visible.\nconst ctrlEnterReplaceAllWarningPromptedKey = 'ctrlEnterReplaceAll.windows.donotask';\nconst ctrlKeyMod = (platform.isMacintosh ? 256 /* WinCtrl */ : 2048 /* CtrlCmd */);\nexport class FindWidgetViewZone {\n    constructor(afterLineNumber) {\n        this.afterLineNumber = afterLineNumber;\n        this.heightInPx = FIND_INPUT_AREA_HEIGHT;\n        this.suppressMouseDown = false;\n        this.domNode = document.createElement('div');\n        this.domNode.className = 'dock-find-viewzone';\n    }\n}\nfunction stopPropagationForMultiLineUpwards(event, value, textarea) {\n    const isMultiline = !!value.match(/\\n/);\n    if (textarea && isMultiline && textarea.selectionStart > 0) {\n        event.stopPropagation();\n        return;\n    }\n}\nfunction stopPropagationForMultiLineDownwards(event, value, textarea) {\n    const isMultiline = !!value.match(/\\n/);\n    if (textarea && isMultiline && textarea.selectionEnd < textarea.value.length) {\n        event.stopPropagation();\n        return;\n    }\n}\nexport class FindWidget extends Widget {\n    constructor(codeEditor, controller, state, contextViewProvider, keybindingService, contextKeyService, themeService, storageService, notificationService) {\n        super();\n        this._cachedHeight = null;\n        this._revealTimeouts = [];\n        this._codeEditor = codeEditor;\n        this._controller = controller;\n        this._state = state;\n        this._contextViewProvider = contextViewProvider;\n        this._keybindingService = keybindingService;\n        this._contextKeyService = contextKeyService;\n        this._storageService = storageService;\n        this._notificationService = notificationService;\n        this._ctrlEnterReplaceAllWarningPrompted = !!storageService.getBoolean(ctrlEnterReplaceAllWarningPromptedKey, 0 /* GLOBAL */);\n        this._isVisible = false;\n        this._isReplaceVisible = false;\n        this._ignoreChangeEvent = false;\n        this._updateHistoryDelayer = new Delayer(500);\n        this._register(toDisposable(() => this._updateHistoryDelayer.cancel()));\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this._buildDomNode();\n        this._updateButtons();\n        this._tryUpdateWidgetWidth();\n        this._findInput.inputBox.layout();\n        this._register(this._codeEditor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(81 /* readOnly */)) {\n                if (this._codeEditor.getOption(81 /* readOnly */)) {\n                    // Hide replace part if editor becomes read only\n                    this._state.change({ isReplaceRevealed: false }, false);\n                }\n                this._updateButtons();\n            }\n            if (e.hasChanged(131 /* layoutInfo */)) {\n                this._tryUpdateWidgetWidth();\n            }\n            if (e.hasChanged(2 /* accessibilitySupport */)) {\n                this.updateAccessibilitySupport();\n            }\n            if (e.hasChanged(35 /* find */)) {\n                const addExtraSpaceOnTop = this._codeEditor.getOption(35 /* find */).addExtraSpaceOnTop;\n                if (addExtraSpaceOnTop && !this._viewZone) {\n                    this._viewZone = new FindWidgetViewZone(0);\n                    this._showViewZone();\n                }\n                if (!addExtraSpaceOnTop && this._viewZone) {\n                    this._removeViewZone();\n                }\n            }\n        }));\n        this.updateAccessibilitySupport();\n        this._register(this._codeEditor.onDidChangeCursorSelection(() => {\n            if (this._isVisible) {\n                this._updateToggleSelectionFindButton();\n            }\n        }));\n        this._register(this._codeEditor.onDidFocusEditorWidget(() => __awaiter(this, void 0, void 0, function* () {\n            if (this._isVisible) {\n                let globalBufferTerm = yield this._controller.getGlobalBufferTerm();\n                if (globalBufferTerm && globalBufferTerm !== this._state.searchString) {\n                    this._state.change({ searchString: globalBufferTerm }, false);\n                    this._findInput.select();\n                }\n            }\n        })));\n        this._findInputFocused = CONTEXT_FIND_INPUT_FOCUSED.bindTo(contextKeyService);\n        this._findFocusTracker = this._register(dom.trackFocus(this._findInput.inputBox.inputElement));\n        this._register(this._findFocusTracker.onDidFocus(() => {\n            this._findInputFocused.set(true);\n            this._updateSearchScope();\n        }));\n        this._register(this._findFocusTracker.onDidBlur(() => {\n            this._findInputFocused.set(false);\n        }));\n        this._replaceInputFocused = CONTEXT_REPLACE_INPUT_FOCUSED.bindTo(contextKeyService);\n        this._replaceFocusTracker = this._register(dom.trackFocus(this._replaceInput.inputBox.inputElement));\n        this._register(this._replaceFocusTracker.onDidFocus(() => {\n            this._replaceInputFocused.set(true);\n            this._updateSearchScope();\n        }));\n        this._register(this._replaceFocusTracker.onDidBlur(() => {\n            this._replaceInputFocused.set(false);\n        }));\n        this._codeEditor.addOverlayWidget(this);\n        if (this._codeEditor.getOption(35 /* find */).addExtraSpaceOnTop) {\n            this._viewZone = new FindWidgetViewZone(0); // Put it before the first line then users can scroll beyond the first line.\n        }\n        this._applyTheme(themeService.getColorTheme());\n        this._register(themeService.onDidColorThemeChange(this._applyTheme.bind(this)));\n        this._register(this._codeEditor.onDidChangeModel(() => {\n            if (!this._isVisible) {\n                return;\n            }\n            this._viewZoneId = undefined;\n        }));\n        this._register(this._codeEditor.onDidScrollChange((e) => {\n            if (e.scrollTopChanged) {\n                this._layoutViewZone();\n                return;\n            }\n            // for other scroll changes, layout the viewzone in next tick to avoid ruining current rendering.\n            setTimeout(() => {\n                this._layoutViewZone();\n            }, 0);\n        }));\n    }\n    // ----- IOverlayWidget API\n    getId() {\n        return FindWidget.ID;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        if (this._isVisible) {\n            return {\n                preference: 0 /* TOP_RIGHT_CORNER */\n            };\n        }\n        return null;\n    }\n    // ----- React to state changes\n    _onStateChanged(e) {\n        if (e.searchString) {\n            try {\n                this._ignoreChangeEvent = true;\n                this._findInput.setValue(this._state.searchString);\n            }\n            finally {\n                this._ignoreChangeEvent = false;\n            }\n            this._updateButtons();\n        }\n        if (e.replaceString) {\n            this._replaceInput.inputBox.value = this._state.replaceString;\n        }\n        if (e.isRevealed) {\n            if (this._state.isRevealed) {\n                this._reveal();\n            }\n            else {\n                this._hide(true);\n            }\n        }\n        if (e.isReplaceRevealed) {\n            if (this._state.isReplaceRevealed) {\n                if (!this._codeEditor.getOption(81 /* readOnly */) && !this._isReplaceVisible) {\n                    this._isReplaceVisible = true;\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                    this._updateButtons();\n                    this._replaceInput.inputBox.layout();\n                }\n            }\n            else {\n                if (this._isReplaceVisible) {\n                    this._isReplaceVisible = false;\n                    this._updateButtons();\n                }\n            }\n        }\n        if ((e.isRevealed || e.isReplaceRevealed) && (this._state.isRevealed || this._state.isReplaceRevealed)) {\n            if (this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }\n        if (e.isRegex) {\n            this._findInput.setRegex(this._state.isRegex);\n        }\n        if (e.wholeWord) {\n            this._findInput.setWholeWords(this._state.wholeWord);\n        }\n        if (e.matchCase) {\n            this._findInput.setCaseSensitive(this._state.matchCase);\n        }\n        if (e.preserveCase) {\n            this._replaceInput.setPreserveCase(this._state.preserveCase);\n        }\n        if (e.searchScope) {\n            if (this._state.searchScope) {\n                this._toggleSelectionFind.checked = true;\n            }\n            else {\n                this._toggleSelectionFind.checked = false;\n            }\n            this._updateToggleSelectionFindButton();\n        }\n        if (e.searchString || e.matchesCount || e.matchesPosition) {\n            let showRedOutline = (this._state.searchString.length > 0 && this._state.matchesCount === 0);\n            this._domNode.classList.toggle('no-results', showRedOutline);\n            this._updateMatchesCount();\n            this._updateButtons();\n        }\n        if (e.searchString || e.currentMatch) {\n            this._layoutViewZone();\n        }\n        if (e.updateHistory) {\n            this._delayedUpdateHistory();\n        }\n        if (e.loop) {\n            this._updateButtons();\n        }\n    }\n    _delayedUpdateHistory() {\n        this._updateHistoryDelayer.trigger(this._updateHistory.bind(this)).then(undefined, onUnexpectedError);\n    }\n    _updateHistory() {\n        if (this._state.searchString) {\n            this._findInput.inputBox.addToHistory();\n        }\n        if (this._state.replaceString) {\n            this._replaceInput.inputBox.addToHistory();\n        }\n    }\n    _updateMatchesCount() {\n        this._matchesCount.style.minWidth = MAX_MATCHES_COUNT_WIDTH + 'px';\n        if (this._state.matchesCount >= MATCHES_LIMIT) {\n            this._matchesCount.title = NLS_MATCHES_COUNT_LIMIT_TITLE;\n        }\n        else {\n            this._matchesCount.title = '';\n        }\n        // remove previous content\n        if (this._matchesCount.firstChild) {\n            this._matchesCount.removeChild(this._matchesCount.firstChild);\n        }\n        let label;\n        if (this._state.matchesCount > 0) {\n            let matchesCount = String(this._state.matchesCount);\n            if (this._state.matchesCount >= MATCHES_LIMIT) {\n                matchesCount += '+';\n            }\n            let matchesPosition = String(this._state.matchesPosition);\n            if (matchesPosition === '0') {\n                matchesPosition = '?';\n            }\n            label = strings.format(NLS_MATCHES_LOCATION, matchesPosition, matchesCount);\n        }\n        else {\n            label = NLS_NO_RESULTS;\n        }\n        this._matchesCount.appendChild(document.createTextNode(label));\n        alertFn(this._getAriaLabel(label, this._state.currentMatch, this._state.searchString));\n        MAX_MATCHES_COUNT_WIDTH = Math.max(MAX_MATCHES_COUNT_WIDTH, this._matchesCount.clientWidth);\n    }\n    // ----- actions\n    _getAriaLabel(label, currentMatch, searchString) {\n        if (label === NLS_NO_RESULTS) {\n            return searchString === ''\n                ? nls.localize('ariaSearchNoResultEmpty', \"{0} found\", label)\n                : nls.localize('ariaSearchNoResult', \"{0} found for '{1}'\", label, searchString);\n        }\n        if (currentMatch) {\n            const ariaLabel = nls.localize('ariaSearchNoResultWithLineNum', \"{0} found for '{1}', at {2}\", label, searchString, currentMatch.startLineNumber + ':' + currentMatch.startColumn);\n            const model = this._codeEditor.getModel();\n            if (model && (currentMatch.startLineNumber <= model.getLineCount()) && (currentMatch.startLineNumber >= 1)) {\n                const lineContent = model.getLineContent(currentMatch.startLineNumber);\n                return `${lineContent}, ${ariaLabel}`;\n            }\n            return ariaLabel;\n        }\n        return nls.localize('ariaSearchNoResultWithLineNumNoCurrentMatch', \"{0} found for '{1}'\", label, searchString);\n    }\n    /**\n     * If 'selection find' is ON we should not disable the button (its function is to cancel 'selection find').\n     * If 'selection find' is OFF we enable the button only if there is a selection.\n     */\n    _updateToggleSelectionFindButton() {\n        let selection = this._codeEditor.getSelection();\n        let isSelection = selection ? (selection.startLineNumber !== selection.endLineNumber || selection.startColumn !== selection.endColumn) : false;\n        let isChecked = this._toggleSelectionFind.checked;\n        if (this._isVisible && (isChecked || isSelection)) {\n            this._toggleSelectionFind.enable();\n        }\n        else {\n            this._toggleSelectionFind.disable();\n        }\n    }\n    _updateButtons() {\n        this._findInput.setEnabled(this._isVisible);\n        this._replaceInput.setEnabled(this._isVisible && this._isReplaceVisible);\n        this._updateToggleSelectionFindButton();\n        this._closeBtn.setEnabled(this._isVisible);\n        let findInputIsNonEmpty = (this._state.searchString.length > 0);\n        let matchesCount = this._state.matchesCount ? true : false;\n        this._prevBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateBack());\n        this._nextBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateForward());\n        this._replaceBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n        this._replaceAllBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n        this._domNode.classList.toggle('replaceToggled', this._isReplaceVisible);\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\n        let canReplace = !this._codeEditor.getOption(81 /* readOnly */);\n        this._toggleReplaceBtn.setEnabled(this._isVisible && canReplace);\n    }\n    _reveal() {\n        this._revealTimeouts.forEach(e => {\n            clearTimeout(e);\n        });\n        this._revealTimeouts = [];\n        if (!this._isVisible) {\n            this._isVisible = true;\n            const selection = this._codeEditor.getSelection();\n            switch (this._codeEditor.getOption(35 /* find */).autoFindInSelection) {\n                case 'always':\n                    this._toggleSelectionFind.checked = true;\n                    break;\n                case 'never':\n                    this._toggleSelectionFind.checked = false;\n                    break;\n                case 'multiline': {\n                    const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n                    this._toggleSelectionFind.checked = isSelectionMultipleLine;\n                    break;\n                }\n                default:\n                    break;\n            }\n            this._tryUpdateWidgetWidth();\n            this._updateButtons();\n            this._revealTimeouts.push(setTimeout(() => {\n                this._domNode.classList.add('visible');\n                this._domNode.setAttribute('aria-hidden', 'false');\n            }, 0));\n            // validate query again as it's being dismissed when we hide the find widget.\n            this._revealTimeouts.push(setTimeout(() => {\n                this._findInput.validate();\n            }, 200));\n            this._codeEditor.layoutOverlayWidget(this);\n            let adjustEditorScrollTop = true;\n            if (this._codeEditor.getOption(35 /* find */).seedSearchStringFromSelection && selection) {\n                const domNode = this._codeEditor.getDomNode();\n                if (domNode) {\n                    const editorCoords = dom.getDomNodePagePosition(domNode);\n                    const startCoords = this._codeEditor.getScrolledVisiblePosition(selection.getStartPosition());\n                    const startLeft = editorCoords.left + (startCoords ? startCoords.left : 0);\n                    const startTop = startCoords ? startCoords.top : 0;\n                    if (this._viewZone && startTop < this._viewZone.heightInPx) {\n                        if (selection.endLineNumber > selection.startLineNumber) {\n                            adjustEditorScrollTop = false;\n                        }\n                        const leftOfFindWidget = dom.getTopLeftOffset(this._domNode).left;\n                        if (startLeft > leftOfFindWidget) {\n                            adjustEditorScrollTop = false;\n                        }\n                        const endCoords = this._codeEditor.getScrolledVisiblePosition(selection.getEndPosition());\n                        const endLeft = editorCoords.left + (endCoords ? endCoords.left : 0);\n                        if (endLeft > leftOfFindWidget) {\n                            adjustEditorScrollTop = false;\n                        }\n                    }\n                }\n            }\n            this._showViewZone(adjustEditorScrollTop);\n        }\n    }\n    _hide(focusTheEditor) {\n        this._revealTimeouts.forEach(e => {\n            clearTimeout(e);\n        });\n        this._revealTimeouts = [];\n        if (this._isVisible) {\n            this._isVisible = false;\n            this._updateButtons();\n            this._domNode.classList.remove('visible');\n            this._domNode.setAttribute('aria-hidden', 'true');\n            this._findInput.clearMessage();\n            if (focusTheEditor) {\n                this._codeEditor.focus();\n            }\n            this._codeEditor.layoutOverlayWidget(this);\n            this._removeViewZone();\n        }\n    }\n    _layoutViewZone(targetScrollTop) {\n        const addExtraSpaceOnTop = this._codeEditor.getOption(35 /* find */).addExtraSpaceOnTop;\n        if (!addExtraSpaceOnTop) {\n            this._removeViewZone();\n            return;\n        }\n        if (!this._isVisible) {\n            return;\n        }\n        const viewZone = this._viewZone;\n        if (this._viewZoneId !== undefined || !viewZone) {\n            return;\n        }\n        this._codeEditor.changeViewZones((accessor) => {\n            viewZone.heightInPx = this._getHeight();\n            this._viewZoneId = accessor.addZone(viewZone);\n            // scroll top adjust to make sure the editor doesn't scroll when adding viewzone at the beginning.\n            this._codeEditor.setScrollTop(targetScrollTop || this._codeEditor.getScrollTop() + viewZone.heightInPx);\n        });\n    }\n    _showViewZone(adjustScroll = true) {\n        if (!this._isVisible) {\n            return;\n        }\n        const addExtraSpaceOnTop = this._codeEditor.getOption(35 /* find */).addExtraSpaceOnTop;\n        if (!addExtraSpaceOnTop) {\n            return;\n        }\n        if (this._viewZone === undefined) {\n            this._viewZone = new FindWidgetViewZone(0);\n        }\n        const viewZone = this._viewZone;\n        this._codeEditor.changeViewZones((accessor) => {\n            if (this._viewZoneId !== undefined) {\n                // the view zone already exists, we need to update the height\n                const newHeight = this._getHeight();\n                if (newHeight === viewZone.heightInPx) {\n                    return;\n                }\n                let scrollAdjustment = newHeight - viewZone.heightInPx;\n                viewZone.heightInPx = newHeight;\n                accessor.layoutZone(this._viewZoneId);\n                if (adjustScroll) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n                }\n                return;\n            }\n            else {\n                let scrollAdjustment = this._getHeight();\n                // if the editor has top padding, factor that into the zone height\n                scrollAdjustment -= this._codeEditor.getOption(75 /* padding */).top;\n                if (scrollAdjustment <= 0) {\n                    return;\n                }\n                viewZone.heightInPx = scrollAdjustment;\n                this._viewZoneId = accessor.addZone(viewZone);\n                if (adjustScroll) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n                }\n            }\n        });\n    }\n    _removeViewZone() {\n        this._codeEditor.changeViewZones((accessor) => {\n            if (this._viewZoneId !== undefined) {\n                accessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n                if (this._viewZone) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() - this._viewZone.heightInPx);\n                    this._viewZone = undefined;\n                }\n            }\n        });\n    }\n    _applyTheme(theme) {\n        let inputStyles = {\n            inputActiveOptionBorder: theme.getColor(inputActiveOptionBorder),\n            inputActiveOptionBackground: theme.getColor(inputActiveOptionBackground),\n            inputActiveOptionForeground: theme.getColor(inputActiveOptionForeground),\n            inputBackground: theme.getColor(inputBackground),\n            inputForeground: theme.getColor(inputForeground),\n            inputBorder: theme.getColor(inputBorder),\n            inputValidationInfoBackground: theme.getColor(inputValidationInfoBackground),\n            inputValidationInfoForeground: theme.getColor(inputValidationInfoForeground),\n            inputValidationInfoBorder: theme.getColor(inputValidationInfoBorder),\n            inputValidationWarningBackground: theme.getColor(inputValidationWarningBackground),\n            inputValidationWarningForeground: theme.getColor(inputValidationWarningForeground),\n            inputValidationWarningBorder: theme.getColor(inputValidationWarningBorder),\n            inputValidationErrorBackground: theme.getColor(inputValidationErrorBackground),\n            inputValidationErrorForeground: theme.getColor(inputValidationErrorForeground),\n            inputValidationErrorBorder: theme.getColor(inputValidationErrorBorder),\n        };\n        this._findInput.style(inputStyles);\n        this._replaceInput.style(inputStyles);\n        this._toggleSelectionFind.style(inputStyles);\n    }\n    _tryUpdateWidgetWidth() {\n        if (!this._isVisible) {\n            return;\n        }\n        if (!dom.isInDOM(this._domNode)) {\n            // the widget is not in the DOM\n            return;\n        }\n        const layoutInfo = this._codeEditor.getLayoutInfo();\n        const editorContentWidth = layoutInfo.contentWidth;\n        if (editorContentWidth <= 0) {\n            // for example, diff view original editor\n            this._domNode.classList.add('hiddenEditor');\n            return;\n        }\n        else if (this._domNode.classList.contains('hiddenEditor')) {\n            this._domNode.classList.remove('hiddenEditor');\n        }\n        const editorWidth = layoutInfo.width;\n        const minimapWidth = layoutInfo.minimap.minimapWidth;\n        let collapsedFindWidget = false;\n        let reducedFindWidget = false;\n        let narrowFindWidget = false;\n        if (this._resized) {\n            let widgetWidth = dom.getTotalWidth(this._domNode);\n            if (widgetWidth > FIND_WIDGET_INITIAL_WIDTH) {\n                // as the widget is resized by users, we may need to change the max width of the widget as the editor width changes.\n                this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                return;\n            }\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth >= editorWidth) {\n            reducedFindWidget = true;\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth) {\n            narrowFindWidget = true;\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth + 50) {\n            collapsedFindWidget = true;\n        }\n        this._domNode.classList.toggle('collapsed-find-widget', collapsedFindWidget);\n        this._domNode.classList.toggle('narrow-find-widget', narrowFindWidget);\n        this._domNode.classList.toggle('reduced-find-widget', reducedFindWidget);\n        if (!narrowFindWidget && !collapsedFindWidget) {\n            // the minimal left offset of findwidget is 15px.\n            this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\n        }\n        if (this._resized) {\n            this._findInput.inputBox.layout();\n            let findInputWidth = this._findInput.inputBox.element.clientWidth;\n            if (findInputWidth > 0) {\n                this._replaceInput.width = findInputWidth;\n            }\n        }\n        else if (this._isReplaceVisible) {\n            this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n        }\n    }\n    _getHeight() {\n        let totalheight = 0;\n        // find input margin top\n        totalheight += 4;\n        // find input height\n        totalheight += this._findInput.inputBox.height + 2 /** input box border */;\n        if (this._isReplaceVisible) {\n            // replace input margin\n            totalheight += 4;\n            totalheight += this._replaceInput.inputBox.height + 2 /** input box border */;\n        }\n        // margin bottom\n        totalheight += 4;\n        return totalheight;\n    }\n    _tryUpdateHeight() {\n        const totalHeight = this._getHeight();\n        if (this._cachedHeight !== null && this._cachedHeight === totalHeight) {\n            return false;\n        }\n        this._cachedHeight = totalHeight;\n        this._domNode.style.height = `${totalHeight}px`;\n        return true;\n    }\n    // ----- Public\n    focusFindInput() {\n        this._findInput.select();\n        // Edge browser requires focus() in addition to select()\n        this._findInput.focus();\n    }\n    focusReplaceInput() {\n        this._replaceInput.select();\n        // Edge browser requires focus() in addition to select()\n        this._replaceInput.focus();\n    }\n    highlightFindOptions() {\n        this._findInput.highlightFindOptions();\n    }\n    _updateSearchScope() {\n        if (!this._codeEditor.hasModel()) {\n            return;\n        }\n        if (this._toggleSelectionFind.checked) {\n            let selections = this._codeEditor.getSelections();\n            selections.map(selection => {\n                if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                    selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                }\n                const currentMatch = this._state.currentMatch;\n                if (selection.startLineNumber !== selection.endLineNumber) {\n                    if (!Range.equalsRange(selection, currentMatch)) {\n                        return selection;\n                    }\n                }\n                return null;\n            }).filter(element => !!element);\n            if (selections.length) {\n                this._state.change({ searchScope: selections }, true);\n            }\n        }\n    }\n    _onFindInputMouseDown(e) {\n        // on linux, middle key does pasting.\n        if (e.middleButton) {\n            e.stopPropagation();\n        }\n    }\n    _onFindInputKeyDown(e) {\n        if (e.equals(ctrlKeyMod | 3 /* Enter */)) {\n            if (this._keybindingService.dispatchEvent(e, e.target)) {\n                e.preventDefault();\n                return;\n            }\n            else {\n                this._findInput.inputBox.insertAtCursor('\\n');\n                e.preventDefault();\n                return;\n            }\n        }\n        if (e.equals(2 /* Tab */)) {\n            if (this._isReplaceVisible) {\n                this._replaceInput.focus();\n            }\n            else {\n                this._findInput.focusOnCaseSensitive();\n            }\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(2048 /* CtrlCmd */ | 18 /* DownArrow */)) {\n            this._codeEditor.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(16 /* UpArrow */)) {\n            return stopPropagationForMultiLineUpwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n        }\n        if (e.equals(18 /* DownArrow */)) {\n            return stopPropagationForMultiLineDownwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n        }\n    }\n    _onReplaceInputKeyDown(e) {\n        if (e.equals(ctrlKeyMod | 3 /* Enter */)) {\n            if (this._keybindingService.dispatchEvent(e, e.target)) {\n                e.preventDefault();\n                return;\n            }\n            else {\n                if (platform.isWindows && platform.isNative && !this._ctrlEnterReplaceAllWarningPrompted) {\n                    // this is the first time when users press Ctrl + Enter to replace all\n                    this._notificationService.info(nls.localize('ctrlEnter.keybindingChanged', 'Ctrl+Enter now inserts line break instead of replacing all. You can modify the keybinding for editor.action.replaceAll to override this behavior.'));\n                    this._ctrlEnterReplaceAllWarningPrompted = true;\n                    this._storageService.store(ctrlEnterReplaceAllWarningPromptedKey, true, 0 /* GLOBAL */, 0 /* USER */);\n                }\n                this._replaceInput.inputBox.insertAtCursor('\\n');\n                e.preventDefault();\n                return;\n            }\n        }\n        if (e.equals(2 /* Tab */)) {\n            this._findInput.focusOnCaseSensitive();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(1024 /* Shift */ | 2 /* Tab */)) {\n            this._findInput.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(2048 /* CtrlCmd */ | 18 /* DownArrow */)) {\n            this._codeEditor.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(16 /* UpArrow */)) {\n            return stopPropagationForMultiLineUpwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n        }\n        if (e.equals(18 /* DownArrow */)) {\n            return stopPropagationForMultiLineDownwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n        }\n    }\n    // ----- sash\n    getVerticalSashLeft(_sash) {\n        return 0;\n    }\n    // ----- initialization\n    _keybindingLabelFor(actionId) {\n        let kb = this._keybindingService.lookupKeybinding(actionId);\n        if (!kb) {\n            return '';\n        }\n        return ` (${kb.getLabel()})`;\n    }\n    _buildDomNode() {\n        const flexibleHeight = true;\n        const flexibleWidth = true;\n        // Find input\n        this._findInput = this._register(new ContextScopedFindInput(null, this._contextViewProvider, {\n            width: FIND_INPUT_AREA_WIDTH,\n            label: NLS_FIND_INPUT_LABEL,\n            placeholder: NLS_FIND_INPUT_PLACEHOLDER,\n            appendCaseSensitiveLabel: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),\n            appendWholeWordsLabel: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),\n            appendRegexLabel: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),\n            validation: (value) => {\n                if (value.length === 0 || !this._findInput.getRegex()) {\n                    return null;\n                }\n                try {\n                    // use `g` and `u` which are also used by the TextModel search\n                    new RegExp(value, 'gu');\n                    return null;\n                }\n                catch (e) {\n                    return { content: e.message };\n                }\n            },\n            flexibleHeight,\n            flexibleWidth,\n            flexibleMaxHeight: 118,\n            showHistoryHint: () => showHistoryKeybindingHint(this._keybindingService)\n        }, this._contextKeyService, true));\n        this._findInput.setRegex(!!this._state.isRegex);\n        this._findInput.setCaseSensitive(!!this._state.matchCase);\n        this._findInput.setWholeWords(!!this._state.wholeWord);\n        this._register(this._findInput.onKeyDown((e) => this._onFindInputKeyDown(e)));\n        this._register(this._findInput.inputBox.onDidChange(() => {\n            if (this._ignoreChangeEvent) {\n                return;\n            }\n            this._state.change({ searchString: this._findInput.getValue() }, true);\n        }));\n        this._register(this._findInput.onDidOptionChange(() => {\n            this._state.change({\n                isRegex: this._findInput.getRegex(),\n                wholeWord: this._findInput.getWholeWords(),\n                matchCase: this._findInput.getCaseSensitive()\n            }, true);\n        }));\n        this._register(this._findInput.onCaseSensitiveKeyDown((e) => {\n            if (e.equals(1024 /* Shift */ | 2 /* Tab */)) {\n                if (this._isReplaceVisible) {\n                    this._replaceInput.focus();\n                    e.preventDefault();\n                }\n            }\n        }));\n        this._register(this._findInput.onRegexKeyDown((e) => {\n            if (e.equals(2 /* Tab */)) {\n                if (this._isReplaceVisible) {\n                    this._replaceInput.focusOnPreserve();\n                    e.preventDefault();\n                }\n            }\n        }));\n        this._register(this._findInput.inputBox.onDidHeightChange((e) => {\n            if (this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }));\n        if (platform.isLinux) {\n            this._register(this._findInput.onMouseDown((e) => this._onFindInputMouseDown(e)));\n        }\n        this._matchesCount = document.createElement('div');\n        this._matchesCount.className = 'matchesCount';\n        this._updateMatchesCount();\n        // Previous button\n        this._prevBtn = this._register(new SimpleButton({\n            label: NLS_PREVIOUS_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.PreviousMatchFindAction),\n            icon: findPreviousMatchIcon,\n            onTrigger: () => {\n                this._codeEditor.getAction(FIND_IDS.PreviousMatchFindAction).run().then(undefined, onUnexpectedError);\n            }\n        }));\n        // Next button\n        this._nextBtn = this._register(new SimpleButton({\n            label: NLS_NEXT_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.NextMatchFindAction),\n            icon: findNextMatchIcon,\n            onTrigger: () => {\n                this._codeEditor.getAction(FIND_IDS.NextMatchFindAction).run().then(undefined, onUnexpectedError);\n            }\n        }));\n        let findPart = document.createElement('div');\n        findPart.className = 'find-part';\n        findPart.appendChild(this._findInput.domNode);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'find-actions';\n        findPart.appendChild(actionsContainer);\n        actionsContainer.appendChild(this._matchesCount);\n        actionsContainer.appendChild(this._prevBtn.domNode);\n        actionsContainer.appendChild(this._nextBtn.domNode);\n        // Toggle selection button\n        this._toggleSelectionFind = this._register(new Checkbox({\n            icon: findSelectionIcon,\n            title: NLS_TOGGLE_SELECTION_FIND_TITLE + this._keybindingLabelFor(FIND_IDS.ToggleSearchScopeCommand),\n            isChecked: false\n        }));\n        this._register(this._toggleSelectionFind.onChange(() => {\n            if (this._toggleSelectionFind.checked) {\n                if (this._codeEditor.hasModel()) {\n                    let selections = this._codeEditor.getSelections();\n                    selections.map(selection => {\n                        if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                            selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                        }\n                        if (!selection.isEmpty()) {\n                            return selection;\n                        }\n                        return null;\n                    }).filter(element => !!element);\n                    if (selections.length) {\n                        this._state.change({ searchScope: selections }, true);\n                    }\n                }\n            }\n            else {\n                this._state.change({ searchScope: null }, true);\n            }\n        }));\n        actionsContainer.appendChild(this._toggleSelectionFind.domNode);\n        // Close button\n        this._closeBtn = this._register(new SimpleButton({\n            label: NLS_CLOSE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.CloseFindWidgetCommand),\n            icon: widgetClose,\n            onTrigger: () => {\n                this._state.change({ isRevealed: false, searchScope: null }, false);\n            },\n            onKeyDown: (e) => {\n                if (e.equals(2 /* Tab */)) {\n                    if (this._isReplaceVisible) {\n                        if (this._replaceBtn.isEnabled()) {\n                            this._replaceBtn.focus();\n                        }\n                        else {\n                            this._codeEditor.focus();\n                        }\n                        e.preventDefault();\n                    }\n                }\n            }\n        }));\n        actionsContainer.appendChild(this._closeBtn.domNode);\n        // Replace input\n        this._replaceInput = this._register(new ContextScopedReplaceInput(null, undefined, {\n            label: NLS_REPLACE_INPUT_LABEL,\n            placeholder: NLS_REPLACE_INPUT_PLACEHOLDER,\n            appendPreserveCaseLabel: this._keybindingLabelFor(FIND_IDS.TogglePreserveCaseCommand),\n            history: [],\n            flexibleHeight,\n            flexibleWidth,\n            flexibleMaxHeight: 118,\n            showHistoryHint: () => showHistoryKeybindingHint(this._keybindingService)\n        }, this._contextKeyService, true));\n        this._replaceInput.setPreserveCase(!!this._state.preserveCase);\n        this._register(this._replaceInput.onKeyDown((e) => this._onReplaceInputKeyDown(e)));\n        this._register(this._replaceInput.inputBox.onDidChange(() => {\n            this._state.change({ replaceString: this._replaceInput.inputBox.value }, false);\n        }));\n        this._register(this._replaceInput.inputBox.onDidHeightChange((e) => {\n            if (this._isReplaceVisible && this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }));\n        this._register(this._replaceInput.onDidOptionChange(() => {\n            this._state.change({\n                preserveCase: this._replaceInput.getPreserveCase()\n            }, true);\n        }));\n        this._register(this._replaceInput.onPreserveCaseKeyDown((e) => {\n            if (e.equals(2 /* Tab */)) {\n                if (this._prevBtn.isEnabled()) {\n                    this._prevBtn.focus();\n                }\n                else if (this._nextBtn.isEnabled()) {\n                    this._nextBtn.focus();\n                }\n                else if (this._toggleSelectionFind.enabled) {\n                    this._toggleSelectionFind.focus();\n                }\n                else if (this._closeBtn.isEnabled()) {\n                    this._closeBtn.focus();\n                }\n                e.preventDefault();\n            }\n        }));\n        // Replace one button\n        this._replaceBtn = this._register(new SimpleButton({\n            label: NLS_REPLACE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceOneAction),\n            icon: findReplaceIcon,\n            onTrigger: () => {\n                this._controller.replace();\n            },\n            onKeyDown: (e) => {\n                if (e.equals(1024 /* Shift */ | 2 /* Tab */)) {\n                    this._closeBtn.focus();\n                    e.preventDefault();\n                }\n            }\n        }));\n        // Replace all button\n        this._replaceAllBtn = this._register(new SimpleButton({\n            label: NLS_REPLACE_ALL_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceAllAction),\n            icon: findReplaceAllIcon,\n            onTrigger: () => {\n                this._controller.replaceAll();\n            }\n        }));\n        let replacePart = document.createElement('div');\n        replacePart.className = 'replace-part';\n        replacePart.appendChild(this._replaceInput.domNode);\n        const replaceActionsContainer = document.createElement('div');\n        replaceActionsContainer.className = 'replace-actions';\n        replacePart.appendChild(replaceActionsContainer);\n        replaceActionsContainer.appendChild(this._replaceBtn.domNode);\n        replaceActionsContainer.appendChild(this._replaceAllBtn.domNode);\n        // Toggle replace button\n        this._toggleReplaceBtn = this._register(new SimpleButton({\n            label: NLS_TOGGLE_REPLACE_MODE_BTN_LABEL,\n            className: 'codicon toggle left',\n            onTrigger: () => {\n                this._state.change({ isReplaceRevealed: !this._isReplaceVisible }, false);\n                if (this._isReplaceVisible) {\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                    this._replaceInput.inputBox.layout();\n                }\n                this._showViewZone();\n            }\n        }));\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\n        // Widget\n        this._domNode = document.createElement('div');\n        this._domNode.className = 'editor-widget find-widget';\n        this._domNode.setAttribute('aria-hidden', 'true');\n        // We need to set this explicitly, otherwise on IE11, the width inheritence of flex doesn't work.\n        this._domNode.style.width = `${FIND_WIDGET_INITIAL_WIDTH}px`;\n        this._domNode.appendChild(this._toggleReplaceBtn.domNode);\n        this._domNode.appendChild(findPart);\n        this._domNode.appendChild(replacePart);\n        this._resizeSash = new Sash(this._domNode, this, { orientation: 0 /* VERTICAL */, size: 2 });\n        this._resized = false;\n        let originalWidth = FIND_WIDGET_INITIAL_WIDTH;\n        this._register(this._resizeSash.onDidStart(() => {\n            originalWidth = dom.getTotalWidth(this._domNode);\n        }));\n        this._register(this._resizeSash.onDidChange((evt) => {\n            this._resized = true;\n            let width = originalWidth + evt.startX - evt.currentX;\n            if (width < FIND_WIDGET_INITIAL_WIDTH) {\n                // narrow down the find widget should be handled by CSS.\n                return;\n            }\n            const maxWidth = parseFloat(dom.getComputedStyle(this._domNode).maxWidth) || 0;\n            if (width > maxWidth) {\n                return;\n            }\n            this._domNode.style.width = `${width}px`;\n            if (this._isReplaceVisible) {\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n            }\n            this._findInput.inputBox.layout();\n            this._tryUpdateHeight();\n        }));\n        this._register(this._resizeSash.onDidReset(() => {\n            // users double click on the sash\n            const currentWidth = dom.getTotalWidth(this._domNode);\n            if (currentWidth < FIND_WIDGET_INITIAL_WIDTH) {\n                // The editor is narrow and the width of the find widget is controlled fully by CSS.\n                return;\n            }\n            let width = FIND_WIDGET_INITIAL_WIDTH;\n            if (!this._resized || currentWidth === FIND_WIDGET_INITIAL_WIDTH) {\n                // 1. never resized before, double click should maximizes it\n                // 2. users resized it already but its width is the same as default\n                const layoutInfo = this._codeEditor.getLayoutInfo();\n                width = layoutInfo.width - 28 - layoutInfo.minimap.minimapWidth - 15;\n                this._resized = true;\n            }\n            else {\n                /**\n                 * no op, the find widget should be shrinked to its default size.\n                 */\n            }\n            this._domNode.style.width = `${width}px`;\n            if (this._isReplaceVisible) {\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n            }\n            this._findInput.inputBox.layout();\n        }));\n    }\n    updateAccessibilitySupport() {\n        const value = this._codeEditor.getOption(2 /* accessibilitySupport */);\n        this._findInput.setFocusInputOnOptionClick(value !== 2 /* Enabled */);\n    }\n}\nFindWidget.ID = 'editor.contrib.findWidget';\nexport class SimpleButton extends Widget {\n    constructor(opts) {\n        super();\n        this._opts = opts;\n        let className = 'button';\n        if (this._opts.className) {\n            className = className + ' ' + this._opts.className;\n        }\n        if (this._opts.icon) {\n            className = className + ' ' + ThemeIcon.asClassName(this._opts.icon);\n        }\n        this._domNode = document.createElement('div');\n        this._domNode.title = this._opts.label;\n        this._domNode.tabIndex = 0;\n        this._domNode.className = className;\n        this._domNode.setAttribute('role', 'button');\n        this._domNode.setAttribute('aria-label', this._opts.label);\n        this.onclick(this._domNode, (e) => {\n            this._opts.onTrigger();\n            e.preventDefault();\n        });\n        this.onkeydown(this._domNode, (e) => {\n            if (e.equals(10 /* Space */) || e.equals(3 /* Enter */)) {\n                this._opts.onTrigger();\n                e.preventDefault();\n                return;\n            }\n            if (this._opts.onKeyDown) {\n                this._opts.onKeyDown(e);\n            }\n        });\n    }\n    get domNode() {\n        return this._domNode;\n    }\n    isEnabled() {\n        return (this._domNode.tabIndex >= 0);\n    }\n    focus() {\n        this._domNode.focus();\n    }\n    setEnabled(enabled) {\n        this._domNode.classList.toggle('disabled', !enabled);\n        this._domNode.setAttribute('aria-disabled', String(!enabled));\n        this._domNode.tabIndex = enabled ? 0 : -1;\n    }\n    setExpanded(expanded) {\n        this._domNode.setAttribute('aria-expanded', String(!!expanded));\n        if (expanded) {\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findExpandedIcon));\n        }\n        else {\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findExpandedIcon));\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n        }\n    }\n}\n// theming\nregisterThemingParticipant((theme, collector) => {\n    const addBackgroundColorRule = (selector, color) => {\n        if (color) {\n            collector.addRule(`.monaco-editor ${selector} { background-color: ${color}; }`);\n        }\n    };\n    addBackgroundColorRule('.findMatch', theme.getColor(editorFindMatchHighlight));\n    addBackgroundColorRule('.currentFindMatch', theme.getColor(editorFindMatch));\n    addBackgroundColorRule('.findScope', theme.getColor(editorFindRangeHighlight));\n    const widgetBackground = theme.getColor(editorWidgetBackground);\n    addBackgroundColorRule('.find-widget', widgetBackground);\n    const widgetShadowColor = theme.getColor(widgetShadow);\n    if (widgetShadowColor) {\n        collector.addRule(`.monaco-editor .find-widget { box-shadow: 0 0 8px 2px ${widgetShadowColor}; }`);\n    }\n    const findMatchHighlightBorder = theme.getColor(editorFindMatchHighlightBorder);\n    if (findMatchHighlightBorder) {\n        collector.addRule(`.monaco-editor .findMatch { border: 1px ${theme.type === 'hc' ? 'dotted' : 'solid'} ${findMatchHighlightBorder}; box-sizing: border-box; }`);\n    }\n    const findMatchBorder = theme.getColor(editorFindMatchBorder);\n    if (findMatchBorder) {\n        collector.addRule(`.monaco-editor .currentFindMatch { border: 2px solid ${findMatchBorder}; padding: 1px; box-sizing: border-box; }`);\n    }\n    const findRangeHighlightBorder = theme.getColor(editorFindRangeHighlightBorder);\n    if (findRangeHighlightBorder) {\n        collector.addRule(`.monaco-editor .findScope { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${findRangeHighlightBorder}; }`);\n    }\n    const hcBorder = theme.getColor(contrastBorder);\n    if (hcBorder) {\n        collector.addRule(`.monaco-editor .find-widget { border: 1px solid ${hcBorder}; }`);\n    }\n    const foreground = theme.getColor(editorWidgetForeground);\n    if (foreground) {\n        collector.addRule(`.monaco-editor .find-widget { color: ${foreground}; }`);\n    }\n    const error = theme.getColor(errorForeground);\n    if (error) {\n        collector.addRule(`.monaco-editor .find-widget.no-results .matchesCount { color: ${error}; }`);\n    }\n    const resizeBorderBackground = theme.getColor(editorWidgetResizeBorder);\n    if (resizeBorderBackground) {\n        collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${resizeBorderBackground}; }`);\n    }\n    else {\n        const border = theme.getColor(editorWidgetBorder);\n        if (border) {\n            collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${border}; }`);\n        }\n    }\n    // Action bars\n    const toolbarHoverBackgroundColor = theme.getColor(toolbarHoverBackground);\n    if (toolbarHoverBackgroundColor) {\n        collector.addRule(`\n\t\t.monaco-editor .find-widget .button:not(.disabled):hover,\n\t\t.monaco-editor .find-widget .codicon-find-selection:hover {\n\t\t\tbackground-color: ${toolbarHoverBackgroundColor} !important;\n\t\t}\n\t`);\n    }\n    // This rule is used to override the outline color for synthetic-focus find input.\n    const focusOutline = theme.getColor(focusBorder);\n    if (focusOutline) {\n        collector.addRule(`.monaco-editor .find-widget .monaco-inputbox.synthetic-focus { outline-color: ${focusOutline}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Delayer } from '../../../../base/common/async.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { EditorAction, EditorCommand, MultiEditorAction, registerEditorAction, registerEditorCommand, registerEditorContribution, registerMultiEditorAction } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_FIND_WIDGET_VISIBLE, CONTEXT_REPLACE_INPUT_FOCUSED, FindModelBoundToEditorModel, FIND_IDS, ToggleCaseSensitiveKeybinding, TogglePreserveCaseKeybinding, ToggleRegexKeybinding, ToggleSearchScopeKeybinding, ToggleWholeWordKeybinding } from './findModel.js';\nimport { FindOptionsWidget } from './findOptionsWidget.js';\nimport { FindReplaceState } from './findState.js';\nimport { FindWidget } from './findWidget.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextViewService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nconst SEARCH_STRING_MAX_LENGTH = 524288;\nexport function getSelectionSearchString(editor, seedSearchStringFromSelection = 'single', seedSearchStringFromNonEmptySelection = false) {\n    if (!editor.hasModel()) {\n        return null;\n    }\n    const selection = editor.getSelection();\n    // if selection spans multiple lines, default search string to empty\n    if ((seedSearchStringFromSelection === 'single' && selection.startLineNumber === selection.endLineNumber)\n        || seedSearchStringFromSelection === 'multiple') {\n        if (selection.isEmpty()) {\n            const wordAtPosition = editor.getConfiguredWordAtPosition(selection.getStartPosition());\n            if (wordAtPosition && (false === seedSearchStringFromNonEmptySelection)) {\n                return wordAtPosition.word;\n            }\n        }\n        else {\n            if (editor.getModel().getValueLengthInRange(selection) < SEARCH_STRING_MAX_LENGTH) {\n                return editor.getModel().getValueInRange(selection);\n            }\n        }\n    }\n    return null;\n}\nlet CommonFindController = class CommonFindController extends Disposable {\n    constructor(editor, contextKeyService, storageService, clipboardService) {\n        super();\n        this._editor = editor;\n        this._findWidgetVisible = CONTEXT_FIND_WIDGET_VISIBLE.bindTo(contextKeyService);\n        this._contextKeyService = contextKeyService;\n        this._storageService = storageService;\n        this._clipboardService = clipboardService;\n        this._updateHistoryDelayer = new Delayer(500);\n        this._state = this._register(new FindReplaceState());\n        this.loadQueryState();\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this._model = null;\n        this._register(this._editor.onDidChangeModel(() => {\n            let shouldRestartFind = (this._editor.getModel() && this._state.isRevealed);\n            this.disposeModel();\n            this._state.change({\n                searchScope: null,\n                matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* WORKSPACE */, false),\n                wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* WORKSPACE */, false),\n                isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* WORKSPACE */, false),\n                preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* WORKSPACE */, false)\n            }, false);\n            if (shouldRestartFind) {\n                this._start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: 'none',\n                    seedSearchStringFromNonEmptySelection: false,\n                    seedSearchStringFromGlobalClipboard: false,\n                    shouldFocus: 0 /* NoFocusChange */,\n                    shouldAnimate: false,\n                    updateSearchScope: false,\n                    loop: this._editor.getOption(35 /* find */).loop\n                });\n            }\n        }));\n    }\n    get editor() {\n        return this._editor;\n    }\n    static get(editor) {\n        return editor.getContribution(CommonFindController.ID);\n    }\n    dispose() {\n        this.disposeModel();\n        super.dispose();\n    }\n    disposeModel() {\n        if (this._model) {\n            this._model.dispose();\n            this._model = null;\n        }\n    }\n    _onStateChanged(e) {\n        this.saveQueryState(e);\n        if (e.isRevealed) {\n            if (this._state.isRevealed) {\n                this._findWidgetVisible.set(true);\n            }\n            else {\n                this._findWidgetVisible.reset();\n                this.disposeModel();\n            }\n        }\n        if (e.searchString) {\n            this.setGlobalBufferTerm(this._state.searchString);\n        }\n    }\n    saveQueryState(e) {\n        if (e.isRegex) {\n            this._storageService.store('editor.isRegex', this._state.actualIsRegex, 1 /* WORKSPACE */, 0 /* USER */);\n        }\n        if (e.wholeWord) {\n            this._storageService.store('editor.wholeWord', this._state.actualWholeWord, 1 /* WORKSPACE */, 0 /* USER */);\n        }\n        if (e.matchCase) {\n            this._storageService.store('editor.matchCase', this._state.actualMatchCase, 1 /* WORKSPACE */, 0 /* USER */);\n        }\n        if (e.preserveCase) {\n            this._storageService.store('editor.preserveCase', this._state.actualPreserveCase, 1 /* WORKSPACE */, 0 /* USER */);\n        }\n    }\n    loadQueryState() {\n        this._state.change({\n            matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* WORKSPACE */, this._state.matchCase),\n            wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* WORKSPACE */, this._state.wholeWord),\n            isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* WORKSPACE */, this._state.isRegex),\n            preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* WORKSPACE */, this._state.preserveCase)\n        }, false);\n    }\n    isFindInputFocused() {\n        return !!CONTEXT_FIND_INPUT_FOCUSED.getValue(this._contextKeyService);\n    }\n    getState() {\n        return this._state;\n    }\n    closeFindWidget() {\n        this._state.change({\n            isRevealed: false,\n            searchScope: null\n        }, false);\n        this._editor.focus();\n    }\n    toggleCaseSensitive() {\n        this._state.change({ matchCase: !this._state.matchCase }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleWholeWords() {\n        this._state.change({ wholeWord: !this._state.wholeWord }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleRegex() {\n        this._state.change({ isRegex: !this._state.isRegex }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    togglePreserveCase() {\n        this._state.change({ preserveCase: !this._state.preserveCase }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleSearchScope() {\n        if (this._state.searchScope) {\n            this._state.change({ searchScope: null }, true);\n        }\n        else {\n            if (this._editor.hasModel()) {\n                let selections = this._editor.getSelections();\n                selections.map(selection => {\n                    if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                        selection = selection.setEndPosition(selection.endLineNumber - 1, this._editor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                    }\n                    if (!selection.isEmpty()) {\n                        return selection;\n                    }\n                    return null;\n                }).filter(element => !!element);\n                if (selections.length) {\n                    this._state.change({ searchScope: selections }, true);\n                }\n            }\n        }\n    }\n    setSearchString(searchString) {\n        if (this._state.isRegex) {\n            searchString = strings.escapeRegExpCharacters(searchString);\n        }\n        this._state.change({ searchString: searchString }, false);\n    }\n    highlightFindOptions(ignoreWhenVisible = false) {\n        // overwritten in subclass\n    }\n    _start(opts, newState) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.disposeModel();\n            if (!this._editor.hasModel()) {\n                // cannot do anything with an editor that doesn't have a model...\n                return;\n            }\n            let stateChanges = Object.assign(Object.assign({}, newState), { isRevealed: true });\n            if (opts.seedSearchStringFromSelection === 'single') {\n                let selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection, opts.seedSearchStringFromNonEmptySelection);\n                if (selectionSearchString) {\n                    if (this._state.isRegex) {\n                        stateChanges.searchString = strings.escapeRegExpCharacters(selectionSearchString);\n                    }\n                    else {\n                        stateChanges.searchString = selectionSearchString;\n                    }\n                }\n            }\n            else if (opts.seedSearchStringFromSelection === 'multiple' && !opts.updateSearchScope) {\n                let selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection);\n                if (selectionSearchString) {\n                    stateChanges.searchString = selectionSearchString;\n                }\n            }\n            if (!stateChanges.searchString && opts.seedSearchStringFromGlobalClipboard) {\n                let selectionSearchString = yield this.getGlobalBufferTerm();\n                if (!this._editor.hasModel()) {\n                    // the editor has lost its model in the meantime\n                    return;\n                }\n                if (selectionSearchString) {\n                    stateChanges.searchString = selectionSearchString;\n                }\n            }\n            // Overwrite isReplaceRevealed\n            if (opts.forceRevealReplace || stateChanges.isReplaceRevealed) {\n                stateChanges.isReplaceRevealed = true;\n            }\n            else if (!this._findWidgetVisible.get()) {\n                stateChanges.isReplaceRevealed = false;\n            }\n            if (opts.updateSearchScope) {\n                let currentSelections = this._editor.getSelections();\n                if (currentSelections.some(selection => !selection.isEmpty())) {\n                    stateChanges.searchScope = currentSelections;\n                }\n            }\n            stateChanges.loop = opts.loop;\n            this._state.change(stateChanges, false);\n            if (!this._model) {\n                this._model = new FindModelBoundToEditorModel(this._editor, this._state);\n            }\n        });\n    }\n    start(opts, newState) {\n        return this._start(opts, newState);\n    }\n    moveToNextMatch() {\n        if (this._model) {\n            this._model.moveToNextMatch();\n            return true;\n        }\n        return false;\n    }\n    moveToPrevMatch() {\n        if (this._model) {\n            this._model.moveToPrevMatch();\n            return true;\n        }\n        return false;\n    }\n    replace() {\n        if (this._model) {\n            this._model.replace();\n            return true;\n        }\n        return false;\n    }\n    replaceAll() {\n        if (this._model) {\n            this._model.replaceAll();\n            return true;\n        }\n        return false;\n    }\n    selectAllMatches() {\n        if (this._model) {\n            this._model.selectAllMatches();\n            this._editor.focus();\n            return true;\n        }\n        return false;\n    }\n    getGlobalBufferTerm() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._editor.getOption(35 /* find */).globalFindClipboard\n                && this._editor.hasModel()\n                && !this._editor.getModel().isTooLargeForSyncing()) {\n                return this._clipboardService.readFindText();\n            }\n            return '';\n        });\n    }\n    setGlobalBufferTerm(text) {\n        if (this._editor.getOption(35 /* find */).globalFindClipboard\n            && this._editor.hasModel()\n            && !this._editor.getModel().isTooLargeForSyncing()) {\n            // intentionally not awaited\n            this._clipboardService.writeFindText(text);\n        }\n    }\n};\nCommonFindController.ID = 'editor.contrib.findController';\nCommonFindController = __decorate([\n    __param(1, IContextKeyService),\n    __param(2, IStorageService),\n    __param(3, IClipboardService)\n], CommonFindController);\nexport { CommonFindController };\nlet FindController = class FindController extends CommonFindController {\n    constructor(editor, _contextViewService, _contextKeyService, _keybindingService, _themeService, _notificationService, _storageService, clipboardService) {\n        super(editor, _contextKeyService, _storageService, clipboardService);\n        this._contextViewService = _contextViewService;\n        this._keybindingService = _keybindingService;\n        this._themeService = _themeService;\n        this._notificationService = _notificationService;\n        this._widget = null;\n        this._findOptionsWidget = null;\n    }\n    _start(opts, newState) {\n        const _super = Object.create(null, {\n            _start: { get: () => super._start }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._widget) {\n                this._createFindWidget();\n            }\n            const selection = this._editor.getSelection();\n            let updateSearchScope = false;\n            switch (this._editor.getOption(35 /* find */).autoFindInSelection) {\n                case 'always':\n                    updateSearchScope = true;\n                    break;\n                case 'never':\n                    updateSearchScope = false;\n                    break;\n                case 'multiline': {\n                    const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n                    updateSearchScope = isSelectionMultipleLine;\n                    break;\n                }\n                default:\n                    break;\n            }\n            opts.updateSearchScope = opts.updateSearchScope || updateSearchScope;\n            yield _super._start.call(this, opts, newState);\n            if (this._widget) {\n                if (opts.shouldFocus === 2 /* FocusReplaceInput */) {\n                    this._widget.focusReplaceInput();\n                }\n                else if (opts.shouldFocus === 1 /* FocusFindInput */) {\n                    this._widget.focusFindInput();\n                }\n            }\n        });\n    }\n    highlightFindOptions(ignoreWhenVisible = false) {\n        if (!this._widget) {\n            this._createFindWidget();\n        }\n        if (this._state.isRevealed && !ignoreWhenVisible) {\n            this._widget.highlightFindOptions();\n        }\n        else {\n            this._findOptionsWidget.highlightFindOptions();\n        }\n    }\n    _createFindWidget() {\n        this._widget = this._register(new FindWidget(this._editor, this, this._state, this._contextViewService, this._keybindingService, this._contextKeyService, this._themeService, this._storageService, this._notificationService));\n        this._findOptionsWidget = this._register(new FindOptionsWidget(this._editor, this._state, this._keybindingService, this._themeService));\n    }\n};\nFindController = __decorate([\n    __param(1, IContextViewService),\n    __param(2, IContextKeyService),\n    __param(3, IKeybindingService),\n    __param(4, IThemeService),\n    __param(5, INotificationService),\n    __param(6, IStorageService),\n    __param(7, IClipboardService)\n], FindController);\nexport { FindController };\nexport const StartFindAction = registerMultiEditorAction(new MultiEditorAction({\n    id: FIND_IDS.StartFindAction,\n    label: nls.localize('startFindAction', \"Find\"),\n    alias: 'Find',\n    precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n    kbOpts: {\n        kbExpr: null,\n        primary: 2048 /* CtrlCmd */ | 36 /* KeyF */,\n        weight: 100 /* EditorContrib */\n    },\n    menuOpts: {\n        menuId: MenuId.MenubarEditMenu,\n        group: '3_find',\n        title: nls.localize({ key: 'miFind', comment: ['&& denotes a mnemonic'] }, \"&&Find\"),\n        order: 1\n    }\n}));\nStartFindAction.addImplementation(0, (accessor, editor, args) => {\n    const controller = CommonFindController.get(editor);\n    if (!controller) {\n        return false;\n    }\n    return controller.start({\n        forceRevealReplace: false,\n        seedSearchStringFromSelection: editor.getOption(35 /* find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n        seedSearchStringFromNonEmptySelection: editor.getOption(35 /* find */).seedSearchStringFromSelection === 'selection',\n        seedSearchStringFromGlobalClipboard: editor.getOption(35 /* find */).globalFindClipboard,\n        shouldFocus: 1 /* FocusFindInput */,\n        shouldAnimate: true,\n        updateSearchScope: false,\n        loop: editor.getOption(35 /* find */).loop\n    });\n});\nconst findArgDescription = {\n    description: 'Open a new In-Editor Find Widget.',\n    args: [{\n            name: 'Open a new In-Editor Find Widget args',\n            schema: {\n                properties: {\n                    searchString: { type: 'string' },\n                    replaceString: { type: 'string' },\n                    regex: { type: 'boolean' },\n                    regexOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.isRegexOverride', 'Overrides \"Use Regular Expression\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    wholeWord: { type: 'boolean' },\n                    wholeWordOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.wholeWordOverride', 'Overrides \"Match Whole Word\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    matchCase: { type: 'boolean' },\n                    matchCaseOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.matchCaseOverride', 'Overrides \"Math Case\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    preserveCase: { type: 'boolean' },\n                    preserveCaseOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.preserveCaseOverride', 'Overrides \"Preserve Case\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    findInSelection: { type: 'boolean' },\n                }\n            }\n        }]\n};\nexport class StartFindWithArgsAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.StartFindWithArgs,\n            label: nls.localize('startFindWithArgsAction', \"Find With Arguments\"),\n            alias: 'Find With Arguments',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: null,\n                primary: 0,\n                weight: 100 /* EditorContrib */\n            },\n            description: findArgDescription\n        });\n    }\n    run(accessor, editor, args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (controller) {\n                const newState = args ? {\n                    searchString: args.searchString,\n                    replaceString: args.replaceString,\n                    isReplaceRevealed: args.replaceString !== undefined,\n                    isRegex: args.isRegex,\n                    // isRegexOverride: args.regexOverride,\n                    wholeWord: args.matchWholeWord,\n                    // wholeWordOverride: args.wholeWordOverride,\n                    matchCase: args.isCaseSensitive,\n                    // matchCaseOverride: args.matchCaseOverride,\n                    preserveCase: args.preserveCase,\n                    // preserveCaseOverride: args.preserveCaseOverride,\n                } : {};\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: (controller.getState().searchString.length === 0) && editor.getOption(35 /* find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n                    seedSearchStringFromNonEmptySelection: editor.getOption(35 /* find */).seedSearchStringFromSelection === 'selection',\n                    seedSearchStringFromGlobalClipboard: true,\n                    shouldFocus: 1 /* FocusFindInput */,\n                    shouldAnimate: true,\n                    updateSearchScope: (args === null || args === void 0 ? void 0 : args.findInSelection) || false,\n                    loop: editor.getOption(35 /* find */).loop\n                }, newState);\n                controller.setGlobalBufferTerm(controller.getState().searchString);\n            }\n        });\n    }\n}\nexport class StartFindWithSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.StartFindWithSelection,\n            label: nls.localize('startFindWithSelectionAction', \"Find With Selection\"),\n            alias: 'Find With Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: null,\n                primary: 0,\n                mac: {\n                    primary: 2048 /* CtrlCmd */ | 35 /* KeyE */,\n                },\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (controller) {\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: 'multiple',\n                    seedSearchStringFromNonEmptySelection: false,\n                    seedSearchStringFromGlobalClipboard: false,\n                    shouldFocus: 0 /* NoFocusChange */,\n                    shouldAnimate: true,\n                    updateSearchScope: false,\n                    loop: editor.getOption(35 /* find */).loop\n                });\n                controller.setGlobalBufferTerm(controller.getState().searchString);\n            }\n        });\n    }\n}\nexport class MatchFindAction extends EditorAction {\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (controller && !this._run(controller)) {\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: (controller.getState().searchString.length === 0) && editor.getOption(35 /* find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n                    seedSearchStringFromNonEmptySelection: editor.getOption(35 /* find */).seedSearchStringFromSelection === 'selection',\n                    seedSearchStringFromGlobalClipboard: true,\n                    shouldFocus: 0 /* NoFocusChange */,\n                    shouldAnimate: true,\n                    updateSearchScope: false,\n                    loop: editor.getOption(35 /* find */).loop\n                });\n                this._run(controller);\n            }\n        });\n    }\n}\nexport class NextMatchFindAction extends MatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.NextMatchFindAction,\n            label: nls.localize('findNextMatchAction', \"Find Next\"),\n            alias: 'Find Next',\n            precondition: undefined,\n            kbOpts: [{\n                    kbExpr: EditorContextKeys.focus,\n                    primary: 61 /* F3 */,\n                    mac: { primary: 2048 /* CtrlCmd */ | 37 /* KeyG */, secondary: [61 /* F3 */] },\n                    weight: 100 /* EditorContrib */\n                }, {\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n                    primary: 3 /* Enter */,\n                    weight: 100 /* EditorContrib */\n                }]\n        });\n    }\n    _run(controller) {\n        const result = controller.moveToNextMatch();\n        if (result) {\n            controller.editor.pushUndoStop();\n            return true;\n        }\n        return false;\n    }\n}\nexport class PreviousMatchFindAction extends MatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.PreviousMatchFindAction,\n            label: nls.localize('findPreviousMatchAction', \"Find Previous\"),\n            alias: 'Find Previous',\n            precondition: undefined,\n            kbOpts: [{\n                    kbExpr: EditorContextKeys.focus,\n                    primary: 1024 /* Shift */ | 61 /* F3 */,\n                    mac: { primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 37 /* KeyG */, secondary: [1024 /* Shift */ | 61 /* F3 */] },\n                    weight: 100 /* EditorContrib */\n                }, {\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n                    primary: 1024 /* Shift */ | 3 /* Enter */,\n                    weight: 100 /* EditorContrib */\n                }\n            ]\n        });\n    }\n    _run(controller) {\n        return controller.moveToPrevMatch();\n    }\n}\nexport class SelectionMatchFindAction extends EditorAction {\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (!controller) {\n                return;\n            }\n            const seedSearchStringFromNonEmptySelection = editor.getOption(35 /* find */).seedSearchStringFromSelection === 'selection';\n            let selectionSearchString = null;\n            if (editor.getOption(35 /* find */).seedSearchStringFromSelection !== 'never') {\n                selectionSearchString = getSelectionSearchString(editor, 'single', seedSearchStringFromNonEmptySelection);\n            }\n            if (selectionSearchString) {\n                controller.setSearchString(selectionSearchString);\n            }\n            if (!this._run(controller)) {\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: editor.getOption(35 /* find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n                    seedSearchStringFromNonEmptySelection: seedSearchStringFromNonEmptySelection,\n                    seedSearchStringFromGlobalClipboard: false,\n                    shouldFocus: 0 /* NoFocusChange */,\n                    shouldAnimate: true,\n                    updateSearchScope: false,\n                    loop: editor.getOption(35 /* find */).loop\n                });\n                this._run(controller);\n            }\n        });\n    }\n}\nexport class NextSelectionMatchFindAction extends SelectionMatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.NextSelectionMatchFindAction,\n            label: nls.localize('nextSelectionMatchFindAction', \"Find Next Selection\"),\n            alias: 'Find Next Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.focus,\n                primary: 2048 /* CtrlCmd */ | 61 /* F3 */,\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    _run(controller) {\n        return controller.moveToNextMatch();\n    }\n}\nexport class PreviousSelectionMatchFindAction extends SelectionMatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.PreviousSelectionMatchFindAction,\n            label: nls.localize('previousSelectionMatchFindAction', \"Find Previous Selection\"),\n            alias: 'Find Previous Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.focus,\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 61 /* F3 */,\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    _run(controller) {\n        return controller.moveToPrevMatch();\n    }\n}\nexport const StartFindReplaceAction = registerMultiEditorAction(new MultiEditorAction({\n    id: FIND_IDS.StartFindReplaceAction,\n    label: nls.localize('startReplace', \"Replace\"),\n    alias: 'Replace',\n    precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n    kbOpts: {\n        kbExpr: null,\n        primary: 2048 /* CtrlCmd */ | 38 /* KeyH */,\n        mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 36 /* KeyF */ },\n        weight: 100 /* EditorContrib */\n    },\n    menuOpts: {\n        menuId: MenuId.MenubarEditMenu,\n        group: '3_find',\n        title: nls.localize({ key: 'miReplace', comment: ['&& denotes a mnemonic'] }, \"&&Replace\"),\n        order: 2\n    }\n}));\nStartFindReplaceAction.addImplementation(0, (accessor, editor, args) => {\n    if (!editor.hasModel() || editor.getOption(81 /* readOnly */)) {\n        return false;\n    }\n    const controller = CommonFindController.get(editor);\n    if (!controller) {\n        return false;\n    }\n    const currentSelection = editor.getSelection();\n    const findInputFocused = controller.isFindInputFocused();\n    // we only seed search string from selection when the current selection is single line and not empty,\n    // + the find input is not focused\n    const seedSearchStringFromSelection = !currentSelection.isEmpty()\n        && currentSelection.startLineNumber === currentSelection.endLineNumber\n        && (editor.getOption(35 /* find */).seedSearchStringFromSelection !== 'never')\n        && !findInputFocused;\n    /*\n    * if the existing search string in find widget is empty and we don't seed search string from selection, it means the Find Input is still empty, so we should focus the Find Input instead of Replace Input.\n\n    * findInputFocused true -> seedSearchStringFromSelection false, FocusReplaceInput\n    * findInputFocused false, seedSearchStringFromSelection true FocusReplaceInput\n    * findInputFocused false seedSearchStringFromSelection false FocusFindInput\n    */\n    const shouldFocus = (findInputFocused || seedSearchStringFromSelection) ?\n        2 /* FocusReplaceInput */ : 1 /* FocusFindInput */;\n    return controller.start({\n        forceRevealReplace: true,\n        seedSearchStringFromSelection: seedSearchStringFromSelection ? 'single' : 'none',\n        seedSearchStringFromNonEmptySelection: editor.getOption(35 /* find */).seedSearchStringFromSelection === 'selection',\n        seedSearchStringFromGlobalClipboard: editor.getOption(35 /* find */).seedSearchStringFromSelection !== 'never',\n        shouldFocus: shouldFocus,\n        shouldAnimate: true,\n        updateSearchScope: false,\n        loop: editor.getOption(35 /* find */).loop\n    });\n});\nregisterEditorContribution(CommonFindController.ID, FindController);\nregisterEditorAction(StartFindWithArgsAction);\nregisterEditorAction(StartFindWithSelectionAction);\nregisterEditorAction(NextMatchFindAction);\nregisterEditorAction(PreviousMatchFindAction);\nregisterEditorAction(NextSelectionMatchFindAction);\nregisterEditorAction(PreviousSelectionMatchFindAction);\nconst FindCommand = EditorCommand.bindToContribution(CommonFindController.get);\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.CloseFindWidgetCommand,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.closeFindWidget(),\n    kbOpts: {\n        weight: 100 /* EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\n        primary: 9 /* Escape */,\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleCaseSensitiveCommand,\n    precondition: undefined,\n    handler: x => x.toggleCaseSensitive(),\n    kbOpts: {\n        weight: 100 /* EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleCaseSensitiveKeybinding.primary,\n        mac: ToggleCaseSensitiveKeybinding.mac,\n        win: ToggleCaseSensitiveKeybinding.win,\n        linux: ToggleCaseSensitiveKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleWholeWordCommand,\n    precondition: undefined,\n    handler: x => x.toggleWholeWords(),\n    kbOpts: {\n        weight: 100 /* EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleWholeWordKeybinding.primary,\n        mac: ToggleWholeWordKeybinding.mac,\n        win: ToggleWholeWordKeybinding.win,\n        linux: ToggleWholeWordKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleRegexCommand,\n    precondition: undefined,\n    handler: x => x.toggleRegex(),\n    kbOpts: {\n        weight: 100 /* EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleRegexKeybinding.primary,\n        mac: ToggleRegexKeybinding.mac,\n        win: ToggleRegexKeybinding.win,\n        linux: ToggleRegexKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleSearchScopeCommand,\n    precondition: undefined,\n    handler: x => x.toggleSearchScope(),\n    kbOpts: {\n        weight: 100 /* EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleSearchScopeKeybinding.primary,\n        mac: ToggleSearchScopeKeybinding.mac,\n        win: ToggleSearchScopeKeybinding.win,\n        linux: ToggleSearchScopeKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.TogglePreserveCaseCommand,\n    precondition: undefined,\n    handler: x => x.togglePreserveCase(),\n    kbOpts: {\n        weight: 100 /* EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: TogglePreserveCaseKeybinding.primary,\n        mac: TogglePreserveCaseKeybinding.mac,\n        win: TogglePreserveCaseKeybinding.win,\n        linux: TogglePreserveCaseKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceOneAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replace(),\n    kbOpts: {\n        weight: 100 /* EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 22 /* Digit1 */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceOneAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replace(),\n    kbOpts: {\n        weight: 100 /* EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n        primary: 3 /* Enter */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceAllAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replaceAll(),\n    kbOpts: {\n        weight: 100 /* EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 3 /* Enter */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceAllAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replaceAll(),\n    kbOpts: {\n        weight: 100 /* EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n        primary: undefined,\n        mac: {\n            primary: 2048 /* CtrlCmd */ | 3 /* Enter */,\n        }\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.SelectAllMatchesAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.selectAllMatches(),\n    kbOpts: {\n        weight: 100 /* EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 512 /* Alt */ | 3 /* Enter */\n    }\n}));\n"],"names":["DragAndDropCommand","selection","targetPosition","copy","this","targetSelection","model","builder","text","getValueInRange","addEditOperation","Range","lineNumber","column","containsPosition","getEndPosition","equals","getStartPosition","Selection","endLineNumber","startLineNumber","endColumn","startColumn","helper","hasTriggerModifier","e","isMacintosh","altKey","ctrlKey","DragAndDropController","editor","_editor","_register","onMouseDown","_onEditorMouseDown","onMouseUp","_onEditorMouseUp","onMouseDrag","_onEditorMouseDrag","onMouseDrop","_onEditorMouseDrop","onMouseDropCanceled","_onEditorMouseDropCanceled","onKeyDown","onEditorKeyDown","onKeyUp","onEditorKeyUp","onDidBlurEditorWidget","onEditorBlur","onDidBlurEditorText","_dndDecorationIds","_mouseDown","_modifierPressed","_dragSelection","_removeDecoration","getOption","updateOptions","mouseStyle","keyCode","TRIGGER_KEY_VALUE","mouseEvent","target","possibleSelections","getSelections","filter","position","length","event","showAt","_hitContent","_hitMargin","newCursorPosition","Position","newSelections","shiftKey","primarySelection","getSelection","selectionStartLineNumber","selectionStartColumn","map","setSelections","pushUndoStop","executeCommand","ID","newDecorations","range","options","_DECORATION_OPTIONS","deltaDecorations","revealPosition","type","Disposable","ModelDecorationOptions","description","className","registerEditorContribution","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","apply","CommandsRegistry","accessor","args","resource","assertType","URI","outlineService","get","IOutlineModelService","modelService","ITextModelService","createModelReference","reference","getOrCreate","object","textEditorModel","CancellationToken","getTopLevelSymbols","dispose","__decorate","decorators","key","desc","d","c","arguments","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","TreeElement","parent","children","delete","id","candidate","container","candidateId","name","undefined","element","size","OutlineElement","symbol","Map","OutlineGroup","label","order","OutlineModel","uri","_groups","count","group","Iterable","values","child","set","roots","push","sort","a","b","bucket","_flattenDocumentSymbols","registry","textModel","token","cts","CancellationTokenSource","provider","ordered","promises","index","_a","findId","displayName","provideDocumentSymbols","info","_makeOutlineElement","err","onUnexpectedExternalError","empty","remove","listener","onDidChange","newProvider","cancel","all","isCancellationRequested","create","_compact","finally","res","childInfo","entries","overrideContainerLabel","entry","kind","tags","detail","containerName","selectionRange","createDecorator","OutlineModelService","_languageFeaturesService","debounces","_disposables","DisposableStore","_cache","LRUCache","_debounceInformation","for","documentSymbolProvider","min","add","onModelRemoved","data","versionId","getVersionId","source","promiseCnt","promise","now","Date","outlineModel","update","catch","_err","onCancellationRequested","ILanguageFeaturesService","ILanguageFeatureDebounceService","IModelService","registerSingleton","IEditorCancellationTokens","ctxCancellableOperation","RawContextKey","localize","_tokens","WeakMap","removeFn","invokeWithinContext","bindTo","IContextKeyService","tokens","LinkedList","isEmpty","pop","EditorKeybindingCancellationTokenSource","_unregister","registerEditorCommand","kbOpts","weight","primary","precondition","EditorCommand","EditorState","flags","getModel","modelVersionId","strings","toString","getPosition","scrollLeft","getScrollLeft","scrollTop","getScrollTop","other","state","equalsRange","_equals","EditorStateCancellationTokenSource","_listener","onDidChangeCursorPosition","onDidChangeCursorSelection","onDidScrollChange","_","onDidChangeModel","onDidChangeModelContent","TextModelCancellationTokenSource","onDidChangeContent","FindDecorations","_decorations","_overviewRulerApproximateDecorations","_findScopeDecorationIds","_rangeHighlightDecorationId","_highlightedDecorationId","_startPosition","_allDecorations","getDecorationRange","scopes","findScopeDecorationId","newStartPosition","setCurrentFindMatch","decorationId","indexOf","desiredRange","candidates","getDecorationsInRange","candidateOpts","_FIND_MATCH_DECORATION","_CURRENT_FIND_MATCH_DECORATION","_getDecorationIndex","nextMatch","newCurrentDecorationId","matchPosition","len","changeDecorations","changeAccessor","changeDecorationOptions","removeDecoration","rng","lineBeforeEnd","lineBeforeEndMaxColumn","getLineMaxColumn","addDecoration","_RANGE_HIGHLIGHT_DECORATION","findMatches","findScopes","findMatchesOptions","newOverviewRulerApproximateDecorations","_FIND_MATCH_NO_OVERVIEW_DECORATION","lineCount","getLineCount","approxPixelsPerLine","getLayoutInfo","height","mergeLinesDelta","Math","max","ceil","prevStartLineNumber","prevEndLineNumber","_FIND_MATCH_ONLY_OVERVIEW_DECORATION","newFindMatchesDecorations","Array","forEach","findScope","_FIND_SCOPE_DECORATION","concat","stickiness","zIndex","showIfCollapsed","overviewRuler","color","themeColorFromId","overviewRulerFindMatchForeground","OverviewRulerLane","minimap","minimapFindMatch","MinimapPosition","isWholeLine","ReplaceAllCommand","editorSelection","ranges","replaceStrings","_editorSelection","_ranges","_replaceStrings","_trackedEditorSelectionId","ops","o1","o2","resultOps","previousOp","plusRange","op","trackSelection","getTrackedSelection","StaticValueReplacePattern","staticValue","DynamicPiecesReplacePattern","pieces","ReplacePattern","_state","matches","preserveCase","buildReplaceStringWithCasePreserved","piece","match","_substitute","matchIndex","caseOps","repl","lenOps","opIdx","idx","slice","toUpperCase","toLowerCase","join","ReplacePiece","remainder","String","floor","ReplacePieceBuilder","_source","_lastCharIndex","_result","_resultLen","_currentStaticPiece","toCharIndex","_emitStatic","substring","emitUnchanged","CONTEXT_FIND_WIDGET_VISIBLE","CONTEXT_FIND_INPUT_FOCUSED","toNegated","CONTEXT_REPLACE_INPUT_FOCUSED","ToggleCaseSensitiveKeybinding","mac","ToggleWholeWordKeybinding","ToggleRegexKeybinding","ToggleSearchScopeKeybinding","TogglePreserveCaseKeybinding","FIND_IDS","MATCHES_LIMIT","FindModelBoundToEditorModel","_toDispose","_isDisposed","_startSearchingTimer","TimeoutTimer","_updateDecorationsScheduler","RunOnceScheduler","research","reason","setStartPosition","_ignoreModelContentChanged","isFlush","reset","schedule","onFindReplaceStateChange","_onStateChanged","searchScope","hasModel","searchString","isReplaceRevealed","isRegex","wholeWord","matchCase","isTooLargeForSyncing","setIfNotSet","moveCursor","newFindScope","isArray","getFindScopes","_findMatches","currentMatchesPosition","getCurrentMatchesPosition","matchAfterSelection","findFirstInSorted","changeMatchInfo","getCount","cursorMoveOnType","_moveToNextMatch","matchesCount","_hasMatches","getFindScope","revealRangeInCenterIfOutsideViewport","matchesPosition","setSelection","before","isUsingLineStops","isRecursed","canNavigateBack","prevMatchRange","matchBeforePosition","_prevSearchPosition","_setCurrentFindMatch","_cannotFind","searchRange","_getSearchRange","isBefore","prevMatch","findPreviousMatch","containsRange","_moveToPrevMatch","nextMatchRange","matchAfterPosition","after","canNavigateForward","_nextSearchPosition","_getNextMatch","captureMatches","forceMove","findNextMatch","replaceString","chCode","charCodeAt","nextChCode","emitStatic","emitMatchIndex","nextNextChCode","fromCharCode","finalize","parseReplaceString","fromStaticValue","replacePattern","_getReplacePattern","buildReplaceString","command","ReplaceCommand","_executeEditorCommand","limitResultCount","searchRanges","scope","_largeReplaceAll","_regularReplaceAll","searchData","SearchParams","parseSearchRequest","searchRegex","regex","multiline","mod","ignoreCase","global","RegExp","resultText","modelText","getValue","fullModelRange","getFullModelRange","hasReplacementPatterns","replace","ReplaceCommandThatPreservesSelection","m","selections","FindOptionsWidget","keybindingService","themeService","_hideSoon","_hide","_isVisible","_keybindingService","_domNode","document","createElement","style","display","top","setAttribute","inputActiveOptionBorderColor","getColorTheme","getColor","inputActiveOptionBorder","inputActiveOptionForegroundColor","inputActiveOptionForeground","inputActiveOptionBackgroundColor","inputActiveOptionBackground","caseSensitive","CaseSensitiveCheckbox","appendTitle","_keybindingLabelFor","isChecked","appendChild","domNode","onChange","change","checked","wholeWords","WholeWordsCheckbox","RegexCheckbox","addOverlayWidget","somethingChanged","isRevealed","_revealTemporarily","dom","addDisposableNonBubblingMouseOutListener","_onMouseOut","addDisposableListener","_onMouseOver","_applyTheme","onDidColorThemeChange","bind","actionId","kb","lookupKeybinding","getLabel","removeOverlayWidget","preference","_show","theme","inputStyles","Widget","registerThemingParticipant","collector","widgetBackground","editorWidgetBackground","addRule","widgetForeground","editorWidgetForeground","widgetShadowColor","widgetShadow","hcBorder","contrastBorder","effectiveOptionValue","override","FindReplaceState","_onFindReplaceStateChange","Emitter","_searchString","_replaceString","_isRevealed","_isReplaceRevealed","_isRegex","_isRegexOverride","_wholeWord","_wholeWordOverride","_matchCase","_matchCaseOverride","_preserveCase","_preserveCaseOverride","_searchScope","_matchesPosition","_matchesCount","_currentMatch","_loop","_isSearching","_filters","currentMatch","changeEvent","updateHistory","loop","isSearching","filters","fire","newState","oldEffectiveIsRegex","oldEffectiveWholeWords","oldEffectiveMatchCase","oldEffectivePreserveCase","every","newSearchScope","some","existingSearchScope","isRegexOverride","wholeWordOverride","matchCaseOverride","preserveCaseOverride","canNavigateInLoop","findSelectionIcon","registerIcon","Codicon","nls","findCollapsedIcon","findExpandedIcon","findReplaceIcon","findReplaceAllIcon","findPreviousMatchIcon","findNextMatchIcon","NLS_FIND_INPUT_LABEL","NLS_FIND_INPUT_PLACEHOLDER","NLS_PREVIOUS_MATCH_BTN_LABEL","NLS_NEXT_MATCH_BTN_LABEL","NLS_TOGGLE_SELECTION_FIND_TITLE","NLS_CLOSE_BTN_LABEL","NLS_REPLACE_INPUT_LABEL","NLS_REPLACE_INPUT_PLACEHOLDER","NLS_REPLACE_BTN_LABEL","NLS_REPLACE_ALL_BTN_LABEL","NLS_TOGGLE_REPLACE_MODE_BTN_LABEL","NLS_MATCHES_COUNT_LIMIT_TITLE","NLS_MATCHES_LOCATION","NLS_NO_RESULTS","FIND_WIDGET_INITIAL_WIDTH","MAX_MATCHES_COUNT_WIDTH","ctrlEnterReplaceAllWarningPromptedKey","ctrlKeyMod","platform","FindWidgetViewZone","afterLineNumber","heightInPx","suppressMouseDown","stopPropagationForMultiLineUpwards","textarea","isMultiline","selectionStart","stopPropagation","stopPropagationForMultiLineDownwards","selectionEnd","FindWidget","codeEditor","controller","contextViewProvider","contextKeyService","storageService","notificationService","_cachedHeight","_revealTimeouts","_codeEditor","_controller","_contextViewProvider","_contextKeyService","_storageService","_notificationService","_ctrlEnterReplaceAllWarningPrompted","getBoolean","_isReplaceVisible","_ignoreChangeEvent","_updateHistoryDelayer","Delayer","toDisposable","_buildDomNode","_updateButtons","_tryUpdateWidgetWidth","_findInput","inputBox","layout","onDidChangeConfiguration","hasChanged","updateAccessibilitySupport","addExtraSpaceOnTop","_viewZone","_showViewZone","_removeViewZone","_updateToggleSelectionFindButton","onDidFocusEditorWidget","getGlobalBufferTerm","globalBufferTerm","select","_findInputFocused","_findFocusTracker","trackFocus","inputElement","onDidFocus","_updateSearchScope","onDidBlur","_replaceInputFocused","_replaceFocusTracker","_replaceInput","_viewZoneId","scrollTopChanged","_layoutViewZone","setTimeout","setValue","_reveal","width","getTotalWidth","_tryUpdateHeight","setRegex","setWholeWords","setCaseSensitive","setPreserveCase","_toggleSelectionFind","showRedOutline","classList","toggle","_updateMatchesCount","_delayedUpdateHistory","trigger","_updateHistory","onUnexpectedError","addToHistory","minWidth","title","firstChild","removeChild","createTextNode","alertFn","_getAriaLabel","clientWidth","ariaLabel","lineContent","getLineContent","isSelection","enable","disable","setEnabled","_closeBtn","findInputIsNonEmpty","_prevBtn","_nextBtn","_replaceBtn","_replaceAllBtn","_toggleReplaceBtn","setExpanded","canReplace","clearTimeout","autoFindInSelection","isSelectionMultipleLine","validate","layoutOverlayWidget","adjustEditorScrollTop","seedSearchStringFromSelection","getDomNode","editorCoords","getDomNodePagePosition","startCoords","getScrolledVisiblePosition","startLeft","left","startTop","leftOfFindWidget","getTopLeftOffset","endCoords","focusTheEditor","clearMessage","focus","targetScrollTop","viewZone","changeViewZones","_getHeight","addZone","setScrollTop","adjustScroll","newHeight","scrollAdjustment","layoutZone","removeZone","inputBackground","inputForeground","inputBorder","inputValidationInfoBackground","inputValidationInfoForeground","inputValidationInfoBorder","inputValidationWarningBackground","inputValidationWarningForeground","inputValidationWarningBorder","inputValidationErrorBackground","inputValidationErrorForeground","inputValidationErrorBorder","isInDOM","layoutInfo","contentWidth","contains","editorWidth","minimapWidth","collapsedFindWidget","reducedFindWidget","narrowFindWidget","_resized","maxWidth","findInputWidth","totalheight","totalHeight","highlightFindOptions","setEndPosition","middleButton","dispatchEvent","insertAtCursor","preventDefault","focusOnCaseSensitive","querySelector","store","_sash","ContextScopedFindInput","PART_WIDTH","placeholder","appendCaseSensitiveLabel","appendWholeWordsLabel","appendRegexLabel","validation","getRegex","content","message","flexibleHeight","flexibleWidth","flexibleMaxHeight","showHistoryHint","showHistoryKeybindingHint","_onFindInputKeyDown","onDidOptionChange","getWholeWords","getCaseSensitive","onCaseSensitiveKeyDown","onRegexKeyDown","focusOnPreserve","onDidHeightChange","_onFindInputMouseDown","SimpleButton","icon","onTrigger","getAction","run","findPart","actionsContainer","Checkbox","widgetClose","isEnabled","ContextScopedReplaceInput","appendPreserveCaseLabel","history","_onReplaceInputKeyDown","getPreserveCase","onPreserveCaseKeyDown","enabled","replaceAll","replacePart","replaceActionsContainer","_resizeSash","Sash","orientation","originalWidth","onDidStart","evt","startX","currentX","parseFloat","getComputedStyle","onDidReset","currentWidth","setFocusInputOnOptionClick","opts","_opts","ThemeIcon","tabIndex","onclick","onkeydown","expanded","addBackgroundColorRule","selector","editorFindMatchHighlight","editorFindMatch","editorFindRangeHighlight","findMatchHighlightBorder","editorFindMatchHighlightBorder","findMatchBorder","editorFindMatchBorder","findRangeHighlightBorder","editorFindRangeHighlightBorder","foreground","error","errorForeground","resizeBorderBackground","editorWidgetResizeBorder","border","editorWidgetBorder","toolbarHoverBackgroundColor","toolbarHoverBackground","focusOutline","focusBorder","SEARCH_STRING_MAX_LENGTH","getSelectionSearchString","seedSearchStringFromNonEmptySelection","wordAtPosition","getConfiguredWordAtPosition","word","getValueLengthInRange","CommonFindController","clipboardService","_findWidgetVisible","_clipboardService","loadQueryState","_model","shouldRestartFind","disposeModel","_start","forceRevealReplace","seedSearchStringFromGlobalClipboard","shouldFocus","shouldAnimate","updateSearchScope","saveQueryState","setGlobalBufferTerm","actualIsRegex","actualWholeWord","actualMatchCase","actualPreserveCase","stateChanges","assign","selectionSearchString","currentSelections","moveToNextMatch","moveToPrevMatch","selectAllMatches","globalFindClipboard","readFindText","writeFindText","getContribution","FindController","_contextViewService","_themeService","_widget","_findOptionsWidget","_super","_createFindWidget","call","focusReplaceInput","focusFindInput","ignoreWhenVisible","IStorageService","IClipboardService","IContextViewService","IKeybindingService","IThemeService","INotificationService","StartFindAction","registerMultiEditorAction","MultiEditorAction","alias","ContextKeyExpr","EditorContextKeys","kbExpr","menuOpts","menuId","MenuId","comment","addImplementation","start","findArgDescription","schema","properties","regexOverride","findInSelection","StartFindWithArgsAction","matchWholeWord","isCaseSensitive","getState","EditorAction","StartFindWithSelectionAction","MatchFindAction","_run","NextMatchFindAction","secondary","PreviousMatchFindAction","SelectionMatchFindAction","setSearchString","NextSelectionMatchFindAction","PreviousSelectionMatchFindAction","StartFindReplaceAction","currentSelection","findInputFocused","isFindInputFocused","registerEditorAction","FindCommand","handler","x","closeFindWidget","toggleCaseSensitive","win","linux","toggleWholeWords","toggleRegex","toggleSearchScope","togglePreserveCase"],"sourceRoot":""}