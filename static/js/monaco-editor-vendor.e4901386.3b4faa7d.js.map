{"version":3,"file":"static/js/monaco-editor-vendor.e4901386.3b4faa7d.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/base/common/buffer.js","../node_modules/monaco-editor/esm/vs/base/common/cache.js","../node_modules/monaco-editor/esm/vs/base/common/cancellation.js","../node_modules/monaco-editor/esm/vs/base/common/codiconsLibrary.js","../node_modules/monaco-editor/esm/vs/base/common/codicons.js","../node_modules/monaco-editor/esm/vs/base/common/codiconsUtil.js","../node_modules/monaco-editor/esm/vs/base/common/collections.js","../node_modules/monaco-editor/esm/vs/base/common/color.js","../node_modules/monaco-editor/esm/vs/base/common/comparers.js","../node_modules/monaco-editor/esm/vs/base/common/dataTransfer.js","../node_modules/monaco-editor/esm/vs/base/common/decorators.js","../node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js","../node_modules/monaco-editor/esm/vs/base/common/diff/diff.js","../node_modules/monaco-editor/esm/vs/base/common/equals.js","../node_modules/monaco-editor/esm/vs/base/common/errorMessage.js","../node_modules/monaco-editor/esm/vs/base/common/errors.js","../node_modules/monaco-editor/esm/vs/base/common/event.js","../node_modules/monaco-editor/esm/vs/base/common/extpath.js","../node_modules/monaco-editor/esm/vs/base/common/filters.js","../node_modules/monaco-editor/esm/vs/base/common/functional.js","../node_modules/monaco-editor/esm/vs/base/common/fuzzyScorer.js","../node_modules/monaco-editor/esm/vs/base/common/glob.js","../node_modules/monaco-editor/esm/vs/base/common/hash.js","../node_modules/monaco-editor/esm/vs/base/common/hierarchicalKind.js","../node_modules/monaco-editor/esm/vs/base/common/history.js","../node_modules/monaco-editor/esm/vs/base/common/hotReload.js","../node_modules/monaco-editor/esm/vs/base/common/htmlContent.js","../node_modules/monaco-editor/esm/vs/base/common/iconLabels.js","../node_modules/monaco-editor/esm/vs/base/common/idGenerator.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Lazy } from './lazy.js';\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst indexOfTable = new Lazy(() => new Uint8Array(256));\nlet textDecoder;\nexport class VSBuffer {\n    /**\n     * When running in a nodejs context, if `actual` is not a nodejs Buffer, the backing store for\n     * the returned `VSBuffer` instance might use a nodejs Buffer allocated from node's Buffer pool,\n     * which is not transferrable.\n     */\n    static wrap(actual) {\n        if (hasBuffer && !(Buffer.isBuffer(actual))) {\n            // https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n            // Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n            actual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n        }\n        return new VSBuffer(actual);\n    }\n    constructor(buffer) {\n        this.buffer = buffer;\n        this.byteLength = this.buffer.byteLength;\n    }\n    toString() {\n        if (hasBuffer) {\n            return this.buffer.toString();\n        }\n        else {\n            if (!textDecoder) {\n                textDecoder = new TextDecoder();\n            }\n            return textDecoder.decode(this.buffer);\n        }\n    }\n}\nexport function readUInt16LE(source, offset) {\n    return (((source[offset + 0] << 0) >>> 0) |\n        ((source[offset + 1] << 8) >>> 0));\n}\nexport function writeUInt16LE(destination, value, offset) {\n    destination[offset + 0] = (value & 0b11111111);\n    value = value >>> 8;\n    destination[offset + 1] = (value & 0b11111111);\n}\nexport function readUInt32BE(source, offset) {\n    return (source[offset] * 2 ** 24\n        + source[offset + 1] * 2 ** 16\n        + source[offset + 2] * 2 ** 8\n        + source[offset + 3]);\n}\nexport function writeUInt32BE(destination, value, offset) {\n    destination[offset + 3] = value;\n    value = value >>> 8;\n    destination[offset + 2] = value;\n    value = value >>> 8;\n    destination[offset + 1] = value;\n    value = value >>> 8;\n    destination[offset] = value;\n}\nexport function readUInt8(source, offset) {\n    return source[offset];\n}\nexport function writeUInt8(destination, value, offset) {\n    destination[offset] = value;\n}\n","export function identity(t) {\n    return t;\n}\n/**\n * Uses a LRU cache to make a given parametrized function cached.\n * Caches just the last key/value.\n*/\nexport class LRUCachedFunction {\n    constructor(arg1, arg2) {\n        this.lastCache = undefined;\n        this.lastArgKey = undefined;\n        if (typeof arg1 === 'function') {\n            this._fn = arg1;\n            this._computeKey = identity;\n        }\n        else {\n            this._fn = arg2;\n            this._computeKey = arg1.getCacheKey;\n        }\n    }\n    get(arg) {\n        const key = this._computeKey(arg);\n        if (this.lastArgKey !== key) {\n            this.lastArgKey = key;\n            this.lastCache = this._fn(arg);\n        }\n        return this.lastCache;\n    }\n}\n/**\n * Uses an unbounded cache to memoize the results of the given function.\n*/\nexport class CachedFunction {\n    get cachedValues() {\n        return this._map;\n    }\n    constructor(arg1, arg2) {\n        this._map = new Map();\n        this._map2 = new Map();\n        if (typeof arg1 === 'function') {\n            this._fn = arg1;\n            this._computeKey = identity;\n        }\n        else {\n            this._fn = arg2;\n            this._computeKey = arg1.getCacheKey;\n        }\n    }\n    get(arg) {\n        const key = this._computeKey(arg);\n        if (this._map2.has(key)) {\n            return this._map2.get(key);\n        }\n        const value = this._fn(arg);\n        this._map.set(arg, value);\n        this._map2.set(key, value);\n        return value;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter, Event } from './event.js';\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = setTimeout(callback.bind(context), 0);\n    return { dispose() { clearTimeout(handle); } };\n});\nexport var CancellationToken;\n(function (CancellationToken) {\n    function isCancellationToken(thing) {\n        if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n            return true;\n        }\n        if (thing instanceof MutableToken) {\n            return true;\n        }\n        if (!thing || typeof thing !== 'object') {\n            return false;\n        }\n        return typeof thing.isCancellationRequested === 'boolean'\n            && typeof thing.onCancellationRequested === 'function';\n    }\n    CancellationToken.isCancellationToken = isCancellationToken;\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    });\n})(CancellationToken || (CancellationToken = {}));\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n        this._emitter = null;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = null;\n        }\n    }\n}\nexport class CancellationTokenSource {\n    constructor(parent) {\n        this._token = undefined;\n        this._parentListener = undefined;\n        this._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n    }\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually cancel\n            this._token.cancel();\n        }\n    }\n    dispose(cancel = false) {\n        var _a;\n        if (cancel) {\n            this.cancel();\n        }\n        (_a = this._parentListener) === null || _a === void 0 ? void 0 : _a.dispose();\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\nexport function cancelOnDispose(store) {\n    const source = new CancellationTokenSource();\n    store.add({ dispose() { source.cancel(); } });\n    return source.token;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { register } from './codiconsUtil.js';\n// This file is automatically generated by (microsoft/vscode-codicons)/scripts/export-to-ts.js\n// Please don't edit it, as your changes will be overwritten.\n// Instead, add mappings to codiconsDerived in codicons.ts.\nexport const codiconsLibrary = {\n    add: register('add', 0xea60),\n    plus: register('plus', 0xea60),\n    gistNew: register('gist-new', 0xea60),\n    repoCreate: register('repo-create', 0xea60),\n    lightbulb: register('lightbulb', 0xea61),\n    lightBulb: register('light-bulb', 0xea61),\n    repo: register('repo', 0xea62),\n    repoDelete: register('repo-delete', 0xea62),\n    gistFork: register('gist-fork', 0xea63),\n    repoForked: register('repo-forked', 0xea63),\n    gitPullRequest: register('git-pull-request', 0xea64),\n    gitPullRequestAbandoned: register('git-pull-request-abandoned', 0xea64),\n    recordKeys: register('record-keys', 0xea65),\n    keyboard: register('keyboard', 0xea65),\n    tag: register('tag', 0xea66),\n    gitPullRequestLabel: register('git-pull-request-label', 0xea66),\n    tagAdd: register('tag-add', 0xea66),\n    tagRemove: register('tag-remove', 0xea66),\n    person: register('person', 0xea67),\n    personFollow: register('person-follow', 0xea67),\n    personOutline: register('person-outline', 0xea67),\n    personFilled: register('person-filled', 0xea67),\n    gitBranch: register('git-branch', 0xea68),\n    gitBranchCreate: register('git-branch-create', 0xea68),\n    gitBranchDelete: register('git-branch-delete', 0xea68),\n    sourceControl: register('source-control', 0xea68),\n    mirror: register('mirror', 0xea69),\n    mirrorPublic: register('mirror-public', 0xea69),\n    star: register('star', 0xea6a),\n    starAdd: register('star-add', 0xea6a),\n    starDelete: register('star-delete', 0xea6a),\n    starEmpty: register('star-empty', 0xea6a),\n    comment: register('comment', 0xea6b),\n    commentAdd: register('comment-add', 0xea6b),\n    alert: register('alert', 0xea6c),\n    warning: register('warning', 0xea6c),\n    search: register('search', 0xea6d),\n    searchSave: register('search-save', 0xea6d),\n    logOut: register('log-out', 0xea6e),\n    signOut: register('sign-out', 0xea6e),\n    logIn: register('log-in', 0xea6f),\n    signIn: register('sign-in', 0xea6f),\n    eye: register('eye', 0xea70),\n    eyeUnwatch: register('eye-unwatch', 0xea70),\n    eyeWatch: register('eye-watch', 0xea70),\n    circleFilled: register('circle-filled', 0xea71),\n    primitiveDot: register('primitive-dot', 0xea71),\n    closeDirty: register('close-dirty', 0xea71),\n    debugBreakpoint: register('debug-breakpoint', 0xea71),\n    debugBreakpointDisabled: register('debug-breakpoint-disabled', 0xea71),\n    debugHint: register('debug-hint', 0xea71),\n    terminalDecorationSuccess: register('terminal-decoration-success', 0xea71),\n    primitiveSquare: register('primitive-square', 0xea72),\n    edit: register('edit', 0xea73),\n    pencil: register('pencil', 0xea73),\n    info: register('info', 0xea74),\n    issueOpened: register('issue-opened', 0xea74),\n    gistPrivate: register('gist-private', 0xea75),\n    gitForkPrivate: register('git-fork-private', 0xea75),\n    lock: register('lock', 0xea75),\n    mirrorPrivate: register('mirror-private', 0xea75),\n    close: register('close', 0xea76),\n    removeClose: register('remove-close', 0xea76),\n    x: register('x', 0xea76),\n    repoSync: register('repo-sync', 0xea77),\n    sync: register('sync', 0xea77),\n    clone: register('clone', 0xea78),\n    desktopDownload: register('desktop-download', 0xea78),\n    beaker: register('beaker', 0xea79),\n    microscope: register('microscope', 0xea79),\n    vm: register('vm', 0xea7a),\n    deviceDesktop: register('device-desktop', 0xea7a),\n    file: register('file', 0xea7b),\n    fileText: register('file-text', 0xea7b),\n    more: register('more', 0xea7c),\n    ellipsis: register('ellipsis', 0xea7c),\n    kebabHorizontal: register('kebab-horizontal', 0xea7c),\n    mailReply: register('mail-reply', 0xea7d),\n    reply: register('reply', 0xea7d),\n    organization: register('organization', 0xea7e),\n    organizationFilled: register('organization-filled', 0xea7e),\n    organizationOutline: register('organization-outline', 0xea7e),\n    newFile: register('new-file', 0xea7f),\n    fileAdd: register('file-add', 0xea7f),\n    newFolder: register('new-folder', 0xea80),\n    fileDirectoryCreate: register('file-directory-create', 0xea80),\n    trash: register('trash', 0xea81),\n    trashcan: register('trashcan', 0xea81),\n    history: register('history', 0xea82),\n    clock: register('clock', 0xea82),\n    folder: register('folder', 0xea83),\n    fileDirectory: register('file-directory', 0xea83),\n    symbolFolder: register('symbol-folder', 0xea83),\n    logoGithub: register('logo-github', 0xea84),\n    markGithub: register('mark-github', 0xea84),\n    github: register('github', 0xea84),\n    terminal: register('terminal', 0xea85),\n    console: register('console', 0xea85),\n    repl: register('repl', 0xea85),\n    zap: register('zap', 0xea86),\n    symbolEvent: register('symbol-event', 0xea86),\n    error: register('error', 0xea87),\n    stop: register('stop', 0xea87),\n    variable: register('variable', 0xea88),\n    symbolVariable: register('symbol-variable', 0xea88),\n    array: register('array', 0xea8a),\n    symbolArray: register('symbol-array', 0xea8a),\n    symbolModule: register('symbol-module', 0xea8b),\n    symbolPackage: register('symbol-package', 0xea8b),\n    symbolNamespace: register('symbol-namespace', 0xea8b),\n    symbolObject: register('symbol-object', 0xea8b),\n    symbolMethod: register('symbol-method', 0xea8c),\n    symbolFunction: register('symbol-function', 0xea8c),\n    symbolConstructor: register('symbol-constructor', 0xea8c),\n    symbolBoolean: register('symbol-boolean', 0xea8f),\n    symbolNull: register('symbol-null', 0xea8f),\n    symbolNumeric: register('symbol-numeric', 0xea90),\n    symbolNumber: register('symbol-number', 0xea90),\n    symbolStructure: register('symbol-structure', 0xea91),\n    symbolStruct: register('symbol-struct', 0xea91),\n    symbolParameter: register('symbol-parameter', 0xea92),\n    symbolTypeParameter: register('symbol-type-parameter', 0xea92),\n    symbolKey: register('symbol-key', 0xea93),\n    symbolText: register('symbol-text', 0xea93),\n    symbolReference: register('symbol-reference', 0xea94),\n    goToFile: register('go-to-file', 0xea94),\n    symbolEnum: register('symbol-enum', 0xea95),\n    symbolValue: register('symbol-value', 0xea95),\n    symbolRuler: register('symbol-ruler', 0xea96),\n    symbolUnit: register('symbol-unit', 0xea96),\n    activateBreakpoints: register('activate-breakpoints', 0xea97),\n    archive: register('archive', 0xea98),\n    arrowBoth: register('arrow-both', 0xea99),\n    arrowDown: register('arrow-down', 0xea9a),\n    arrowLeft: register('arrow-left', 0xea9b),\n    arrowRight: register('arrow-right', 0xea9c),\n    arrowSmallDown: register('arrow-small-down', 0xea9d),\n    arrowSmallLeft: register('arrow-small-left', 0xea9e),\n    arrowSmallRight: register('arrow-small-right', 0xea9f),\n    arrowSmallUp: register('arrow-small-up', 0xeaa0),\n    arrowUp: register('arrow-up', 0xeaa1),\n    bell: register('bell', 0xeaa2),\n    bold: register('bold', 0xeaa3),\n    book: register('book', 0xeaa4),\n    bookmark: register('bookmark', 0xeaa5),\n    debugBreakpointConditionalUnverified: register('debug-breakpoint-conditional-unverified', 0xeaa6),\n    debugBreakpointConditional: register('debug-breakpoint-conditional', 0xeaa7),\n    debugBreakpointConditionalDisabled: register('debug-breakpoint-conditional-disabled', 0xeaa7),\n    debugBreakpointDataUnverified: register('debug-breakpoint-data-unverified', 0xeaa8),\n    debugBreakpointData: register('debug-breakpoint-data', 0xeaa9),\n    debugBreakpointDataDisabled: register('debug-breakpoint-data-disabled', 0xeaa9),\n    debugBreakpointLogUnverified: register('debug-breakpoint-log-unverified', 0xeaaa),\n    debugBreakpointLog: register('debug-breakpoint-log', 0xeaab),\n    debugBreakpointLogDisabled: register('debug-breakpoint-log-disabled', 0xeaab),\n    briefcase: register('briefcase', 0xeaac),\n    broadcast: register('broadcast', 0xeaad),\n    browser: register('browser', 0xeaae),\n    bug: register('bug', 0xeaaf),\n    calendar: register('calendar', 0xeab0),\n    caseSensitive: register('case-sensitive', 0xeab1),\n    check: register('check', 0xeab2),\n    checklist: register('checklist', 0xeab3),\n    chevronDown: register('chevron-down', 0xeab4),\n    chevronLeft: register('chevron-left', 0xeab5),\n    chevronRight: register('chevron-right', 0xeab6),\n    chevronUp: register('chevron-up', 0xeab7),\n    chromeClose: register('chrome-close', 0xeab8),\n    chromeMaximize: register('chrome-maximize', 0xeab9),\n    chromeMinimize: register('chrome-minimize', 0xeaba),\n    chromeRestore: register('chrome-restore', 0xeabb),\n    circleOutline: register('circle-outline', 0xeabc),\n    circle: register('circle', 0xeabc),\n    debugBreakpointUnverified: register('debug-breakpoint-unverified', 0xeabc),\n    terminalDecorationIncomplete: register('terminal-decoration-incomplete', 0xeabc),\n    circleSlash: register('circle-slash', 0xeabd),\n    circuitBoard: register('circuit-board', 0xeabe),\n    clearAll: register('clear-all', 0xeabf),\n    clippy: register('clippy', 0xeac0),\n    closeAll: register('close-all', 0xeac1),\n    cloudDownload: register('cloud-download', 0xeac2),\n    cloudUpload: register('cloud-upload', 0xeac3),\n    code: register('code', 0xeac4),\n    collapseAll: register('collapse-all', 0xeac5),\n    colorMode: register('color-mode', 0xeac6),\n    commentDiscussion: register('comment-discussion', 0xeac7),\n    creditCard: register('credit-card', 0xeac9),\n    dash: register('dash', 0xeacc),\n    dashboard: register('dashboard', 0xeacd),\n    database: register('database', 0xeace),\n    debugContinue: register('debug-continue', 0xeacf),\n    debugDisconnect: register('debug-disconnect', 0xead0),\n    debugPause: register('debug-pause', 0xead1),\n    debugRestart: register('debug-restart', 0xead2),\n    debugStart: register('debug-start', 0xead3),\n    debugStepInto: register('debug-step-into', 0xead4),\n    debugStepOut: register('debug-step-out', 0xead5),\n    debugStepOver: register('debug-step-over', 0xead6),\n    debugStop: register('debug-stop', 0xead7),\n    debug: register('debug', 0xead8),\n    deviceCameraVideo: register('device-camera-video', 0xead9),\n    deviceCamera: register('device-camera', 0xeada),\n    deviceMobile: register('device-mobile', 0xeadb),\n    diffAdded: register('diff-added', 0xeadc),\n    diffIgnored: register('diff-ignored', 0xeadd),\n    diffModified: register('diff-modified', 0xeade),\n    diffRemoved: register('diff-removed', 0xeadf),\n    diffRenamed: register('diff-renamed', 0xeae0),\n    diff: register('diff', 0xeae1),\n    diffSidebyside: register('diff-sidebyside', 0xeae1),\n    discard: register('discard', 0xeae2),\n    editorLayout: register('editor-layout', 0xeae3),\n    emptyWindow: register('empty-window', 0xeae4),\n    exclude: register('exclude', 0xeae5),\n    extensions: register('extensions', 0xeae6),\n    eyeClosed: register('eye-closed', 0xeae7),\n    fileBinary: register('file-binary', 0xeae8),\n    fileCode: register('file-code', 0xeae9),\n    fileMedia: register('file-media', 0xeaea),\n    filePdf: register('file-pdf', 0xeaeb),\n    fileSubmodule: register('file-submodule', 0xeaec),\n    fileSymlinkDirectory: register('file-symlink-directory', 0xeaed),\n    fileSymlinkFile: register('file-symlink-file', 0xeaee),\n    fileZip: register('file-zip', 0xeaef),\n    files: register('files', 0xeaf0),\n    filter: register('filter', 0xeaf1),\n    flame: register('flame', 0xeaf2),\n    foldDown: register('fold-down', 0xeaf3),\n    foldUp: register('fold-up', 0xeaf4),\n    fold: register('fold', 0xeaf5),\n    folderActive: register('folder-active', 0xeaf6),\n    folderOpened: register('folder-opened', 0xeaf7),\n    gear: register('gear', 0xeaf8),\n    gift: register('gift', 0xeaf9),\n    gistSecret: register('gist-secret', 0xeafa),\n    gist: register('gist', 0xeafb),\n    gitCommit: register('git-commit', 0xeafc),\n    gitCompare: register('git-compare', 0xeafd),\n    compareChanges: register('compare-changes', 0xeafd),\n    gitMerge: register('git-merge', 0xeafe),\n    githubAction: register('github-action', 0xeaff),\n    githubAlt: register('github-alt', 0xeb00),\n    globe: register('globe', 0xeb01),\n    grabber: register('grabber', 0xeb02),\n    graph: register('graph', 0xeb03),\n    gripper: register('gripper', 0xeb04),\n    heart: register('heart', 0xeb05),\n    home: register('home', 0xeb06),\n    horizontalRule: register('horizontal-rule', 0xeb07),\n    hubot: register('hubot', 0xeb08),\n    inbox: register('inbox', 0xeb09),\n    issueReopened: register('issue-reopened', 0xeb0b),\n    issues: register('issues', 0xeb0c),\n    italic: register('italic', 0xeb0d),\n    jersey: register('jersey', 0xeb0e),\n    json: register('json', 0xeb0f),\n    kebabVertical: register('kebab-vertical', 0xeb10),\n    key: register('key', 0xeb11),\n    law: register('law', 0xeb12),\n    lightbulbAutofix: register('lightbulb-autofix', 0xeb13),\n    linkExternal: register('link-external', 0xeb14),\n    link: register('link', 0xeb15),\n    listOrdered: register('list-ordered', 0xeb16),\n    listUnordered: register('list-unordered', 0xeb17),\n    liveShare: register('live-share', 0xeb18),\n    loading: register('loading', 0xeb19),\n    location: register('location', 0xeb1a),\n    mailRead: register('mail-read', 0xeb1b),\n    mail: register('mail', 0xeb1c),\n    markdown: register('markdown', 0xeb1d),\n    megaphone: register('megaphone', 0xeb1e),\n    mention: register('mention', 0xeb1f),\n    milestone: register('milestone', 0xeb20),\n    gitPullRequestMilestone: register('git-pull-request-milestone', 0xeb20),\n    mortarBoard: register('mortar-board', 0xeb21),\n    move: register('move', 0xeb22),\n    multipleWindows: register('multiple-windows', 0xeb23),\n    mute: register('mute', 0xeb24),\n    noNewline: register('no-newline', 0xeb25),\n    note: register('note', 0xeb26),\n    octoface: register('octoface', 0xeb27),\n    openPreview: register('open-preview', 0xeb28),\n    package: register('package', 0xeb29),\n    paintcan: register('paintcan', 0xeb2a),\n    pin: register('pin', 0xeb2b),\n    play: register('play', 0xeb2c),\n    run: register('run', 0xeb2c),\n    plug: register('plug', 0xeb2d),\n    preserveCase: register('preserve-case', 0xeb2e),\n    preview: register('preview', 0xeb2f),\n    project: register('project', 0xeb30),\n    pulse: register('pulse', 0xeb31),\n    question: register('question', 0xeb32),\n    quote: register('quote', 0xeb33),\n    radioTower: register('radio-tower', 0xeb34),\n    reactions: register('reactions', 0xeb35),\n    references: register('references', 0xeb36),\n    refresh: register('refresh', 0xeb37),\n    regex: register('regex', 0xeb38),\n    remoteExplorer: register('remote-explorer', 0xeb39),\n    remote: register('remote', 0xeb3a),\n    remove: register('remove', 0xeb3b),\n    replaceAll: register('replace-all', 0xeb3c),\n    replace: register('replace', 0xeb3d),\n    repoClone: register('repo-clone', 0xeb3e),\n    repoForcePush: register('repo-force-push', 0xeb3f),\n    repoPull: register('repo-pull', 0xeb40),\n    repoPush: register('repo-push', 0xeb41),\n    report: register('report', 0xeb42),\n    requestChanges: register('request-changes', 0xeb43),\n    rocket: register('rocket', 0xeb44),\n    rootFolderOpened: register('root-folder-opened', 0xeb45),\n    rootFolder: register('root-folder', 0xeb46),\n    rss: register('rss', 0xeb47),\n    ruby: register('ruby', 0xeb48),\n    saveAll: register('save-all', 0xeb49),\n    saveAs: register('save-as', 0xeb4a),\n    save: register('save', 0xeb4b),\n    screenFull: register('screen-full', 0xeb4c),\n    screenNormal: register('screen-normal', 0xeb4d),\n    searchStop: register('search-stop', 0xeb4e),\n    server: register('server', 0xeb50),\n    settingsGear: register('settings-gear', 0xeb51),\n    settings: register('settings', 0xeb52),\n    shield: register('shield', 0xeb53),\n    smiley: register('smiley', 0xeb54),\n    sortPrecedence: register('sort-precedence', 0xeb55),\n    splitHorizontal: register('split-horizontal', 0xeb56),\n    splitVertical: register('split-vertical', 0xeb57),\n    squirrel: register('squirrel', 0xeb58),\n    starFull: register('star-full', 0xeb59),\n    starHalf: register('star-half', 0xeb5a),\n    symbolClass: register('symbol-class', 0xeb5b),\n    symbolColor: register('symbol-color', 0xeb5c),\n    symbolConstant: register('symbol-constant', 0xeb5d),\n    symbolEnumMember: register('symbol-enum-member', 0xeb5e),\n    symbolField: register('symbol-field', 0xeb5f),\n    symbolFile: register('symbol-file', 0xeb60),\n    symbolInterface: register('symbol-interface', 0xeb61),\n    symbolKeyword: register('symbol-keyword', 0xeb62),\n    symbolMisc: register('symbol-misc', 0xeb63),\n    symbolOperator: register('symbol-operator', 0xeb64),\n    symbolProperty: register('symbol-property', 0xeb65),\n    wrench: register('wrench', 0xeb65),\n    wrenchSubaction: register('wrench-subaction', 0xeb65),\n    symbolSnippet: register('symbol-snippet', 0xeb66),\n    tasklist: register('tasklist', 0xeb67),\n    telescope: register('telescope', 0xeb68),\n    textSize: register('text-size', 0xeb69),\n    threeBars: register('three-bars', 0xeb6a),\n    thumbsdown: register('thumbsdown', 0xeb6b),\n    thumbsup: register('thumbsup', 0xeb6c),\n    tools: register('tools', 0xeb6d),\n    triangleDown: register('triangle-down', 0xeb6e),\n    triangleLeft: register('triangle-left', 0xeb6f),\n    triangleRight: register('triangle-right', 0xeb70),\n    triangleUp: register('triangle-up', 0xeb71),\n    twitter: register('twitter', 0xeb72),\n    unfold: register('unfold', 0xeb73),\n    unlock: register('unlock', 0xeb74),\n    unmute: register('unmute', 0xeb75),\n    unverified: register('unverified', 0xeb76),\n    verified: register('verified', 0xeb77),\n    versions: register('versions', 0xeb78),\n    vmActive: register('vm-active', 0xeb79),\n    vmOutline: register('vm-outline', 0xeb7a),\n    vmRunning: register('vm-running', 0xeb7b),\n    watch: register('watch', 0xeb7c),\n    whitespace: register('whitespace', 0xeb7d),\n    wholeWord: register('whole-word', 0xeb7e),\n    window: register('window', 0xeb7f),\n    wordWrap: register('word-wrap', 0xeb80),\n    zoomIn: register('zoom-in', 0xeb81),\n    zoomOut: register('zoom-out', 0xeb82),\n    listFilter: register('list-filter', 0xeb83),\n    listFlat: register('list-flat', 0xeb84),\n    listSelection: register('list-selection', 0xeb85),\n    selection: register('selection', 0xeb85),\n    listTree: register('list-tree', 0xeb86),\n    debugBreakpointFunctionUnverified: register('debug-breakpoint-function-unverified', 0xeb87),\n    debugBreakpointFunction: register('debug-breakpoint-function', 0xeb88),\n    debugBreakpointFunctionDisabled: register('debug-breakpoint-function-disabled', 0xeb88),\n    debugStackframeActive: register('debug-stackframe-active', 0xeb89),\n    circleSmallFilled: register('circle-small-filled', 0xeb8a),\n    debugStackframeDot: register('debug-stackframe-dot', 0xeb8a),\n    terminalDecorationMark: register('terminal-decoration-mark', 0xeb8a),\n    debugStackframe: register('debug-stackframe', 0xeb8b),\n    debugStackframeFocused: register('debug-stackframe-focused', 0xeb8b),\n    debugBreakpointUnsupported: register('debug-breakpoint-unsupported', 0xeb8c),\n    symbolString: register('symbol-string', 0xeb8d),\n    debugReverseContinue: register('debug-reverse-continue', 0xeb8e),\n    debugStepBack: register('debug-step-back', 0xeb8f),\n    debugRestartFrame: register('debug-restart-frame', 0xeb90),\n    debugAlt: register('debug-alt', 0xeb91),\n    callIncoming: register('call-incoming', 0xeb92),\n    callOutgoing: register('call-outgoing', 0xeb93),\n    menu: register('menu', 0xeb94),\n    expandAll: register('expand-all', 0xeb95),\n    feedback: register('feedback', 0xeb96),\n    gitPullRequestReviewer: register('git-pull-request-reviewer', 0xeb96),\n    groupByRefType: register('group-by-ref-type', 0xeb97),\n    ungroupByRefType: register('ungroup-by-ref-type', 0xeb98),\n    account: register('account', 0xeb99),\n    gitPullRequestAssignee: register('git-pull-request-assignee', 0xeb99),\n    bellDot: register('bell-dot', 0xeb9a),\n    debugConsole: register('debug-console', 0xeb9b),\n    library: register('library', 0xeb9c),\n    output: register('output', 0xeb9d),\n    runAll: register('run-all', 0xeb9e),\n    syncIgnored: register('sync-ignored', 0xeb9f),\n    pinned: register('pinned', 0xeba0),\n    githubInverted: register('github-inverted', 0xeba1),\n    serverProcess: register('server-process', 0xeba2),\n    serverEnvironment: register('server-environment', 0xeba3),\n    pass: register('pass', 0xeba4),\n    issueClosed: register('issue-closed', 0xeba4),\n    stopCircle: register('stop-circle', 0xeba5),\n    playCircle: register('play-circle', 0xeba6),\n    record: register('record', 0xeba7),\n    debugAltSmall: register('debug-alt-small', 0xeba8),\n    vmConnect: register('vm-connect', 0xeba9),\n    cloud: register('cloud', 0xebaa),\n    merge: register('merge', 0xebab),\n    export: register('export', 0xebac),\n    graphLeft: register('graph-left', 0xebad),\n    magnet: register('magnet', 0xebae),\n    notebook: register('notebook', 0xebaf),\n    redo: register('redo', 0xebb0),\n    checkAll: register('check-all', 0xebb1),\n    pinnedDirty: register('pinned-dirty', 0xebb2),\n    passFilled: register('pass-filled', 0xebb3),\n    circleLargeFilled: register('circle-large-filled', 0xebb4),\n    circleLarge: register('circle-large', 0xebb5),\n    circleLargeOutline: register('circle-large-outline', 0xebb5),\n    combine: register('combine', 0xebb6),\n    gather: register('gather', 0xebb6),\n    table: register('table', 0xebb7),\n    variableGroup: register('variable-group', 0xebb8),\n    typeHierarchy: register('type-hierarchy', 0xebb9),\n    typeHierarchySub: register('type-hierarchy-sub', 0xebba),\n    typeHierarchySuper: register('type-hierarchy-super', 0xebbb),\n    gitPullRequestCreate: register('git-pull-request-create', 0xebbc),\n    runAbove: register('run-above', 0xebbd),\n    runBelow: register('run-below', 0xebbe),\n    notebookTemplate: register('notebook-template', 0xebbf),\n    debugRerun: register('debug-rerun', 0xebc0),\n    workspaceTrusted: register('workspace-trusted', 0xebc1),\n    workspaceUntrusted: register('workspace-untrusted', 0xebc2),\n    workspaceUnknown: register('workspace-unknown', 0xebc3),\n    terminalCmd: register('terminal-cmd', 0xebc4),\n    terminalDebian: register('terminal-debian', 0xebc5),\n    terminalLinux: register('terminal-linux', 0xebc6),\n    terminalPowershell: register('terminal-powershell', 0xebc7),\n    terminalTmux: register('terminal-tmux', 0xebc8),\n    terminalUbuntu: register('terminal-ubuntu', 0xebc9),\n    terminalBash: register('terminal-bash', 0xebca),\n    arrowSwap: register('arrow-swap', 0xebcb),\n    copy: register('copy', 0xebcc),\n    personAdd: register('person-add', 0xebcd),\n    filterFilled: register('filter-filled', 0xebce),\n    wand: register('wand', 0xebcf),\n    debugLineByLine: register('debug-line-by-line', 0xebd0),\n    inspect: register('inspect', 0xebd1),\n    layers: register('layers', 0xebd2),\n    layersDot: register('layers-dot', 0xebd3),\n    layersActive: register('layers-active', 0xebd4),\n    compass: register('compass', 0xebd5),\n    compassDot: register('compass-dot', 0xebd6),\n    compassActive: register('compass-active', 0xebd7),\n    azure: register('azure', 0xebd8),\n    issueDraft: register('issue-draft', 0xebd9),\n    gitPullRequestClosed: register('git-pull-request-closed', 0xebda),\n    gitPullRequestDraft: register('git-pull-request-draft', 0xebdb),\n    debugAll: register('debug-all', 0xebdc),\n    debugCoverage: register('debug-coverage', 0xebdd),\n    runErrors: register('run-errors', 0xebde),\n    folderLibrary: register('folder-library', 0xebdf),\n    debugContinueSmall: register('debug-continue-small', 0xebe0),\n    beakerStop: register('beaker-stop', 0xebe1),\n    graphLine: register('graph-line', 0xebe2),\n    graphScatter: register('graph-scatter', 0xebe3),\n    pieChart: register('pie-chart', 0xebe4),\n    bracket: register('bracket', 0xeb0f),\n    bracketDot: register('bracket-dot', 0xebe5),\n    bracketError: register('bracket-error', 0xebe6),\n    lockSmall: register('lock-small', 0xebe7),\n    azureDevops: register('azure-devops', 0xebe8),\n    verifiedFilled: register('verified-filled', 0xebe9),\n    newline: register('newline', 0xebea),\n    layout: register('layout', 0xebeb),\n    layoutActivitybarLeft: register('layout-activitybar-left', 0xebec),\n    layoutActivitybarRight: register('layout-activitybar-right', 0xebed),\n    layoutPanelLeft: register('layout-panel-left', 0xebee),\n    layoutPanelCenter: register('layout-panel-center', 0xebef),\n    layoutPanelJustify: register('layout-panel-justify', 0xebf0),\n    layoutPanelRight: register('layout-panel-right', 0xebf1),\n    layoutPanel: register('layout-panel', 0xebf2),\n    layoutSidebarLeft: register('layout-sidebar-left', 0xebf3),\n    layoutSidebarRight: register('layout-sidebar-right', 0xebf4),\n    layoutStatusbar: register('layout-statusbar', 0xebf5),\n    layoutMenubar: register('layout-menubar', 0xebf6),\n    layoutCentered: register('layout-centered', 0xebf7),\n    target: register('target', 0xebf8),\n    indent: register('indent', 0xebf9),\n    recordSmall: register('record-small', 0xebfa),\n    errorSmall: register('error-small', 0xebfb),\n    terminalDecorationError: register('terminal-decoration-error', 0xebfb),\n    arrowCircleDown: register('arrow-circle-down', 0xebfc),\n    arrowCircleLeft: register('arrow-circle-left', 0xebfd),\n    arrowCircleRight: register('arrow-circle-right', 0xebfe),\n    arrowCircleUp: register('arrow-circle-up', 0xebff),\n    layoutSidebarRightOff: register('layout-sidebar-right-off', 0xec00),\n    layoutPanelOff: register('layout-panel-off', 0xec01),\n    layoutSidebarLeftOff: register('layout-sidebar-left-off', 0xec02),\n    blank: register('blank', 0xec03),\n    heartFilled: register('heart-filled', 0xec04),\n    map: register('map', 0xec05),\n    mapHorizontal: register('map-horizontal', 0xec05),\n    foldHorizontal: register('fold-horizontal', 0xec05),\n    mapFilled: register('map-filled', 0xec06),\n    mapHorizontalFilled: register('map-horizontal-filled', 0xec06),\n    foldHorizontalFilled: register('fold-horizontal-filled', 0xec06),\n    circleSmall: register('circle-small', 0xec07),\n    bellSlash: register('bell-slash', 0xec08),\n    bellSlashDot: register('bell-slash-dot', 0xec09),\n    commentUnresolved: register('comment-unresolved', 0xec0a),\n    gitPullRequestGoToChanges: register('git-pull-request-go-to-changes', 0xec0b),\n    gitPullRequestNewChanges: register('git-pull-request-new-changes', 0xec0c),\n    searchFuzzy: register('search-fuzzy', 0xec0d),\n    commentDraft: register('comment-draft', 0xec0e),\n    send: register('send', 0xec0f),\n    sparkle: register('sparkle', 0xec10),\n    insert: register('insert', 0xec11),\n    mic: register('mic', 0xec12),\n    thumbsdownFilled: register('thumbsdown-filled', 0xec13),\n    thumbsupFilled: register('thumbsup-filled', 0xec14),\n    coffee: register('coffee', 0xec15),\n    snake: register('snake', 0xec16),\n    game: register('game', 0xec17),\n    vr: register('vr', 0xec18),\n    chip: register('chip', 0xec19),\n    piano: register('piano', 0xec1a),\n    music: register('music', 0xec1b),\n    micFilled: register('mic-filled', 0xec1c),\n    repoFetch: register('repo-fetch', 0xec1d),\n    copilot: register('copilot', 0xec1e),\n    lightbulbSparkle: register('lightbulb-sparkle', 0xec1f),\n    robot: register('robot', 0xec20),\n    sparkleFilled: register('sparkle-filled', 0xec21),\n    diffSingle: register('diff-single', 0xec22),\n    diffMultiple: register('diff-multiple', 0xec23),\n    surroundWith: register('surround-with', 0xec24),\n    share: register('share', 0xec25),\n    gitStash: register('git-stash', 0xec26),\n    gitStashApply: register('git-stash-apply', 0xec27),\n    gitStashPop: register('git-stash-pop', 0xec28),\n    vscode: register('vscode', 0xec29),\n    vscodeInsiders: register('vscode-insiders', 0xec2a),\n    codeOss: register('code-oss', 0xec2b),\n    runCoverage: register('run-coverage', 0xec2c),\n    runAllCoverage: register('run-all-coverage', 0xec2d),\n    coverage: register('coverage', 0xec2e),\n    githubProject: register('github-project', 0xec2f),\n    mapVertical: register('map-vertical', 0xec30),\n    foldVertical: register('fold-vertical', 0xec30),\n    mapVerticalFilled: register('map-vertical-filled', 0xec31),\n    foldVerticalFilled: register('fold-vertical-filled', 0xec31),\n    goToSearch: register('go-to-search', 0xec32),\n    percentage: register('percentage', 0xec33),\n    sortPercentage: register('sort-percentage', 0xec33),\n};\n","import { register } from './codiconsUtil.js';\nimport { codiconsLibrary } from './codiconsLibrary.js';\n/**\n * Derived icons, that could become separate icons.\n * These mappings should be moved into the mapping file in the vscode-codicons repo at some point.\n */\nexport const codiconsDerived = {\n    dialogError: register('dialog-error', 'error'),\n    dialogWarning: register('dialog-warning', 'warning'),\n    dialogInfo: register('dialog-info', 'info'),\n    dialogClose: register('dialog-close', 'close'),\n    treeItemExpanded: register('tree-item-expanded', 'chevron-down'), // collapsed is done with rotation\n    treeFilterOnTypeOn: register('tree-filter-on-type-on', 'list-filter'),\n    treeFilterOnTypeOff: register('tree-filter-on-type-off', 'list-selection'),\n    treeFilterClear: register('tree-filter-clear', 'close'),\n    treeItemLoading: register('tree-item-loading', 'loading'),\n    menuSelection: register('menu-selection', 'check'),\n    menuSubmenu: register('menu-submenu', 'chevron-right'),\n    menuBarMore: register('menubar-more', 'more'),\n    scrollbarButtonLeft: register('scrollbar-button-left', 'triangle-left'),\n    scrollbarButtonRight: register('scrollbar-button-right', 'triangle-right'),\n    scrollbarButtonUp: register('scrollbar-button-up', 'triangle-up'),\n    scrollbarButtonDown: register('scrollbar-button-down', 'triangle-down'),\n    toolBarMore: register('toolbar-more', 'more'),\n    quickInputBack: register('quick-input-back', 'arrow-left'),\n    dropDownButton: register('drop-down-button', 0xeab4),\n    symbolCustomColor: register('symbol-customcolor', 0xeb5c),\n    exportIcon: register('export', 0xebac),\n    workspaceUnspecified: register('workspace-unspecified', 0xebc3),\n    newLine: register('newline', 0xebea),\n    thumbsDownFilled: register('thumbsdown-filled', 0xec13),\n    thumbsUpFilled: register('thumbsup-filled', 0xec14),\n    gitFetch: register('git-fetch', 0xec1d),\n    lightbulbSparkleAutofix: register('lightbulb-sparkle-autofix', 0xec1f),\n    debugBreakpointPending: register('debug-breakpoint-pending', 0xebd9),\n};\n/**\n * The Codicon library is a set of default icons that are built-in in VS Code.\n *\n * In the product (outside of base) Codicons should only be used as defaults. In order to have all icons in VS Code\n * themeable, component should define new, UI component specific icons using `iconRegistry.registerIcon`.\n * In that call a Codicon can be named as default.\n */\nexport const Codicon = {\n    ...codiconsLibrary,\n    ...codiconsDerived\n};\n","import { isString } from './types.js';\nconst _codiconFontCharacters = Object.create(null);\nexport function register(id, fontCharacter) {\n    if (isString(fontCharacter)) {\n        const val = _codiconFontCharacters[fontCharacter];\n        if (val === undefined) {\n            throw new Error(`${id} references an unknown codicon: ${fontCharacter}`);\n        }\n        fontCharacter = val;\n    }\n    _codiconFontCharacters[id] = fontCharacter;\n    return { id };\n}\n/**\n * Only to be used by the iconRegistry.\n */\nexport function getCodiconFontCharacters() {\n    return _codiconFontCharacters;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function diffSets(before, after) {\n    const removed = [];\n    const added = [];\n    for (const element of before) {\n        if (!after.has(element)) {\n            removed.push(element);\n        }\n    }\n    for (const element of after) {\n        if (!before.has(element)) {\n            added.push(element);\n        }\n    }\n    return { removed, added };\n}\n/**\n * Computes the intersection of two sets.\n *\n * @param setA - The first set.\n * @param setB - The second iterable.\n * @returns A new set containing the elements that are in both `setA` and `setB`.\n */\nexport function intersection(setA, setB) {\n    const result = new Set();\n    for (const elem of setB) {\n        if (setA.has(elem)) {\n            result.add(elem);\n        }\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nfunction roundFloat(number, decimalPoints) {\n    const decimal = Math.pow(10, decimalPoints);\n    return Math.round(number * decimal) / decimal;\n}\nexport class RGBA {\n    constructor(r, g, b, a = 1) {\n        this._rgbaBrand = undefined;\n        this.r = Math.min(255, Math.max(0, r)) | 0;\n        this.g = Math.min(255, Math.max(0, g)) | 0;\n        this.b = Math.min(255, Math.max(0, b)) | 0;\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.r === b.r && a.g === b.g && a.b === b.b && a.a === b.a;\n    }\n}\nexport class HSLA {\n    constructor(h, s, l, a) {\n        this._hslaBrand = undefined;\n        this.h = Math.max(Math.min(360, h), 0) | 0;\n        this.s = roundFloat(Math.max(Math.min(1, s), 0), 3);\n        this.l = roundFloat(Math.max(Math.min(1, l), 0), 3);\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.h === b.h && a.s === b.s && a.l === b.l && a.a === b.a;\n    }\n    /**\n     * Converts an RGB color value to HSL. Conversion formula\n     * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n     * Assumes r, g, and b are contained in the set [0, 255] and\n     * returns h in the set [0, 360], s, and l in the set [0, 1].\n     */\n    static fromRGBA(rgba) {\n        const r = rgba.r / 255;\n        const g = rgba.g / 255;\n        const b = rgba.b / 255;\n        const a = rgba.a;\n        const max = Math.max(r, g, b);\n        const min = Math.min(r, g, b);\n        let h = 0;\n        let s = 0;\n        const l = (min + max) / 2;\n        const chroma = max - min;\n        if (chroma > 0) {\n            s = Math.min((l <= 0.5 ? chroma / (2 * l) : chroma / (2 - (2 * l))), 1);\n            switch (max) {\n                case r:\n                    h = (g - b) / chroma + (g < b ? 6 : 0);\n                    break;\n                case g:\n                    h = (b - r) / chroma + 2;\n                    break;\n                case b:\n                    h = (r - g) / chroma + 4;\n                    break;\n            }\n            h *= 60;\n            h = Math.round(h);\n        }\n        return new HSLA(h, s, l, a);\n    }\n    static _hue2rgb(p, q, t) {\n        if (t < 0) {\n            t += 1;\n        }\n        if (t > 1) {\n            t -= 1;\n        }\n        if (t < 1 / 6) {\n            return p + (q - p) * 6 * t;\n        }\n        if (t < 1 / 2) {\n            return q;\n        }\n        if (t < 2 / 3) {\n            return p + (q - p) * (2 / 3 - t) * 6;\n        }\n        return p;\n    }\n    /**\n     * Converts an HSL color value to RGB. Conversion formula\n     * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n     * Assumes h in the set [0, 360] s, and l are contained in the set [0, 1] and\n     * returns r, g, and b in the set [0, 255].\n     */\n    static toRGBA(hsla) {\n        const h = hsla.h / 360;\n        const { s, l, a } = hsla;\n        let r, g, b;\n        if (s === 0) {\n            r = g = b = l; // achromatic\n        }\n        else {\n            const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n            const p = 2 * l - q;\n            r = HSLA._hue2rgb(p, q, h + 1 / 3);\n            g = HSLA._hue2rgb(p, q, h);\n            b = HSLA._hue2rgb(p, q, h - 1 / 3);\n        }\n        return new RGBA(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255), a);\n    }\n}\nexport class HSVA {\n    constructor(h, s, v, a) {\n        this._hsvaBrand = undefined;\n        this.h = Math.max(Math.min(360, h), 0) | 0;\n        this.s = roundFloat(Math.max(Math.min(1, s), 0), 3);\n        this.v = roundFloat(Math.max(Math.min(1, v), 0), 3);\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.h === b.h && a.s === b.s && a.v === b.v && a.a === b.a;\n    }\n    // from http://www.rapidtables.com/convert/color/rgb-to-hsv.htm\n    static fromRGBA(rgba) {\n        const r = rgba.r / 255;\n        const g = rgba.g / 255;\n        const b = rgba.b / 255;\n        const cmax = Math.max(r, g, b);\n        const cmin = Math.min(r, g, b);\n        const delta = cmax - cmin;\n        const s = cmax === 0 ? 0 : (delta / cmax);\n        let m;\n        if (delta === 0) {\n            m = 0;\n        }\n        else if (cmax === r) {\n            m = ((((g - b) / delta) % 6) + 6) % 6;\n        }\n        else if (cmax === g) {\n            m = ((b - r) / delta) + 2;\n        }\n        else {\n            m = ((r - g) / delta) + 4;\n        }\n        return new HSVA(Math.round(m * 60), s, cmax, rgba.a);\n    }\n    // from http://www.rapidtables.com/convert/color/hsv-to-rgb.htm\n    static toRGBA(hsva) {\n        const { h, s, v, a } = hsva;\n        const c = v * s;\n        const x = c * (1 - Math.abs((h / 60) % 2 - 1));\n        const m = v - c;\n        let [r, g, b] = [0, 0, 0];\n        if (h < 60) {\n            r = c;\n            g = x;\n        }\n        else if (h < 120) {\n            r = x;\n            g = c;\n        }\n        else if (h < 180) {\n            g = c;\n            b = x;\n        }\n        else if (h < 240) {\n            g = x;\n            b = c;\n        }\n        else if (h < 300) {\n            r = x;\n            b = c;\n        }\n        else if (h <= 360) {\n            r = c;\n            b = x;\n        }\n        r = Math.round((r + m) * 255);\n        g = Math.round((g + m) * 255);\n        b = Math.round((b + m) * 255);\n        return new RGBA(r, g, b, a);\n    }\n}\nexport class Color {\n    static fromHex(hex) {\n        return Color.Format.CSS.parseHex(hex) || Color.red;\n    }\n    static equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        if (!a || !b) {\n            return false;\n        }\n        return a.equals(b);\n    }\n    get hsla() {\n        if (this._hsla) {\n            return this._hsla;\n        }\n        else {\n            return HSLA.fromRGBA(this.rgba);\n        }\n    }\n    get hsva() {\n        if (this._hsva) {\n            return this._hsva;\n        }\n        return HSVA.fromRGBA(this.rgba);\n    }\n    constructor(arg) {\n        if (!arg) {\n            throw new Error('Color needs a value');\n        }\n        else if (arg instanceof RGBA) {\n            this.rgba = arg;\n        }\n        else if (arg instanceof HSLA) {\n            this._hsla = arg;\n            this.rgba = HSLA.toRGBA(arg);\n        }\n        else if (arg instanceof HSVA) {\n            this._hsva = arg;\n            this.rgba = HSVA.toRGBA(arg);\n        }\n        else {\n            throw new Error('Invalid color ctor argument');\n        }\n    }\n    equals(other) {\n        return !!other && RGBA.equals(this.rgba, other.rgba) && HSLA.equals(this.hsla, other.hsla) && HSVA.equals(this.hsva, other.hsva);\n    }\n    /**\n     * http://www.w3.org/TR/WCAG20/#relativeluminancedef\n     * Returns the number in the set [0, 1]. O => Darkest Black. 1 => Lightest white.\n     */\n    getRelativeLuminance() {\n        const R = Color._relativeLuminanceForComponent(this.rgba.r);\n        const G = Color._relativeLuminanceForComponent(this.rgba.g);\n        const B = Color._relativeLuminanceForComponent(this.rgba.b);\n        const luminance = 0.2126 * R + 0.7152 * G + 0.0722 * B;\n        return roundFloat(luminance, 4);\n    }\n    static _relativeLuminanceForComponent(color) {\n        const c = color / 255;\n        return (c <= 0.03928) ? c / 12.92 : Math.pow(((c + 0.055) / 1.055), 2.4);\n    }\n    /**\n     *\thttp://24ways.org/2010/calculating-color-contrast\n     *  Return 'true' if lighter color otherwise 'false'\n     */\n    isLighter() {\n        const yiq = (this.rgba.r * 299 + this.rgba.g * 587 + this.rgba.b * 114) / 1000;\n        return yiq >= 128;\n    }\n    isLighterThan(another) {\n        const lum1 = this.getRelativeLuminance();\n        const lum2 = another.getRelativeLuminance();\n        return lum1 > lum2;\n    }\n    isDarkerThan(another) {\n        const lum1 = this.getRelativeLuminance();\n        const lum2 = another.getRelativeLuminance();\n        return lum1 < lum2;\n    }\n    lighten(factor) {\n        return new Color(new HSLA(this.hsla.h, this.hsla.s, this.hsla.l + this.hsla.l * factor, this.hsla.a));\n    }\n    darken(factor) {\n        return new Color(new HSLA(this.hsla.h, this.hsla.s, this.hsla.l - this.hsla.l * factor, this.hsla.a));\n    }\n    transparent(factor) {\n        const { r, g, b, a } = this.rgba;\n        return new Color(new RGBA(r, g, b, a * factor));\n    }\n    isTransparent() {\n        return this.rgba.a === 0;\n    }\n    isOpaque() {\n        return this.rgba.a === 1;\n    }\n    opposite() {\n        return new Color(new RGBA(255 - this.rgba.r, 255 - this.rgba.g, 255 - this.rgba.b, this.rgba.a));\n    }\n    makeOpaque(opaqueBackground) {\n        if (this.isOpaque() || opaqueBackground.rgba.a !== 1) {\n            // only allow to blend onto a non-opaque color onto a opaque color\n            return this;\n        }\n        const { r, g, b, a } = this.rgba;\n        // https://stackoverflow.com/questions/12228548/finding-equivalent-color-with-opacity\n        return new Color(new RGBA(opaqueBackground.rgba.r - a * (opaqueBackground.rgba.r - r), opaqueBackground.rgba.g - a * (opaqueBackground.rgba.g - g), opaqueBackground.rgba.b - a * (opaqueBackground.rgba.b - b), 1));\n    }\n    toString() {\n        if (!this._toString) {\n            this._toString = Color.Format.CSS.format(this);\n        }\n        return this._toString;\n    }\n    static getLighterColor(of, relative, factor) {\n        if (of.isLighterThan(relative)) {\n            return of;\n        }\n        factor = factor ? factor : 0.5;\n        const lum1 = of.getRelativeLuminance();\n        const lum2 = relative.getRelativeLuminance();\n        factor = factor * (lum2 - lum1) / lum2;\n        return of.lighten(factor);\n    }\n    static getDarkerColor(of, relative, factor) {\n        if (of.isDarkerThan(relative)) {\n            return of;\n        }\n        factor = factor ? factor : 0.5;\n        const lum1 = of.getRelativeLuminance();\n        const lum2 = relative.getRelativeLuminance();\n        factor = factor * (lum1 - lum2) / lum1;\n        return of.darken(factor);\n    }\n}\nColor.white = new Color(new RGBA(255, 255, 255, 1));\nColor.black = new Color(new RGBA(0, 0, 0, 1));\nColor.red = new Color(new RGBA(255, 0, 0, 1));\nColor.blue = new Color(new RGBA(0, 0, 255, 1));\nColor.green = new Color(new RGBA(0, 255, 0, 1));\nColor.cyan = new Color(new RGBA(0, 255, 255, 1));\nColor.lightgrey = new Color(new RGBA(211, 211, 211, 1));\nColor.transparent = new Color(new RGBA(0, 0, 0, 0));\n(function (Color) {\n    let Format;\n    (function (Format) {\n        let CSS;\n        (function (CSS) {\n            function formatRGB(color) {\n                if (color.rgba.a === 1) {\n                    return `rgb(${color.rgba.r}, ${color.rgba.g}, ${color.rgba.b})`;\n                }\n                return Color.Format.CSS.formatRGBA(color);\n            }\n            CSS.formatRGB = formatRGB;\n            function formatRGBA(color) {\n                return `rgba(${color.rgba.r}, ${color.rgba.g}, ${color.rgba.b}, ${+(color.rgba.a).toFixed(2)})`;\n            }\n            CSS.formatRGBA = formatRGBA;\n            function formatHSL(color) {\n                if (color.hsla.a === 1) {\n                    return `hsl(${color.hsla.h}, ${(color.hsla.s * 100).toFixed(2)}%, ${(color.hsla.l * 100).toFixed(2)}%)`;\n                }\n                return Color.Format.CSS.formatHSLA(color);\n            }\n            CSS.formatHSL = formatHSL;\n            function formatHSLA(color) {\n                return `hsla(${color.hsla.h}, ${(color.hsla.s * 100).toFixed(2)}%, ${(color.hsla.l * 100).toFixed(2)}%, ${color.hsla.a.toFixed(2)})`;\n            }\n            CSS.formatHSLA = formatHSLA;\n            function _toTwoDigitHex(n) {\n                const r = n.toString(16);\n                return r.length !== 2 ? '0' + r : r;\n            }\n            /**\n             * Formats the color as #RRGGBB\n             */\n            function formatHex(color) {\n                return `#${_toTwoDigitHex(color.rgba.r)}${_toTwoDigitHex(color.rgba.g)}${_toTwoDigitHex(color.rgba.b)}`;\n            }\n            CSS.formatHex = formatHex;\n            /**\n             * Formats the color as #RRGGBBAA\n             * If 'compact' is set, colors without transparancy will be printed as #RRGGBB\n             */\n            function formatHexA(color, compact = false) {\n                if (compact && color.rgba.a === 1) {\n                    return Color.Format.CSS.formatHex(color);\n                }\n                return `#${_toTwoDigitHex(color.rgba.r)}${_toTwoDigitHex(color.rgba.g)}${_toTwoDigitHex(color.rgba.b)}${_toTwoDigitHex(Math.round(color.rgba.a * 255))}`;\n            }\n            CSS.formatHexA = formatHexA;\n            /**\n             * The default format will use HEX if opaque and RGBA otherwise.\n             */\n            function format(color) {\n                if (color.isOpaque()) {\n                    return Color.Format.CSS.formatHex(color);\n                }\n                return Color.Format.CSS.formatRGBA(color);\n            }\n            CSS.format = format;\n            /**\n             * Converts an Hex color value to a Color.\n             * returns r, g, and b are contained in the set [0, 255]\n             * @param hex string (#RGB, #RGBA, #RRGGBB or #RRGGBBAA).\n             */\n            function parseHex(hex) {\n                const length = hex.length;\n                if (length === 0) {\n                    // Invalid color\n                    return null;\n                }\n                if (hex.charCodeAt(0) !== 35 /* CharCode.Hash */) {\n                    // Does not begin with a #\n                    return null;\n                }\n                if (length === 7) {\n                    // #RRGGBB format\n                    const r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));\n                    const g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));\n                    const b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));\n                    return new Color(new RGBA(r, g, b, 1));\n                }\n                if (length === 9) {\n                    // #RRGGBBAA format\n                    const r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));\n                    const g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));\n                    const b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));\n                    const a = 16 * _parseHexDigit(hex.charCodeAt(7)) + _parseHexDigit(hex.charCodeAt(8));\n                    return new Color(new RGBA(r, g, b, a / 255));\n                }\n                if (length === 4) {\n                    // #RGB format\n                    const r = _parseHexDigit(hex.charCodeAt(1));\n                    const g = _parseHexDigit(hex.charCodeAt(2));\n                    const b = _parseHexDigit(hex.charCodeAt(3));\n                    return new Color(new RGBA(16 * r + r, 16 * g + g, 16 * b + b));\n                }\n                if (length === 5) {\n                    // #RGBA format\n                    const r = _parseHexDigit(hex.charCodeAt(1));\n                    const g = _parseHexDigit(hex.charCodeAt(2));\n                    const b = _parseHexDigit(hex.charCodeAt(3));\n                    const a = _parseHexDigit(hex.charCodeAt(4));\n                    return new Color(new RGBA(16 * r + r, 16 * g + g, 16 * b + b, (16 * a + a) / 255));\n                }\n                // Invalid color\n                return null;\n            }\n            CSS.parseHex = parseHex;\n            function _parseHexDigit(charCode) {\n                switch (charCode) {\n                    case 48 /* CharCode.Digit0 */: return 0;\n                    case 49 /* CharCode.Digit1 */: return 1;\n                    case 50 /* CharCode.Digit2 */: return 2;\n                    case 51 /* CharCode.Digit3 */: return 3;\n                    case 52 /* CharCode.Digit4 */: return 4;\n                    case 53 /* CharCode.Digit5 */: return 5;\n                    case 54 /* CharCode.Digit6 */: return 6;\n                    case 55 /* CharCode.Digit7 */: return 7;\n                    case 56 /* CharCode.Digit8 */: return 8;\n                    case 57 /* CharCode.Digit9 */: return 9;\n                    case 97 /* CharCode.a */: return 10;\n                    case 65 /* CharCode.A */: return 10;\n                    case 98 /* CharCode.b */: return 11;\n                    case 66 /* CharCode.B */: return 11;\n                    case 99 /* CharCode.c */: return 12;\n                    case 67 /* CharCode.C */: return 12;\n                    case 100 /* CharCode.d */: return 13;\n                    case 68 /* CharCode.D */: return 13;\n                    case 101 /* CharCode.e */: return 14;\n                    case 69 /* CharCode.E */: return 14;\n                    case 102 /* CharCode.f */: return 15;\n                    case 70 /* CharCode.F */: return 15;\n                }\n                return 0;\n            }\n        })(CSS = Format.CSS || (Format.CSS = {}));\n    })(Format = Color.Format || (Color.Format = {}));\n})(Color || (Color = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Lazy } from './lazy.js';\n// When comparing large numbers of strings it's better for performance to create an\n// Intl.Collator object and use the function provided by its compare property\n// than it is to use String.prototype.localeCompare()\n// A collator with numeric sorting enabled, and no sensitivity to case, accents or diacritics.\nconst intlFileNameCollatorBaseNumeric = new Lazy(() => {\n    const collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n    return {\n        collator,\n        collatorIsNumeric: collator.resolvedOptions().numeric\n    };\n});\n// A collator with numeric sorting enabled.\nconst intlFileNameCollatorNumeric = new Lazy(() => {\n    const collator = new Intl.Collator(undefined, { numeric: true });\n    return {\n        collator\n    };\n});\n// A collator with numeric sorting enabled, and sensitivity to accents and diacritics but not case.\nconst intlFileNameCollatorNumericCaseInsensitive = new Lazy(() => {\n    const collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'accent' });\n    return {\n        collator\n    };\n});\n/** Compares filenames without distinguishing the name from the extension. Disambiguates by unicode comparison. */\nexport function compareFileNames(one, other, caseSensitive = false) {\n    const a = one || '';\n    const b = other || '';\n    const result = intlFileNameCollatorBaseNumeric.value.collator.compare(a, b);\n    // Using the numeric option will make compare(`foo1`, `foo01`) === 0. Disambiguate.\n    if (intlFileNameCollatorBaseNumeric.value.collatorIsNumeric && result === 0 && a !== b) {\n        return a < b ? -1 : 1;\n    }\n    return result;\n}\nexport function compareAnything(one, other, lookFor) {\n    const elementAName = one.toLowerCase();\n    const elementBName = other.toLowerCase();\n    // Sort prefix matches over non prefix matches\n    const prefixCompare = compareByPrefix(one, other, lookFor);\n    if (prefixCompare) {\n        return prefixCompare;\n    }\n    // Sort suffix matches over non suffix matches\n    const elementASuffixMatch = elementAName.endsWith(lookFor);\n    const elementBSuffixMatch = elementBName.endsWith(lookFor);\n    if (elementASuffixMatch !== elementBSuffixMatch) {\n        return elementASuffixMatch ? -1 : 1;\n    }\n    // Understand file names\n    const r = compareFileNames(elementAName, elementBName);\n    if (r !== 0) {\n        return r;\n    }\n    // Compare by name\n    return elementAName.localeCompare(elementBName);\n}\nexport function compareByPrefix(one, other, lookFor) {\n    const elementAName = one.toLowerCase();\n    const elementBName = other.toLowerCase();\n    // Sort prefix matches over non prefix matches\n    const elementAPrefixMatch = elementAName.startsWith(lookFor);\n    const elementBPrefixMatch = elementBName.startsWith(lookFor);\n    if (elementAPrefixMatch !== elementBPrefixMatch) {\n        return elementAPrefixMatch ? -1 : 1;\n    }\n    // Same prefix: Sort shorter matches to the top to have those on top that match more precisely\n    else if (elementAPrefixMatch && elementBPrefixMatch) {\n        if (elementAName.length < elementBName.length) {\n            return -1;\n        }\n        if (elementAName.length > elementBName.length) {\n            return 1;\n        }\n    }\n    return 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { distinct } from './arrays.js';\nimport { Iterable } from './iterator.js';\nimport { generateUuid } from './uuid.js';\nexport function createStringDataTransferItem(stringOrPromise) {\n    return {\n        asString: async () => stringOrPromise,\n        asFile: () => undefined,\n        value: typeof stringOrPromise === 'string' ? stringOrPromise : undefined,\n    };\n}\nexport function createFileDataTransferItem(fileName, uri, data) {\n    const file = { id: generateUuid(), name: fileName, uri, data };\n    return {\n        asString: async () => '',\n        asFile: () => file,\n        value: undefined,\n    };\n}\nexport class VSDataTransfer {\n    constructor() {\n        this._entries = new Map();\n    }\n    get size() {\n        let size = 0;\n        for (const _ of this._entries) {\n            size++;\n        }\n        return size;\n    }\n    has(mimeType) {\n        return this._entries.has(this.toKey(mimeType));\n    }\n    matches(pattern) {\n        const mimes = [...this._entries.keys()];\n        if (Iterable.some(this, ([_, item]) => item.asFile())) {\n            mimes.push('files');\n        }\n        return matchesMimeType_normalized(normalizeMimeType(pattern), mimes);\n    }\n    get(mimeType) {\n        var _a;\n        return (_a = this._entries.get(this.toKey(mimeType))) === null || _a === void 0 ? void 0 : _a[0];\n    }\n    /**\n     * Add a new entry to this data transfer.\n     *\n     * This does not replace existing entries for `mimeType`.\n     */\n    append(mimeType, value) {\n        const existing = this._entries.get(mimeType);\n        if (existing) {\n            existing.push(value);\n        }\n        else {\n            this._entries.set(this.toKey(mimeType), [value]);\n        }\n    }\n    /**\n     * Set the entry for a given mime type.\n     *\n     * This replaces all existing entries for `mimeType`.\n     */\n    replace(mimeType, value) {\n        this._entries.set(this.toKey(mimeType), [value]);\n    }\n    /**\n     * Remove all entries for `mimeType`.\n     */\n    delete(mimeType) {\n        this._entries.delete(this.toKey(mimeType));\n    }\n    /**\n     * Iterate over all `[mime, item]` pairs in this data transfer.\n     *\n     * There may be multiple entries for each mime type.\n     */\n    *[Symbol.iterator]() {\n        for (const [mine, items] of this._entries) {\n            for (const item of items) {\n                yield [mine, item];\n            }\n        }\n    }\n    toKey(mimeType) {\n        return normalizeMimeType(mimeType);\n    }\n}\nfunction normalizeMimeType(mimeType) {\n    return mimeType.toLowerCase();\n}\nexport function matchesMimeType(pattern, mimeTypes) {\n    return matchesMimeType_normalized(normalizeMimeType(pattern), mimeTypes.map(normalizeMimeType));\n}\nfunction matchesMimeType_normalized(normalizedPattern, normalizedMimeTypes) {\n    // Anything wildcard\n    if (normalizedPattern === '*/*') {\n        return normalizedMimeTypes.length > 0;\n    }\n    // Exact match\n    if (normalizedMimeTypes.includes(normalizedPattern)) {\n        return true;\n    }\n    // Wildcard, such as `image/*`\n    const wildcard = normalizedPattern.match(/^([a-z]+)\\/([a-z]+|\\*)$/i);\n    if (!wildcard) {\n        return false;\n    }\n    const [_, type, subtype] = wildcard;\n    if (subtype === '*') {\n        return normalizedMimeTypes.some(mime => mime.startsWith(type + '/'));\n    }\n    return false;\n}\nexport const UriList = Object.freeze({\n    // http://amundsen.com/hypermedia/urilist/\n    create: (entries) => {\n        return distinct(entries.map(x => x.toString())).join('\\r\\n');\n    },\n    split: (str) => {\n        return str.split('\\r\\n');\n    },\n    parse: (str) => {\n        return UriList.split(str).filter(value => !value.startsWith('#'));\n    }\n});\n","export function memoize(_target, key, descriptor) {\n    let fnKey = null;\n    let fn = null;\n    if (typeof descriptor.value === 'function') {\n        fnKey = 'value';\n        fn = descriptor.value;\n        if (fn.length !== 0) {\n            console.warn('Memoize should only be used in functions with zero parameters');\n        }\n    }\n    else if (typeof descriptor.get === 'function') {\n        fnKey = 'get';\n        fn = descriptor.get;\n    }\n    if (!fn) {\n        throw new Error('not supported');\n    }\n    const memoizeKey = `$memoize$${key}`;\n    descriptor[fnKey] = function (...args) {\n        if (!this.hasOwnProperty(memoizeKey)) {\n            Object.defineProperty(this, memoizeKey, {\n                configurable: false,\n                enumerable: false,\n                writable: false,\n                value: fn.apply(this, args)\n            });\n        }\n        return this[memoizeKey];\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Represents information about a specific difference between two sequences.\n */\nexport class DiffChange {\n    /**\n     * Constructs a new DiffChange with the given sequence information\n     * and content.\n     */\n    constructor(originalStart, originalLength, modifiedStart, modifiedLength) {\n        //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n        this.originalStart = originalStart;\n        this.originalLength = originalLength;\n        this.modifiedStart = modifiedStart;\n        this.modifiedLength = modifiedLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the original sequence.\n     */\n    getOriginalEnd() {\n        return this.originalStart + this.originalLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the modified sequence.\n     */\n    getModifiedEnd() {\n        return this.modifiedStart + this.modifiedLength;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { DiffChange } from './diffChange.js';\nimport { stringHash } from '../hash.js';\nexport class StringDiffSequence {\n    constructor(source) {\n        this.source = source;\n    }\n    getElements() {\n        const source = this.source;\n        const characters = new Int32Array(source.length);\n        for (let i = 0, len = source.length; i < len; i++) {\n            characters[i] = source.charCodeAt(i);\n        }\n        return characters;\n    }\n}\nexport function stringDiff(original, modified, pretty) {\n    return new LcsDiff(new StringDiffSequence(original), new StringDiffSequence(modified)).ComputeDiff(pretty).changes;\n}\n//\n// The code below has been ported from a C# implementation in VS\n//\nclass Debug {\n    static Assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n}\nclass MyArray {\n    /**\n     * Copies a range of elements from an Array starting at the specified source index and pastes\n     * them to another Array starting at the specified destination index. The length and the indexes\n     * are specified as 64-bit integers.\n     * sourceArray:\n     *\t\tThe Array that contains the data to copy.\n     * sourceIndex:\n     *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n     * destinationArray:\n     *\t\tThe Array that receives the data.\n     * destinationIndex:\n     *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n     * length:\n     *\t\tA 64-bit integer that represents the number of elements to copy.\n     */\n    static Copy(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (let i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    }\n    static Copy2(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (let i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    }\n}\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarkNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nclass DiffChangeHelper {\n    /**\n     * Constructs a new DiffChangeHelper for the given DiffSequences.\n     */\n    constructor() {\n        this.m_changes = [];\n        this.m_originalStart = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n        this.m_modifiedStart = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n    }\n    /**\n     * Marks the beginning of the next change in the set of differences.\n     */\n    MarkNextChange() {\n        // Only add to the list if there is something to add\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Add the new change to our list\n            this.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\n        }\n        // Reset for the next change\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n        this.m_originalStart = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n        this.m_modifiedStart = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n    }\n    /**\n     * Adds the original element at the given position to the elements\n     * affected by the current change. The modified index gives context\n     * to the change position with respect to the original sequence.\n     * @param originalIndex The index of the original element to add.\n     * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n     */\n    AddOriginalElement(originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_originalCount++;\n    }\n    /**\n     * Adds the modified element at the given position to the elements\n     * affected by the current change. The original index gives context\n     * to the change position with respect to the modified sequence.\n     * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n     * @param modifiedIndex The index of the modified element to add.\n     */\n    AddModifiedElement(originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_modifiedCount++;\n    }\n    /**\n     * Retrieves all of the changes marked by the class.\n     */\n    getChanges() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        return this.m_changes;\n    }\n    /**\n     * Retrieves all of the changes marked by the class in the reverse order\n     */\n    getReverseChanges() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        this.m_changes.reverse();\n        return this.m_changes;\n    }\n}\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nexport class LcsDiff {\n    /**\n     * Constructs the DiffFinder\n     */\n    constructor(originalSequence, modifiedSequence, continueProcessingPredicate = null) {\n        this.ContinueProcessingPredicate = continueProcessingPredicate;\n        this._originalSequence = originalSequence;\n        this._modifiedSequence = modifiedSequence;\n        const [originalStringElements, originalElementsOrHash, originalHasStrings] = LcsDiff._getElements(originalSequence);\n        const [modifiedStringElements, modifiedElementsOrHash, modifiedHasStrings] = LcsDiff._getElements(modifiedSequence);\n        this._hasStrings = (originalHasStrings && modifiedHasStrings);\n        this._originalStringElements = originalStringElements;\n        this._originalElementsOrHash = originalElementsOrHash;\n        this._modifiedStringElements = modifiedStringElements;\n        this._modifiedElementsOrHash = modifiedElementsOrHash;\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n    }\n    static _isStringArray(arr) {\n        return (arr.length > 0 && typeof arr[0] === 'string');\n    }\n    static _getElements(sequence) {\n        const elements = sequence.getElements();\n        if (LcsDiff._isStringArray(elements)) {\n            const hashes = new Int32Array(elements.length);\n            for (let i = 0, len = elements.length; i < len; i++) {\n                hashes[i] = stringHash(elements[i], 0);\n            }\n            return [elements, hashes, true];\n        }\n        if (elements instanceof Int32Array) {\n            return [[], elements, false];\n        }\n        return [[], new Int32Array(elements), false];\n    }\n    ElementsAreEqual(originalIndex, newIndex) {\n        if (this._originalElementsOrHash[originalIndex] !== this._modifiedElementsOrHash[newIndex]) {\n            return false;\n        }\n        return (this._hasStrings ? this._originalStringElements[originalIndex] === this._modifiedStringElements[newIndex] : true);\n    }\n    ElementsAreStrictEqual(originalIndex, newIndex) {\n        if (!this.ElementsAreEqual(originalIndex, newIndex)) {\n            return false;\n        }\n        const originalElement = LcsDiff._getStrictElement(this._originalSequence, originalIndex);\n        const modifiedElement = LcsDiff._getStrictElement(this._modifiedSequence, newIndex);\n        return (originalElement === modifiedElement);\n    }\n    static _getStrictElement(sequence, index) {\n        if (typeof sequence.getStrictElement === 'function') {\n            return sequence.getStrictElement(index);\n        }\n        return null;\n    }\n    OriginalElementsAreEqual(index1, index2) {\n        if (this._originalElementsOrHash[index1] !== this._originalElementsOrHash[index2]) {\n            return false;\n        }\n        return (this._hasStrings ? this._originalStringElements[index1] === this._originalStringElements[index2] : true);\n    }\n    ModifiedElementsAreEqual(index1, index2) {\n        if (this._modifiedElementsOrHash[index1] !== this._modifiedElementsOrHash[index2]) {\n            return false;\n        }\n        return (this._hasStrings ? this._modifiedStringElements[index1] === this._modifiedStringElements[index2] : true);\n    }\n    ComputeDiff(pretty) {\n        return this._ComputeDiff(0, this._originalElementsOrHash.length - 1, 0, this._modifiedElementsOrHash.length - 1, pretty);\n    }\n    /**\n     * Computes the differences between the original and modified input\n     * sequences on the bounded range.\n     * @returns An array of the differences between the two input sequences.\n     */\n    _ComputeDiff(originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n        const quitEarlyArr = [false];\n        let changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n        if (pretty) {\n            // We have to clean up the computed diff to be more intuitive\n            // but it turns out this cannot be done correctly until the entire set\n            // of diffs have been computed\n            changes = this.PrettifyChanges(changes);\n        }\n        return {\n            quitEarly: quitEarlyArr[0],\n            changes: changes\n        };\n    }\n    /**\n     * Private helper method which computes the differences on the bounded range\n     * recursively.\n     * @returns An array of the differences between the two input sequences.\n     */\n    ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n        quitEarlyArr[0] = false;\n        // Find the start of the differences\n        while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n            originalStart++;\n            modifiedStart++;\n        }\n        // Find the end of the differences\n        while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n            originalEnd--;\n            modifiedEnd--;\n        }\n        // In the special case where we either have all insertions or all deletions or the sequences are identical\n        if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n            let changes;\n            if (modifiedStart <= modifiedEnd) {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                // All insertions\n                changes = [\n                    new DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n                ];\n            }\n            else if (originalStart <= originalEnd) {\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // All deletions\n                changes = [\n                    new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n                ];\n            }\n            else {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // Identical sequences - No differences\n                changes = [];\n            }\n            return changes;\n        }\n        // This problem can be solved using the Divide-And-Conquer technique.\n        const midOriginalArr = [0];\n        const midModifiedArr = [0];\n        const result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n        const midOriginal = midOriginalArr[0];\n        const midModified = midModifiedArr[0];\n        if (result !== null) {\n            // Result is not-null when there was enough memory to compute the changes while\n            // searching for the recursion point\n            return result;\n        }\n        else if (!quitEarlyArr[0]) {\n            // We can break the problem down recursively by finding the changes in the\n            // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n            // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n            // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n            const leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n            let rightChanges = [];\n            if (!quitEarlyArr[0]) {\n                rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n            }\n            else {\n                // We didn't have time to finish the first half, so we don't have time to compute this half.\n                // Consider the entire rest of the sequence different.\n                rightChanges = [\n                    new DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n                ];\n            }\n            return this.ConcatenateChanges(leftChanges, rightChanges);\n        }\n        // If we hit here, we quit early, and so can't return anything meaningful\n        return [\n            new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n        ];\n    }\n    WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n        let forwardChanges = null;\n        let reverseChanges = null;\n        // First, walk backward through the forward diagonals history\n        let changeHelper = new DiffChangeHelper();\n        let diagonalMin = diagonalForwardStart;\n        let diagonalMax = diagonalForwardEnd;\n        let diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n        let lastOriginalIndex = -1073741824 /* Constants.MIN_SAFE_SMALL_INTEGER */;\n        let historyIndex = this.m_forwardHistory.length - 1;\n        do {\n            // Get the diagonal index from the relative diagonal number\n            const diagonal = diagonalRelative + diagonalForwardBase;\n            // Figure out where we came from\n            if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                // Vertical line (the element is an insert)\n                originalIndex = forwardPoints[diagonal + 1];\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex;\n                changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n                diagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            else {\n                // Horizontal line (the element is a deletion)\n                originalIndex = forwardPoints[diagonal - 1] + 1;\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex - 1;\n                changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n                diagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            if (historyIndex >= 0) {\n                forwardPoints = this.m_forwardHistory[historyIndex];\n                diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n                diagonalMin = 1;\n                diagonalMax = forwardPoints.length - 1;\n            }\n        } while (--historyIndex >= -1);\n        // Ironically, we get the forward changes as the reverse of the\n        // order we added them since we technically added them backwards\n        forwardChanges = changeHelper.getReverseChanges();\n        if (quitEarlyArr[0]) {\n            // TODO: Calculate a partial from the reverse diagonals.\n            //       For now, just assume everything after the midOriginal/midModified point is a diff\n            let originalStartPoint = midOriginalArr[0] + 1;\n            let modifiedStartPoint = midModifiedArr[0] + 1;\n            if (forwardChanges !== null && forwardChanges.length > 0) {\n                const lastForwardChange = forwardChanges[forwardChanges.length - 1];\n                originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n                modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n            }\n            reverseChanges = [\n                new DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n            ];\n        }\n        else {\n            // Now walk backward through the reverse diagonals history\n            changeHelper = new DiffChangeHelper();\n            diagonalMin = diagonalReverseStart;\n            diagonalMax = diagonalReverseEnd;\n            diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n            lastOriginalIndex = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n            historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n            do {\n                // Get the diagonal index from the relative diagonal number\n                const diagonal = diagonalRelative + diagonalReverseBase;\n                // Figure out where we came from\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    // Horizontal line (the element is a deletion))\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex + 1;\n                    changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                else {\n                    // Vertical line (the element is an insertion)\n                    originalIndex = reversePoints[diagonal - 1];\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex;\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                if (historyIndex >= 0) {\n                    reversePoints = this.m_reverseHistory[historyIndex];\n                    diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n                    diagonalMin = 1;\n                    diagonalMax = reversePoints.length - 1;\n                }\n            } while (--historyIndex >= -1);\n            // There are cases where the reverse history will find diffs that\n            // are correct, but not intuitive, so we need shift them.\n            reverseChanges = changeHelper.getChanges();\n        }\n        return this.ConcatenateChanges(forwardChanges, reverseChanges);\n    }\n    /**\n     * Given the range to compute the diff on, this method finds the point:\n     * (midOriginal, midModified)\n     * that exists in the middle of the LCS of the two sequences and\n     * is the point at which the LCS problem may be broken down recursively.\n     * This method will try to keep the LCS trace in memory. If the LCS recursion\n     * point is calculated and the full trace is available in memory, then this method\n     * will return the change list.\n     * @param originalStart The start bound of the original sequence range\n     * @param originalEnd The end bound of the original sequence range\n     * @param modifiedStart The start bound of the modified sequence range\n     * @param modifiedEnd The end bound of the modified sequence range\n     * @param midOriginal The middle point of the original sequence range\n     * @param midModified The middle point of the modified sequence range\n     * @returns The diff changes, if available, otherwise null\n     */\n    ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n        let originalIndex = 0, modifiedIndex = 0;\n        let diagonalForwardStart = 0, diagonalForwardEnd = 0;\n        let diagonalReverseStart = 0, diagonalReverseEnd = 0;\n        // To traverse the edit graph and produce the proper LCS, our actual\n        // start position is just outside the given boundary\n        originalStart--;\n        modifiedStart--;\n        // We set these up to make the compiler happy, but they will\n        // be replaced before we return with the actual recursion point\n        midOriginalArr[0] = 0;\n        midModifiedArr[0] = 0;\n        // Clear out the history\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n        // Each cell in the two arrays corresponds to a diagonal in the edit graph.\n        // The integer value in the cell represents the originalIndex of the furthest\n        // reaching point found so far that ends in that diagonal.\n        // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n        const maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n        const numDiagonals = maxDifferences + 1;\n        const forwardPoints = new Int32Array(numDiagonals);\n        const reversePoints = new Int32Array(numDiagonals);\n        // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n        // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n        const diagonalForwardBase = (modifiedEnd - modifiedStart);\n        const diagonalReverseBase = (originalEnd - originalStart);\n        // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalForwardBase)\n        // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalReverseBase)\n        const diagonalForwardOffset = (originalStart - modifiedStart);\n        const diagonalReverseOffset = (originalEnd - modifiedEnd);\n        // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n        //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n        // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n        const delta = diagonalReverseBase - diagonalForwardBase;\n        const deltaIsEven = (delta % 2 === 0);\n        // Here we set up the start and end points as the furthest points found so far\n        // in both the forward and reverse directions, respectively\n        forwardPoints[diagonalForwardBase] = originalStart;\n        reversePoints[diagonalReverseBase] = originalEnd;\n        // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n        quitEarlyArr[0] = false;\n        // A couple of points:\n        // --With this method, we iterate on the number of differences between the two sequences.\n        //   The more differences there actually are, the longer this will take.\n        // --Also, as the number of differences increases, we have to search on diagonals further\n        //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n        // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n        //   is even and odd diagonals only when numDifferences is odd.\n        for (let numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n            let furthestOriginalIndex = 0;\n            let furthestModifiedIndex = 0;\n            // Run the algorithm in the forward direction\n            diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            for (let diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalStart, modifiedStart)\n                if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                    originalIndex = forwardPoints[diagonal + 1];\n                }\n                else {\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n                // Save the current originalIndex so we can test for false overlap in step 3\n                const tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // so long as the elements are equal.\n                while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n                    originalIndex++;\n                    modifiedIndex++;\n                }\n                forwardPoints[diagonal] = originalIndex;\n                if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n                    furthestOriginalIndex = originalIndex;\n                    furthestModifiedIndex = modifiedIndex;\n                }\n                // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n                // and diagonal is in the range of reverse diagonals computed for numDifferences-1\n                // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n                // then check for overlap.\n                if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n                    if (originalIndex >= reversePoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex <= reversePoints[diagonal] && 1447 /* LocalConstants.MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* LocalConstants.MaxDifferencesHistory */ + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Check to see if we should be quitting early, before moving on to the next iteration.\n            const matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n            if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, matchLengthOfLongest)) {\n                // We can't finish, so skip ahead to generating a result from what we have.\n                quitEarlyArr[0] = true;\n                // Use the furthest distance we got in the forward direction.\n                midOriginalArr[0] = furthestOriginalIndex;\n                midModifiedArr[0] = furthestModifiedIndex;\n                if (matchLengthOfLongest > 0 && 1447 /* LocalConstants.MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* LocalConstants.MaxDifferencesHistory */ + 1)) {\n                    // Enough of the history is in memory to walk it backwards\n                    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                }\n                else {\n                    // We didn't actually remember enough of the history.\n                    //Since we are quitting the diff early, we need to shift back the originalStart and modified start\n                    //back into the boundary limits since we decremented their value above beyond the boundary limit.\n                    originalStart++;\n                    modifiedStart++;\n                    return [\n                        new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n                    ];\n                }\n            }\n            // Run the algorithm in the reverse direction\n            diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            for (let diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalEnd, modifiedEnd)\n                if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n                // Save the current originalIndex so we can test for false overlap\n                const tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // as long as the elements are equal.\n                while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n                    originalIndex--;\n                    modifiedIndex--;\n                }\n                reversePoints[diagonal] = originalIndex;\n                // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n                // and diagonal is in the range of forward diagonals computed for numDifferences\n                // then check for overlap.\n                if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n                    if (originalIndex <= forwardPoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex >= forwardPoints[diagonal] && 1447 /* LocalConstants.MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* LocalConstants.MaxDifferencesHistory */ + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Save current vectors to history before the next iteration\n            if (numDifferences <= 1447 /* LocalConstants.MaxDifferencesHistory */) {\n                // We are allocating space for one extra int, which we fill with\n                // the index of the diagonal base index\n                let temp = new Int32Array(diagonalForwardEnd - diagonalForwardStart + 2);\n                temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n                MyArray.Copy2(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n                this.m_forwardHistory.push(temp);\n                temp = new Int32Array(diagonalReverseEnd - diagonalReverseStart + 2);\n                temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n                MyArray.Copy2(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n                this.m_reverseHistory.push(temp);\n            }\n        }\n        // If we got here, then we have the full trace in history. We just have to convert it to a change list\n        // NOTE: This part is a bit messy\n        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n    }\n    /**\n     * Shifts the given changes to provide a more intuitive diff.\n     * While the first element in a diff matches the first element after the diff,\n     * we shift the diff down.\n     *\n     * @param changes The list of changes to shift\n     * @returns The shifted changes\n     */\n    PrettifyChanges(changes) {\n        // Shift all the changes down first\n        for (let i = 0; i < changes.length; i++) {\n            const change = changes[i];\n            const originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this._originalElementsOrHash.length;\n            const modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this._modifiedElementsOrHash.length;\n            const checkOriginal = change.originalLength > 0;\n            const checkModified = change.modifiedLength > 0;\n            while (change.originalStart + change.originalLength < originalStop\n                && change.modifiedStart + change.modifiedLength < modifiedStop\n                && (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength))\n                && (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n                const startStrictEqual = this.ElementsAreStrictEqual(change.originalStart, change.modifiedStart);\n                const endStrictEqual = this.ElementsAreStrictEqual(change.originalStart + change.originalLength, change.modifiedStart + change.modifiedLength);\n                if (endStrictEqual && !startStrictEqual) {\n                    // moving the change down would create an equal change, but the elements are not strict equal\n                    break;\n                }\n                change.originalStart++;\n                change.modifiedStart++;\n            }\n            const mergedChangeArr = [null];\n            if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n                changes[i] = mergedChangeArr[0];\n                changes.splice(i + 1, 1);\n                i--;\n                continue;\n            }\n        }\n        // Shift changes back up until we hit empty or whitespace-only lines\n        for (let i = changes.length - 1; i >= 0; i--) {\n            const change = changes[i];\n            let originalStop = 0;\n            let modifiedStop = 0;\n            if (i > 0) {\n                const prevChange = changes[i - 1];\n                originalStop = prevChange.originalStart + prevChange.originalLength;\n                modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n            }\n            const checkOriginal = change.originalLength > 0;\n            const checkModified = change.modifiedLength > 0;\n            let bestDelta = 0;\n            let bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n            for (let delta = 1;; delta++) {\n                const originalStart = change.originalStart - delta;\n                const modifiedStart = change.modifiedStart - delta;\n                if (originalStart < originalStop || modifiedStart < modifiedStop) {\n                    break;\n                }\n                if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n                    break;\n                }\n                if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n                    break;\n                }\n                const touchingPreviousChange = (originalStart === originalStop && modifiedStart === modifiedStop);\n                const score = ((touchingPreviousChange ? 5 : 0)\n                    + this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength));\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestDelta = delta;\n                }\n            }\n            change.originalStart -= bestDelta;\n            change.modifiedStart -= bestDelta;\n            const mergedChangeArr = [null];\n            if (i > 0 && this.ChangesOverlap(changes[i - 1], changes[i], mergedChangeArr)) {\n                changes[i - 1] = mergedChangeArr[0];\n                changes.splice(i, 1);\n                i++;\n                continue;\n            }\n        }\n        // There could be multiple longest common substrings.\n        // Give preference to the ones containing longer lines\n        if (this._hasStrings) {\n            for (let i = 1, len = changes.length; i < len; i++) {\n                const aChange = changes[i - 1];\n                const bChange = changes[i];\n                const matchedLength = bChange.originalStart - aChange.originalStart - aChange.originalLength;\n                const aOriginalStart = aChange.originalStart;\n                const bOriginalEnd = bChange.originalStart + bChange.originalLength;\n                const abOriginalLength = bOriginalEnd - aOriginalStart;\n                const aModifiedStart = aChange.modifiedStart;\n                const bModifiedEnd = bChange.modifiedStart + bChange.modifiedLength;\n                const abModifiedLength = bModifiedEnd - aModifiedStart;\n                // Avoid wasting a lot of time with these searches\n                if (matchedLength < 5 && abOriginalLength < 20 && abModifiedLength < 20) {\n                    const t = this._findBetterContiguousSequence(aOriginalStart, abOriginalLength, aModifiedStart, abModifiedLength, matchedLength);\n                    if (t) {\n                        const [originalMatchStart, modifiedMatchStart] = t;\n                        if (originalMatchStart !== aChange.originalStart + aChange.originalLength || modifiedMatchStart !== aChange.modifiedStart + aChange.modifiedLength) {\n                            // switch to another sequence that has a better score\n                            aChange.originalLength = originalMatchStart - aChange.originalStart;\n                            aChange.modifiedLength = modifiedMatchStart - aChange.modifiedStart;\n                            bChange.originalStart = originalMatchStart + matchedLength;\n                            bChange.modifiedStart = modifiedMatchStart + matchedLength;\n                            bChange.originalLength = bOriginalEnd - bChange.originalStart;\n                            bChange.modifiedLength = bModifiedEnd - bChange.modifiedStart;\n                        }\n                    }\n                }\n            }\n        }\n        return changes;\n    }\n    _findBetterContiguousSequence(originalStart, originalLength, modifiedStart, modifiedLength, desiredLength) {\n        if (originalLength < desiredLength || modifiedLength < desiredLength) {\n            return null;\n        }\n        const originalMax = originalStart + originalLength - desiredLength + 1;\n        const modifiedMax = modifiedStart + modifiedLength - desiredLength + 1;\n        let bestScore = 0;\n        let bestOriginalStart = 0;\n        let bestModifiedStart = 0;\n        for (let i = originalStart; i < originalMax; i++) {\n            for (let j = modifiedStart; j < modifiedMax; j++) {\n                const score = this._contiguousSequenceScore(i, j, desiredLength);\n                if (score > 0 && score > bestScore) {\n                    bestScore = score;\n                    bestOriginalStart = i;\n                    bestModifiedStart = j;\n                }\n            }\n        }\n        if (bestScore > 0) {\n            return [bestOriginalStart, bestModifiedStart];\n        }\n        return null;\n    }\n    _contiguousSequenceScore(originalStart, modifiedStart, length) {\n        let score = 0;\n        for (let l = 0; l < length; l++) {\n            if (!this.ElementsAreEqual(originalStart + l, modifiedStart + l)) {\n                return 0;\n            }\n            score += this._originalStringElements[originalStart + l].length;\n        }\n        return score;\n    }\n    _OriginalIsBoundary(index) {\n        if (index <= 0 || index >= this._originalElementsOrHash.length - 1) {\n            return true;\n        }\n        return (this._hasStrings && /^\\s*$/.test(this._originalStringElements[index]));\n    }\n    _OriginalRegionIsBoundary(originalStart, originalLength) {\n        if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n            return true;\n        }\n        if (originalLength > 0) {\n            const originalEnd = originalStart + originalLength;\n            if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    _ModifiedIsBoundary(index) {\n        if (index <= 0 || index >= this._modifiedElementsOrHash.length - 1) {\n            return true;\n        }\n        return (this._hasStrings && /^\\s*$/.test(this._modifiedStringElements[index]));\n    }\n    _ModifiedRegionIsBoundary(modifiedStart, modifiedLength) {\n        if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n            return true;\n        }\n        if (modifiedLength > 0) {\n            const modifiedEnd = modifiedStart + modifiedLength;\n            if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    _boundaryScore(originalStart, originalLength, modifiedStart, modifiedLength) {\n        const originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n        const modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n        return (originalScore + modifiedScore);\n    }\n    /**\n     * Concatenates the two input DiffChange lists and returns the resulting\n     * list.\n     * @param The left changes\n     * @param The right changes\n     * @returns The concatenated list\n     */\n    ConcatenateChanges(left, right) {\n        const mergedChangeArr = [];\n        if (left.length === 0 || right.length === 0) {\n            return (right.length > 0) ? right : left;\n        }\n        else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n            // Since we break the problem down recursively, it is possible that we\n            // might recurse in the middle of a change thereby splitting it into\n            // two changes. Here in the combining stage, we detect and fuse those\n            // changes back together\n            const result = new Array(left.length + right.length - 1);\n            MyArray.Copy(left, 0, result, 0, left.length - 1);\n            result[left.length - 1] = mergedChangeArr[0];\n            MyArray.Copy(right, 1, result, left.length, right.length - 1);\n            return result;\n        }\n        else {\n            const result = new Array(left.length + right.length);\n            MyArray.Copy(left, 0, result, 0, left.length);\n            MyArray.Copy(right, 0, result, left.length, right.length);\n            return result;\n        }\n    }\n    /**\n     * Returns true if the two changes overlap and can be merged into a single\n     * change\n     * @param left The left change\n     * @param right The right change\n     * @param mergedChange The merged change if the two overlap, null otherwise\n     * @returns True if the two changes overlap\n     */\n    ChangesOverlap(left, right, mergedChangeArr) {\n        Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n        Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n        if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n            const originalStart = left.originalStart;\n            let originalLength = left.originalLength;\n            const modifiedStart = left.modifiedStart;\n            let modifiedLength = left.modifiedLength;\n            if (left.originalStart + left.originalLength >= right.originalStart) {\n                originalLength = right.originalStart + right.originalLength - left.originalStart;\n            }\n            if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n            }\n            mergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n            return true;\n        }\n        else {\n            mergedChangeArr[0] = null;\n            return false;\n        }\n    }\n    /**\n     * Helper method used to clip a diagonal index to the range of valid\n     * diagonals. This also decides whether or not the diagonal index,\n     * if it exceeds the boundary, should be clipped to the boundary or clipped\n     * one inside the boundary depending on the Even/Odd status of the boundary\n     * and numDifferences.\n     * @param diagonal The index of the diagonal to clip.\n     * @param numDifferences The current number of differences being iterated upon.\n     * @param diagonalBaseIndex The base reference diagonal.\n     * @param numDiagonals The total number of diagonals.\n     * @returns The clipped diagonal index.\n     */\n    ClipDiagonalBound(diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n        if (diagonal >= 0 && diagonal < numDiagonals) {\n            // Nothing to clip, its in range\n            return diagonal;\n        }\n        // diagonalsBelow: The number of diagonals below the reference diagonal\n        // diagonalsAbove: The number of diagonals above the reference diagonal\n        const diagonalsBelow = diagonalBaseIndex;\n        const diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n        const diffEven = (numDifferences % 2 === 0);\n        if (diagonal < 0) {\n            const lowerBoundEven = (diagonalsBelow % 2 === 0);\n            return (diffEven === lowerBoundEven) ? 0 : 1;\n        }\n        else {\n            const upperBoundEven = (diagonalsAbove % 2 === 0);\n            return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as arrays from './arrays.js';\nexport const strictEquals = (a, b) => a === b;\n/**\n * Checks if the items of two arrays are equal.\n * By default, strict equality is used to compare elements, but a custom equality comparer can be provided.\n */\nexport function itemsEquals(itemEquals = strictEquals) {\n    return (a, b) => arrays.equals(a, b, itemEquals);\n}\n/**\n * Uses `item.equals(other)` to determine equality.\n */\nexport function itemEquals() {\n    return (a, b) => a.equals(b);\n}\nexport function equalsIfDefined(v1, v2, equals) {\n    if (!v1 || !v2) {\n        return v1 === v2;\n    }\n    return equals(v1, v2);\n}\nconst objIds = new WeakMap();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as arrays from './arrays.js';\nimport * as types from './types.js';\nimport * as nls from '../../nls.js';\nfunction exceptionToErrorMessage(exception, verbose) {\n    if (verbose && (exception.stack || exception.stacktrace)) {\n        return nls.localize('stackTrace.format', \"{0}: {1}\", detectSystemErrorMessage(exception), stackToString(exception.stack) || stackToString(exception.stacktrace));\n    }\n    return detectSystemErrorMessage(exception);\n}\nfunction stackToString(stack) {\n    if (Array.isArray(stack)) {\n        return stack.join('\\n');\n    }\n    return stack;\n}\nfunction detectSystemErrorMessage(exception) {\n    // Custom node.js error from us\n    if (exception.code === 'ERR_UNC_HOST_NOT_ALLOWED') {\n        return `${exception.message}. Please update the 'security.allowedUNCHosts' setting if you want to allow this host.`;\n    }\n    // See https://nodejs.org/api/errors.html#errors_class_system_error\n    if (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\n        return nls.localize('nodeExceptionMessage', \"A system error occurred ({0})\", exception.message);\n    }\n    return exception.message || nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n/**\n * Tries to generate a human readable error message out of the error. If the verbose parameter\n * is set to true, the error message will include stacktrace details if provided.\n *\n * @returns A string containing the error message.\n */\nexport function toErrorMessage(error = null, verbose = false) {\n    if (!error) {\n        return nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n    }\n    if (Array.isArray(error)) {\n        const errors = arrays.coalesce(error);\n        const msg = toErrorMessage(errors[0], verbose);\n        if (errors.length > 1) {\n            return nls.localize('error.moreErrors', \"{0} ({1} errors in total)\", msg, errors.length);\n        }\n        return msg;\n    }\n    if (types.isString(error)) {\n        return error;\n    }\n    if (error.detail) {\n        const detail = error.detail;\n        if (detail.error) {\n            return exceptionToErrorMessage(detail.error, verbose);\n        }\n        if (detail.exception) {\n            return exceptionToErrorMessage(detail.exception, verbose);\n        }\n    }\n    if (error.stack) {\n        return exceptionToErrorMessage(error, verbose);\n    }\n    if (error.message) {\n        return error.message;\n    }\n    return nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n    constructor() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(() => {\n                if (e.stack) {\n                    if (ErrorNoTelemetry.isErrorNoTelemetry(e)) {\n                        throw new ErrorNoTelemetry(e.message + '\\n\\n' + e.stack);\n                    }\n                    throw new Error(e.message + '\\n\\n' + e.stack);\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    emit(e) {\n        this.listeners.forEach((listener) => {\n            listener(e);\n        });\n    }\n    onUnexpectedError(e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    }\n    // For external errors, we don't want the listeners to be called\n    onUnexpectedExternalError(e) {\n        this.unexpectedErrorHandler(e);\n    }\n}\nexport const errorHandler = new ErrorHandler();\nexport function onUnexpectedError(e) {\n    // ignore errors from cancelled promises\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nexport function onUnexpectedExternalError(e) {\n    // ignore errors from cancelled promises\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nexport function transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        const { name, message } = error;\n        const stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name,\n            message,\n            stack,\n            noTelemetry: ErrorNoTelemetry.isErrorNoTelemetry(error)\n        };\n    }\n    // return as is\n    return error;\n}\nconst canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isCancellationError(error) {\n    if (error instanceof CancellationError) {\n        return true;\n    }\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n// !!!IMPORTANT!!!\n// Do NOT change this class because it is also used as an API-type.\nexport class CancellationError extends Error {\n    constructor() {\n        super(canceledName);\n        this.name = this.message;\n    }\n}\n/**\n * @deprecated use {@link CancellationError `new CancellationError()`} instead\n */\nexport function canceled() {\n    const error = new Error(canceledName);\n    error.name = error.message;\n    return error;\n}\nexport function illegalArgument(name) {\n    if (name) {\n        return new Error(`Illegal argument: ${name}`);\n    }\n    else {\n        return new Error('Illegal argument');\n    }\n}\nexport function illegalState(name) {\n    if (name) {\n        return new Error(`Illegal state: ${name}`);\n    }\n    else {\n        return new Error('Illegal state');\n    }\n}\nexport class NotSupportedError extends Error {\n    constructor(message) {\n        super('NotSupported');\n        if (message) {\n            this.message = message;\n        }\n    }\n}\n/**\n * Error that when thrown won't be logged in telemetry as an unhandled error.\n */\nexport class ErrorNoTelemetry extends Error {\n    constructor(msg) {\n        super(msg);\n        this.name = 'CodeExpectedError';\n    }\n    static fromError(err) {\n        if (err instanceof ErrorNoTelemetry) {\n            return err;\n        }\n        const result = new ErrorNoTelemetry();\n        result.message = err.message;\n        result.stack = err.stack;\n        return result;\n    }\n    static isErrorNoTelemetry(err) {\n        return err.name === 'CodeExpectedError';\n    }\n}\n/**\n * This error indicates a bug.\n * Do not throw this for invalid user input.\n * Only catch this error to recover gracefully from bugs.\n */\nexport class BugIndicatingError extends Error {\n    constructor(message) {\n        super(message || 'An unexpected bug occurred.');\n        Object.setPrototypeOf(this, BugIndicatingError.prototype);\n        // Because we know for sure only buggy code throws this,\n        // we definitely want to break here and fix the bug.\n        // eslint-disable-next-line no-debugger\n        // debugger;\n    }\n}\n","import { onUnexpectedError } from './errors.js';\nimport { createSingleCallFunction } from './functional.js';\nimport { combinedDisposable, Disposable, DisposableStore, toDisposable } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nimport { StopWatch } from './stopwatch.js';\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever a listener is GC'ed without having been disposed. This is a LEAK.\n// -----------------------------------------------------------------------------------------------------------------------\nconst _enableListenerGCedWarning = false;\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever an emitter with listeners is disposed. That is a sign of code smell.\n// -----------------------------------------------------------------------------------------------------------------------\nconst _enableDisposeWithListenerWarning = false;\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever a snapshotted event is used repeatedly without cleanup.\n// See https://github.com/microsoft/vscode/issues/142851\n// -----------------------------------------------------------------------------------------------------------------------\nconst _enableSnapshotPotentialLeakWarning = false;\nexport var Event;\n(function (Event) {\n    Event.None = () => Disposable.None;\n    function _addLeakageTraceLogic(options) {\n        if (_enableSnapshotPotentialLeakWarning) {\n            const { onDidAddListener: origListenerDidAdd } = options;\n            const stack = Stacktrace.create();\n            let count = 0;\n            options.onDidAddListener = () => {\n                if (++count === 2) {\n                    console.warn('snapshotted emitter LIKELY used public and SHOULD HAVE BEEN created with DisposableStore. snapshotted here');\n                    stack.print();\n                }\n                origListenerDidAdd === null || origListenerDidAdd === void 0 ? void 0 : origListenerDidAdd();\n            };\n        }\n    }\n    /**\n     * Given an event, returns another event which debounces calls and defers the listeners to a later task via a shared\n     * `setTimeout`. The event is converted into a signal (`Event<void>`) to avoid additional object creation as a\n     * result of merging events and to try prevent race conditions that could arise when using related deferred and\n     * non-deferred events.\n     *\n     * This is useful for deferring non-critical work (eg. general UI updates) to ensure it does not block critical work\n     * (eg. latency of keypress to text rendered).\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @param event The event source for the new event.\n     * @param disposable A disposable store to add the new EventEmitter to.\n     */\n    function defer(event, disposable) {\n        return debounce(event, () => void 0, 0, undefined, true, undefined, disposable);\n    }\n    Event.defer = defer;\n    /**\n     * Given an event, returns another event which only fires once.\n     *\n     * @param event The event source for the new event.\n     */\n    function once(event) {\n        return (listener, thisArgs = null, disposables) => {\n            // we need this, in case the event fires during the listener call\n            let didFire = false;\n            let result = undefined;\n            result = event(e => {\n                if (didFire) {\n                    return;\n                }\n                else if (result) {\n                    result.dispose();\n                }\n                else {\n                    didFire = true;\n                }\n                return listener.call(thisArgs, e);\n            }, null, disposables);\n            if (didFire) {\n                result.dispose();\n            }\n            return result;\n        };\n    }\n    Event.once = once;\n    /**\n     * Maps an event of one type into an event of another type using a mapping function, similar to how\n     * `Array.prototype.map` works.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @param event The event source for the new event.\n     * @param map The mapping function.\n     * @param disposable A disposable store to add the new EventEmitter to.\n     */\n    function map(event, map, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => listener.call(thisArgs, map(i)), null, disposables), disposable);\n    }\n    Event.map = map;\n    /**\n     * Wraps an event in another event that performs some function on the event object before firing.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @param event The event source for the new event.\n     * @param each The function to perform on the event object.\n     * @param disposable A disposable store to add the new EventEmitter to.\n     */\n    function forEach(event, each, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables), disposable);\n    }\n    Event.forEach = forEach;\n    function filter(event, filter, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables), disposable);\n    }\n    Event.filter = filter;\n    /**\n     * Given an event, returns the same event but typed as `Event<void>`.\n     */\n    function signal(event) {\n        return event;\n    }\n    Event.signal = signal;\n    function any(...events) {\n        return (listener, thisArgs = null, disposables) => {\n            const disposable = combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e))));\n            return addAndReturnDisposable(disposable, disposables);\n        };\n    }\n    Event.any = any;\n    /**\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     */\n    function reduce(event, merge, initial, disposable) {\n        let output = initial;\n        return map(event, e => {\n            output = merge(output, e);\n            return output;\n        }, disposable);\n    }\n    Event.reduce = reduce;\n    function snapshot(event, disposable) {\n        let listener;\n        const options = {\n            onWillAddFirstListener() {\n                listener = event(emitter.fire, emitter);\n            },\n            onDidRemoveLastListener() {\n                listener === null || listener === void 0 ? void 0 : listener.dispose();\n            }\n        };\n        if (!disposable) {\n            _addLeakageTraceLogic(options);\n        }\n        const emitter = new Emitter(options);\n        disposable === null || disposable === void 0 ? void 0 : disposable.add(emitter);\n        return emitter.event;\n    }\n    /**\n     * Adds the IDisposable to the store if it's set, and returns it. Useful to\n     * Event function implementation.\n     */\n    function addAndReturnDisposable(d, store) {\n        if (store instanceof Array) {\n            store.push(d);\n        }\n        else if (store) {\n            store.add(d);\n        }\n        return d;\n    }\n    function debounce(event, merge, delay = 100, leading = false, flushOnListenerRemove = false, leakWarningThreshold, disposable) {\n        let subscription;\n        let output = undefined;\n        let handle = undefined;\n        let numDebouncedCalls = 0;\n        let doFire;\n        const options = {\n            leakWarningThreshold,\n            onWillAddFirstListener() {\n                subscription = event(cur => {\n                    numDebouncedCalls++;\n                    output = merge(output, cur);\n                    if (leading && !handle) {\n                        emitter.fire(output);\n                        output = undefined;\n                    }\n                    doFire = () => {\n                        const _output = output;\n                        output = undefined;\n                        handle = undefined;\n                        if (!leading || numDebouncedCalls > 1) {\n                            emitter.fire(_output);\n                        }\n                        numDebouncedCalls = 0;\n                    };\n                    if (typeof delay === 'number') {\n                        clearTimeout(handle);\n                        handle = setTimeout(doFire, delay);\n                    }\n                    else {\n                        if (handle === undefined) {\n                            handle = 0;\n                            queueMicrotask(doFire);\n                        }\n                    }\n                });\n            },\n            onWillRemoveListener() {\n                if (flushOnListenerRemove && numDebouncedCalls > 0) {\n                    doFire === null || doFire === void 0 ? void 0 : doFire();\n                }\n            },\n            onDidRemoveLastListener() {\n                doFire = undefined;\n                subscription.dispose();\n            }\n        };\n        if (!disposable) {\n            _addLeakageTraceLogic(options);\n        }\n        const emitter = new Emitter(options);\n        disposable === null || disposable === void 0 ? void 0 : disposable.add(emitter);\n        return emitter.event;\n    }\n    Event.debounce = debounce;\n    /**\n     * Debounces an event, firing after some delay (default=0) with an array of all event original objects.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     */\n    function accumulate(event, delay = 0, disposable) {\n        return Event.debounce(event, (last, e) => {\n            if (!last) {\n                return [e];\n            }\n            last.push(e);\n            return last;\n        }, delay, undefined, true, undefined, disposable);\n    }\n    Event.accumulate = accumulate;\n    /**\n     * Filters an event such that some condition is _not_ met more than once in a row, effectively ensuring duplicate\n     * event objects from different sources do not fire the same event object.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @param event The event source for the new event.\n     * @param equals The equality condition.\n     * @param disposable A disposable store to add the new EventEmitter to.\n     *\n     * @example\n     * ```\n     * // Fire only one time when a single window is opened or focused\n     * Event.latch(Event.any(onDidOpenWindow, onDidFocusWindow))\n     * ```\n     */\n    function latch(event, equals = (a, b) => a === b, disposable) {\n        let firstCall = true;\n        let cache;\n        return filter(event, value => {\n            const shouldEmit = firstCall || !equals(value, cache);\n            firstCall = false;\n            cache = value;\n            return shouldEmit;\n        }, disposable);\n    }\n    Event.latch = latch;\n    /**\n     * Splits an event whose parameter is a union type into 2 separate events for each type in the union.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @example\n     * ```\n     * const event = new EventEmitter<number | undefined>().event;\n     * const [numberEvent, undefinedEvent] = Event.split(event, isUndefined);\n     * ```\n     *\n     * @param event The event source for the new event.\n     * @param isT A function that determines what event is of the first type.\n     * @param disposable A disposable store to add the new EventEmitter to.\n     */\n    function split(event, isT, disposable) {\n        return [\n            Event.filter(event, isT, disposable),\n            Event.filter(event, e => !isT(e), disposable),\n        ];\n    }\n    Event.split = split;\n    /**\n     * Buffers an event until it has a listener attached.\n     *\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     *\n     * @param event The event source for the new event.\n     * @param flushAfterTimeout Determines whether to flush the buffer after a timeout immediately or after a\n     * `setTimeout` when the first event listener is added.\n     * @param _buffer Internal: A source event array used for tests.\n     *\n     * @example\n     * ```\n     * // Start accumulating events, when the first listener is attached, flush\n     * // the event after a timeout such that multiple listeners attached before\n     * // the timeout would receive the event\n     * this.onInstallExtension = Event.buffer(service.onInstallExtension, true);\n     * ```\n     */\n    function buffer(event, flushAfterTimeout = false, _buffer = [], disposable) {\n        let buffer = _buffer.slice();\n        let listener = event(e => {\n            if (buffer) {\n                buffer.push(e);\n            }\n            else {\n                emitter.fire(e);\n            }\n        });\n        if (disposable) {\n            disposable.add(listener);\n        }\n        const flush = () => {\n            buffer === null || buffer === void 0 ? void 0 : buffer.forEach(e => emitter.fire(e));\n            buffer = null;\n        };\n        const emitter = new Emitter({\n            onWillAddFirstListener() {\n                if (!listener) {\n                    listener = event(e => emitter.fire(e));\n                    if (disposable) {\n                        disposable.add(listener);\n                    }\n                }\n            },\n            onDidAddFirstListener() {\n                if (buffer) {\n                    if (flushAfterTimeout) {\n                        setTimeout(flush);\n                    }\n                    else {\n                        flush();\n                    }\n                }\n            },\n            onDidRemoveLastListener() {\n                if (listener) {\n                    listener.dispose();\n                }\n                listener = null;\n            }\n        });\n        if (disposable) {\n            disposable.add(emitter);\n        }\n        return emitter.event;\n    }\n    Event.buffer = buffer;\n    /**\n     * Wraps the event in an {@link IChainableEvent}, allowing a more functional programming style.\n     *\n     * @example\n     * ```\n     * // Normal\n     * const onEnterPressNormal = Event.filter(\n     *   Event.map(onKeyPress.event, e => new StandardKeyboardEvent(e)),\n     *   e.keyCode === KeyCode.Enter\n     * ).event;\n     *\n     * // Using chain\n     * const onEnterPressChain = Event.chain(onKeyPress.event, $ => $\n     *   .map(e => new StandardKeyboardEvent(e))\n     *   .filter(e => e.keyCode === KeyCode.Enter)\n     * );\n     * ```\n     */\n    function chain(event, sythensize) {\n        const fn = (listener, thisArgs, disposables) => {\n            const cs = sythensize(new ChainableSynthesis());\n            return event(function (value) {\n                const result = cs.evaluate(value);\n                if (result !== HaltChainable) {\n                    listener.call(thisArgs, result);\n                }\n            }, undefined, disposables);\n        };\n        return fn;\n    }\n    Event.chain = chain;\n    const HaltChainable = Symbol('HaltChainable');\n    class ChainableSynthesis {\n        constructor() {\n            this.steps = [];\n        }\n        map(fn) {\n            this.steps.push(fn);\n            return this;\n        }\n        forEach(fn) {\n            this.steps.push(v => {\n                fn(v);\n                return v;\n            });\n            return this;\n        }\n        filter(fn) {\n            this.steps.push(v => fn(v) ? v : HaltChainable);\n            return this;\n        }\n        reduce(merge, initial) {\n            let last = initial;\n            this.steps.push(v => {\n                last = merge(last, v);\n                return last;\n            });\n            return this;\n        }\n        latch(equals = (a, b) => a === b) {\n            let firstCall = true;\n            let cache;\n            this.steps.push(value => {\n                const shouldEmit = firstCall || !equals(value, cache);\n                firstCall = false;\n                cache = value;\n                return shouldEmit ? value : HaltChainable;\n            });\n            return this;\n        }\n        evaluate(value) {\n            for (const step of this.steps) {\n                value = step(value);\n                if (value === HaltChainable) {\n                    break;\n                }\n            }\n            return value;\n        }\n    }\n    /**\n     * Creates an {@link Event} from a node event emitter.\n     */\n    function fromNodeEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(map(...args));\n        const onFirstListenerAdd = () => emitter.on(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n        const result = new Emitter({ onWillAddFirstListener: onFirstListenerAdd, onDidRemoveLastListener: onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromNodeEventEmitter = fromNodeEventEmitter;\n    /**\n     * Creates an {@link Event} from a DOM event emitter.\n     */\n    function fromDOMEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(map(...args));\n        const onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n        const result = new Emitter({ onWillAddFirstListener: onFirstListenerAdd, onDidRemoveLastListener: onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromDOMEventEmitter = fromDOMEventEmitter;\n    /**\n     * Creates a promise out of an event, using the {@link Event.once} helper.\n     */\n    function toPromise(event) {\n        return new Promise(resolve => once(event)(resolve));\n    }\n    Event.toPromise = toPromise;\n    /**\n     * Creates an event out of a promise that fires once when the promise is\n     * resolved with the result of the promise or `undefined`.\n     */\n    function fromPromise(promise) {\n        const result = new Emitter();\n        promise.then(res => {\n            result.fire(res);\n        }, () => {\n            result.fire(undefined);\n        }).finally(() => {\n            result.dispose();\n        });\n        return result.event;\n    }\n    Event.fromPromise = fromPromise;\n    function runAndSubscribe(event, handler, initial) {\n        handler(initial);\n        return event(e => handler(e));\n    }\n    Event.runAndSubscribe = runAndSubscribe;\n    class EmitterObserver {\n        constructor(_observable, store) {\n            this._observable = _observable;\n            this._counter = 0;\n            this._hasChanged = false;\n            const options = {\n                onWillAddFirstListener: () => {\n                    _observable.addObserver(this);\n                },\n                onDidRemoveLastListener: () => {\n                    _observable.removeObserver(this);\n                }\n            };\n            if (!store) {\n                _addLeakageTraceLogic(options);\n            }\n            this.emitter = new Emitter(options);\n            if (store) {\n                store.add(this.emitter);\n            }\n        }\n        beginUpdate(_observable) {\n            // assert(_observable === this.obs);\n            this._counter++;\n        }\n        handlePossibleChange(_observable) {\n            // assert(_observable === this.obs);\n        }\n        handleChange(_observable, _change) {\n            // assert(_observable === this.obs);\n            this._hasChanged = true;\n        }\n        endUpdate(_observable) {\n            // assert(_observable === this.obs);\n            this._counter--;\n            if (this._counter === 0) {\n                this._observable.reportChanges();\n                if (this._hasChanged) {\n                    this._hasChanged = false;\n                    this.emitter.fire(this._observable.get());\n                }\n            }\n        }\n    }\n    /**\n     * Creates an event emitter that is fired when the observable changes.\n     * Each listeners subscribes to the emitter.\n     */\n    function fromObservable(obs, store) {\n        const observer = new EmitterObserver(obs, store);\n        return observer.emitter.event;\n    }\n    Event.fromObservable = fromObservable;\n    /**\n     * Each listener is attached to the observable directly.\n     */\n    function fromObservableLight(observable) {\n        return (listener, thisArgs, disposables) => {\n            let count = 0;\n            let didChange = false;\n            const observer = {\n                beginUpdate() {\n                    count++;\n                },\n                endUpdate() {\n                    count--;\n                    if (count === 0) {\n                        observable.reportChanges();\n                        if (didChange) {\n                            didChange = false;\n                            listener.call(thisArgs);\n                        }\n                    }\n                },\n                handlePossibleChange() {\n                    // noop\n                },\n                handleChange() {\n                    didChange = true;\n                }\n            };\n            observable.addObserver(observer);\n            observable.reportChanges();\n            const disposable = {\n                dispose() {\n                    observable.removeObserver(observer);\n                }\n            };\n            if (disposables instanceof DisposableStore) {\n                disposables.add(disposable);\n            }\n            else if (Array.isArray(disposables)) {\n                disposables.push(disposable);\n            }\n            return disposable;\n        };\n    }\n    Event.fromObservableLight = fromObservableLight;\n})(Event || (Event = {}));\nexport class EventProfiling {\n    constructor(name) {\n        this.listenerCount = 0;\n        this.invocationCount = 0;\n        this.elapsedOverall = 0;\n        this.durations = [];\n        this.name = `${name}_${EventProfiling._idPool++}`;\n        EventProfiling.all.add(this);\n    }\n    start(listenerCount) {\n        this._stopWatch = new StopWatch();\n        this.listenerCount = listenerCount;\n    }\n    stop() {\n        if (this._stopWatch) {\n            const elapsed = this._stopWatch.elapsed();\n            this.durations.push(elapsed);\n            this.elapsedOverall += elapsed;\n            this.invocationCount += 1;\n            this._stopWatch = undefined;\n        }\n    }\n}\nEventProfiling.all = new Set();\nEventProfiling._idPool = 0;\nlet _globalLeakWarningThreshold = -1;\nclass LeakageMonitor {\n    constructor(threshold, name = Math.random().toString(18).slice(2, 5)) {\n        this.threshold = threshold;\n        this.name = name;\n        this._warnCountdown = 0;\n    }\n    dispose() {\n        var _a;\n        (_a = this._stacks) === null || _a === void 0 ? void 0 : _a.clear();\n    }\n    check(stack, listenerCount) {\n        const threshold = this.threshold;\n        if (threshold <= 0 || listenerCount < threshold) {\n            return undefined;\n        }\n        if (!this._stacks) {\n            this._stacks = new Map();\n        }\n        const count = (this._stacks.get(stack.value) || 0);\n        this._stacks.set(stack.value, count + 1);\n        this._warnCountdown -= 1;\n        if (this._warnCountdown <= 0) {\n            // only warn on first exceed and then every time the limit\n            // is exceeded by 50% again\n            this._warnCountdown = threshold * 0.5;\n            // find most frequent listener and print warning\n            let topStack;\n            let topCount = 0;\n            for (const [stack, count] of this._stacks) {\n                if (!topStack || topCount < count) {\n                    topStack = stack;\n                    topCount = count;\n                }\n            }\n            console.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n            console.warn(topStack);\n        }\n        return () => {\n            const count = (this._stacks.get(stack.value) || 0);\n            this._stacks.set(stack.value, count - 1);\n        };\n    }\n}\nclass Stacktrace {\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn(this.value.split('\\n').slice(2).join('\\n'));\n    }\n}\nclass UniqueContainer {\n    constructor(value) {\n        this.value = value;\n    }\n}\nconst compactionThreshold = 2;\nconst forEachListener = (listeners, fn) => {\n    if (listeners instanceof UniqueContainer) {\n        fn(listeners);\n    }\n    else {\n        for (let i = 0; i < listeners.length; i++) {\n            const l = listeners[i];\n            if (l) {\n                fn(l);\n            }\n        }\n    }\n};\nconst _listenerFinalizers = _enableListenerGCedWarning\n    ? new FinalizationRegistry(heldValue => {\n        if (typeof heldValue === 'string') {\n            console.warn('[LEAKING LISTENER] GC\\'ed a listener that was NOT yet disposed. This is where is was created:');\n            console.warn(heldValue);\n        }\n    })\n    : undefined;\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n    class Document {\n\n        private readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n        public onDidChange = this._onDidChange.event;\n\n        // getter-style\n        // get onDidChange(): Event<(value:string)=>any> {\n        // \treturn this._onDidChange.event;\n        // }\n\n        private _doIt() {\n            //...\n            this._onDidChange.fire(value);\n        }\n    }\n */\nexport class Emitter {\n    constructor(options) {\n        var _a, _b, _c, _d, _e;\n        this._size = 0;\n        this._options = options;\n        this._leakageMon = _globalLeakWarningThreshold > 0 || ((_a = this._options) === null || _a === void 0 ? void 0 : _a.leakWarningThreshold) ? new LeakageMonitor((_c = (_b = this._options) === null || _b === void 0 ? void 0 : _b.leakWarningThreshold) !== null && _c !== void 0 ? _c : _globalLeakWarningThreshold) : undefined;\n        this._perfMon = ((_d = this._options) === null || _d === void 0 ? void 0 : _d._profName) ? new EventProfiling(this._options._profName) : undefined;\n        this._deliveryQueue = (_e = this._options) === null || _e === void 0 ? void 0 : _e.deliveryQueue;\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        if (!this._disposed) {\n            this._disposed = true;\n            // It is bad to have listeners at the time of disposing an emitter, it is worst to have listeners keep the emitter\n            // alive via the reference that's embedded in their disposables. Therefore we loop over all remaining listeners and\n            // unset their subscriptions/disposables. Looping and blaming remaining listeners is done on next tick because the\n            // the following programming pattern is very popular:\n            //\n            // const someModel = this._disposables.add(new ModelObject()); // (1) create and register model\n            // this._disposables.add(someModel.onDidChange(() => { ... }); // (2) subscribe and register model-event listener\n            // ...later...\n            // this._disposables.dispose(); disposes (1) then (2): don't warn after (1) but after the \"overall dispose\" is done\n            if (((_a = this._deliveryQueue) === null || _a === void 0 ? void 0 : _a.current) === this) {\n                this._deliveryQueue.reset();\n            }\n            if (this._listeners) {\n                if (_enableDisposeWithListenerWarning) {\n                    const listeners = this._listeners;\n                    queueMicrotask(() => {\n                        forEachListener(listeners, l => { var _a; return (_a = l.stack) === null || _a === void 0 ? void 0 : _a.print(); });\n                    });\n                }\n                this._listeners = undefined;\n                this._size = 0;\n            }\n            (_c = (_b = this._options) === null || _b === void 0 ? void 0 : _b.onDidRemoveLastListener) === null || _c === void 0 ? void 0 : _c.call(_b);\n            (_d = this._leakageMon) === null || _d === void 0 ? void 0 : _d.dispose();\n        }\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        var _a;\n        (_a = this._event) !== null && _a !== void 0 ? _a : (this._event = (callback, thisArgs, disposables) => {\n            var _a, _b, _c, _d, _e;\n            if (this._leakageMon && this._size > this._leakageMon.threshold * 3) {\n                console.warn(`[${this._leakageMon.name}] REFUSES to accept new listeners because it exceeded its threshold by far`);\n                return Disposable.None;\n            }\n            if (this._disposed) {\n                // todo: should we warn if a listener is added to a disposed emitter? This happens often\n                return Disposable.None;\n            }\n            if (thisArgs) {\n                callback = callback.bind(thisArgs);\n            }\n            const contained = new UniqueContainer(callback);\n            let removeMonitor;\n            let stack;\n            if (this._leakageMon && this._size >= Math.ceil(this._leakageMon.threshold * 0.2)) {\n                // check and record this emitter for potential leakage\n                contained.stack = Stacktrace.create();\n                removeMonitor = this._leakageMon.check(contained.stack, this._size + 1);\n            }\n            if (_enableDisposeWithListenerWarning) {\n                contained.stack = stack !== null && stack !== void 0 ? stack : Stacktrace.create();\n            }\n            if (!this._listeners) {\n                (_b = (_a = this._options) === null || _a === void 0 ? void 0 : _a.onWillAddFirstListener) === null || _b === void 0 ? void 0 : _b.call(_a, this);\n                this._listeners = contained;\n                (_d = (_c = this._options) === null || _c === void 0 ? void 0 : _c.onDidAddFirstListener) === null || _d === void 0 ? void 0 : _d.call(_c, this);\n            }\n            else if (this._listeners instanceof UniqueContainer) {\n                (_e = this._deliveryQueue) !== null && _e !== void 0 ? _e : (this._deliveryQueue = new EventDeliveryQueuePrivate());\n                this._listeners = [this._listeners, contained];\n            }\n            else {\n                this._listeners.push(contained);\n            }\n            this._size++;\n            const result = toDisposable(() => {\n                _listenerFinalizers === null || _listenerFinalizers === void 0 ? void 0 : _listenerFinalizers.unregister(result);\n                removeMonitor === null || removeMonitor === void 0 ? void 0 : removeMonitor();\n                this._removeListener(contained);\n            });\n            if (disposables instanceof DisposableStore) {\n                disposables.add(result);\n            }\n            else if (Array.isArray(disposables)) {\n                disposables.push(result);\n            }\n            if (_listenerFinalizers) {\n                const stack = new Error().stack.split('\\n').slice(2).join('\\n').trim();\n                _listenerFinalizers.register(result, stack, result);\n            }\n            return result;\n        });\n        return this._event;\n    }\n    _removeListener(listener) {\n        var _a, _b, _c, _d;\n        (_b = (_a = this._options) === null || _a === void 0 ? void 0 : _a.onWillRemoveListener) === null || _b === void 0 ? void 0 : _b.call(_a, this);\n        if (!this._listeners) {\n            return; // expected if a listener gets disposed\n        }\n        if (this._size === 1) {\n            this._listeners = undefined;\n            (_d = (_c = this._options) === null || _c === void 0 ? void 0 : _c.onDidRemoveLastListener) === null || _d === void 0 ? void 0 : _d.call(_c, this);\n            this._size = 0;\n            return;\n        }\n        // size > 1 which requires that listeners be a list:\n        const listeners = this._listeners;\n        const index = listeners.indexOf(listener);\n        if (index === -1) {\n            console.log('disposed?', this._disposed);\n            console.log('size?', this._size);\n            console.log('arr?', JSON.stringify(this._listeners));\n            throw new Error('Attempted to dispose unknown listener');\n        }\n        this._size--;\n        listeners[index] = undefined;\n        const adjustDeliveryQueue = this._deliveryQueue.current === this;\n        if (this._size * compactionThreshold <= listeners.length) {\n            let n = 0;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listeners[i]) {\n                    listeners[n++] = listeners[i];\n                }\n                else if (adjustDeliveryQueue) {\n                    this._deliveryQueue.end--;\n                    if (n < this._deliveryQueue.i) {\n                        this._deliveryQueue.i--;\n                    }\n                }\n            }\n            listeners.length = n;\n        }\n    }\n    _deliver(listener, value) {\n        var _a;\n        if (!listener) {\n            return;\n        }\n        const errorHandler = ((_a = this._options) === null || _a === void 0 ? void 0 : _a.onListenerError) || onUnexpectedError;\n        if (!errorHandler) {\n            listener.value(value);\n            return;\n        }\n        try {\n            listener.value(value);\n        }\n        catch (e) {\n            errorHandler(e);\n        }\n    }\n    /** Delivers items in the queue. Assumes the queue is ready to go. */\n    _deliverQueue(dq) {\n        const listeners = dq.current._listeners;\n        while (dq.i < dq.end) {\n            // important: dq.i is incremented before calling deliver() because it might reenter deliverQueue()\n            this._deliver(listeners[dq.i++], dq.value);\n        }\n        dq.reset();\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        var _a, _b, _c, _d;\n        if ((_a = this._deliveryQueue) === null || _a === void 0 ? void 0 : _a.current) {\n            this._deliverQueue(this._deliveryQueue);\n            (_b = this._perfMon) === null || _b === void 0 ? void 0 : _b.stop(); // last fire() will have starting perfmon, stop it before starting the next dispatch\n        }\n        (_c = this._perfMon) === null || _c === void 0 ? void 0 : _c.start(this._size);\n        if (!this._listeners) {\n            // no-op\n        }\n        else if (this._listeners instanceof UniqueContainer) {\n            this._deliver(this._listeners, event);\n        }\n        else {\n            const dq = this._deliveryQueue;\n            dq.enqueue(this, event, this._listeners.length);\n            this._deliverQueue(dq);\n        }\n        (_d = this._perfMon) === null || _d === void 0 ? void 0 : _d.stop();\n    }\n    hasListeners() {\n        return this._size > 0;\n    }\n}\nexport const createEventDeliveryQueue = () => new EventDeliveryQueuePrivate();\nclass EventDeliveryQueuePrivate {\n    constructor() {\n        /**\n         * Index in current's listener list.\n         */\n        this.i = -1;\n        /**\n         * The last index in the listener's list to deliver.\n         */\n        this.end = 0;\n    }\n    enqueue(emitter, value, end) {\n        this.i = 0;\n        this.end = end;\n        this.current = emitter;\n        this.value = value;\n    }\n    reset() {\n        this.i = this.end; // force any current emission loop to stop, mainly for during dispose\n        this.current = undefined;\n        this.value = undefined;\n    }\n}\nexport class PauseableEmitter extends Emitter {\n    constructor(options) {\n        super(options);\n        this._isPaused = 0;\n        this._eventQueue = new LinkedList();\n        this._mergeFn = options === null || options === void 0 ? void 0 : options.merge;\n    }\n    pause() {\n        this._isPaused++;\n    }\n    resume() {\n        if (this._isPaused !== 0 && --this._isPaused === 0) {\n            if (this._mergeFn) {\n                // use the merge function to create a single composite\n                // event. make a copy in case firing pauses this emitter\n                if (this._eventQueue.size > 0) {\n                    const events = Array.from(this._eventQueue);\n                    this._eventQueue.clear();\n                    super.fire(this._mergeFn(events));\n                }\n            }\n            else {\n                // no merging, fire each event individually and test\n                // that this emitter isn't paused halfway through\n                while (!this._isPaused && this._eventQueue.size !== 0) {\n                    super.fire(this._eventQueue.shift());\n                }\n            }\n        }\n    }\n    fire(event) {\n        if (this._size) {\n            if (this._isPaused !== 0) {\n                this._eventQueue.push(event);\n            }\n            else {\n                super.fire(event);\n            }\n        }\n    }\n}\nexport class DebounceEmitter extends PauseableEmitter {\n    constructor(options) {\n        var _a;\n        super(options);\n        this._delay = (_a = options.delay) !== null && _a !== void 0 ? _a : 100;\n    }\n    fire(event) {\n        if (!this._handle) {\n            this.pause();\n            this._handle = setTimeout(() => {\n                this._handle = undefined;\n                this.resume();\n            }, this._delay);\n        }\n        super.fire(event);\n    }\n}\n/**\n * An emitter which queue all events and then process them at the\n * end of the event loop.\n */\nexport class MicrotaskEmitter extends Emitter {\n    constructor(options) {\n        super(options);\n        this._queuedEvents = [];\n        this._mergeFn = options === null || options === void 0 ? void 0 : options.merge;\n    }\n    fire(event) {\n        if (!this.hasListeners()) {\n            return;\n        }\n        this._queuedEvents.push(event);\n        if (this._queuedEvents.length === 1) {\n            queueMicrotask(() => {\n                if (this._mergeFn) {\n                    super.fire(this._mergeFn(this._queuedEvents));\n                }\n                else {\n                    this._queuedEvents.forEach(e => super.fire(e));\n                }\n                this._queuedEvents = [];\n            });\n        }\n    }\n}\n/**\n * An event emitter that multiplexes many events into a single event.\n *\n * @example Listen to the `onData` event of all `Thing`s, dynamically adding and removing `Thing`s\n * to the multiplexer as needed.\n *\n * ```typescript\n * const anythingDataMultiplexer = new EventMultiplexer<{ data: string }>();\n *\n * const thingListeners = DisposableMap<Thing, IDisposable>();\n *\n * thingService.onDidAddThing(thing => {\n *   thingListeners.set(thing, anythingDataMultiplexer.add(thing.onData);\n * });\n * thingService.onDidRemoveThing(thing => {\n *   thingListeners.deleteAndDispose(thing);\n * });\n *\n * anythingDataMultiplexer.event(e => {\n *   console.log('Something fired data ' + e.data)\n * });\n * ```\n */\nexport class EventMultiplexer {\n    constructor() {\n        this.hasListeners = false;\n        this.events = [];\n        this.emitter = new Emitter({\n            onWillAddFirstListener: () => this.onFirstListenerAdd(),\n            onDidRemoveLastListener: () => this.onLastListenerRemove()\n        });\n    }\n    get event() {\n        return this.emitter.event;\n    }\n    add(event) {\n        const e = { event: event, listener: null };\n        this.events.push(e);\n        if (this.hasListeners) {\n            this.hook(e);\n        }\n        const dispose = () => {\n            if (this.hasListeners) {\n                this.unhook(e);\n            }\n            const idx = this.events.indexOf(e);\n            this.events.splice(idx, 1);\n        };\n        return toDisposable(createSingleCallFunction(dispose));\n    }\n    onFirstListenerAdd() {\n        this.hasListeners = true;\n        this.events.forEach(e => this.hook(e));\n    }\n    onLastListenerRemove() {\n        this.hasListeners = false;\n        this.events.forEach(e => this.unhook(e));\n    }\n    hook(e) {\n        e.listener = e.event(r => this.emitter.fire(r));\n    }\n    unhook(e) {\n        var _a;\n        (_a = e.listener) === null || _a === void 0 ? void 0 : _a.dispose();\n        e.listener = null;\n    }\n    dispose() {\n        var _a;\n        this.emitter.dispose();\n        for (const e of this.events) {\n            (_a = e.listener) === null || _a === void 0 ? void 0 : _a.dispose();\n        }\n        this.events = [];\n    }\n}\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n    constructor() {\n        this.buffers = [];\n    }\n    wrapEvent(event) {\n        return (listener, thisArgs, disposables) => {\n            return event(i => {\n                const buffer = this.buffers[this.buffers.length - 1];\n                if (buffer) {\n                    buffer.push(() => listener.call(thisArgs, i));\n                }\n                else {\n                    listener.call(thisArgs, i);\n                }\n            }, undefined, disposables);\n        };\n    }\n    bufferEvents(fn) {\n        const buffer = [];\n        this.buffers.push(buffer);\n        const r = fn();\n        this.buffers.pop();\n        buffer.forEach(flush => flush());\n        return r;\n    }\n}\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay {\n    constructor() {\n        this.listening = false;\n        this.inputEvent = Event.None;\n        this.inputEventListener = Disposable.None;\n        this.emitter = new Emitter({\n            onDidAddFirstListener: () => {\n                this.listening = true;\n                this.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n            },\n            onDidRemoveLastListener: () => {\n                this.listening = false;\n                this.inputEventListener.dispose();\n            }\n        });\n        this.event = this.emitter.event;\n    }\n    set input(event) {\n        this.inputEvent = event;\n        if (this.listening) {\n            this.inputEventListener.dispose();\n            this.inputEventListener = event(this.emitter.fire, this.emitter);\n        }\n    }\n    dispose() {\n        this.inputEventListener.dispose();\n        this.emitter.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { posix, sep } from './path.js';\nimport { isWindows } from './platform.js';\nimport { startsWithIgnoreCase } from './strings.js';\nexport function isPathSeparator(code) {\n    return code === 47 /* CharCode.Slash */ || code === 92 /* CharCode.Backslash */;\n}\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath) {\n    return osPath.replace(/[\\\\/]/g, posix.sep);\n}\n/**\n * Takes a Windows OS path (using backward or forward slashes) and turns it into a posix path:\n * - turns backward slashes into forward slashes\n * - makes it absolute if it starts with a drive letter\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toPosixPath(osPath) {\n    if (osPath.indexOf('/') === -1) {\n        osPath = toSlashes(osPath);\n    }\n    if (/^[a-zA-Z]:(\\/|$)/.test(osPath)) { // starts with a drive letter\n        osPath = '/' + osPath;\n    }\n    return osPath;\n}\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path, sep = posix.sep) {\n    if (!path) {\n        return '';\n    }\n    const len = path.length;\n    const firstLetter = path.charCodeAt(0);\n    if (isPathSeparator(firstLetter)) {\n        if (isPathSeparator(path.charCodeAt(1))) {\n            // UNC candidate \\\\localhost\\shares\\ddd\n            //               ^^^^^^^^^^^^^^^^^^^\n            if (!isPathSeparator(path.charCodeAt(2))) {\n                let pos = 3;\n                const start = pos;\n                for (; pos < len; pos++) {\n                    if (isPathSeparator(path.charCodeAt(pos))) {\n                        break;\n                    }\n                }\n                if (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n                    pos += 1;\n                    for (; pos < len; pos++) {\n                        if (isPathSeparator(path.charCodeAt(pos))) {\n                            return path.slice(0, pos + 1) // consume this separator\n                                .replace(/[\\\\/]/g, sep);\n                        }\n                    }\n                }\n            }\n        }\n        // /user/far\n        // ^\n        return sep;\n    }\n    else if (isWindowsDriveLetter(firstLetter)) {\n        // check for windows drive letter c:\\ or c:\n        if (path.charCodeAt(1) === 58 /* CharCode.Colon */) {\n            if (isPathSeparator(path.charCodeAt(2))) {\n                // C:\\fff\n                // ^^^\n                return path.slice(0, 2) + sep;\n            }\n            else {\n                // C:\n                // ^^\n                return path.slice(0, 2);\n            }\n        }\n    }\n    // check for URI\n    // scheme://authority/path\n    // ^^^^^^^^^^^^^^^^^^^\n    let pos = path.indexOf('://');\n    if (pos !== -1) {\n        pos += 3; // 3 -> \"://\".length\n        for (; pos < len; pos++) {\n            if (isPathSeparator(path.charCodeAt(pos))) {\n                return path.slice(0, pos + 1); // consume this separator\n            }\n        }\n    }\n    return '';\n}\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqualOrParent` instead. If\n * you are in a context without services, consider to pass down the `extUri` from the\n * outside, or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqualOrParent(base, parentCandidate, ignoreCase, separator = sep) {\n    if (base === parentCandidate) {\n        return true;\n    }\n    if (!base || !parentCandidate) {\n        return false;\n    }\n    if (parentCandidate.length > base.length) {\n        return false;\n    }\n    if (ignoreCase) {\n        const beginsWith = startsWithIgnoreCase(base, parentCandidate);\n        if (!beginsWith) {\n            return false;\n        }\n        if (parentCandidate.length === base.length) {\n            return true; // same path, different casing\n        }\n        let sepOffset = parentCandidate.length;\n        if (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n            sepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n        }\n        return base.charAt(sepOffset) === separator;\n    }\n    if (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n        parentCandidate += separator;\n    }\n    return base.indexOf(parentCandidate) === 0;\n}\nexport function isWindowsDriveLetter(char0) {\n    return char0 >= 65 /* CharCode.A */ && char0 <= 90 /* CharCode.Z */ || char0 >= 97 /* CharCode.a */ && char0 <= 122 /* CharCode.z */;\n}\nexport function hasDriveLetter(path, isWindowsOS = isWindows) {\n    if (isWindowsOS) {\n        return isWindowsDriveLetter(path.charCodeAt(0)) && path.charCodeAt(1) === 58 /* CharCode.Colon */;\n    }\n    return false;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LRUCache } from './map.js';\nimport { getKoreanAltChars } from './naturalLanguage/korean.js';\nimport * as strings from './strings.js';\n// Combined filters\n/**\n * @returns A filter which combines the provided set\n * of filters with an or. The *first* filters that\n * matches defined the return value of the returned\n * filter.\n */\nexport function or(...filter) {\n    return function (word, wordToMatchAgainst) {\n        for (let i = 0, len = filter.length; i < len; i++) {\n            const match = filter[i](word, wordToMatchAgainst);\n            if (match) {\n                return match;\n            }\n        }\n        return null;\n    };\n}\n// Prefix\nexport const matchesStrictPrefix = _matchesPrefix.bind(undefined, false);\nexport const matchesPrefix = _matchesPrefix.bind(undefined, true);\nfunction _matchesPrefix(ignoreCase, word, wordToMatchAgainst) {\n    if (!wordToMatchAgainst || wordToMatchAgainst.length < word.length) {\n        return null;\n    }\n    let matches;\n    if (ignoreCase) {\n        matches = strings.startsWithIgnoreCase(wordToMatchAgainst, word);\n    }\n    else {\n        matches = wordToMatchAgainst.indexOf(word) === 0;\n    }\n    if (!matches) {\n        return null;\n    }\n    return word.length > 0 ? [{ start: 0, end: word.length }] : [];\n}\n// Contiguous Substring\nexport function matchesContiguousSubString(word, wordToMatchAgainst) {\n    const index = wordToMatchAgainst.toLowerCase().indexOf(word.toLowerCase());\n    if (index === -1) {\n        return null;\n    }\n    return [{ start: index, end: index + word.length }];\n}\n// Substring\nexport function matchesSubString(word, wordToMatchAgainst) {\n    return _matchesSubString(word.toLowerCase(), wordToMatchAgainst.toLowerCase(), 0, 0);\n}\nfunction _matchesSubString(word, wordToMatchAgainst, i, j) {\n    if (i === word.length) {\n        return [];\n    }\n    else if (j === wordToMatchAgainst.length) {\n        return null;\n    }\n    else {\n        if (word[i] === wordToMatchAgainst[j]) {\n            let result = null;\n            if (result = _matchesSubString(word, wordToMatchAgainst, i + 1, j + 1)) {\n                return join({ start: j, end: j + 1 }, result);\n            }\n            return null;\n        }\n        return _matchesSubString(word, wordToMatchAgainst, i, j + 1);\n    }\n}\n// CamelCase\nfunction isLower(code) {\n    return 97 /* CharCode.a */ <= code && code <= 122 /* CharCode.z */;\n}\nexport function isUpper(code) {\n    return 65 /* CharCode.A */ <= code && code <= 90 /* CharCode.Z */;\n}\nfunction isNumber(code) {\n    return 48 /* CharCode.Digit0 */ <= code && code <= 57 /* CharCode.Digit9 */;\n}\nfunction isWhitespace(code) {\n    return (code === 32 /* CharCode.Space */\n        || code === 9 /* CharCode.Tab */\n        || code === 10 /* CharCode.LineFeed */\n        || code === 13 /* CharCode.CarriageReturn */);\n}\nconst wordSeparators = new Set();\n// These are chosen as natural word separators based on writen text.\n// It is a subset of the word separators used by the monaco editor.\n'()[]{}<>`\\'\"-/;:,.?!'\n    .split('')\n    .forEach(s => wordSeparators.add(s.charCodeAt(0)));\nfunction isWordSeparator(code) {\n    return isWhitespace(code) || wordSeparators.has(code);\n}\nfunction charactersMatch(codeA, codeB) {\n    return (codeA === codeB) || (isWordSeparator(codeA) && isWordSeparator(codeB));\n}\nconst alternateCharsCache = new Map();\n/**\n * Gets alternative codes to the character code passed in. This comes in the\n * form of an array of character codes, all of which must match _in order_ to\n * successfully match.\n *\n * @param code The character code to check.\n */\nfunction getAlternateCodes(code) {\n    if (alternateCharsCache.has(code)) {\n        return alternateCharsCache.get(code);\n    }\n    // NOTE: This function is written in such a way that it can be extended in\n    // the future, but right now the return type takes into account it's only\n    // supported by a single \"alt codes provider\".\n    // `ArrayLike<ArrayLike<number>>` is a more appropriate type if changed.\n    let result;\n    const codes = getKoreanAltChars(code);\n    if (codes) {\n        result = codes;\n    }\n    alternateCharsCache.set(code, result);\n    return result;\n}\nfunction isAlphanumeric(code) {\n    return isLower(code) || isUpper(code) || isNumber(code);\n}\nfunction join(head, tail) {\n    if (tail.length === 0) {\n        tail = [head];\n    }\n    else if (head.end === tail[0].start) {\n        tail[0].start = head.start;\n    }\n    else {\n        tail.unshift(head);\n    }\n    return tail;\n}\nfunction nextAnchor(camelCaseWord, start) {\n    for (let i = start; i < camelCaseWord.length; i++) {\n        const c = camelCaseWord.charCodeAt(i);\n        if (isUpper(c) || isNumber(c) || (i > 0 && !isAlphanumeric(camelCaseWord.charCodeAt(i - 1)))) {\n            return i;\n        }\n    }\n    return camelCaseWord.length;\n}\nfunction _matchesCamelCase(word, camelCaseWord, i, j) {\n    if (i === word.length) {\n        return [];\n    }\n    else if (j === camelCaseWord.length) {\n        return null;\n    }\n    else if (word[i] !== camelCaseWord[j].toLowerCase()) {\n        return null;\n    }\n    else {\n        let result = null;\n        let nextUpperIndex = j + 1;\n        result = _matchesCamelCase(word, camelCaseWord, i + 1, j + 1);\n        while (!result && (nextUpperIndex = nextAnchor(camelCaseWord, nextUpperIndex)) < camelCaseWord.length) {\n            result = _matchesCamelCase(word, camelCaseWord, i + 1, nextUpperIndex);\n            nextUpperIndex++;\n        }\n        return result === null ? null : join({ start: j, end: j + 1 }, result);\n    }\n}\n// Heuristic to avoid computing camel case matcher for words that don't\n// look like camelCaseWords.\nfunction analyzeCamelCaseWord(word) {\n    let upper = 0, lower = 0, alpha = 0, numeric = 0, code = 0;\n    for (let i = 0; i < word.length; i++) {\n        code = word.charCodeAt(i);\n        if (isUpper(code)) {\n            upper++;\n        }\n        if (isLower(code)) {\n            lower++;\n        }\n        if (isAlphanumeric(code)) {\n            alpha++;\n        }\n        if (isNumber(code)) {\n            numeric++;\n        }\n    }\n    const upperPercent = upper / word.length;\n    const lowerPercent = lower / word.length;\n    const alphaPercent = alpha / word.length;\n    const numericPercent = numeric / word.length;\n    return { upperPercent, lowerPercent, alphaPercent, numericPercent };\n}\nfunction isUpperCaseWord(analysis) {\n    const { upperPercent, lowerPercent } = analysis;\n    return lowerPercent === 0 && upperPercent > 0.6;\n}\nfunction isCamelCaseWord(analysis) {\n    const { upperPercent, lowerPercent, alphaPercent, numericPercent } = analysis;\n    return lowerPercent > 0.2 && upperPercent < 0.8 && alphaPercent > 0.6 && numericPercent < 0.2;\n}\n// Heuristic to avoid computing camel case matcher for words that don't\n// look like camel case patterns.\nfunction isCamelCasePattern(word) {\n    let upper = 0, lower = 0, code = 0, whitespace = 0;\n    for (let i = 0; i < word.length; i++) {\n        code = word.charCodeAt(i);\n        if (isUpper(code)) {\n            upper++;\n        }\n        if (isLower(code)) {\n            lower++;\n        }\n        if (isWhitespace(code)) {\n            whitespace++;\n        }\n    }\n    if ((upper === 0 || lower === 0) && whitespace === 0) {\n        return word.length <= 30;\n    }\n    else {\n        return upper <= 5;\n    }\n}\nexport function matchesCamelCase(word, camelCaseWord) {\n    if (!camelCaseWord) {\n        return null;\n    }\n    camelCaseWord = camelCaseWord.trim();\n    if (camelCaseWord.length === 0) {\n        return null;\n    }\n    if (!isCamelCasePattern(word)) {\n        return null;\n    }\n    // TODO: Consider removing this check\n    if (camelCaseWord.length > 60) {\n        camelCaseWord = camelCaseWord.substring(0, 60);\n    }\n    const analysis = analyzeCamelCaseWord(camelCaseWord);\n    if (!isCamelCaseWord(analysis)) {\n        if (!isUpperCaseWord(analysis)) {\n            return null;\n        }\n        camelCaseWord = camelCaseWord.toLowerCase();\n    }\n    let result = null;\n    let i = 0;\n    word = word.toLowerCase();\n    while (i < camelCaseWord.length && (result = _matchesCamelCase(word, camelCaseWord, 0, i)) === null) {\n        i = nextAnchor(camelCaseWord, i + 1);\n    }\n    return result;\n}\n// Matches beginning of words supporting non-ASCII languages\n// If `contiguous` is true then matches word with beginnings of the words in the target. E.g. \"pul\" will match \"Git: Pull\"\n// Otherwise also matches sub string of the word with beginnings of the words in the target. E.g. \"gp\" or \"g p\" will match \"Git: Pull\"\n// Useful in cases where the target is words (e.g. command labels)\nexport function matchesWords(word, target, contiguous = false) {\n    if (!target || target.length === 0) {\n        return null;\n    }\n    let result = null;\n    let targetIndex = 0;\n    word = word.toLowerCase();\n    target = target.toLowerCase();\n    while (targetIndex < target.length) {\n        result = _matchesWords(word, target, 0, targetIndex, contiguous);\n        if (result !== null) {\n            break;\n        }\n        targetIndex = nextWord(target, targetIndex + 1);\n    }\n    return result;\n}\nfunction _matchesWords(word, target, wordIndex, targetIndex, contiguous) {\n    let targetIndexOffset = 0;\n    if (wordIndex === word.length) {\n        return [];\n    }\n    else if (targetIndex === target.length) {\n        return null;\n    }\n    else if (!charactersMatch(word.charCodeAt(wordIndex), target.charCodeAt(targetIndex))) {\n        // Verify alternate characters before exiting\n        const altChars = getAlternateCodes(word.charCodeAt(wordIndex));\n        if (!altChars) {\n            return null;\n        }\n        for (let k = 0; k < altChars.length; k++) {\n            if (!charactersMatch(altChars[k], target.charCodeAt(targetIndex + k))) {\n                return null;\n            }\n        }\n        targetIndexOffset += altChars.length - 1;\n    }\n    let result = null;\n    let nextWordIndex = targetIndex + targetIndexOffset + 1;\n    result = _matchesWords(word, target, wordIndex + 1, nextWordIndex, contiguous);\n    if (!contiguous) {\n        while (!result && (nextWordIndex = nextWord(target, nextWordIndex)) < target.length) {\n            result = _matchesWords(word, target, wordIndex + 1, nextWordIndex, contiguous);\n            nextWordIndex++;\n        }\n    }\n    if (!result) {\n        return null;\n    }\n    // If the characters don't exactly match, then they must be word separators (see charactersMatch(...)).\n    // We don't want to include this in the matches but we don't want to throw the target out all together so we return `result`.\n    if (word.charCodeAt(wordIndex) !== target.charCodeAt(targetIndex)) {\n        // Verify alternate characters before exiting\n        const altChars = getAlternateCodes(word.charCodeAt(wordIndex));\n        if (!altChars) {\n            return result;\n        }\n        for (let k = 0; k < altChars.length; k++) {\n            if (altChars[k] !== target.charCodeAt(targetIndex + k)) {\n                return result;\n            }\n        }\n    }\n    return join({ start: targetIndex, end: targetIndex + targetIndexOffset + 1 }, result);\n}\nfunction nextWord(word, start) {\n    for (let i = start; i < word.length; i++) {\n        if (isWordSeparator(word.charCodeAt(i)) ||\n            (i > 0 && isWordSeparator(word.charCodeAt(i - 1)))) {\n            return i;\n        }\n    }\n    return word.length;\n}\n// Fuzzy\nconst fuzzyContiguousFilter = or(matchesPrefix, matchesCamelCase, matchesContiguousSubString);\nconst fuzzySeparateFilter = or(matchesPrefix, matchesCamelCase, matchesSubString);\nconst fuzzyRegExpCache = new LRUCache(10000); // bounded to 10000 elements\nexport function matchesFuzzy(word, wordToMatchAgainst, enableSeparateSubstringMatching = false) {\n    if (typeof word !== 'string' || typeof wordToMatchAgainst !== 'string') {\n        return null; // return early for invalid input\n    }\n    // Form RegExp for wildcard matches\n    let regexp = fuzzyRegExpCache.get(word);\n    if (!regexp) {\n        regexp = new RegExp(strings.convertSimple2RegExpPattern(word), 'i');\n        fuzzyRegExpCache.set(word, regexp);\n    }\n    // RegExp Filter\n    const match = regexp.exec(wordToMatchAgainst);\n    if (match) {\n        return [{ start: match.index, end: match.index + match[0].length }];\n    }\n    // Default Filter\n    return enableSeparateSubstringMatching ? fuzzySeparateFilter(word, wordToMatchAgainst) : fuzzyContiguousFilter(word, wordToMatchAgainst);\n}\n/**\n * Match pattern against word in a fuzzy way. As in IntelliSense and faster and more\n * powerful than `matchesFuzzy`\n */\nexport function matchesFuzzy2(pattern, word) {\n    const score = fuzzyScore(pattern, pattern.toLowerCase(), 0, word, word.toLowerCase(), 0, { firstMatchCanBeWeak: true, boostFullMatch: true });\n    return score ? createMatches(score) : null;\n}\nexport function anyScore(pattern, lowPattern, patternPos, word, lowWord, wordPos) {\n    const max = Math.min(13, pattern.length);\n    for (; patternPos < max; patternPos++) {\n        const result = fuzzyScore(pattern, lowPattern, patternPos, word, lowWord, wordPos, { firstMatchCanBeWeak: true, boostFullMatch: true });\n        if (result) {\n            return result;\n        }\n    }\n    return [0, wordPos];\n}\n//#region --- fuzzyScore ---\nexport function createMatches(score) {\n    if (typeof score === 'undefined') {\n        return [];\n    }\n    const res = [];\n    const wordPos = score[1];\n    for (let i = score.length - 1; i > 1; i--) {\n        const pos = score[i] + wordPos;\n        const last = res[res.length - 1];\n        if (last && last.end === pos) {\n            last.end = pos + 1;\n        }\n        else {\n            res.push({ start: pos, end: pos + 1 });\n        }\n    }\n    return res;\n}\nconst _maxLen = 128;\nfunction initTable() {\n    const table = [];\n    const row = [];\n    for (let i = 0; i <= _maxLen; i++) {\n        row[i] = 0;\n    }\n    for (let i = 0; i <= _maxLen; i++) {\n        table.push(row.slice(0));\n    }\n    return table;\n}\nfunction initArr(maxLen) {\n    const row = [];\n    for (let i = 0; i <= maxLen; i++) {\n        row[i] = 0;\n    }\n    return row;\n}\nconst _minWordMatchPos = initArr(2 * _maxLen); // min word position for a certain pattern position\nconst _maxWordMatchPos = initArr(2 * _maxLen); // max word position for a certain pattern position\nconst _diag = initTable(); // the length of a contiguous diagonal match\nconst _table = initTable();\nconst _arrows = initTable();\nconst _debug = false;\nfunction printTable(table, pattern, patternLen, word, wordLen) {\n    function pad(s, n, pad = ' ') {\n        while (s.length < n) {\n            s = pad + s;\n        }\n        return s;\n    }\n    let ret = ` |   |${word.split('').map(c => pad(c, 3)).join('|')}\\n`;\n    for (let i = 0; i <= patternLen; i++) {\n        if (i === 0) {\n            ret += ' |';\n        }\n        else {\n            ret += `${pattern[i - 1]}|`;\n        }\n        ret += table[i].slice(0, wordLen + 1).map(n => pad(n.toString(), 3)).join('|') + '\\n';\n    }\n    return ret;\n}\nfunction printTables(pattern, patternStart, word, wordStart) {\n    pattern = pattern.substr(patternStart);\n    word = word.substr(wordStart);\n    console.log(printTable(_table, pattern, pattern.length, word, word.length));\n    console.log(printTable(_arrows, pattern, pattern.length, word, word.length));\n    console.log(printTable(_diag, pattern, pattern.length, word, word.length));\n}\nfunction isSeparatorAtPos(value, index) {\n    if (index < 0 || index >= value.length) {\n        return false;\n    }\n    const code = value.codePointAt(index);\n    switch (code) {\n        case 95 /* CharCode.Underline */:\n        case 45 /* CharCode.Dash */:\n        case 46 /* CharCode.Period */:\n        case 32 /* CharCode.Space */:\n        case 47 /* CharCode.Slash */:\n        case 92 /* CharCode.Backslash */:\n        case 39 /* CharCode.SingleQuote */:\n        case 34 /* CharCode.DoubleQuote */:\n        case 58 /* CharCode.Colon */:\n        case 36 /* CharCode.DollarSign */:\n        case 60 /* CharCode.LessThan */:\n        case 62 /* CharCode.GreaterThan */:\n        case 40 /* CharCode.OpenParen */:\n        case 41 /* CharCode.CloseParen */:\n        case 91 /* CharCode.OpenSquareBracket */:\n        case 93 /* CharCode.CloseSquareBracket */:\n        case 123 /* CharCode.OpenCurlyBrace */:\n        case 125 /* CharCode.CloseCurlyBrace */:\n            return true;\n        case undefined:\n            return false;\n        default:\n            if (strings.isEmojiImprecise(code)) {\n                return true;\n            }\n            return false;\n    }\n}\nfunction isWhitespaceAtPos(value, index) {\n    if (index < 0 || index >= value.length) {\n        return false;\n    }\n    const code = value.charCodeAt(index);\n    switch (code) {\n        case 32 /* CharCode.Space */:\n        case 9 /* CharCode.Tab */:\n            return true;\n        default:\n            return false;\n    }\n}\nfunction isUpperCaseAtPos(pos, word, wordLow) {\n    return word[pos] !== wordLow[pos];\n}\nexport function isPatternInWord(patternLow, patternPos, patternLen, wordLow, wordPos, wordLen, fillMinWordPosArr = false) {\n    while (patternPos < patternLen && wordPos < wordLen) {\n        if (patternLow[patternPos] === wordLow[wordPos]) {\n            if (fillMinWordPosArr) {\n                // Remember the min word position for each pattern position\n                _minWordMatchPos[patternPos] = wordPos;\n            }\n            patternPos += 1;\n        }\n        wordPos += 1;\n    }\n    return patternPos === patternLen; // pattern must be exhausted\n}\nexport var FuzzyScore;\n(function (FuzzyScore) {\n    /**\n     * No matches and value `-100`\n     */\n    FuzzyScore.Default = ([-100, 0]);\n    function isDefault(score) {\n        return !score || (score.length === 2 && score[0] === -100 && score[1] === 0);\n    }\n    FuzzyScore.isDefault = isDefault;\n})(FuzzyScore || (FuzzyScore = {}));\nexport class FuzzyScoreOptions {\n    constructor(firstMatchCanBeWeak, boostFullMatch) {\n        this.firstMatchCanBeWeak = firstMatchCanBeWeak;\n        this.boostFullMatch = boostFullMatch;\n    }\n}\nFuzzyScoreOptions.default = { boostFullMatch: true, firstMatchCanBeWeak: false };\nexport function fuzzyScore(pattern, patternLow, patternStart, word, wordLow, wordStart, options = FuzzyScoreOptions.default) {\n    const patternLen = pattern.length > _maxLen ? _maxLen : pattern.length;\n    const wordLen = word.length > _maxLen ? _maxLen : word.length;\n    if (patternStart >= patternLen || wordStart >= wordLen || (patternLen - patternStart) > (wordLen - wordStart)) {\n        return undefined;\n    }\n    // Run a simple check if the characters of pattern occur\n    // (in order) at all in word. If that isn't the case we\n    // stop because no match will be possible\n    if (!isPatternInWord(patternLow, patternStart, patternLen, wordLow, wordStart, wordLen, true)) {\n        return undefined;\n    }\n    // Find the max matching word position for each pattern position\n    // NOTE: the min matching word position was filled in above, in the `isPatternInWord` call\n    _fillInMaxWordMatchPos(patternLen, wordLen, patternStart, wordStart, patternLow, wordLow);\n    let row = 1;\n    let column = 1;\n    let patternPos = patternStart;\n    let wordPos = wordStart;\n    const hasStrongFirstMatch = [false];\n    // There will be a match, fill in tables\n    for (row = 1, patternPos = patternStart; patternPos < patternLen; row++, patternPos++) {\n        // Reduce search space to possible matching word positions and to possible access from next row\n        const minWordMatchPos = _minWordMatchPos[patternPos];\n        const maxWordMatchPos = _maxWordMatchPos[patternPos];\n        const nextMaxWordMatchPos = (patternPos + 1 < patternLen ? _maxWordMatchPos[patternPos + 1] : wordLen);\n        for (column = minWordMatchPos - wordStart + 1, wordPos = minWordMatchPos; wordPos < nextMaxWordMatchPos; column++, wordPos++) {\n            let score = Number.MIN_SAFE_INTEGER;\n            let canComeDiag = false;\n            if (wordPos <= maxWordMatchPos) {\n                score = _doScore(pattern, patternLow, patternPos, patternStart, word, wordLow, wordPos, wordLen, wordStart, _diag[row - 1][column - 1] === 0, hasStrongFirstMatch);\n            }\n            let diagScore = 0;\n            if (score !== Number.MAX_SAFE_INTEGER) {\n                canComeDiag = true;\n                diagScore = score + _table[row - 1][column - 1];\n            }\n            const canComeLeft = wordPos > minWordMatchPos;\n            const leftScore = canComeLeft ? _table[row][column - 1] + (_diag[row][column - 1] > 0 ? -5 : 0) : 0; // penalty for a gap start\n            const canComeLeftLeft = wordPos > minWordMatchPos + 1 && _diag[row][column - 1] > 0;\n            const leftLeftScore = canComeLeftLeft ? _table[row][column - 2] + (_diag[row][column - 2] > 0 ? -5 : 0) : 0; // penalty for a gap start\n            if (canComeLeftLeft && (!canComeLeft || leftLeftScore >= leftScore) && (!canComeDiag || leftLeftScore >= diagScore)) {\n                // always prefer choosing left left to jump over a diagonal because that means a match is earlier in the word\n                _table[row][column] = leftLeftScore;\n                _arrows[row][column] = 3 /* Arrow.LeftLeft */;\n                _diag[row][column] = 0;\n            }\n            else if (canComeLeft && (!canComeDiag || leftScore >= diagScore)) {\n                // always prefer choosing left since that means a match is earlier in the word\n                _table[row][column] = leftScore;\n                _arrows[row][column] = 2 /* Arrow.Left */;\n                _diag[row][column] = 0;\n            }\n            else if (canComeDiag) {\n                _table[row][column] = diagScore;\n                _arrows[row][column] = 1 /* Arrow.Diag */;\n                _diag[row][column] = _diag[row - 1][column - 1] + 1;\n            }\n            else {\n                throw new Error(`not possible`);\n            }\n        }\n    }\n    if (_debug) {\n        printTables(pattern, patternStart, word, wordStart);\n    }\n    if (!hasStrongFirstMatch[0] && !options.firstMatchCanBeWeak) {\n        return undefined;\n    }\n    row--;\n    column--;\n    const result = [_table[row][column], wordStart];\n    let backwardsDiagLength = 0;\n    let maxMatchColumn = 0;\n    while (row >= 1) {\n        // Find the column where we go diagonally up\n        let diagColumn = column;\n        do {\n            const arrow = _arrows[row][diagColumn];\n            if (arrow === 3 /* Arrow.LeftLeft */) {\n                diagColumn = diagColumn - 2;\n            }\n            else if (arrow === 2 /* Arrow.Left */) {\n                diagColumn = diagColumn - 1;\n            }\n            else {\n                // found the diagonal\n                break;\n            }\n        } while (diagColumn >= 1);\n        // Overturn the \"forwards\" decision if keeping the \"backwards\" diagonal would give a better match\n        if (backwardsDiagLength > 1 // only if we would have a contiguous match of 3 characters\n            && patternLow[patternStart + row - 1] === wordLow[wordStart + column - 1] // only if we can do a contiguous match diagonally\n            && !isUpperCaseAtPos(diagColumn + wordStart - 1, word, wordLow) // only if the forwards chose diagonal is not an uppercase\n            && backwardsDiagLength + 1 > _diag[row][diagColumn] // only if our contiguous match would be longer than the \"forwards\" contiguous match\n        ) {\n            diagColumn = column;\n        }\n        if (diagColumn === column) {\n            // this is a contiguous match\n            backwardsDiagLength++;\n        }\n        else {\n            backwardsDiagLength = 1;\n        }\n        if (!maxMatchColumn) {\n            // remember the last matched column\n            maxMatchColumn = diagColumn;\n        }\n        row--;\n        column = diagColumn - 1;\n        result.push(column);\n    }\n    if (wordLen === patternLen && options.boostFullMatch) {\n        // the word matches the pattern with all characters!\n        // giving the score a total match boost (to come up ahead other words)\n        result[0] += 2;\n    }\n    // Add 1 penalty for each skipped character in the word\n    const skippedCharsCount = maxMatchColumn - patternLen;\n    result[0] -= skippedCharsCount;\n    return result;\n}\nfunction _fillInMaxWordMatchPos(patternLen, wordLen, patternStart, wordStart, patternLow, wordLow) {\n    let patternPos = patternLen - 1;\n    let wordPos = wordLen - 1;\n    while (patternPos >= patternStart && wordPos >= wordStart) {\n        if (patternLow[patternPos] === wordLow[wordPos]) {\n            _maxWordMatchPos[patternPos] = wordPos;\n            patternPos--;\n        }\n        wordPos--;\n    }\n}\nfunction _doScore(pattern, patternLow, patternPos, patternStart, word, wordLow, wordPos, wordLen, wordStart, newMatchStart, outFirstMatchStrong) {\n    if (patternLow[patternPos] !== wordLow[wordPos]) {\n        return Number.MIN_SAFE_INTEGER;\n    }\n    let score = 1;\n    let isGapLocation = false;\n    if (wordPos === (patternPos - patternStart)) {\n        // common prefix: `foobar <-> foobaz`\n        //                            ^^^^^\n        score = pattern[patternPos] === word[wordPos] ? 7 : 5;\n    }\n    else if (isUpperCaseAtPos(wordPos, word, wordLow) && (wordPos === 0 || !isUpperCaseAtPos(wordPos - 1, word, wordLow))) {\n        // hitting upper-case: `foo <-> forOthers`\n        //                              ^^ ^\n        score = pattern[patternPos] === word[wordPos] ? 7 : 5;\n        isGapLocation = true;\n    }\n    else if (isSeparatorAtPos(wordLow, wordPos) && (wordPos === 0 || !isSeparatorAtPos(wordLow, wordPos - 1))) {\n        // hitting a separator: `. <-> foo.bar`\n        //                                ^\n        score = 5;\n    }\n    else if (isSeparatorAtPos(wordLow, wordPos - 1) || isWhitespaceAtPos(wordLow, wordPos - 1)) {\n        // post separator: `foo <-> bar_foo`\n        //                              ^^^\n        score = 5;\n        isGapLocation = true;\n    }\n    if (score > 1 && patternPos === patternStart) {\n        outFirstMatchStrong[0] = true;\n    }\n    if (!isGapLocation) {\n        isGapLocation = isUpperCaseAtPos(wordPos, word, wordLow) || isSeparatorAtPos(wordLow, wordPos - 1) || isWhitespaceAtPos(wordLow, wordPos - 1);\n    }\n    //\n    if (patternPos === patternStart) { // first character in pattern\n        if (wordPos > wordStart) {\n            // the first pattern character would match a word character that is not at the word start\n            // so introduce a penalty to account for the gap preceding this match\n            score -= isGapLocation ? 3 : 5;\n        }\n    }\n    else {\n        if (newMatchStart) {\n            // this would be the beginning of a new match (i.e. there would be a gap before this location)\n            score += isGapLocation ? 2 : 0;\n        }\n        else {\n            // this is part of a contiguous match, so give it a slight bonus, but do so only if it would not be a preferred gap location\n            score += isGapLocation ? 0 : 1;\n        }\n    }\n    if (wordPos + 1 === wordLen) {\n        // we always penalize gaps, but this gives unfair advantages to a match that would match the last character in the word\n        // so pretend there is a gap after the last character in the word to normalize things\n        score -= isGapLocation ? 3 : 5;\n    }\n    return score;\n}\n//#endregion\n//#region --- graceful ---\nexport function fuzzyScoreGracefulAggressive(pattern, lowPattern, patternPos, word, lowWord, wordPos, options) {\n    return fuzzyScoreWithPermutations(pattern, lowPattern, patternPos, word, lowWord, wordPos, true, options);\n}\nfunction fuzzyScoreWithPermutations(pattern, lowPattern, patternPos, word, lowWord, wordPos, aggressive, options) {\n    let top = fuzzyScore(pattern, lowPattern, patternPos, word, lowWord, wordPos, options);\n    if (top && !aggressive) {\n        // when using the original pattern yield a result we`\n        // return it unless we are aggressive and try to find\n        // a better alignment, e.g. `cno` -> `^co^ns^ole` or `^c^o^nsole`.\n        return top;\n    }\n    if (pattern.length >= 3) {\n        // When the pattern is long enough then try a few (max 7)\n        // permutations of the pattern to find a better match. The\n        // permutations only swap neighbouring characters, e.g\n        // `cnoso` becomes `conso`, `cnsoo`, `cnoos`.\n        const tries = Math.min(7, pattern.length - 1);\n        for (let movingPatternPos = patternPos + 1; movingPatternPos < tries; movingPatternPos++) {\n            const newPattern = nextTypoPermutation(pattern, movingPatternPos);\n            if (newPattern) {\n                const candidate = fuzzyScore(newPattern, newPattern.toLowerCase(), patternPos, word, lowWord, wordPos, options);\n                if (candidate) {\n                    candidate[0] -= 3; // permutation penalty\n                    if (!top || candidate[0] > top[0]) {\n                        top = candidate;\n                    }\n                }\n            }\n        }\n    }\n    return top;\n}\nfunction nextTypoPermutation(pattern, patternPos) {\n    if (patternPos + 1 >= pattern.length) {\n        return undefined;\n    }\n    const swap1 = pattern[patternPos];\n    const swap2 = pattern[patternPos + 1];\n    if (swap1 === swap2) {\n        return undefined;\n    }\n    return pattern.slice(0, patternPos)\n        + swap2\n        + swap1\n        + pattern.slice(patternPos + 2);\n}\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Given a function, returns a function that is only calling that function once.\n */\nexport function createSingleCallFunction(fn, fnDidRunCallback) {\n    const _this = this;\n    let didCall = false;\n    let result;\n    return function () {\n        if (didCall) {\n            return result;\n        }\n        didCall = true;\n        if (fnDidRunCallback) {\n            try {\n                result = fn.apply(_this, arguments);\n            }\n            finally {\n                fnDidRunCallback();\n            }\n        }\n        else {\n            result = fn.apply(_this, arguments);\n        }\n        return result;\n    };\n}\n","import { createMatches as createFuzzyMatches, fuzzyScore } from './filters.js';\nimport { sep } from './path.js';\nimport { isWindows } from './platform.js';\nimport { stripWildcards } from './strings.js';\nconst NO_SCORE2 = [undefined, []];\nexport function scoreFuzzy2(target, query, patternStart = 0, wordStart = 0) {\n    // Score: multiple inputs\n    const preparedQuery = query;\n    if (preparedQuery.values && preparedQuery.values.length > 1) {\n        return doScoreFuzzy2Multiple(target, preparedQuery.values, patternStart, wordStart);\n    }\n    // Score: single input\n    return doScoreFuzzy2Single(target, query, patternStart, wordStart);\n}\nfunction doScoreFuzzy2Multiple(target, query, patternStart, wordStart) {\n    let totalScore = 0;\n    const totalMatches = [];\n    for (const queryPiece of query) {\n        const [score, matches] = doScoreFuzzy2Single(target, queryPiece, patternStart, wordStart);\n        if (typeof score !== 'number') {\n            // if a single query value does not match, return with\n            // no score entirely, we require all queries to match\n            return NO_SCORE2;\n        }\n        totalScore += score;\n        totalMatches.push(...matches);\n    }\n    // if we have a score, ensure that the positions are\n    // sorted in ascending order and distinct\n    return [totalScore, normalizeMatches(totalMatches)];\n}\nfunction doScoreFuzzy2Single(target, query, patternStart, wordStart) {\n    const score = fuzzyScore(query.original, query.originalLowercase, patternStart, target, target.toLowerCase(), wordStart, { firstMatchCanBeWeak: true, boostFullMatch: true });\n    if (!score) {\n        return NO_SCORE2;\n    }\n    return [score[0], createFuzzyMatches(score)];\n}\nconst NO_ITEM_SCORE = Object.freeze({ score: 0 });\nfunction normalizeMatches(matches) {\n    // sort matches by start to be able to normalize\n    const sortedMatches = matches.sort((matchA, matchB) => {\n        return matchA.start - matchB.start;\n    });\n    // merge matches that overlap\n    const normalizedMatches = [];\n    let currentMatch = undefined;\n    for (const match of sortedMatches) {\n        // if we have no current match or the matches\n        // do not overlap, we take it as is and remember\n        // it for future merging\n        if (!currentMatch || !matchOverlaps(currentMatch, match)) {\n            currentMatch = match;\n            normalizedMatches.push(match);\n        }\n        // otherwise we merge the matches\n        else {\n            currentMatch.start = Math.min(currentMatch.start, match.start);\n            currentMatch.end = Math.max(currentMatch.end, match.end);\n        }\n    }\n    return normalizedMatches;\n}\nfunction matchOverlaps(matchA, matchB) {\n    if (matchA.end < matchB.start) {\n        return false; // A ends before B starts\n    }\n    if (matchB.end < matchA.start) {\n        return false; // B ends before A starts\n    }\n    return true;\n}\n/*\n * If a query is wrapped in quotes, the user does not want to\n * use fuzzy search for this query.\n */\nfunction queryExpectsExactMatch(query) {\n    return query.startsWith('\"') && query.endsWith('\"');\n}\n/**\n * Helper function to prepare a search value for scoring by removing unwanted characters\n * and allowing to score on multiple pieces separated by whitespace character.\n */\nconst MULTIPLE_QUERY_VALUES_SEPARATOR = ' ';\nexport function prepareQuery(original) {\n    if (typeof original !== 'string') {\n        original = '';\n    }\n    const originalLowercase = original.toLowerCase();\n    const { pathNormalized, normalized, normalizedLowercase } = normalizeQuery(original);\n    const containsPathSeparator = pathNormalized.indexOf(sep) >= 0;\n    const expectExactMatch = queryExpectsExactMatch(original);\n    let values = undefined;\n    const originalSplit = original.split(MULTIPLE_QUERY_VALUES_SEPARATOR);\n    if (originalSplit.length > 1) {\n        for (const originalPiece of originalSplit) {\n            const expectExactMatchPiece = queryExpectsExactMatch(originalPiece);\n            const { pathNormalized: pathNormalizedPiece, normalized: normalizedPiece, normalizedLowercase: normalizedLowercasePiece } = normalizeQuery(originalPiece);\n            if (normalizedPiece) {\n                if (!values) {\n                    values = [];\n                }\n                values.push({\n                    original: originalPiece,\n                    originalLowercase: originalPiece.toLowerCase(),\n                    pathNormalized: pathNormalizedPiece,\n                    normalized: normalizedPiece,\n                    normalizedLowercase: normalizedLowercasePiece,\n                    expectContiguousMatch: expectExactMatchPiece\n                });\n            }\n        }\n    }\n    return { original, originalLowercase, pathNormalized, normalized, normalizedLowercase, values, containsPathSeparator, expectContiguousMatch: expectExactMatch };\n}\nfunction normalizeQuery(original) {\n    let pathNormalized;\n    if (isWindows) {\n        pathNormalized = original.replace(/\\//g, sep); // Help Windows users to search for paths when using slash\n    }\n    else {\n        pathNormalized = original.replace(/\\\\/g, sep); // Help macOS/Linux users to search for paths when using backslash\n    }\n    // we remove quotes here because quotes are used for exact match search\n    const normalized = stripWildcards(pathNormalized).replace(/\\s|\"/g, '');\n    return {\n        pathNormalized,\n        normalized,\n        normalizedLowercase: normalized.toLowerCase()\n    };\n}\nexport function pieceToQuery(arg1) {\n    if (Array.isArray(arg1)) {\n        return prepareQuery(arg1.map(piece => piece.original).join(MULTIPLE_QUERY_VALUES_SEPARATOR));\n    }\n    return prepareQuery(arg1.original);\n}\n//#endregion\n","import { isThenable } from './async.js';\nimport { isEqualOrParent } from './extpath.js';\nimport { LRUCache } from './map.js';\nimport { basename, extname, posix, sep } from './path.js';\nimport { isLinux } from './platform.js';\nimport { escapeRegExpCharacters, ltrim } from './strings.js';\nexport const GLOBSTAR = '**';\nexport const GLOB_SPLIT = '/';\nconst PATH_REGEX = '[/\\\\\\\\]'; // any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]'; // any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\nfunction starsToRegExp(starCount, isLastPattern) {\n    switch (starCount) {\n        case 0:\n            return '';\n        case 1:\n            return `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n        default:\n            // Matches:  (Path Sep OR Path Val followed by Path Sep) 0-many times except when it's the last pattern\n            //           in which case also matches (Path Sep followed by Path Val)\n            // Group is non capturing because we don't need to capture at all (?:...)\n            // Overall we use non-greedy matching because it could be that we match too much\n            return `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}${isLastPattern ? `|${PATH_REGEX}${NO_PATH_REGEX}+` : ''})*?`;\n    }\n}\nexport function splitGlobAware(pattern, splitChar) {\n    if (!pattern) {\n        return [];\n    }\n    const segments = [];\n    let inBraces = false;\n    let inBrackets = false;\n    let curVal = '';\n    for (const char of pattern) {\n        switch (char) {\n            case splitChar:\n                if (!inBraces && !inBrackets) {\n                    segments.push(curVal);\n                    curVal = '';\n                    continue;\n                }\n                break;\n            case '{':\n                inBraces = true;\n                break;\n            case '}':\n                inBraces = false;\n                break;\n            case '[':\n                inBrackets = true;\n                break;\n            case ']':\n                inBrackets = false;\n                break;\n        }\n        curVal += char;\n    }\n    // Tail\n    if (curVal) {\n        segments.push(curVal);\n    }\n    return segments;\n}\nfunction parseRegExp(pattern) {\n    if (!pattern) {\n        return '';\n    }\n    let regEx = '';\n    // Split up into segments for each slash found\n    const segments = splitGlobAware(pattern, GLOB_SPLIT);\n    // Special case where we only have globstars\n    if (segments.every(segment => segment === GLOBSTAR)) {\n        regEx = '.*';\n    }\n    // Build regex over segments\n    else {\n        let previousSegmentWasGlobStar = false;\n        segments.forEach((segment, index) => {\n            // Treat globstar specially\n            if (segment === GLOBSTAR) {\n                // if we have more than one globstar after another, just ignore it\n                if (previousSegmentWasGlobStar) {\n                    return;\n                }\n                regEx += starsToRegExp(2, index === segments.length - 1);\n            }\n            // Anything else, not globstar\n            else {\n                // States\n                let inBraces = false;\n                let braceVal = '';\n                let inBrackets = false;\n                let bracketVal = '';\n                for (const char of segment) {\n                    // Support brace expansion\n                    if (char !== '}' && inBraces) {\n                        braceVal += char;\n                        continue;\n                    }\n                    // Support brackets\n                    if (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n                        let res;\n                        // range operator\n                        if (char === '-') {\n                            res = char;\n                        }\n                        // negation operator (only valid on first index in bracket)\n                        else if ((char === '^' || char === '!') && !bracketVal) {\n                            res = '^';\n                        }\n                        // glob split matching is not allowed within character ranges\n                        // see http://man7.org/linux/man-pages/man7/glob.7.html\n                        else if (char === GLOB_SPLIT) {\n                            res = '';\n                        }\n                        // anything else gets escaped\n                        else {\n                            res = escapeRegExpCharacters(char);\n                        }\n                        bracketVal += res;\n                        continue;\n                    }\n                    switch (char) {\n                        case '{':\n                            inBraces = true;\n                            continue;\n                        case '[':\n                            inBrackets = true;\n                            continue;\n                        case '}': {\n                            const choices = splitGlobAware(braceVal, ',');\n                            // Converts {foo,bar} => [foo|bar]\n                            const braceRegExp = `(?:${choices.map(choice => parseRegExp(choice)).join('|')})`;\n                            regEx += braceRegExp;\n                            inBraces = false;\n                            braceVal = '';\n                            break;\n                        }\n                        case ']': {\n                            regEx += ('[' + bracketVal + ']');\n                            inBrackets = false;\n                            bracketVal = '';\n                            break;\n                        }\n                        case '?':\n                            regEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n                            continue;\n                        case '*':\n                            regEx += starsToRegExp(1);\n                            continue;\n                        default:\n                            regEx += escapeRegExpCharacters(char);\n                    }\n                }\n                // Tail: Add the slash we had split on if there is more to\n                // come and the remaining pattern is not a globstar\n                // For example if pattern: some/**/*.js we want the \"/\" after\n                // some to be included in the RegEx to prevent a folder called\n                // \"something\" to match as well.\n                if (index < segments.length - 1 && // more segments to come after this\n                    (segments[index + 1] !== GLOBSTAR || // next segment is not **, or...\n                        index + 2 < segments.length // ...next segment is ** but there is more segments after that\n                    )) {\n                    regEx += PATH_REGEX;\n                }\n            }\n            // update globstar state\n            previousSegmentWasGlobStar = (segment === GLOBSTAR);\n        });\n    }\n    return regEx;\n}\n// regexes to check for trivial glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; // **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; // **/something\nconst T3 = /^{\\*\\*\\/\\*?[\\w\\.-]+\\/?(,\\*\\*\\/\\*?[\\w\\.-]+\\/?)*}$/; // {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/\\*?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/\\*?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; // Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; // **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; // something/else\nconst CACHE = new LRUCache(10000); // bounded to 10000 elements\nconst FALSE = function () {\n    return false;\n};\nconst NULL = function () {\n    return null;\n};\nfunction parsePattern(arg1, options) {\n    if (!arg1) {\n        return NULL;\n    }\n    // Handle relative patterns\n    let pattern;\n    if (typeof arg1 !== 'string') {\n        pattern = arg1.pattern;\n    }\n    else {\n        pattern = arg1;\n    }\n    // Whitespace trimming\n    pattern = pattern.trim();\n    // Check cache\n    const patternKey = `${pattern}_${!!options.trimForExclusions}`;\n    let parsedPattern = CACHE.get(patternKey);\n    if (parsedPattern) {\n        return wrapRelativePattern(parsedPattern, arg1);\n    }\n    // Check for Trivials\n    let match;\n    if (T1.test(pattern)) {\n        parsedPattern = trivia1(pattern.substr(4), pattern); // common pattern: **/*.txt just need endsWith check\n    }\n    else if (match = T2.exec(trimForExclusions(pattern, options))) { // common pattern: **/some.txt just need basename check\n        parsedPattern = trivia2(match[1], pattern);\n    }\n    else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n        parsedPattern = trivia3(pattern, options);\n    }\n    else if (match = T4.exec(trimForExclusions(pattern, options))) { // common pattern: **/something/else just need endsWith check\n        parsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n    }\n    else if (match = T5.exec(trimForExclusions(pattern, options))) { // common pattern: something/else just need equals check\n        parsedPattern = trivia4and5(match[1], pattern, false);\n    }\n    // Otherwise convert to pattern\n    else {\n        parsedPattern = toRegExp(pattern);\n    }\n    // Cache\n    CACHE.set(patternKey, parsedPattern);\n    return wrapRelativePattern(parsedPattern, arg1);\n}\nfunction wrapRelativePattern(parsedPattern, arg2) {\n    if (typeof arg2 === 'string') {\n        return parsedPattern;\n    }\n    const wrappedPattern = function (path, basename) {\n        if (!isEqualOrParent(path, arg2.base, !isLinux)) {\n            // skip glob matching if `base` is not a parent of `path`\n            return null;\n        }\n        // Given we have checked `base` being a parent of `path`,\n        // we can now remove the `base` portion of the `path`\n        // and only match on the remaining path components\n        // For that we try to extract the portion of the `path`\n        // that comes after the `base` portion. We have to account\n        // for the fact that `base` might end in a path separator\n        // (https://github.com/microsoft/vscode/issues/162498)\n        return parsedPattern(ltrim(path.substr(arg2.base.length), sep), basename);\n    };\n    // Make sure to preserve associated metadata\n    wrappedPattern.allBasenames = parsedPattern.allBasenames;\n    wrappedPattern.allPaths = parsedPattern.allPaths;\n    wrappedPattern.basenames = parsedPattern.basenames;\n    wrappedPattern.patterns = parsedPattern.patterns;\n    return wrappedPattern;\n}\nfunction trimForExclusions(pattern, options) {\n    return options.trimForExclusions && pattern.endsWith('/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n// common pattern: **/*.txt just need endsWith check\nfunction trivia1(base, pattern) {\n    return function (path, basename) {\n        return typeof path === 'string' && path.endsWith(base) ? pattern : null;\n    };\n}\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base, pattern) {\n    const slashBase = `/${base}`;\n    const backslashBase = `\\\\${base}`;\n    const parsedPattern = function (path, basename) {\n        if (typeof path !== 'string') {\n            return null;\n        }\n        if (basename) {\n            return basename === base ? pattern : null;\n        }\n        return path === base || path.endsWith(slashBase) || path.endsWith(backslashBase) ? pattern : null;\n    };\n    const basenames = [base];\n    parsedPattern.basenames = basenames;\n    parsedPattern.patterns = [pattern];\n    parsedPattern.allBasenames = basenames;\n    return parsedPattern;\n}\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern, options) {\n    const parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1)\n        .split(',')\n        .map(pattern => parsePattern(pattern, options))\n        .filter(pattern => pattern !== NULL), pattern);\n    const patternsLength = parsedPatterns.length;\n    if (!patternsLength) {\n        return NULL;\n    }\n    if (patternsLength === 1) {\n        return parsedPatterns[0];\n    }\n    const parsedPattern = function (path, basename) {\n        for (let i = 0, n = parsedPatterns.length; i < n; i++) {\n            if (parsedPatterns[i](path, basename)) {\n                return pattern;\n            }\n        }\n        return null;\n    };\n    const withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n    if (withBasenames) {\n        parsedPattern.allBasenames = withBasenames.allBasenames;\n    }\n    const allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, []);\n    if (allPaths.length) {\n        parsedPattern.allPaths = allPaths;\n    }\n    return parsedPattern;\n}\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(targetPath, pattern, matchPathEnds) {\n    const usingPosixSep = sep === posix.sep;\n    const nativePath = usingPosixSep ? targetPath : targetPath.replace(ALL_FORWARD_SLASHES, sep);\n    const nativePathEnd = sep + nativePath;\n    const targetPathEnd = posix.sep + targetPath;\n    let parsedPattern;\n    if (matchPathEnds) {\n        parsedPattern = function (path, basename) {\n            return typeof path === 'string' && ((path === nativePath || path.endsWith(nativePathEnd)) || !usingPosixSep && (path === targetPath || path.endsWith(targetPathEnd))) ? pattern : null;\n        };\n    }\n    else {\n        parsedPattern = function (path, basename) {\n            return typeof path === 'string' && (path === nativePath || (!usingPosixSep && path === targetPath)) ? pattern : null;\n        };\n    }\n    parsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + targetPath];\n    return parsedPattern;\n}\nfunction toRegExp(pattern) {\n    try {\n        const regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n        return function (path) {\n            regExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n            return typeof path === 'string' && regExp.test(path) ? pattern : null;\n        };\n    }\n    catch (error) {\n        return NULL;\n    }\n}\nexport function match(arg1, path, hasSibling) {\n    if (!arg1 || typeof path !== 'string') {\n        return false;\n    }\n    return parse(arg1)(path, undefined, hasSibling);\n}\nexport function parse(arg1, options = {}) {\n    if (!arg1) {\n        return FALSE;\n    }\n    // Glob with String\n    if (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n        const parsedPattern = parsePattern(arg1, options);\n        if (parsedPattern === NULL) {\n            return FALSE;\n        }\n        const resultPattern = function (path, basename) {\n            return !!parsedPattern(path, basename);\n        };\n        if (parsedPattern.allBasenames) {\n            resultPattern.allBasenames = parsedPattern.allBasenames;\n        }\n        if (parsedPattern.allPaths) {\n            resultPattern.allPaths = parsedPattern.allPaths;\n        }\n        return resultPattern;\n    }\n    // Glob with Expression\n    return parsedExpression(arg1, options);\n}\nexport function isRelativePattern(obj) {\n    const rp = obj;\n    if (!rp) {\n        return false;\n    }\n    return typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\nfunction parsedExpression(expression, options) {\n    const parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n        .map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n        .filter(pattern => pattern !== NULL));\n    const patternsLength = parsedPatterns.length;\n    if (!patternsLength) {\n        return NULL;\n    }\n    if (!parsedPatterns.some(parsedPattern => !!parsedPattern.requiresSiblings)) {\n        if (patternsLength === 1) {\n            return parsedPatterns[0];\n        }\n        const resultExpression = function (path, basename) {\n            let resultPromises = undefined;\n            for (let i = 0, n = parsedPatterns.length; i < n; i++) {\n                const result = parsedPatterns[i](path, basename);\n                if (typeof result === 'string') {\n                    return result; // immediately return as soon as the first expression matches\n                }\n                // If the result is a promise, we have to keep it for\n                // later processing and await the result properly.\n                if (isThenable(result)) {\n                    if (!resultPromises) {\n                        resultPromises = [];\n                    }\n                    resultPromises.push(result);\n                }\n            }\n            // With result promises, we have to loop over each and\n            // await the result before we can return any result.\n            if (resultPromises) {\n                return (async () => {\n                    for (const resultPromise of resultPromises) {\n                        const result = await resultPromise;\n                        if (typeof result === 'string') {\n                            return result;\n                        }\n                    }\n                    return null;\n                })();\n            }\n            return null;\n        };\n        const withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n        if (withBasenames) {\n            resultExpression.allBasenames = withBasenames.allBasenames;\n        }\n        const allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, []);\n        if (allPaths.length) {\n            resultExpression.allPaths = allPaths;\n        }\n        return resultExpression;\n    }\n    const resultExpression = function (path, base, hasSibling) {\n        let name = undefined;\n        let resultPromises = undefined;\n        for (let i = 0, n = parsedPatterns.length; i < n; i++) {\n            // Pattern matches path\n            const parsedPattern = parsedPatterns[i];\n            if (parsedPattern.requiresSiblings && hasSibling) {\n                if (!base) {\n                    base = basename(path);\n                }\n                if (!name) {\n                    name = base.substr(0, base.length - extname(path).length);\n                }\n            }\n            const result = parsedPattern(path, base, name, hasSibling);\n            if (typeof result === 'string') {\n                return result; // immediately return as soon as the first expression matches\n            }\n            // If the result is a promise, we have to keep it for\n            // later processing and await the result properly.\n            if (isThenable(result)) {\n                if (!resultPromises) {\n                    resultPromises = [];\n                }\n                resultPromises.push(result);\n            }\n        }\n        // With result promises, we have to loop over each and\n        // await the result before we can return any result.\n        if (resultPromises) {\n            return (async () => {\n                for (const resultPromise of resultPromises) {\n                    const result = await resultPromise;\n                    if (typeof result === 'string') {\n                        return result;\n                    }\n                }\n                return null;\n            })();\n        }\n        return null;\n    };\n    const withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n    if (withBasenames) {\n        resultExpression.allBasenames = withBasenames.allBasenames;\n    }\n    const allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, []);\n    if (allPaths.length) {\n        resultExpression.allPaths = allPaths;\n    }\n    return resultExpression;\n}\nfunction parseExpressionPattern(pattern, value, options) {\n    if (value === false) {\n        return NULL; // pattern is disabled\n    }\n    const parsedPattern = parsePattern(pattern, options);\n    if (parsedPattern === NULL) {\n        return NULL;\n    }\n    // Expression Pattern is <boolean>\n    if (typeof value === 'boolean') {\n        return parsedPattern;\n    }\n    // Expression Pattern is <SiblingClause>\n    if (value) {\n        const when = value.when;\n        if (typeof when === 'string') {\n            const result = (path, basename, name, hasSibling) => {\n                if (!hasSibling || !parsedPattern(path, basename)) {\n                    return null;\n                }\n                const clausePattern = when.replace('$(basename)', () => name);\n                const matched = hasSibling(clausePattern);\n                return isThenable(matched) ?\n                    matched.then(match => match ? pattern : null) :\n                    matched ? pattern : null;\n            };\n            result.requiresSiblings = true;\n            return result;\n        }\n    }\n    // Expression is anything\n    return parsedPattern;\n}\nfunction aggregateBasenameMatches(parsedPatterns, result) {\n    const basenamePatterns = parsedPatterns.filter(parsedPattern => !!parsedPattern.basenames);\n    if (basenamePatterns.length < 2) {\n        return parsedPatterns;\n    }\n    const basenames = basenamePatterns.reduce((all, current) => {\n        const basenames = current.basenames;\n        return basenames ? all.concat(basenames) : all;\n    }, []);\n    let patterns;\n    if (result) {\n        patterns = [];\n        for (let i = 0, n = basenames.length; i < n; i++) {\n            patterns.push(result);\n        }\n    }\n    else {\n        patterns = basenamePatterns.reduce((all, current) => {\n            const patterns = current.patterns;\n            return patterns ? all.concat(patterns) : all;\n        }, []);\n    }\n    const aggregate = function (path, basename) {\n        if (typeof path !== 'string') {\n            return null;\n        }\n        if (!basename) {\n            let i;\n            for (i = path.length; i > 0; i--) {\n                const ch = path.charCodeAt(i - 1);\n                if (ch === 47 /* CharCode.Slash */ || ch === 92 /* CharCode.Backslash */) {\n                    break;\n                }\n            }\n            basename = path.substr(i);\n        }\n        const index = basenames.indexOf(basename);\n        return index !== -1 ? patterns[index] : null;\n    };\n    aggregate.basenames = basenames;\n    aggregate.patterns = patterns;\n    aggregate.allBasenames = basenames;\n    const aggregatedPatterns = parsedPatterns.filter(parsedPattern => !parsedPattern.basenames);\n    aggregatedPatterns.push(aggregate);\n    return aggregatedPatterns;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\n/**\n * Return a hash value for an object.\n */\nexport function hash(obj) {\n    return doHash(obj, 0);\n}\nexport function doHash(obj, hashVal) {\n    switch (typeof obj) {\n        case 'object':\n            if (obj === null) {\n                return numberHash(349, hashVal);\n            }\n            else if (Array.isArray(obj)) {\n                return arrayHash(obj, hashVal);\n            }\n            return objectHash(obj, hashVal);\n        case 'string':\n            return stringHash(obj, hashVal);\n        case 'boolean':\n            return booleanHash(obj, hashVal);\n        case 'number':\n            return numberHash(obj, hashVal);\n        case 'undefined':\n            return numberHash(937, hashVal);\n        default:\n            return numberHash(617, hashVal);\n    }\n}\nexport function numberHash(val, initialHashVal) {\n    return (((initialHashVal << 5) - initialHashVal) + val) | 0; // hashVal * 31 + ch, keep as int32\n}\nfunction booleanHash(b, initialHashVal) {\n    return numberHash(b ? 433 : 863, initialHashVal);\n}\nexport function stringHash(s, hashVal) {\n    hashVal = numberHash(149417, hashVal);\n    for (let i = 0, length = s.length; i < length; i++) {\n        hashVal = numberHash(s.charCodeAt(i), hashVal);\n    }\n    return hashVal;\n}\nfunction arrayHash(arr, initialHashVal) {\n    initialHashVal = numberHash(104579, initialHashVal);\n    return arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\nfunction objectHash(obj, initialHashVal) {\n    initialHashVal = numberHash(181387, initialHashVal);\n    return Object.keys(obj).sort().reduce((hashVal, key) => {\n        hashVal = stringHash(key, hashVal);\n        return doHash(obj[key], hashVal);\n    }, initialHashVal);\n}\nfunction leftRotate(value, bits, totalBits = 32) {\n    // delta + bits = totalBits\n    const delta = totalBits - bits;\n    // All ones, expect `delta` zeros aligned to the right\n    const mask = ~((1 << delta) - 1);\n    // Join (value left-shifted `bits` bits) with (masked value right-shifted `delta` bits)\n    return ((value << bits) | ((mask & value) >>> delta)) >>> 0;\n}\nfunction fill(dest, index = 0, count = dest.byteLength, value = 0) {\n    for (let i = 0; i < count; i++) {\n        dest[index + i] = value;\n    }\n}\nfunction leftPad(value, length, char = '0') {\n    while (value.length < length) {\n        value = char + value;\n    }\n    return value;\n}\nexport function toHexString(bufferOrValue, bitsize = 32) {\n    if (bufferOrValue instanceof ArrayBuffer) {\n        return Array.from(new Uint8Array(bufferOrValue)).map(b => b.toString(16).padStart(2, '0')).join('');\n    }\n    return leftPad((bufferOrValue >>> 0).toString(16), bitsize / 4);\n}\n/**\n * A SHA1 implementation that works with strings and does not allocate.\n */\nexport class StringSHA1 {\n    constructor() {\n        this._h0 = 0x67452301;\n        this._h1 = 0xEFCDAB89;\n        this._h2 = 0x98BADCFE;\n        this._h3 = 0x10325476;\n        this._h4 = 0xC3D2E1F0;\n        this._buff = new Uint8Array(64 /* SHA1Constant.BLOCK_SIZE */ + 3 /* to fit any utf-8 */);\n        this._buffDV = new DataView(this._buff.buffer);\n        this._buffLen = 0;\n        this._totalLen = 0;\n        this._leftoverHighSurrogate = 0;\n        this._finished = false;\n    }\n    update(str) {\n        const strLen = str.length;\n        if (strLen === 0) {\n            return;\n        }\n        const buff = this._buff;\n        let buffLen = this._buffLen;\n        let leftoverHighSurrogate = this._leftoverHighSurrogate;\n        let charCode;\n        let offset;\n        if (leftoverHighSurrogate !== 0) {\n            charCode = leftoverHighSurrogate;\n            offset = -1;\n            leftoverHighSurrogate = 0;\n        }\n        else {\n            charCode = str.charCodeAt(0);\n            offset = 0;\n        }\n        while (true) {\n            let codePoint = charCode;\n            if (strings.isHighSurrogate(charCode)) {\n                if (offset + 1 < strLen) {\n                    const nextCharCode = str.charCodeAt(offset + 1);\n                    if (strings.isLowSurrogate(nextCharCode)) {\n                        offset++;\n                        codePoint = strings.computeCodePoint(charCode, nextCharCode);\n                    }\n                    else {\n                        // illegal => unicode replacement character\n                        codePoint = 65533 /* SHA1Constant.UNICODE_REPLACEMENT */;\n                    }\n                }\n                else {\n                    // last character is a surrogate pair\n                    leftoverHighSurrogate = charCode;\n                    break;\n                }\n            }\n            else if (strings.isLowSurrogate(charCode)) {\n                // illegal => unicode replacement character\n                codePoint = 65533 /* SHA1Constant.UNICODE_REPLACEMENT */;\n            }\n            buffLen = this._push(buff, buffLen, codePoint);\n            offset++;\n            if (offset < strLen) {\n                charCode = str.charCodeAt(offset);\n            }\n            else {\n                break;\n            }\n        }\n        this._buffLen = buffLen;\n        this._leftoverHighSurrogate = leftoverHighSurrogate;\n    }\n    _push(buff, buffLen, codePoint) {\n        if (codePoint < 0x0080) {\n            buff[buffLen++] = codePoint;\n        }\n        else if (codePoint < 0x0800) {\n            buff[buffLen++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else if (codePoint < 0x10000) {\n            buff[buffLen++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else {\n            buff[buffLen++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        if (buffLen >= 64 /* SHA1Constant.BLOCK_SIZE */) {\n            this._step();\n            buffLen -= 64 /* SHA1Constant.BLOCK_SIZE */;\n            this._totalLen += 64 /* SHA1Constant.BLOCK_SIZE */;\n            // take last 3 in case of UTF8 overflow\n            buff[0] = buff[64 /* SHA1Constant.BLOCK_SIZE */ + 0];\n            buff[1] = buff[64 /* SHA1Constant.BLOCK_SIZE */ + 1];\n            buff[2] = buff[64 /* SHA1Constant.BLOCK_SIZE */ + 2];\n        }\n        return buffLen;\n    }\n    digest() {\n        if (!this._finished) {\n            this._finished = true;\n            if (this._leftoverHighSurrogate) {\n                // illegal => unicode replacement character\n                this._leftoverHighSurrogate = 0;\n                this._buffLen = this._push(this._buff, this._buffLen, 65533 /* SHA1Constant.UNICODE_REPLACEMENT */);\n            }\n            this._totalLen += this._buffLen;\n            this._wrapUp();\n        }\n        return toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n    }\n    _wrapUp() {\n        this._buff[this._buffLen++] = 0x80;\n        fill(this._buff, this._buffLen);\n        if (this._buffLen > 56) {\n            this._step();\n            fill(this._buff);\n        }\n        // this will fit because the mantissa can cover up to 52 bits\n        const ml = 8 * this._totalLen;\n        this._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n        this._buffDV.setUint32(60, ml % 4294967296, false);\n        this._step();\n    }\n    _step() {\n        const bigBlock32 = StringSHA1._bigBlock32;\n        const data = this._buffDV;\n        for (let j = 0; j < 64 /* 16*4 */; j += 4) {\n            bigBlock32.setUint32(j, data.getUint32(j, false), false);\n        }\n        for (let j = 64; j < 320 /* 80*4 */; j += 4) {\n            bigBlock32.setUint32(j, leftRotate((bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false)), 1), false);\n        }\n        let a = this._h0;\n        let b = this._h1;\n        let c = this._h2;\n        let d = this._h3;\n        let e = this._h4;\n        let f, k;\n        let temp;\n        for (let j = 0; j < 80; j++) {\n            if (j < 20) {\n                f = (b & c) | ((~b) & d);\n                k = 0x5A827999;\n            }\n            else if (j < 40) {\n                f = b ^ c ^ d;\n                k = 0x6ED9EBA1;\n            }\n            else if (j < 60) {\n                f = (b & c) | (b & d) | (c & d);\n                k = 0x8F1BBCDC;\n            }\n            else {\n                f = b ^ c ^ d;\n                k = 0xCA62C1D6;\n            }\n            temp = (leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false)) & 0xffffffff;\n            e = d;\n            d = c;\n            c = leftRotate(b, 30);\n            b = a;\n            a = temp;\n        }\n        this._h0 = (this._h0 + a) & 0xffffffff;\n        this._h1 = (this._h1 + b) & 0xffffffff;\n        this._h2 = (this._h2 + c) & 0xffffffff;\n        this._h3 = (this._h3 + d) & 0xffffffff;\n        this._h4 = (this._h4 + e) & 0xffffffff;\n    }\n}\nStringSHA1._bigBlock32 = new DataView(new ArrayBuffer(320)); // 80 * 4 = 320\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class HierarchicalKind {\n    constructor(value) {\n        this.value = value;\n    }\n    equals(other) {\n        return this.value === other.value;\n    }\n    contains(other) {\n        return this.equals(other) || this.value === '' || other.value.startsWith(this.value + HierarchicalKind.sep);\n    }\n    intersects(other) {\n        return this.contains(other) || other.contains(this);\n    }\n    append(...parts) {\n        return new HierarchicalKind((this.value ? [this.value, ...parts] : parts).join(HierarchicalKind.sep));\n    }\n}\nHierarchicalKind.sep = '.';\nHierarchicalKind.None = new HierarchicalKind('@@none@@'); // Special kind that matches nothing\nHierarchicalKind.Empty = new HierarchicalKind('');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ArrayNavigator } from './navigator.js';\nexport class HistoryNavigator {\n    constructor(history = [], limit = 10) {\n        this._initialize(history);\n        this._limit = limit;\n        this._onChange();\n    }\n    getHistory() {\n        return this._elements;\n    }\n    add(t) {\n        this._history.delete(t);\n        this._history.add(t);\n        this._onChange();\n    }\n    next() {\n        // This will navigate past the end of the last element, and in that case the input should be cleared\n        return this._navigator.next();\n    }\n    previous() {\n        if (this._currentPosition() !== 0) {\n            return this._navigator.previous();\n        }\n        return null;\n    }\n    current() {\n        return this._navigator.current();\n    }\n    first() {\n        return this._navigator.first();\n    }\n    last() {\n        return this._navigator.last();\n    }\n    isLast() {\n        return this._currentPosition() >= this._elements.length - 1;\n    }\n    isNowhere() {\n        return this._navigator.current() === null;\n    }\n    has(t) {\n        return this._history.has(t);\n    }\n    _onChange() {\n        this._reduceToLimit();\n        const elements = this._elements;\n        this._navigator = new ArrayNavigator(elements, 0, elements.length, elements.length);\n    }\n    _reduceToLimit() {\n        const data = this._elements;\n        if (data.length > this._limit) {\n            this._initialize(data.slice(data.length - this._limit));\n        }\n    }\n    _currentPosition() {\n        const currentElement = this._navigator.current();\n        if (!currentElement) {\n            return -1;\n        }\n        return this._elements.indexOf(currentElement);\n    }\n    _initialize(history) {\n        this._history = new Set();\n        for (const entry of history) {\n            this._history.add(entry);\n        }\n    }\n    get _elements() {\n        const elements = [];\n        this._history.forEach(e => elements.push(e));\n        return elements;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { env } from './process.js';\nexport function isHotReloadEnabled() {\n    return env && !!env['VSCODE_DEV'];\n}\nexport function registerHotReloadHandler(handler) {\n    if (!isHotReloadEnabled()) {\n        return { dispose() { } };\n    }\n    else {\n        const handlers = registerGlobalHotReloadHandler();\n        handlers.add(handler);\n        return {\n            dispose() { handlers.delete(handler); }\n        };\n    }\n}\nfunction registerGlobalHotReloadHandler() {\n    if (!hotReloadHandlers) {\n        hotReloadHandlers = new Set();\n    }\n    const g = globalThis;\n    if (!g.$hotReload_applyNewExports) {\n        g.$hotReload_applyNewExports = args => {\n            const args2 = { config: { mode: undefined }, ...args };\n            for (const h of hotReloadHandlers) {\n                const result = h(args2);\n                if (result) {\n                    return result;\n                }\n            }\n            return undefined;\n        };\n    }\n    return hotReloadHandlers;\n}\nlet hotReloadHandlers = undefined;\nif (isHotReloadEnabled()) {\n    // This code does not run in production.\n    registerHotReloadHandler(({ oldExports, newSrc, config }) => {\n        if (config.mode !== 'patch-prototype') {\n            return undefined;\n        }\n        return newExports => {\n            var _a, _b;\n            for (const key in newExports) {\n                const exportedItem = newExports[key];\n                console.log(`[hot-reload] Patching prototype methods of '${key}'`, { exportedItem });\n                if (typeof exportedItem === 'function' && exportedItem.prototype) {\n                    const oldExportedItem = oldExports[key];\n                    if (oldExportedItem) {\n                        for (const prop of Object.getOwnPropertyNames(exportedItem.prototype)) {\n                            const descriptor = Object.getOwnPropertyDescriptor(exportedItem.prototype, prop);\n                            const oldDescriptor = Object.getOwnPropertyDescriptor(oldExportedItem.prototype, prop);\n                            if (((_a = descriptor === null || descriptor === void 0 ? void 0 : descriptor.value) === null || _a === void 0 ? void 0 : _a.toString()) !== ((_b = oldDescriptor === null || oldDescriptor === void 0 ? void 0 : oldDescriptor.value) === null || _b === void 0 ? void 0 : _b.toString())) {\n                                console.log(`[hot-reload] Patching prototype method '${key}.${prop}'`);\n                            }\n                            Object.defineProperty(oldExportedItem.prototype, prop, descriptor);\n                        }\n                        newExports[key] = oldExportedItem;\n                    }\n                }\n            }\n            return true;\n        };\n    });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from './errors.js';\nimport { escapeIcons } from './iconLabels.js';\nimport { isEqual } from './resources.js';\nimport { escapeRegExpCharacters } from './strings.js';\nimport { URI } from './uri.js';\nexport class MarkdownString {\n    constructor(value = '', isTrustedOrOptions = false) {\n        var _a, _b, _c;\n        this.value = value;\n        if (typeof this.value !== 'string') {\n            throw illegalArgument('value');\n        }\n        if (typeof isTrustedOrOptions === 'boolean') {\n            this.isTrusted = isTrustedOrOptions;\n            this.supportThemeIcons = false;\n            this.supportHtml = false;\n        }\n        else {\n            this.isTrusted = (_a = isTrustedOrOptions.isTrusted) !== null && _a !== void 0 ? _a : undefined;\n            this.supportThemeIcons = (_b = isTrustedOrOptions.supportThemeIcons) !== null && _b !== void 0 ? _b : false;\n            this.supportHtml = (_c = isTrustedOrOptions.supportHtml) !== null && _c !== void 0 ? _c : false;\n        }\n    }\n    appendText(value, newlineStyle = 0 /* MarkdownStringTextNewlineStyle.Paragraph */) {\n        this.value += escapeMarkdownSyntaxTokens(this.supportThemeIcons ? escapeIcons(value) : value) // CodeQL [SM02383] The Markdown is fully sanitized after being rendered.\n            .replace(/([ \\t]+)/g, (_match, g1) => '&nbsp;'.repeat(g1.length)) // CodeQL [SM02383] The Markdown is fully sanitized after being rendered.\n            .replace(/\\>/gm, '\\\\>') // CodeQL [SM02383] The Markdown is fully sanitized after being rendered.\n            .replace(/\\n/g, newlineStyle === 1 /* MarkdownStringTextNewlineStyle.Break */ ? '\\\\\\n' : '\\n\\n'); // CodeQL [SM02383] The Markdown is fully sanitized after being rendered.\n        return this;\n    }\n    appendMarkdown(value) {\n        this.value += value;\n        return this;\n    }\n    appendCodeblock(langId, code) {\n        this.value += `\\n${appendEscapedMarkdownCodeBlockFence(code, langId)}\\n`;\n        return this;\n    }\n    appendLink(target, label, title) {\n        this.value += '[';\n        this.value += this._escape(label, ']');\n        this.value += '](';\n        this.value += this._escape(String(target), ')');\n        if (title) {\n            this.value += ` \"${this._escape(this._escape(title, '\"'), ')')}\"`;\n        }\n        this.value += ')';\n        return this;\n    }\n    _escape(value, ch) {\n        const r = new RegExp(escapeRegExpCharacters(ch), 'g');\n        return value.replace(r, (match, offset) => {\n            if (value.charAt(offset - 1) !== '\\\\') {\n                return `\\\\${match}`;\n            }\n            else {\n                return match;\n            }\n        });\n    }\n}\nexport function isEmptyMarkdownString(oneOrMany) {\n    if (isMarkdownString(oneOrMany)) {\n        return !oneOrMany.value;\n    }\n    else if (Array.isArray(oneOrMany)) {\n        return oneOrMany.every(isEmptyMarkdownString);\n    }\n    else {\n        return true;\n    }\n}\nexport function isMarkdownString(thing) {\n    if (thing instanceof MarkdownString) {\n        return true;\n    }\n    else if (thing && typeof thing === 'object') {\n        return typeof thing.value === 'string'\n            && (typeof thing.isTrusted === 'boolean' || typeof thing.isTrusted === 'object' || thing.isTrusted === undefined)\n            && (typeof thing.supportThemeIcons === 'boolean' || thing.supportThemeIcons === undefined);\n    }\n    return false;\n}\nexport function markdownStringEqual(a, b) {\n    if (a === b) {\n        return true;\n    }\n    else if (!a || !b) {\n        return false;\n    }\n    else {\n        return a.value === b.value\n            && a.isTrusted === b.isTrusted\n            && a.supportThemeIcons === b.supportThemeIcons\n            && a.supportHtml === b.supportHtml\n            && (a.baseUri === b.baseUri || !!a.baseUri && !!b.baseUri && isEqual(URI.from(a.baseUri), URI.from(b.baseUri)));\n    }\n}\nexport function escapeMarkdownSyntaxTokens(text) {\n    // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    return text.replace(/[\\\\`*_{}[\\]()#+\\-!~]/g, '\\\\$&'); // CodeQL [SM02383] Backslash is escaped in the character class\n}\n/**\n * @see https://github.com/microsoft/vscode/issues/193746\n */\nexport function appendEscapedMarkdownCodeBlockFence(code, langId) {\n    var _a, _b;\n    const longestFenceLength = (_b = (_a = code.match(/^`+/gm)) === null || _a === void 0 ? void 0 : _a.reduce((a, b) => (a.length > b.length ? a : b)).length) !== null && _b !== void 0 ? _b : 0;\n    const desiredFenceLength = longestFenceLength >= 3 ? longestFenceLength + 1 : 3;\n    // the markdown result\n    return [\n        `${'`'.repeat(desiredFenceLength)}${langId}`,\n        code,\n        `${'`'.repeat(desiredFenceLength)}`,\n    ].join('\\n');\n}\nexport function escapeDoubleQuotes(input) {\n    return input.replace(/\"/g, '&quot;');\n}\nexport function removeMarkdownEscapes(text) {\n    if (!text) {\n        return text;\n    }\n    return text.replace(/\\\\([\\\\`*_{}[\\]()#+\\-.!~])/g, '$1');\n}\nexport function parseHrefAndDimensions(href) {\n    const dimensions = [];\n    const splitted = href.split('|').map(s => s.trim());\n    href = splitted[0];\n    const parameters = splitted[1];\n    if (parameters) {\n        const heightFromParams = /height=(\\d+)/.exec(parameters);\n        const widthFromParams = /width=(\\d+)/.exec(parameters);\n        const height = heightFromParams ? heightFromParams[1] : '';\n        const width = widthFromParams ? widthFromParams[1] : '';\n        const widthIsFinite = isFinite(parseInt(width));\n        const heightIsFinite = isFinite(parseInt(height));\n        if (widthIsFinite) {\n            dimensions.push(`width=\"${width}\"`);\n        }\n        if (heightIsFinite) {\n            dimensions.push(`height=\"${height}\"`);\n        }\n    }\n    return { href, dimensions };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { matchesFuzzy } from './filters.js';\nimport { ltrim } from './strings.js';\nimport { ThemeIcon } from './themables.js';\nconst iconStartMarker = '$(';\nconst iconsRegex = new RegExp(`\\\\$\\\\(${ThemeIcon.iconNameExpression}(?:${ThemeIcon.iconModifierExpression})?\\\\)`, 'g'); // no capturing groups\nconst escapeIconsRegex = new RegExp(`(\\\\\\\\)?${iconsRegex.source}`, 'g');\nexport function escapeIcons(text) {\n    return text.replace(escapeIconsRegex, (match, escaped) => escaped ? match : `\\\\${match}`);\n}\nconst markdownEscapedIconsRegex = new RegExp(`\\\\\\\\${iconsRegex.source}`, 'g');\nexport function markdownEscapeEscapedIcons(text) {\n    // Need to add an extra \\ for escaping in markdown\n    return text.replace(markdownEscapedIconsRegex, match => `\\\\${match}`);\n}\nconst stripIconsRegex = new RegExp(`(\\\\s)?(\\\\\\\\)?${iconsRegex.source}(\\\\s)?`, 'g');\n/**\n * Takes a label with icons (`$(iconId)xyz`)  and strips the icons out (`xyz`)\n */\nexport function stripIcons(text) {\n    if (text.indexOf(iconStartMarker) === -1) {\n        return text;\n    }\n    return text.replace(stripIconsRegex, (match, preWhitespace, escaped, postWhitespace) => escaped ? match : preWhitespace || postWhitespace || '');\n}\n/**\n * Takes a label with icons (`$(iconId)xyz`), removes the icon syntax adds whitespace so that screen readers can read the text better.\n */\nexport function getCodiconAriaLabel(text) {\n    if (!text) {\n        return '';\n    }\n    return text.replace(/\\$\\((.*?)\\)/g, (_match, codiconName) => ` ${codiconName} `).trim();\n}\nconst _parseIconsRegex = new RegExp(`\\\\$\\\\(${ThemeIcon.iconNameCharacter}+\\\\)`, 'g');\n/**\n * Takes a label with icons (`abc $(iconId)xyz`) and returns the text (`abc xyz`) and the offsets of the icons (`[3]`)\n */\nexport function parseLabelWithIcons(input) {\n    _parseIconsRegex.lastIndex = 0;\n    let text = '';\n    const iconOffsets = [];\n    let iconsOffset = 0;\n    while (true) {\n        const pos = _parseIconsRegex.lastIndex;\n        const match = _parseIconsRegex.exec(input);\n        const chars = input.substring(pos, match === null || match === void 0 ? void 0 : match.index);\n        if (chars.length > 0) {\n            text += chars;\n            for (let i = 0; i < chars.length; i++) {\n                iconOffsets.push(iconsOffset);\n            }\n        }\n        if (!match) {\n            break;\n        }\n        iconsOffset += match[0].length;\n    }\n    return { text, iconOffsets };\n}\nexport function matchesFuzzyIconAware(query, target, enableSeparateSubstringMatching = false) {\n    const { text, iconOffsets } = target;\n    // Return early if there are no icon markers in the word to match against\n    if (!iconOffsets || iconOffsets.length === 0) {\n        return matchesFuzzy(query, text, enableSeparateSubstringMatching);\n    }\n    // Trim the word to match against because it could have leading\n    // whitespace now if the word started with an icon\n    const wordToMatchAgainstWithoutIconsTrimmed = ltrim(text, ' ');\n    const leadingWhitespaceOffset = text.length - wordToMatchAgainstWithoutIconsTrimmed.length;\n    // match on value without icon\n    const matches = matchesFuzzy(query, wordToMatchAgainstWithoutIconsTrimmed, enableSeparateSubstringMatching);\n    // Map matches back to offsets with icon and trimming\n    if (matches) {\n        for (const match of matches) {\n            const iconOffset = iconOffsets[match.start + leadingWhitespaceOffset] /* icon offsets at index */ + leadingWhitespaceOffset /* overall leading whitespace offset */;\n            match.start += iconOffset;\n            match.end += iconOffset;\n        }\n    }\n    return matches;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class IdGenerator {\n    constructor(prefix) {\n        this._prefix = prefix;\n        this._lastId = 0;\n    }\n    nextId() {\n        return this._prefix + (++this._lastId);\n    }\n}\nexport const defaultGenerator = new IdGenerator('id#');\n"],"names":["hasBuffer","Buffer","Lazy","Uint8Array","textDecoder","VSBuffer","wrap","actual","isBuffer","from","buffer","byteOffset","byteLength","constructor","this","toString","TextDecoder","decode","readUInt16LE","source","offset","writeUInt16LE","destination","value","readUInt32BE","writeUInt32BE","readUInt8","writeUInt8","identity","t","LRUCachedFunction","arg1","arg2","lastCache","undefined","lastArgKey","_fn","_computeKey","getCacheKey","get","arg","key","CachedFunction","cachedValues","_map","Map","_map2","has","set","shortcutEvent","Object","freeze","callback","context","handle","setTimeout","bind","dispose","clearTimeout","CancellationToken","isCancellationToken","thing","None","Cancelled","MutableToken","isCancellationRequested","onCancellationRequested","Event","_isCancelled","_emitter","cancel","fire","Emitter","event","CancellationTokenSource","parent","_token","_parentListener","token","_a","arguments","length","cancelOnDispose","store","add","Codicon","register","plus","gistNew","repoCreate","lightbulb","lightBulb","repo","repoDelete","gistFork","repoForked","gitPullRequest","gitPullRequestAbandoned","recordKeys","keyboard","tag","gitPullRequestLabel","tagAdd","tagRemove","person","personFollow","personOutline","personFilled","gitBranch","gitBranchCreate","gitBranchDelete","sourceControl","mirror","mirrorPublic","star","starAdd","starDelete","starEmpty","comment","commentAdd","alert","warning","search","searchSave","logOut","signOut","logIn","signIn","eye","eyeUnwatch","eyeWatch","circleFilled","primitiveDot","closeDirty","debugBreakpoint","debugBreakpointDisabled","debugHint","terminalDecorationSuccess","primitiveSquare","edit","pencil","info","issueOpened","gistPrivate","gitForkPrivate","lock","mirrorPrivate","close","removeClose","x","repoSync","sync","clone","desktopDownload","beaker","microscope","vm","deviceDesktop","file","fileText","more","ellipsis","kebabHorizontal","mailReply","reply","organization","organizationFilled","organizationOutline","newFile","fileAdd","newFolder","fileDirectoryCreate","trash","trashcan","history","clock","folder","fileDirectory","symbolFolder","logoGithub","markGithub","github","terminal","console","repl","zap","symbolEvent","error","stop","variable","symbolVariable","array","symbolArray","symbolModule","symbolPackage","symbolNamespace","symbolObject","symbolMethod","symbolFunction","symbolConstructor","symbolBoolean","symbolNull","symbolNumeric","symbolNumber","symbolStructure","symbolStruct","symbolParameter","symbolTypeParameter","symbolKey","symbolText","symbolReference","goToFile","symbolEnum","symbolValue","symbolRuler","symbolUnit","activateBreakpoints","archive","arrowBoth","arrowDown","arrowLeft","arrowRight","arrowSmallDown","arrowSmallLeft","arrowSmallRight","arrowSmallUp","arrowUp","bell","bold","book","bookmark","debugBreakpointConditionalUnverified","debugBreakpointConditional","debugBreakpointConditionalDisabled","debugBreakpointDataUnverified","debugBreakpointData","debugBreakpointDataDisabled","debugBreakpointLogUnverified","debugBreakpointLog","debugBreakpointLogDisabled","briefcase","broadcast","browser","bug","calendar","caseSensitive","check","checklist","chevronDown","chevronLeft","chevronRight","chevronUp","chromeClose","chromeMaximize","chromeMinimize","chromeRestore","circleOutline","circle","debugBreakpointUnverified","terminalDecorationIncomplete","circleSlash","circuitBoard","clearAll","clippy","closeAll","cloudDownload","cloudUpload","code","collapseAll","colorMode","commentDiscussion","creditCard","dash","dashboard","database","debugContinue","debugDisconnect","debugPause","debugRestart","debugStart","debugStepInto","debugStepOut","debugStepOver","debugStop","debug","deviceCameraVideo","deviceCamera","deviceMobile","diffAdded","diffIgnored","diffModified","diffRemoved","diffRenamed","diff","diffSidebyside","discard","editorLayout","emptyWindow","exclude","extensions","eyeClosed","fileBinary","fileCode","fileMedia","filePdf","fileSubmodule","fileSymlinkDirectory","fileSymlinkFile","fileZip","files","filter","flame","foldDown","foldUp","fold","folderActive","folderOpened","gear","gift","gistSecret","gist","gitCommit","gitCompare","compareChanges","gitMerge","githubAction","githubAlt","globe","grabber","graph","gripper","heart","home","horizontalRule","hubot","inbox","issueReopened","issues","italic","jersey","json","kebabVertical","law","lightbulbAutofix","linkExternal","link","listOrdered","listUnordered","liveShare","loading","location","mailRead","mail","markdown","megaphone","mention","milestone","gitPullRequestMilestone","mortarBoard","move","multipleWindows","mute","noNewline","note","octoface","openPreview","package","paintcan","pin","play","run","plug","preserveCase","preview","project","pulse","question","quote","radioTower","reactions","references","refresh","regex","remoteExplorer","remote","remove","replaceAll","replace","repoClone","repoForcePush","repoPull","repoPush","report","requestChanges","rocket","rootFolderOpened","rootFolder","rss","ruby","saveAll","saveAs","save","screenFull","screenNormal","searchStop","server","settingsGear","settings","shield","smiley","sortPrecedence","splitHorizontal","splitVertical","squirrel","starFull","starHalf","symbolClass","symbolColor","symbolConstant","symbolEnumMember","symbolField","symbolFile","symbolInterface","symbolKeyword","symbolMisc","symbolOperator","symbolProperty","wrench","wrenchSubaction","symbolSnippet","tasklist","telescope","textSize","threeBars","thumbsdown","thumbsup","tools","triangleDown","triangleLeft","triangleRight","triangleUp","twitter","unfold","unlock","unmute","unverified","verified","versions","vmActive","vmOutline","vmRunning","watch","whitespace","wholeWord","window","wordWrap","zoomIn","zoomOut","listFilter","listFlat","listSelection","selection","listTree","debugBreakpointFunctionUnverified","debugBreakpointFunction","debugBreakpointFunctionDisabled","debugStackframeActive","circleSmallFilled","debugStackframeDot","terminalDecorationMark","debugStackframe","debugStackframeFocused","debugBreakpointUnsupported","symbolString","debugReverseContinue","debugStepBack","debugRestartFrame","debugAlt","callIncoming","callOutgoing","menu","expandAll","feedback","gitPullRequestReviewer","groupByRefType","ungroupByRefType","account","gitPullRequestAssignee","bellDot","debugConsole","library","output","runAll","syncIgnored","pinned","githubInverted","serverProcess","serverEnvironment","pass","issueClosed","stopCircle","playCircle","record","debugAltSmall","vmConnect","cloud","merge","export","graphLeft","magnet","notebook","redo","checkAll","pinnedDirty","passFilled","circleLargeFilled","circleLarge","circleLargeOutline","combine","gather","table","variableGroup","typeHierarchy","typeHierarchySub","typeHierarchySuper","gitPullRequestCreate","runAbove","runBelow","notebookTemplate","debugRerun","workspaceTrusted","workspaceUntrusted","workspaceUnknown","terminalCmd","terminalDebian","terminalLinux","terminalPowershell","terminalTmux","terminalUbuntu","terminalBash","arrowSwap","copy","personAdd","filterFilled","wand","debugLineByLine","inspect","layers","layersDot","layersActive","compass","compassDot","compassActive","azure","issueDraft","gitPullRequestClosed","gitPullRequestDraft","debugAll","debugCoverage","runErrors","folderLibrary","debugContinueSmall","beakerStop","graphLine","graphScatter","pieChart","bracket","bracketDot","bracketError","lockSmall","azureDevops","verifiedFilled","newline","layout","layoutActivitybarLeft","layoutActivitybarRight","layoutPanelLeft","layoutPanelCenter","layoutPanelJustify","layoutPanelRight","layoutPanel","layoutSidebarLeft","layoutSidebarRight","layoutStatusbar","layoutMenubar","layoutCentered","target","indent","recordSmall","errorSmall","terminalDecorationError","arrowCircleDown","arrowCircleLeft","arrowCircleRight","arrowCircleUp","layoutSidebarRightOff","layoutPanelOff","layoutSidebarLeftOff","blank","heartFilled","map","mapHorizontal","foldHorizontal","mapFilled","mapHorizontalFilled","foldHorizontalFilled","circleSmall","bellSlash","bellSlashDot","commentUnresolved","gitPullRequestGoToChanges","gitPullRequestNewChanges","searchFuzzy","commentDraft","send","sparkle","insert","mic","thumbsdownFilled","thumbsupFilled","coffee","snake","game","vr","chip","piano","music","micFilled","repoFetch","copilot","lightbulbSparkle","robot","sparkleFilled","diffSingle","diffMultiple","surroundWith","share","gitStash","gitStashApply","gitStashPop","vscode","vscodeInsiders","codeOss","runCoverage","runAllCoverage","coverage","githubProject","mapVertical","foldVertical","mapVerticalFilled","foldVerticalFilled","goToSearch","percentage","sortPercentage","dialogError","dialogWarning","dialogInfo","dialogClose","treeItemExpanded","treeFilterOnTypeOn","treeFilterOnTypeOff","treeFilterClear","treeItemLoading","menuSelection","menuSubmenu","menuBarMore","scrollbarButtonLeft","scrollbarButtonRight","scrollbarButtonUp","scrollbarButtonDown","toolBarMore","quickInputBack","dropDownButton","symbolCustomColor","exportIcon","workspaceUnspecified","newLine","thumbsDownFilled","thumbsUpFilled","gitFetch","lightbulbSparkleAutofix","debugBreakpointPending","_codiconFontCharacters","create","id","fontCharacter","isString","val","Error","concat","getCodiconFontCharacters","diffSets","before","after","removed","added","element","push","intersection","setA","setB","result","Set","elem","roundFloat","number","decimalPoints","decimal","Math","pow","round","RGBA","r","g","b","a","_rgbaBrand","min","max","equals","HSLA","h","s","l","_hslaBrand","fromRGBA","rgba","chroma","_hue2rgb","p","q","toRGBA","hsla","HSVA","v","_hsvaBrand","cmax","delta","m","hsva","c","abs","Color","fromHex","hex","Format","CSS","parseHex","red","_hsla","_hsva","other","getRelativeLuminance","_relativeLuminanceForComponent","color","isLighter","isLighterThan","another","isDarkerThan","lighten","factor","darken","transparent","isTransparent","isOpaque","opposite","makeOpaque","opaqueBackground","_toString","format","getLighterColor","of","relative","lum1","lum2","getDarkerColor","white","black","blue","green","cyan","lightgrey","_toTwoDigitHex","n","_parseHexDigit","charCode","formatRGB","formatRGBA","toFixed","formatHSL","formatHSLA","formatHex","formatHexA","charCodeAt","intlFileNameCollatorBaseNumeric","collator","Intl","Collator","numeric","sensitivity","collatorIsNumeric","resolvedOptions","compareAnything","one","lookFor","elementAName","toLowerCase","elementBName","prefixCompare","elementAPrefixMatch","startsWith","elementBPrefixMatch","compareByPrefix","elementASuffixMatch","endsWith","compare","compareFileNames","localeCompare","createStringDataTransferItem","stringOrPromise","asString","async","asFile","createFileDataTransferItem","fileName","uri","data","generateUuid","name","VSDataTransfer","_entries","size","_","mimeType","toKey","matches","pattern","mimes","keys","Iterable","some","_ref","item","matchesMimeType_normalized","normalizeMimeType","append","existing","delete","Symbol","iterator","mine","items","matchesMimeType","mimeTypes","normalizedPattern","normalizedMimeTypes","includes","wildcard","match","type","subtype","mime","UriList","entries","distinct","join","split","str","parse","memoize","_target","descriptor","fnKey","fn","warn","memoizeKey","hasOwnProperty","_len","args","Array","_key","defineProperty","configurable","enumerable","writable","apply","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","getOriginalEnd","getModifiedEnd","StringDiffSequence","getElements","characters","Int32Array","i","len","stringDiff","original","modified","pretty","LcsDiff","ComputeDiff","changes","Debug","Assert","condition","message","MyArray","Copy","sourceArray","sourceIndex","destinationArray","destinationIndex","Copy2","DiffChangeHelper","m_changes","m_originalStart","m_modifiedStart","m_originalCount","m_modifiedCount","MarkNextChange","AddOriginalElement","originalIndex","modifiedIndex","AddModifiedElement","getChanges","getReverseChanges","reverse","originalSequence","modifiedSequence","continueProcessingPredicate","ContinueProcessingPredicate","_originalSequence","_modifiedSequence","originalStringElements","originalElementsOrHash","originalHasStrings","_getElements","modifiedStringElements","modifiedElementsOrHash","modifiedHasStrings","_hasStrings","_originalStringElements","_originalElementsOrHash","_modifiedStringElements","_modifiedElementsOrHash","m_forwardHistory","m_reverseHistory","_isStringArray","arr","sequence","elements","hashes","stringHash","ElementsAreEqual","newIndex","ElementsAreStrictEqual","_getStrictElement","index","getStrictElement","OriginalElementsAreEqual","index1","index2","ModifiedElementsAreEqual","_ComputeDiff","originalEnd","modifiedEnd","quitEarlyArr","ComputeDiffRecursive","PrettifyChanges","quitEarly","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","WALKTRACE","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","historyIndex","diagonal","originalStartPoint","modifiedStartPoint","lastForwardChange","maxDifferences","numDiagonals","numDifferences","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","tempOriginalIndex","matchLengthOfLongest","temp","change","originalStop","modifiedStop","checkOriginal","checkModified","startStrictEqual","mergedChangeArr","ChangesOverlap","splice","prevChange","bestDelta","bestScore","_boundaryScore","score","aChange","bChange","matchedLength","aOriginalStart","bOriginalEnd","abOriginalLength","aModifiedStart","bModifiedEnd","abModifiedLength","_findBetterContiguousSequence","originalMatchStart","modifiedMatchStart","desiredLength","originalMax","modifiedMax","bestOriginalStart","bestModifiedStart","j","_contiguousSequenceScore","_OriginalIsBoundary","test","_OriginalRegionIsBoundary","_ModifiedIsBoundary","_ModifiedRegionIsBoundary","left","right","diagonalBaseIndex","diffEven","strictEquals","itemsEquals","itemEquals","arrays","equalsIfDefined","v1","v2","WeakMap","exceptionToErrorMessage","exception","verbose","stack","stacktrace","nls","detectSystemErrorMessage","stackToString","isArray","errno","syscall","toErrorMessage","errors","msg","types","detail","errorHandler","listeners","unexpectedErrorHandler","e","ErrorNoTelemetry","isErrorNoTelemetry","emit","forEach","listener","onUnexpectedError","onUnexpectedExternalError","isCancellationError","transformErrorForSerialization","$isError","noTelemetry","canceledName","CancellationError","super","canceled","illegalArgument","illegalState","NotSupportedError","fromError","err","BugIndicatingError","setPrototypeOf","prototype","_addLeakageTraceLogic","options","once","thisArgs","didFire","call","disposable","snapshot","onWillAddFirstListener","emitter","onDidRemoveLastListener","debounce","subscription","doFire","delay","leading","flushOnListenerRemove","numDebouncedCalls","leakWarningThreshold","cur","_output","queueMicrotask","onWillRemoveListener","Disposable","defer","each","signal","any","events","disposables","d","addAndReturnDisposable","combinedDisposable","reduce","initial","accumulate","last","latch","cache","firstCall","shouldEmit","isT","flushAfterTimeout","slice","flush","onDidAddFirstListener","chain","sythensize","cs","ChainableSynthesis","evaluate","HaltChainable","steps","step","fromNodeEventEmitter","eventName","onFirstListenerAdd","on","onLastListenerRemove","removeListener","fromDOMEventEmitter","addEventListener","removeEventListener","toPromise","Promise","resolve","fromPromise","promise","then","res","finally","runAndSubscribe","handler","EmitterObserver","_observable","_counter","_hasChanged","addObserver","removeObserver","beginUpdate","handlePossibleChange","handleChange","_change","endUpdate","reportChanges","fromObservable","obs","fromObservableLight","observable","count","didChange","observer","DisposableStore","EventProfiling","listenerCount","invocationCount","elapsedOverall","durations","_idPool","all","start","_stopWatch","StopWatch","elapsed","LeakageMonitor","threshold","random","_warnCountdown","_stacks","clear","topStack","topCount","Stacktrace","print","UniqueContainer","_listenerFinalizers","_b","_c","_d","_e","_size","_options","_leakageMon","_perfMon","_profName","_deliveryQueue","deliveryQueue","_disposed","current","reset","_listeners","_event","contained","removeMonitor","ceil","EventDeliveryQueuePrivate","toDisposable","unregister","_removeListener","trim","indexOf","log","JSON","stringify","adjustDeliveryQueue","end","_deliver","onListenerError","_deliverQueue","dq","enqueue","hasListeners","createEventDeliveryQueue","PauseableEmitter","_isPaused","_eventQueue","LinkedList","_mergeFn","pause","resume","shift","DebounceEmitter","_delay","_handle","MicrotaskEmitter","_queuedEvents","EventMultiplexer","hook","createSingleCallFunction","unhook","idx","EventBufferer","buffers","wrapEvent","bufferEvents","pop","Relay","listening","inputEvent","inputEventListener","input","isPathSeparator","toSlashes","osPath","posix","sep","toPosixPath","getRoot","path","firstLetter","pos","isWindowsDriveLetter","isEqualOrParent","base","parentCandidate","ignoreCase","separator","startsWithIgnoreCase","sepOffset","charAt","char0","hasDriveLetter","isWindows","or","word","wordToMatchAgainst","_matchesPrefix","matchesPrefix","strings","matchesContiguousSubString","matchesSubString","_matchesSubString","isLower","isUpper","isNumber","isWhitespace","wordSeparators","isWordSeparator","charactersMatch","codeA","codeB","alternateCharsCache","getAlternateCodes","codes","getKoreanAltChars","isAlphanumeric","head","tail","unshift","nextAnchor","camelCaseWord","_matchesCamelCase","nextUpperIndex","matchesCamelCase","upper","lower","isCamelCasePattern","substring","analysis","alpha","upperPercent","lowerPercent","alphaPercent","numericPercent","analyzeCamelCaseWord","isCamelCaseWord","isUpperCaseWord","matchesWords","contiguous","targetIndex","_matchesWords","nextWord","wordIndex","targetIndexOffset","altChars","k","nextWordIndex","fuzzyContiguousFilter","fuzzySeparateFilter","fuzzyRegExpCache","LRUCache","matchesFuzzy","enableSeparateSubstringMatching","regexp","RegExp","exec","matchesFuzzy2","fuzzyScore","firstMatchCanBeWeak","boostFullMatch","createMatches","anyScore","lowPattern","patternPos","lowWord","wordPos","_maxLen","initTable","row","initArr","maxLen","_minWordMatchPos","_maxWordMatchPos","_diag","_table","_arrows","_debug","printTable","patternLen","wordLen","pad","ret","isSeparatorAtPos","codePointAt","isWhitespaceAtPos","isUpperCaseAtPos","wordLow","FuzzyScore","Default","isDefault","FuzzyScoreOptions","patternLow","patternStart","wordStart","default","fillMinWordPosArr","isPatternInWord","_fillInMaxWordMatchPos","column","hasStrongFirstMatch","minWordMatchPos","maxWordMatchPos","nextMaxWordMatchPos","Number","MIN_SAFE_INTEGER","canComeDiag","_doScore","diagScore","MAX_SAFE_INTEGER","canComeLeft","leftScore","canComeLeftLeft","leftLeftScore","substr","printTables","backwardsDiagLength","maxMatchColumn","diagColumn","arrow","skippedCharsCount","newMatchStart","outFirstMatchStrong","isGapLocation","fuzzyScoreGracefulAggressive","aggressive","top","tries","movingPatternPos","newPattern","nextTypoPermutation","candidate","fuzzyScoreWithPermutations","swap1","swap2","fnDidRunCallback","_this","didCall","NO_SCORE2","scoreFuzzy2","query","preparedQuery","values","totalScore","totalMatches","queryPiece","doScoreFuzzy2Single","normalizeMatches","doScoreFuzzy2Multiple","originalLowercase","createFuzzyMatches","sortedMatches","sort","matchA","matchB","normalizedMatches","currentMatch","matchOverlaps","queryExpectsExactMatch","MULTIPLE_QUERY_VALUES_SEPARATOR","prepareQuery","pathNormalized","normalized","normalizedLowercase","normalizeQuery","containsPathSeparator","expectExactMatch","originalSplit","originalPiece","expectExactMatchPiece","pathNormalizedPiece","normalizedPiece","normalizedLowercasePiece","expectContiguousMatch","stripWildcards","pieceToQuery","piece","GLOBSTAR","GLOB_SPLIT","PATH_REGEX","NO_PATH_REGEX","ALL_FORWARD_SLASHES","starsToRegExp","starCount","isLastPattern","splitGlobAware","splitChar","segments","inBraces","inBrackets","curVal","char","parseRegExp","regEx","every","segment","previousSegmentWasGlobStar","braceVal","bracketVal","choices","braceRegExp","choice","escapeRegExpCharacters","T1","T2","T3","T3_2","T4","T5","CACHE","FALSE","NULL","parsePattern","patternKey","trimForExclusions","parsedPattern","basename","trivia1","slashBase","backslashBase","basenames","patterns","allBasenames","trivia2","parsedPatterns","aggregateBasenameMatches","patternsLength","withBasenames","find","allPaths","trivia3","trivia4and5","regExp","lastIndex","toRegExp","wrapRelativePattern","wrappedPattern","isLinux","ltrim","targetPath","matchPathEnds","usingPosixSep","nativePath","nativePathEnd","targetPathEnd","hasSibling","obj","rp","isRelativePattern","resultPattern","expression","getOwnPropertyNames","when","matched","isThenable","requiresSiblings","parseExpressionPattern","resultExpression","resultPromises","resultPromise","extname","parsedExpression","basenamePatterns","aggregate","ch","aggregatedPatterns","hash","doHash","hashVal","numberHash","initialHashVal","objectHash","booleanHash","leftRotate","bits","fill","dest","toHexString","bufferOrValue","bitsize","ArrayBuffer","padStart","leftPad","StringSHA1","_h0","_h1","_h2","_h3","_h4","_buff","_buffDV","DataView","_buffLen","_totalLen","_leftoverHighSurrogate","_finished","update","strLen","buff","buffLen","leftoverHighSurrogate","codePoint","nextCharCode","_push","_step","digest","_wrapUp","ml","setUint32","floor","bigBlock32","_bigBlock32","getUint32","f","HierarchicalKind","contains","intersects","parts","Empty","HistoryNavigator","limit","_initialize","_limit","_onChange","getHistory","_elements","_history","next","_navigator","previous","_currentPosition","first","isLast","isNowhere","_reduceToLimit","ArrayNavigator","currentElement","entry","isHotReloadEnabled","env","registerHotReloadHandler","handlers","hotReloadHandlers","globalThis","$hotReload_applyNewExports","args2","config","mode","registerGlobalHotReloadHandler","oldExports","newSrc","newExports","exportedItem","oldExportedItem","prop","getOwnPropertyDescriptor","oldDescriptor","MarkdownString","isTrustedOrOptions","isTrusted","supportThemeIcons","supportHtml","appendText","newlineStyle","text","escapeIcons","_match","g1","repeat","appendMarkdown","appendCodeblock","langId","longestFenceLength","desiredFenceLength","appendEscapedMarkdownCodeBlockFence","appendLink","label","title","_escape","String","isEmptyMarkdownString","oneOrMany","isMarkdownString","markdownStringEqual","baseUri","isEqual","URI","escapeDoubleQuotes","removeMarkdownEscapes","parseHrefAndDimensions","href","dimensions","splitted","parameters","heightFromParams","widthFromParams","height","width","widthIsFinite","isFinite","parseInt","heightIsFinite","iconStartMarker","iconsRegex","ThemeIcon","iconNameExpression","iconModifierExpression","escapeIconsRegex","escaped","markdownEscapedIconsRegex","markdownEscapeEscapedIcons","stripIconsRegex","stripIcons","preWhitespace","postWhitespace","getCodiconAriaLabel","codiconName","_parseIconsRegex","iconNameCharacter","parseLabelWithIcons","iconOffsets","iconsOffset","chars","matchesFuzzyIconAware","wordToMatchAgainstWithoutIconsTrimmed","leadingWhitespaceOffset","iconOffset","IdGenerator","prefix","_prefix","_lastId","nextId","defaultGenerator"],"sourceRoot":""}