{"version":3,"file":"static/js/monaco-editor-vendor.b3dfc78a.29a8041a.js","mappings":"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","sources":["../../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findDecorations.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/replaceAllCommand.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/replacePattern.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findModel.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findOptionsWidget.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findState.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findWidget.js","../../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { OverviewRulerLane } from '../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { minimapFindMatch, overviewRulerFindMatchForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nexport class FindDecorations {\n    constructor(editor) {\n        this._editor = editor;\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationIds = [];\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n        this._startPosition = this._editor.getPosition();\n    }\n    dispose() {\n        this._editor.removeDecorations(this._allDecorations());\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationIds = [];\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n    }\n    reset() {\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationIds = [];\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n    }\n    getCount() {\n        return this._decorations.length;\n    }\n    /** @deprecated use getFindScopes to support multiple selections */\n    getFindScope() {\n        if (this._findScopeDecorationIds[0]) {\n            return this._editor.getModel().getDecorationRange(this._findScopeDecorationIds[0]);\n        }\n        return null;\n    }\n    getFindScopes() {\n        if (this._findScopeDecorationIds.length) {\n            const scopes = this._findScopeDecorationIds.map(findScopeDecorationId => this._editor.getModel().getDecorationRange(findScopeDecorationId)).filter(element => !!element);\n            if (scopes.length) {\n                return scopes;\n            }\n        }\n        return null;\n    }\n    getStartPosition() {\n        return this._startPosition;\n    }\n    setStartPosition(newStartPosition) {\n        this._startPosition = newStartPosition;\n        this.setCurrentFindMatch(null);\n    }\n    _getDecorationIndex(decorationId) {\n        const index = this._decorations.indexOf(decorationId);\n        if (index >= 0) {\n            return index + 1;\n        }\n        return 1;\n    }\n    getDecorationRangeAt(index) {\n        const decorationId = index < this._decorations.length ? this._decorations[index] : null;\n        if (decorationId) {\n            return this._editor.getModel().getDecorationRange(decorationId);\n        }\n        return null;\n    }\n    getCurrentMatchesPosition(desiredRange) {\n        const candidates = this._editor.getModel().getDecorationsInRange(desiredRange);\n        for (const candidate of candidates) {\n            const candidateOpts = candidate.options;\n            if (candidateOpts === FindDecorations._FIND_MATCH_DECORATION || candidateOpts === FindDecorations._CURRENT_FIND_MATCH_DECORATION) {\n                return this._getDecorationIndex(candidate.id);\n            }\n        }\n        // We don't know the current match position, so returns zero to show '?' in find widget\n        return 0;\n    }\n    setCurrentFindMatch(nextMatch) {\n        let newCurrentDecorationId = null;\n        let matchPosition = 0;\n        if (nextMatch) {\n            for (let i = 0, len = this._decorations.length; i < len; i++) {\n                const range = this._editor.getModel().getDecorationRange(this._decorations[i]);\n                if (nextMatch.equalsRange(range)) {\n                    newCurrentDecorationId = this._decorations[i];\n                    matchPosition = (i + 1);\n                    break;\n                }\n            }\n        }\n        if (this._highlightedDecorationId !== null || newCurrentDecorationId !== null) {\n            this._editor.changeDecorations((changeAccessor) => {\n                if (this._highlightedDecorationId !== null) {\n                    changeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._FIND_MATCH_DECORATION);\n                    this._highlightedDecorationId = null;\n                }\n                if (newCurrentDecorationId !== null) {\n                    this._highlightedDecorationId = newCurrentDecorationId;\n                    changeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._CURRENT_FIND_MATCH_DECORATION);\n                }\n                if (this._rangeHighlightDecorationId !== null) {\n                    changeAccessor.removeDecoration(this._rangeHighlightDecorationId);\n                    this._rangeHighlightDecorationId = null;\n                }\n                if (newCurrentDecorationId !== null) {\n                    let rng = this._editor.getModel().getDecorationRange(newCurrentDecorationId);\n                    if (rng.startLineNumber !== rng.endLineNumber && rng.endColumn === 1) {\n                        const lineBeforeEnd = rng.endLineNumber - 1;\n                        const lineBeforeEndMaxColumn = this._editor.getModel().getLineMaxColumn(lineBeforeEnd);\n                        rng = new Range(rng.startLineNumber, rng.startColumn, lineBeforeEnd, lineBeforeEndMaxColumn);\n                    }\n                    this._rangeHighlightDecorationId = changeAccessor.addDecoration(rng, FindDecorations._RANGE_HIGHLIGHT_DECORATION);\n                }\n            });\n        }\n        return matchPosition;\n    }\n    set(findMatches, findScopes) {\n        this._editor.changeDecorations((accessor) => {\n            let findMatchesOptions = FindDecorations._FIND_MATCH_DECORATION;\n            const newOverviewRulerApproximateDecorations = [];\n            if (findMatches.length > 1000) {\n                // we go into a mode where the overview ruler gets \"approximate\" decorations\n                // the reason is that the overview ruler paints all the decorations in the file and we don't want to cause freezes\n                findMatchesOptions = FindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION;\n                // approximate a distance in lines where matches should be merged\n                const lineCount = this._editor.getModel().getLineCount();\n                const height = this._editor.getLayoutInfo().height;\n                const approxPixelsPerLine = height / lineCount;\n                const mergeLinesDelta = Math.max(2, Math.ceil(3 / approxPixelsPerLine));\n                // merge decorations as much as possible\n                let prevStartLineNumber = findMatches[0].range.startLineNumber;\n                let prevEndLineNumber = findMatches[0].range.endLineNumber;\n                for (let i = 1, len = findMatches.length; i < len; i++) {\n                    const range = findMatches[i].range;\n                    if (prevEndLineNumber + mergeLinesDelta >= range.startLineNumber) {\n                        if (range.endLineNumber > prevEndLineNumber) {\n                            prevEndLineNumber = range.endLineNumber;\n                        }\n                    }\n                    else {\n                        newOverviewRulerApproximateDecorations.push({\n                            range: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\n                            options: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\n                        });\n                        prevStartLineNumber = range.startLineNumber;\n                        prevEndLineNumber = range.endLineNumber;\n                    }\n                }\n                newOverviewRulerApproximateDecorations.push({\n                    range: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\n                    options: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\n                });\n            }\n            // Find matches\n            const newFindMatchesDecorations = new Array(findMatches.length);\n            for (let i = 0, len = findMatches.length; i < len; i++) {\n                newFindMatchesDecorations[i] = {\n                    range: findMatches[i].range,\n                    options: findMatchesOptions\n                };\n            }\n            this._decorations = accessor.deltaDecorations(this._decorations, newFindMatchesDecorations);\n            // Overview ruler approximate decorations\n            this._overviewRulerApproximateDecorations = accessor.deltaDecorations(this._overviewRulerApproximateDecorations, newOverviewRulerApproximateDecorations);\n            // Range highlight\n            if (this._rangeHighlightDecorationId) {\n                accessor.removeDecoration(this._rangeHighlightDecorationId);\n                this._rangeHighlightDecorationId = null;\n            }\n            // Find scope\n            if (this._findScopeDecorationIds.length) {\n                this._findScopeDecorationIds.forEach(findScopeDecorationId => accessor.removeDecoration(findScopeDecorationId));\n                this._findScopeDecorationIds = [];\n            }\n            if (findScopes === null || findScopes === void 0 ? void 0 : findScopes.length) {\n                this._findScopeDecorationIds = findScopes.map(findScope => accessor.addDecoration(findScope, FindDecorations._FIND_SCOPE_DECORATION));\n            }\n        });\n    }\n    matchBeforePosition(position) {\n        if (this._decorations.length === 0) {\n            return null;\n        }\n        for (let i = this._decorations.length - 1; i >= 0; i--) {\n            const decorationId = this._decorations[i];\n            const r = this._editor.getModel().getDecorationRange(decorationId);\n            if (!r || r.endLineNumber > position.lineNumber) {\n                continue;\n            }\n            if (r.endLineNumber < position.lineNumber) {\n                return r;\n            }\n            if (r.endColumn > position.column) {\n                continue;\n            }\n            return r;\n        }\n        return this._editor.getModel().getDecorationRange(this._decorations[this._decorations.length - 1]);\n    }\n    matchAfterPosition(position) {\n        if (this._decorations.length === 0) {\n            return null;\n        }\n        for (let i = 0, len = this._decorations.length; i < len; i++) {\n            const decorationId = this._decorations[i];\n            const r = this._editor.getModel().getDecorationRange(decorationId);\n            if (!r || r.startLineNumber < position.lineNumber) {\n                continue;\n            }\n            if (r.startLineNumber > position.lineNumber) {\n                return r;\n            }\n            if (r.startColumn < position.column) {\n                continue;\n            }\n            return r;\n        }\n        return this._editor.getModel().getDecorationRange(this._decorations[0]);\n    }\n    _allDecorations() {\n        let result = [];\n        result = result.concat(this._decorations);\n        result = result.concat(this._overviewRulerApproximateDecorations);\n        if (this._findScopeDecorationIds.length) {\n            result.push(...this._findScopeDecorationIds);\n        }\n        if (this._rangeHighlightDecorationId) {\n            result.push(this._rangeHighlightDecorationId);\n        }\n        return result;\n    }\n}\nFindDecorations._CURRENT_FIND_MATCH_DECORATION = ModelDecorationOptions.register({\n    description: 'current-find-match',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    zIndex: 13,\n    className: 'currentFindMatch',\n    showIfCollapsed: true,\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerFindMatchForeground),\n        position: OverviewRulerLane.Center\n    },\n    minimap: {\n        color: themeColorFromId(minimapFindMatch),\n        position: 1 /* MinimapPosition.Inline */\n    }\n});\nFindDecorations._FIND_MATCH_DECORATION = ModelDecorationOptions.register({\n    description: 'find-match',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    zIndex: 10,\n    className: 'findMatch',\n    showIfCollapsed: true,\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerFindMatchForeground),\n        position: OverviewRulerLane.Center\n    },\n    minimap: {\n        color: themeColorFromId(minimapFindMatch),\n        position: 1 /* MinimapPosition.Inline */\n    }\n});\nFindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION = ModelDecorationOptions.register({\n    description: 'find-match-no-overview',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    className: 'findMatch',\n    showIfCollapsed: true\n});\nFindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION = ModelDecorationOptions.register({\n    description: 'find-match-only-overview',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerFindMatchForeground),\n        position: OverviewRulerLane.Center\n    }\n});\nFindDecorations._RANGE_HIGHLIGHT_DECORATION = ModelDecorationOptions.register({\n    description: 'find-range-highlight',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    className: 'rangeHighlight',\n    isWholeLine: true\n});\nFindDecorations._FIND_SCOPE_DECORATION = ModelDecorationOptions.register({\n    description: 'find-scope',\n    className: 'findScope',\n    isWholeLine: true\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nexport class ReplaceAllCommand {\n    constructor(editorSelection, ranges, replaceStrings) {\n        this._editorSelection = editorSelection;\n        this._ranges = ranges;\n        this._replaceStrings = replaceStrings;\n        this._trackedEditorSelectionId = null;\n    }\n    getEditOperations(model, builder) {\n        if (this._ranges.length > 0) {\n            // Collect all edit operations\n            const ops = [];\n            for (let i = 0; i < this._ranges.length; i++) {\n                ops.push({\n                    range: this._ranges[i],\n                    text: this._replaceStrings[i]\n                });\n            }\n            // Sort them in ascending order by range starts\n            ops.sort((o1, o2) => {\n                return Range.compareRangesUsingStarts(o1.range, o2.range);\n            });\n            // Merge operations that touch each other\n            const resultOps = [];\n            let previousOp = ops[0];\n            for (let i = 1; i < ops.length; i++) {\n                if (previousOp.range.endLineNumber === ops[i].range.startLineNumber && previousOp.range.endColumn === ops[i].range.startColumn) {\n                    // These operations are one after another and can be merged\n                    previousOp.range = previousOp.range.plusRange(ops[i].range);\n                    previousOp.text = previousOp.text + ops[i].text;\n                }\n                else {\n                    resultOps.push(previousOp);\n                    previousOp = ops[i];\n                }\n            }\n            resultOps.push(previousOp);\n            for (const op of resultOps) {\n                builder.addEditOperation(op.range, op.text);\n            }\n        }\n        this._trackedEditorSelectionId = builder.trackSelection(this._editorSelection);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this._trackedEditorSelectionId);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { buildReplaceStringWithCasePreserved } from '../../../../base/common/search.js';\n/**\n * Assigned when the replace pattern is entirely static.\n */\nclass StaticValueReplacePattern {\n    constructor(staticValue) {\n        this.staticValue = staticValue;\n        this.kind = 0 /* ReplacePatternKind.StaticValue */;\n    }\n}\n/**\n * Assigned when the replace pattern has replacement patterns.\n */\nclass DynamicPiecesReplacePattern {\n    constructor(pieces) {\n        this.pieces = pieces;\n        this.kind = 1 /* ReplacePatternKind.DynamicPieces */;\n    }\n}\nexport class ReplacePattern {\n    static fromStaticValue(value) {\n        return new ReplacePattern([ReplacePiece.staticValue(value)]);\n    }\n    get hasReplacementPatterns() {\n        return (this._state.kind === 1 /* ReplacePatternKind.DynamicPieces */);\n    }\n    constructor(pieces) {\n        if (!pieces || pieces.length === 0) {\n            this._state = new StaticValueReplacePattern('');\n        }\n        else if (pieces.length === 1 && pieces[0].staticValue !== null) {\n            this._state = new StaticValueReplacePattern(pieces[0].staticValue);\n        }\n        else {\n            this._state = new DynamicPiecesReplacePattern(pieces);\n        }\n    }\n    buildReplaceString(matches, preserveCase) {\n        if (this._state.kind === 0 /* ReplacePatternKind.StaticValue */) {\n            if (preserveCase) {\n                return buildReplaceStringWithCasePreserved(matches, this._state.staticValue);\n            }\n            else {\n                return this._state.staticValue;\n            }\n        }\n        let result = '';\n        for (let i = 0, len = this._state.pieces.length; i < len; i++) {\n            const piece = this._state.pieces[i];\n            if (piece.staticValue !== null) {\n                // static value ReplacePiece\n                result += piece.staticValue;\n                continue;\n            }\n            // match index ReplacePiece\n            let match = ReplacePattern._substitute(piece.matchIndex, matches);\n            if (piece.caseOps !== null && piece.caseOps.length > 0) {\n                const repl = [];\n                const lenOps = piece.caseOps.length;\n                let opIdx = 0;\n                for (let idx = 0, len = match.length; idx < len; idx++) {\n                    if (opIdx >= lenOps) {\n                        repl.push(match.slice(idx));\n                        break;\n                    }\n                    switch (piece.caseOps[opIdx]) {\n                        case 'U':\n                            repl.push(match[idx].toUpperCase());\n                            break;\n                        case 'u':\n                            repl.push(match[idx].toUpperCase());\n                            opIdx++;\n                            break;\n                        case 'L':\n                            repl.push(match[idx].toLowerCase());\n                            break;\n                        case 'l':\n                            repl.push(match[idx].toLowerCase());\n                            opIdx++;\n                            break;\n                        default:\n                            repl.push(match[idx]);\n                    }\n                }\n                match = repl.join('');\n            }\n            result += match;\n        }\n        return result;\n    }\n    static _substitute(matchIndex, matches) {\n        if (matches === null) {\n            return '';\n        }\n        if (matchIndex === 0) {\n            return matches[0];\n        }\n        let remainder = '';\n        while (matchIndex > 0) {\n            if (matchIndex < matches.length) {\n                // A match can be undefined\n                const match = (matches[matchIndex] || '');\n                return match + remainder;\n            }\n            remainder = String(matchIndex % 10) + remainder;\n            matchIndex = Math.floor(matchIndex / 10);\n        }\n        return '$' + remainder;\n    }\n}\n/**\n * A replace piece can either be a static string or an index to a specific match.\n */\nexport class ReplacePiece {\n    static staticValue(value) {\n        return new ReplacePiece(value, -1, null);\n    }\n    static caseOps(index, caseOps) {\n        return new ReplacePiece(null, index, caseOps);\n    }\n    constructor(staticValue, matchIndex, caseOps) {\n        this.staticValue = staticValue;\n        this.matchIndex = matchIndex;\n        if (!caseOps || caseOps.length === 0) {\n            this.caseOps = null;\n        }\n        else {\n            this.caseOps = caseOps.slice(0);\n        }\n    }\n}\nclass ReplacePieceBuilder {\n    constructor(source) {\n        this._source = source;\n        this._lastCharIndex = 0;\n        this._result = [];\n        this._resultLen = 0;\n        this._currentStaticPiece = '';\n    }\n    emitUnchanged(toCharIndex) {\n        this._emitStatic(this._source.substring(this._lastCharIndex, toCharIndex));\n        this._lastCharIndex = toCharIndex;\n    }\n    emitStatic(value, toCharIndex) {\n        this._emitStatic(value);\n        this._lastCharIndex = toCharIndex;\n    }\n    _emitStatic(value) {\n        if (value.length === 0) {\n            return;\n        }\n        this._currentStaticPiece += value;\n    }\n    emitMatchIndex(index, toCharIndex, caseOps) {\n        if (this._currentStaticPiece.length !== 0) {\n            this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\n            this._currentStaticPiece = '';\n        }\n        this._result[this._resultLen++] = ReplacePiece.caseOps(index, caseOps);\n        this._lastCharIndex = toCharIndex;\n    }\n    finalize() {\n        this.emitUnchanged(this._source.length);\n        if (this._currentStaticPiece.length !== 0) {\n            this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\n            this._currentStaticPiece = '';\n        }\n        return new ReplacePattern(this._result);\n    }\n}\n/**\n * \\n\t\t\t=> inserts a LF\n * \\t\t\t\t=> inserts a TAB\n * \\\\\t\t\t=> inserts a \"\\\".\n * \\u\t\t\t=> upper-cases one character in a match.\n * \\U\t\t\t=> upper-cases ALL remaining characters in a match.\n * \\l\t\t\t=> lower-cases one character in a match.\n * \\L\t\t\t=> lower-cases ALL remaining characters in a match.\n * $$\t\t\t=> inserts a \"$\".\n * $& and $0\t=> inserts the matched substring.\n * $n\t\t\t=> Where n is a non-negative integer lesser than 100, inserts the nth parenthesized submatch string\n * everything else stays untouched\n *\n * Also see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter\n */\nexport function parseReplaceString(replaceString) {\n    if (!replaceString || replaceString.length === 0) {\n        return new ReplacePattern(null);\n    }\n    const caseOps = [];\n    const result = new ReplacePieceBuilder(replaceString);\n    for (let i = 0, len = replaceString.length; i < len; i++) {\n        const chCode = replaceString.charCodeAt(i);\n        if (chCode === 92 /* CharCode.Backslash */) {\n            // move to next char\n            i++;\n            if (i >= len) {\n                // string ends with a \\\n                break;\n            }\n            const nextChCode = replaceString.charCodeAt(i);\n            // let replaceWithCharacter: string | null = null;\n            switch (nextChCode) {\n                case 92 /* CharCode.Backslash */:\n                    // \\\\ => inserts a \"\\\"\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('\\\\', i + 1);\n                    break;\n                case 110 /* CharCode.n */:\n                    // \\n => inserts a LF\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('\\n', i + 1);\n                    break;\n                case 116 /* CharCode.t */:\n                    // \\t => inserts a TAB\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('\\t', i + 1);\n                    break;\n                // Case modification of string replacements, patterned after Boost, but only applied\n                // to the replacement text, not subsequent content.\n                case 117 /* CharCode.u */:\n                // \\u => upper-cases one character.\n                case 85 /* CharCode.U */:\n                // \\U => upper-cases ALL following characters.\n                case 108 /* CharCode.l */:\n                // \\l => lower-cases one character.\n                case 76 /* CharCode.L */:\n                    // \\L => lower-cases ALL following characters.\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('', i + 1);\n                    caseOps.push(String.fromCharCode(nextChCode));\n                    break;\n            }\n            continue;\n        }\n        if (chCode === 36 /* CharCode.DollarSign */) {\n            // move to next char\n            i++;\n            if (i >= len) {\n                // string ends with a $\n                break;\n            }\n            const nextChCode = replaceString.charCodeAt(i);\n            if (nextChCode === 36 /* CharCode.DollarSign */) {\n                // $$ => inserts a \"$\"\n                result.emitUnchanged(i - 1);\n                result.emitStatic('$', i + 1);\n                continue;\n            }\n            if (nextChCode === 48 /* CharCode.Digit0 */ || nextChCode === 38 /* CharCode.Ampersand */) {\n                // $& and $0 => inserts the matched substring.\n                result.emitUnchanged(i - 1);\n                result.emitMatchIndex(0, i + 1, caseOps);\n                caseOps.length = 0;\n                continue;\n            }\n            if (49 /* CharCode.Digit1 */ <= nextChCode && nextChCode <= 57 /* CharCode.Digit9 */) {\n                // $n\n                let matchIndex = nextChCode - 48 /* CharCode.Digit0 */;\n                // peek next char to probe for $nn\n                if (i + 1 < len) {\n                    const nextNextChCode = replaceString.charCodeAt(i + 1);\n                    if (48 /* CharCode.Digit0 */ <= nextNextChCode && nextNextChCode <= 57 /* CharCode.Digit9 */) {\n                        // $nn\n                        // move to next char\n                        i++;\n                        matchIndex = matchIndex * 10 + (nextNextChCode - 48 /* CharCode.Digit0 */);\n                        result.emitUnchanged(i - 2);\n                        result.emitMatchIndex(matchIndex, i + 1, caseOps);\n                        caseOps.length = 0;\n                        continue;\n                    }\n                }\n                result.emitUnchanged(i - 1);\n                result.emitMatchIndex(matchIndex, i + 1, caseOps);\n                caseOps.length = 0;\n                continue;\n            }\n        }\n    }\n    return result.finalize();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { findFirstIdxMonotonousOrArrLen } from '../../../../base/common/arraysFind.js';\nimport { RunOnceScheduler, TimeoutTimer } from '../../../../base/common/async.js';\nimport { DisposableStore, dispose } from '../../../../base/common/lifecycle.js';\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection } from '../../../common/commands/replaceCommand.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { SearchParams } from '../../../common/model/textModelSearch.js';\nimport { FindDecorations } from './findDecorations.js';\nimport { ReplaceAllCommand } from './replaceAllCommand.js';\nimport { parseReplaceString, ReplacePattern } from './replacePattern.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nexport const CONTEXT_FIND_WIDGET_VISIBLE = new RawContextKey('findWidgetVisible', false);\nexport const CONTEXT_FIND_WIDGET_NOT_VISIBLE = CONTEXT_FIND_WIDGET_VISIBLE.toNegated();\n// Keep ContextKey use of 'Focussed' to not break when clauses\nexport const CONTEXT_FIND_INPUT_FOCUSED = new RawContextKey('findInputFocussed', false);\nexport const CONTEXT_REPLACE_INPUT_FOCUSED = new RawContextKey('replaceInputFocussed', false);\nexport const ToggleCaseSensitiveKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 33 /* KeyCode.KeyC */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 33 /* KeyCode.KeyC */ }\n};\nexport const ToggleWholeWordKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 53 /* KeyCode.KeyW */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 53 /* KeyCode.KeyW */ }\n};\nexport const ToggleRegexKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 48 /* KeyCode.KeyR */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 48 /* KeyCode.KeyR */ }\n};\nexport const ToggleSearchScopeKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 42 /* KeyCode.KeyL */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 42 /* KeyCode.KeyL */ }\n};\nexport const TogglePreserveCaseKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 46 /* KeyCode.KeyP */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 46 /* KeyCode.KeyP */ }\n};\nexport const FIND_IDS = {\n    StartFindAction: 'actions.find',\n    StartFindWithSelection: 'actions.findWithSelection',\n    StartFindWithArgs: 'editor.actions.findWithArgs',\n    NextMatchFindAction: 'editor.action.nextMatchFindAction',\n    PreviousMatchFindAction: 'editor.action.previousMatchFindAction',\n    GoToMatchFindAction: 'editor.action.goToMatchFindAction',\n    NextSelectionMatchFindAction: 'editor.action.nextSelectionMatchFindAction',\n    PreviousSelectionMatchFindAction: 'editor.action.previousSelectionMatchFindAction',\n    StartFindReplaceAction: 'editor.action.startFindReplaceAction',\n    CloseFindWidgetCommand: 'closeFindWidget',\n    ToggleCaseSensitiveCommand: 'toggleFindCaseSensitive',\n    ToggleWholeWordCommand: 'toggleFindWholeWord',\n    ToggleRegexCommand: 'toggleFindRegex',\n    ToggleSearchScopeCommand: 'toggleFindInSelection',\n    TogglePreserveCaseCommand: 'togglePreserveCase',\n    ReplaceOneAction: 'editor.action.replaceOne',\n    ReplaceAllAction: 'editor.action.replaceAll',\n    SelectAllMatchesAction: 'editor.action.selectAllMatches'\n};\nexport const MATCHES_LIMIT = 19999;\nconst RESEARCH_DELAY = 240;\nexport class FindModelBoundToEditorModel {\n    constructor(editor, state) {\n        this._toDispose = new DisposableStore();\n        this._editor = editor;\n        this._state = state;\n        this._isDisposed = false;\n        this._startSearchingTimer = new TimeoutTimer();\n        this._decorations = new FindDecorations(editor);\n        this._toDispose.add(this._decorations);\n        this._updateDecorationsScheduler = new RunOnceScheduler(() => this.research(false), 100);\n        this._toDispose.add(this._updateDecorationsScheduler);\n        this._toDispose.add(this._editor.onDidChangeCursorPosition((e) => {\n            if (e.reason === 3 /* CursorChangeReason.Explicit */\n                || e.reason === 5 /* CursorChangeReason.Undo */\n                || e.reason === 6 /* CursorChangeReason.Redo */) {\n                this._decorations.setStartPosition(this._editor.getPosition());\n            }\n        }));\n        this._ignoreModelContentChanged = false;\n        this._toDispose.add(this._editor.onDidChangeModelContent((e) => {\n            if (this._ignoreModelContentChanged) {\n                return;\n            }\n            if (e.isFlush) {\n                // a model.setValue() was called\n                this._decorations.reset();\n            }\n            this._decorations.setStartPosition(this._editor.getPosition());\n            this._updateDecorationsScheduler.schedule();\n        }));\n        this._toDispose.add(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this.research(false, this._state.searchScope);\n    }\n    dispose() {\n        this._isDisposed = true;\n        dispose(this._startSearchingTimer);\n        this._toDispose.dispose();\n    }\n    _onStateChanged(e) {\n        if (this._isDisposed) {\n            // The find model is disposed during a find state changed event\n            return;\n        }\n        if (!this._editor.hasModel()) {\n            // The find model will be disposed momentarily\n            return;\n        }\n        if (e.searchString || e.isReplaceRevealed || e.isRegex || e.wholeWord || e.matchCase || e.searchScope) {\n            const model = this._editor.getModel();\n            if (model.isTooLargeForSyncing()) {\n                this._startSearchingTimer.cancel();\n                this._startSearchingTimer.setIfNotSet(() => {\n                    if (e.searchScope) {\n                        this.research(e.moveCursor, this._state.searchScope);\n                    }\n                    else {\n                        this.research(e.moveCursor);\n                    }\n                }, RESEARCH_DELAY);\n            }\n            else {\n                if (e.searchScope) {\n                    this.research(e.moveCursor, this._state.searchScope);\n                }\n                else {\n                    this.research(e.moveCursor);\n                }\n            }\n        }\n    }\n    static _getSearchRange(model, findScope) {\n        // If we have set now or before a find scope, use it for computing the search range\n        if (findScope) {\n            return findScope;\n        }\n        return model.getFullModelRange();\n    }\n    research(moveCursor, newFindScope) {\n        let findScopes = null;\n        if (typeof newFindScope !== 'undefined') {\n            if (newFindScope !== null) {\n                if (!Array.isArray(newFindScope)) {\n                    findScopes = [newFindScope];\n                }\n                else {\n                    findScopes = newFindScope;\n                }\n            }\n        }\n        else {\n            findScopes = this._decorations.getFindScopes();\n        }\n        if (findScopes !== null) {\n            findScopes = findScopes.map(findScope => {\n                if (findScope.startLineNumber !== findScope.endLineNumber) {\n                    let endLineNumber = findScope.endLineNumber;\n                    if (findScope.endColumn === 1) {\n                        endLineNumber = endLineNumber - 1;\n                    }\n                    return new Range(findScope.startLineNumber, 1, endLineNumber, this._editor.getModel().getLineMaxColumn(endLineNumber));\n                }\n                return findScope;\n            });\n        }\n        const findMatches = this._findMatches(findScopes, false, MATCHES_LIMIT);\n        this._decorations.set(findMatches, findScopes);\n        const editorSelection = this._editor.getSelection();\n        let currentMatchesPosition = this._decorations.getCurrentMatchesPosition(editorSelection);\n        if (currentMatchesPosition === 0 && findMatches.length > 0) {\n            // current selection is not on top of a match\n            // try to find its nearest result from the top of the document\n            const matchAfterSelection = findFirstIdxMonotonousOrArrLen(findMatches.map(match => match.range), range => Range.compareRangesUsingStarts(range, editorSelection) >= 0);\n            currentMatchesPosition = matchAfterSelection > 0 ? matchAfterSelection - 1 + 1 /** match position is one based */ : currentMatchesPosition;\n        }\n        this._state.changeMatchInfo(currentMatchesPosition, this._decorations.getCount(), undefined);\n        if (moveCursor && this._editor.getOption(41 /* EditorOption.find */).cursorMoveOnType) {\n            this._moveToNextMatch(this._decorations.getStartPosition());\n        }\n    }\n    _hasMatches() {\n        return (this._state.matchesCount > 0);\n    }\n    _cannotFind() {\n        if (!this._hasMatches()) {\n            const findScope = this._decorations.getFindScope();\n            if (findScope) {\n                // Reveal the selection so user is reminded that 'selection find' is on.\n                this._editor.revealRangeInCenterIfOutsideViewport(findScope, 0 /* ScrollType.Smooth */);\n            }\n            return true;\n        }\n        return false;\n    }\n    _setCurrentFindMatch(match) {\n        const matchesPosition = this._decorations.setCurrentFindMatch(match);\n        this._state.changeMatchInfo(matchesPosition, this._decorations.getCount(), match);\n        this._editor.setSelection(match);\n        this._editor.revealRangeInCenterIfOutsideViewport(match, 0 /* ScrollType.Smooth */);\n    }\n    _prevSearchPosition(before) {\n        const isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0\n            || this._state.searchString.indexOf('$') >= 0);\n        let { lineNumber, column } = before;\n        const model = this._editor.getModel();\n        if (isUsingLineStops || column === 1) {\n            if (lineNumber === 1) {\n                lineNumber = model.getLineCount();\n            }\n            else {\n                lineNumber--;\n            }\n            column = model.getLineMaxColumn(lineNumber);\n        }\n        else {\n            column--;\n        }\n        return new Position(lineNumber, column);\n    }\n    _moveToPrevMatch(before, isRecursed = false) {\n        if (!this._state.canNavigateBack()) {\n            // we are beyond the first matched find result\n            // instead of doing nothing, we should refocus the first item\n            const nextMatchRange = this._decorations.matchAfterPosition(before);\n            if (nextMatchRange) {\n                this._setCurrentFindMatch(nextMatchRange);\n            }\n            return;\n        }\n        if (this._decorations.getCount() < MATCHES_LIMIT) {\n            let prevMatchRange = this._decorations.matchBeforePosition(before);\n            if (prevMatchRange && prevMatchRange.isEmpty() && prevMatchRange.getStartPosition().equals(before)) {\n                before = this._prevSearchPosition(before);\n                prevMatchRange = this._decorations.matchBeforePosition(before);\n            }\n            if (prevMatchRange) {\n                this._setCurrentFindMatch(prevMatchRange);\n            }\n            return;\n        }\n        if (this._cannotFind()) {\n            return;\n        }\n        const findScope = this._decorations.getFindScope();\n        const searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\n        // ...(----)...|...\n        if (searchRange.getEndPosition().isBefore(before)) {\n            before = searchRange.getEndPosition();\n        }\n        // ...|...(----)...\n        if (before.isBefore(searchRange.getStartPosition())) {\n            before = searchRange.getEndPosition();\n        }\n        const { lineNumber, column } = before;\n        const model = this._editor.getModel();\n        let position = new Position(lineNumber, column);\n        let prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null, false);\n        if (prevMatch && prevMatch.range.isEmpty() && prevMatch.range.getStartPosition().equals(position)) {\n            // Looks like we're stuck at this position, unacceptable!\n            position = this._prevSearchPosition(position);\n            prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null, false);\n        }\n        if (!prevMatch) {\n            // there is precisely one match and selection is on top of it\n            return;\n        }\n        if (!isRecursed && !searchRange.containsRange(prevMatch.range)) {\n            return this._moveToPrevMatch(prevMatch.range.getStartPosition(), true);\n        }\n        this._setCurrentFindMatch(prevMatch.range);\n    }\n    moveToPrevMatch() {\n        this._moveToPrevMatch(this._editor.getSelection().getStartPosition());\n    }\n    _nextSearchPosition(after) {\n        const isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0\n            || this._state.searchString.indexOf('$') >= 0);\n        let { lineNumber, column } = after;\n        const model = this._editor.getModel();\n        if (isUsingLineStops || column === model.getLineMaxColumn(lineNumber)) {\n            if (lineNumber === model.getLineCount()) {\n                lineNumber = 1;\n            }\n            else {\n                lineNumber++;\n            }\n            column = 1;\n        }\n        else {\n            column++;\n        }\n        return new Position(lineNumber, column);\n    }\n    _moveToNextMatch(after) {\n        if (!this._state.canNavigateForward()) {\n            // we are beyond the last matched find result\n            // instead of doing nothing, we should refocus the last item\n            const prevMatchRange = this._decorations.matchBeforePosition(after);\n            if (prevMatchRange) {\n                this._setCurrentFindMatch(prevMatchRange);\n            }\n            return;\n        }\n        if (this._decorations.getCount() < MATCHES_LIMIT) {\n            let nextMatchRange = this._decorations.matchAfterPosition(after);\n            if (nextMatchRange && nextMatchRange.isEmpty() && nextMatchRange.getStartPosition().equals(after)) {\n                // Looks like we're stuck at this position, unacceptable!\n                after = this._nextSearchPosition(after);\n                nextMatchRange = this._decorations.matchAfterPosition(after);\n            }\n            if (nextMatchRange) {\n                this._setCurrentFindMatch(nextMatchRange);\n            }\n            return;\n        }\n        const nextMatch = this._getNextMatch(after, false, true);\n        if (nextMatch) {\n            this._setCurrentFindMatch(nextMatch.range);\n        }\n    }\n    _getNextMatch(after, captureMatches, forceMove, isRecursed = false) {\n        if (this._cannotFind()) {\n            return null;\n        }\n        const findScope = this._decorations.getFindScope();\n        const searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\n        // ...(----)...|...\n        if (searchRange.getEndPosition().isBefore(after)) {\n            after = searchRange.getStartPosition();\n        }\n        // ...|...(----)...\n        if (after.isBefore(searchRange.getStartPosition())) {\n            after = searchRange.getStartPosition();\n        }\n        const { lineNumber, column } = after;\n        const model = this._editor.getModel();\n        let position = new Position(lineNumber, column);\n        let nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null, captureMatches);\n        if (forceMove && nextMatch && nextMatch.range.isEmpty() && nextMatch.range.getStartPosition().equals(position)) {\n            // Looks like we're stuck at this position, unacceptable!\n            position = this._nextSearchPosition(position);\n            nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null, captureMatches);\n        }\n        if (!nextMatch) {\n            // there is precisely one match and selection is on top of it\n            return null;\n        }\n        if (!isRecursed && !searchRange.containsRange(nextMatch.range)) {\n            return this._getNextMatch(nextMatch.range.getEndPosition(), captureMatches, forceMove, true);\n        }\n        return nextMatch;\n    }\n    moveToNextMatch() {\n        this._moveToNextMatch(this._editor.getSelection().getEndPosition());\n    }\n    _moveToMatch(index) {\n        const decorationRange = this._decorations.getDecorationRangeAt(index);\n        if (decorationRange) {\n            this._setCurrentFindMatch(decorationRange);\n        }\n    }\n    moveToMatch(index) {\n        this._moveToMatch(index);\n    }\n    _getReplacePattern() {\n        if (this._state.isRegex) {\n            return parseReplaceString(this._state.replaceString);\n        }\n        return ReplacePattern.fromStaticValue(this._state.replaceString);\n    }\n    replace() {\n        if (!this._hasMatches()) {\n            return;\n        }\n        const replacePattern = this._getReplacePattern();\n        const selection = this._editor.getSelection();\n        const nextMatch = this._getNextMatch(selection.getStartPosition(), true, false);\n        if (nextMatch) {\n            if (selection.equalsRange(nextMatch.range)) {\n                // selection sits on a find match => replace it!\n                const replaceString = replacePattern.buildReplaceString(nextMatch.matches, this._state.preserveCase);\n                const command = new ReplaceCommand(selection, replaceString);\n                this._executeEditorCommand('replace', command);\n                this._decorations.setStartPosition(new Position(selection.startLineNumber, selection.startColumn + replaceString.length));\n                this.research(true);\n            }\n            else {\n                this._decorations.setStartPosition(this._editor.getPosition());\n                this._setCurrentFindMatch(nextMatch.range);\n            }\n        }\n    }\n    _findMatches(findScopes, captureMatches, limitResultCount) {\n        const searchRanges = (findScopes || [null]).map((scope) => FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), scope));\n        return this._editor.getModel().findMatches(this._state.searchString, searchRanges, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null, captureMatches, limitResultCount);\n    }\n    replaceAll() {\n        if (!this._hasMatches()) {\n            return;\n        }\n        const findScopes = this._decorations.getFindScopes();\n        if (findScopes === null && this._state.matchesCount >= MATCHES_LIMIT) {\n            // Doing a replace on the entire file that is over ${MATCHES_LIMIT} matches\n            this._largeReplaceAll();\n        }\n        else {\n            this._regularReplaceAll(findScopes);\n        }\n        this.research(false);\n    }\n    _largeReplaceAll() {\n        const searchParams = new SearchParams(this._state.searchString, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(131 /* EditorOption.wordSeparators */) : null);\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return;\n        }\n        let searchRegex = searchData.regex;\n        if (!searchRegex.multiline) {\n            let mod = 'mu';\n            if (searchRegex.ignoreCase) {\n                mod += 'i';\n            }\n            if (searchRegex.global) {\n                mod += 'g';\n            }\n            searchRegex = new RegExp(searchRegex.source, mod);\n        }\n        const model = this._editor.getModel();\n        const modelText = model.getValue(1 /* EndOfLinePreference.LF */);\n        const fullModelRange = model.getFullModelRange();\n        const replacePattern = this._getReplacePattern();\n        let resultText;\n        const preserveCase = this._state.preserveCase;\n        if (replacePattern.hasReplacementPatterns || preserveCase) {\n            resultText = modelText.replace(searchRegex, function () {\n                return replacePattern.buildReplaceString(arguments, preserveCase);\n            });\n        }\n        else {\n            resultText = modelText.replace(searchRegex, replacePattern.buildReplaceString(null, preserveCase));\n        }\n        const command = new ReplaceCommandThatPreservesSelection(fullModelRange, resultText, this._editor.getSelection());\n        this._executeEditorCommand('replaceAll', command);\n    }\n    _regularReplaceAll(findScopes) {\n        const replacePattern = this._getReplacePattern();\n        // Get all the ranges (even more than the highlighted ones)\n        const matches = this._findMatches(findScopes, replacePattern.hasReplacementPatterns || this._state.preserveCase, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n        const replaceStrings = [];\n        for (let i = 0, len = matches.length; i < len; i++) {\n            replaceStrings[i] = replacePattern.buildReplaceString(matches[i].matches, this._state.preserveCase);\n        }\n        const command = new ReplaceAllCommand(this._editor.getSelection(), matches.map(m => m.range), replaceStrings);\n        this._executeEditorCommand('replaceAll', command);\n    }\n    selectAllMatches() {\n        if (!this._hasMatches()) {\n            return;\n        }\n        const findScopes = this._decorations.getFindScopes();\n        // Get all the ranges (even more than the highlighted ones)\n        const matches = this._findMatches(findScopes, false, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n        let selections = matches.map(m => new Selection(m.range.startLineNumber, m.range.startColumn, m.range.endLineNumber, m.range.endColumn));\n        // If one of the ranges is the editor selection, then maintain it as primary\n        const editorSelection = this._editor.getSelection();\n        for (let i = 0, len = selections.length; i < len; i++) {\n            const sel = selections[i];\n            if (sel.equalsRange(editorSelection)) {\n                selections = [editorSelection].concat(selections.slice(0, i)).concat(selections.slice(i + 1));\n                break;\n            }\n        }\n        this._editor.setSelections(selections);\n    }\n    _executeEditorCommand(source, command) {\n        try {\n            this._ignoreModelContentChanged = true;\n            this._editor.pushUndoStop();\n            this._editor.executeCommand(source, command);\n            this._editor.pushUndoStop();\n        }\n        finally {\n            this._ignoreModelContentChanged = false;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport './findOptionsWidget.css';\nimport { CaseSensitiveToggle, RegexToggle, WholeWordsToggle } from '../../../../base/browser/ui/findinput/findInputToggles.js';\nimport { Widget } from '../../../../base/browser/ui/widget.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { FIND_IDS } from './findModel.js';\nimport { asCssVariable, inputActiveOptionBackground, inputActiveOptionBorder, inputActiveOptionForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { createInstantHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegateFactory.js';\nexport class FindOptionsWidget extends Widget {\n    constructor(editor, state, keybindingService) {\n        super();\n        this._hideSoon = this._register(new RunOnceScheduler(() => this._hide(), 2000));\n        this._isVisible = false;\n        this._editor = editor;\n        this._state = state;\n        this._keybindingService = keybindingService;\n        this._domNode = document.createElement('div');\n        this._domNode.className = 'findOptionsWidget';\n        this._domNode.style.display = 'none';\n        this._domNode.style.top = '10px';\n        this._domNode.style.zIndex = '12';\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        const toggleStyles = {\n            inputActiveOptionBorder: asCssVariable(inputActiveOptionBorder),\n            inputActiveOptionForeground: asCssVariable(inputActiveOptionForeground),\n            inputActiveOptionBackground: asCssVariable(inputActiveOptionBackground),\n        };\n        const hoverDelegate = this._register(createInstantHoverDelegate());\n        this.caseSensitive = this._register(new CaseSensitiveToggle({\n            appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),\n            isChecked: this._state.matchCase,\n            hoverDelegate,\n            ...toggleStyles\n        }));\n        this._domNode.appendChild(this.caseSensitive.domNode);\n        this._register(this.caseSensitive.onChange(() => {\n            this._state.change({\n                matchCase: this.caseSensitive.checked\n            }, false);\n        }));\n        this.wholeWords = this._register(new WholeWordsToggle({\n            appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),\n            isChecked: this._state.wholeWord,\n            hoverDelegate,\n            ...toggleStyles\n        }));\n        this._domNode.appendChild(this.wholeWords.domNode);\n        this._register(this.wholeWords.onChange(() => {\n            this._state.change({\n                wholeWord: this.wholeWords.checked\n            }, false);\n        }));\n        this.regex = this._register(new RegexToggle({\n            appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),\n            isChecked: this._state.isRegex,\n            hoverDelegate,\n            ...toggleStyles\n        }));\n        this._domNode.appendChild(this.regex.domNode);\n        this._register(this.regex.onChange(() => {\n            this._state.change({\n                isRegex: this.regex.checked\n            }, false);\n        }));\n        this._editor.addOverlayWidget(this);\n        this._register(this._state.onFindReplaceStateChange((e) => {\n            let somethingChanged = false;\n            if (e.isRegex) {\n                this.regex.checked = this._state.isRegex;\n                somethingChanged = true;\n            }\n            if (e.wholeWord) {\n                this.wholeWords.checked = this._state.wholeWord;\n                somethingChanged = true;\n            }\n            if (e.matchCase) {\n                this.caseSensitive.checked = this._state.matchCase;\n                somethingChanged = true;\n            }\n            if (!this._state.isRevealed && somethingChanged) {\n                this._revealTemporarily();\n            }\n        }));\n        this._register(dom.addDisposableListener(this._domNode, dom.EventType.MOUSE_LEAVE, (e) => this._onMouseLeave()));\n        this._register(dom.addDisposableListener(this._domNode, 'mouseover', (e) => this._onMouseOver()));\n    }\n    _keybindingLabelFor(actionId) {\n        const kb = this._keybindingService.lookupKeybinding(actionId);\n        if (!kb) {\n            return '';\n        }\n        return ` (${kb.getLabel()})`;\n    }\n    dispose() {\n        this._editor.removeOverlayWidget(this);\n        super.dispose();\n    }\n    // ----- IOverlayWidget API\n    getId() {\n        return FindOptionsWidget.ID;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        return {\n            preference: 0 /* OverlayWidgetPositionPreference.TOP_RIGHT_CORNER */\n        };\n    }\n    highlightFindOptions() {\n        this._revealTemporarily();\n    }\n    _revealTemporarily() {\n        this._show();\n        this._hideSoon.schedule();\n    }\n    _onMouseLeave() {\n        this._hideSoon.schedule();\n    }\n    _onMouseOver() {\n        this._hideSoon.cancel();\n    }\n    _show() {\n        if (this._isVisible) {\n            return;\n        }\n        this._isVisible = true;\n        this._domNode.style.display = 'block';\n    }\n    _hide() {\n        if (!this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        this._domNode.style.display = 'none';\n    }\n}\nFindOptionsWidget.ID = 'editor.contrib.findOptionsWidget';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Range } from '../../../common/core/range.js';\nimport { MATCHES_LIMIT } from './findModel.js';\nfunction effectiveOptionValue(override, value) {\n    if (override === 1 /* FindOptionOverride.True */) {\n        return true;\n    }\n    if (override === 2 /* FindOptionOverride.False */) {\n        return false;\n    }\n    return value;\n}\nexport class FindReplaceState extends Disposable {\n    get searchString() { return this._searchString; }\n    get replaceString() { return this._replaceString; }\n    get isRevealed() { return this._isRevealed; }\n    get isReplaceRevealed() { return this._isReplaceRevealed; }\n    get isRegex() { return effectiveOptionValue(this._isRegexOverride, this._isRegex); }\n    get wholeWord() { return effectiveOptionValue(this._wholeWordOverride, this._wholeWord); }\n    get matchCase() { return effectiveOptionValue(this._matchCaseOverride, this._matchCase); }\n    get preserveCase() { return effectiveOptionValue(this._preserveCaseOverride, this._preserveCase); }\n    get actualIsRegex() { return this._isRegex; }\n    get actualWholeWord() { return this._wholeWord; }\n    get actualMatchCase() { return this._matchCase; }\n    get actualPreserveCase() { return this._preserveCase; }\n    get searchScope() { return this._searchScope; }\n    get matchesPosition() { return this._matchesPosition; }\n    get matchesCount() { return this._matchesCount; }\n    get currentMatch() { return this._currentMatch; }\n    constructor() {\n        super();\n        this._onFindReplaceStateChange = this._register(new Emitter());\n        this.onFindReplaceStateChange = this._onFindReplaceStateChange.event;\n        this._searchString = '';\n        this._replaceString = '';\n        this._isRevealed = false;\n        this._isReplaceRevealed = false;\n        this._isRegex = false;\n        this._isRegexOverride = 0 /* FindOptionOverride.NotSet */;\n        this._wholeWord = false;\n        this._wholeWordOverride = 0 /* FindOptionOverride.NotSet */;\n        this._matchCase = false;\n        this._matchCaseOverride = 0 /* FindOptionOverride.NotSet */;\n        this._preserveCase = false;\n        this._preserveCaseOverride = 0 /* FindOptionOverride.NotSet */;\n        this._searchScope = null;\n        this._matchesPosition = 0;\n        this._matchesCount = 0;\n        this._currentMatch = null;\n        this._loop = true;\n        this._isSearching = false;\n        this._filters = null;\n    }\n    changeMatchInfo(matchesPosition, matchesCount, currentMatch) {\n        const changeEvent = {\n            moveCursor: false,\n            updateHistory: false,\n            searchString: false,\n            replaceString: false,\n            isRevealed: false,\n            isReplaceRevealed: false,\n            isRegex: false,\n            wholeWord: false,\n            matchCase: false,\n            preserveCase: false,\n            searchScope: false,\n            matchesPosition: false,\n            matchesCount: false,\n            currentMatch: false,\n            loop: false,\n            isSearching: false,\n            filters: false\n        };\n        let somethingChanged = false;\n        if (matchesCount === 0) {\n            matchesPosition = 0;\n        }\n        if (matchesPosition > matchesCount) {\n            matchesPosition = matchesCount;\n        }\n        if (this._matchesPosition !== matchesPosition) {\n            this._matchesPosition = matchesPosition;\n            changeEvent.matchesPosition = true;\n            somethingChanged = true;\n        }\n        if (this._matchesCount !== matchesCount) {\n            this._matchesCount = matchesCount;\n            changeEvent.matchesCount = true;\n            somethingChanged = true;\n        }\n        if (typeof currentMatch !== 'undefined') {\n            if (!Range.equalsRange(this._currentMatch, currentMatch)) {\n                this._currentMatch = currentMatch;\n                changeEvent.currentMatch = true;\n                somethingChanged = true;\n            }\n        }\n        if (somethingChanged) {\n            this._onFindReplaceStateChange.fire(changeEvent);\n        }\n    }\n    change(newState, moveCursor, updateHistory = true) {\n        var _a;\n        const changeEvent = {\n            moveCursor: moveCursor,\n            updateHistory: updateHistory,\n            searchString: false,\n            replaceString: false,\n            isRevealed: false,\n            isReplaceRevealed: false,\n            isRegex: false,\n            wholeWord: false,\n            matchCase: false,\n            preserveCase: false,\n            searchScope: false,\n            matchesPosition: false,\n            matchesCount: false,\n            currentMatch: false,\n            loop: false,\n            isSearching: false,\n            filters: false\n        };\n        let somethingChanged = false;\n        const oldEffectiveIsRegex = this.isRegex;\n        const oldEffectiveWholeWords = this.wholeWord;\n        const oldEffectiveMatchCase = this.matchCase;\n        const oldEffectivePreserveCase = this.preserveCase;\n        if (typeof newState.searchString !== 'undefined') {\n            if (this._searchString !== newState.searchString) {\n                this._searchString = newState.searchString;\n                changeEvent.searchString = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.replaceString !== 'undefined') {\n            if (this._replaceString !== newState.replaceString) {\n                this._replaceString = newState.replaceString;\n                changeEvent.replaceString = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isRevealed !== 'undefined') {\n            if (this._isRevealed !== newState.isRevealed) {\n                this._isRevealed = newState.isRevealed;\n                changeEvent.isRevealed = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isReplaceRevealed !== 'undefined') {\n            if (this._isReplaceRevealed !== newState.isReplaceRevealed) {\n                this._isReplaceRevealed = newState.isReplaceRevealed;\n                changeEvent.isReplaceRevealed = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isRegex !== 'undefined') {\n            this._isRegex = newState.isRegex;\n        }\n        if (typeof newState.wholeWord !== 'undefined') {\n            this._wholeWord = newState.wholeWord;\n        }\n        if (typeof newState.matchCase !== 'undefined') {\n            this._matchCase = newState.matchCase;\n        }\n        if (typeof newState.preserveCase !== 'undefined') {\n            this._preserveCase = newState.preserveCase;\n        }\n        if (typeof newState.searchScope !== 'undefined') {\n            if (!((_a = newState.searchScope) === null || _a === void 0 ? void 0 : _a.every((newSearchScope) => {\n                var _a;\n                return (_a = this._searchScope) === null || _a === void 0 ? void 0 : _a.some(existingSearchScope => {\n                    return !Range.equalsRange(existingSearchScope, newSearchScope);\n                });\n            }))) {\n                this._searchScope = newState.searchScope;\n                changeEvent.searchScope = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.loop !== 'undefined') {\n            if (this._loop !== newState.loop) {\n                this._loop = newState.loop;\n                changeEvent.loop = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isSearching !== 'undefined') {\n            if (this._isSearching !== newState.isSearching) {\n                this._isSearching = newState.isSearching;\n                changeEvent.isSearching = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.filters !== 'undefined') {\n            if (this._filters) {\n                this._filters.update(newState.filters);\n            }\n            else {\n                this._filters = newState.filters;\n            }\n            changeEvent.filters = true;\n            somethingChanged = true;\n        }\n        // Overrides get set when they explicitly come in and get reset anytime something else changes\n        this._isRegexOverride = (typeof newState.isRegexOverride !== 'undefined' ? newState.isRegexOverride : 0 /* FindOptionOverride.NotSet */);\n        this._wholeWordOverride = (typeof newState.wholeWordOverride !== 'undefined' ? newState.wholeWordOverride : 0 /* FindOptionOverride.NotSet */);\n        this._matchCaseOverride = (typeof newState.matchCaseOverride !== 'undefined' ? newState.matchCaseOverride : 0 /* FindOptionOverride.NotSet */);\n        this._preserveCaseOverride = (typeof newState.preserveCaseOverride !== 'undefined' ? newState.preserveCaseOverride : 0 /* FindOptionOverride.NotSet */);\n        if (oldEffectiveIsRegex !== this.isRegex) {\n            somethingChanged = true;\n            changeEvent.isRegex = true;\n        }\n        if (oldEffectiveWholeWords !== this.wholeWord) {\n            somethingChanged = true;\n            changeEvent.wholeWord = true;\n        }\n        if (oldEffectiveMatchCase !== this.matchCase) {\n            somethingChanged = true;\n            changeEvent.matchCase = true;\n        }\n        if (oldEffectivePreserveCase !== this.preserveCase) {\n            somethingChanged = true;\n            changeEvent.preserveCase = true;\n        }\n        if (somethingChanged) {\n            this._onFindReplaceStateChange.fire(changeEvent);\n        }\n    }\n    canNavigateBack() {\n        return this.canNavigateInLoop() || (this.matchesPosition !== 1);\n    }\n    canNavigateForward() {\n        return this.canNavigateInLoop() || (this.matchesPosition < this.matchesCount);\n    }\n    canNavigateInLoop() {\n        return this._loop || (this.matchesCount >= MATCHES_LIMIT);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { alert as alertFn } from '../../../../base/browser/ui/aria/aria.js';\nimport { Toggle } from '../../../../base/browser/ui/toggle/toggle.js';\nimport { Sash } from '../../../../base/browser/ui/sash/sash.js';\nimport { Widget } from '../../../../base/browser/ui/widget.js';\nimport { Delayer } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './findWidget.css';\nimport { Range } from '../../../common/core/range.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_REPLACE_INPUT_FOCUSED, FIND_IDS, MATCHES_LIMIT } from './findModel.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextScopedFindInput, ContextScopedReplaceInput } from '../../../../platform/history/browser/contextScopedHistoryWidget.js';\nimport { showHistoryKeybindingHint } from '../../../../platform/history/browser/historyWidgetKeybindingHint.js';\nimport { asCssVariable, contrastBorder, editorFindMatchHighlightBorder, editorFindRangeHighlightBorder, inputActiveOptionBackground, inputActiveOptionBorder, inputActiveOptionForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerIcon, widgetClose } from '../../../../platform/theme/common/iconRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { assertIsDefined } from '../../../../base/common/types.js';\nimport { defaultInputBoxStyles, defaultToggleStyles } from '../../../../platform/theme/browser/defaultStyles.js';\nimport { createInstantHoverDelegate, getDefaultHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegateFactory.js';\nconst findSelectionIcon = registerIcon('find-selection', Codicon.selection, nls.localize('findSelectionIcon', 'Icon for \\'Find in Selection\\' in the editor find widget.'));\nconst findCollapsedIcon = registerIcon('find-collapsed', Codicon.chevronRight, nls.localize('findCollapsedIcon', 'Icon to indicate that the editor find widget is collapsed.'));\nconst findExpandedIcon = registerIcon('find-expanded', Codicon.chevronDown, nls.localize('findExpandedIcon', 'Icon to indicate that the editor find widget is expanded.'));\nexport const findReplaceIcon = registerIcon('find-replace', Codicon.replace, nls.localize('findReplaceIcon', 'Icon for \\'Replace\\' in the editor find widget.'));\nexport const findReplaceAllIcon = registerIcon('find-replace-all', Codicon.replaceAll, nls.localize('findReplaceAllIcon', 'Icon for \\'Replace All\\' in the editor find widget.'));\nexport const findPreviousMatchIcon = registerIcon('find-previous-match', Codicon.arrowUp, nls.localize('findPreviousMatchIcon', 'Icon for \\'Find Previous\\' in the editor find widget.'));\nexport const findNextMatchIcon = registerIcon('find-next-match', Codicon.arrowDown, nls.localize('findNextMatchIcon', 'Icon for \\'Find Next\\' in the editor find widget.'));\nconst NLS_FIND_DIALOG_LABEL = nls.localize('label.findDialog', \"Find / Replace\");\nconst NLS_FIND_INPUT_LABEL = nls.localize('label.find', \"Find\");\nconst NLS_FIND_INPUT_PLACEHOLDER = nls.localize('placeholder.find', \"Find\");\nconst NLS_PREVIOUS_MATCH_BTN_LABEL = nls.localize('label.previousMatchButton', \"Previous Match\");\nconst NLS_NEXT_MATCH_BTN_LABEL = nls.localize('label.nextMatchButton', \"Next Match\");\nconst NLS_TOGGLE_SELECTION_FIND_TITLE = nls.localize('label.toggleSelectionFind', \"Find in Selection\");\nconst NLS_CLOSE_BTN_LABEL = nls.localize('label.closeButton', \"Close\");\nconst NLS_REPLACE_INPUT_LABEL = nls.localize('label.replace', \"Replace\");\nconst NLS_REPLACE_INPUT_PLACEHOLDER = nls.localize('placeholder.replace', \"Replace\");\nconst NLS_REPLACE_BTN_LABEL = nls.localize('label.replaceButton', \"Replace\");\nconst NLS_REPLACE_ALL_BTN_LABEL = nls.localize('label.replaceAllButton', \"Replace All\");\nconst NLS_TOGGLE_REPLACE_MODE_BTN_LABEL = nls.localize('label.toggleReplaceButton', \"Toggle Replace\");\nconst NLS_MATCHES_COUNT_LIMIT_TITLE = nls.localize('title.matchesCountLimit', \"Only the first {0} results are highlighted, but all find operations work on the entire text.\", MATCHES_LIMIT);\nexport const NLS_MATCHES_LOCATION = nls.localize('label.matchesLocation', \"{0} of {1}\");\nexport const NLS_NO_RESULTS = nls.localize('label.noResults', \"No results\");\nconst FIND_WIDGET_INITIAL_WIDTH = 419;\nconst PART_WIDTH = 275;\nconst FIND_INPUT_AREA_WIDTH = PART_WIDTH - 54;\nlet MAX_MATCHES_COUNT_WIDTH = 69;\n// let FIND_ALL_CONTROLS_WIDTH = 17/** Find Input margin-left */ + (MAX_MATCHES_COUNT_WIDTH + 3 + 1) /** Match Results */ + 23 /** Button */ * 4 + 2/** sash */;\nconst FIND_INPUT_AREA_HEIGHT = 33; // The height of Find Widget when Replace Input is not visible.\nconst ctrlEnterReplaceAllWarningPromptedKey = 'ctrlEnterReplaceAll.windows.donotask';\nconst ctrlKeyMod = (platform.isMacintosh ? 256 /* KeyMod.WinCtrl */ : 2048 /* KeyMod.CtrlCmd */);\nexport class FindWidgetViewZone {\n    constructor(afterLineNumber) {\n        this.afterLineNumber = afterLineNumber;\n        this.heightInPx = FIND_INPUT_AREA_HEIGHT;\n        this.suppressMouseDown = false;\n        this.domNode = document.createElement('div');\n        this.domNode.className = 'dock-find-viewzone';\n    }\n}\nfunction stopPropagationForMultiLineUpwards(event, value, textarea) {\n    const isMultiline = !!value.match(/\\n/);\n    if (textarea && isMultiline && textarea.selectionStart > 0) {\n        event.stopPropagation();\n        return;\n    }\n}\nfunction stopPropagationForMultiLineDownwards(event, value, textarea) {\n    const isMultiline = !!value.match(/\\n/);\n    if (textarea && isMultiline && textarea.selectionEnd < textarea.value.length) {\n        event.stopPropagation();\n        return;\n    }\n}\nexport class FindWidget extends Widget {\n    constructor(codeEditor, controller, state, contextViewProvider, keybindingService, contextKeyService, themeService, storageService, notificationService, _hoverService) {\n        super();\n        this._hoverService = _hoverService;\n        this._cachedHeight = null;\n        this._revealTimeouts = [];\n        this._codeEditor = codeEditor;\n        this._controller = controller;\n        this._state = state;\n        this._contextViewProvider = contextViewProvider;\n        this._keybindingService = keybindingService;\n        this._contextKeyService = contextKeyService;\n        this._storageService = storageService;\n        this._notificationService = notificationService;\n        this._ctrlEnterReplaceAllWarningPrompted = !!storageService.getBoolean(ctrlEnterReplaceAllWarningPromptedKey, 0 /* StorageScope.PROFILE */);\n        this._isVisible = false;\n        this._isReplaceVisible = false;\n        this._ignoreChangeEvent = false;\n        this._updateHistoryDelayer = new Delayer(500);\n        this._register(toDisposable(() => this._updateHistoryDelayer.cancel()));\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this._buildDomNode();\n        this._updateButtons();\n        this._tryUpdateWidgetWidth();\n        this._findInput.inputBox.layout();\n        this._register(this._codeEditor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(91 /* EditorOption.readOnly */)) {\n                if (this._codeEditor.getOption(91 /* EditorOption.readOnly */)) {\n                    // Hide replace part if editor becomes read only\n                    this._state.change({ isReplaceRevealed: false }, false);\n                }\n                this._updateButtons();\n            }\n            if (e.hasChanged(145 /* EditorOption.layoutInfo */)) {\n                this._tryUpdateWidgetWidth();\n            }\n            if (e.hasChanged(2 /* EditorOption.accessibilitySupport */)) {\n                this.updateAccessibilitySupport();\n            }\n            if (e.hasChanged(41 /* EditorOption.find */)) {\n                const supportLoop = this._codeEditor.getOption(41 /* EditorOption.find */).loop;\n                this._state.change({ loop: supportLoop }, false);\n                const addExtraSpaceOnTop = this._codeEditor.getOption(41 /* EditorOption.find */).addExtraSpaceOnTop;\n                if (addExtraSpaceOnTop && !this._viewZone) {\n                    this._viewZone = new FindWidgetViewZone(0);\n                    this._showViewZone();\n                }\n                if (!addExtraSpaceOnTop && this._viewZone) {\n                    this._removeViewZone();\n                }\n            }\n        }));\n        this.updateAccessibilitySupport();\n        this._register(this._codeEditor.onDidChangeCursorSelection(() => {\n            if (this._isVisible) {\n                this._updateToggleSelectionFindButton();\n            }\n        }));\n        this._register(this._codeEditor.onDidFocusEditorWidget(async () => {\n            if (this._isVisible) {\n                const globalBufferTerm = await this._controller.getGlobalBufferTerm();\n                if (globalBufferTerm && globalBufferTerm !== this._state.searchString) {\n                    this._state.change({ searchString: globalBufferTerm }, false);\n                    this._findInput.select();\n                }\n            }\n        }));\n        this._findInputFocused = CONTEXT_FIND_INPUT_FOCUSED.bindTo(contextKeyService);\n        this._findFocusTracker = this._register(dom.trackFocus(this._findInput.inputBox.inputElement));\n        this._register(this._findFocusTracker.onDidFocus(() => {\n            this._findInputFocused.set(true);\n            this._updateSearchScope();\n        }));\n        this._register(this._findFocusTracker.onDidBlur(() => {\n            this._findInputFocused.set(false);\n        }));\n        this._replaceInputFocused = CONTEXT_REPLACE_INPUT_FOCUSED.bindTo(contextKeyService);\n        this._replaceFocusTracker = this._register(dom.trackFocus(this._replaceInput.inputBox.inputElement));\n        this._register(this._replaceFocusTracker.onDidFocus(() => {\n            this._replaceInputFocused.set(true);\n            this._updateSearchScope();\n        }));\n        this._register(this._replaceFocusTracker.onDidBlur(() => {\n            this._replaceInputFocused.set(false);\n        }));\n        this._codeEditor.addOverlayWidget(this);\n        if (this._codeEditor.getOption(41 /* EditorOption.find */).addExtraSpaceOnTop) {\n            this._viewZone = new FindWidgetViewZone(0); // Put it before the first line then users can scroll beyond the first line.\n        }\n        this._register(this._codeEditor.onDidChangeModel(() => {\n            if (!this._isVisible) {\n                return;\n            }\n            this._viewZoneId = undefined;\n        }));\n        this._register(this._codeEditor.onDidScrollChange((e) => {\n            if (e.scrollTopChanged) {\n                this._layoutViewZone();\n                return;\n            }\n            // for other scroll changes, layout the viewzone in next tick to avoid ruining current rendering.\n            setTimeout(() => {\n                this._layoutViewZone();\n            }, 0);\n        }));\n    }\n    // ----- IOverlayWidget API\n    getId() {\n        return FindWidget.ID;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        if (this._isVisible) {\n            return {\n                preference: 0 /* OverlayWidgetPositionPreference.TOP_RIGHT_CORNER */\n            };\n        }\n        return null;\n    }\n    // ----- React to state changes\n    _onStateChanged(e) {\n        if (e.searchString) {\n            try {\n                this._ignoreChangeEvent = true;\n                this._findInput.setValue(this._state.searchString);\n            }\n            finally {\n                this._ignoreChangeEvent = false;\n            }\n            this._updateButtons();\n        }\n        if (e.replaceString) {\n            this._replaceInput.inputBox.value = this._state.replaceString;\n        }\n        if (e.isRevealed) {\n            if (this._state.isRevealed) {\n                this._reveal();\n            }\n            else {\n                this._hide(true);\n            }\n        }\n        if (e.isReplaceRevealed) {\n            if (this._state.isReplaceRevealed) {\n                if (!this._codeEditor.getOption(91 /* EditorOption.readOnly */) && !this._isReplaceVisible) {\n                    this._isReplaceVisible = true;\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                    this._updateButtons();\n                    this._replaceInput.inputBox.layout();\n                }\n            }\n            else {\n                if (this._isReplaceVisible) {\n                    this._isReplaceVisible = false;\n                    this._updateButtons();\n                }\n            }\n        }\n        if ((e.isRevealed || e.isReplaceRevealed) && (this._state.isRevealed || this._state.isReplaceRevealed)) {\n            if (this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }\n        if (e.isRegex) {\n            this._findInput.setRegex(this._state.isRegex);\n        }\n        if (e.wholeWord) {\n            this._findInput.setWholeWords(this._state.wholeWord);\n        }\n        if (e.matchCase) {\n            this._findInput.setCaseSensitive(this._state.matchCase);\n        }\n        if (e.preserveCase) {\n            this._replaceInput.setPreserveCase(this._state.preserveCase);\n        }\n        if (e.searchScope) {\n            if (this._state.searchScope) {\n                this._toggleSelectionFind.checked = true;\n            }\n            else {\n                this._toggleSelectionFind.checked = false;\n            }\n            this._updateToggleSelectionFindButton();\n        }\n        if (e.searchString || e.matchesCount || e.matchesPosition) {\n            const showRedOutline = (this._state.searchString.length > 0 && this._state.matchesCount === 0);\n            this._domNode.classList.toggle('no-results', showRedOutline);\n            this._updateMatchesCount();\n            this._updateButtons();\n        }\n        if (e.searchString || e.currentMatch) {\n            this._layoutViewZone();\n        }\n        if (e.updateHistory) {\n            this._delayedUpdateHistory();\n        }\n        if (e.loop) {\n            this._updateButtons();\n        }\n    }\n    _delayedUpdateHistory() {\n        this._updateHistoryDelayer.trigger(this._updateHistory.bind(this)).then(undefined, onUnexpectedError);\n    }\n    _updateHistory() {\n        if (this._state.searchString) {\n            this._findInput.inputBox.addToHistory();\n        }\n        if (this._state.replaceString) {\n            this._replaceInput.inputBox.addToHistory();\n        }\n    }\n    _updateMatchesCount() {\n        this._matchesCount.style.minWidth = MAX_MATCHES_COUNT_WIDTH + 'px';\n        if (this._state.matchesCount >= MATCHES_LIMIT) {\n            this._matchesCount.title = NLS_MATCHES_COUNT_LIMIT_TITLE;\n        }\n        else {\n            this._matchesCount.title = '';\n        }\n        // remove previous content\n        if (this._matchesCount.firstChild) {\n            this._matchesCount.removeChild(this._matchesCount.firstChild);\n        }\n        let label;\n        if (this._state.matchesCount > 0) {\n            let matchesCount = String(this._state.matchesCount);\n            if (this._state.matchesCount >= MATCHES_LIMIT) {\n                matchesCount += '+';\n            }\n            let matchesPosition = String(this._state.matchesPosition);\n            if (matchesPosition === '0') {\n                matchesPosition = '?';\n            }\n            label = strings.format(NLS_MATCHES_LOCATION, matchesPosition, matchesCount);\n        }\n        else {\n            label = NLS_NO_RESULTS;\n        }\n        this._matchesCount.appendChild(document.createTextNode(label));\n        alertFn(this._getAriaLabel(label, this._state.currentMatch, this._state.searchString));\n        MAX_MATCHES_COUNT_WIDTH = Math.max(MAX_MATCHES_COUNT_WIDTH, this._matchesCount.clientWidth);\n    }\n    // ----- actions\n    _getAriaLabel(label, currentMatch, searchString) {\n        if (label === NLS_NO_RESULTS) {\n            return searchString === ''\n                ? nls.localize('ariaSearchNoResultEmpty', \"{0} found\", label)\n                : nls.localize('ariaSearchNoResult', \"{0} found for '{1}'\", label, searchString);\n        }\n        if (currentMatch) {\n            const ariaLabel = nls.localize('ariaSearchNoResultWithLineNum', \"{0} found for '{1}', at {2}\", label, searchString, currentMatch.startLineNumber + ':' + currentMatch.startColumn);\n            const model = this._codeEditor.getModel();\n            if (model && (currentMatch.startLineNumber <= model.getLineCount()) && (currentMatch.startLineNumber >= 1)) {\n                const lineContent = model.getLineContent(currentMatch.startLineNumber);\n                return `${lineContent}, ${ariaLabel}`;\n            }\n            return ariaLabel;\n        }\n        return nls.localize('ariaSearchNoResultWithLineNumNoCurrentMatch', \"{0} found for '{1}'\", label, searchString);\n    }\n    /**\n     * If 'selection find' is ON we should not disable the button (its function is to cancel 'selection find').\n     * If 'selection find' is OFF we enable the button only if there is a selection.\n     */\n    _updateToggleSelectionFindButton() {\n        const selection = this._codeEditor.getSelection();\n        const isSelection = selection ? (selection.startLineNumber !== selection.endLineNumber || selection.startColumn !== selection.endColumn) : false;\n        const isChecked = this._toggleSelectionFind.checked;\n        if (this._isVisible && (isChecked || isSelection)) {\n            this._toggleSelectionFind.enable();\n        }\n        else {\n            this._toggleSelectionFind.disable();\n        }\n    }\n    _updateButtons() {\n        this._findInput.setEnabled(this._isVisible);\n        this._replaceInput.setEnabled(this._isVisible && this._isReplaceVisible);\n        this._updateToggleSelectionFindButton();\n        this._closeBtn.setEnabled(this._isVisible);\n        const findInputIsNonEmpty = (this._state.searchString.length > 0);\n        const matchesCount = this._state.matchesCount ? true : false;\n        this._prevBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateBack());\n        this._nextBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateForward());\n        this._replaceBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n        this._replaceAllBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n        this._domNode.classList.toggle('replaceToggled', this._isReplaceVisible);\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\n        const canReplace = !this._codeEditor.getOption(91 /* EditorOption.readOnly */);\n        this._toggleReplaceBtn.setEnabled(this._isVisible && canReplace);\n    }\n    _reveal() {\n        this._revealTimeouts.forEach(e => {\n            clearTimeout(e);\n        });\n        this._revealTimeouts = [];\n        if (!this._isVisible) {\n            this._isVisible = true;\n            const selection = this._codeEditor.getSelection();\n            switch (this._codeEditor.getOption(41 /* EditorOption.find */).autoFindInSelection) {\n                case 'always':\n                    this._toggleSelectionFind.checked = true;\n                    break;\n                case 'never':\n                    this._toggleSelectionFind.checked = false;\n                    break;\n                case 'multiline': {\n                    const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n                    this._toggleSelectionFind.checked = isSelectionMultipleLine;\n                    break;\n                }\n                default:\n                    break;\n            }\n            this._tryUpdateWidgetWidth();\n            this._updateButtons();\n            this._revealTimeouts.push(setTimeout(() => {\n                this._domNode.classList.add('visible');\n                this._domNode.setAttribute('aria-hidden', 'false');\n            }, 0));\n            // validate query again as it's being dismissed when we hide the find widget.\n            this._revealTimeouts.push(setTimeout(() => {\n                this._findInput.validate();\n            }, 200));\n            this._codeEditor.layoutOverlayWidget(this);\n            let adjustEditorScrollTop = true;\n            if (this._codeEditor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection && selection) {\n                const domNode = this._codeEditor.getDomNode();\n                if (domNode) {\n                    const editorCoords = dom.getDomNodePagePosition(domNode);\n                    const startCoords = this._codeEditor.getScrolledVisiblePosition(selection.getStartPosition());\n                    const startLeft = editorCoords.left + (startCoords ? startCoords.left : 0);\n                    const startTop = startCoords ? startCoords.top : 0;\n                    if (this._viewZone && startTop < this._viewZone.heightInPx) {\n                        if (selection.endLineNumber > selection.startLineNumber) {\n                            adjustEditorScrollTop = false;\n                        }\n                        const leftOfFindWidget = dom.getTopLeftOffset(this._domNode).left;\n                        if (startLeft > leftOfFindWidget) {\n                            adjustEditorScrollTop = false;\n                        }\n                        const endCoords = this._codeEditor.getScrolledVisiblePosition(selection.getEndPosition());\n                        const endLeft = editorCoords.left + (endCoords ? endCoords.left : 0);\n                        if (endLeft > leftOfFindWidget) {\n                            adjustEditorScrollTop = false;\n                        }\n                    }\n                }\n            }\n            this._showViewZone(adjustEditorScrollTop);\n        }\n    }\n    _hide(focusTheEditor) {\n        this._revealTimeouts.forEach(e => {\n            clearTimeout(e);\n        });\n        this._revealTimeouts = [];\n        if (this._isVisible) {\n            this._isVisible = false;\n            this._updateButtons();\n            this._domNode.classList.remove('visible');\n            this._domNode.setAttribute('aria-hidden', 'true');\n            this._findInput.clearMessage();\n            if (focusTheEditor) {\n                this._codeEditor.focus();\n            }\n            this._codeEditor.layoutOverlayWidget(this);\n            this._removeViewZone();\n        }\n    }\n    _layoutViewZone(targetScrollTop) {\n        const addExtraSpaceOnTop = this._codeEditor.getOption(41 /* EditorOption.find */).addExtraSpaceOnTop;\n        if (!addExtraSpaceOnTop) {\n            this._removeViewZone();\n            return;\n        }\n        if (!this._isVisible) {\n            return;\n        }\n        const viewZone = this._viewZone;\n        if (this._viewZoneId !== undefined || !viewZone) {\n            return;\n        }\n        this._codeEditor.changeViewZones((accessor) => {\n            viewZone.heightInPx = this._getHeight();\n            this._viewZoneId = accessor.addZone(viewZone);\n            // scroll top adjust to make sure the editor doesn't scroll when adding viewzone at the beginning.\n            this._codeEditor.setScrollTop(targetScrollTop || this._codeEditor.getScrollTop() + viewZone.heightInPx);\n        });\n    }\n    _showViewZone(adjustScroll = true) {\n        if (!this._isVisible) {\n            return;\n        }\n        const addExtraSpaceOnTop = this._codeEditor.getOption(41 /* EditorOption.find */).addExtraSpaceOnTop;\n        if (!addExtraSpaceOnTop) {\n            return;\n        }\n        if (this._viewZone === undefined) {\n            this._viewZone = new FindWidgetViewZone(0);\n        }\n        const viewZone = this._viewZone;\n        this._codeEditor.changeViewZones((accessor) => {\n            if (this._viewZoneId !== undefined) {\n                // the view zone already exists, we need to update the height\n                const newHeight = this._getHeight();\n                if (newHeight === viewZone.heightInPx) {\n                    return;\n                }\n                const scrollAdjustment = newHeight - viewZone.heightInPx;\n                viewZone.heightInPx = newHeight;\n                accessor.layoutZone(this._viewZoneId);\n                if (adjustScroll) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n                }\n                return;\n            }\n            else {\n                let scrollAdjustment = this._getHeight();\n                // if the editor has top padding, factor that into the zone height\n                scrollAdjustment -= this._codeEditor.getOption(84 /* EditorOption.padding */).top;\n                if (scrollAdjustment <= 0) {\n                    return;\n                }\n                viewZone.heightInPx = scrollAdjustment;\n                this._viewZoneId = accessor.addZone(viewZone);\n                if (adjustScroll) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n                }\n            }\n        });\n    }\n    _removeViewZone() {\n        this._codeEditor.changeViewZones((accessor) => {\n            if (this._viewZoneId !== undefined) {\n                accessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n                if (this._viewZone) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() - this._viewZone.heightInPx);\n                    this._viewZone = undefined;\n                }\n            }\n        });\n    }\n    _tryUpdateWidgetWidth() {\n        if (!this._isVisible) {\n            return;\n        }\n        if (!this._domNode.isConnected) {\n            // the widget is not in the DOM\n            return;\n        }\n        const layoutInfo = this._codeEditor.getLayoutInfo();\n        const editorContentWidth = layoutInfo.contentWidth;\n        if (editorContentWidth <= 0) {\n            // for example, diff view original editor\n            this._domNode.classList.add('hiddenEditor');\n            return;\n        }\n        else if (this._domNode.classList.contains('hiddenEditor')) {\n            this._domNode.classList.remove('hiddenEditor');\n        }\n        const editorWidth = layoutInfo.width;\n        const minimapWidth = layoutInfo.minimap.minimapWidth;\n        let collapsedFindWidget = false;\n        let reducedFindWidget = false;\n        let narrowFindWidget = false;\n        if (this._resized) {\n            const widgetWidth = dom.getTotalWidth(this._domNode);\n            if (widgetWidth > FIND_WIDGET_INITIAL_WIDTH) {\n                // as the widget is resized by users, we may need to change the max width of the widget as the editor width changes.\n                this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                return;\n            }\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth >= editorWidth) {\n            reducedFindWidget = true;\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth) {\n            narrowFindWidget = true;\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth + 50) {\n            collapsedFindWidget = true;\n        }\n        this._domNode.classList.toggle('collapsed-find-widget', collapsedFindWidget);\n        this._domNode.classList.toggle('narrow-find-widget', narrowFindWidget);\n        this._domNode.classList.toggle('reduced-find-widget', reducedFindWidget);\n        if (!narrowFindWidget && !collapsedFindWidget) {\n            // the minimal left offset of findwidget is 15px.\n            this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\n        }\n        this._findInput.layout({ collapsedFindWidget, narrowFindWidget, reducedFindWidget });\n        if (this._resized) {\n            const findInputWidth = this._findInput.inputBox.element.clientWidth;\n            if (findInputWidth > 0) {\n                this._replaceInput.width = findInputWidth;\n            }\n        }\n        else if (this._isReplaceVisible) {\n            this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n        }\n    }\n    _getHeight() {\n        let totalheight = 0;\n        // find input margin top\n        totalheight += 4;\n        // find input height\n        totalheight += this._findInput.inputBox.height + 2 /** input box border */;\n        if (this._isReplaceVisible) {\n            // replace input margin\n            totalheight += 4;\n            totalheight += this._replaceInput.inputBox.height + 2 /** input box border */;\n        }\n        // margin bottom\n        totalheight += 4;\n        return totalheight;\n    }\n    _tryUpdateHeight() {\n        const totalHeight = this._getHeight();\n        if (this._cachedHeight !== null && this._cachedHeight === totalHeight) {\n            return false;\n        }\n        this._cachedHeight = totalHeight;\n        this._domNode.style.height = `${totalHeight}px`;\n        return true;\n    }\n    // ----- Public\n    focusFindInput() {\n        this._findInput.select();\n        // Edge browser requires focus() in addition to select()\n        this._findInput.focus();\n    }\n    focusReplaceInput() {\n        this._replaceInput.select();\n        // Edge browser requires focus() in addition to select()\n        this._replaceInput.focus();\n    }\n    highlightFindOptions() {\n        this._findInput.highlightFindOptions();\n    }\n    _updateSearchScope() {\n        if (!this._codeEditor.hasModel()) {\n            return;\n        }\n        if (this._toggleSelectionFind.checked) {\n            const selections = this._codeEditor.getSelections();\n            selections.map(selection => {\n                if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                    selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                }\n                const currentMatch = this._state.currentMatch;\n                if (selection.startLineNumber !== selection.endLineNumber) {\n                    if (!Range.equalsRange(selection, currentMatch)) {\n                        return selection;\n                    }\n                }\n                return null;\n            }).filter(element => !!element);\n            if (selections.length) {\n                this._state.change({ searchScope: selections }, true);\n            }\n        }\n    }\n    _onFindInputMouseDown(e) {\n        // on linux, middle key does pasting.\n        if (e.middleButton) {\n            e.stopPropagation();\n        }\n    }\n    _onFindInputKeyDown(e) {\n        if (e.equals(ctrlKeyMod | 3 /* KeyCode.Enter */)) {\n            if (this._keybindingService.dispatchEvent(e, e.target)) {\n                e.preventDefault();\n                return;\n            }\n            else {\n                this._findInput.inputBox.insertAtCursor('\\n');\n                e.preventDefault();\n                return;\n            }\n        }\n        if (e.equals(2 /* KeyCode.Tab */)) {\n            if (this._isReplaceVisible) {\n                this._replaceInput.focus();\n            }\n            else {\n                this._findInput.focusOnCaseSensitive();\n            }\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */)) {\n            this._codeEditor.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(16 /* KeyCode.UpArrow */)) {\n            return stopPropagationForMultiLineUpwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n        }\n        if (e.equals(18 /* KeyCode.DownArrow */)) {\n            return stopPropagationForMultiLineDownwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n        }\n    }\n    _onReplaceInputKeyDown(e) {\n        if (e.equals(ctrlKeyMod | 3 /* KeyCode.Enter */)) {\n            if (this._keybindingService.dispatchEvent(e, e.target)) {\n                e.preventDefault();\n                return;\n            }\n            else {\n                if (platform.isWindows && platform.isNative && !this._ctrlEnterReplaceAllWarningPrompted) {\n                    // this is the first time when users press Ctrl + Enter to replace all\n                    this._notificationService.info(nls.localize('ctrlEnter.keybindingChanged', 'Ctrl+Enter now inserts line break instead of replacing all. You can modify the keybinding for editor.action.replaceAll to override this behavior.'));\n                    this._ctrlEnterReplaceAllWarningPrompted = true;\n                    this._storageService.store(ctrlEnterReplaceAllWarningPromptedKey, true, 0 /* StorageScope.PROFILE */, 0 /* StorageTarget.USER */);\n                }\n                this._replaceInput.inputBox.insertAtCursor('\\n');\n                e.preventDefault();\n                return;\n            }\n        }\n        if (e.equals(2 /* KeyCode.Tab */)) {\n            this._findInput.focusOnCaseSensitive();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n            this._findInput.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */)) {\n            this._codeEditor.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(16 /* KeyCode.UpArrow */)) {\n            return stopPropagationForMultiLineUpwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n        }\n        if (e.equals(18 /* KeyCode.DownArrow */)) {\n            return stopPropagationForMultiLineDownwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n        }\n    }\n    // ----- sash\n    getVerticalSashLeft(_sash) {\n        return 0;\n    }\n    // ----- initialization\n    _keybindingLabelFor(actionId) {\n        const kb = this._keybindingService.lookupKeybinding(actionId);\n        if (!kb) {\n            return '';\n        }\n        return ` (${kb.getLabel()})`;\n    }\n    _buildDomNode() {\n        const flexibleHeight = true;\n        const flexibleWidth = true;\n        // Find input\n        this._findInput = this._register(new ContextScopedFindInput(null, this._contextViewProvider, {\n            width: FIND_INPUT_AREA_WIDTH,\n            label: NLS_FIND_INPUT_LABEL,\n            placeholder: NLS_FIND_INPUT_PLACEHOLDER,\n            appendCaseSensitiveLabel: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),\n            appendWholeWordsLabel: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),\n            appendRegexLabel: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),\n            validation: (value) => {\n                if (value.length === 0 || !this._findInput.getRegex()) {\n                    return null;\n                }\n                try {\n                    // use `g` and `u` which are also used by the TextModel search\n                    new RegExp(value, 'gu');\n                    return null;\n                }\n                catch (e) {\n                    return { content: e.message };\n                }\n            },\n            flexibleHeight,\n            flexibleWidth,\n            flexibleMaxHeight: 118,\n            showCommonFindToggles: true,\n            showHistoryHint: () => showHistoryKeybindingHint(this._keybindingService),\n            inputBoxStyles: defaultInputBoxStyles,\n            toggleStyles: defaultToggleStyles\n        }, this._contextKeyService));\n        this._findInput.setRegex(!!this._state.isRegex);\n        this._findInput.setCaseSensitive(!!this._state.matchCase);\n        this._findInput.setWholeWords(!!this._state.wholeWord);\n        this._register(this._findInput.onKeyDown((e) => this._onFindInputKeyDown(e)));\n        this._register(this._findInput.inputBox.onDidChange(() => {\n            if (this._ignoreChangeEvent) {\n                return;\n            }\n            this._state.change({ searchString: this._findInput.getValue() }, true);\n        }));\n        this._register(this._findInput.onDidOptionChange(() => {\n            this._state.change({\n                isRegex: this._findInput.getRegex(),\n                wholeWord: this._findInput.getWholeWords(),\n                matchCase: this._findInput.getCaseSensitive()\n            }, true);\n        }));\n        this._register(this._findInput.onCaseSensitiveKeyDown((e) => {\n            if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n                if (this._isReplaceVisible) {\n                    this._replaceInput.focus();\n                    e.preventDefault();\n                }\n            }\n        }));\n        this._register(this._findInput.onRegexKeyDown((e) => {\n            if (e.equals(2 /* KeyCode.Tab */)) {\n                if (this._isReplaceVisible) {\n                    this._replaceInput.focusOnPreserve();\n                    e.preventDefault();\n                }\n            }\n        }));\n        this._register(this._findInput.inputBox.onDidHeightChange((e) => {\n            if (this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }));\n        if (platform.isLinux) {\n            this._register(this._findInput.onMouseDown((e) => this._onFindInputMouseDown(e)));\n        }\n        this._matchesCount = document.createElement('div');\n        this._matchesCount.className = 'matchesCount';\n        this._updateMatchesCount();\n        // Create a scoped hover delegate for all find related buttons\n        const hoverDelegate = this._register(createInstantHoverDelegate());\n        // Previous button\n        this._prevBtn = this._register(new SimpleButton({\n            label: NLS_PREVIOUS_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.PreviousMatchFindAction),\n            icon: findPreviousMatchIcon,\n            hoverDelegate,\n            onTrigger: () => {\n                assertIsDefined(this._codeEditor.getAction(FIND_IDS.PreviousMatchFindAction)).run().then(undefined, onUnexpectedError);\n            }\n        }, this._hoverService));\n        // Next button\n        this._nextBtn = this._register(new SimpleButton({\n            label: NLS_NEXT_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.NextMatchFindAction),\n            icon: findNextMatchIcon,\n            hoverDelegate,\n            onTrigger: () => {\n                assertIsDefined(this._codeEditor.getAction(FIND_IDS.NextMatchFindAction)).run().then(undefined, onUnexpectedError);\n            }\n        }, this._hoverService));\n        const findPart = document.createElement('div');\n        findPart.className = 'find-part';\n        findPart.appendChild(this._findInput.domNode);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'find-actions';\n        findPart.appendChild(actionsContainer);\n        actionsContainer.appendChild(this._matchesCount);\n        actionsContainer.appendChild(this._prevBtn.domNode);\n        actionsContainer.appendChild(this._nextBtn.domNode);\n        // Toggle selection button\n        this._toggleSelectionFind = this._register(new Toggle({\n            icon: findSelectionIcon,\n            title: NLS_TOGGLE_SELECTION_FIND_TITLE + this._keybindingLabelFor(FIND_IDS.ToggleSearchScopeCommand),\n            isChecked: false,\n            hoverDelegate: hoverDelegate,\n            inputActiveOptionBackground: asCssVariable(inputActiveOptionBackground),\n            inputActiveOptionBorder: asCssVariable(inputActiveOptionBorder),\n            inputActiveOptionForeground: asCssVariable(inputActiveOptionForeground),\n        }));\n        this._register(this._toggleSelectionFind.onChange(() => {\n            if (this._toggleSelectionFind.checked) {\n                if (this._codeEditor.hasModel()) {\n                    let selections = this._codeEditor.getSelections();\n                    selections = selections.map(selection => {\n                        if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                            selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                        }\n                        if (!selection.isEmpty()) {\n                            return selection;\n                        }\n                        return null;\n                    }).filter((element) => !!element);\n                    if (selections.length) {\n                        this._state.change({ searchScope: selections }, true);\n                    }\n                }\n            }\n            else {\n                this._state.change({ searchScope: null }, true);\n            }\n        }));\n        actionsContainer.appendChild(this._toggleSelectionFind.domNode);\n        // Close button\n        this._closeBtn = this._register(new SimpleButton({\n            label: NLS_CLOSE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.CloseFindWidgetCommand),\n            icon: widgetClose,\n            hoverDelegate,\n            onTrigger: () => {\n                this._state.change({ isRevealed: false, searchScope: null }, false);\n            },\n            onKeyDown: (e) => {\n                if (e.equals(2 /* KeyCode.Tab */)) {\n                    if (this._isReplaceVisible) {\n                        if (this._replaceBtn.isEnabled()) {\n                            this._replaceBtn.focus();\n                        }\n                        else {\n                            this._codeEditor.focus();\n                        }\n                        e.preventDefault();\n                    }\n                }\n            }\n        }, this._hoverService));\n        // Replace input\n        this._replaceInput = this._register(new ContextScopedReplaceInput(null, undefined, {\n            label: NLS_REPLACE_INPUT_LABEL,\n            placeholder: NLS_REPLACE_INPUT_PLACEHOLDER,\n            appendPreserveCaseLabel: this._keybindingLabelFor(FIND_IDS.TogglePreserveCaseCommand),\n            history: [],\n            flexibleHeight,\n            flexibleWidth,\n            flexibleMaxHeight: 118,\n            showHistoryHint: () => showHistoryKeybindingHint(this._keybindingService),\n            inputBoxStyles: defaultInputBoxStyles,\n            toggleStyles: defaultToggleStyles\n        }, this._contextKeyService, true));\n        this._replaceInput.setPreserveCase(!!this._state.preserveCase);\n        this._register(this._replaceInput.onKeyDown((e) => this._onReplaceInputKeyDown(e)));\n        this._register(this._replaceInput.inputBox.onDidChange(() => {\n            this._state.change({ replaceString: this._replaceInput.inputBox.value }, false);\n        }));\n        this._register(this._replaceInput.inputBox.onDidHeightChange((e) => {\n            if (this._isReplaceVisible && this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }));\n        this._register(this._replaceInput.onDidOptionChange(() => {\n            this._state.change({\n                preserveCase: this._replaceInput.getPreserveCase()\n            }, true);\n        }));\n        this._register(this._replaceInput.onPreserveCaseKeyDown((e) => {\n            if (e.equals(2 /* KeyCode.Tab */)) {\n                if (this._prevBtn.isEnabled()) {\n                    this._prevBtn.focus();\n                }\n                else if (this._nextBtn.isEnabled()) {\n                    this._nextBtn.focus();\n                }\n                else if (this._toggleSelectionFind.enabled) {\n                    this._toggleSelectionFind.focus();\n                }\n                else if (this._closeBtn.isEnabled()) {\n                    this._closeBtn.focus();\n                }\n                e.preventDefault();\n            }\n        }));\n        // Create scoped hover delegate for replace actions\n        const replaceHoverDelegate = this._register(createInstantHoverDelegate());\n        // Replace one button\n        this._replaceBtn = this._register(new SimpleButton({\n            label: NLS_REPLACE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceOneAction),\n            icon: findReplaceIcon,\n            hoverDelegate: replaceHoverDelegate,\n            onTrigger: () => {\n                this._controller.replace();\n            },\n            onKeyDown: (e) => {\n                if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n                    this._closeBtn.focus();\n                    e.preventDefault();\n                }\n            }\n        }, this._hoverService));\n        // Replace all button\n        this._replaceAllBtn = this._register(new SimpleButton({\n            label: NLS_REPLACE_ALL_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceAllAction),\n            icon: findReplaceAllIcon,\n            hoverDelegate: replaceHoverDelegate,\n            onTrigger: () => {\n                this._controller.replaceAll();\n            }\n        }, this._hoverService));\n        const replacePart = document.createElement('div');\n        replacePart.className = 'replace-part';\n        replacePart.appendChild(this._replaceInput.domNode);\n        const replaceActionsContainer = document.createElement('div');\n        replaceActionsContainer.className = 'replace-actions';\n        replacePart.appendChild(replaceActionsContainer);\n        replaceActionsContainer.appendChild(this._replaceBtn.domNode);\n        replaceActionsContainer.appendChild(this._replaceAllBtn.domNode);\n        // Toggle replace button\n        this._toggleReplaceBtn = this._register(new SimpleButton({\n            label: NLS_TOGGLE_REPLACE_MODE_BTN_LABEL,\n            className: 'codicon toggle left',\n            onTrigger: () => {\n                this._state.change({ isReplaceRevealed: !this._isReplaceVisible }, false);\n                if (this._isReplaceVisible) {\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                    this._replaceInput.inputBox.layout();\n                }\n                this._showViewZone();\n            }\n        }, this._hoverService));\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\n        // Widget\n        this._domNode = document.createElement('div');\n        this._domNode.className = 'editor-widget find-widget';\n        this._domNode.setAttribute('aria-hidden', 'true');\n        this._domNode.ariaLabel = NLS_FIND_DIALOG_LABEL;\n        this._domNode.role = 'dialog';\n        // We need to set this explicitly, otherwise on IE11, the width inheritence of flex doesn't work.\n        this._domNode.style.width = `${FIND_WIDGET_INITIAL_WIDTH}px`;\n        this._domNode.appendChild(this._toggleReplaceBtn.domNode);\n        this._domNode.appendChild(findPart);\n        this._domNode.appendChild(this._closeBtn.domNode);\n        this._domNode.appendChild(replacePart);\n        this._resizeSash = this._register(new Sash(this._domNode, this, { orientation: 0 /* Orientation.VERTICAL */, size: 2 }));\n        this._resized = false;\n        let originalWidth = FIND_WIDGET_INITIAL_WIDTH;\n        this._register(this._resizeSash.onDidStart(() => {\n            originalWidth = dom.getTotalWidth(this._domNode);\n        }));\n        this._register(this._resizeSash.onDidChange((evt) => {\n            this._resized = true;\n            const width = originalWidth + evt.startX - evt.currentX;\n            if (width < FIND_WIDGET_INITIAL_WIDTH) {\n                // narrow down the find widget should be handled by CSS.\n                return;\n            }\n            const maxWidth = parseFloat(dom.getComputedStyle(this._domNode).maxWidth) || 0;\n            if (width > maxWidth) {\n                return;\n            }\n            this._domNode.style.width = `${width}px`;\n            if (this._isReplaceVisible) {\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n            }\n            this._findInput.inputBox.layout();\n            this._tryUpdateHeight();\n        }));\n        this._register(this._resizeSash.onDidReset(() => {\n            // users double click on the sash\n            const currentWidth = dom.getTotalWidth(this._domNode);\n            if (currentWidth < FIND_WIDGET_INITIAL_WIDTH) {\n                // The editor is narrow and the width of the find widget is controlled fully by CSS.\n                return;\n            }\n            let width = FIND_WIDGET_INITIAL_WIDTH;\n            if (!this._resized || currentWidth === FIND_WIDGET_INITIAL_WIDTH) {\n                // 1. never resized before, double click should maximizes it\n                // 2. users resized it already but its width is the same as default\n                const layoutInfo = this._codeEditor.getLayoutInfo();\n                width = layoutInfo.width - 28 - layoutInfo.minimap.minimapWidth - 15;\n                this._resized = true;\n            }\n            else {\n                /**\n                 * no op, the find widget should be shrinked to its default size.\n                 */\n            }\n            this._domNode.style.width = `${width}px`;\n            if (this._isReplaceVisible) {\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n            }\n            this._findInput.inputBox.layout();\n        }));\n    }\n    updateAccessibilitySupport() {\n        const value = this._codeEditor.getOption(2 /* EditorOption.accessibilitySupport */);\n        this._findInput.setFocusInputOnOptionClick(value !== 2 /* AccessibilitySupport.Enabled */);\n    }\n}\nFindWidget.ID = 'editor.contrib.findWidget';\nexport class SimpleButton extends Widget {\n    constructor(opts, hoverService) {\n        var _a;\n        super();\n        this._opts = opts;\n        let className = 'button';\n        if (this._opts.className) {\n            className = className + ' ' + this._opts.className;\n        }\n        if (this._opts.icon) {\n            className = className + ' ' + ThemeIcon.asClassName(this._opts.icon);\n        }\n        this._domNode = document.createElement('div');\n        this._domNode.tabIndex = 0;\n        this._domNode.className = className;\n        this._domNode.setAttribute('role', 'button');\n        this._domNode.setAttribute('aria-label', this._opts.label);\n        this._register(hoverService.setupUpdatableHover((_a = opts.hoverDelegate) !== null && _a !== void 0 ? _a : getDefaultHoverDelegate('element'), this._domNode, this._opts.label));\n        this.onclick(this._domNode, (e) => {\n            this._opts.onTrigger();\n            e.preventDefault();\n        });\n        this.onkeydown(this._domNode, (e) => {\n            var _a, _b;\n            if (e.equals(10 /* KeyCode.Space */) || e.equals(3 /* KeyCode.Enter */)) {\n                this._opts.onTrigger();\n                e.preventDefault();\n                return;\n            }\n            (_b = (_a = this._opts).onKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n        });\n    }\n    get domNode() {\n        return this._domNode;\n    }\n    isEnabled() {\n        return (this._domNode.tabIndex >= 0);\n    }\n    focus() {\n        this._domNode.focus();\n    }\n    setEnabled(enabled) {\n        this._domNode.classList.toggle('disabled', !enabled);\n        this._domNode.setAttribute('aria-disabled', String(!enabled));\n        this._domNode.tabIndex = enabled ? 0 : -1;\n    }\n    setExpanded(expanded) {\n        this._domNode.setAttribute('aria-expanded', String(!!expanded));\n        if (expanded) {\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findExpandedIcon));\n        }\n        else {\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findExpandedIcon));\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n        }\n    }\n}\n// theming\nregisterThemingParticipant((theme, collector) => {\n    const findMatchHighlightBorder = theme.getColor(editorFindMatchHighlightBorder);\n    if (findMatchHighlightBorder) {\n        collector.addRule(`.monaco-editor .findMatch { border: 1px ${isHighContrast(theme.type) ? 'dotted' : 'solid'} ${findMatchHighlightBorder}; box-sizing: border-box; }`);\n    }\n    const findRangeHighlightBorder = theme.getColor(editorFindRangeHighlightBorder);\n    if (findRangeHighlightBorder) {\n        collector.addRule(`.monaco-editor .findScope { border: 1px ${isHighContrast(theme.type) ? 'dashed' : 'solid'} ${findRangeHighlightBorder}; }`);\n    }\n    const hcBorder = theme.getColor(contrastBorder);\n    if (hcBorder) {\n        collector.addRule(`.monaco-editor .find-widget { border: 1px solid ${hcBorder}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar CommonFindController_1;\nimport { Delayer } from '../../../../base/common/async.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { EditorAction, EditorCommand, MultiEditorAction, registerEditorAction, registerEditorCommand, registerEditorContribution, registerMultiEditorAction } from '../../../browser/editorExtensions.js';\nimport { overviewRulerRangeHighlight } from '../../../common/core/editorColorRegistry.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { OverviewRulerLane } from '../../../common/model.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_FIND_WIDGET_VISIBLE, CONTEXT_REPLACE_INPUT_FOCUSED, FindModelBoundToEditorModel, FIND_IDS, ToggleCaseSensitiveKeybinding, TogglePreserveCaseKeybinding, ToggleRegexKeybinding, ToggleSearchScopeKeybinding, ToggleWholeWordKeybinding } from './findModel.js';\nimport { FindOptionsWidget } from './findOptionsWidget.js';\nimport { FindReplaceState } from './findState.js';\nimport { FindWidget } from './findWidget.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextViewService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { IThemeService, themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\nconst SEARCH_STRING_MAX_LENGTH = 524288;\nexport function getSelectionSearchString(editor, seedSearchStringFromSelection = 'single', seedSearchStringFromNonEmptySelection = false) {\n    if (!editor.hasModel()) {\n        return null;\n    }\n    const selection = editor.getSelection();\n    // if selection spans multiple lines, default search string to empty\n    if ((seedSearchStringFromSelection === 'single' && selection.startLineNumber === selection.endLineNumber)\n        || seedSearchStringFromSelection === 'multiple') {\n        if (selection.isEmpty()) {\n            const wordAtPosition = editor.getConfiguredWordAtPosition(selection.getStartPosition());\n            if (wordAtPosition && (false === seedSearchStringFromNonEmptySelection)) {\n                return wordAtPosition.word;\n            }\n        }\n        else {\n            if (editor.getModel().getValueLengthInRange(selection) < SEARCH_STRING_MAX_LENGTH) {\n                return editor.getModel().getValueInRange(selection);\n            }\n        }\n    }\n    return null;\n}\nlet CommonFindController = CommonFindController_1 = class CommonFindController extends Disposable {\n    get editor() {\n        return this._editor;\n    }\n    static get(editor) {\n        return editor.getContribution(CommonFindController_1.ID);\n    }\n    constructor(editor, contextKeyService, storageService, clipboardService, notificationService, hoverService) {\n        super();\n        this._editor = editor;\n        this._findWidgetVisible = CONTEXT_FIND_WIDGET_VISIBLE.bindTo(contextKeyService);\n        this._contextKeyService = contextKeyService;\n        this._storageService = storageService;\n        this._clipboardService = clipboardService;\n        this._notificationService = notificationService;\n        this._hoverService = hoverService;\n        this._updateHistoryDelayer = new Delayer(500);\n        this._state = this._register(new FindReplaceState());\n        this.loadQueryState();\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this._model = null;\n        this._register(this._editor.onDidChangeModel(() => {\n            const shouldRestartFind = (this._editor.getModel() && this._state.isRevealed);\n            this.disposeModel();\n            this._state.change({\n                searchScope: null,\n                matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* StorageScope.WORKSPACE */, false),\n                wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* StorageScope.WORKSPACE */, false),\n                isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* StorageScope.WORKSPACE */, false),\n                preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* StorageScope.WORKSPACE */, false)\n            }, false);\n            if (shouldRestartFind) {\n                this._start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: 'none',\n                    seedSearchStringFromNonEmptySelection: false,\n                    seedSearchStringFromGlobalClipboard: false,\n                    shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                    shouldAnimate: false,\n                    updateSearchScope: false,\n                    loop: this._editor.getOption(41 /* EditorOption.find */).loop\n                });\n            }\n        }));\n    }\n    dispose() {\n        this.disposeModel();\n        super.dispose();\n    }\n    disposeModel() {\n        if (this._model) {\n            this._model.dispose();\n            this._model = null;\n        }\n    }\n    _onStateChanged(e) {\n        this.saveQueryState(e);\n        if (e.isRevealed) {\n            if (this._state.isRevealed) {\n                this._findWidgetVisible.set(true);\n            }\n            else {\n                this._findWidgetVisible.reset();\n                this.disposeModel();\n            }\n        }\n        if (e.searchString) {\n            this.setGlobalBufferTerm(this._state.searchString);\n        }\n    }\n    saveQueryState(e) {\n        if (e.isRegex) {\n            this._storageService.store('editor.isRegex', this._state.actualIsRegex, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        if (e.wholeWord) {\n            this._storageService.store('editor.wholeWord', this._state.actualWholeWord, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        if (e.matchCase) {\n            this._storageService.store('editor.matchCase', this._state.actualMatchCase, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        if (e.preserveCase) {\n            this._storageService.store('editor.preserveCase', this._state.actualPreserveCase, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n    }\n    loadQueryState() {\n        this._state.change({\n            matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* StorageScope.WORKSPACE */, this._state.matchCase),\n            wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* StorageScope.WORKSPACE */, this._state.wholeWord),\n            isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* StorageScope.WORKSPACE */, this._state.isRegex),\n            preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* StorageScope.WORKSPACE */, this._state.preserveCase)\n        }, false);\n    }\n    isFindInputFocused() {\n        return !!CONTEXT_FIND_INPUT_FOCUSED.getValue(this._contextKeyService);\n    }\n    getState() {\n        return this._state;\n    }\n    closeFindWidget() {\n        this._state.change({\n            isRevealed: false,\n            searchScope: null\n        }, false);\n        this._editor.focus();\n    }\n    toggleCaseSensitive() {\n        this._state.change({ matchCase: !this._state.matchCase }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleWholeWords() {\n        this._state.change({ wholeWord: !this._state.wholeWord }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleRegex() {\n        this._state.change({ isRegex: !this._state.isRegex }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    togglePreserveCase() {\n        this._state.change({ preserveCase: !this._state.preserveCase }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleSearchScope() {\n        if (this._state.searchScope) {\n            this._state.change({ searchScope: null }, true);\n        }\n        else {\n            if (this._editor.hasModel()) {\n                let selections = this._editor.getSelections();\n                selections = selections.map(selection => {\n                    if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                        selection = selection.setEndPosition(selection.endLineNumber - 1, this._editor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                    }\n                    if (!selection.isEmpty()) {\n                        return selection;\n                    }\n                    return null;\n                }).filter((element) => !!element);\n                if (selections.length) {\n                    this._state.change({ searchScope: selections }, true);\n                }\n            }\n        }\n    }\n    setSearchString(searchString) {\n        if (this._state.isRegex) {\n            searchString = strings.escapeRegExpCharacters(searchString);\n        }\n        this._state.change({ searchString: searchString }, false);\n    }\n    highlightFindOptions(ignoreWhenVisible = false) {\n        // overwritten in subclass\n    }\n    async _start(opts, newState) {\n        this.disposeModel();\n        if (!this._editor.hasModel()) {\n            // cannot do anything with an editor that doesn't have a model...\n            return;\n        }\n        const stateChanges = {\n            ...newState,\n            isRevealed: true\n        };\n        if (opts.seedSearchStringFromSelection === 'single') {\n            const selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection, opts.seedSearchStringFromNonEmptySelection);\n            if (selectionSearchString) {\n                if (this._state.isRegex) {\n                    stateChanges.searchString = strings.escapeRegExpCharacters(selectionSearchString);\n                }\n                else {\n                    stateChanges.searchString = selectionSearchString;\n                }\n            }\n        }\n        else if (opts.seedSearchStringFromSelection === 'multiple' && !opts.updateSearchScope) {\n            const selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection);\n            if (selectionSearchString) {\n                stateChanges.searchString = selectionSearchString;\n            }\n        }\n        if (!stateChanges.searchString && opts.seedSearchStringFromGlobalClipboard) {\n            const selectionSearchString = await this.getGlobalBufferTerm();\n            if (!this._editor.hasModel()) {\n                // the editor has lost its model in the meantime\n                return;\n            }\n            if (selectionSearchString) {\n                stateChanges.searchString = selectionSearchString;\n            }\n        }\n        // Overwrite isReplaceRevealed\n        if (opts.forceRevealReplace || stateChanges.isReplaceRevealed) {\n            stateChanges.isReplaceRevealed = true;\n        }\n        else if (!this._findWidgetVisible.get()) {\n            stateChanges.isReplaceRevealed = false;\n        }\n        if (opts.updateSearchScope) {\n            const currentSelections = this._editor.getSelections();\n            if (currentSelections.some(selection => !selection.isEmpty())) {\n                stateChanges.searchScope = currentSelections;\n            }\n        }\n        stateChanges.loop = opts.loop;\n        this._state.change(stateChanges, false);\n        if (!this._model) {\n            this._model = new FindModelBoundToEditorModel(this._editor, this._state);\n        }\n    }\n    start(opts, newState) {\n        return this._start(opts, newState);\n    }\n    moveToNextMatch() {\n        if (this._model) {\n            this._model.moveToNextMatch();\n            return true;\n        }\n        return false;\n    }\n    moveToPrevMatch() {\n        if (this._model) {\n            this._model.moveToPrevMatch();\n            return true;\n        }\n        return false;\n    }\n    goToMatch(index) {\n        if (this._model) {\n            this._model.moveToMatch(index);\n            return true;\n        }\n        return false;\n    }\n    replace() {\n        if (this._model) {\n            this._model.replace();\n            return true;\n        }\n        return false;\n    }\n    replaceAll() {\n        var _a;\n        if (this._model) {\n            if ((_a = this._editor.getModel()) === null || _a === void 0 ? void 0 : _a.isTooLargeForHeapOperation()) {\n                this._notificationService.warn(nls.localize('too.large.for.replaceall', \"The file is too large to perform a replace all operation.\"));\n                return false;\n            }\n            this._model.replaceAll();\n            return true;\n        }\n        return false;\n    }\n    selectAllMatches() {\n        if (this._model) {\n            this._model.selectAllMatches();\n            this._editor.focus();\n            return true;\n        }\n        return false;\n    }\n    async getGlobalBufferTerm() {\n        if (this._editor.getOption(41 /* EditorOption.find */).globalFindClipboard\n            && this._editor.hasModel()\n            && !this._editor.getModel().isTooLargeForSyncing()) {\n            return this._clipboardService.readFindText();\n        }\n        return '';\n    }\n    setGlobalBufferTerm(text) {\n        if (this._editor.getOption(41 /* EditorOption.find */).globalFindClipboard\n            && this._editor.hasModel()\n            && !this._editor.getModel().isTooLargeForSyncing()) {\n            // intentionally not awaited\n            this._clipboardService.writeFindText(text);\n        }\n    }\n};\nCommonFindController.ID = 'editor.contrib.findController';\nCommonFindController = CommonFindController_1 = __decorate([\n    __param(1, IContextKeyService),\n    __param(2, IStorageService),\n    __param(3, IClipboardService),\n    __param(4, INotificationService),\n    __param(5, IHoverService)\n], CommonFindController);\nexport { CommonFindController };\nlet FindController = class FindController extends CommonFindController {\n    constructor(editor, _contextViewService, _contextKeyService, _keybindingService, _themeService, notificationService, _storageService, clipboardService, hoverService) {\n        super(editor, _contextKeyService, _storageService, clipboardService, notificationService, hoverService);\n        this._contextViewService = _contextViewService;\n        this._keybindingService = _keybindingService;\n        this._themeService = _themeService;\n        this._widget = null;\n        this._findOptionsWidget = null;\n    }\n    async _start(opts, newState) {\n        if (!this._widget) {\n            this._createFindWidget();\n        }\n        const selection = this._editor.getSelection();\n        let updateSearchScope = false;\n        switch (this._editor.getOption(41 /* EditorOption.find */).autoFindInSelection) {\n            case 'always':\n                updateSearchScope = true;\n                break;\n            case 'never':\n                updateSearchScope = false;\n                break;\n            case 'multiline': {\n                const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n                updateSearchScope = isSelectionMultipleLine;\n                break;\n            }\n            default:\n                break;\n        }\n        opts.updateSearchScope = opts.updateSearchScope || updateSearchScope;\n        await super._start(opts, newState);\n        if (this._widget) {\n            if (opts.shouldFocus === 2 /* FindStartFocusAction.FocusReplaceInput */) {\n                this._widget.focusReplaceInput();\n            }\n            else if (opts.shouldFocus === 1 /* FindStartFocusAction.FocusFindInput */) {\n                this._widget.focusFindInput();\n            }\n        }\n    }\n    highlightFindOptions(ignoreWhenVisible = false) {\n        if (!this._widget) {\n            this._createFindWidget();\n        }\n        if (this._state.isRevealed && !ignoreWhenVisible) {\n            this._widget.highlightFindOptions();\n        }\n        else {\n            this._findOptionsWidget.highlightFindOptions();\n        }\n    }\n    _createFindWidget() {\n        this._widget = this._register(new FindWidget(this._editor, this, this._state, this._contextViewService, this._keybindingService, this._contextKeyService, this._themeService, this._storageService, this._notificationService, this._hoverService));\n        this._findOptionsWidget = this._register(new FindOptionsWidget(this._editor, this._state, this._keybindingService));\n    }\n};\nFindController = __decorate([\n    __param(1, IContextViewService),\n    __param(2, IContextKeyService),\n    __param(3, IKeybindingService),\n    __param(4, IThemeService),\n    __param(5, INotificationService),\n    __param(6, IStorageService),\n    __param(7, IClipboardService),\n    __param(8, IHoverService)\n], FindController);\nexport { FindController };\nexport const StartFindAction = registerMultiEditorAction(new MultiEditorAction({\n    id: FIND_IDS.StartFindAction,\n    label: nls.localize('startFindAction', \"Find\"),\n    alias: 'Find',\n    precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n    kbOpts: {\n        kbExpr: null,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 36 /* KeyCode.KeyF */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n    },\n    menuOpts: {\n        menuId: MenuId.MenubarEditMenu,\n        group: '3_find',\n        title: nls.localize({ key: 'miFind', comment: ['&& denotes a mnemonic'] }, \"&&Find\"),\n        order: 1\n    }\n}));\nStartFindAction.addImplementation(0, (accessor, editor, args) => {\n    const controller = CommonFindController.get(editor);\n    if (!controller) {\n        return false;\n    }\n    return controller.start({\n        forceRevealReplace: false,\n        seedSearchStringFromSelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n        seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n        seedSearchStringFromGlobalClipboard: editor.getOption(41 /* EditorOption.find */).globalFindClipboard,\n        shouldFocus: 1 /* FindStartFocusAction.FocusFindInput */,\n        shouldAnimate: true,\n        updateSearchScope: false,\n        loop: editor.getOption(41 /* EditorOption.find */).loop\n    });\n});\nconst findArgDescription = {\n    description: 'Open a new In-Editor Find Widget.',\n    args: [{\n            name: 'Open a new In-Editor Find Widget args',\n            schema: {\n                properties: {\n                    searchString: { type: 'string' },\n                    replaceString: { type: 'string' },\n                    isRegex: { type: 'boolean' },\n                    matchWholeWord: { type: 'boolean' },\n                    isCaseSensitive: { type: 'boolean' },\n                    preserveCase: { type: 'boolean' },\n                    findInSelection: { type: 'boolean' },\n                }\n            }\n        }]\n};\nexport class StartFindWithArgsAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.StartFindWithArgs,\n            label: nls.localize('startFindWithArgsAction', \"Find With Arguments\"),\n            alias: 'Find With Arguments',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: null,\n                primary: 0,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            metadata: findArgDescription\n        });\n    }\n    async run(accessor, editor, args) {\n        const controller = CommonFindController.get(editor);\n        if (controller) {\n            const newState = args ? {\n                searchString: args.searchString,\n                replaceString: args.replaceString,\n                isReplaceRevealed: args.replaceString !== undefined,\n                isRegex: args.isRegex,\n                // isRegexOverride: args.regexOverride,\n                wholeWord: args.matchWholeWord,\n                // wholeWordOverride: args.wholeWordOverride,\n                matchCase: args.isCaseSensitive,\n                // matchCaseOverride: args.matchCaseOverride,\n                preserveCase: args.preserveCase,\n                // preserveCaseOverride: args.preserveCaseOverride,\n            } : {};\n            await controller.start({\n                forceRevealReplace: false,\n                seedSearchStringFromSelection: (controller.getState().searchString.length === 0) && editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n                seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n                seedSearchStringFromGlobalClipboard: true,\n                shouldFocus: 1 /* FindStartFocusAction.FocusFindInput */,\n                shouldAnimate: true,\n                updateSearchScope: (args === null || args === void 0 ? void 0 : args.findInSelection) || false,\n                loop: editor.getOption(41 /* EditorOption.find */).loop\n            }, newState);\n            controller.setGlobalBufferTerm(controller.getState().searchString);\n        }\n    }\n}\nexport class StartFindWithSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.StartFindWithSelection,\n            label: nls.localize('startFindWithSelectionAction', \"Find With Selection\"),\n            alias: 'Find With Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: null,\n                primary: 0,\n                mac: {\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 35 /* KeyCode.KeyE */,\n                },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    async run(accessor, editor) {\n        const controller = CommonFindController.get(editor);\n        if (controller) {\n            await controller.start({\n                forceRevealReplace: false,\n                seedSearchStringFromSelection: 'multiple',\n                seedSearchStringFromNonEmptySelection: false,\n                seedSearchStringFromGlobalClipboard: false,\n                shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                shouldAnimate: true,\n                updateSearchScope: false,\n                loop: editor.getOption(41 /* EditorOption.find */).loop\n            });\n            controller.setGlobalBufferTerm(controller.getState().searchString);\n        }\n    }\n}\nexport class MatchFindAction extends EditorAction {\n    async run(accessor, editor) {\n        const controller = CommonFindController.get(editor);\n        if (controller && !this._run(controller)) {\n            await controller.start({\n                forceRevealReplace: false,\n                seedSearchStringFromSelection: (controller.getState().searchString.length === 0) && editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n                seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n                seedSearchStringFromGlobalClipboard: true,\n                shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                shouldAnimate: true,\n                updateSearchScope: false,\n                loop: editor.getOption(41 /* EditorOption.find */).loop\n            });\n            this._run(controller);\n        }\n    }\n}\nexport class NextMatchFindAction extends MatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.NextMatchFindAction,\n            label: nls.localize('findNextMatchAction', \"Find Next\"),\n            alias: 'Find Next',\n            precondition: undefined,\n            kbOpts: [{\n                    kbExpr: EditorContextKeys.focus,\n                    primary: 61 /* KeyCode.F3 */,\n                    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 37 /* KeyCode.KeyG */, secondary: [61 /* KeyCode.F3 */] },\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }, {\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n                    primary: 3 /* KeyCode.Enter */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }]\n        });\n    }\n    _run(controller) {\n        const result = controller.moveToNextMatch();\n        if (result) {\n            controller.editor.pushUndoStop();\n            return true;\n        }\n        return false;\n    }\n}\nexport class PreviousMatchFindAction extends MatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.PreviousMatchFindAction,\n            label: nls.localize('findPreviousMatchAction', \"Find Previous\"),\n            alias: 'Find Previous',\n            precondition: undefined,\n            kbOpts: [{\n                    kbExpr: EditorContextKeys.focus,\n                    primary: 1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */,\n                    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 37 /* KeyCode.KeyG */, secondary: [1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */] },\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }, {\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n                    primary: 1024 /* KeyMod.Shift */ | 3 /* KeyCode.Enter */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }\n            ]\n        });\n    }\n    _run(controller) {\n        return controller.moveToPrevMatch();\n    }\n}\nexport class MoveToMatchFindAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.GoToMatchFindAction,\n            label: nls.localize('findMatchAction.goToMatch', \"Go to Match...\"),\n            alias: 'Go to Match...',\n            precondition: CONTEXT_FIND_WIDGET_VISIBLE\n        });\n        this._highlightDecorations = [];\n    }\n    run(accessor, editor, args) {\n        const controller = CommonFindController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const matchesCount = controller.getState().matchesCount;\n        if (matchesCount < 1) {\n            const notificationService = accessor.get(INotificationService);\n            notificationService.notify({\n                severity: Severity.Warning,\n                message: nls.localize('findMatchAction.noResults', \"No matches. Try searching for something else.\")\n            });\n            return;\n        }\n        const quickInputService = accessor.get(IQuickInputService);\n        const inputBox = quickInputService.createInputBox();\n        inputBox.placeholder = nls.localize('findMatchAction.inputPlaceHolder', \"Type a number to go to a specific match (between 1 and {0})\", matchesCount);\n        const toFindMatchIndex = (value) => {\n            const index = parseInt(value);\n            if (isNaN(index)) {\n                return undefined;\n            }\n            const matchCount = controller.getState().matchesCount;\n            if (index > 0 && index <= matchCount) {\n                return index - 1; // zero based\n            }\n            else if (index < 0 && index >= -matchCount) {\n                return matchCount + index;\n            }\n            return undefined;\n        };\n        const updatePickerAndEditor = (value) => {\n            const index = toFindMatchIndex(value);\n            if (typeof index === 'number') {\n                // valid\n                inputBox.validationMessage = undefined;\n                controller.goToMatch(index);\n                const currentMatch = controller.getState().currentMatch;\n                if (currentMatch) {\n                    this.addDecorations(editor, currentMatch);\n                }\n            }\n            else {\n                inputBox.validationMessage = nls.localize('findMatchAction.inputValidationMessage', \"Please type a number between 1 and {0}\", controller.getState().matchesCount);\n                this.clearDecorations(editor);\n            }\n        };\n        inputBox.onDidChangeValue(value => {\n            updatePickerAndEditor(value);\n        });\n        inputBox.onDidAccept(() => {\n            const index = toFindMatchIndex(inputBox.value);\n            if (typeof index === 'number') {\n                controller.goToMatch(index);\n                inputBox.hide();\n            }\n            else {\n                inputBox.validationMessage = nls.localize('findMatchAction.inputValidationMessage', \"Please type a number between 1 and {0}\", controller.getState().matchesCount);\n            }\n        });\n        inputBox.onDidHide(() => {\n            this.clearDecorations(editor);\n            inputBox.dispose();\n        });\n        inputBox.show();\n    }\n    clearDecorations(editor) {\n        editor.changeDecorations(changeAccessor => {\n            this._highlightDecorations = changeAccessor.deltaDecorations(this._highlightDecorations, []);\n        });\n    }\n    addDecorations(editor, range) {\n        editor.changeDecorations(changeAccessor => {\n            this._highlightDecorations = changeAccessor.deltaDecorations(this._highlightDecorations, [\n                {\n                    range,\n                    options: {\n                        description: 'find-match-quick-access-range-highlight',\n                        className: 'rangeHighlight',\n                        isWholeLine: true\n                    }\n                },\n                {\n                    range,\n                    options: {\n                        description: 'find-match-quick-access-range-highlight-overview',\n                        overviewRuler: {\n                            color: themeColorFromId(overviewRulerRangeHighlight),\n                            position: OverviewRulerLane.Full\n                        }\n                    }\n                }\n            ]);\n        });\n    }\n}\nexport class SelectionMatchFindAction extends EditorAction {\n    async run(accessor, editor) {\n        const controller = CommonFindController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const selectionSearchString = getSelectionSearchString(editor, 'single', false);\n        if (selectionSearchString) {\n            controller.setSearchString(selectionSearchString);\n        }\n        if (!this._run(controller)) {\n            await controller.start({\n                forceRevealReplace: false,\n                seedSearchStringFromSelection: 'none',\n                seedSearchStringFromNonEmptySelection: false,\n                seedSearchStringFromGlobalClipboard: false,\n                shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                shouldAnimate: true,\n                updateSearchScope: false,\n                loop: editor.getOption(41 /* EditorOption.find */).loop\n            });\n            this._run(controller);\n        }\n    }\n}\nexport class NextSelectionMatchFindAction extends SelectionMatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.NextSelectionMatchFindAction,\n            label: nls.localize('nextSelectionMatchFindAction', \"Find Next Selection\"),\n            alias: 'Find Next Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.focus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 61 /* KeyCode.F3 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _run(controller) {\n        return controller.moveToNextMatch();\n    }\n}\nexport class PreviousSelectionMatchFindAction extends SelectionMatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.PreviousSelectionMatchFindAction,\n            label: nls.localize('previousSelectionMatchFindAction', \"Find Previous Selection\"),\n            alias: 'Find Previous Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.focus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _run(controller) {\n        return controller.moveToPrevMatch();\n    }\n}\nexport const StartFindReplaceAction = registerMultiEditorAction(new MultiEditorAction({\n    id: FIND_IDS.StartFindReplaceAction,\n    label: nls.localize('startReplace', \"Replace\"),\n    alias: 'Replace',\n    precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n    kbOpts: {\n        kbExpr: null,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 38 /* KeyCode.KeyH */,\n        mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 36 /* KeyCode.KeyF */ },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n    },\n    menuOpts: {\n        menuId: MenuId.MenubarEditMenu,\n        group: '3_find',\n        title: nls.localize({ key: 'miReplace', comment: ['&& denotes a mnemonic'] }, \"&&Replace\"),\n        order: 2\n    }\n}));\nStartFindReplaceAction.addImplementation(0, (accessor, editor, args) => {\n    if (!editor.hasModel() || editor.getOption(91 /* EditorOption.readOnly */)) {\n        return false;\n    }\n    const controller = CommonFindController.get(editor);\n    if (!controller) {\n        return false;\n    }\n    const currentSelection = editor.getSelection();\n    const findInputFocused = controller.isFindInputFocused();\n    // we only seed search string from selection when the current selection is single line and not empty,\n    // + the find input is not focused\n    const seedSearchStringFromSelection = !currentSelection.isEmpty()\n        && currentSelection.startLineNumber === currentSelection.endLineNumber\n        && (editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never')\n        && !findInputFocused;\n    /*\n    * if the existing search string in find widget is empty and we don't seed search string from selection, it means the Find Input is still empty, so we should focus the Find Input instead of Replace Input.\n\n    * findInputFocused true -> seedSearchStringFromSelection false, FocusReplaceInput\n    * findInputFocused false, seedSearchStringFromSelection true FocusReplaceInput\n    * findInputFocused false seedSearchStringFromSelection false FocusFindInput\n    */\n    const shouldFocus = (findInputFocused || seedSearchStringFromSelection) ?\n        2 /* FindStartFocusAction.FocusReplaceInput */ : 1 /* FindStartFocusAction.FocusFindInput */;\n    return controller.start({\n        forceRevealReplace: true,\n        seedSearchStringFromSelection: seedSearchStringFromSelection ? 'single' : 'none',\n        seedSearchStringFromNonEmptySelection: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n        seedSearchStringFromGlobalClipboard: editor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection !== 'never',\n        shouldFocus: shouldFocus,\n        shouldAnimate: true,\n        updateSearchScope: false,\n        loop: editor.getOption(41 /* EditorOption.find */).loop\n    });\n});\nregisterEditorContribution(CommonFindController.ID, FindController, 0 /* EditorContributionInstantiation.Eager */); // eager because it uses `saveViewState`/`restoreViewState`\nregisterEditorAction(StartFindWithArgsAction);\nregisterEditorAction(StartFindWithSelectionAction);\nregisterEditorAction(NextMatchFindAction);\nregisterEditorAction(PreviousMatchFindAction);\nregisterEditorAction(MoveToMatchFindAction);\nregisterEditorAction(NextSelectionMatchFindAction);\nregisterEditorAction(PreviousSelectionMatchFindAction);\nconst FindCommand = EditorCommand.bindToContribution(CommonFindController.get);\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.CloseFindWidgetCommand,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.closeFindWidget(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\n        primary: 9 /* KeyCode.Escape */,\n        secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleCaseSensitiveCommand,\n    precondition: undefined,\n    handler: x => x.toggleCaseSensitive(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleCaseSensitiveKeybinding.primary,\n        mac: ToggleCaseSensitiveKeybinding.mac,\n        win: ToggleCaseSensitiveKeybinding.win,\n        linux: ToggleCaseSensitiveKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleWholeWordCommand,\n    precondition: undefined,\n    handler: x => x.toggleWholeWords(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleWholeWordKeybinding.primary,\n        mac: ToggleWholeWordKeybinding.mac,\n        win: ToggleWholeWordKeybinding.win,\n        linux: ToggleWholeWordKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleRegexCommand,\n    precondition: undefined,\n    handler: x => x.toggleRegex(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleRegexKeybinding.primary,\n        mac: ToggleRegexKeybinding.mac,\n        win: ToggleRegexKeybinding.win,\n        linux: ToggleRegexKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleSearchScopeCommand,\n    precondition: undefined,\n    handler: x => x.toggleSearchScope(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleSearchScopeKeybinding.primary,\n        mac: ToggleSearchScopeKeybinding.mac,\n        win: ToggleSearchScopeKeybinding.win,\n        linux: ToggleSearchScopeKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.TogglePreserveCaseCommand,\n    precondition: undefined,\n    handler: x => x.togglePreserveCase(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: TogglePreserveCaseKeybinding.primary,\n        mac: TogglePreserveCaseKeybinding.mac,\n        win: TogglePreserveCaseKeybinding.win,\n        linux: TogglePreserveCaseKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceOneAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replace(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 22 /* KeyCode.Digit1 */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceOneAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replace(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n        primary: 3 /* KeyCode.Enter */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceAllAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replaceAll(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 3 /* KeyCode.Enter */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceAllAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replaceAll(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n        primary: undefined,\n        mac: {\n            primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */,\n        }\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.SelectAllMatchesAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.selectAllMatches(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 512 /* KeyMod.Alt */ | 3 /* KeyCode.Enter */\n    }\n}));\n"],"names":["FindDecorations","constructor","editor","this","_editor","_decorations","_overviewRulerApproximateDecorations","_findScopeDecorationIds","_rangeHighlightDecorationId","_highlightedDecorationId","_startPosition","getPosition","dispose","removeDecorations","_allDecorations","reset","getCount","length","getFindScope","getModel","getDecorationRange","getFindScopes","scopes","map","findScopeDecorationId","filter","element","getStartPosition","setStartPosition","newStartPosition","setCurrentFindMatch","_getDecorationIndex","decorationId","index","indexOf","getDecorationRangeAt","getCurrentMatchesPosition","desiredRange","candidates","getDecorationsInRange","candidate","candidateOpts","options","_FIND_MATCH_DECORATION","_CURRENT_FIND_MATCH_DECORATION","id","nextMatch","newCurrentDecorationId","matchPosition","i","len","range","equalsRange","changeDecorations","changeAccessor","changeDecorationOptions","removeDecoration","rng","startLineNumber","endLineNumber","endColumn","lineBeforeEnd","lineBeforeEndMaxColumn","getLineMaxColumn","Range","startColumn","addDecoration","_RANGE_HIGHLIGHT_DECORATION","set","findMatches","findScopes","accessor","findMatchesOptions","newOverviewRulerApproximateDecorations","_FIND_MATCH_NO_OVERVIEW_DECORATION","lineCount","getLineCount","approxPixelsPerLine","getLayoutInfo","height","mergeLinesDelta","Math","max","ceil","prevStartLineNumber","prevEndLineNumber","push","_FIND_MATCH_ONLY_OVERVIEW_DECORATION","newFindMatchesDecorations","Array","deltaDecorations","forEach","findScope","_FIND_SCOPE_DECORATION","matchBeforePosition","position","r","lineNumber","column","matchAfterPosition","result","concat","ModelDecorationOptions","register","description","stickiness","zIndex","className","showIfCollapsed","overviewRuler","color","themeColorFromId","overviewRulerFindMatchForeground","OverviewRulerLane","Center","minimap","minimapFindMatch","isWholeLine","ReplaceAllCommand","editorSelection","ranges","replaceStrings","_editorSelection","_ranges","_replaceStrings","_trackedEditorSelectionId","getEditOperations","model","builder","ops","text","sort","o1","o2","compareRangesUsingStarts","resultOps","previousOp","plusRange","op","addEditOperation","trackSelection","computeCursorState","helper","getTrackedSelection","StaticValueReplacePattern","staticValue","kind","DynamicPiecesReplacePattern","pieces","ReplacePattern","fromStaticValue","value","ReplacePiece","hasReplacementPatterns","_state","buildReplaceString","matches","preserveCase","buildReplaceStringWithCasePreserved","piece","match","_substitute","matchIndex","caseOps","repl","lenOps","opIdx","idx","slice","toUpperCase","toLowerCase","join","remainder","String","floor","ReplacePieceBuilder","source","_source","_lastCharIndex","_result","_resultLen","_currentStaticPiece","emitUnchanged","toCharIndex","_emitStatic","substring","emitStatic","emitMatchIndex","finalize","CONTEXT_FIND_WIDGET_VISIBLE","RawContextKey","CONTEXT_FIND_INPUT_FOCUSED","toNegated","CONTEXT_REPLACE_INPUT_FOCUSED","ToggleCaseSensitiveKeybinding","primary","mac","ToggleWholeWordKeybinding","ToggleRegexKeybinding","ToggleSearchScopeKeybinding","TogglePreserveCaseKeybinding","FIND_IDS","MATCHES_LIMIT","FindModelBoundToEditorModel","state","_toDispose","DisposableStore","_isDisposed","_startSearchingTimer","TimeoutTimer","add","_updateDecorationsScheduler","RunOnceScheduler","research","onDidChangeCursorPosition","e","reason","_ignoreModelContentChanged","onDidChangeModelContent","isFlush","schedule","onFindReplaceStateChange","_onStateChanged","searchScope","hasModel","searchString","isReplaceRevealed","isRegex","wholeWord","matchCase","isTooLargeForSyncing","cancel","setIfNotSet","moveCursor","_getSearchRange","getFullModelRange","newFindScope","isArray","_findMatches","getSelection","currentMatchesPosition","matchAfterSelection","findFirstIdxMonotonousOrArrLen","changeMatchInfo","undefined","getOption","cursorMoveOnType","_moveToNextMatch","_hasMatches","matchesCount","_cannotFind","revealRangeInCenterIfOutsideViewport","_setCurrentFindMatch","matchesPosition","setSelection","_prevSearchPosition","before","isUsingLineStops","Position","_moveToPrevMatch","isRecursed","arguments","canNavigateBack","nextMatchRange","prevMatchRange","isEmpty","equals","searchRange","getEndPosition","isBefore","prevMatch","findPreviousMatch","containsRange","moveToPrevMatch","_nextSearchPosition","after","canNavigateForward","_getNextMatch","captureMatches","forceMove","findNextMatch","moveToNextMatch","_moveToMatch","decorationRange","moveToMatch","_getReplacePattern","replaceString","chCode","charCodeAt","nextChCode","nextNextChCode","fromCharCode","parseReplaceString","replace","replacePattern","selection","command","ReplaceCommand","_executeEditorCommand","limitResultCount","searchRanges","scope","replaceAll","_largeReplaceAll","_regularReplaceAll","searchData","SearchParams","parseSearchRequest","searchRegex","regex","multiline","mod","ignoreCase","global","RegExp","modelText","getValue","fullModelRange","resultText","ReplaceCommandThatPreservesSelection","m","selectAllMatches","selections","Selection","setSelections","pushUndoStop","executeCommand","FindOptionsWidget","Widget","keybindingService","super","_hideSoon","_register","_hide","_isVisible","_keybindingService","_domNode","document","createElement","style","display","top","setAttribute","toggleStyles","inputActiveOptionBorder","asCssVariable","inputActiveOptionForeground","inputActiveOptionBackground","hoverDelegate","createInstantHoverDelegate","caseSensitive","CaseSensitiveToggle","appendTitle","_keybindingLabelFor","isChecked","appendChild","domNode","onChange","change","checked","wholeWords","WholeWordsToggle","RegexToggle","addOverlayWidget","somethingChanged","isRevealed","_revealTemporarily","dom","MOUSE_LEAVE","_onMouseLeave","_onMouseOver","actionId","kb","lookupKeybinding","getLabel","removeOverlayWidget","getId","ID","getDomNode","preference","highlightFindOptions","_show","effectiveOptionValue","override","FindReplaceState","Disposable","_searchString","_replaceString","_isRevealed","_isReplaceRevealed","_isRegexOverride","_isRegex","_wholeWordOverride","_wholeWord","_matchCaseOverride","_matchCase","_preserveCaseOverride","_preserveCase","actualIsRegex","actualWholeWord","actualMatchCase","actualPreserveCase","_searchScope","_matchesPosition","_matchesCount","currentMatch","_currentMatch","_onFindReplaceStateChange","Emitter","event","_loop","_isSearching","_filters","changeEvent","updateHistory","loop","isSearching","filters","fire","newState","_a","oldEffectiveIsRegex","oldEffectiveWholeWords","oldEffectiveMatchCase","oldEffectivePreserveCase","every","newSearchScope","some","existingSearchScope","update","isRegexOverride","wholeWordOverride","matchCaseOverride","preserveCaseOverride","canNavigateInLoop","findSelectionIcon","registerIcon","Codicon","nls","findCollapsedIcon","chevronRight","findExpandedIcon","chevronDown","findReplaceIcon","findReplaceAllIcon","findPreviousMatchIcon","arrowUp","findNextMatchIcon","arrowDown","NLS_FIND_DIALOG_LABEL","NLS_FIND_INPUT_LABEL","NLS_FIND_INPUT_PLACEHOLDER","NLS_PREVIOUS_MATCH_BTN_LABEL","NLS_NEXT_MATCH_BTN_LABEL","NLS_TOGGLE_SELECTION_FIND_TITLE","NLS_CLOSE_BTN_LABEL","NLS_REPLACE_INPUT_LABEL","NLS_REPLACE_INPUT_PLACEHOLDER","NLS_REPLACE_BTN_LABEL","NLS_REPLACE_ALL_BTN_LABEL","NLS_TOGGLE_REPLACE_MODE_BTN_LABEL","NLS_MATCHES_COUNT_LIMIT_TITLE","NLS_MATCHES_LOCATION","NLS_NO_RESULTS","FIND_WIDGET_INITIAL_WIDTH","MAX_MATCHES_COUNT_WIDTH","ctrlEnterReplaceAllWarningPromptedKey","ctrlKeyMod","platform","FindWidgetViewZone","afterLineNumber","heightInPx","suppressMouseDown","stopPropagationForMultiLineUpwards","textarea","isMultiline","selectionStart","stopPropagation","stopPropagationForMultiLineDownwards","selectionEnd","FindWidget","codeEditor","controller","contextViewProvider","contextKeyService","themeService","storageService","notificationService","_hoverService","_cachedHeight","_revealTimeouts","_codeEditor","_controller","_contextViewProvider","_contextKeyService","_storageService","_notificationService","_ctrlEnterReplaceAllWarningPrompted","getBoolean","_isReplaceVisible","_ignoreChangeEvent","_updateHistoryDelayer","Delayer","toDisposable","_buildDomNode","_updateButtons","_tryUpdateWidgetWidth","_findInput","inputBox","layout","onDidChangeConfiguration","hasChanged","updateAccessibilitySupport","supportLoop","addExtraSpaceOnTop","_viewZone","_showViewZone","_removeViewZone","onDidChangeCursorSelection","_updateToggleSelectionFindButton","onDidFocusEditorWidget","async","globalBufferTerm","getGlobalBufferTerm","select","_findInputFocused","bindTo","_findFocusTracker","inputElement","onDidFocus","_updateSearchScope","onDidBlur","_replaceInputFocused","_replaceFocusTracker","_replaceInput","onDidChangeModel","_viewZoneId","onDidScrollChange","scrollTopChanged","_layoutViewZone","setTimeout","setValue","_reveal","width","_tryUpdateHeight","setRegex","setWholeWords","setCaseSensitive","setPreserveCase","_toggleSelectionFind","showRedOutline","classList","toggle","_updateMatchesCount","_delayedUpdateHistory","trigger","_updateHistory","bind","then","onUnexpectedError","addToHistory","label","minWidth","title","firstChild","removeChild","strings","createTextNode","alertFn","_getAriaLabel","clientWidth","ariaLabel","lineContent","getLineContent","isSelection","enable","disable","setEnabled","_closeBtn","findInputIsNonEmpty","_prevBtn","_nextBtn","_replaceBtn","_replaceAllBtn","_toggleReplaceBtn","setExpanded","canReplace","clearTimeout","autoFindInSelection","isSelectionMultipleLine","validate","layoutOverlayWidget","adjustEditorScrollTop","seedSearchStringFromSelection","editorCoords","startCoords","getScrolledVisiblePosition","startLeft","left","startTop","leftOfFindWidget","endCoords","focusTheEditor","remove","clearMessage","focus","targetScrollTop","viewZone","changeViewZones","_getHeight","addZone","setScrollTop","getScrollTop","adjustScroll","newHeight","scrollAdjustment","layoutZone","removeZone","isConnected","layoutInfo","contentWidth","contains","editorWidth","minimapWidth","collapsedFindWidget","reducedFindWidget","narrowFindWidget","_resized","maxWidth","findInputWidth","totalheight","totalHeight","focusFindInput","focusReplaceInput","getSelections","setEndPosition","_onFindInputMouseDown","middleButton","_onFindInputKeyDown","dispatchEvent","target","insertAtCursor","preventDefault","focusOnCaseSensitive","querySelector","_onReplaceInputKeyDown","info","store","getVerticalSashLeft","_sash","flexibleHeight","flexibleWidth","ContextScopedFindInput","PART_WIDTH","placeholder","appendCaseSensitiveLabel","appendWholeWordsLabel","appendRegexLabel","validation","getRegex","content","message","flexibleMaxHeight","showCommonFindToggles","showHistoryHint","showHistoryKeybindingHint","inputBoxStyles","defaultInputBoxStyles","defaultToggleStyles","onKeyDown","onDidChange","onDidOptionChange","getWholeWords","getCaseSensitive","onCaseSensitiveKeyDown","onRegexKeyDown","focusOnPreserve","onDidHeightChange","onMouseDown","SimpleButton","icon","onTrigger","assertIsDefined","getAction","run","findPart","actionsContainer","Toggle","widgetClose","isEnabled","ContextScopedReplaceInput","appendPreserveCaseLabel","history","getPreserveCase","onPreserveCaseKeyDown","enabled","replaceHoverDelegate","replacePart","replaceActionsContainer","role","_resizeSash","Sash","orientation","size","originalWidth","onDidStart","evt","startX","currentX","parseFloat","onDidReset","currentWidth","setFocusInputOnOptionClick","opts","hoverService","_opts","ThemeIcon","asClassName","tabIndex","setupUpdatableHover","getDefaultHoverDelegate","onclick","onkeydown","_b","call","expanded","asClassNameArray","registerThemingParticipant","theme","collector","findMatchHighlightBorder","getColor","editorFindMatchHighlightBorder","addRule","isHighContrast","type","findRangeHighlightBorder","editorFindRangeHighlightBorder","hcBorder","contrastBorder","CommonFindController_1","__decorate","decorators","key","desc","d","c","Object","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","getSelectionSearchString","seedSearchStringFromNonEmptySelection","wordAtPosition","getConfiguredWordAtPosition","word","getValueLengthInRange","getValueInRange","CommonFindController","get","getContribution","clipboardService","_findWidgetVisible","_clipboardService","loadQueryState","_model","shouldRestartFind","disposeModel","_start","forceRevealReplace","seedSearchStringFromGlobalClipboard","shouldFocus","shouldAnimate","updateSearchScope","saveQueryState","setGlobalBufferTerm","isFindInputFocused","getState","closeFindWidget","toggleCaseSensitive","toggleWholeWords","toggleRegex","togglePreserveCase","toggleSearchScope","setSearchString","stateChanges","selectionSearchString","currentSelections","start","goToMatch","isTooLargeForHeapOperation","warn","globalFindClipboard","readFindText","writeFindText","IContextKeyService","IStorageService","IClipboardService","INotificationService","IHoverService","FindController","_contextViewService","_themeService","_widget","_findOptionsWidget","_createFindWidget","ignoreWhenVisible","IContextViewService","IKeybindingService","IThemeService","registerMultiEditorAction","MultiEditorAction","alias","precondition","ContextKeyExpr","or","EditorContextKeys","has","kbOpts","kbExpr","weight","menuOpts","menuId","MenuId","MenubarEditMenu","group","comment","order","addImplementation","args","findArgDescription","name","schema","properties","matchWholeWord","isCaseSensitive","findInSelection","StartFindWithArgsAction","EditorAction","metadata","StartFindWithSelectionAction","MatchFindAction","_run","MoveToMatchFindAction","_highlightDecorations","notify","severity","Severity","Warning","IQuickInputService","createInputBox","toFindMatchIndex","parseInt","isNaN","matchCount","updatePickerAndEditor","validationMessage","addDecorations","clearDecorations","onDidChangeValue","onDidAccept","hide","onDidHide","show","overviewRulerRangeHighlight","Full","SelectionMatchFindAction","currentSelection","findInputFocused","registerEditorContribution","registerEditorAction","secondary","and","FindCommand","EditorCommand","bindToContribution","registerEditorCommand","handler","x","not","win","linux"],"sourceRoot":""}